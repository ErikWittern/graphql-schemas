{
  "repo_name": "copy-that-back",
  "repo_full_name": "mulholio/copy-that-back",
  "repo_owner": "mulholio",
  "repo_description": "The backend for the app version of https://copythat.io",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "src/generated/prisma.graphql",
      "sha": "1b5b14f894acf82758559f9597d713b6722c04c4",
      "url": "https://api.github.com/repositories/159383853/contents/src/generated/prisma.graphql?ref=fbbd733e0f8d30e4700cc8e3cc672d4f62fa1a77",
      "git_url": "https://api.github.com/repositories/159383853/git/blobs/1b5b14f894acf82758559f9597d713b6722c04c4",
      "html_url": "https://github.com/mulholio/copy-that-back/blob/fbbd733e0f8d30e4700cc8e3cc672d4f62fa1a77/src/generated/prisma.graphql",
      "content": "type AggregateSkill {\n  count: Int!\n}\n\ntype AggregateTag {\n  count: Int!\n}\n\ntype AggregateThat {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nenum Difficulty {\n  EASY\n  MEDIUM\n  HARD\n}\n\nscalar Long\n\ntype Mutation {\n  createSkill(data: SkillCreateInput!): Skill!\n  updateSkill(data: SkillUpdateInput!, where: SkillWhereUniqueInput!): Skill\n  updateManySkills(data: SkillUpdateManyMutationInput!, where: SkillWhereInput): BatchPayload!\n  upsertSkill(where: SkillWhereUniqueInput!, create: SkillCreateInput!, update: SkillUpdateInput!): Skill!\n  deleteSkill(where: SkillWhereUniqueInput!): Skill\n  deleteManySkills(where: SkillWhereInput): BatchPayload!\n  createTag(data: TagCreateInput!): Tag!\n  updateTag(data: TagUpdateInput!, where: TagWhereUniqueInput!): Tag\n  updateManyTags(data: TagUpdateManyMutationInput!, where: TagWhereInput): BatchPayload!\n  upsertTag(where: TagWhereUniqueInput!, create: TagCreateInput!, update: TagUpdateInput!): Tag!\n  deleteTag(where: TagWhereUniqueInput!): Tag\n  deleteManyTags(where: TagWhereInput): BatchPayload!\n  createThat(data: ThatCreateInput!): That!\n  updateThat(data: ThatUpdateInput!, where: ThatWhereUniqueInput!): That\n  updateManyThats(data: ThatUpdateManyMutationInput!, where: ThatWhereInput): BatchPayload!\n  upsertThat(where: ThatWhereUniqueInput!, create: ThatCreateInput!, update: ThatUpdateInput!): That!\n  deleteThat(where: ThatWhereUniqueInput!): That\n  deleteManyThats(where: ThatWhereInput): BatchPayload!\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\nenum Permission {\n  ADMIN\n  USER\n}\n\ntype Query {\n  skill(where: SkillWhereUniqueInput!): Skill\n  skills(where: SkillWhereInput, orderBy: SkillOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Skill]!\n  skillsConnection(where: SkillWhereInput, orderBy: SkillOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SkillConnection!\n  tag(where: TagWhereUniqueInput!): Tag\n  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag]!\n  tagsConnection(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TagConnection!\n  that(where: ThatWhereUniqueInput!): That\n  thats(where: ThatWhereInput, orderBy: ThatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [That]!\n  thatsConnection(where: ThatWhereInput, orderBy: ThatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ThatConnection!\n  user(where: UserWhereUniqueInput!): User\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  node(id: ID!): Node\n}\n\ntype Skill {\n  id: ID!\n  name: String!\n  thats(where: ThatWhereInput, orderBy: ThatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [That!]\n}\n\ntype SkillConnection {\n  pageInfo: PageInfo!\n  edges: [SkillEdge]!\n  aggregate: AggregateSkill!\n}\n\ninput SkillCreateInput {\n  name: String!\n  thats: ThatCreateManyWithoutSkillsInput\n}\n\ninput SkillCreateManyWithoutThatsInput {\n  create: [SkillCreateWithoutThatsInput!]\n  connect: [SkillWhereUniqueInput!]\n}\n\ninput SkillCreateWithoutThatsInput {\n  name: String!\n}\n\ntype SkillEdge {\n  node: Skill!\n  cursor: String!\n}\n\nenum SkillOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype SkillPreviousValues {\n  id: ID!\n  name: String!\n}\n\ninput SkillScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [SkillScalarWhereInput!]\n  OR: [SkillScalarWhereInput!]\n  NOT: [SkillScalarWhereInput!]\n}\n\ntype SkillSubscriptionPayload {\n  mutation: MutationType!\n  node: Skill\n  updatedFields: [String!]\n  previousValues: SkillPreviousValues\n}\n\ninput SkillSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: SkillWhereInput\n  AND: [SkillSubscriptionWhereInput!]\n  OR: [SkillSubscriptionWhereInput!]\n  NOT: [SkillSubscriptionWhereInput!]\n}\n\ninput SkillUpdateInput {\n  name: String\n  thats: ThatUpdateManyWithoutSkillsInput\n}\n\ninput SkillUpdateManyDataInput {\n  name: String\n}\n\ninput SkillUpdateManyMutationInput {\n  name: String\n}\n\ninput SkillUpdateManyWithoutThatsInput {\n  create: [SkillCreateWithoutThatsInput!]\n  delete: [SkillWhereUniqueInput!]\n  connect: [SkillWhereUniqueInput!]\n  disconnect: [SkillWhereUniqueInput!]\n  update: [SkillUpdateWithWhereUniqueWithoutThatsInput!]\n  upsert: [SkillUpsertWithWhereUniqueWithoutThatsInput!]\n  deleteMany: [SkillScalarWhereInput!]\n  updateMany: [SkillUpdateManyWithWhereNestedInput!]\n}\n\ninput SkillUpdateManyWithWhereNestedInput {\n  where: SkillScalarWhereInput!\n  data: SkillUpdateManyDataInput!\n}\n\ninput SkillUpdateWithoutThatsDataInput {\n  name: String\n}\n\ninput SkillUpdateWithWhereUniqueWithoutThatsInput {\n  where: SkillWhereUniqueInput!\n  data: SkillUpdateWithoutThatsDataInput!\n}\n\ninput SkillUpsertWithWhereUniqueWithoutThatsInput {\n  where: SkillWhereUniqueInput!\n  update: SkillUpdateWithoutThatsDataInput!\n  create: SkillCreateWithoutThatsInput!\n}\n\ninput SkillWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  thats_every: ThatWhereInput\n  thats_some: ThatWhereInput\n  thats_none: ThatWhereInput\n  AND: [SkillWhereInput!]\n  OR: [SkillWhereInput!]\n  NOT: [SkillWhereInput!]\n}\n\ninput SkillWhereUniqueInput {\n  id: ID\n  name: String\n}\n\ntype Subscription {\n  skill(where: SkillSubscriptionWhereInput): SkillSubscriptionPayload\n  tag(where: TagSubscriptionWhereInput): TagSubscriptionPayload\n  that(where: ThatSubscriptionWhereInput): ThatSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype Tag {\n  id: ID!\n  name: String!\n  thats(where: ThatWhereInput, orderBy: ThatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [That!]\n}\n\ntype TagConnection {\n  pageInfo: PageInfo!\n  edges: [TagEdge]!\n  aggregate: AggregateTag!\n}\n\ninput TagCreateInput {\n  name: String!\n  thats: ThatCreateManyWithoutTagsInput\n}\n\ninput TagCreateManyWithoutThatsInput {\n  create: [TagCreateWithoutThatsInput!]\n  connect: [TagWhereUniqueInput!]\n}\n\ninput TagCreateWithoutThatsInput {\n  name: String!\n}\n\ntype TagEdge {\n  node: Tag!\n  cursor: String!\n}\n\nenum TagOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype TagPreviousValues {\n  id: ID!\n  name: String!\n}\n\ninput TagScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [TagScalarWhereInput!]\n  OR: [TagScalarWhereInput!]\n  NOT: [TagScalarWhereInput!]\n}\n\ntype TagSubscriptionPayload {\n  mutation: MutationType!\n  node: Tag\n  updatedFields: [String!]\n  previousValues: TagPreviousValues\n}\n\ninput TagSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: TagWhereInput\n  AND: [TagSubscriptionWhereInput!]\n  OR: [TagSubscriptionWhereInput!]\n  NOT: [TagSubscriptionWhereInput!]\n}\n\ninput TagUpdateInput {\n  name: String\n  thats: ThatUpdateManyWithoutTagsInput\n}\n\ninput TagUpdateManyDataInput {\n  name: String\n}\n\ninput TagUpdateManyMutationInput {\n  name: String\n}\n\ninput TagUpdateManyWithoutThatsInput {\n  create: [TagCreateWithoutThatsInput!]\n  delete: [TagWhereUniqueInput!]\n  connect: [TagWhereUniqueInput!]\n  disconnect: [TagWhereUniqueInput!]\n  update: [TagUpdateWithWhereUniqueWithoutThatsInput!]\n  upsert: [TagUpsertWithWhereUniqueWithoutThatsInput!]\n  deleteMany: [TagScalarWhereInput!]\n  updateMany: [TagUpdateManyWithWhereNestedInput!]\n}\n\ninput TagUpdateManyWithWhereNestedInput {\n  where: TagScalarWhereInput!\n  data: TagUpdateManyDataInput!\n}\n\ninput TagUpdateWithoutThatsDataInput {\n  name: String\n}\n\ninput TagUpdateWithWhereUniqueWithoutThatsInput {\n  where: TagWhereUniqueInput!\n  data: TagUpdateWithoutThatsDataInput!\n}\n\ninput TagUpsertWithWhereUniqueWithoutThatsInput {\n  where: TagWhereUniqueInput!\n  update: TagUpdateWithoutThatsDataInput!\n  create: TagCreateWithoutThatsInput!\n}\n\ninput TagWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  thats_every: ThatWhereInput\n  thats_some: ThatWhereInput\n  thats_none: ThatWhereInput\n  AND: [TagWhereInput!]\n  OR: [TagWhereInput!]\n  NOT: [TagWhereInput!]\n}\n\ninput TagWhereUniqueInput {\n  id: ID\n  name: String\n}\n\ntype That {\n  id: ID!\n  title: String!\n  description: String!\n  source: String!\n  image: String!\n  largeImage: String!\n  user: User!\n  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]\n  skills(where: SkillWhereInput, orderBy: SkillOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Skill!]\n  difficulty: Difficulty\n}\n\ntype ThatConnection {\n  pageInfo: PageInfo!\n  edges: [ThatEdge]!\n  aggregate: AggregateThat!\n}\n\ninput ThatCreateInput {\n  title: String!\n  description: String!\n  source: String!\n  image: String!\n  largeImage: String!\n  user: UserCreateOneWithoutThatsInput!\n  tags: TagCreateManyWithoutThatsInput\n  skills: SkillCreateManyWithoutThatsInput\n  difficulty: Difficulty\n}\n\ninput ThatCreateManyWithoutSkillsInput {\n  create: [ThatCreateWithoutSkillsInput!]\n  connect: [ThatWhereUniqueInput!]\n}\n\ninput ThatCreateManyWithoutTagsInput {\n  create: [ThatCreateWithoutTagsInput!]\n  connect: [ThatWhereUniqueInput!]\n}\n\ninput ThatCreateManyWithoutUserInput {\n  create: [ThatCreateWithoutUserInput!]\n  connect: [ThatWhereUniqueInput!]\n}\n\ninput ThatCreateWithoutSkillsInput {\n  title: String!\n  description: String!\n  source: String!\n  image: String!\n  largeImage: String!\n  user: UserCreateOneWithoutThatsInput!\n  tags: TagCreateManyWithoutThatsInput\n  difficulty: Difficulty\n}\n\ninput ThatCreateWithoutTagsInput {\n  title: String!\n  description: String!\n  source: String!\n  image: String!\n  largeImage: String!\n  user: UserCreateOneWithoutThatsInput!\n  skills: SkillCreateManyWithoutThatsInput\n  difficulty: Difficulty\n}\n\ninput ThatCreateWithoutUserInput {\n  title: String!\n  description: String!\n  source: String!\n  image: String!\n  largeImage: String!\n  tags: TagCreateManyWithoutThatsInput\n  skills: SkillCreateManyWithoutThatsInput\n  difficulty: Difficulty\n}\n\ntype ThatEdge {\n  node: That!\n  cursor: String!\n}\n\nenum ThatOrderByInput {\n  id_ASC\n  id_DESC\n  title_ASC\n  title_DESC\n  description_ASC\n  description_DESC\n  source_ASC\n  source_DESC\n  image_ASC\n  image_DESC\n  largeImage_ASC\n  largeImage_DESC\n  difficulty_ASC\n  difficulty_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype ThatPreviousValues {\n  id: ID!\n  title: String!\n  description: String!\n  source: String!\n  image: String!\n  largeImage: String!\n  difficulty: Difficulty\n}\n\ninput ThatScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  title: String\n  title_not: String\n  title_in: [String!]\n  title_not_in: [String!]\n  title_lt: String\n  title_lte: String\n  title_gt: String\n  title_gte: String\n  title_contains: String\n  title_not_contains: String\n  title_starts_with: String\n  title_not_starts_with: String\n  title_ends_with: String\n  title_not_ends_with: String\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  source: String\n  source_not: String\n  source_in: [String!]\n  source_not_in: [String!]\n  source_lt: String\n  source_lte: String\n  source_gt: String\n  source_gte: String\n  source_contains: String\n  source_not_contains: String\n  source_starts_with: String\n  source_not_starts_with: String\n  source_ends_with: String\n  source_not_ends_with: String\n  image: String\n  image_not: String\n  image_in: [String!]\n  image_not_in: [String!]\n  image_lt: String\n  image_lte: String\n  image_gt: String\n  image_gte: String\n  image_contains: String\n  image_not_contains: String\n  image_starts_with: String\n  image_not_starts_with: String\n  image_ends_with: String\n  image_not_ends_with: String\n  largeImage: String\n  largeImage_not: String\n  largeImage_in: [String!]\n  largeImage_not_in: [String!]\n  largeImage_lt: String\n  largeImage_lte: String\n  largeImage_gt: String\n  largeImage_gte: String\n  largeImage_contains: String\n  largeImage_not_contains: String\n  largeImage_starts_with: String\n  largeImage_not_starts_with: String\n  largeImage_ends_with: String\n  largeImage_not_ends_with: String\n  difficulty: Difficulty\n  difficulty_not: Difficulty\n  difficulty_in: [Difficulty!]\n  difficulty_not_in: [Difficulty!]\n  AND: [ThatScalarWhereInput!]\n  OR: [ThatScalarWhereInput!]\n  NOT: [ThatScalarWhereInput!]\n}\n\ntype ThatSubscriptionPayload {\n  mutation: MutationType!\n  node: That\n  updatedFields: [String!]\n  previousValues: ThatPreviousValues\n}\n\ninput ThatSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: ThatWhereInput\n  AND: [ThatSubscriptionWhereInput!]\n  OR: [ThatSubscriptionWhereInput!]\n  NOT: [ThatSubscriptionWhereInput!]\n}\n\ninput ThatUpdateInput {\n  title: String\n  description: String\n  source: String\n  image: String\n  largeImage: String\n  user: UserUpdateOneRequiredWithoutThatsInput\n  tags: TagUpdateManyWithoutThatsInput\n  skills: SkillUpdateManyWithoutThatsInput\n  difficulty: Difficulty\n}\n\ninput ThatUpdateManyDataInput {\n  title: String\n  description: String\n  source: String\n  image: String\n  largeImage: String\n  difficulty: Difficulty\n}\n\ninput ThatUpdateManyMutationInput {\n  title: String\n  description: String\n  source: String\n  image: String\n  largeImage: String\n  difficulty: Difficulty\n}\n\ninput ThatUpdateManyWithoutSkillsInput {\n  create: [ThatCreateWithoutSkillsInput!]\n  delete: [ThatWhereUniqueInput!]\n  connect: [ThatWhereUniqueInput!]\n  disconnect: [ThatWhereUniqueInput!]\n  update: [ThatUpdateWithWhereUniqueWithoutSkillsInput!]\n  upsert: [ThatUpsertWithWhereUniqueWithoutSkillsInput!]\n  deleteMany: [ThatScalarWhereInput!]\n  updateMany: [ThatUpdateManyWithWhereNestedInput!]\n}\n\ninput ThatUpdateManyWithoutTagsInput {\n  create: [ThatCreateWithoutTagsInput!]\n  delete: [ThatWhereUniqueInput!]\n  connect: [ThatWhereUniqueInput!]\n  disconnect: [ThatWhereUniqueInput!]\n  update: [ThatUpdateWithWhereUniqueWithoutTagsInput!]\n  upsert: [ThatUpsertWithWhereUniqueWithoutTagsInput!]\n  deleteMany: [ThatScalarWhereInput!]\n  updateMany: [ThatUpdateManyWithWhereNestedInput!]\n}\n\ninput ThatUpdateManyWithoutUserInput {\n  create: [ThatCreateWithoutUserInput!]\n  delete: [ThatWhereUniqueInput!]\n  connect: [ThatWhereUniqueInput!]\n  disconnect: [ThatWhereUniqueInput!]\n  update: [ThatUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [ThatUpsertWithWhereUniqueWithoutUserInput!]\n  deleteMany: [ThatScalarWhereInput!]\n  updateMany: [ThatUpdateManyWithWhereNestedInput!]\n}\n\ninput ThatUpdateManyWithWhereNestedInput {\n  where: ThatScalarWhereInput!\n  data: ThatUpdateManyDataInput!\n}\n\ninput ThatUpdateWithoutSkillsDataInput {\n  title: String\n  description: String\n  source: String\n  image: String\n  largeImage: String\n  user: UserUpdateOneRequiredWithoutThatsInput\n  tags: TagUpdateManyWithoutThatsInput\n  difficulty: Difficulty\n}\n\ninput ThatUpdateWithoutTagsDataInput {\n  title: String\n  description: String\n  source: String\n  image: String\n  largeImage: String\n  user: UserUpdateOneRequiredWithoutThatsInput\n  skills: SkillUpdateManyWithoutThatsInput\n  difficulty: Difficulty\n}\n\ninput ThatUpdateWithoutUserDataInput {\n  title: String\n  description: String\n  source: String\n  image: String\n  largeImage: String\n  tags: TagUpdateManyWithoutThatsInput\n  skills: SkillUpdateManyWithoutThatsInput\n  difficulty: Difficulty\n}\n\ninput ThatUpdateWithWhereUniqueWithoutSkillsInput {\n  where: ThatWhereUniqueInput!\n  data: ThatUpdateWithoutSkillsDataInput!\n}\n\ninput ThatUpdateWithWhereUniqueWithoutTagsInput {\n  where: ThatWhereUniqueInput!\n  data: ThatUpdateWithoutTagsDataInput!\n}\n\ninput ThatUpdateWithWhereUniqueWithoutUserInput {\n  where: ThatWhereUniqueInput!\n  data: ThatUpdateWithoutUserDataInput!\n}\n\ninput ThatUpsertWithWhereUniqueWithoutSkillsInput {\n  where: ThatWhereUniqueInput!\n  update: ThatUpdateWithoutSkillsDataInput!\n  create: ThatCreateWithoutSkillsInput!\n}\n\ninput ThatUpsertWithWhereUniqueWithoutTagsInput {\n  where: ThatWhereUniqueInput!\n  update: ThatUpdateWithoutTagsDataInput!\n  create: ThatCreateWithoutTagsInput!\n}\n\ninput ThatUpsertWithWhereUniqueWithoutUserInput {\n  where: ThatWhereUniqueInput!\n  update: ThatUpdateWithoutUserDataInput!\n  create: ThatCreateWithoutUserInput!\n}\n\ninput ThatWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  title: String\n  title_not: String\n  title_in: [String!]\n  title_not_in: [String!]\n  title_lt: String\n  title_lte: String\n  title_gt: String\n  title_gte: String\n  title_contains: String\n  title_not_contains: String\n  title_starts_with: String\n  title_not_starts_with: String\n  title_ends_with: String\n  title_not_ends_with: String\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  source: String\n  source_not: String\n  source_in: [String!]\n  source_not_in: [String!]\n  source_lt: String\n  source_lte: String\n  source_gt: String\n  source_gte: String\n  source_contains: String\n  source_not_contains: String\n  source_starts_with: String\n  source_not_starts_with: String\n  source_ends_with: String\n  source_not_ends_with: String\n  image: String\n  image_not: String\n  image_in: [String!]\n  image_not_in: [String!]\n  image_lt: String\n  image_lte: String\n  image_gt: String\n  image_gte: String\n  image_contains: String\n  image_not_contains: String\n  image_starts_with: String\n  image_not_starts_with: String\n  image_ends_with: String\n  image_not_ends_with: String\n  largeImage: String\n  largeImage_not: String\n  largeImage_in: [String!]\n  largeImage_not_in: [String!]\n  largeImage_lt: String\n  largeImage_lte: String\n  largeImage_gt: String\n  largeImage_gte: String\n  largeImage_contains: String\n  largeImage_not_contains: String\n  largeImage_starts_with: String\n  largeImage_not_starts_with: String\n  largeImage_ends_with: String\n  largeImage_not_ends_with: String\n  user: UserWhereInput\n  tags_every: TagWhereInput\n  tags_some: TagWhereInput\n  tags_none: TagWhereInput\n  skills_every: SkillWhereInput\n  skills_some: SkillWhereInput\n  skills_none: SkillWhereInput\n  difficulty: Difficulty\n  difficulty_not: Difficulty\n  difficulty_in: [Difficulty!]\n  difficulty_not_in: [Difficulty!]\n  AND: [ThatWhereInput!]\n  OR: [ThatWhereInput!]\n  NOT: [ThatWhereInput!]\n}\n\ninput ThatWhereUniqueInput {\n  id: ID\n}\n\ntype User {\n  id: ID!\n  username: String!\n  email: String!\n  password: String!\n  thats(where: ThatWhereInput, orderBy: ThatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [That!]\n  permissions: [Permission!]!\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  username: String!\n  email: String!\n  password: String!\n  thats: ThatCreateManyWithoutUserInput\n  permissions: UserCreatepermissionsInput\n}\n\ninput UserCreateOneWithoutThatsInput {\n  create: UserCreateWithoutThatsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreatepermissionsInput {\n  set: [Permission!]\n}\n\ninput UserCreateWithoutThatsInput {\n  username: String!\n  email: String!\n  password: String!\n  permissions: UserCreatepermissionsInput\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  username_ASC\n  username_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  username: String!\n  email: String!\n  password: String!\n  permissions: [Permission!]!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n}\n\ninput UserUpdateInput {\n  username: String\n  email: String\n  password: String\n  thats: ThatUpdateManyWithoutUserInput\n  permissions: UserUpdatepermissionsInput\n}\n\ninput UserUpdateManyMutationInput {\n  username: String\n  email: String\n  password: String\n  permissions: UserUpdatepermissionsInput\n}\n\ninput UserUpdateOneRequiredWithoutThatsInput {\n  create: UserCreateWithoutThatsInput\n  update: UserUpdateWithoutThatsDataInput\n  upsert: UserUpsertWithoutThatsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdatepermissionsInput {\n  set: [Permission!]\n}\n\ninput UserUpdateWithoutThatsDataInput {\n  username: String\n  email: String\n  password: String\n  permissions: UserUpdatepermissionsInput\n}\n\ninput UserUpsertWithoutThatsInput {\n  update: UserUpdateWithoutThatsDataInput!\n  create: UserCreateWithoutThatsInput!\n}\n\ninput UserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  username: String\n  username_not: String\n  username_in: [String!]\n  username_not_in: [String!]\n  username_lt: String\n  username_lte: String\n  username_gt: String\n  username_gte: String\n  username_contains: String\n  username_not_contains: String\n  username_starts_with: String\n  username_not_starts_with: String\n  username_ends_with: String\n  username_not_ends_with: String\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n  thats_every: ThatWhereInput\n  thats_some: ThatWhereInput\n  thats_none: ThatWhereInput\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  username: String\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 29,
      "containsCycle": true,
      "numDefinitions": 108
    }
  ],
  "metrics": {
    "created_at": "2018-11-27T18:52:48Z",
    "updated_at": "2019-04-21T09:00:11Z",
    "pushed_at": "2019-01-24T14:00:51Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 3,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 3,
    "releases": 0,
    "stargazers": 2
  }
}