{
  "repo_name": "scrumee_react",
  "repo_full_name": "scurron/scrumee_react",
  "repo_owner": "scurron",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "server/src/generated/prisma.graphql",
      "sha": "c0bc31e2749c448eade4b586d896fa7a7706df52",
      "url": "https://api.github.com/repositories/118153242/contents/server/src/generated/prisma.graphql?ref=c3add5a022386b5f56c60807447bc45830ea5995",
      "git_url": "https://api.github.com/repositories/118153242/git/blobs/c0bc31e2749c448eade4b586d896fa7a7706df52",
      "html_url": "https://github.com/scurron/scrumee_react/blob/c3add5a022386b5f56c60807447bc45830ea5995/server/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Attendees implements Node {\n  id: ID!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n}\n\ntype Post implements Node {\n  id: ID!\n  isPublished: Boolean!\n  title: String!\n  text: String!\n}\n\ntype Retrospective implements Node {\n  id: ID!\n  title: String!\n  sprint(where: SprintWhereInput): Sprint!\n  isEnabled: Boolean!\n}\n\ntype Sprint implements Node {\n  id: ID!\n  title: String!\n  startsAt: DateTime!\n  endsAt: DateTime!\n  isEnabled: Boolean!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateAttendees {\n  count: Int!\n}\n\ntype AggregatePost {\n  count: Int!\n}\n\ntype AggregateRetrospective {\n  count: Int!\n}\n\ntype AggregateSprint {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype AttendeesConnection {\n  pageInfo: PageInfo!\n  edges: [AttendeesEdge]!\n  aggregate: AggregateAttendees!\n}\n\ninput AttendeesCreateInput {\n  users: UserCreateManyInput\n}\n\ntype AttendeesEdge {\n  node: Attendees!\n  cursor: String!\n}\n\nenum AttendeesOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AttendeesPreviousValues {\n  id: ID!\n}\n\ntype AttendeesSubscriptionPayload {\n  mutation: MutationType!\n  node: Attendees\n  updatedFields: [String!]\n  previousValues: AttendeesPreviousValues\n}\n\ninput AttendeesSubscriptionWhereInput {\n  AND: [AttendeesSubscriptionWhereInput!]\n  OR: [AttendeesSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: AttendeesWhereInput\n}\n\ninput AttendeesUpdateInput {\n  users: UserUpdateManyInput\n}\n\ninput AttendeesWhereInput {\n  AND: [AttendeesWhereInput!]\n  OR: [AttendeesWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  users_every: UserWhereInput\n  users_some: UserWhereInput\n  users_none: UserWhereInput\n}\n\ninput AttendeesWhereUniqueInput {\n  id: ID\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar DateTime\n\nscalar Long\n\ntype Mutation {\n  createSprint(data: SprintCreateInput!): Sprint!\n  createRetrospective(data: RetrospectiveCreateInput!): Retrospective!\n  createAttendees(data: AttendeesCreateInput!): Attendees!\n  createUser(data: UserCreateInput!): User!\n  createPost(data: PostCreateInput!): Post!\n  updateSprint(data: SprintUpdateInput!, where: SprintWhereUniqueInput!): Sprint\n  updateRetrospective(data: RetrospectiveUpdateInput!, where: RetrospectiveWhereUniqueInput!): Retrospective\n  updateAttendees(data: AttendeesUpdateInput!, where: AttendeesWhereUniqueInput!): Attendees\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  deleteSprint(where: SprintWhereUniqueInput!): Sprint\n  deleteRetrospective(where: RetrospectiveWhereUniqueInput!): Retrospective\n  deleteAttendees(where: AttendeesWhereUniqueInput!): Attendees\n  deletePost(where: PostWhereUniqueInput!): Post\n  upsertSprint(where: SprintWhereUniqueInput!, create: SprintCreateInput!, update: SprintUpdateInput!): Sprint!\n  upsertRetrospective(where: RetrospectiveWhereUniqueInput!, create: RetrospectiveCreateInput!, update: RetrospectiveUpdateInput!): Retrospective!\n  upsertAttendees(where: AttendeesWhereUniqueInput!, create: AttendeesCreateInput!, update: AttendeesUpdateInput!): Attendees!\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  updateManySprints(data: SprintUpdateInput!, where: SprintWhereInput!): BatchPayload!\n  updateManyRetrospectives(data: RetrospectiveUpdateInput!, where: RetrospectiveWhereInput!): BatchPayload!\n  updateManyAttendeeses(data: AttendeesUpdateInput!, where: AttendeesWhereInput!): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!\n  updateManyPosts(data: PostUpdateInput!, where: PostWhereInput!): BatchPayload!\n  deleteManySprints(where: SprintWhereInput!): BatchPayload!\n  deleteManyRetrospectives(where: RetrospectiveWhereInput!): BatchPayload!\n  deleteManyAttendeeses(where: AttendeesWhereInput!): BatchPayload!\n  deleteManyUsers(where: UserWhereInput!): BatchPayload!\n  deleteManyPosts(where: PostWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype PostConnection {\n  pageInfo: PageInfo!\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  isPublished: Boolean!\n  title: String!\n  text: String!\n}\n\ntype PostEdge {\n  node: Post!\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  isPublished_ASC\n  isPublished_DESC\n  title_ASC\n  title_DESC\n  text_ASC\n  text_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  isPublished: Boolean!\n  title: String!\n  text: String!\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  AND: [PostSubscriptionWhereInput!]\n  OR: [PostSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n}\n\ninput PostUpdateInput {\n  isPublished: Boolean\n  title: String\n  text: String\n}\n\ninput PostWhereInput {\n  AND: [PostWhereInput!]\n  OR: [PostWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  isPublished: Boolean\n  isPublished_not: Boolean\n  title: String\n  title_not: String\n  title_in: [String!]\n  title_not_in: [String!]\n  title_lt: String\n  title_lte: String\n  title_gt: String\n  title_gte: String\n  title_contains: String\n  title_not_contains: String\n  title_starts_with: String\n  title_not_starts_with: String\n  title_ends_with: String\n  title_not_ends_with: String\n  text: String\n  text_not: String\n  text_in: [String!]\n  text_not_in: [String!]\n  text_lt: String\n  text_lte: String\n  text_gt: String\n  text_gte: String\n  text_contains: String\n  text_not_contains: String\n  text_starts_with: String\n  text_not_starts_with: String\n  text_ends_with: String\n  text_not_ends_with: String\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  sprints(where: SprintWhereInput, orderBy: SprintOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Sprint]!\n  retrospectives(where: RetrospectiveWhereInput, orderBy: RetrospectiveOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Retrospective]!\n  attendeeses(where: AttendeesWhereInput, orderBy: AttendeesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Attendees]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  sprint(where: SprintWhereUniqueInput!): Sprint\n  retrospective(where: RetrospectiveWhereUniqueInput!): Retrospective\n  attendees(where: AttendeesWhereUniqueInput!): Attendees\n  post(where: PostWhereUniqueInput!): Post\n  sprintsConnection(where: SprintWhereInput, orderBy: SprintOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SprintConnection!\n  retrospectivesConnection(where: RetrospectiveWhereInput, orderBy: RetrospectiveOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RetrospectiveConnection!\n  attendeesesConnection(where: AttendeesWhereInput, orderBy: AttendeesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AttendeesConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n  node(id: ID!): Node\n}\n\ntype RetrospectiveConnection {\n  pageInfo: PageInfo!\n  edges: [RetrospectiveEdge]!\n  aggregate: AggregateRetrospective!\n}\n\ninput RetrospectiveCreateInput {\n  title: String!\n  isEnabled: Boolean\n  sprint: SprintCreateOneInput!\n}\n\ntype RetrospectiveEdge {\n  node: Retrospective!\n  cursor: String!\n}\n\nenum RetrospectiveOrderByInput {\n  id_ASC\n  id_DESC\n  title_ASC\n  title_DESC\n  isEnabled_ASC\n  isEnabled_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype RetrospectivePreviousValues {\n  id: ID!\n  title: String!\n  isEnabled: Boolean!\n}\n\ntype RetrospectiveSubscriptionPayload {\n  mutation: MutationType!\n  node: Retrospective\n  updatedFields: [String!]\n  previousValues: RetrospectivePreviousValues\n}\n\ninput RetrospectiveSubscriptionWhereInput {\n  AND: [RetrospectiveSubscriptionWhereInput!]\n  OR: [RetrospectiveSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: RetrospectiveWhereInput\n}\n\ninput RetrospectiveUpdateInput {\n  title: String\n  isEnabled: Boolean\n  sprint: SprintUpdateOneInput\n}\n\ninput RetrospectiveWhereInput {\n  AND: [RetrospectiveWhereInput!]\n  OR: [RetrospectiveWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  title: String\n  title_not: String\n  title_in: [String!]\n  title_not_in: [String!]\n  title_lt: String\n  title_lte: String\n  title_gt: String\n  title_gte: String\n  title_contains: String\n  title_not_contains: String\n  title_starts_with: String\n  title_not_starts_with: String\n  title_ends_with: String\n  title_not_ends_with: String\n  isEnabled: Boolean\n  isEnabled_not: Boolean\n  sprint: SprintWhereInput\n}\n\ninput RetrospectiveWhereUniqueInput {\n  id: ID\n}\n\ntype SprintConnection {\n  pageInfo: PageInfo!\n  edges: [SprintEdge]!\n  aggregate: AggregateSprint!\n}\n\ninput SprintCreateInput {\n  title: String!\n  startsAt: DateTime!\n  endsAt: DateTime!\n  isEnabled: Boolean\n}\n\ninput SprintCreateOneInput {\n  create: SprintCreateInput\n  connect: SprintWhereUniqueInput\n}\n\ntype SprintEdge {\n  node: Sprint!\n  cursor: String!\n}\n\nenum SprintOrderByInput {\n  id_ASC\n  id_DESC\n  title_ASC\n  title_DESC\n  startsAt_ASC\n  startsAt_DESC\n  endsAt_ASC\n  endsAt_DESC\n  isEnabled_ASC\n  isEnabled_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype SprintPreviousValues {\n  id: ID!\n  title: String!\n  startsAt: DateTime!\n  endsAt: DateTime!\n  isEnabled: Boolean!\n}\n\ntype SprintSubscriptionPayload {\n  mutation: MutationType!\n  node: Sprint\n  updatedFields: [String!]\n  previousValues: SprintPreviousValues\n}\n\ninput SprintSubscriptionWhereInput {\n  AND: [SprintSubscriptionWhereInput!]\n  OR: [SprintSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: SprintWhereInput\n}\n\ninput SprintUpdateInput {\n  title: String\n  startsAt: DateTime\n  endsAt: DateTime\n  isEnabled: Boolean\n}\n\ninput SprintUpdateOneInput {\n  create: SprintCreateInput\n  connect: SprintWhereUniqueInput\n  disconnect: SprintWhereUniqueInput\n  delete: SprintWhereUniqueInput\n}\n\ninput SprintWhereInput {\n  AND: [SprintWhereInput!]\n  OR: [SprintWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  title: String\n  title_not: String\n  title_in: [String!]\n  title_not_in: [String!]\n  title_lt: String\n  title_lte: String\n  title_gt: String\n  title_gte: String\n  title_contains: String\n  title_not_contains: String\n  title_starts_with: String\n  title_not_starts_with: String\n  title_ends_with: String\n  title_not_ends_with: String\n  startsAt: DateTime\n  startsAt_not: DateTime\n  startsAt_in: [DateTime!]\n  startsAt_not_in: [DateTime!]\n  startsAt_lt: DateTime\n  startsAt_lte: DateTime\n  startsAt_gt: DateTime\n  startsAt_gte: DateTime\n  endsAt: DateTime\n  endsAt_not: DateTime\n  endsAt_in: [DateTime!]\n  endsAt_not_in: [DateTime!]\n  endsAt_lt: DateTime\n  endsAt_lte: DateTime\n  endsAt_gt: DateTime\n  endsAt_gte: DateTime\n  isEnabled: Boolean\n  isEnabled_not: Boolean\n}\n\ninput SprintWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  sprint(where: SprintSubscriptionWhereInput): SprintSubscriptionPayload\n  retrospective(where: RetrospectiveSubscriptionWhereInput): RetrospectiveSubscriptionPayload\n  attendees(where: AttendeesSubscriptionWhereInput): AttendeesSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n}\n\ntype User {\n  avatar: String\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  avatar: String\n}\n\ninput UserCreateManyInput {\n  create: [UserCreateInput!]\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  avatar_ASC\n  avatar_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  avatar: String\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  avatar: String\n}\n\ninput UserUpdateManyInput {\n  create: [UserCreateInput!]\n}\n\ninput UserWhereInput {\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  avatar: String\n  avatar_not: String\n  avatar_in: [String!]\n  avatar_not_in: [String!]\n  avatar_lt: String\n  avatar_lte: String\n  avatar_gt: String\n  avatar_gte: String\n  avatar_contains: String\n  avatar_not_contains: String\n  avatar_starts_with: String\n  avatar_not_starts_with: String\n  avatar_ends_with: String\n  avatar_not_ends_with: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 35,
      "containsCycle": false,
      "polynomialLevel": 2,
      "numDefinitions": 72
    }
  ],
  "metrics": {
    "created_at": "2018-01-19T17:00:38Z",
    "updated_at": "2018-01-19T17:01:21Z",
    "pushed_at": "2018-01-19T17:08:09Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}