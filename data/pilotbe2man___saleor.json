{
  "repo_name": "saleor",
  "repo_full_name": "pilotbe2man/saleor",
  "repo_owner": "pilotbe2man",
  "repo_description": "An e-commerce storefront for Python and Django http://getsaleor.com",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "saleor/graphql/schema.graphql",
      "sha": "a8b08a2e17ca64d7db652227f8b3eb6370c5e982",
      "url": "https://api.github.com/repositories/150977187/contents/saleor/graphql/schema.graphql?ref=c14de2dbe00b4df90c6385feb75d0a4c862e2b0d",
      "git_url": "https://api.github.com/repositories/150977187/git/blobs/a8b08a2e17ca64d7db652227f8b3eb6370c5e982",
      "html_url": "https://github.com/pilotbe2man/saleor/blob/c14de2dbe00b4df90c6385feb75d0a4c862e2b0d/saleor/graphql/schema.graphql",
      "content": "schema {\n  query: Query\n  mutation: Mutations\n}\n\ntype Address implements Node {\n  id: ID!\n  firstName: String!\n  lastName: String!\n  companyName: String!\n  streetAddress1: String!\n  streetAddress2: String!\n  city: String!\n  cityArea: String!\n  postalCode: String!\n  country: CountryDisplay!\n  countryArea: String!\n  phone: String\n}\n\ntype AddressCountableConnection {\n  pageInfo: PageInfo!\n  edges: [AddressCountableEdge!]!\n  totalCount: Int\n}\n\ntype AddressCountableEdge {\n  node: Address!\n  cursor: String!\n}\n\ntype AddressCreate {\n  errors: [Error]\n  address: Address\n}\n\ninput AddressCreateInput {\n  firstName: String\n  lastName: String\n  companyName: String\n  streetAddress1: String\n  streetAddress2: String\n  city: String\n  cityArea: String\n  postalCode: String\n  country: String\n  countryArea: String\n  phone: String\n  userId: ID!\n}\n\ntype AddressDelete {\n  errors: [Error]\n  address: Address\n}\n\ninput AddressInput {\n  firstName: String\n  lastName: String\n  companyName: String\n  streetAddress1: String\n  streetAddress2: String\n  city: String\n  cityArea: String\n  postalCode: String\n  country: String\n  countryArea: String\n  phone: String\n}\n\ntype AddressUpdate {\n  errors: [Error]\n  address: Address\n}\n\ntype AddressValidationData {\n  countryCode: String\n  countryName: String\n  addressFormat: String\n  addressLatinFormat: String\n  allowedFields: [String]\n  requiredFields: [String]\n  upperFields: [String]\n  countryAreaType: String\n  countryAreaChoices: [ChoiceValue]\n  cityType: String\n  cityAreaChoices: [ChoiceValue]\n  postalCodeType: String\n  postalCodeMatchers: [String]\n  postalCodeExamples: [String]\n  postalCodePrefix: String\n}\n\ninput AddressValidationInput {\n  countryCode: String\n  countryArea: String\n  cityArea: String\n}\n\ntype AssignNavigation {\n  errors: [Error]\n  menu: Menu\n}\n\ntype Attribute implements Node {\n  id: ID!\n  slug: String\n  name: String\n  values: [AttributeValue]\n}\n\ntype AttributeCountableConnection {\n  pageInfo: PageInfo!\n  edges: [AttributeCountableEdge!]!\n  totalCount: Int\n}\n\ntype AttributeCountableEdge {\n  node: Attribute!\n  cursor: String!\n}\n\ntype AttributeCreate {\n  errors: [Error]\n  attribute: Attribute\n}\n\ninput AttributeCreateInput {\n  slug: String!\n  name: String!\n  values: [AttributeValueCreateInput]\n}\n\ntype AttributeDelete {\n  errors: [Error]\n  attribute: Attribute\n}\n\ninput AttributeInput {\n  slug: String!\n  name: String!\n}\n\nscalar AttributeScalar\n\ntype AttributeUpdate {\n  errors: [Error]\n  attribute: Attribute\n}\n\ntype AttributeValue implements Node {\n  id: ID!\n  sortOrder: Int!\n  name: String\n  value: String!\n  slug: String\n  type: AttributeValueType\n}\n\ntype AttributeValueCreate {\n  errors: [Error]\n  attributeValue: AttributeValue\n}\n\ninput AttributeValueCreateInput {\n  attribute: ID\n  slug: String!\n  name: String!\n  value: String!\n}\n\ntype AttributeValueDelete {\n  errors: [Error]\n  attributeValue: AttributeValue\n}\n\ninput AttributeValueInput {\n  slug: String!\n  value: String!\n}\n\nenum AttributeValueType {\n  COLOR\n  GRADIENT\n  URL\n  STRING\n}\n\ntype AttributeValueUpdate {\n  errors: [Error]\n  attributeValue: AttributeValue\n}\n\ntype AuthorizationKey {\n  name: String!\n  key: String!\n}\n\ntype Category implements Node {\n  seoTitle: String\n  seoDescription: String\n  id: ID!\n  name: String!\n  slug: String!\n  description: String!\n  parent: Category\n  backgroundImage: Image\n  level: Int!\n  children(before: String, after: String, first: Int, last: Int, id: ID, name: String): CategoryCountableConnection\n  products(before: String, after: String, first: Int, last: Int, category: ID, price: Float, price_Range: Float, price_Lte: Float, price_Gte: Float, attributes: [AttributeScalar], name: String, name_Icontains: String, productType_Name: String, isPublished: Boolean, sortBy: String): ProductCountableConnection\n  url: String\n  ancestors(before: String, after: String, first: Int, last: Int, id: ID, name: String): CategoryCountableConnection\n}\n\ntype CategoryCountableConnection {\n  pageInfo: PageInfo!\n  edges: [CategoryCountableEdge!]!\n  totalCount: Int\n}\n\ntype CategoryCountableEdge {\n  node: Category!\n  cursor: String!\n}\n\ntype CategoryCreate {\n  errors: [Error]\n  category: Category\n}\n\ntype CategoryDelete {\n  errors: [Error]\n  category: Category\n}\n\ninput CategoryInput {\n  description: String\n  name: String\n  parent: ID\n  slug: String\n  seo: SeoInput\n}\n\ntype CategoryUpdate {\n  errors: [Error]\n  category: Category\n}\n\ntype ChoiceValue {\n  raw: String\n  verbose: String\n}\n\ntype Collection implements Node {\n  seoTitle: String\n  seoDescription: String\n  id: ID!\n  name: String!\n  slug: String!\n  products(before: String, after: String, first: Int, last: Int, category: ID, price: Float, price_Range: Float, price_Lte: Float, price_Gte: Float, attributes: [AttributeScalar], name: String, name_Icontains: String, productType_Name: String, isPublished: Boolean, sortBy: String): ProductCountableConnection\n  backgroundImage: Image\n  isPublished: Boolean!\n}\n\ntype CollectionAddProducts {\n  errors: [Error]\n  collection: Collection\n}\n\ntype CollectionCountableConnection {\n  pageInfo: PageInfo!\n  edges: [CollectionCountableEdge!]!\n  totalCount: Int\n}\n\ntype CollectionCountableEdge {\n  node: Collection!\n  cursor: String!\n}\n\ntype CollectionCreate {\n  errors: [Error]\n  collection: Collection\n}\n\ntype CollectionDelete {\n  errors: [Error]\n  collection: Collection\n}\n\ninput CollectionInput {\n  isPublished: Boolean\n  name: String\n  slug: String\n  products: [ID]\n  backgroundImage: Upload\n  seo: SeoInput\n}\n\ntype CollectionRemoveProducts {\n  errors: [Error]\n  collection: Collection\n}\n\ntype CollectionUpdate {\n  errors: [Error]\n  collection: Collection\n}\n\ntype CountryDisplay {\n  code: String!\n  country: String!\n}\n\ntype CreateToken {\n  token: String\n  errors: [Error]\n  user: User\n}\n\ntype CustomerCreate {\n  errors: [Error]\n  user: User\n}\n\ninput CustomerInput {\n  email: String\n  note: String\n  defaultBillingAddress: AddressInput\n  defaultShippingAddress: AddressInput\n}\n\ntype CustomerPasswordReset {\n  errors: [Error]\n}\n\ninput CustomerPasswordResetInput {\n  email: String!\n}\n\ntype CustomerRegister {\n  errors: [Error]\n  user: User\n}\n\ninput CustomerRegisterInput {\n  email: String!\n  password: String!\n}\n\ntype CustomerUpdate {\n  errors: [Error]\n  user: User\n}\n\nscalar Date\n\nscalar DateTime\n\nscalar Decimal\n\nenum DiscountValueTypeEnum {\n  FIXED\n  PERCENTAGE\n}\n\ntype Domain {\n  host: String!\n  sslEnabled: Boolean!\n  url: String!\n}\n\ntype DraftOrderComplete {\n  errors: [Error]\n  order: Order\n}\n\ntype DraftOrderCreate {\n  errors: [Error]\n  order: Order\n}\n\ninput DraftOrderCreateInput {\n  billingAddress: AddressInput\n  user: ID\n  userEmail: String\n  discount: Decimal\n  shippingAddress: AddressInput\n  shippingMethod: ID\n  voucher: ID\n  lines: [OrderLineCreateInput]\n}\n\ntype DraftOrderDelete {\n  errors: [Error]\n  order: Order\n}\n\ninput DraftOrderInput {\n  billingAddress: AddressInput\n  user: ID\n  userEmail: String\n  discount: Decimal\n  shippingAddress: AddressInput\n  shippingMethod: ID\n  voucher: ID\n}\n\ntype DraftOrderLineCreate {\n  errors: [Error]\n  order: Order\n  orderLine: OrderLine\n}\n\ntype DraftOrderLineDelete {\n  errors: [Error]\n  order: Order\n  orderLine: OrderLine\n}\n\ntype DraftOrderLineUpdate {\n  errors: [Error]\n  order: Order\n  orderLine: OrderLine\n}\n\ntype DraftOrderUpdate {\n  errors: [Error]\n  order: Order\n}\n\ntype Error {\n  field: String\n  message: String\n}\n\ntype Fulfillment implements Node {\n  id: ID!\n  fulfillmentOrder: Int!\n  status: FulfillmentStatus!\n  trackingNumber: String!\n  shippingDate: DateTime!\n  lines(before: String, after: String, first: Int, last: Int): FulfillmentLineCountableConnection\n  statusDisplay: String\n}\n\ntype FulfillmentCancel {\n  errors: [Error]\n  fulfillment: Fulfillment\n  order: Order\n}\n\ninput FulfillmentCancelInput {\n  restock: Boolean\n}\n\ntype FulfillmentCreate {\n  errors: [Error]\n  fulfillment: Fulfillment\n  order: Order\n}\n\ninput FulfillmentCreateInput {\n  trackingNumber: String\n  notifyCustomer: Boolean\n  lines: [FulfillmentLineInput]!\n}\n\ntype FulfillmentLine implements Node {\n  id: ID!\n  orderLine: OrderLine!\n  quantity: Int!\n}\n\ntype FulfillmentLineCountableConnection {\n  pageInfo: PageInfo!\n  edges: [FulfillmentLineCountableEdge!]!\n  totalCount: Int\n}\n\ntype FulfillmentLineCountableEdge {\n  node: FulfillmentLine!\n  cursor: String!\n}\n\ninput FulfillmentLineInput {\n  orderLineId: ID\n  quantity: Int\n}\n\nenum FulfillmentStatus {\n  FULFILLED\n  CANCELED\n}\n\ntype FulfillmentUpdateTracking {\n  errors: [Error]\n  fulfillment: Fulfillment\n  order: Order\n}\n\ninput FulfillmentUpdateTrackingInput {\n  trackingNumber: String\n  notifyCustomer: Boolean\n}\n\nscalar GenericScalar\n\ntype HomepageCollectionUpdate {\n  errors: [Error]\n  shop: Shop\n}\n\ntype Image {\n  url(size: Int): String!\n}\n\ntype LanguageDisplay {\n  code: String!\n  language: String!\n}\n\ntype Margin {\n  start: Int\n  stop: Int\n}\n\ntype Menu implements Node {\n  id: ID!\n  name: String!\n  items(before: String, after: String, first: Int, last: Int): MenuItemCountableConnection\n}\n\ntype MenuCountableConnection {\n  pageInfo: PageInfo!\n  edges: [MenuCountableEdge!]!\n  totalCount: Int\n}\n\ntype MenuCountableEdge {\n  node: Menu!\n  cursor: String!\n}\n\ntype MenuCreate {\n  errors: [Error]\n  menu: Menu\n}\n\ninput MenuCreateInput {\n  name: String\n  items: [MenuItemInput]\n}\n\ntype MenuDelete {\n  errors: [Error]\n  menu: Menu\n}\n\ninput MenuInput {\n  name: String\n}\n\ntype MenuItem implements Node {\n  id: ID!\n  menu: Menu!\n  name: String!\n  parent: MenuItem\n  url: String\n  category: Category\n  collection: Collection\n  page: Page\n  level: Int!\n  children(before: String, after: String, first: Int, last: Int): MenuItemCountableConnection\n}\n\ntype MenuItemCountableConnection {\n  pageInfo: PageInfo!\n  edges: [MenuItemCountableEdge!]!\n  totalCount: Int\n}\n\ntype MenuItemCountableEdge {\n  node: MenuItem!\n  cursor: String!\n}\n\ntype MenuItemCreate {\n  errors: [Error]\n  menuItem: MenuItem\n}\n\ninput MenuItemCreateInput {\n  name: String\n  url: String\n  category: ID\n  collection: ID\n  page: ID\n  menu: ID!\n  parent: ID\n}\n\ntype MenuItemDelete {\n  errors: [Error]\n  menuItem: MenuItem\n}\n\ninput MenuItemInput {\n  name: String\n  url: String\n  category: ID\n  collection: ID\n  page: ID\n}\n\ntype MenuItemUpdate {\n  errors: [Error]\n  menuItem: MenuItem\n}\n\ntype MenuUpdate {\n  errors: [Error]\n  menu: Menu\n}\n\ntype Money {\n  currency: String!\n  amount: Float!\n  localized: String!\n}\n\ntype MoneyRange {\n  start: Money\n  stop: Money\n}\n\ntype Mutations {\n  assignNavigation(menu: ID, navigationType: NavigationType!): AssignNavigation\n  tokenCreate(email: String!, password: String!): CreateToken\n  tokenRefresh(token: String): Refresh\n  tokenVerify(token: String): VerifyToken\n  setPassword(id: ID!, input: SetPasswordInput!): SetPassword\n  passwordReset(email: String!): PasswordReset\n  attributeValueCreate(input: AttributeValueCreateInput!): AttributeValueCreate\n  attributeValueDelete(id: ID!): AttributeValueDelete\n  attributeValueUpdate(id: ID!, input: AttributeInput!): AttributeValueUpdate\n  categoryCreate(input: CategoryInput!): CategoryCreate\n  categoryDelete(id: ID!): CategoryDelete\n  categoryUpdate(id: ID!, input: CategoryInput!): CategoryUpdate\n  customerCreate(input: UserCreateInput!): CustomerCreate\n  customerUpdate(id: ID!, input: CustomerInput!): CustomerUpdate\n  customerPasswordReset(input: CustomerPasswordResetInput!): CustomerPasswordReset\n  customerRegister(input: CustomerRegisterInput!): CustomerRegister\n  staffCreate(input: StaffCreateInput!): StaffCreate\n  staffUpdate(id: ID!, input: StaffInput!): StaffUpdate\n  staffDelete(id: ID!): StaffDelete\n  addressCreate(input: AddressCreateInput!): AddressCreate\n  addressUpdate(id: ID!, input: AddressInput!): AddressUpdate\n  addressDelete(id: ID!): AddressDelete\n  collectionCreate(input: CollectionInput!): CollectionCreate\n  collectionUpdate(id: ID!, input: CollectionInput!): CollectionUpdate\n  collectionDelete(id: ID!): CollectionDelete\n  collectionAddProducts(collectionId: ID!, products: [ID]!): CollectionAddProducts\n  collectionRemoveProducts(collectionId: ID!, products: [ID]!): CollectionRemoveProducts\n  menuCreate(input: MenuCreateInput!): MenuCreate\n  menuDelete(id: ID!): MenuDelete\n  menuUpdate(id: ID!, input: MenuInput!): MenuUpdate\n  menuItemCreate(input: MenuItemCreateInput!): MenuItemCreate\n  menuItemDelete(id: ID!): MenuItemDelete\n  menuItemUpdate(id: ID!, input: MenuItemInput!): MenuItemUpdate\n  draftOrderCreate(input: DraftOrderCreateInput!): DraftOrderCreate\n  draftOrderComplete(id: ID!): DraftOrderComplete\n  draftOrderDelete(id: ID!): DraftOrderDelete\n  draftOrderLineCreate(id: ID!, input: OrderLineCreateInput!): DraftOrderLineCreate\n  draftOrderLineDelete(id: ID!): DraftOrderLineDelete\n  draftOrderLineUpdate(id: ID!, input: OrderLineInput!): DraftOrderLineUpdate\n  draftOrderUpdate(id: ID!, input: DraftOrderInput!): DraftOrderUpdate\n  orderFulfillmentCancel(id: ID!, input: FulfillmentCancelInput!): FulfillmentCancel\n  orderFulfillmentCreate(input: FulfillmentCreateInput!, order: ID): FulfillmentCreate\n  orderFulfillmentUpdateTracking(id: ID!, input: FulfillmentUpdateTrackingInput!): FulfillmentUpdateTracking\n  orderAddNote(order: ID!, input: OrderAddNoteInput!): OrderAddNote\n  orderCancel(id: ID!, restock: Boolean!): OrderCancel\n  orderCapture(amount: Decimal!, id: ID!): OrderCapture\n  orderMarkAsPaid(id: ID!): OrderMarkAsPaid\n  orderUpdateShipping(order: ID!, input: OrderUpdateShippingInput): OrderUpdateShipping\n  orderRefund(amount: Decimal!, id: ID!): OrderRefund\n  orderRelease(id: ID!): OrderRelease\n  orderUpdate(id: ID!, input: OrderUpdateInput!): OrderUpdate\n  pageCreate(input: PageInput!): PageCreate\n  pageDelete(id: ID!): PageDelete\n  pageUpdate(id: ID!, input: PageInput!): PageUpdate\n  attributeCreate(input: AttributeCreateInput!): AttributeCreate\n  attributeDelete(id: ID!): AttributeDelete\n  attributeUpdate(id: ID!, input: AttributeInput!): AttributeUpdate\n  productCreate(input: ProductCreateInput!): ProductCreate\n  productDelete(id: ID!): ProductDelete\n  productUpdate(id: ID!, input: ProductInput!): ProductUpdate\n  productImageCreate(input: ProductImageCreateInput!): ProductImageCreate\n  productImageReorder(imagesIds: [ID]!, productId: ID!): ProductImageReorder\n  productImageDelete(id: ID!): ProductImageDelete\n  productImageUpdate(id: ID!, input: ProductImageUpdateInput!): ProductImageUpdate\n  productTypeCreate(input: ProductTypeInput!): ProductTypeCreate\n  productTypeUpdate(id: ID!, input: ProductTypeInput!): ProductTypeUpdate\n  productTypeDelete(id: ID!): ProductTypeDelete\n  productVariantCreate(input: ProductVariantCreateInput!): ProductVariantCreate\n  productVariantDelete(id: ID!): ProductVariantDelete\n  productVariantUpdate(id: ID!, input: ProductVariantInput!): ProductVariantUpdate\n  saleCreate(input: SaleInput!): SaleCreate\n  saleDelete(id: ID!): SaleDelete\n  saleUpdate(id: ID!, input: SaleInput!): SaleUpdate\n  shopDomainUpdate(input: SiteDomainInput): ShopDomainUpdate\n  shopSettingsUpdate(input: ShopSettingsInput!): ShopSettingsUpdate\n  homepageCollectionUpdate(collection: ID): HomepageCollectionUpdate\n  voucherCreate(input: VoucherInput!): VoucherCreate\n  voucherDelete(id: ID!): VoucherDelete\n  voucherUpdate(id: ID!, input: VoucherInput!): VoucherUpdate\n  shippingZoneCreate(input: ShippingZoneInput!): ShippingZoneCreate\n  shippingZoneDelete(id: ID!): ShippingZoneDelete\n  shippingZoneUpdate(id: ID!, input: ShippingZoneInput!): ShippingZoneUpdate\n  shippingPriceCreate(input: ShippingPriceInput!): ShippingPriceCreate\n  shippingPriceDelete(id: ID!): ShippingPriceDelete\n  shippingPriceUpdate(id: ID!, input: ShippingPriceInput!): ShippingPriceUpdate\n  variantImageAssign(imageId: ID!, variantId: ID!): VariantImageAssign\n  variantImageUnassign(imageId: ID!, variantId: ID!): VariantImageUnassign\n}\n\ntype Navigation {\n  main: Menu\n  secondary: Menu\n}\n\nenum NavigationType {\n  MAIN\n  SECONDARY\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype Order implements Node {\n  id: ID!\n  created: DateTime!\n  status: OrderStatus!\n  user: User\n  languageCode: String!\n  trackingClientId: String!\n  billingAddress: Address\n  shippingAddress: Address\n  userEmail: String\n  shippingMethod: ShippingMethod\n  shippingPrice: TaxedMoney\n  shippingMethodName: String\n  token: String!\n  total: TaxedMoney\n  voucher: Voucher\n  discountAmount: Money\n  discountName: String!\n  translatedDiscountName: String!\n  displayGrossPrices: Boolean!\n  customerNote: String!\n  weight: Weight\n  lines(before: String, after: String, first: Int, last: Int): OrderLineCountableConnection\n  fulfillments: [Fulfillment]!\n  events: [OrderEvent]\n  isPaid: Boolean\n  number: String\n  paymentStatus: PaymentStatusEnum\n  paymentStatusDisplay: String\n  subtotal: TaxedMoney\n  statusDisplay: String\n  totalAuthorized: Money\n  totalCaptured: Money\n  availableShippingMethods: [ShippingMethod]\n}\n\ntype OrderAddNote {\n  errors: [Error]\n  order: Order\n  event: OrderEvent\n}\n\ninput OrderAddNoteInput {\n  message: String\n}\n\ntype OrderCancel {\n  errors: [Error]\n  order: Order\n}\n\ntype OrderCapture {\n  errors: [Error]\n  order: Order\n}\n\ntype OrderCountableConnection {\n  pageInfo: PageInfo!\n  edges: [OrderCountableEdge!]!\n  totalCount: Int\n}\n\ntype OrderCountableEdge {\n  node: Order!\n  cursor: String!\n}\n\ntype OrderEvent implements Node {\n  id: ID!\n  date: DateTime\n  type: OrderEvents\n  user(id: ID): User\n  message: String\n  email: String\n  emailType: OrderEventsEmails\n  amount: Float\n  quantity: Int\n  composedId: String\n  oversoldItems: [String]\n}\n\nenum OrderEvents {\n  PLACED\n  PLACED_FROM_DRAFT\n  OVERSOLD_ITEMS\n  ORDER_MARKED_AS_PAID\n  CANCELED\n  ORDER_FULLY_PAID\n  UPDATED\n  EMAIL_SENT\n  PAYMENT_CAPTURED\n  PAYMENT_REFUNDED\n  PAYMENT_RELEASED\n  FULFILLMENT_CANCELED\n  FULFILLMENT_RESTOCKED_ITEMS\n  FULFILLMENT_FULFILLED_ITEMS\n  TRACKING_UPDATED\n  NOTE_ADDED\n  OTHER\n}\n\nenum OrderEventsEmails {\n  PAYMENT\n  SHIPPING\n  ORDER\n  FULFILLMENT\n}\n\ntype OrderLine implements Node {\n  id: ID!\n  productName: String!\n  translatedProductName: String!\n  productSku: String!\n  isShippingRequired: Boolean!\n  quantity: Int!\n  quantityFulfilled: Int!\n  unitPrice: TaxedMoney\n  taxRate: Float!\n  thumbnailUrl(size: Int): String\n}\n\ntype OrderLineCountableConnection {\n  pageInfo: PageInfo!\n  edges: [OrderLineCountableEdge!]!\n  totalCount: Int\n}\n\ntype OrderLineCountableEdge {\n  node: OrderLine!\n  cursor: String!\n}\n\ninput OrderLineCreateInput {\n  quantity: Int!\n  variantId: ID!\n}\n\ninput OrderLineInput {\n  quantity: Int!\n}\n\ntype OrderMarkAsPaid {\n  errors: [Error]\n  order: Order\n}\n\ntype OrderRefund {\n  errors: [Error]\n  order: Order\n}\n\ntype OrderRelease {\n  errors: [Error]\n  order: Order\n}\n\nenum OrderStatus {\n  DRAFT\n  UNFULFILLED\n  PARTIALLY_FULFILLED\n  FULFILLED\n  CANCELED\n}\n\ntype OrderUpdate {\n  errors: [Error]\n  order: Order\n}\n\ninput OrderUpdateInput {\n  billingAddress: AddressInput\n  userEmail: String\n  shippingAddress: AddressInput\n}\n\ntype OrderUpdateShipping {\n  errors: [Error]\n  order: Order\n}\n\ninput OrderUpdateShippingInput {\n  shippingMethod: ID\n}\n\ntype Page implements Node {\n  seoTitle: String\n  seoDescription: String\n  id: ID!\n  slug: String!\n  title: String!\n  content: String!\n  created: DateTime!\n  isVisible: Boolean!\n  availableOn: Date\n}\n\ntype PageCountableConnection {\n  pageInfo: PageInfo!\n  edges: [PageCountableEdge!]!\n  totalCount: Int\n}\n\ntype PageCountableEdge {\n  node: Page!\n  cursor: String!\n}\n\ntype PageCreate {\n  errors: [Error]\n  page: Page\n}\n\ntype PageDelete {\n  errors: [Error]\n  page: Page\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ninput PageInput {\n  slug: String\n  title: String\n  content: String\n  isVisible: Boolean\n  availableOn: String\n  seo: SeoInput\n}\n\ntype PageUpdate {\n  errors: [Error]\n  page: Page\n}\n\ntype PasswordReset {\n  errors: [Error]\n}\n\nenum PaymentStatusEnum {\n  WAITING\n  PREAUTH\n  CONFIRMED\n  REJECTED\n  REFUNDED\n  ERROR\n  INPUT\n}\n\ntype PermissionDisplay {\n  code: String!\n  name: String!\n}\n\ntype Product implements Node {\n  id: ID!\n  seoTitle: String\n  seoDescription: String\n  productType: ProductType!\n  name: String!\n  description: String!\n  category: Category!\n  price: Money\n  availableOn: Date\n  isPublished: Boolean!\n  attributes: [SelectedAttribute]\n  updatedAt: DateTime\n  chargeTaxes: Boolean!\n  taxRate: String!\n  weight: Weight\n  voucherSet(before: String, after: String, first: Int, last: Int, name_Icontains: String, type: String, discountValue_Gte: Float, discountValue_Lte: Float, startDate: Date, endDate: Date, minAmountSpent_Gte: Float, minAmountSpent_Lte: Float): VoucherCountableConnection\n  saleSet(before: String, after: String, first: Int, last: Int, name_Icontains: String, type_Icontains: String, value_Gte: Float, value_Lte: Float, startDate: Date, endDate: Date): SaleCountableConnection\n  variants(before: String, after: String, first: Int, last: Int, id: ID): ProductVariantCountableConnection\n  images(before: String, after: String, first: Int, last: Int): ProductImageCountableConnection\n  collections(before: String, after: String, first: Int, last: Int, name: String, name_Icontains: String, name_Istartswith: String): CollectionCountableConnection\n  url: String!\n  thumbnailUrl(size: Int): String\n  availability: ProductAvailability\n  purchaseCost: MoneyRange\n  margin: Margin\n  imageById(id: ID): ProductImage\n}\n\ntype ProductAvailability {\n  available: Boolean\n  onSale: Boolean\n  discount: TaxedMoney\n  discountLocalCurrency: TaxedMoney\n  priceRange: TaxedMoneyRange\n  priceRangeUndiscounted: TaxedMoneyRange\n  priceRangeLocalCurrency: TaxedMoneyRange\n}\n\ntype ProductCountableConnection {\n  pageInfo: PageInfo!\n  edges: [ProductCountableEdge!]!\n  totalCount: Int\n}\n\ntype ProductCountableEdge {\n  node: Product!\n  cursor: String!\n}\n\ntype ProductCreate {\n  errors: [Error]\n  product: Product\n}\n\ninput ProductCreateInput {\n  attributes: [AttributeValueInput]\n  availableOn: Date\n  category: ID\n  chargeTaxes: Boolean\n  collections: [ID]\n  description: String\n  isPublished: Boolean\n  name: String\n  price: Decimal\n  taxRate: TaxRateType\n  seo: SeoInput\n  weight: WeightScalar\n  productType: ID!\n}\n\ntype ProductDelete {\n  errors: [Error]\n  product: Product\n}\n\ntype ProductImage implements Node {\n  sortOrder: Int!\n  id: ID!\n  alt: String!\n  url(size: Int): String!\n}\n\ntype ProductImageCountableConnection {\n  pageInfo: PageInfo!\n  edges: [ProductImageCountableEdge!]!\n  totalCount: Int\n}\n\ntype ProductImageCountableEdge {\n  node: ProductImage!\n  cursor: String!\n}\n\ntype ProductImageCreate {\n  errors: [Error]\n  product: Product\n  image: ProductImage\n}\n\ninput ProductImageCreateInput {\n  alt: String\n  image: Upload!\n  product: ID!\n}\n\ntype ProductImageDelete {\n  errors: [Error]\n  product: Product\n  image: ProductImage\n}\n\ntype ProductImageReorder {\n  errors: [Error]\n  product: Product\n  images: [ProductImage]\n}\n\ntype ProductImageUpdate {\n  errors: [Error]\n  product: Product\n  image: ProductImage\n}\n\ninput ProductImageUpdateInput {\n  alt: String\n}\n\ninput ProductInput {\n  attributes: [AttributeValueInput]\n  availableOn: Date\n  category: ID\n  chargeTaxes: Boolean\n  collections: [ID]\n  description: String\n  isPublished: Boolean\n  name: String\n  price: Decimal\n  taxRate: TaxRateType\n  seo: SeoInput\n  weight: WeightScalar\n}\n\ntype ProductType implements Node {\n  id: ID!\n  name: String!\n  hasVariants: Boolean!\n  productAttributes: [Attribute]\n  variantAttributes: [Attribute]\n  isShippingRequired: Boolean!\n  taxRate: TaxRateType\n  weight: Weight\n  products(before: String, after: String, first: Int, last: Int, category: ID, price: Float, price_Range: Float, price_Lte: Float, price_Gte: Float, attributes: [AttributeScalar], name: String, name_Icontains: String, productType_Name: String, isPublished: Boolean, sortBy: String): ProductCountableConnection\n}\n\ntype ProductTypeCountableConnection {\n  pageInfo: PageInfo!\n  edges: [ProductTypeCountableEdge!]!\n  totalCount: Int\n}\n\ntype ProductTypeCountableEdge {\n  node: ProductType!\n  cursor: String!\n}\n\ntype ProductTypeCreate {\n  errors: [Error]\n  productType: ProductType\n}\n\ntype ProductTypeDelete {\n  errors: [Error]\n  productType: ProductType\n}\n\ninput ProductTypeInput {\n  name: String\n  hasVariants: Boolean\n  productAttributes: [ID]\n  variantAttributes: [ID]\n  isShippingRequired: Boolean\n  weight: WeightScalar\n  taxRate: TaxRateType\n}\n\ntype ProductTypeUpdate {\n  errors: [Error]\n  productType: ProductType\n}\n\ntype ProductUpdate {\n  errors: [Error]\n  product: Product\n}\n\ntype ProductVariant implements Node {\n  id: ID!\n  sku: String!\n  name: String!\n  priceOverride: Money\n  product: Product!\n  attributes: [SelectedAttribute]\n  images(before: String, after: String, first: Int, last: Int): ProductImageCountableConnection\n  trackInventory: Boolean!\n  quantity: Int!\n  quantityAllocated: Int!\n  costPrice: Money\n  weight: Weight\n  stockQuantity: Int!\n  price: Money\n  margin: Int\n}\n\ntype ProductVariantCountableConnection {\n  pageInfo: PageInfo!\n  edges: [ProductVariantCountableEdge!]!\n  totalCount: Int\n}\n\ntype ProductVariantCountableEdge {\n  node: ProductVariant!\n  cursor: String!\n}\n\ntype ProductVariantCreate {\n  errors: [Error]\n  productVariant: ProductVariant\n}\n\ninput ProductVariantCreateInput {\n  attributes: [AttributeValueInput]!\n  costPrice: Decimal\n  priceOverride: Decimal\n  sku: String\n  quantity: Int\n  trackInventory: Boolean\n  weight: WeightScalar\n  product: ID!\n}\n\ntype ProductVariantDelete {\n  errors: [Error]\n  productVariant: ProductVariant\n}\n\ninput ProductVariantInput {\n  attributes: [AttributeValueInput]\n  costPrice: Decimal\n  priceOverride: Decimal\n  sku: String\n  quantity: Int\n  trackInventory: Boolean\n  weight: WeightScalar\n}\n\ntype ProductVariantUpdate {\n  errors: [Error]\n  productVariant: ProductVariant\n}\n\ntype Query {\n  addressValidator(input: AddressValidationInput!): AddressValidationData\n  attributes(query: String, inCategory: ID, before: String, after: String, first: Int, last: Int, id: ID, slug: String): AttributeCountableConnection\n  categories(query: String, level: Int, before: String, after: String, first: Int, last: Int, id: ID, name: String): CategoryCountableConnection\n  category(id: ID): Category\n  collection(id: ID): Collection\n  collections(query: String, before: String, after: String, first: Int, last: Int, name: String, name_Icontains: String, name_Istartswith: String): CollectionCountableConnection\n  menu(id: ID, name: String): Menu\n  menus(query: String, before: String, after: String, first: Int, last: Int): MenuCountableConnection\n  menuItem(id: ID): MenuItem\n  menuItems(query: String, before: String, after: String, first: Int, last: Int): MenuItemCountableConnection\n  order(id: ID): Order\n  orders(query: String, before: String, after: String, first: Int, last: Int, status: String, totalNet: Float, totalNet_Lte: Float, totalNet_Gte: Float, id: [ID], orderId: Float, created_Gte: String, created_Lte: String, user: String): OrderCountableConnection\n  page(id: ID, slug: String): Page\n  pages(query: String, before: String, after: String, first: Int, last: Int, id: ID, title: String): PageCountableConnection\n  product(id: ID): Product\n  products(query: String, before: String, after: String, first: Int, last: Int, category: ID, price: Float, price_Range: Float, price_Lte: Float, price_Gte: Float, attributes: [AttributeScalar], name: String, name_Icontains: String, productType_Name: String, isPublished: Boolean, sortBy: String): ProductCountableConnection\n  productType(id: ID): ProductType\n  productTypes(before: String, after: String, first: Int, last: Int, id: ID): ProductTypeCountableConnection\n  productVariant(id: ID): ProductVariant\n  productVariants(ids: [ID], before: String, after: String, first: Int, last: Int, id: ID): ProductVariantCountableConnection\n  sale(id: ID): Sale\n  sales(query: String, before: String, after: String, first: Int, last: Int, name_Icontains: String, type_Icontains: String, value_Gte: Float, value_Lte: Float, startDate: Date, endDate: Date): SaleCountableConnection\n  shop: Shop\n  voucher(id: ID): Voucher\n  vouchers(query: String, before: String, after: String, first: Int, last: Int, name_Icontains: String, type: String, discountValue_Gte: Float, discountValue_Lte: Float, startDate: Date, endDate: Date, minAmountSpent_Gte: Float, minAmountSpent_Lte: Float): VoucherCountableConnection\n  shippingZone(id: ID): ShippingZone\n  shippingZones(before: String, after: String, first: Int, last: Int, name_Icontains: String, countries_Icontains: String, shippingMethods_Price_Gte: Float, shippingMethods_Price_Lte: Float): ShippingZoneCountableConnection\n  user(id: ID): User\n  customers(query: String, before: String, after: String, first: Int, last: Int, isStaff: Boolean): UserCountableConnection\n  staffUsers(query: String, before: String, after: String, first: Int, last: Int, isStaff: Boolean): UserCountableConnection\n  node(id: ID!): Node\n}\n\ntype Refresh {\n  token: String\n  payload: GenericScalar\n}\n\ntype Sale implements Node {\n  id: ID!\n  name: String!\n  type: SaleType!\n  value: Float!\n  products(before: String, after: String, first: Int, last: Int): ProductCountableConnection\n  categories(before: String, after: String, first: Int, last: Int, id: ID, name: String): CategoryCountableConnection\n  collections(before: String, after: String, first: Int, last: Int, name: String, name_Icontains: String, name_Istartswith: String): CollectionCountableConnection\n  startDate: Date!\n  endDate: Date\n}\n\ntype SaleCountableConnection {\n  pageInfo: PageInfo!\n  edges: [SaleCountableEdge!]!\n  totalCount: Int\n}\n\ntype SaleCountableEdge {\n  node: Sale!\n  cursor: String!\n}\n\ntype SaleCreate {\n  errors: [Error]\n  sale: Sale\n}\n\ntype SaleDelete {\n  errors: [Error]\n  sale: Sale\n}\n\ninput SaleInput {\n  name: String\n  type: DiscountValueTypeEnum\n  value: Decimal\n  products: [ID]\n  categories: [ID]\n  collections: [ID]\n  startDate: DateTime\n  endDate: DateTime\n}\n\nenum SaleType {\n  FIXED\n  PERCENTAGE\n}\n\ntype SaleUpdate {\n  errors: [Error]\n  sale: Sale\n}\n\ntype SelectedAttribute {\n  attribute: Attribute\n  value: AttributeValue\n}\n\ninput SeoInput {\n  title: String\n  description: String\n}\n\ntype SetPassword {\n  errors: [Error]\n  user: User\n}\n\ninput SetPasswordInput {\n  token: String!\n  password: String!\n}\n\ntype ShippingMethod implements Node {\n  id: ID!\n  name: String!\n  type: ShippingMethodTypeEnum\n  price: Money\n  minimumOrderPrice: Money\n  maximumOrderPrice: Money\n  minimumOrderWeight: Weight\n  maximumOrderWeight: Weight\n}\n\nenum ShippingMethodTypeEnum {\n  PRICE\n  WEIGHT\n}\n\ntype ShippingPriceCreate {\n  errors: [Error]\n  shippingMethod: ShippingMethod\n}\n\ntype ShippingPriceDelete {\n  errors: [Error]\n  shippingMethod: ShippingMethod\n}\n\ninput ShippingPriceInput {\n  name: String\n  price: Decimal\n  minimumOrderPrice: Decimal\n  maximumOrderPrice: Decimal\n  minimumOrderWeight: WeightScalar\n  maximumOrderWeight: WeightScalar\n  type: ShippingMethodTypeEnum\n  shippingZone: ID\n}\n\ntype ShippingPriceUpdate {\n  errors: [Error]\n  shippingMethod: ShippingMethod\n}\n\ntype ShippingZone implements Node {\n  id: ID!\n  name: String!\n  countries: [CountryDisplay]\n  default: Boolean!\n  shippingMethods: [ShippingMethod]\n  priceRange: MoneyRange\n}\n\ntype ShippingZoneCountableConnection {\n  pageInfo: PageInfo!\n  edges: [ShippingZoneCountableEdge!]!\n  totalCount: Int\n}\n\ntype ShippingZoneCountableEdge {\n  node: ShippingZone!\n  cursor: String!\n}\n\ntype ShippingZoneCreate {\n  errors: [Error]\n  shippingZone: ShippingZone\n}\n\ntype ShippingZoneDelete {\n  errors: [Error]\n  shippingZone: ShippingZone\n}\n\ninput ShippingZoneInput {\n  name: String\n  countries: [String]\n  default: Boolean\n}\n\ntype ShippingZoneUpdate {\n  errors: [Error]\n  shippingZone: ShippingZone\n}\n\ntype Shop {\n  authorizationKeys: [AuthorizationKey]!\n  countries: [CountryDisplay]!\n  currencies: [String]!\n  defaultCurrency: String!\n  defaultCountry: CountryDisplay\n  description: String\n  domain: Domain!\n  homepageCollection: Collection\n  languages: [LanguageDisplay]!\n  name: String!\n  navigation: Navigation\n  permissions: [PermissionDisplay]!\n  phonePrefixes: [String]!\n  headerText: String\n  includeTaxesInPrices: Boolean\n  displayGrossPrices: Boolean\n  trackInventoryByDefault: Boolean\n  defaultWeightUnit: WeightUnitsEnum\n}\n\ntype ShopDomainUpdate {\n  errors: [Error]\n  shop: Shop\n}\n\ninput ShopSettingsInput {\n  headerText: String\n  description: String\n  includeTaxesInPrices: Boolean\n  displayGrossPrices: Boolean\n  trackInventoryByDefault: Boolean\n  defaultWeightUnit: WeightUnitsEnum\n}\n\ntype ShopSettingsUpdate {\n  errors: [Error]\n  shop: Shop\n}\n\ninput SiteDomainInput {\n  domain: String\n  name: String\n}\n\ntype StaffCreate {\n  errors: [Error]\n  user: User\n}\n\ninput StaffCreateInput {\n  email: String\n  note: String\n  isActive: Boolean\n  permissions: [String]\n  sendPasswordEmail: Boolean\n}\n\ntype StaffDelete {\n  errors: [Error]\n  user: User\n}\n\ninput StaffInput {\n  email: String\n  note: String\n  isActive: Boolean\n  permissions: [String]\n}\n\ntype StaffUpdate {\n  errors: [Error]\n  user: User\n}\n\nenum TaxRateType {\n  ACCOMODATION\n  ADMISSION_TO_CULTURAL_EVENTS\n  ADMISSION_TO_ENTERTAINMENT_EVENTS\n  ADMISSION_TO_SPORTING_EVENTS\n  ADVERTISING\n  AGRICULTURAL_SUPPLIES\n  BABY_FOODSTUFFS\n  BIKES\n  BOOKS\n  CHILDRENS_CLOTHING\n  DOMESTIC_FUEL\n  DOMESTIC_SERVICES\n  E_BOOKS\n  FOODSTUFFS\n  HOTELS\n  MEDICAL\n  NEWSPAPERS\n  PASSENGER_TRANSPORT\n  PHARMACEUTICALS\n  PROPERTY_RENOVATIONS\n  RESTAURANTS\n  SOCIAL_HOUSING\n  STANDARD\n  WATER\n}\n\ntype TaxedMoney {\n  currency: String!\n  gross: Money!\n  net: Money!\n  tax: Money!\n}\n\ntype TaxedMoneyRange {\n  start: TaxedMoney\n  stop: TaxedMoney\n}\n\nscalar UUID\n\nscalar Upload\n\ntype User implements Node {\n  id: ID!\n  email: String!\n  addresses(before: String, after: String, first: Int, last: Int): AddressCountableConnection\n  isStaff: Boolean!\n  token: UUID!\n  isActive: Boolean!\n  note: String\n  defaultShippingAddress: Address\n  defaultBillingAddress: Address\n  orders(before: String, after: String, first: Int, last: Int): OrderCountableConnection\n  permissions: [PermissionDisplay]\n}\n\ntype UserCountableConnection {\n  pageInfo: PageInfo!\n  edges: [UserCountableEdge!]!\n  totalCount: Int\n}\n\ntype UserCountableEdge {\n  node: User!\n  cursor: String!\n}\n\ninput UserCreateInput {\n  email: String\n  note: String\n  defaultBillingAddress: AddressInput\n  defaultShippingAddress: AddressInput\n  sendPasswordEmail: Boolean\n}\n\ntype VariantImageAssign {\n  errors: [Error]\n  productVariant: ProductVariant\n  image: ProductImage\n}\n\ntype VariantImageUnassign {\n  errors: [Error]\n  productVariant: ProductVariant\n  image: ProductImage\n}\n\ntype VerifyToken {\n  payload: GenericScalar\n  user: User\n}\n\ntype Voucher implements Node {\n  id: ID!\n  type: VoucherType!\n  name: String\n  code: String!\n  usageLimit: Int\n  used: Int!\n  startDate: Date!\n  endDate: Date\n  applyOncePerOrder: Boolean!\n  discountValueType: VoucherDiscountValueType!\n  discountValue: Float!\n  countries: VoucherCountries!\n  minAmountSpent: Money\n  products(before: String, after: String, first: Int, last: Int): ProductCountableConnection\n  collections(before: String, after: String, first: Int, last: Int, name: String, name_Icontains: String, name_Istartswith: String): CollectionCountableConnection\n  categories(before: String, after: String, first: Int, last: Int, id: ID, name: String): CategoryCountableConnection\n}\n\ntype VoucherCountableConnection {\n  pageInfo: PageInfo!\n  edges: [VoucherCountableEdge!]!\n  totalCount: Int\n}\n\ntype VoucherCountableEdge {\n  node: Voucher!\n  cursor: String!\n}\n\nenum VoucherCountries {\n  AF\n  AX\n  AL\n  DZ\n  AS\n  AD\n  AO\n  AI\n  AQ\n  AG\n  AR\n  AM\n  AW\n  AU\n  AT\n  AZ\n  BS\n  BH\n  BD\n  BB\n  BY\n  BE\n  BZ\n  BJ\n  BM\n  BT\n  BO\n  BQ\n  BA\n  BW\n  BV\n  BR\n  IO\n  BN\n  BG\n  BF\n  BI\n  CV\n  KH\n  CM\n  CA\n  KY\n  CF\n  TD\n  CL\n  CN\n  CX\n  CC\n  CO\n  KM\n  CG\n  CD\n  CK\n  CR\n  CI\n  HR\n  CU\n  CW\n  CY\n  CZ\n  DK\n  DJ\n  DM\n  DO\n  EC\n  EG\n  SV\n  GQ\n  ER\n  EE\n  ET\n  EU\n  FK\n  FO\n  FJ\n  FI\n  FR\n  GF\n  PF\n  TF\n  GA\n  GM\n  GE\n  DE\n  GH\n  GI\n  GR\n  GL\n  GD\n  GP\n  GU\n  GT\n  GG\n  GN\n  GW\n  GY\n  HT\n  HM\n  VA\n  HN\n  HK\n  HU\n  IS\n  IN\n  ID\n  IR\n  IQ\n  IE\n  IM\n  IL\n  IT\n  JM\n  JP\n  JE\n  JO\n  KZ\n  KE\n  KI\n  KW\n  KG\n  LA\n  LV\n  LB\n  LS\n  LR\n  LY\n  LI\n  LT\n  LU\n  MO\n  MK\n  MG\n  MW\n  MY\n  MV\n  ML\n  MT\n  MH\n  MQ\n  MR\n  MU\n  YT\n  MX\n  FM\n  MD\n  MC\n  MN\n  ME\n  MS\n  MA\n  MZ\n  MM\n  NA\n  NR\n  NP\n  NL\n  NC\n  NZ\n  NI\n  NE\n  NG\n  NU\n  NF\n  KP\n  MP\n  NO\n  OM\n  PK\n  PW\n  PS\n  PA\n  PG\n  PY\n  PE\n  PH\n  PN\n  PL\n  PT\n  PR\n  QA\n  RE\n  RO\n  RU\n  RW\n  BL\n  SH\n  KN\n  LC\n  MF\n  PM\n  VC\n  WS\n  SM\n  ST\n  SA\n  SN\n  RS\n  SC\n  SL\n  SG\n  SX\n  SK\n  SI\n  SB\n  SO\n  ZA\n  GS\n  KR\n  SS\n  ES\n  LK\n  SD\n  SR\n  SJ\n  SZ\n  SE\n  CH\n  SY\n  TW\n  TJ\n  TZ\n  TH\n  TL\n  TG\n  TK\n  TO\n  TT\n  TN\n  TR\n  TM\n  TC\n  TV\n  UG\n  UA\n  AE\n  GB\n  UM\n  US\n  UY\n  UZ\n  VU\n  VE\n  VN\n  VG\n  VI\n  WF\n  EH\n  YE\n  ZM\n  ZW\n}\n\ntype VoucherCreate {\n  errors: [Error]\n  voucher: Voucher\n}\n\ntype VoucherDelete {\n  errors: [Error]\n  voucher: Voucher\n}\n\nenum VoucherDiscountValueType {\n  FIXED\n  PERCENTAGE\n}\n\ninput VoucherInput {\n  type: VoucherTypeEnum\n  name: String\n  code: String\n  startDate: DateTime\n  endDate: DateTime\n  discountValueType: DiscountValueTypeEnum\n  discountValue: Decimal\n  products: [ID]\n  collections: [ID]\n  categories: [ID]\n  minAmountSpent: Decimal\n  countries: [String]\n}\n\nenum VoucherType {\n  VALUE\n  PRODUCT\n  COLLECTION\n  CATEGORY\n  SHIPPING\n}\n\nenum VoucherTypeEnum {\n  PRODUCT\n  COLLECTION\n  CATEGORY\n  SHIPPING\n  VALUE\n}\n\ntype VoucherUpdate {\n  errors: [Error]\n  voucher: Voucher\n}\n\ntype Weight {\n  unit: String!\n  value: Float!\n}\n\nscalar WeightScalar\n\nenum WeightUnitsEnum {\n  kg\n  lb\n  oz\n  g\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 239
    }
  ],
  "metrics": {
    "created_at": "2018-09-30T15:01:59Z",
    "updated_at": "2019-01-21T15:09:16Z",
    "pushed_at": "2018-09-30T15:07:15Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 1,
    "has_wiki_enabled": true,
    "license": "bsd-3-clause",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 2
  }
}