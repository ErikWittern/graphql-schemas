{
  "repo_name": "nestjs-prisma-nexus",
  "repo_full_name": "marcjulian/nestjs-prisma-nexus",
  "repo_owner": "marcjulian",
  "repo_description": "Nestjs Prisma Nexus test project",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "src/generated/schema.graphql",
      "sha": "383748306dd6b05799e18a64d5351727f277758e",
      "url": "https://api.github.com/repositories/172584889/contents/src/generated/schema.graphql?ref=2e334222b711762e7b401e65cf1f6338bf800adc",
      "git_url": "https://api.github.com/repositories/172584889/git/blobs/383748306dd6b05799e18a64d5351727f277758e",
      "html_url": "https://github.com/marcjulian/nestjs-prisma-nexus/blob/2e334222b711762e7b401e65cf1f6338bf800adc/src/generated/schema.graphql",
      "content": "### This file was autogenerated by Nexus 0.9.13\n### Do not make changes to this file directly\n\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar DateTime\n\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteUser(where: UserWhereUniqueInput!): User\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  upsertUser(create: UserCreateInput!, update: UserUpdateInput!, where: UserWhereUniqueInput!): User!\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  endCursor: String\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n}\n\ntype Query {\n  helloWorld: String!\n  node(id: ID!): Node\n  user(where: UserWhereUniqueInput!): User\n  users(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]!\n  usersConnection(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): UserConnection!\n}\n\nenum Role {\n  ADMIN\n  USER\n}\n\ntype User {\n  createdAt: DateTime!\n  email: String!\n  id: ID!\n  name: String\n  updatedAt: DateTime!\n}\n\ntype UserConnection {\n  aggregate: AggregateUser!\n  edges: [UserEdge!]!\n  pageInfo: PageInfo!\n}\n\ninput UserCreateInput {\n  email: String!\n  name: String\n  password: String!\n  role: Role\n}\n\ntype UserEdge {\n  cursor: String!\n  node: User!\n}\n\nenum UserOrderByInput {\n  createdAt_ASC\n  createdAt_DESC\n  email_ASC\n  email_DESC\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  password_ASC\n  password_DESC\n  role_ASC\n  role_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ninput UserUpdateInput {\n  email: String\n  name: String\n  password: String\n  role: Role\n}\n\ninput UserUpdateManyMutationInput {\n  email: String\n  name: String\n  password: String\n  role: Role\n}\n\ninput UserWhereInput {\n  AND: [UserWhereInput!]\n  createdAt: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_not: DateTime\n  createdAt_not_in: [DateTime!]\n  email: String\n  email_contains: String\n  email_ends_with: String\n  email_gt: String\n  email_gte: String\n  email_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_not: String\n  email_not_contains: String\n  email_not_ends_with: String\n  email_not_in: [String!]\n  email_not_starts_with: String\n  email_starts_with: String\n  id: ID\n  id_contains: ID\n  id_ends_with: ID\n  id_gt: ID\n  id_gte: ID\n  id_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_not: ID\n  id_not_contains: ID\n  id_not_ends_with: ID\n  id_not_in: [ID!]\n  id_not_starts_with: ID\n  id_starts_with: ID\n  name: String\n  name_contains: String\n  name_ends_with: String\n  name_gt: String\n  name_gte: String\n  name_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_not: String\n  name_not_contains: String\n  name_not_ends_with: String\n  name_not_in: [String!]\n  name_not_starts_with: String\n  name_starts_with: String\n  NOT: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  password: String\n  password_contains: String\n  password_ends_with: String\n  password_gt: String\n  password_gte: String\n  password_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_not: String\n  password_not_contains: String\n  password_not_ends_with: String\n  password_not_in: [String!]\n  password_not_starts_with: String\n  password_starts_with: String\n  role: Role\n  role_in: [Role!]\n  role_not: Role\n  role_not_in: [Role!]\n  updatedAt: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_not: DateTime\n  updatedAt_not_in: [DateTime!]\n}\n\ninput UserWhereUniqueInput {\n  email: String\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 8,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 18
    }
  ],
  "metrics": {
    "created_at": "2019-02-25T21:07:22Z",
    "updated_at": "2019-05-10T19:17:02Z",
    "pushed_at": "2019-06-05T23:54:06Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 1,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 2,
    "pull_requests_open": 2,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 2
  }
}