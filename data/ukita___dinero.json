{
  "repo_name": "dinero",
  "repo_full_name": "ukita/dinero",
  "repo_owner": "ukita",
  "repo_description": "ðŸ’° Simple budgeting app for studies purposes",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "backend/src/generated/prisma.graphql",
      "sha": "d6ee541c9cf9e26abfcf63efe30d213495de9e0c",
      "url": "https://api.github.com/repositories/138680224/contents/backend/src/generated/prisma.graphql?ref=831eeddfde13a5fa855c583ed766a839d9fdb5e0",
      "git_url": "https://api.github.com/repositories/138680224/git/blobs/d6ee541c9cf9e26abfcf63efe30d213495de9e0c",
      "html_url": "https://github.com/ukita/dinero/blob/831eeddfde13a5fa855c583ed766a839d9fdb5e0/backend/src/generated/prisma.graphql",
      "content": "type AggregateTransaction {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype AggregateWallet {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar DateTime\n\nscalar Long\n\ntype Mutation {\n  createTransaction(data: TransactionCreateInput!): Transaction!\n  updateTransaction(data: TransactionUpdateInput!, where: TransactionWhereUniqueInput!): Transaction\n  updateManyTransactions(data: TransactionUpdateManyMutationInput!, where: TransactionWhereInput): BatchPayload!\n  upsertTransaction(where: TransactionWhereUniqueInput!, create: TransactionCreateInput!, update: TransactionUpdateInput!): Transaction!\n  deleteTransaction(where: TransactionWhereUniqueInput!): Transaction\n  deleteManyTransactions(where: TransactionWhereInput): BatchPayload!\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  createWallet(data: WalletCreateInput!): Wallet!\n  updateWallet(data: WalletUpdateInput!, where: WalletWhereUniqueInput!): Wallet\n  updateManyWallets(data: WalletUpdateManyMutationInput!, where: WalletWhereInput): BatchPayload!\n  upsertWallet(where: WalletWhereUniqueInput!, create: WalletCreateInput!, update: WalletUpdateInput!): Wallet!\n  deleteWallet(where: WalletWhereUniqueInput!): Wallet\n  deleteManyWallets(where: WalletWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  transaction(where: TransactionWhereUniqueInput!): Transaction\n  transactions(where: TransactionWhereInput, orderBy: TransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Transaction]!\n  transactionsConnection(where: TransactionWhereInput, orderBy: TransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TransactionConnection!\n  user(where: UserWhereUniqueInput!): User\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  wallet(where: WalletWhereUniqueInput!): Wallet\n  wallets(where: WalletWhereInput, orderBy: WalletOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Wallet]!\n  walletsConnection(where: WalletWhereInput, orderBy: WalletOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WalletConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  transaction(where: TransactionSubscriptionWhereInput): TransactionSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  wallet(where: WalletSubscriptionWhereInput): WalletSubscriptionPayload\n}\n\ntype Transaction {\n  id: ID!\n  wallet: Wallet!\n  value: Int!\n  type: TRANSACTION_TYPE!\n  description: String\n  tags: [String!]!\n  performedAt: DateTime!\n  updatedAt: DateTime!\n}\n\nenum TRANSACTION_TYPE {\n  EXPENSE\n  INCOME\n}\n\ntype TransactionConnection {\n  pageInfo: PageInfo!\n  edges: [TransactionEdge]!\n  aggregate: AggregateTransaction!\n}\n\ninput TransactionCreateInput {\n  id: ID\n  wallet: WalletCreateOneWithoutTransactionsInput!\n  value: Int!\n  type: TRANSACTION_TYPE!\n  description: String\n  tags: TransactionCreatetagsInput\n}\n\ninput TransactionCreateManyWithoutWalletInput {\n  create: [TransactionCreateWithoutWalletInput!]\n  connect: [TransactionWhereUniqueInput!]\n}\n\ninput TransactionCreatetagsInput {\n  set: [String!]\n}\n\ninput TransactionCreateWithoutWalletInput {\n  id: ID\n  value: Int!\n  type: TRANSACTION_TYPE!\n  description: String\n  tags: TransactionCreatetagsInput\n}\n\ntype TransactionEdge {\n  node: Transaction!\n  cursor: String!\n}\n\nenum TransactionOrderByInput {\n  id_ASC\n  id_DESC\n  value_ASC\n  value_DESC\n  type_ASC\n  type_DESC\n  description_ASC\n  description_DESC\n  performedAt_ASC\n  performedAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype TransactionPreviousValues {\n  id: ID!\n  value: Int!\n  type: TRANSACTION_TYPE!\n  description: String\n  tags: [String!]!\n  performedAt: DateTime!\n  updatedAt: DateTime!\n}\n\ninput TransactionScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  value: Int\n  value_not: Int\n  value_in: [Int!]\n  value_not_in: [Int!]\n  value_lt: Int\n  value_lte: Int\n  value_gt: Int\n  value_gte: Int\n  type: TRANSACTION_TYPE\n  type_not: TRANSACTION_TYPE\n  type_in: [TRANSACTION_TYPE!]\n  type_not_in: [TRANSACTION_TYPE!]\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  performedAt: DateTime\n  performedAt_not: DateTime\n  performedAt_in: [DateTime!]\n  performedAt_not_in: [DateTime!]\n  performedAt_lt: DateTime\n  performedAt_lte: DateTime\n  performedAt_gt: DateTime\n  performedAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  AND: [TransactionScalarWhereInput!]\n  OR: [TransactionScalarWhereInput!]\n  NOT: [TransactionScalarWhereInput!]\n}\n\ntype TransactionSubscriptionPayload {\n  mutation: MutationType!\n  node: Transaction\n  updatedFields: [String!]\n  previousValues: TransactionPreviousValues\n}\n\ninput TransactionSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: TransactionWhereInput\n  AND: [TransactionSubscriptionWhereInput!]\n  OR: [TransactionSubscriptionWhereInput!]\n  NOT: [TransactionSubscriptionWhereInput!]\n}\n\ninput TransactionUpdateInput {\n  wallet: WalletUpdateOneRequiredWithoutTransactionsInput\n  value: Int\n  type: TRANSACTION_TYPE\n  description: String\n  tags: TransactionUpdatetagsInput\n}\n\ninput TransactionUpdateManyDataInput {\n  value: Int\n  type: TRANSACTION_TYPE\n  description: String\n  tags: TransactionUpdatetagsInput\n}\n\ninput TransactionUpdateManyMutationInput {\n  value: Int\n  type: TRANSACTION_TYPE\n  description: String\n  tags: TransactionUpdatetagsInput\n}\n\ninput TransactionUpdateManyWithoutWalletInput {\n  create: [TransactionCreateWithoutWalletInput!]\n  delete: [TransactionWhereUniqueInput!]\n  connect: [TransactionWhereUniqueInput!]\n  set: [TransactionWhereUniqueInput!]\n  disconnect: [TransactionWhereUniqueInput!]\n  update: [TransactionUpdateWithWhereUniqueWithoutWalletInput!]\n  upsert: [TransactionUpsertWithWhereUniqueWithoutWalletInput!]\n  deleteMany: [TransactionScalarWhereInput!]\n  updateMany: [TransactionUpdateManyWithWhereNestedInput!]\n}\n\ninput TransactionUpdateManyWithWhereNestedInput {\n  where: TransactionScalarWhereInput!\n  data: TransactionUpdateManyDataInput!\n}\n\ninput TransactionUpdatetagsInput {\n  set: [String!]\n}\n\ninput TransactionUpdateWithoutWalletDataInput {\n  value: Int\n  type: TRANSACTION_TYPE\n  description: String\n  tags: TransactionUpdatetagsInput\n}\n\ninput TransactionUpdateWithWhereUniqueWithoutWalletInput {\n  where: TransactionWhereUniqueInput!\n  data: TransactionUpdateWithoutWalletDataInput!\n}\n\ninput TransactionUpsertWithWhereUniqueWithoutWalletInput {\n  where: TransactionWhereUniqueInput!\n  update: TransactionUpdateWithoutWalletDataInput!\n  create: TransactionCreateWithoutWalletInput!\n}\n\ninput TransactionWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  wallet: WalletWhereInput\n  value: Int\n  value_not: Int\n  value_in: [Int!]\n  value_not_in: [Int!]\n  value_lt: Int\n  value_lte: Int\n  value_gt: Int\n  value_gte: Int\n  type: TRANSACTION_TYPE\n  type_not: TRANSACTION_TYPE\n  type_in: [TRANSACTION_TYPE!]\n  type_not_in: [TRANSACTION_TYPE!]\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  performedAt: DateTime\n  performedAt_not: DateTime\n  performedAt_in: [DateTime!]\n  performedAt_not_in: [DateTime!]\n  performedAt_lt: DateTime\n  performedAt_lte: DateTime\n  performedAt_gt: DateTime\n  performedAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  AND: [TransactionWhereInput!]\n  OR: [TransactionWhereInput!]\n  NOT: [TransactionWhereInput!]\n}\n\ninput TransactionWhereUniqueInput {\n  id: ID\n}\n\ntype User {\n  id: ID!\n  name: String\n  email: String!\n  token: String\n  tokenExpiry: Float\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  wallets(where: WalletWhereInput, orderBy: WalletOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Wallet!]\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  id: ID\n  name: String\n  email: String!\n  token: String\n  tokenExpiry: Float\n  wallets: WalletCreateManyWithoutUserInput\n}\n\ninput UserCreateOneWithoutWalletsInput {\n  create: UserCreateWithoutWalletsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutWalletsInput {\n  id: ID\n  name: String\n  email: String!\n  token: String\n  tokenExpiry: Float\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  email_ASC\n  email_DESC\n  token_ASC\n  token_DESC\n  tokenExpiry_ASC\n  tokenExpiry_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String\n  email: String!\n  token: String\n  tokenExpiry: Float\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n}\n\ninput UserUpdateInput {\n  name: String\n  email: String\n  token: String\n  tokenExpiry: Float\n  wallets: WalletUpdateManyWithoutUserInput\n}\n\ninput UserUpdateManyMutationInput {\n  name: String\n  email: String\n  token: String\n  tokenExpiry: Float\n}\n\ninput UserUpdateOneRequiredWithoutWalletsInput {\n  create: UserCreateWithoutWalletsInput\n  update: UserUpdateWithoutWalletsDataInput\n  upsert: UserUpsertWithoutWalletsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateWithoutWalletsDataInput {\n  name: String\n  email: String\n  token: String\n  tokenExpiry: Float\n}\n\ninput UserUpsertWithoutWalletsInput {\n  update: UserUpdateWithoutWalletsDataInput!\n  create: UserCreateWithoutWalletsInput!\n}\n\ninput UserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  token: String\n  token_not: String\n  token_in: [String!]\n  token_not_in: [String!]\n  token_lt: String\n  token_lte: String\n  token_gt: String\n  token_gte: String\n  token_contains: String\n  token_not_contains: String\n  token_starts_with: String\n  token_not_starts_with: String\n  token_ends_with: String\n  token_not_ends_with: String\n  tokenExpiry: Float\n  tokenExpiry_not: Float\n  tokenExpiry_in: [Float!]\n  tokenExpiry_not_in: [Float!]\n  tokenExpiry_lt: Float\n  tokenExpiry_lte: Float\n  tokenExpiry_gt: Float\n  tokenExpiry_gte: Float\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  wallets_every: WalletWhereInput\n  wallets_some: WalletWhereInput\n  wallets_none: WalletWhereInput\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n  token: String\n}\n\ntype Wallet {\n  id: ID!\n  user: User!\n  name: String!\n  description: String\n  transactions(where: TransactionWhereInput, orderBy: TransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Transaction!]\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype WalletConnection {\n  pageInfo: PageInfo!\n  edges: [WalletEdge]!\n  aggregate: AggregateWallet!\n}\n\ninput WalletCreateInput {\n  id: ID\n  user: UserCreateOneWithoutWalletsInput!\n  name: String!\n  description: String\n  transactions: TransactionCreateManyWithoutWalletInput\n}\n\ninput WalletCreateManyWithoutUserInput {\n  create: [WalletCreateWithoutUserInput!]\n  connect: [WalletWhereUniqueInput!]\n}\n\ninput WalletCreateOneWithoutTransactionsInput {\n  create: WalletCreateWithoutTransactionsInput\n  connect: WalletWhereUniqueInput\n}\n\ninput WalletCreateWithoutTransactionsInput {\n  id: ID\n  user: UserCreateOneWithoutWalletsInput!\n  name: String!\n  description: String\n}\n\ninput WalletCreateWithoutUserInput {\n  id: ID\n  name: String!\n  description: String\n  transactions: TransactionCreateManyWithoutWalletInput\n}\n\ntype WalletEdge {\n  node: Wallet!\n  cursor: String!\n}\n\nenum WalletOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  description_ASC\n  description_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype WalletPreviousValues {\n  id: ID!\n  name: String!\n  description: String\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ninput WalletScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  AND: [WalletScalarWhereInput!]\n  OR: [WalletScalarWhereInput!]\n  NOT: [WalletScalarWhereInput!]\n}\n\ntype WalletSubscriptionPayload {\n  mutation: MutationType!\n  node: Wallet\n  updatedFields: [String!]\n  previousValues: WalletPreviousValues\n}\n\ninput WalletSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: WalletWhereInput\n  AND: [WalletSubscriptionWhereInput!]\n  OR: [WalletSubscriptionWhereInput!]\n  NOT: [WalletSubscriptionWhereInput!]\n}\n\ninput WalletUpdateInput {\n  user: UserUpdateOneRequiredWithoutWalletsInput\n  name: String\n  description: String\n  transactions: TransactionUpdateManyWithoutWalletInput\n}\n\ninput WalletUpdateManyDataInput {\n  name: String\n  description: String\n}\n\ninput WalletUpdateManyMutationInput {\n  name: String\n  description: String\n}\n\ninput WalletUpdateManyWithoutUserInput {\n  create: [WalletCreateWithoutUserInput!]\n  delete: [WalletWhereUniqueInput!]\n  connect: [WalletWhereUniqueInput!]\n  set: [WalletWhereUniqueInput!]\n  disconnect: [WalletWhereUniqueInput!]\n  update: [WalletUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [WalletUpsertWithWhereUniqueWithoutUserInput!]\n  deleteMany: [WalletScalarWhereInput!]\n  updateMany: [WalletUpdateManyWithWhereNestedInput!]\n}\n\ninput WalletUpdateManyWithWhereNestedInput {\n  where: WalletScalarWhereInput!\n  data: WalletUpdateManyDataInput!\n}\n\ninput WalletUpdateOneRequiredWithoutTransactionsInput {\n  create: WalletCreateWithoutTransactionsInput\n  update: WalletUpdateWithoutTransactionsDataInput\n  upsert: WalletUpsertWithoutTransactionsInput\n  connect: WalletWhereUniqueInput\n}\n\ninput WalletUpdateWithoutTransactionsDataInput {\n  user: UserUpdateOneRequiredWithoutWalletsInput\n  name: String\n  description: String\n}\n\ninput WalletUpdateWithoutUserDataInput {\n  name: String\n  description: String\n  transactions: TransactionUpdateManyWithoutWalletInput\n}\n\ninput WalletUpdateWithWhereUniqueWithoutUserInput {\n  where: WalletWhereUniqueInput!\n  data: WalletUpdateWithoutUserDataInput!\n}\n\ninput WalletUpsertWithoutTransactionsInput {\n  update: WalletUpdateWithoutTransactionsDataInput!\n  create: WalletCreateWithoutTransactionsInput!\n}\n\ninput WalletUpsertWithWhereUniqueWithoutUserInput {\n  where: WalletWhereUniqueInput!\n  update: WalletUpdateWithoutUserDataInput!\n  create: WalletCreateWithoutUserInput!\n}\n\ninput WalletWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  user: UserWhereInput\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  transactions_every: TransactionWhereInput\n  transactions_some: TransactionWhereInput\n  transactions_none: TransactionWhereInput\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  AND: [WalletWhereInput!]\n  OR: [WalletWhereInput!]\n  NOT: [WalletWhereInput!]\n}\n\ninput WalletWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 23,
      "containsCycle": true,
      "numDefinitions": 79
    }
  ],
  "metrics": {
    "created_at": "2018-06-26T03:30:14Z",
    "updated_at": "2019-07-13T19:35:39Z",
    "pushed_at": "2019-07-13T19:35:40Z",
    "issues": 0,
    "watchers": 2,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 4,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 4,
    "releases": 0,
    "stargazers": 5
  }
}