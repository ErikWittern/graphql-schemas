{
  "repo_name": "Anon-Server",
  "repo_full_name": "rednithin/anon-server",
  "repo_owner": "rednithin",
  "repo_description": "Anon Server using GraphQL Yoga and Prisma",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "prisma.graphql",
      "sha": "7f12f356c04bceebf0478398fff6acf2548a0f32",
      "url": "https://api.github.com/repositories/158572002/contents/prisma.graphql?ref=f26311df053a8d2e4347a3468fea11bbcc5e9006",
      "git_url": "https://api.github.com/repositories/158572002/git/blobs/7f12f356c04bceebf0478398fff6acf2548a0f32",
      "html_url": "https://github.com/rednithin/Anon-Server/blob/f26311df053a8d2e4347a3468fea11bbcc5e9006/prisma.graphql",
      "content": "# source: http://localhost:4466\n# timestamp: Sat Dec 08 2018 07:23:11 GMT+0530 (India Standard Time)\n\ntype AggregateCompany {\n  count: Int!\n}\n\ntype AggregateQuestion {\n  count: Int!\n}\n\ntype AggregateResponse {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\ntype Company implements Node {\n  id: ID!\n  email: String!\n  name: String!\n  password: String!\n  description: String!\n  questions(where: QuestionWhereInput, orderBy: QuestionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Question!]\n  resetToken: String\n  resetTokenExpiry: Float\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype CompanyConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [CompanyEdge]!\n  aggregate: AggregateCompany!\n}\n\ninput CompanyCreateInput {\n  email: String!\n  name: String!\n  password: String!\n  description: String!\n  resetToken: String\n  resetTokenExpiry: Float\n  questions: QuestionCreateManyWithoutCompanyInput\n}\n\ninput CompanyCreateOneWithoutQuestionsInput {\n  create: CompanyCreateWithoutQuestionsInput\n  connect: CompanyWhereUniqueInput\n}\n\ninput CompanyCreateWithoutQuestionsInput {\n  email: String!\n  name: String!\n  password: String!\n  description: String!\n  resetToken: String\n  resetTokenExpiry: Float\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CompanyEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Company!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum CompanyOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  name_ASC\n  name_DESC\n  password_ASC\n  password_DESC\n  description_ASC\n  description_DESC\n  resetToken_ASC\n  resetToken_DESC\n  resetTokenExpiry_ASC\n  resetTokenExpiry_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CompanyPreviousValues {\n  id: ID!\n  email: String!\n  name: String!\n  password: String!\n  description: String!\n  resetToken: String\n  resetTokenExpiry: Float\n}\n\ntype CompanySubscriptionPayload {\n  mutation: MutationType!\n  node: Company\n  updatedFields: [String!]\n  previousValues: CompanyPreviousValues\n}\n\ninput CompanySubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CompanySubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CompanySubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CompanySubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CompanyWhereInput\n}\n\ninput CompanyUpdateInput {\n  email: String\n  name: String\n  password: String\n  description: String\n  resetToken: String\n  resetTokenExpiry: Float\n  questions: QuestionUpdateManyWithoutCompanyInput\n}\n\ninput CompanyUpdateManyMutationInput {\n  email: String\n  name: String\n  password: String\n  description: String\n  resetToken: String\n  resetTokenExpiry: Float\n}\n\ninput CompanyUpdateOneRequiredWithoutQuestionsInput {\n  create: CompanyCreateWithoutQuestionsInput\n  connect: CompanyWhereUniqueInput\n  update: CompanyUpdateWithoutQuestionsDataInput\n  upsert: CompanyUpsertWithoutQuestionsInput\n}\n\ninput CompanyUpdateWithoutQuestionsDataInput {\n  email: String\n  name: String\n  password: String\n  description: String\n  resetToken: String\n  resetTokenExpiry: Float\n}\n\ninput CompanyUpsertWithoutQuestionsInput {\n  update: CompanyUpdateWithoutQuestionsDataInput!\n  create: CompanyCreateWithoutQuestionsInput!\n}\n\ninput CompanyWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CompanyWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CompanyWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CompanyWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  email: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  email_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  email_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  email_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  email_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  email_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  email_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  email_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  email_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  email_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  email_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  email_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  email_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  email_not_ends_with: String\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  password: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  password_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  password_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  password_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  password_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  password_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  password_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  password_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  password_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  password_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  password_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  password_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  password_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  password_not_ends_with: String\n  description: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  description_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  description_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  description_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  description_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  description_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  description_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  description_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  description_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  description_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  description_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  description_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  description_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  description_not_ends_with: String\n  resetToken: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  resetToken_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  resetToken_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  resetToken_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  resetToken_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  resetToken_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  resetToken_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  resetToken_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  resetToken_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  resetToken_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  resetToken_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  resetToken_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  resetToken_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  resetToken_not_ends_with: String\n  resetTokenExpiry: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  resetTokenExpiry_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  resetTokenExpiry_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  resetTokenExpiry_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  resetTokenExpiry_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  resetTokenExpiry_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  resetTokenExpiry_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  resetTokenExpiry_gte: Float\n  questions_every: QuestionWhereInput\n  questions_some: QuestionWhereInput\n  questions_none: QuestionWhereInput\n}\n\ninput CompanyWhereUniqueInput {\n  id: ID\n  email: String\n}\n\n\"\"\"Raw JSON value\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createResponse(data: ResponseCreateInput!): Response!\n  createQuestion(data: QuestionCreateInput!): Question!\n  createCompany(data: CompanyCreateInput!): Company!\n  updateResponse(data: ResponseUpdateInput!, where: ResponseWhereUniqueInput!): Response\n  updateQuestion(data: QuestionUpdateInput!, where: QuestionWhereUniqueInput!): Question\n  updateCompany(data: CompanyUpdateInput!, where: CompanyWhereUniqueInput!): Company\n  deleteResponse(where: ResponseWhereUniqueInput!): Response\n  deleteQuestion(where: QuestionWhereUniqueInput!): Question\n  deleteCompany(where: CompanyWhereUniqueInput!): Company\n  upsertResponse(where: ResponseWhereUniqueInput!, create: ResponseCreateInput!, update: ResponseUpdateInput!): Response!\n  upsertQuestion(where: QuestionWhereUniqueInput!, create: QuestionCreateInput!, update: QuestionUpdateInput!): Question!\n  upsertCompany(where: CompanyWhereUniqueInput!, create: CompanyCreateInput!, update: CompanyUpdateInput!): Company!\n  updateManyResponses(data: ResponseUpdateManyMutationInput!, where: ResponseWhereInput): BatchPayload!\n  updateManyQuestions(data: QuestionUpdateManyMutationInput!, where: QuestionWhereInput): BatchPayload!\n  updateManyCompanies(data: CompanyUpdateManyMutationInput!, where: CompanyWhereInput): BatchPayload!\n  deleteManyResponses(where: ResponseWhereInput): BatchPayload!\n  deleteManyQuestions(where: QuestionWhereInput): BatchPayload!\n  deleteManyCompanies(where: CompanyWhereInput): BatchPayload!\n  executeRaw(database: PrismaDatabase, query: String!): Json!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\nenum PrismaDatabase {\n  default\n}\n\ntype Query {\n  responses(where: ResponseWhereInput, orderBy: ResponseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Response]!\n  questions(where: QuestionWhereInput, orderBy: QuestionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Question]!\n  companies(where: CompanyWhereInput, orderBy: CompanyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Company]!\n  response(where: ResponseWhereUniqueInput!): Response\n  question(where: QuestionWhereUniqueInput!): Question\n  company(where: CompanyWhereUniqueInput!): Company\n  responsesConnection(where: ResponseWhereInput, orderBy: ResponseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ResponseConnection!\n  questionsConnection(where: QuestionWhereInput, orderBy: QuestionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): QuestionConnection!\n  companiesConnection(where: CompanyWhereInput, orderBy: CompanyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CompanyConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Question implements Node {\n  id: ID!\n  query: String!\n  isPublic: Boolean!\n  responses(where: ResponseWhereInput, orderBy: ResponseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Response!]\n  company: Company!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype QuestionConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [QuestionEdge]!\n  aggregate: AggregateQuestion!\n}\n\ninput QuestionCreateInput {\n  query: String!\n  isPublic: Boolean!\n  responses: ResponseCreateManyWithoutQuestionInput\n  company: CompanyCreateOneWithoutQuestionsInput!\n}\n\ninput QuestionCreateManyWithoutCompanyInput {\n  create: [QuestionCreateWithoutCompanyInput!]\n  connect: [QuestionWhereUniqueInput!]\n}\n\ninput QuestionCreateOneWithoutResponsesInput {\n  create: QuestionCreateWithoutResponsesInput\n  connect: QuestionWhereUniqueInput\n}\n\ninput QuestionCreateWithoutCompanyInput {\n  query: String!\n  isPublic: Boolean!\n  responses: ResponseCreateManyWithoutQuestionInput\n}\n\ninput QuestionCreateWithoutResponsesInput {\n  query: String!\n  isPublic: Boolean!\n  company: CompanyCreateOneWithoutQuestionsInput!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype QuestionEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Question!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum QuestionOrderByInput {\n  id_ASC\n  id_DESC\n  query_ASC\n  query_DESC\n  isPublic_ASC\n  isPublic_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype QuestionPreviousValues {\n  id: ID!\n  query: String!\n  isPublic: Boolean!\n}\n\ninput QuestionScalarWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [QuestionScalarWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [QuestionScalarWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [QuestionScalarWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  query: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  query_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  query_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  query_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  query_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  query_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  query_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  query_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  query_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  query_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  query_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  query_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  query_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  query_not_ends_with: String\n  isPublic: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  isPublic_not: Boolean\n}\n\ntype QuestionSubscriptionPayload {\n  mutation: MutationType!\n  node: Question\n  updatedFields: [String!]\n  previousValues: QuestionPreviousValues\n}\n\ninput QuestionSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [QuestionSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [QuestionSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [QuestionSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: QuestionWhereInput\n}\n\ninput QuestionUpdateInput {\n  query: String\n  isPublic: Boolean\n  responses: ResponseUpdateManyWithoutQuestionInput\n  company: CompanyUpdateOneRequiredWithoutQuestionsInput\n}\n\ninput QuestionUpdateManyDataInput {\n  query: String\n  isPublic: Boolean\n}\n\ninput QuestionUpdateManyMutationInput {\n  query: String\n  isPublic: Boolean\n}\n\ninput QuestionUpdateManyWithoutCompanyInput {\n  create: [QuestionCreateWithoutCompanyInput!]\n  connect: [QuestionWhereUniqueInput!]\n  disconnect: [QuestionWhereUniqueInput!]\n  delete: [QuestionWhereUniqueInput!]\n  update: [QuestionUpdateWithWhereUniqueWithoutCompanyInput!]\n  updateMany: [QuestionUpdateManyWithWhereNestedInput!]\n  deleteMany: [QuestionScalarWhereInput!]\n  upsert: [QuestionUpsertWithWhereUniqueWithoutCompanyInput!]\n}\n\ninput QuestionUpdateManyWithWhereNestedInput {\n  where: QuestionScalarWhereInput!\n  data: QuestionUpdateManyDataInput!\n}\n\ninput QuestionUpdateOneRequiredWithoutResponsesInput {\n  create: QuestionCreateWithoutResponsesInput\n  connect: QuestionWhereUniqueInput\n  update: QuestionUpdateWithoutResponsesDataInput\n  upsert: QuestionUpsertWithoutResponsesInput\n}\n\ninput QuestionUpdateWithoutCompanyDataInput {\n  query: String\n  isPublic: Boolean\n  responses: ResponseUpdateManyWithoutQuestionInput\n}\n\ninput QuestionUpdateWithoutResponsesDataInput {\n  query: String\n  isPublic: Boolean\n  company: CompanyUpdateOneRequiredWithoutQuestionsInput\n}\n\ninput QuestionUpdateWithWhereUniqueWithoutCompanyInput {\n  where: QuestionWhereUniqueInput!\n  data: QuestionUpdateWithoutCompanyDataInput!\n}\n\ninput QuestionUpsertWithoutResponsesInput {\n  update: QuestionUpdateWithoutResponsesDataInput!\n  create: QuestionCreateWithoutResponsesInput!\n}\n\ninput QuestionUpsertWithWhereUniqueWithoutCompanyInput {\n  where: QuestionWhereUniqueInput!\n  update: QuestionUpdateWithoutCompanyDataInput!\n  create: QuestionCreateWithoutCompanyInput!\n}\n\ninput QuestionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [QuestionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [QuestionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [QuestionWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  query: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  query_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  query_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  query_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  query_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  query_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  query_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  query_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  query_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  query_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  query_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  query_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  query_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  query_not_ends_with: String\n  isPublic: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  isPublic_not: Boolean\n  responses_every: ResponseWhereInput\n  responses_some: ResponseWhereInput\n  responses_none: ResponseWhereInput\n  company: CompanyWhereInput\n}\n\ninput QuestionWhereUniqueInput {\n  id: ID\n}\n\ntype Response implements Node {\n  id: ID!\n  response: String!\n  question: Question!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ResponseConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ResponseEdge]!\n  aggregate: AggregateResponse!\n}\n\ninput ResponseCreateInput {\n  response: String!\n  question: QuestionCreateOneWithoutResponsesInput!\n}\n\ninput ResponseCreateManyWithoutQuestionInput {\n  create: [ResponseCreateWithoutQuestionInput!]\n  connect: [ResponseWhereUniqueInput!]\n}\n\ninput ResponseCreateWithoutQuestionInput {\n  response: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ResponseEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Response!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum ResponseOrderByInput {\n  id_ASC\n  id_DESC\n  response_ASC\n  response_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ResponsePreviousValues {\n  id: ID!\n  response: String!\n}\n\ninput ResponseScalarWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ResponseScalarWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ResponseScalarWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ResponseScalarWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  response: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  response_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  response_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  response_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  response_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  response_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  response_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  response_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  response_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  response_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  response_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  response_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  response_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  response_not_ends_with: String\n}\n\ntype ResponseSubscriptionPayload {\n  mutation: MutationType!\n  node: Response\n  updatedFields: [String!]\n  previousValues: ResponsePreviousValues\n}\n\ninput ResponseSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ResponseSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ResponseSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ResponseSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ResponseWhereInput\n}\n\ninput ResponseUpdateInput {\n  response: String\n  question: QuestionUpdateOneRequiredWithoutResponsesInput\n}\n\ninput ResponseUpdateManyDataInput {\n  response: String\n}\n\ninput ResponseUpdateManyMutationInput {\n  response: String\n}\n\ninput ResponseUpdateManyWithoutQuestionInput {\n  create: [ResponseCreateWithoutQuestionInput!]\n  connect: [ResponseWhereUniqueInput!]\n  disconnect: [ResponseWhereUniqueInput!]\n  delete: [ResponseWhereUniqueInput!]\n  update: [ResponseUpdateWithWhereUniqueWithoutQuestionInput!]\n  updateMany: [ResponseUpdateManyWithWhereNestedInput!]\n  deleteMany: [ResponseScalarWhereInput!]\n  upsert: [ResponseUpsertWithWhereUniqueWithoutQuestionInput!]\n}\n\ninput ResponseUpdateManyWithWhereNestedInput {\n  where: ResponseScalarWhereInput!\n  data: ResponseUpdateManyDataInput!\n}\n\ninput ResponseUpdateWithoutQuestionDataInput {\n  response: String\n}\n\ninput ResponseUpdateWithWhereUniqueWithoutQuestionInput {\n  where: ResponseWhereUniqueInput!\n  data: ResponseUpdateWithoutQuestionDataInput!\n}\n\ninput ResponseUpsertWithWhereUniqueWithoutQuestionInput {\n  where: ResponseWhereUniqueInput!\n  update: ResponseUpdateWithoutQuestionDataInput!\n  create: ResponseCreateWithoutQuestionInput!\n}\n\ninput ResponseWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ResponseWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ResponseWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ResponseWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  response: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  response_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  response_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  response_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  response_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  response_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  response_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  response_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  response_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  response_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  response_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  response_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  response_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  response_not_ends_with: String\n  question: QuestionWhereInput\n}\n\ninput ResponseWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  response(where: ResponseSubscriptionWhereInput): ResponseSubscriptionPayload\n  question(where: QuestionSubscriptionWhereInput): QuestionSubscriptionPayload\n  company(where: CompanySubscriptionWhereInput): CompanySubscriptionPayload\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 23,
      "containsCycle": true,
      "numDefinitions": 77
    },
    {
      "name": "schema.graphql",
      "path": "src/schema.graphql",
      "sha": "f612ecec48fddf45ebf99c3816ca50403f5d8d3f",
      "url": "https://api.github.com/repositories/158572002/contents/src/schema.graphql?ref=932ae5a0a761b7e5becd496a801224e6fc48cbcb",
      "git_url": "https://api.github.com/repositories/158572002/git/blobs/f612ecec48fddf45ebf99c3816ca50403f5d8d3f",
      "html_url": "https://github.com/rednithin/Anon-Server/blob/932ae5a0a761b7e5becd496a801224e6fc48cbcb/src/schema.graphql",
      "content": "# import * from '../prisma.graphql'\n\ntype Response {\n  id: ID!\n  response: String!\n  question: Question!\n}\n\ntype Question {\n  id: ID!\n  query: String!\n  isPublic: Boolean!\n  responses: [Response!]!\n  company: Company!\n}\n\ntype Company {\n  id: ID!\n  email: String!\n  name: String!\n  password: String!\n  description: String!\n  questions: [Question!]!\n}\n\ntype Query {\n  me: Company\n  signin(email: String!, password: String!): Company!\n  questions: [Question]!\n  question(questionID: ID!): Question!\n}\n\ntype Mutation {\n  signup(\n    name: String!\n    description: String!\n    email: String!\n    password: String!\n  ): Company!\n  addQuestion(query: String!, isPublic: Boolean!): Question!\n  addResponse(response: String!, questionID: ID!): Response!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 5,
      "containsCycle": true,
      "numDefinitions": 5
    }
  ],
  "metrics": {
    "created_at": "2018-11-21T15:51:14Z",
    "updated_at": "2018-12-08T01:58:26Z",
    "pushed_at": "2018-12-08T01:58:25Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}