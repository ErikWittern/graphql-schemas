{
  "repo_name": "eco-help",
  "repo_full_name": "101gram/eco-help",
  "repo_owner": "101gram",
  "repo_description": "A website that helps people unite to keep their habitat clean.",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "src/common/schema.graphql",
      "sha": "5bb9b4faf4c474ee0a29a6c35a84a795c468a9a3",
      "url": "https://api.github.com/repositories/172222512/contents/src/common/schema.graphql?ref=1cfb298cd711af3b04e0131a805969dab169f333",
      "git_url": "https://api.github.com/repositories/172222512/git/blobs/5bb9b4faf4c474ee0a29a6c35a84a795c468a9a3",
      "html_url": "https://github.com/101gram/eco-help/blob/1cfb298cd711af3b04e0131a805969dab169f333/src/common/schema.graphql",
      "content": "# -----------------------------------------------\n# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!\n# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!\n# -----------------------------------------------\n\ntype Circle {\n  center: GeoPoint!\n  radius: Float!\n}\n\ninput CreateCircleRequest {\n  center: CreateGeoPointRequest!\n  radius: Float!\n}\n\ninput CreateEventPointRequest {\n  location: CreateGeoPointRequest!\n  description: String!\n  budget: Float\n  expectedMembers: Float!\n  startDate: DateTime!\n}\n\ninput CreateGeoPointRequest {\n  lat: Float!\n  lon: Float!\n}\n\n# The javascript `Date` as string. Type represents date and time as the ISO Date string.\nscalar DateTime\n\ntype EventPoint {\n  id: ObjectId!\n  location: GeoPoint!\n  description: String!\n  photoUrl: String\n  creatorId: ObjectId!\n  currentMembers: Int!\n  expectedMembers: Int!\n  budget: Float!\n  startDate: DateTime!\n  publishDate: DateTime!\n  creator: User!\n}\n\ntype GeoPoint {\n  lat: Float!\n  lon: Float!\n}\n\ninput LoginRequest {\n  login: String!\n  password: String!\n}\n\ntype LoginResponse {\n  jwt: String!\n  user: User!\n}\n\ntype Mutation {\n  login(req: LoginRequest!): LoginResponse\n  register(req: RegisterRequest!): LoginResponse!\n  createEventPoint(req: CreateEventPointRequest!): EventPoint!\n  updateEventPoint(req: UpdateEventPointRequest!): EventPoint!\n  deleteEventPoint(id: ObjectId!): EventPoint!\n  assignEventPoint(id: ObjectId!): EventPoint!\n  leaveEventPoint(id: ObjectId!): EventPoint!\n}\n\n# Bson ObjectId unique identifier (hexadecimal string).\nscalar ObjectId\n\ntype Query {\n  getEventPoint(id: ObjectId!): EventPoint!\n  getAllEventPoints: [EventPoint!]!\n  getUser(id: ObjectId!): User!\n  getMe: User!\n  updateMe(req: UpdateMeRequest!): User!\n}\n\ninput RegisterRequest {\n  targetArea: CreateCircleRequest!\n  fullname: String!\n  login: String!\n  password: String!\n}\n\ninput UpdateCircleRequest {\n  center: UpdateGeoPointRequest!\n  radius: Float!\n}\n\ninput UpdateEventPointRequest {\n  id: ObjectId!\n  location: UpdateGeoPointRequest!\n  description: String!\n  budget: Float\n  expectedMembers: Float!\n  startDate: DateTime!\n  photoUrl: String!\n}\n\ninput UpdateGeoPointRequest {\n  lat: Float!\n  lon: Float!\n}\n\ninput UpdateMeRequest {\n  targetArea: UpdateCircleRequest\n  avaUrl: String\n  fullname: String\n  tgName: String\n}\n\ntype User {\n  id: ObjectId!\n  role: UserRole!\n  login: String!\n  registrationDate: DateTime!\n  fullname: String!\n  notification: Boolean!\n  targetArea: Circle!\n  avaUrl: String\n  tgChatId: String\n  tgName: String\n  assignedEvents: [ObjectId!]!\n}\n\n# Identifies user access level\nenum UserRole {\n  Admin\n  Guest\n  Regular\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 7,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 19
    }
  ],
  "metrics": {
    "created_at": "2019-02-23T14:17:55Z",
    "updated_at": "2019-02-24T07:09:24Z",
    "pushed_at": "2019-02-24T07:09:21Z",
    "issues": 0,
    "watchers": 2,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 1
  }
}