{
  "repo_name": "strapi-docker-example",
  "repo_full_name": "mayurgaud/strapi-docker-example",
  "repo_owner": "mayurgaud",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "strapi-app/plugins/graphql/config/generated/schema.graphql",
      "sha": "a834a43ac15a9f404f60a54a7bdc98712fcbbbc8",
      "url": "https://api.github.com/repositories/142384681/contents/strapi-app/plugins/graphql/config/generated/schema.graphql?ref=c5018057b701f242797eb8cd9c173714409bf2db",
      "git_url": "https://api.github.com/repositories/142384681/git/blobs/a834a43ac15a9f404f60a54a7bdc98712fcbbbc8",
      "html_url": "https://github.com/mayurgaud/strapi-docker-example/blob/c5018057b701f242797eb8cd9c173714409bf2db/strapi-app/plugins/graphql/config/generated/schema.graphql",
      "content": "\"\"\"\nThe `DateTime` scalar represents a date and time following the ISO 8601 standard\n\"\"\"\nscalar DateTime\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\"\"\"\nscalar JSON\n\nunion Morph = Product | UploadFile | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsUser\n\ntype Product {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  product_id: Int\n  product_name: String\n}\n\ntype Query {\n  product(id: ID!): Product\n  products(sort: String, limit: Int, start: Int, where: JSON): [Product]\n  files(sort: String, limit: Int, start: Int, where: JSON): [UploadFile]\n  role(id: ID!): UsersPermissionsRole\n\n  \"\"\"\n  Retrieve all the existing roles. You can't apply filters on this query.\n  \"\"\"\n  roles(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsRole]\n  user(id: ID!): UsersPermissionsUser\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n}\n\ntype UploadFile {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  hash: String!\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  related(sort: String, limit: Int, start: Int, where: JSON): [Morph]\n}\n\ntype UsersPermissionsPermission {\n  _id: ID!\n  type: String!\n  controller: String!\n  action: String!\n  enabled: Boolean!\n  policy: String\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n  permissions(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsPermission]\n}\n\ntype UsersPermissionsUser {\n  _id: ID!\n  username: String!\n  email: String!\n  provider: String\n  role: UsersPermissionsRole\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 6,
      "containsCycle": true,
      "numDefinitions": 9
    }
  ],
  "metrics": {
    "created_at": "2018-07-26T03:37:38Z",
    "updated_at": "2018-07-26T03:41:04Z",
    "pushed_at": "2018-07-26T03:40:56Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}