{
  "repo_name": "vendure",
  "repo_full_name": "vendure-ecommerce/vendure",
  "repo_owner": "vendure-ecommerce",
  "repo_description": "A headless GraphQL ecommerce framework for the modern web",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "auth.api.graphql",
      "path": "packages/core/src/api/schema/admin-api/auth.api.graphql",
      "sha": "e2de3c97e46db8ce87aa86c554bd9e88dd683a21",
      "url": "https://api.github.com/repositories/136938012/contents/packages/core/src/api/schema/admin-api/auth.api.graphql?ref=6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9",
      "git_url": "https://api.github.com/repositories/136938012/git/blobs/e2de3c97e46db8ce87aa86c554bd9e88dd683a21",
      "html_url": "https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/admin-api/auth.api.graphql",
      "content": "type Query {\n    me: CurrentUser\n}\n\ntype Mutation {\n    login(username: String!, password: String!, rememberMe: Boolean): LoginResult!\n    logout: Boolean!\n}\n",
      "containsQueryType": true,
      "merged": {
        "mergedContent": "# https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/admin-api/auth.api.graphql:\ntype Query {\n    me: CurrentUser\n}\n\ntype Mutation {\n    login(username: String!, password: String!, rememberMe: Boolean): LoginResult!\n    logout: Boolean!\n}\n\n# https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/type/auth.type.graphql:\ntype LoginResult {\n    user: CurrentUser!\n}\n\ntype CurrentUser {\n    id: ID!\n    identifier: String!\n    channelTokens: [String!]!\n}\n",
        "mergedPaths": [
          "packages/core/src/api/schema/type/auth.type.graphql"
        ],
        "typesDefinedByMerge": [
          "LoginResult",
          "CurrentUser"
        ],
        "directivesDefinedByMerge": [],
        "validSchema": true,
        "contentDuplicate": false,
        "numObjectTypes": 4,
        "containsCycle": false,
        "polynomialLevel": 0,
        "numDefinitions": 4
      },
      "validSchema": false
    },
    {
      "name": "auth.type.graphql",
      "path": "packages/core/src/api/schema/type/auth.type.graphql",
      "sha": "93f6b6fa70fc493bc431d37df8e23309f5c7db1b",
      "url": "https://api.github.com/repositories/136938012/contents/packages/core/src/api/schema/type/auth.type.graphql?ref=6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9",
      "git_url": "https://api.github.com/repositories/136938012/git/blobs/93f6b6fa70fc493bc431d37df8e23309f5c7db1b",
      "html_url": "https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/type/auth.type.graphql",
      "content": "type LoginResult {\n    user: CurrentUser!\n}\n\ntype CurrentUser {\n    id: ID!\n    identifier: String!\n    channelTokens: [String!]!\n}\n",
      "containsQueryType": false,
      "validSchema": true,
      "contentDuplicate": false,
      "numDefinitions": 2
    },
    {
      "name": "asset.api.graphql",
      "path": "packages/core/src/api/schema/admin-api/asset.api.graphql",
      "sha": "7d6d9eb683d651368751a5fc4b9a9af7684bfe9b",
      "url": "https://api.github.com/repositories/136938012/contents/packages/core/src/api/schema/admin-api/asset.api.graphql?ref=6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9",
      "git_url": "https://api.github.com/repositories/136938012/git/blobs/7d6d9eb683d651368751a5fc4b9a9af7684bfe9b",
      "html_url": "https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/admin-api/asset.api.graphql",
      "content": "type Query {\n    assets(options: AssetListOptions): AssetList!\n    asset(id: ID!): Asset\n}\n\ntype Mutation {\n    \"Create a new Asset\"\n    createAssets(input: [CreateAssetInput!]!): [Asset!]!\n}\n\n# generated by generateListOptions function\ninput AssetListOptions\n\ninput CreateAssetInput {\n    file: Upload!\n}\n\n",
      "containsQueryType": true,
      "merged": {
        "mergedContent": "# https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/admin-api/asset.api.graphql:\ntype Query {\n    assets(options: AssetListOptions): AssetList!\n    asset(id: ID!): Asset\n}\n\ntype Mutation {\n    \"Create a new Asset\"\n    createAssets(input: [CreateAssetInput!]!): [Asset!]!\n}\n\n# generated by generateListOptions function\ninput AssetListOptions\n\ninput CreateAssetInput {\n    file: Upload!\n}\n\n\n# https://github.com/vendure-ecommerce/vendure/blob/f61ea111bc29f6507e73d0e2b16baa49e3cdbebb/packages/core/src/api/schema/type/asset.type.graphql:\ntype Asset implements Node {\n    id: ID!\n    createdAt: DateTime!\n    updatedAt: DateTime!\n    name: String!\n    type: AssetType!\n    fileSize: Int!\n    mimeType: String!\n    source: String!\n    preview: String!\n}\n\ntype AssetList implements PaginatedList {\n    items: [Asset!]!\n    totalItems: Int!\n}\n\nenum AssetType {\n    IMAGE,\n    VIDEO,\n    BINARY\n}\n\n# https://github.com/vendure-ecommerce/vendure/blob/fe5eedd2334ba94bed7330526a7be259e437ef78/packages/core/src/api/schema/common/common-types.graphql:\n# Third-party custom scalars\nscalar JSON\nscalar DateTime\nscalar Upload\n\nenum AdjustmentType {\n    TAX\n    PROMOTION\n    SHIPPING\n    REFUND\n    TAX_REFUND\n    PROMOTION_REFUND\n    SHIPPING_REFUND\n}\n\ntype Adjustment {\n    adjustmentSource: String!\n    type: AdjustmentType!\n    description: String!\n    amount: Int!\n}\n\n\"\"\"\nCertain entities allow arbitrary configuration arguments to be specified which can then\nbe set in the admin-ui and used in the business logic of the app. These are the valid\ndata types of such arguments. The data type influences:\n\n1. How the argument form field is rendered in the admin-ui\n2. The JavaScript type into which the value is coerced before being passed to the business logic.\n\n\"\"\"\nenum ConfigArgType {\n    PERCENTAGE\n    MONEY\n    INT\n    STRING\n    DATETIME\n    BOOLEAN\n    FACET_VALUE_IDS\n    STRING_OPERATOR\n}\n\ntype ConfigArg {\n    name: String!\n    type: ConfigArgType!\n    value: String\n}\n\ntype ConfigurableOperation {\n    code: String!\n    args: [ConfigArg!]!\n    description: String!\n}\n\nenum DeletionResult {\n    \"The entity was successfully deleted\"\n    DELETED\n    \"Deletion did not take place, reason given in message\"\n    NOT_DELETED\n}\n\ntype DeletionResponse {\n    result: DeletionResult!\n    message: String\n}\n\ninput ConfigArgInput {\n    name: String!\n    type: ConfigArgType!\n    value: String\n}\n\ninput ConfigurableOperationInput {\n    code: String!\n    arguments: [ConfigArgInput!]!\n}\n\ninterface PaginatedList {\n    items: [Node!]!\n    totalItems: Int!\n}\n\ninterface Node {\n    id: ID!\n}\n\nenum SortOrder {\n    ASC\n    DESC\n}\n\ninput StringOperators {\n    eq: String\n    contains: String\n}\n\ninput BooleanOperators {\n    eq: Boolean\n}\n\ninput NumberRange {\n    start: Float!\n    end: Float!\n}\n\ninput NumberOperators {\n    eq: Float\n    lt: Float\n    lte: Float\n    gt: Float\n    gte: Float\n    between: NumberRange\n}\n\ninput DateRange {\n    start: DateTime!\n    end: DateTime!\n}\n\ninput DateOperators {\n    eq: DateTime\n    before: DateTime\n    after: DateTime\n    between: DateRange\n}\n\ninput SearchInput {\n    term: String\n    facetIds: [String!]\n    collectionId: String\n    groupByProduct: Boolean\n    take: Int\n    skip: Int\n    sort: SearchResultSortParameter\n}\n\ninput SearchResultSortParameter {\n    name: SortOrder\n    price: SortOrder\n}\n\ninput CreateCustomerInput {\n    title: String\n    firstName: String!\n    lastName: String!\n    phoneNumber: String\n    emailAddress: String!\n}\n\ninput CreateAddressInput {\n    fullName: String\n    company: String\n    streetLine1: String!\n    streetLine2: String\n    city: String\n    province: String\n    postalCode: String\n    countryCode: String!\n    phoneNumber: String\n    defaultShippingAddress: Boolean\n    defaultBillingAddress: Boolean\n}\n\ninput UpdateAddressInput {\n    id: ID!\n    fullName: String\n    company: String\n    streetLine1: String\n    streetLine2: String\n    city: String\n    province: String\n    postalCode: String\n    countryCode: String\n    phoneNumber: String\n    defaultShippingAddress: Boolean\n    defaultBillingAddress: Boolean\n}\n",
        "mergedPaths": [
          "packages/core/src/api/schema/type/asset.type.graphql",
          "packages/core/src/api/schema/common/common-types.graphql"
        ],
        "typesDefinedByMerge": [
          "Asset",
          "AssetList",
          "DateTime",
          "Upload"
        ],
        "directivesDefinedByMerge": [],
        "validSchema": true,
        "contentDuplicate": false,
        "numObjectTypes": 8,
        "containsCycle": false,
        "polynomialLevel": 1,
        "numDefinitions": 33
      },
      "validSchema": false
    },
    {
      "name": "common-types.graphql",
      "path": "packages/core/src/api/schema/common/common-types.graphql",
      "sha": "de5b767e18562e7300d86a83ff466585eed976a8",
      "url": "https://api.github.com/repositories/136938012/contents/packages/core/src/api/schema/common/common-types.graphql?ref=fe5eedd2334ba94bed7330526a7be259e437ef78",
      "git_url": "https://api.github.com/repositories/136938012/git/blobs/de5b767e18562e7300d86a83ff466585eed976a8",
      "html_url": "https://github.com/vendure-ecommerce/vendure/blob/fe5eedd2334ba94bed7330526a7be259e437ef78/packages/core/src/api/schema/common/common-types.graphql",
      "content": "# Third-party custom scalars\nscalar JSON\nscalar DateTime\nscalar Upload\n\nenum AdjustmentType {\n    TAX\n    PROMOTION\n    SHIPPING\n    REFUND\n    TAX_REFUND\n    PROMOTION_REFUND\n    SHIPPING_REFUND\n}\n\ntype Adjustment {\n    adjustmentSource: String!\n    type: AdjustmentType!\n    description: String!\n    amount: Int!\n}\n\n\"\"\"\nCertain entities allow arbitrary configuration arguments to be specified which can then\nbe set in the admin-ui and used in the business logic of the app. These are the valid\ndata types of such arguments. The data type influences:\n\n1. How the argument form field is rendered in the admin-ui\n2. The JavaScript type into which the value is coerced before being passed to the business logic.\n\n\"\"\"\nenum ConfigArgType {\n    PERCENTAGE\n    MONEY\n    INT\n    STRING\n    DATETIME\n    BOOLEAN\n    FACET_VALUE_IDS\n    STRING_OPERATOR\n}\n\ntype ConfigArg {\n    name: String!\n    type: ConfigArgType!\n    value: String\n}\n\ntype ConfigurableOperation {\n    code: String!\n    args: [ConfigArg!]!\n    description: String!\n}\n\nenum DeletionResult {\n    \"The entity was successfully deleted\"\n    DELETED\n    \"Deletion did not take place, reason given in message\"\n    NOT_DELETED\n}\n\ntype DeletionResponse {\n    result: DeletionResult!\n    message: String\n}\n\ninput ConfigArgInput {\n    name: String!\n    type: ConfigArgType!\n    value: String\n}\n\ninput ConfigurableOperationInput {\n    code: String!\n    arguments: [ConfigArgInput!]!\n}\n\ninterface PaginatedList {\n    items: [Node!]!\n    totalItems: Int!\n}\n\ninterface Node {\n    id: ID!\n}\n\nenum SortOrder {\n    ASC\n    DESC\n}\n\ninput StringOperators {\n    eq: String\n    contains: String\n}\n\ninput BooleanOperators {\n    eq: Boolean\n}\n\ninput NumberRange {\n    start: Float!\n    end: Float!\n}\n\ninput NumberOperators {\n    eq: Float\n    lt: Float\n    lte: Float\n    gt: Float\n    gte: Float\n    between: NumberRange\n}\n\ninput DateRange {\n    start: DateTime!\n    end: DateTime!\n}\n\ninput DateOperators {\n    eq: DateTime\n    before: DateTime\n    after: DateTime\n    between: DateRange\n}\n\ninput SearchInput {\n    term: String\n    facetIds: [String!]\n    collectionId: String\n    groupByProduct: Boolean\n    take: Int\n    skip: Int\n    sort: SearchResultSortParameter\n}\n\ninput SearchResultSortParameter {\n    name: SortOrder\n    price: SortOrder\n}\n\ninput CreateCustomerInput {\n    title: String\n    firstName: String!\n    lastName: String!\n    phoneNumber: String\n    emailAddress: String!\n}\n\ninput CreateAddressInput {\n    fullName: String\n    company: String\n    streetLine1: String!\n    streetLine2: String\n    city: String\n    province: String\n    postalCode: String\n    countryCode: String!\n    phoneNumber: String\n    defaultShippingAddress: Boolean\n    defaultBillingAddress: Boolean\n}\n\ninput UpdateAddressInput {\n    id: ID!\n    fullName: String\n    company: String\n    streetLine1: String\n    streetLine2: String\n    city: String\n    province: String\n    postalCode: String\n    countryCode: String\n    phoneNumber: String\n    defaultShippingAddress: Boolean\n    defaultBillingAddress: Boolean\n}\n",
      "containsQueryType": false,
      "validSchema": true,
      "contentDuplicate": false,
      "numDefinitions": 26
    },
    {
      "name": "asset.type.graphql",
      "path": "packages/core/src/api/schema/type/asset.type.graphql",
      "sha": "34e9f55102a6d657240698003c0146ff097903cb",
      "url": "https://api.github.com/repositories/136938012/contents/packages/core/src/api/schema/type/asset.type.graphql?ref=f61ea111bc29f6507e73d0e2b16baa49e3cdbebb",
      "git_url": "https://api.github.com/repositories/136938012/git/blobs/34e9f55102a6d657240698003c0146ff097903cb",
      "html_url": "https://github.com/vendure-ecommerce/vendure/blob/f61ea111bc29f6507e73d0e2b16baa49e3cdbebb/packages/core/src/api/schema/type/asset.type.graphql",
      "content": "type Asset implements Node {\n    id: ID!\n    createdAt: DateTime!\n    updatedAt: DateTime!\n    name: String!\n    type: AssetType!\n    fileSize: Int!\n    mimeType: String!\n    source: String!\n    preview: String!\n}\n\ntype AssetList implements PaginatedList {\n    items: [Asset!]!\n    totalItems: Int!\n}\n\nenum AssetType {\n    IMAGE,\n    VIDEO,\n    BINARY\n}\n",
      "containsQueryType": false,
      "validSchema": false,
      "numDefinitions": 3
    },
    {
      "name": "tax-category.api.graphql",
      "path": "packages/core/src/api/schema/admin-api/tax-category.api.graphql",
      "sha": "e429fb93c7098691414dba7ff2f67e425c264937",
      "url": "https://api.github.com/repositories/136938012/contents/packages/core/src/api/schema/admin-api/tax-category.api.graphql?ref=6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9",
      "git_url": "https://api.github.com/repositories/136938012/git/blobs/e429fb93c7098691414dba7ff2f67e425c264937",
      "html_url": "https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/admin-api/tax-category.api.graphql",
      "content": "type Query {\n    taxCategories: [TaxCategory!]!\n    taxCategory(id: ID!): TaxCategory\n}\n\ntype Mutation {\n    \"Create a new TaxCategory\"\n    createTaxCategory(input: CreateTaxCategoryInput!): TaxCategory!\n\n    \"Update an existing TaxCategory\"\n    updateTaxCategory(input: UpdateTaxCategoryInput!): TaxCategory!\n}\n\ninput CreateTaxCategoryInput {\n    name: String!\n}\n\ninput UpdateTaxCategoryInput {\n    id: ID!\n    name: String\n}\n",
      "containsQueryType": true,
      "merged": {
        "mergedContent": "# https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/admin-api/tax-category.api.graphql:\ntype Query {\n    taxCategories: [TaxCategory!]!\n    taxCategory(id: ID!): TaxCategory\n}\n\ntype Mutation {\n    \"Create a new TaxCategory\"\n    createTaxCategory(input: CreateTaxCategoryInput!): TaxCategory!\n\n    \"Update an existing TaxCategory\"\n    updateTaxCategory(input: UpdateTaxCategoryInput!): TaxCategory!\n}\n\ninput CreateTaxCategoryInput {\n    name: String!\n}\n\ninput UpdateTaxCategoryInput {\n    id: ID!\n    name: String\n}\n\n# https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/type/tax-category.type.graphql:\ntype TaxCategory implements Node {\n    id: ID!\n    createdAt: DateTime!\n    updatedAt: DateTime!\n    name: String!\n}\n\n# https://github.com/vendure-ecommerce/vendure/blob/fe5eedd2334ba94bed7330526a7be259e437ef78/packages/core/src/api/schema/common/common-types.graphql:\n# Third-party custom scalars\nscalar JSON\nscalar DateTime\nscalar Upload\n\nenum AdjustmentType {\n    TAX\n    PROMOTION\n    SHIPPING\n    REFUND\n    TAX_REFUND\n    PROMOTION_REFUND\n    SHIPPING_REFUND\n}\n\ntype Adjustment {\n    adjustmentSource: String!\n    type: AdjustmentType!\n    description: String!\n    amount: Int!\n}\n\n\"\"\"\nCertain entities allow arbitrary configuration arguments to be specified which can then\nbe set in the admin-ui and used in the business logic of the app. These are the valid\ndata types of such arguments. The data type influences:\n\n1. How the argument form field is rendered in the admin-ui\n2. The JavaScript type into which the value is coerced before being passed to the business logic.\n\n\"\"\"\nenum ConfigArgType {\n    PERCENTAGE\n    MONEY\n    INT\n    STRING\n    DATETIME\n    BOOLEAN\n    FACET_VALUE_IDS\n    STRING_OPERATOR\n}\n\ntype ConfigArg {\n    name: String!\n    type: ConfigArgType!\n    value: String\n}\n\ntype ConfigurableOperation {\n    code: String!\n    args: [ConfigArg!]!\n    description: String!\n}\n\nenum DeletionResult {\n    \"The entity was successfully deleted\"\n    DELETED\n    \"Deletion did not take place, reason given in message\"\n    NOT_DELETED\n}\n\ntype DeletionResponse {\n    result: DeletionResult!\n    message: String\n}\n\ninput ConfigArgInput {\n    name: String!\n    type: ConfigArgType!\n    value: String\n}\n\ninput ConfigurableOperationInput {\n    code: String!\n    arguments: [ConfigArgInput!]!\n}\n\ninterface PaginatedList {\n    items: [Node!]!\n    totalItems: Int!\n}\n\ninterface Node {\n    id: ID!\n}\n\nenum SortOrder {\n    ASC\n    DESC\n}\n\ninput StringOperators {\n    eq: String\n    contains: String\n}\n\ninput BooleanOperators {\n    eq: Boolean\n}\n\ninput NumberRange {\n    start: Float!\n    end: Float!\n}\n\ninput NumberOperators {\n    eq: Float\n    lt: Float\n    lte: Float\n    gt: Float\n    gte: Float\n    between: NumberRange\n}\n\ninput DateRange {\n    start: DateTime!\n    end: DateTime!\n}\n\ninput DateOperators {\n    eq: DateTime\n    before: DateTime\n    after: DateTime\n    between: DateRange\n}\n\ninput SearchInput {\n    term: String\n    facetIds: [String!]\n    collectionId: String\n    groupByProduct: Boolean\n    take: Int\n    skip: Int\n    sort: SearchResultSortParameter\n}\n\ninput SearchResultSortParameter {\n    name: SortOrder\n    price: SortOrder\n}\n\ninput CreateCustomerInput {\n    title: String\n    firstName: String!\n    lastName: String!\n    phoneNumber: String\n    emailAddress: String!\n}\n\ninput CreateAddressInput {\n    fullName: String\n    company: String\n    streetLine1: String!\n    streetLine2: String\n    city: String\n    province: String\n    postalCode: String\n    countryCode: String!\n    phoneNumber: String\n    defaultShippingAddress: Boolean\n    defaultBillingAddress: Boolean\n}\n\ninput UpdateAddressInput {\n    id: ID!\n    fullName: String\n    company: String\n    streetLine1: String\n    streetLine2: String\n    city: String\n    province: String\n    postalCode: String\n    countryCode: String\n    phoneNumber: String\n    defaultShippingAddress: Boolean\n    defaultBillingAddress: Boolean\n}\n",
        "mergedPaths": [
          "packages/core/src/api/schema/type/tax-category.type.graphql",
          "packages/core/src/api/schema/common/common-types.graphql"
        ],
        "typesDefinedByMerge": [
          "TaxCategory",
          "DateTime"
        ],
        "directivesDefinedByMerge": [],
        "validSchema": true,
        "contentDuplicate": false,
        "numObjectTypes": 7,
        "containsCycle": false,
        "polynomialLevel": 1,
        "numDefinitions": 31
      },
      "validSchema": false
    },
    {
      "name": "tax-category.type.graphql",
      "path": "packages/core/src/api/schema/type/tax-category.type.graphql",
      "sha": "d523146eedb6bbdfcc649ba480f52612f4509a11",
      "url": "https://api.github.com/repositories/136938012/contents/packages/core/src/api/schema/type/tax-category.type.graphql?ref=6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9",
      "git_url": "https://api.github.com/repositories/136938012/git/blobs/d523146eedb6bbdfcc649ba480f52612f4509a11",
      "html_url": "https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/type/tax-category.type.graphql",
      "content": "type TaxCategory implements Node {\n    id: ID!\n    createdAt: DateTime!\n    updatedAt: DateTime!\n    name: String!\n}\n",
      "containsQueryType": false,
      "validSchema": false,
      "numDefinitions": 1
    },
    {
      "name": "payment-method.api.graphql",
      "path": "packages/core/src/api/schema/admin-api/payment-method.api.graphql",
      "sha": "fbb59061efc74911100ec494bd7a73c701f04f3c",
      "url": "https://api.github.com/repositories/136938012/contents/packages/core/src/api/schema/admin-api/payment-method.api.graphql?ref=6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9",
      "git_url": "https://api.github.com/repositories/136938012/git/blobs/fbb59061efc74911100ec494bd7a73c701f04f3c",
      "html_url": "https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/admin-api/payment-method.api.graphql",
      "content": "type Query {\n    paymentMethods(options: PaymentMethodListOptions): PaymentMethodList!\n    paymentMethod(id: ID!): PaymentMethod\n}\n\ntype Mutation {\n    \"Update an existing PaymentMethod\"\n    updatePaymentMethod(input: UpdatePaymentMethodInput!): PaymentMethod!\n}\n\ntype PaymentMethodList implements PaginatedList {\n    items: [PaymentMethod!]!\n    totalItems: Int!\n}\n\n# generated by generateListOptions function\ninput PaymentMethodListOptions\n\ninput UpdatePaymentMethodInput {\n    id: ID!\n    code: String\n    enabled: Boolean\n    configArgs: [ConfigArgInput!]\n}\n",
      "containsQueryType": true,
      "merged": {
        "mergedContent": "# https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/admin-api/payment-method.api.graphql:\ntype Query {\n    paymentMethods(options: PaymentMethodListOptions): PaymentMethodList!\n    paymentMethod(id: ID!): PaymentMethod\n}\n\ntype Mutation {\n    \"Update an existing PaymentMethod\"\n    updatePaymentMethod(input: UpdatePaymentMethodInput!): PaymentMethod!\n}\n\ntype PaymentMethodList implements PaginatedList {\n    items: [PaymentMethod!]!\n    totalItems: Int!\n}\n\n# generated by generateListOptions function\ninput PaymentMethodListOptions\n\ninput UpdatePaymentMethodInput {\n    id: ID!\n    code: String\n    enabled: Boolean\n    configArgs: [ConfigArgInput!]\n}\n\n# https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/type/payment-method.type.graphql:\ntype PaymentMethod implements Node {\n    id: ID!\n    createdAt: DateTime!\n    updatedAt: DateTime!\n    code: String!\n    enabled: Boolean!\n    configArgs: [ConfigArg!]!\n}\n\n# https://github.com/vendure-ecommerce/vendure/blob/fe5eedd2334ba94bed7330526a7be259e437ef78/packages/core/src/api/schema/common/common-types.graphql:\n# Third-party custom scalars\nscalar JSON\nscalar DateTime\nscalar Upload\n\nenum AdjustmentType {\n    TAX\n    PROMOTION\n    SHIPPING\n    REFUND\n    TAX_REFUND\n    PROMOTION_REFUND\n    SHIPPING_REFUND\n}\n\ntype Adjustment {\n    adjustmentSource: String!\n    type: AdjustmentType!\n    description: String!\n    amount: Int!\n}\n\n\"\"\"\nCertain entities allow arbitrary configuration arguments to be specified which can then\nbe set in the admin-ui and used in the business logic of the app. These are the valid\ndata types of such arguments. The data type influences:\n\n1. How the argument form field is rendered in the admin-ui\n2. The JavaScript type into which the value is coerced before being passed to the business logic.\n\n\"\"\"\nenum ConfigArgType {\n    PERCENTAGE\n    MONEY\n    INT\n    STRING\n    DATETIME\n    BOOLEAN\n    FACET_VALUE_IDS\n    STRING_OPERATOR\n}\n\ntype ConfigArg {\n    name: String!\n    type: ConfigArgType!\n    value: String\n}\n\ntype ConfigurableOperation {\n    code: String!\n    args: [ConfigArg!]!\n    description: String!\n}\n\nenum DeletionResult {\n    \"The entity was successfully deleted\"\n    DELETED\n    \"Deletion did not take place, reason given in message\"\n    NOT_DELETED\n}\n\ntype DeletionResponse {\n    result: DeletionResult!\n    message: String\n}\n\ninput ConfigArgInput {\n    name: String!\n    type: ConfigArgType!\n    value: String\n}\n\ninput ConfigurableOperationInput {\n    code: String!\n    arguments: [ConfigArgInput!]!\n}\n\ninterface PaginatedList {\n    items: [Node!]!\n    totalItems: Int!\n}\n\ninterface Node {\n    id: ID!\n}\n\nenum SortOrder {\n    ASC\n    DESC\n}\n\ninput StringOperators {\n    eq: String\n    contains: String\n}\n\ninput BooleanOperators {\n    eq: Boolean\n}\n\ninput NumberRange {\n    start: Float!\n    end: Float!\n}\n\ninput NumberOperators {\n    eq: Float\n    lt: Float\n    lte: Float\n    gt: Float\n    gte: Float\n    between: NumberRange\n}\n\ninput DateRange {\n    start: DateTime!\n    end: DateTime!\n}\n\ninput DateOperators {\n    eq: DateTime\n    before: DateTime\n    after: DateTime\n    between: DateRange\n}\n\ninput SearchInput {\n    term: String\n    facetIds: [String!]\n    collectionId: String\n    groupByProduct: Boolean\n    take: Int\n    skip: Int\n    sort: SearchResultSortParameter\n}\n\ninput SearchResultSortParameter {\n    name: SortOrder\n    price: SortOrder\n}\n\ninput CreateCustomerInput {\n    title: String\n    firstName: String!\n    lastName: String!\n    phoneNumber: String\n    emailAddress: String!\n}\n\ninput CreateAddressInput {\n    fullName: String\n    company: String\n    streetLine1: String!\n    streetLine2: String\n    city: String\n    province: String\n    postalCode: String\n    countryCode: String!\n    phoneNumber: String\n    defaultShippingAddress: Boolean\n    defaultBillingAddress: Boolean\n}\n\ninput UpdateAddressInput {\n    id: ID!\n    fullName: String\n    company: String\n    streetLine1: String\n    streetLine2: String\n    city: String\n    province: String\n    postalCode: String\n    countryCode: String\n    phoneNumber: String\n    defaultShippingAddress: Boolean\n    defaultBillingAddress: Boolean\n}\n",
        "mergedPaths": [
          "packages/core/src/api/schema/type/payment-method.type.graphql",
          "packages/core/src/api/schema/common/common-types.graphql"
        ],
        "typesDefinedByMerge": [
          "PaymentMethod",
          "DateTime",
          "ConfigArg",
          "ConfigArgInput"
        ],
        "directivesDefinedByMerge": [],
        "validSchema": true,
        "contentDuplicate": false,
        "numObjectTypes": 8,
        "containsCycle": false,
        "polynomialLevel": 2,
        "numDefinitions": 32
      },
      "validSchema": false
    },
    {
      "name": "payment-method.type.graphql",
      "path": "packages/core/src/api/schema/type/payment-method.type.graphql",
      "sha": "e9ad86e065dcfa07968628de7969043501e37e35",
      "url": "https://api.github.com/repositories/136938012/contents/packages/core/src/api/schema/type/payment-method.type.graphql?ref=6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9",
      "git_url": "https://api.github.com/repositories/136938012/git/blobs/e9ad86e065dcfa07968628de7969043501e37e35",
      "html_url": "https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/type/payment-method.type.graphql",
      "content": "type PaymentMethod implements Node {\n    id: ID!\n    createdAt: DateTime!\n    updatedAt: DateTime!\n    code: String!\n    enabled: Boolean!\n    configArgs: [ConfigArg!]!\n}\n",
      "containsQueryType": false,
      "validSchema": false,
      "numDefinitions": 1
    },
    {
      "name": "customer-group.api.graphql",
      "path": "packages/core/src/api/schema/admin-api/customer-group.api.graphql",
      "sha": "64e169b712671d6b1741571295e0681465fea2ca",
      "url": "https://api.github.com/repositories/136938012/contents/packages/core/src/api/schema/admin-api/customer-group.api.graphql?ref=6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9",
      "git_url": "https://api.github.com/repositories/136938012/git/blobs/64e169b712671d6b1741571295e0681465fea2ca",
      "html_url": "https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/admin-api/customer-group.api.graphql",
      "content": "type Query {\n    customerGroups: [CustomerGroup!]!\n    customerGroup(id: ID!): CustomerGroup\n}\n\ntype Mutation {\n    \"Create a new CustomerGroup\"\n    createCustomerGroup(input: CreateCustomerGroupInput!): CustomerGroup!\n    \"Update an existing CustomerGroup\"\n    updateCustomerGroup(input: UpdateCustomerGroupInput!): CustomerGroup!\n    \"Add Customers to a CustomerGroup\"\n    addCustomersToGroup(customerGroupId: ID!, customerIds: [ID!]!): CustomerGroup!\n    \"Remove Customers from a CustomerGroup\"\n    removeCustomersFromGroup(customerGroupId: ID!, customerIds: [ID!]!): CustomerGroup!\n}\n\ninput CreateCustomerGroupInput {\n    name: String!\n    customerIds: [ID!]\n}\n\ninput UpdateCustomerGroupInput {\n    id: ID!\n    name: String\n}\n",
      "containsQueryType": true,
      "merged": {
        "mergedContent": "# https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/admin-api/customer-group.api.graphql:\ntype Query {\n    customerGroups: [CustomerGroup!]!\n    customerGroup(id: ID!): CustomerGroup\n}\n\ntype Mutation {\n    \"Create a new CustomerGroup\"\n    createCustomerGroup(input: CreateCustomerGroupInput!): CustomerGroup!\n    \"Update an existing CustomerGroup\"\n    updateCustomerGroup(input: UpdateCustomerGroupInput!): CustomerGroup!\n    \"Add Customers to a CustomerGroup\"\n    addCustomersToGroup(customerGroupId: ID!, customerIds: [ID!]!): CustomerGroup!\n    \"Remove Customers from a CustomerGroup\"\n    removeCustomersFromGroup(customerGroupId: ID!, customerIds: [ID!]!): CustomerGroup!\n}\n\ninput CreateCustomerGroupInput {\n    name: String!\n    customerIds: [ID!]\n}\n\ninput UpdateCustomerGroupInput {\n    id: ID!\n    name: String\n}\n\n# https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/type/customer-group.type.graphql:\ntype CustomerGroup implements Node {\n    id: ID!\n    createdAt: DateTime!\n    updatedAt: DateTime!\n    name: String!\n}\n\n# https://github.com/vendure-ecommerce/vendure/blob/fe5eedd2334ba94bed7330526a7be259e437ef78/packages/core/src/api/schema/common/common-types.graphql:\n# Third-party custom scalars\nscalar JSON\nscalar DateTime\nscalar Upload\n\nenum AdjustmentType {\n    TAX\n    PROMOTION\n    SHIPPING\n    REFUND\n    TAX_REFUND\n    PROMOTION_REFUND\n    SHIPPING_REFUND\n}\n\ntype Adjustment {\n    adjustmentSource: String!\n    type: AdjustmentType!\n    description: String!\n    amount: Int!\n}\n\n\"\"\"\nCertain entities allow arbitrary configuration arguments to be specified which can then\nbe set in the admin-ui and used in the business logic of the app. These are the valid\ndata types of such arguments. The data type influences:\n\n1. How the argument form field is rendered in the admin-ui\n2. The JavaScript type into which the value is coerced before being passed to the business logic.\n\n\"\"\"\nenum ConfigArgType {\n    PERCENTAGE\n    MONEY\n    INT\n    STRING\n    DATETIME\n    BOOLEAN\n    FACET_VALUE_IDS\n    STRING_OPERATOR\n}\n\ntype ConfigArg {\n    name: String!\n    type: ConfigArgType!\n    value: String\n}\n\ntype ConfigurableOperation {\n    code: String!\n    args: [ConfigArg!]!\n    description: String!\n}\n\nenum DeletionResult {\n    \"The entity was successfully deleted\"\n    DELETED\n    \"Deletion did not take place, reason given in message\"\n    NOT_DELETED\n}\n\ntype DeletionResponse {\n    result: DeletionResult!\n    message: String\n}\n\ninput ConfigArgInput {\n    name: String!\n    type: ConfigArgType!\n    value: String\n}\n\ninput ConfigurableOperationInput {\n    code: String!\n    arguments: [ConfigArgInput!]!\n}\n\ninterface PaginatedList {\n    items: [Node!]!\n    totalItems: Int!\n}\n\ninterface Node {\n    id: ID!\n}\n\nenum SortOrder {\n    ASC\n    DESC\n}\n\ninput StringOperators {\n    eq: String\n    contains: String\n}\n\ninput BooleanOperators {\n    eq: Boolean\n}\n\ninput NumberRange {\n    start: Float!\n    end: Float!\n}\n\ninput NumberOperators {\n    eq: Float\n    lt: Float\n    lte: Float\n    gt: Float\n    gte: Float\n    between: NumberRange\n}\n\ninput DateRange {\n    start: DateTime!\n    end: DateTime!\n}\n\ninput DateOperators {\n    eq: DateTime\n    before: DateTime\n    after: DateTime\n    between: DateRange\n}\n\ninput SearchInput {\n    term: String\n    facetIds: [String!]\n    collectionId: String\n    groupByProduct: Boolean\n    take: Int\n    skip: Int\n    sort: SearchResultSortParameter\n}\n\ninput SearchResultSortParameter {\n    name: SortOrder\n    price: SortOrder\n}\n\ninput CreateCustomerInput {\n    title: String\n    firstName: String!\n    lastName: String!\n    phoneNumber: String\n    emailAddress: String!\n}\n\ninput CreateAddressInput {\n    fullName: String\n    company: String\n    streetLine1: String!\n    streetLine2: String\n    city: String\n    province: String\n    postalCode: String\n    countryCode: String!\n    phoneNumber: String\n    defaultShippingAddress: Boolean\n    defaultBillingAddress: Boolean\n}\n\ninput UpdateAddressInput {\n    id: ID!\n    fullName: String\n    company: String\n    streetLine1: String\n    streetLine2: String\n    city: String\n    province: String\n    postalCode: String\n    countryCode: String\n    phoneNumber: String\n    defaultShippingAddress: Boolean\n    defaultBillingAddress: Boolean\n}\n",
        "mergedPaths": [
          "packages/core/src/api/schema/type/customer-group.type.graphql",
          "packages/core/src/api/schema/common/common-types.graphql"
        ],
        "typesDefinedByMerge": [
          "CustomerGroup",
          "DateTime"
        ],
        "directivesDefinedByMerge": [],
        "validSchema": true,
        "contentDuplicate": false,
        "numObjectTypes": 7,
        "containsCycle": false,
        "polynomialLevel": 1,
        "numDefinitions": 31
      },
      "validSchema": false
    },
    {
      "name": "customer-group.type.graphql",
      "path": "packages/core/src/api/schema/type/customer-group.type.graphql",
      "sha": "573869e9f77cabe88c76726b34f9737f63cf965e",
      "url": "https://api.github.com/repositories/136938012/contents/packages/core/src/api/schema/type/customer-group.type.graphql?ref=6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9",
      "git_url": "https://api.github.com/repositories/136938012/git/blobs/573869e9f77cabe88c76726b34f9737f63cf965e",
      "html_url": "https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/type/customer-group.type.graphql",
      "content": "type CustomerGroup implements Node {\n    id: ID!\n    createdAt: DateTime!\n    updatedAt: DateTime!\n    name: String!\n}\n",
      "containsQueryType": false,
      "validSchema": false,
      "numDefinitions": 1
    },
    {
      "name": "promotion.api.graphql",
      "path": "packages/core/src/api/schema/admin-api/promotion.api.graphql",
      "sha": "03284eaac53dcc28d0eac8a49f626f74d9d98c09",
      "url": "https://api.github.com/repositories/136938012/contents/packages/core/src/api/schema/admin-api/promotion.api.graphql?ref=6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9",
      "git_url": "https://api.github.com/repositories/136938012/git/blobs/03284eaac53dcc28d0eac8a49f626f74d9d98c09",
      "html_url": "https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/admin-api/promotion.api.graphql",
      "content": "type Query {\n    promotion(id: ID!): Promotion\n    promotions(options: PromotionListOptions): PromotionList!\n    adjustmentOperations: AdjustmentOperations!\n}\n\ntype Mutation {\n    createPromotion(input: CreatePromotionInput!): Promotion!\n    updatePromotion(input: UpdatePromotionInput!): Promotion!\n    deletePromotion(id: ID!): DeletionResponse!\n}\n\n# generated by generateListOptions function\ninput PromotionListOptions\n\ninput CreatePromotionInput {\n    name: String!\n    enabled: Boolean!\n    conditions: [ConfigurableOperationInput!]!\n    actions: [ConfigurableOperationInput!]!\n}\n\ninput UpdatePromotionInput {\n    id: ID!\n    name: String\n    enabled: Boolean\n    conditions: [ConfigurableOperationInput!]\n    actions: [ConfigurableOperationInput!]\n}\n",
      "containsQueryType": true,
      "merged": {
        "mergedContent": "# https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/admin-api/promotion.api.graphql:\ntype Query {\n    promotion(id: ID!): Promotion\n    promotions(options: PromotionListOptions): PromotionList!\n    adjustmentOperations: AdjustmentOperations!\n}\n\ntype Mutation {\n    createPromotion(input: CreatePromotionInput!): Promotion!\n    updatePromotion(input: UpdatePromotionInput!): Promotion!\n    deletePromotion(id: ID!): DeletionResponse!\n}\n\n# generated by generateListOptions function\ninput PromotionListOptions\n\ninput CreatePromotionInput {\n    name: String!\n    enabled: Boolean!\n    conditions: [ConfigurableOperationInput!]!\n    actions: [ConfigurableOperationInput!]!\n}\n\ninput UpdatePromotionInput {\n    id: ID!\n    name: String\n    enabled: Boolean\n    conditions: [ConfigurableOperationInput!]\n    actions: [ConfigurableOperationInput!]\n}\n\n# https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/type/promotion.type.graphql:\ntype Promotion implements Node {\n    id: ID!\n    createdAt: DateTime!\n    updatedAt: DateTime!\n    name: String!\n    enabled: Boolean!\n    conditions: [ConfigurableOperation!]!\n    actions: [ConfigurableOperation!]!\n}\n\ntype AdjustmentOperations {\n    conditions: [ConfigurableOperation!]!\n    actions: [ConfigurableOperation!]!\n}\n\ntype PromotionList implements PaginatedList {\n    items: [Promotion!]!\n    totalItems: Int!\n}\n\n# https://github.com/vendure-ecommerce/vendure/blob/fe5eedd2334ba94bed7330526a7be259e437ef78/packages/core/src/api/schema/common/common-types.graphql:\n# Third-party custom scalars\nscalar JSON\nscalar DateTime\nscalar Upload\n\nenum AdjustmentType {\n    TAX\n    PROMOTION\n    SHIPPING\n    REFUND\n    TAX_REFUND\n    PROMOTION_REFUND\n    SHIPPING_REFUND\n}\n\ntype Adjustment {\n    adjustmentSource: String!\n    type: AdjustmentType!\n    description: String!\n    amount: Int!\n}\n\n\"\"\"\nCertain entities allow arbitrary configuration arguments to be specified which can then\nbe set in the admin-ui and used in the business logic of the app. These are the valid\ndata types of such arguments. The data type influences:\n\n1. How the argument form field is rendered in the admin-ui\n2. The JavaScript type into which the value is coerced before being passed to the business logic.\n\n\"\"\"\nenum ConfigArgType {\n    PERCENTAGE\n    MONEY\n    INT\n    STRING\n    DATETIME\n    BOOLEAN\n    FACET_VALUE_IDS\n    STRING_OPERATOR\n}\n\ntype ConfigArg {\n    name: String!\n    type: ConfigArgType!\n    value: String\n}\n\ntype ConfigurableOperation {\n    code: String!\n    args: [ConfigArg!]!\n    description: String!\n}\n\nenum DeletionResult {\n    \"The entity was successfully deleted\"\n    DELETED\n    \"Deletion did not take place, reason given in message\"\n    NOT_DELETED\n}\n\ntype DeletionResponse {\n    result: DeletionResult!\n    message: String\n}\n\ninput ConfigArgInput {\n    name: String!\n    type: ConfigArgType!\n    value: String\n}\n\ninput ConfigurableOperationInput {\n    code: String!\n    arguments: [ConfigArgInput!]!\n}\n\ninterface PaginatedList {\n    items: [Node!]!\n    totalItems: Int!\n}\n\ninterface Node {\n    id: ID!\n}\n\nenum SortOrder {\n    ASC\n    DESC\n}\n\ninput StringOperators {\n    eq: String\n    contains: String\n}\n\ninput BooleanOperators {\n    eq: Boolean\n}\n\ninput NumberRange {\n    start: Float!\n    end: Float!\n}\n\ninput NumberOperators {\n    eq: Float\n    lt: Float\n    lte: Float\n    gt: Float\n    gte: Float\n    between: NumberRange\n}\n\ninput DateRange {\n    start: DateTime!\n    end: DateTime!\n}\n\ninput DateOperators {\n    eq: DateTime\n    before: DateTime\n    after: DateTime\n    between: DateRange\n}\n\ninput SearchInput {\n    term: String\n    facetIds: [String!]\n    collectionId: String\n    groupByProduct: Boolean\n    take: Int\n    skip: Int\n    sort: SearchResultSortParameter\n}\n\ninput SearchResultSortParameter {\n    name: SortOrder\n    price: SortOrder\n}\n\ninput CreateCustomerInput {\n    title: String\n    firstName: String!\n    lastName: String!\n    phoneNumber: String\n    emailAddress: String!\n}\n\ninput CreateAddressInput {\n    fullName: String\n    company: String\n    streetLine1: String!\n    streetLine2: String\n    city: String\n    province: String\n    postalCode: String\n    countryCode: String!\n    phoneNumber: String\n    defaultShippingAddress: Boolean\n    defaultBillingAddress: Boolean\n}\n\ninput UpdateAddressInput {\n    id: ID!\n    fullName: String\n    company: String\n    streetLine1: String\n    streetLine2: String\n    city: String\n    province: String\n    postalCode: String\n    countryCode: String\n    phoneNumber: String\n    defaultShippingAddress: Boolean\n    defaultBillingAddress: Boolean\n}\n",
        "mergedPaths": [
          "packages/core/src/api/schema/type/promotion.type.graphql",
          "packages/core/src/api/schema/common/common-types.graphql"
        ],
        "typesDefinedByMerge": [
          "Promotion",
          "AdjustmentOperations",
          "PromotionList",
          "DateTime",
          "ConfigurableOperation",
          "DeletionResponse",
          "ConfigurableOperationInput"
        ],
        "directivesDefinedByMerge": [],
        "validSchema": true,
        "contentDuplicate": false,
        "numObjectTypes": 9,
        "containsCycle": false,
        "polynomialLevel": 3,
        "numDefinitions": 34
      },
      "validSchema": false
    },
    {
      "name": "promotion.type.graphql",
      "path": "packages/core/src/api/schema/type/promotion.type.graphql",
      "sha": "285b2431a3aca9207a943aa1be5da0686487b781",
      "url": "https://api.github.com/repositories/136938012/contents/packages/core/src/api/schema/type/promotion.type.graphql?ref=6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9",
      "git_url": "https://api.github.com/repositories/136938012/git/blobs/285b2431a3aca9207a943aa1be5da0686487b781",
      "html_url": "https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/type/promotion.type.graphql",
      "content": "type Promotion implements Node {\n    id: ID!\n    createdAt: DateTime!\n    updatedAt: DateTime!\n    name: String!\n    enabled: Boolean!\n    conditions: [ConfigurableOperation!]!\n    actions: [ConfigurableOperation!]!\n}\n\ntype AdjustmentOperations {\n    conditions: [ConfigurableOperation!]!\n    actions: [ConfigurableOperation!]!\n}\n\ntype PromotionList implements PaginatedList {\n    items: [Promotion!]!\n    totalItems: Int!\n}\n",
      "containsQueryType": false,
      "validSchema": false,
      "numDefinitions": 3
    },
    {
      "name": "shipping-method.api.graphql",
      "path": "packages/core/src/api/schema/admin-api/shipping-method.api.graphql",
      "sha": "cd07e37bcaa3c4ee50384322aecec6c15589cb07",
      "url": "https://api.github.com/repositories/136938012/contents/packages/core/src/api/schema/admin-api/shipping-method.api.graphql?ref=6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9",
      "git_url": "https://api.github.com/repositories/136938012/git/blobs/cd07e37bcaa3c4ee50384322aecec6c15589cb07",
      "html_url": "https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/admin-api/shipping-method.api.graphql",
      "content": "type Query {\n    shippingMethods(options: ShippingMethodListOptions): ShippingMethodList!\n    shippingMethod(id: ID!): ShippingMethod\n    shippingEligibilityCheckers: [ConfigurableOperation!]!\n    shippingCalculators: [ConfigurableOperation!]!\n}\n\ntype Mutation {\n    \"Create a new ShippingMethod\"\n    createShippingMethod(input: CreateShippingMethodInput!): ShippingMethod!\n    \"Update an existing ShippingMethod\"\n    updateShippingMethod(input: UpdateShippingMethodInput!): ShippingMethod!\n}\n\n# generated by generateListOptions function\ninput ShippingMethodListOptions\n\ninput CreateShippingMethodInput {\n    code: String!\n    description: String!\n    checker: ConfigurableOperationInput!\n    calculator: ConfigurableOperationInput!\n}\n\ninput UpdateShippingMethodInput {\n    id: ID!\n    code: String\n    description: String\n    checker: ConfigurableOperationInput\n    calculator: ConfigurableOperationInput\n}\n",
      "containsQueryType": true,
      "merged": {
        "mergedContent": "# https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/admin-api/shipping-method.api.graphql:\ntype Query {\n    shippingMethods(options: ShippingMethodListOptions): ShippingMethodList!\n    shippingMethod(id: ID!): ShippingMethod\n    shippingEligibilityCheckers: [ConfigurableOperation!]!\n    shippingCalculators: [ConfigurableOperation!]!\n}\n\ntype Mutation {\n    \"Create a new ShippingMethod\"\n    createShippingMethod(input: CreateShippingMethodInput!): ShippingMethod!\n    \"Update an existing ShippingMethod\"\n    updateShippingMethod(input: UpdateShippingMethodInput!): ShippingMethod!\n}\n\n# generated by generateListOptions function\ninput ShippingMethodListOptions\n\ninput CreateShippingMethodInput {\n    code: String!\n    description: String!\n    checker: ConfigurableOperationInput!\n    calculator: ConfigurableOperationInput!\n}\n\ninput UpdateShippingMethodInput {\n    id: ID!\n    code: String\n    description: String\n    checker: ConfigurableOperationInput\n    calculator: ConfigurableOperationInput\n}\n\n# https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/type/shipping-method.type.graphql:\ntype ShippingMethod implements Node {\n    id: ID!\n    createdAt: DateTime!\n    updatedAt: DateTime!\n    code: String!\n    description: String!\n    checker: ConfigurableOperation!\n    calculator: ConfigurableOperation!\n}\n\ntype ShippingMethodList implements PaginatedList {\n    items: [ShippingMethod!]!\n    totalItems: Int!\n}\n\n# https://github.com/vendure-ecommerce/vendure/blob/fe5eedd2334ba94bed7330526a7be259e437ef78/packages/core/src/api/schema/common/common-types.graphql:\n# Third-party custom scalars\nscalar JSON\nscalar DateTime\nscalar Upload\n\nenum AdjustmentType {\n    TAX\n    PROMOTION\n    SHIPPING\n    REFUND\n    TAX_REFUND\n    PROMOTION_REFUND\n    SHIPPING_REFUND\n}\n\ntype Adjustment {\n    adjustmentSource: String!\n    type: AdjustmentType!\n    description: String!\n    amount: Int!\n}\n\n\"\"\"\nCertain entities allow arbitrary configuration arguments to be specified which can then\nbe set in the admin-ui and used in the business logic of the app. These are the valid\ndata types of such arguments. The data type influences:\n\n1. How the argument form field is rendered in the admin-ui\n2. The JavaScript type into which the value is coerced before being passed to the business logic.\n\n\"\"\"\nenum ConfigArgType {\n    PERCENTAGE\n    MONEY\n    INT\n    STRING\n    DATETIME\n    BOOLEAN\n    FACET_VALUE_IDS\n    STRING_OPERATOR\n}\n\ntype ConfigArg {\n    name: String!\n    type: ConfigArgType!\n    value: String\n}\n\ntype ConfigurableOperation {\n    code: String!\n    args: [ConfigArg!]!\n    description: String!\n}\n\nenum DeletionResult {\n    \"The entity was successfully deleted\"\n    DELETED\n    \"Deletion did not take place, reason given in message\"\n    NOT_DELETED\n}\n\ntype DeletionResponse {\n    result: DeletionResult!\n    message: String\n}\n\ninput ConfigArgInput {\n    name: String!\n    type: ConfigArgType!\n    value: String\n}\n\ninput ConfigurableOperationInput {\n    code: String!\n    arguments: [ConfigArgInput!]!\n}\n\ninterface PaginatedList {\n    items: [Node!]!\n    totalItems: Int!\n}\n\ninterface Node {\n    id: ID!\n}\n\nenum SortOrder {\n    ASC\n    DESC\n}\n\ninput StringOperators {\n    eq: String\n    contains: String\n}\n\ninput BooleanOperators {\n    eq: Boolean\n}\n\ninput NumberRange {\n    start: Float!\n    end: Float!\n}\n\ninput NumberOperators {\n    eq: Float\n    lt: Float\n    lte: Float\n    gt: Float\n    gte: Float\n    between: NumberRange\n}\n\ninput DateRange {\n    start: DateTime!\n    end: DateTime!\n}\n\ninput DateOperators {\n    eq: DateTime\n    before: DateTime\n    after: DateTime\n    between: DateRange\n}\n\ninput SearchInput {\n    term: String\n    facetIds: [String!]\n    collectionId: String\n    groupByProduct: Boolean\n    take: Int\n    skip: Int\n    sort: SearchResultSortParameter\n}\n\ninput SearchResultSortParameter {\n    name: SortOrder\n    price: SortOrder\n}\n\ninput CreateCustomerInput {\n    title: String\n    firstName: String!\n    lastName: String!\n    phoneNumber: String\n    emailAddress: String!\n}\n\ninput CreateAddressInput {\n    fullName: String\n    company: String\n    streetLine1: String!\n    streetLine2: String\n    city: String\n    province: String\n    postalCode: String\n    countryCode: String!\n    phoneNumber: String\n    defaultShippingAddress: Boolean\n    defaultBillingAddress: Boolean\n}\n\ninput UpdateAddressInput {\n    id: ID!\n    fullName: String\n    company: String\n    streetLine1: String\n    streetLine2: String\n    city: String\n    province: String\n    postalCode: String\n    countryCode: String\n    phoneNumber: String\n    defaultShippingAddress: Boolean\n    defaultBillingAddress: Boolean\n}\n",
        "mergedPaths": [
          "packages/core/src/api/schema/type/shipping-method.type.graphql",
          "packages/core/src/api/schema/common/common-types.graphql"
        ],
        "typesDefinedByMerge": [
          "ShippingMethod",
          "ShippingMethodList",
          "DateTime",
          "ConfigurableOperation",
          "ConfigurableOperationInput"
        ],
        "directivesDefinedByMerge": [],
        "validSchema": true,
        "contentDuplicate": false,
        "numObjectTypes": 8,
        "containsCycle": false,
        "polynomialLevel": 2,
        "numDefinitions": 33
      },
      "validSchema": false
    },
    {
      "name": "shipping-method.type.graphql",
      "path": "packages/core/src/api/schema/type/shipping-method.type.graphql",
      "sha": "647bee7b369d5bb9114d85c56bd45ae18e266de2",
      "url": "https://api.github.com/repositories/136938012/contents/packages/core/src/api/schema/type/shipping-method.type.graphql?ref=6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9",
      "git_url": "https://api.github.com/repositories/136938012/git/blobs/647bee7b369d5bb9114d85c56bd45ae18e266de2",
      "html_url": "https://github.com/vendure-ecommerce/vendure/blob/6dafeabcccc30b2fd9ab71dff0b572d9e9dfe3c9/packages/core/src/api/schema/type/shipping-method.type.graphql",
      "content": "type ShippingMethod implements Node {\n    id: ID!\n    createdAt: DateTime!\n    updatedAt: DateTime!\n    code: String!\n    description: String!\n    checker: ConfigurableOperation!\n    calculator: ConfigurableOperation!\n}\n\ntype ShippingMethodList implements PaginatedList {\n    items: [ShippingMethod!]!\n    totalItems: Int!\n}\n",
      "containsQueryType": false,
      "validSchema": false,
      "numDefinitions": 2
    }
  ],
  "metrics": {
    "created_at": "2018-06-11T14:29:20Z",
    "updated_at": "2019-07-19T11:32:30Z",
    "pushed_at": "2019-07-19T11:32:28Z",
    "issues": 126,
    "watchers": 19,
    "fork_count": 26,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 3,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 3,
    "releases": 3,
    "stargazers": 216
  }
}