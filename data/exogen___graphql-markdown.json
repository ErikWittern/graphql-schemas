{
  "repo_name": "graphql-markdown",
  "repo_full_name": "exogen/graphql-markdown",
  "repo_owner": "exogen",
  "repo_description": "The easiest way to document your GraphQL schema.",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "input-objects.graphql",
      "path": "test/fixtures/input-objects.graphql",
      "sha": "1b316b28a107ce95b02a492de913cffe0a9c9da5",
      "url": "https://api.github.com/repositories/75462377/contents/test/fixtures/input-objects.graphql?ref=b2e72da20e8589653baa8de121b06380a5a10510",
      "git_url": "https://api.github.com/repositories/75462377/git/blobs/1b316b28a107ce95b02a492de913cffe0a9c9da5",
      "html_url": "https://github.com/exogen/graphql-markdown/blob/b2e72da20e8589653baa8de121b06380a5a10510/test/fixtures/input-objects.graphql",
      "content": "input MessageInput {\n  content: String\n  author: String\n}\n\ntype Message {\n  id: ID!\n  content: String\n  author: String\n}\n\ntype Query {\n  getMessage(id: ID!): Message\n}\n\ntype Mutation {\n  createMessage(input: MessageInput): Message\n  updateMessage(id: ID!, input: MessageInput): Message\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 3,
      "containsCycle": false,
      "polynomialLevel": 0,
      "numDefinitions": 4
    },
    {
      "name": "graphbrainz.graphql",
      "path": "test/fixtures/graphbrainz.graphql",
      "sha": "7ceae6e2cb438253b137653cf687c74ee7f0c1d8",
      "url": "https://api.github.com/repositories/75462377/contents/test/fixtures/graphbrainz.graphql?ref=5491f85cf96e691531b73b6c19c6ce7d4ce4dc85",
      "git_url": "https://api.github.com/repositories/75462377/git/blobs/7ceae6e2cb438253b137653cf687c74ee7f0c1d8",
      "html_url": "https://github.com/exogen/graphql-markdown/blob/5491f85cf96e691531b73b6c19c6ce7d4ce4dc85/test/fixtures/graphbrainz.graphql",
      "content": "\"\"\"\n[Aliases](https://musicbrainz.org/doc/Aliases) are variant names\nthat are mostly used as search help: if a search matches an entity’s alias, the\nentity will be given as a result – even if the actual name wouldn’t be.\n\"\"\"\ntype Alias {\n  \"\"\"\n  The aliased name of the entity.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  The string to use for the purpose of ordering by name (for\n  example, by moving articles like ‘the’ to the end or a person’s last name to\n  the front).\n  \"\"\"\n  sortName: String\n\n  \"\"\"\n  The locale (language and/or country) in which the alias is\n  used.\n  \"\"\"\n  locale: Locale\n\n  \"\"\"\n  Whether this is the main alias for the entity in the\n  specified locale (this could mean the most recent or the most common).\n  \"\"\"\n  primary: Boolean\n\n  \"\"\"\n  The type or purpose of the alias – whether it is a variant,\n  search hint, etc.\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n}\n\n\"\"\"\n[Areas](https://musicbrainz.org/doc/Area) are geographic regions\nor settlements (countries, cities, or the like).\n\"\"\"\ntype Area implements Node & Entity {\n  \"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  The MBID of the entity.\n  \"\"\"\n  mbid: MBID!\n\n  \"\"\"\n  The official name of the entity.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  The string to use for the purpose of ordering by name (for\n  example, by moving articles like ‘the’ to the end or a person’s last name to\n  the front).\n  \"\"\"\n  sortName: String\n\n  \"\"\"\n  A comment used to help distinguish identically named entitites.\n  \"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"\n  [ISO 3166 codes](https://en.wikipedia.org/wiki/ISO_3166) are\n  the codes assigned by ISO to countries and subdivisions.\n  \"\"\"\n  isoCodes(\n    \"\"\"\n    Specify the particular ISO standard codes to retrieve.\n    Available ISO standards are 3166-1, 3166-2, and 3166-3.\n    \"\"\"\n    standard: String = \"3166-1\"\n  ): [String]\n\n  \"\"\"\n  The type of area (country, city, etc. – see the [possible\n  values](https://musicbrainz.org/doc/Area)).\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"\n  A list of artists linked to this entity.\n  \"\"\"\n  artists(after: String, first: Int): ArtistConnection\n\n  \"\"\"\n  A list of events linked to this entity.\n  \"\"\"\n  events(after: String, first: Int): EventConnection\n\n  \"\"\"\n  A list of labels linked to this entity.\n  \"\"\"\n  labels(after: String, first: Int): LabelConnection\n\n  \"\"\"\n  A list of places linked to this entity.\n  \"\"\"\n  places(after: String, first: Int): PlaceConnection\n\n  \"\"\"\n  A list of releases linked to this entity.\n  \"\"\"\n  releases(\n    \"\"\"\n    Filter by one or more release group types.\n    \"\"\"\n    type: [ReleaseGroupType]\n\n    \"\"\"\n    Filter by one or more release statuses.\n    \"\"\"\n    status: [ReleaseStatus]\n    after: String\n    first: Int\n  ): ReleaseConnection\n\n  \"\"\"\n  Relationships between this entity and other entitites.\n  \"\"\"\n  relationships: Relationships\n\n  \"\"\"\n  A list of collections containing this entity.\n  \"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"\n  A list of tags linked to this entity.\n  \"\"\"\n  tags(after: String, first: Int): TagConnection\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AreaConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AreaEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Area]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AreaEdge {\n  \"\"\"\n  The item at the end of the edge\n  \"\"\"\n  node: Area\n\n  \"\"\"\n  A cursor for use in pagination\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0–100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nAn [artist](https://musicbrainz.org/doc/Artist) is generally a\nmusician, group of musicians, or other music professional (like a producer or\nengineer). Occasionally, it can also be a non-musical person (like a\nphotographer, an illustrator, or a poet whose writings are set to music), or\neven a fictional character.\n\"\"\"\ntype Artist implements Node & Entity {\n  \"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  The MBID of the entity.\n  \"\"\"\n  mbid: MBID!\n\n  \"\"\"\n  The official name of the entity.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  The string to use for the purpose of ordering by name (for\n  example, by moving articles like ‘the’ to the end or a person’s last name to\n  the front).\n  \"\"\"\n  sortName: String\n\n  \"\"\"\n  A comment used to help distinguish identically named entitites.\n  \"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"\n  The country with which an artist is primarily identified. It\n  is often, but not always, its birth/formation country.\n  \"\"\"\n  country: String\n\n  \"\"\"\n  The area with which an artist is primarily identified. It\n  is often, but not always, its birth/formation country.\n  \"\"\"\n  area: Area\n\n  \"\"\"\n  The area in which an artist began their career (or where\n  they were born, if the artist is a person).\n  \"\"\"\n  beginArea: Area\n\n  \"\"\"\n  The area in which an artist ended their career (or where\n  they died, if the artist is a person).\n  \"\"\"\n  endArea: Area\n\n  \"\"\"\n  The begin and end dates of the entity’s existence. Its exact\n  meaning depends on the type of entity.\n  \"\"\"\n  lifeSpan: LifeSpan\n\n  \"\"\"\n  Whether a person or character identifies as male, female, or\n  neither. Groups do not have genders.\n  \"\"\"\n  gender: String\n\n  \"\"\"\n  The MBID associated with the value of the `gender`\n  field.\n  \"\"\"\n  genderID: MBID\n\n  \"\"\"\n  Whether an artist is a person, a group, or something else.\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"\n  List of [Interested Parties Information](https://musicbrainz.org/doc/IPI)\n  (IPI) codes for the artist.\n  \"\"\"\n  ipis: [IPI]\n\n  \"\"\"\n  List of [International Standard Name Identifier](https://musicbrainz.org/doc/ISNI)\n  (ISNI) codes for the artist.\n  \"\"\"\n  isnis: [ISNI]\n\n  \"\"\"\n  A list of recordings linked to this entity.\n  \"\"\"\n  recordings(after: String, first: Int): RecordingConnection\n\n  \"\"\"\n  A list of releases linked to this entity.\n  \"\"\"\n  releases(\n    \"\"\"\n    Filter by one or more release group types.\n    \"\"\"\n    type: [ReleaseGroupType]\n\n    \"\"\"\n    Filter by one or more release statuses.\n    \"\"\"\n    status: [ReleaseStatus]\n    after: String\n    first: Int\n  ): ReleaseConnection\n\n  \"\"\"\n  A list of release groups linked to this entity.\n  \"\"\"\n  releaseGroups(\n    \"\"\"\n    Filter by one or more release group types.\n    \"\"\"\n    type: [ReleaseGroupType]\n    after: String\n    first: Int\n  ): ReleaseGroupConnection\n\n  \"\"\"\n  A list of works linked to this entity.\n  \"\"\"\n  works(after: String, first: Int): WorkConnection\n\n  \"\"\"\n  Relationships between this entity and other entitites.\n  \"\"\"\n  relationships: Relationships\n\n  \"\"\"\n  A list of collections containing this entity.\n  \"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"\n  The rating users have given to this entity.\n  \"\"\"\n  rating: Rating\n\n  \"\"\"\n  A list of tags linked to this entity.\n  \"\"\"\n  tags(after: String, first: Int): TagConnection\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype ArtistConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [ArtistEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Artist]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"\n[Artist credits](https://musicbrainz.org/doc/Artist_Credits)\nindicate who is the main credited artist (or artists) for releases, release\ngroups, tracks, and recordings, and how they are credited. They consist of\nartists, with (optionally) their names as credited in the specific release,\ntrack, etc., and join phrases between them.\n\"\"\"\ntype ArtistCredit {\n  \"\"\"\n  The entity representing the artist referenced in the\n  credits.\n  \"\"\"\n  artist: Artist\n\n  \"\"\"\n  The name of the artist as credited in the specific release,\n  track, etc.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  Join phrases might include words and/or punctuation to\n  separate artist names as they appear on the release, track, etc.\n  \"\"\"\n  joinPhrase: String\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype ArtistEdge {\n  \"\"\"\n  The item at the end of the edge\n  \"\"\"\n  node: Artist\n\n  \"\"\"\n  A cursor for use in pagination\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0–100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nAn [Amazon Standard Identification Number](https://musicbrainz.org/doc/ASIN)\n(ASIN) is a 10-character alphanumeric unique identifier assigned by Amazon.com\nand its partners for product identification within the Amazon organization.\n\"\"\"\nscalar ASIN\n\n\"\"\"\nA query for all MusicBrainz entities directly linked to another\nentity.\n\"\"\"\ntype BrowseQuery {\n  \"\"\"\n  Browse area entities linked to the given arguments.\n  \"\"\"\n  areas(\n    \"\"\"\n    The MBID of a collection in which the entity is found.\n    \"\"\"\n    collection: MBID\n    after: String\n    first: Int\n  ): AreaConnection\n\n  \"\"\"\n  Browse artist entities linked to the given arguments.\n  \"\"\"\n  artists(\n    \"\"\"\n    The MBID of an area to which the entity is linked.\n    \"\"\"\n    area: MBID\n\n    \"\"\"\n    The MBID of a collection in which the entity is found.\n    \"\"\"\n    collection: MBID\n\n    \"\"\"\n    The MBID of a recording to which the entity is linked.\n    \"\"\"\n    recording: MBID\n\n    \"\"\"\n    The MBID of a release to which the entity is linked.\n    \"\"\"\n    release: MBID\n\n    \"\"\"\n    The MBID of a release group to which the entity is linked.\n    \"\"\"\n    releaseGroup: MBID\n\n    \"\"\"\n    The MBID of a work to which the entity is linked.\n    \"\"\"\n    work: MBID\n    after: String\n    first: Int\n  ): ArtistConnection\n\n  \"\"\"\n  Browse collection entities linked to the given arguments.\n  \"\"\"\n  collections(\n    \"\"\"\n    The MBID of an area to which the entity is linked.\n    \"\"\"\n    area: MBID\n\n    \"\"\"\n    The MBID of an artist to which the entity is linked.\n    \"\"\"\n    artist: MBID\n\n    \"\"\"\n    The username of the editor who created the collection.\n    \"\"\"\n    editor: String\n\n    \"\"\"\n    The MBID of an event to which the entity is linked.\n    \"\"\"\n    event: MBID\n\n    \"\"\"\n    The MBID of a label to which the entity is linked.\n    \"\"\"\n    label: MBID\n\n    \"\"\"\n    The MBID of a place to which the entity is linked.\n    \"\"\"\n    place: MBID\n\n    \"\"\"\n    The MBID of a recording to which the entity is linked.\n    \"\"\"\n    recording: MBID\n\n    \"\"\"\n    The MBID of a release to which the entity is linked.\n    \"\"\"\n    release: MBID\n\n    \"\"\"\n    The MBID of a release group to which the entity is linked.\n    \"\"\"\n    releaseGroup: MBID\n\n    \"\"\"\n    The MBID of a work to which the entity is linked.\n    \"\"\"\n    work: MBID\n    after: String\n    first: Int\n  ): CollectionConnection\n\n  \"\"\"\n  Browse event entities linked to the given arguments.\n  \"\"\"\n  events(\n    \"\"\"\n    The MBID of an area to which the entity is linked.\n    \"\"\"\n    area: MBID\n\n    \"\"\"\n    The MBID of an artist to which the entity is linked.\n    \"\"\"\n    artist: MBID\n\n    \"\"\"\n    The MBID of a collection in which the entity is found.\n    \"\"\"\n    collection: MBID\n\n    \"\"\"\n    The MBID of a place to which the entity is linked.\n    \"\"\"\n    place: MBID\n    after: String\n    first: Int\n  ): EventConnection\n\n  \"\"\"\n  Browse label entities linked to the given arguments.\n  \"\"\"\n  labels(\n    \"\"\"\n    The MBID of an area to which the entity is linked.\n    \"\"\"\n    area: MBID\n\n    \"\"\"\n    The MBID of a collection in which the entity is found.\n    \"\"\"\n    collection: MBID\n\n    \"\"\"\n    The MBID of a release to which the entity is linked.\n    \"\"\"\n    release: MBID\n    after: String\n    first: Int\n  ): LabelConnection\n\n  \"\"\"\n  Browse place entities linked to the given arguments.\n  \"\"\"\n  places(\n    \"\"\"\n    The MBID of an area to which the entity is linked.\n    \"\"\"\n    area: MBID\n\n    \"\"\"\n    The MBID of a collection in which the entity is found.\n    \"\"\"\n    collection: MBID\n    after: String\n    first: Int\n  ): PlaceConnection\n\n  \"\"\"\n  Browse recording entities linked to the given arguments.\n  \"\"\"\n  recordings(\n    \"\"\"\n    The MBID of an artist to which the entity is linked.\n    \"\"\"\n    artist: MBID\n\n    \"\"\"\n    The MBID of a collection in which the entity is found.\n    \"\"\"\n    collection: MBID\n\n    \"\"\"\n    The [International Standard Recording Code](https://musicbrainz.org/doc/ISRC)\n    (ISRC) of the recording.\n    \"\"\"\n    isrc: ISRC\n\n    \"\"\"\n    The MBID of a release to which the entity is linked.\n    \"\"\"\n    release: MBID\n    after: String\n    first: Int\n  ): RecordingConnection\n\n  \"\"\"\n  Browse release entities linked to the given arguments.\n  \"\"\"\n  releases(\n    \"\"\"\n    The MBID of an area to which the entity is linked.\n    \"\"\"\n    area: MBID\n\n    \"\"\"\n    The MBID of an artist to which the entity is linked.\n    \"\"\"\n    artist: MBID\n\n    \"\"\"\n    The MBID of a collection in which the entity is found.\n    \"\"\"\n    collection: MBID\n\n    \"\"\"\n    A [disc ID](https://musicbrainz.org/doc/Disc_ID)\n    associated with the release.\n    \"\"\"\n    discID: DiscID\n\n    \"\"\"\n    The MBID of a label to which the entity is linked.\n    \"\"\"\n    label: MBID\n\n    \"\"\"\n    The MBID of a recording to which the entity is linked.\n    \"\"\"\n    recording: MBID\n\n    \"\"\"\n    The MBID of a release group to which the entity is linked.\n    \"\"\"\n    releaseGroup: MBID\n\n    \"\"\"\n    The MBID of a track that is included in the release.\n    \"\"\"\n    track: MBID\n\n    \"\"\"\n    The MBID of an artist that appears on a track in the\n    release, but is not included in the credits for the release itself.\n    \"\"\"\n    trackArtist: MBID\n\n    \"\"\"\n    Filter by one or more release group types.\n    \"\"\"\n    type: [ReleaseGroupType]\n\n    \"\"\"\n    Filter by one or more release statuses.\n    \"\"\"\n    status: [ReleaseStatus]\n    after: String\n    first: Int\n  ): ReleaseConnection\n\n  \"\"\"\n  Browse release group entities linked to the given arguments.\n  \"\"\"\n  releaseGroups(\n    \"\"\"\n    The MBID of an artist to which the entity is linked.\n    \"\"\"\n    artist: MBID\n\n    \"\"\"\n    The MBID of a collection in which the entity is found.\n    \"\"\"\n    collection: MBID\n\n    \"\"\"\n    The MBID of a release to which the entity is linked.\n    \"\"\"\n    release: MBID\n\n    \"\"\"\n    Filter by one or more release group types.\n    \"\"\"\n    type: [ReleaseGroupType]\n    after: String\n    first: Int\n  ): ReleaseGroupConnection\n\n  \"\"\"\n  Browse work entities linked to the given arguments.\n  \"\"\"\n  works(\n    \"\"\"\n    The MBID of an artist to which the entity is linked.\n    \"\"\"\n    artist: MBID\n\n    \"\"\"\n    The MBID of a collection in which the entity is found.\n    \"\"\"\n    collection: MBID\n\n    \"\"\"\n    The [International Standard Musical Work Code](https://musicbrainz.org/doc/ISWC)\n    (ISWC) of the work.\n    \"\"\"\n    iswc: ISWC\n    after: String\n    first: Int\n  ): WorkConnection\n}\n\n\"\"\"\n[Collections](https://musicbrainz.org/doc/Collections) are\nlists of entities that users can create.\n\"\"\"\ntype Collection implements Node & Entity {\n  \"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  The MBID of the entity.\n  \"\"\"\n  mbid: MBID!\n\n  \"\"\"\n  The official name of the entity.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  The username of the editor who created the collection.\n  \"\"\"\n  editor: String!\n\n  \"\"\"\n  The type of entity listed in the collection.\n  \"\"\"\n  entityType: String!\n\n  \"\"\"\n  The type of collection.\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"\n  The list of areas found in this collection.\n  \"\"\"\n  areas(after: String, first: Int): AreaConnection\n\n  \"\"\"\n  The list of artists found in this collection.\n  \"\"\"\n  artists(after: String, first: Int): ArtistConnection\n\n  \"\"\"\n  The list of events found in this collection.\n  \"\"\"\n  events(after: String, first: Int): EventConnection\n\n  \"\"\"\n  The list of instruments found in this collection.\n  \"\"\"\n  instruments(after: String, first: Int): InstrumentConnection\n\n  \"\"\"\n  The list of labels found in this collection.\n  \"\"\"\n  labels(after: String, first: Int): LabelConnection\n\n  \"\"\"\n  The list of places found in this collection.\n  \"\"\"\n  places(after: String, first: Int): PlaceConnection\n\n  \"\"\"\n  The list of recordings found in this collection.\n  \"\"\"\n  recordings(after: String, first: Int): RecordingConnection\n\n  \"\"\"\n  The list of releases found in this collection.\n  \"\"\"\n  releases(\n    \"\"\"\n    Filter by one or more release group types.\n    \"\"\"\n    type: [ReleaseGroupType]\n\n    \"\"\"\n    Filter by one or more release statuses.\n    \"\"\"\n    status: [ReleaseStatus]\n    after: String\n    first: Int\n  ): ReleaseConnection\n\n  \"\"\"\n  The list of release groups found in this collection.\n  \"\"\"\n  releaseGroups(\n    \"\"\"\n    Filter by one or more release group types.\n    \"\"\"\n    type: [ReleaseGroupType]\n    after: String\n    first: Int\n  ): ReleaseGroupConnection\n\n  \"\"\"\n  The list of series found in this collection.\n  \"\"\"\n  series(after: String, first: Int): SeriesConnection\n\n  \"\"\"\n  The list of works found in this collection.\n  \"\"\"\n  works(after: String, first: Int): WorkConnection\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CollectionConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CollectionEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Collection]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CollectionEdge {\n  \"\"\"\n  The item at the end of the edge\n  \"\"\"\n  node: Collection\n\n  \"\"\"\n  A cursor for use in pagination\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0–100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nGeographic coordinates described with latitude and longitude.\n\"\"\"\ntype Coordinates {\n  \"\"\"\n  The north–south position of a point on the Earth’s surface.\n  \"\"\"\n  latitude: Degrees\n\n  \"\"\"\n  The east–west position of a point on the Earth’s surface.\n  \"\"\"\n  longitude: Degrees\n}\n\n\"\"\"\nYear, month (optional), and day (optional) in YYYY-MM-DD format.\n\"\"\"\nscalar Date\n\n\"\"\"\nDecimal degrees, used for latitude and longitude.\n\"\"\"\nscalar Degrees\n\n\"\"\"\nInformation about the physical CD and releases associated with a\nparticular [disc ID](https://musicbrainz.org/doc/Disc_ID).\n\"\"\"\ntype Disc implements Node {\n  \"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  The [disc ID](https://musicbrainz.org/doc/Disc_ID) of this disc.\n  \"\"\"\n  discID: DiscID!\n\n  \"\"\"\n  The number of offsets (tracks) on the disc.\n  \"\"\"\n  offsetCount: Int!\n\n  \"\"\"\n  The sector offset of each track on the disc.\n  \"\"\"\n  offsets: [Int]\n\n  \"\"\"\n  The sector offset of the lead-out (the end of the disc).\n  \"\"\"\n  sectors: Int!\n\n  \"\"\"\n  The list of releases linked to this disc ID.\n  \"\"\"\n  releases(after: String, first: Int): ReleaseConnection\n}\n\n\"\"\"\n[Disc ID](https://musicbrainz.org/doc/Disc_ID) is the code\nnumber which MusicBrainz uses to link a physical CD to a [release](https://musicbrainz.org/doc/Release)\nlisting.\n\nA release may have any number of disc IDs, and a disc ID may be linked to\nmultiple releases. This is because disc ID calculation involves a hash of the\nframe offsets of the CD tracks.\n\nDifferent pressing of a CD often have slightly different frame offsets, and\nhence different disc IDs.\n\nConversely, two different CDs may happen to have exactly the same set of frame\noffsets and hence the same disc ID.\n\"\"\"\nscalar DiscID\n\n\"\"\"\nA length of time, in milliseconds.\n\"\"\"\nscalar Duration\n\n\"\"\"\nAn entity in the MusicBrainz schema.\n\"\"\"\ninterface Entity {\n  \"\"\"\n  The MBID of the entity.\n  \"\"\"\n  mbid: MBID!\n}\n\n\"\"\"\nAn [event](https://musicbrainz.org/doc/Event) refers to an\norganised event which people can attend, and is relevant to MusicBrainz.\nGenerally this means live performances, like concerts and festivals.\n\"\"\"\ntype Event implements Node & Entity {\n  \"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  The MBID of the entity.\n  \"\"\"\n  mbid: MBID!\n\n  \"\"\"\n  The official name of the entity.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  A comment used to help distinguish identically named entitites.\n  \"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"\n  The begin and end dates of the entity’s existence. Its exact\n  meaning depends on the type of entity.\n  \"\"\"\n  lifeSpan: LifeSpan\n\n  \"\"\"\n  The start time of the event.\n  \"\"\"\n  time: Time\n\n  \"\"\"\n  Whether or not the event took place.\n  \"\"\"\n  cancelled: Boolean\n\n  \"\"\"\n  A list of songs performed, optionally including links to\n  artists and works. See the [setlist documentation](https://musicbrainz.org/doc/Event/Setlist)\n  for syntax and examples.\n  \"\"\"\n  setlist: String\n\n  \"\"\"\n  What kind of event the event is, e.g. concert, festival, etc.\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"\n  Relationships between this entity and other entitites.\n  \"\"\"\n  relationships: Relationships\n\n  \"\"\"\n  A list of collections containing this entity.\n  \"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"\n  The rating users have given to this entity.\n  \"\"\"\n  rating: Rating\n\n  \"\"\"\n  A list of tags linked to this entity.\n  \"\"\"\n  tags(after: String, first: Int): TagConnection\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype EventConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [EventEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Event]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype EventEdge {\n  \"\"\"\n  The item at the end of the edge\n  \"\"\"\n  node: Event\n\n  \"\"\"\n  A cursor for use in pagination\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0–100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\n[Instruments](https://musicbrainz.org/doc/Instrument) are\ndevices created or adapted to make musical sounds. Instruments are primarily\nused in relationships between two other entities.\n\"\"\"\ntype Instrument implements Node & Entity {\n  \"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  The MBID of the entity.\n  \"\"\"\n  mbid: MBID!\n\n  \"\"\"\n  The official name of the entity.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  A comment used to help distinguish identically named entitites.\n  \"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"\n  A brief description of the main characteristics of the\n  instrument.\n  \"\"\"\n  description: String\n\n  \"\"\"\n  The type categorises the instrument by the way the sound is\n  created, similar to the [Hornbostel-Sachs](https://en.wikipedia.org/wiki/Hornbostel%E2%80%93Sachs)\n  classification.\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"\n  Relationships between this entity and other entitites.\n  \"\"\"\n  relationships: Relationships\n\n  \"\"\"\n  A list of collections containing this entity.\n  \"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"\n  A list of tags linked to this entity.\n  \"\"\"\n  tags(after: String, first: Int): TagConnection\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype InstrumentConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [InstrumentEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Instrument]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype InstrumentEdge {\n  \"\"\"\n  The item at the end of the edge\n  \"\"\"\n  node: Instrument\n\n  \"\"\"\n  A cursor for use in pagination\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0–100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nAn [Interested Parties Information](https://musicbrainz.org/doc/IPI)\n(IPI) code is an identifying number assigned by the CISAC database for musical\nrights management.\n\"\"\"\nscalar IPI\n\n\"\"\"\nThe [International Standard Name Identifier](https://musicbrainz.org/doc/ISNI)\n(ISNI) is an ISO standard for uniquely identifying the public identities of\ncontributors to media content.\n\"\"\"\nscalar ISNI\n\n\"\"\"\nThe [International Standard Recording Code](https://musicbrainz.org/doc/ISRC)\n(ISRC) is an identification system for audio and music video recordings. It is\nstandarized by the [IFPI](http://www.ifpi.org/) in ISO 3901:2001 and used by\nIFPI members to assign a unique identifier to every distinct sound recording\nthey release. An ISRC identifies a particular [sound recording](https://musicbrainz.org/doc/Recording),\nnot the song itself. Therefore, different recordings, edits, remixes and\nremasters of the same song will each be assigned their own ISRC. However, note\nthat same recording should carry the same ISRC in all countries/territories.\nSongs are identified by analogous [International Standard Musical Work Codes](https://musicbrainz.org/doc/ISWC)\n(ISWCs).\n\"\"\"\nscalar ISRC\n\n\"\"\"\nThe [International Standard Musical Work Code](https://musicbrainz.org/doc/ISWC)\n(ISWC) is an ISO standard similar to ISBNs for identifying musical works /\ncompositions.\n\"\"\"\nscalar ISWC\n\n\"\"\"\n[Labels](https://musicbrainz.org/doc/Label) represent mostly\n(but not only) imprints. To a lesser extent, a label entity may be created to\nrepresent a record company.\n\"\"\"\ntype Label implements Node & Entity {\n  \"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  The MBID of the entity.\n  \"\"\"\n  mbid: MBID!\n\n  \"\"\"\n  The official name of the entity.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  The string to use for the purpose of ordering by name (for\n  example, by moving articles like ‘the’ to the end or a person’s last name to\n  the front).\n  \"\"\"\n  sortName: String\n\n  \"\"\"\n  A comment used to help distinguish identically named entitites.\n  \"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"\n  The country of origin for the label.\n  \"\"\"\n  country: String\n\n  \"\"\"\n  The area in which the label is based.\n  \"\"\"\n  area: Area\n\n  \"\"\"\n  The begin and end dates of the entity’s existence. Its exact\n  meaning depends on the type of entity.\n  \"\"\"\n  lifeSpan: LifeSpan\n\n  \"\"\"\n  The [“LC” code](https://musicbrainz.org/doc/Label/Label_Code)\n  of the label.\n  \"\"\"\n  labelCode: Int\n\n  \"\"\"\n  List of [Interested Parties Information](https://musicbrainz.org/doc/IPI)\n  codes for the label.\n  \"\"\"\n  ipis: [IPI]\n\n  \"\"\"\n  A type describing the main activity of the label, e.g.\n  imprint, production, distributor, rights society, etc.\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"\n  A list of releases linked to this entity.\n  \"\"\"\n  releases(\n    \"\"\"\n    Filter by one or more release group types.\n    \"\"\"\n    type: [ReleaseGroupType]\n\n    \"\"\"\n    Filter by one or more release statuses.\n    \"\"\"\n    status: [ReleaseStatus]\n    after: String\n    first: Int\n  ): ReleaseConnection\n\n  \"\"\"\n  Relationships between this entity and other entitites.\n  \"\"\"\n  relationships: Relationships\n\n  \"\"\"\n  A list of collections containing this entity.\n  \"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"\n  The rating users have given to this entity.\n  \"\"\"\n  rating: Rating\n\n  \"\"\"\n  A list of tags linked to this entity.\n  \"\"\"\n  tags(after: String, first: Int): TagConnection\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LabelConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LabelEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Label]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LabelEdge {\n  \"\"\"\n  The item at the end of the edge\n  \"\"\"\n  node: Label\n\n  \"\"\"\n  A cursor for use in pagination\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0–100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nFields indicating the begin and end date of an entity’s\nlifetime, including whether it has ended (even if the date is unknown).\n\"\"\"\ntype LifeSpan {\n  \"\"\"\n  The start date of the entity’s life span.\n  \"\"\"\n  begin: Date\n\n  \"\"\"\n  The end date of the entity’s life span.\n  \"\"\"\n  end: Date\n\n  \"\"\"\n  Whether or not the entity’s life span has ended.\n  \"\"\"\n  ended: Boolean\n}\n\n\"\"\"\nLanguage code, optionally with country and encoding.\n\"\"\"\nscalar Locale\n\n\"\"\"\nA lookup of an individual MusicBrainz entity by its MBID.\n\"\"\"\ntype LookupQuery {\n  \"\"\"\n  Look up a specific area by its MBID.\n  \"\"\"\n  area(\n    \"\"\"\n    The MBID of the entity.\n    \"\"\"\n    mbid: MBID!\n  ): Area\n\n  \"\"\"\n  Look up a specific artist by its MBID.\n  \"\"\"\n  artist(\n    \"\"\"\n    The MBID of the entity.\n    \"\"\"\n    mbid: MBID!\n  ): Artist\n\n  \"\"\"\n  Look up a specific collection by its MBID.\n  \"\"\"\n  collection(\n    \"\"\"\n    The MBID of the entity.\n    \"\"\"\n    mbid: MBID!\n  ): Collection\n\n  \"\"\"\n  Look up a specific physical disc by its disc ID.\n  \"\"\"\n  disc(\n    \"\"\"\n    The [disc ID](https://musicbrainz.org/doc/Disc_ID)\n    of the disc.\n    \"\"\"\n    discID: DiscID!\n  ): Disc\n\n  \"\"\"\n  Look up a specific event by its MBID.\n  \"\"\"\n  event(\n    \"\"\"\n    The MBID of the entity.\n    \"\"\"\n    mbid: MBID!\n  ): Event\n\n  \"\"\"\n  Look up a specific instrument by its MBID.\n  \"\"\"\n  instrument(\n    \"\"\"\n    The MBID of the entity.\n    \"\"\"\n    mbid: MBID!\n  ): Instrument\n\n  \"\"\"\n  Look up a specific label by its MBID.\n  \"\"\"\n  label(\n    \"\"\"\n    The MBID of the entity.\n    \"\"\"\n    mbid: MBID!\n  ): Label\n\n  \"\"\"\n  Look up a specific place by its MBID.\n  \"\"\"\n  place(\n    \"\"\"\n    The MBID of the entity.\n    \"\"\"\n    mbid: MBID!\n  ): Place\n\n  \"\"\"\n  Look up a specific recording by its MBID.\n  \"\"\"\n  recording(\n    \"\"\"\n    The MBID of the entity.\n    \"\"\"\n    mbid: MBID!\n  ): Recording\n\n  \"\"\"\n  Look up a specific release by its MBID.\n  \"\"\"\n  release(\n    \"\"\"\n    The MBID of the entity.\n    \"\"\"\n    mbid: MBID!\n  ): Release\n\n  \"\"\"\n  Look up a specific release group by its MBID.\n  \"\"\"\n  releaseGroup(\n    \"\"\"\n    The MBID of the entity.\n    \"\"\"\n    mbid: MBID!\n  ): ReleaseGroup\n\n  \"\"\"\n  Look up a specific series by its MBID.\n  \"\"\"\n  series(\n    \"\"\"\n    The MBID of the entity.\n    \"\"\"\n    mbid: MBID!\n  ): Series\n\n  \"\"\"\n  Look up a specific URL by its MBID.\n  \"\"\"\n  url(\n    \"\"\"\n    The MBID of the entity.\n    \"\"\"\n    mbid: MBID\n\n    \"\"\"\n    The web address of the URL entity to look up.\n    \"\"\"\n    resource: URLString\n  ): URL\n\n  \"\"\"\n  Look up a specific work by its MBID.\n  \"\"\"\n  work(\n    \"\"\"\n    The MBID of the entity.\n    \"\"\"\n    mbid: MBID!\n  ): Work\n}\n\n\"\"\"\nThe MBID scalar represents MusicBrainz identifiers, which are\n36-character UUIDs.\n\"\"\"\nscalar MBID\n\n\"\"\"\nA medium is the actual physical medium the audio content is\nstored upon. This means that each CD in a multi-disc release will be entered as\nseparate mediums within the release, and that both sides of a vinyl record or\ncassette will exist on one medium. Mediums have a format (e.g. CD, DVD, vinyl,\ncassette) and can optionally also have a title.\n\"\"\"\ntype Medium {\n  \"\"\"\n  The title of this particular medium.\n  \"\"\"\n  title: String\n\n  \"\"\"\n  The [format](https://musicbrainz.org/doc/Release/Format) of\n  the medium (e.g. CD, DVD, vinyl, cassette).\n  \"\"\"\n  format: String\n\n  \"\"\"\n  The MBID associated with the value of the `format`\n  field.\n  \"\"\"\n  formatID: MBID\n\n  \"\"\"\n  The order of this medium in the release (for example, in a\n  multi-disc release).\n  \"\"\"\n  position: Int\n\n  \"\"\"\n  The number of audio tracks on this medium.\n  \"\"\"\n  trackCount: Int\n\n  \"\"\"\n  A list of physical discs and their disc IDs for this medium.\n  \"\"\"\n  discs: [Disc]\n\n  \"\"\"\n  The list of tracks on the given media.\n  \"\"\"\n  tracks: [Track]\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\n\"\"\"\nA [place](https://musicbrainz.org/doc/Place) is a venue, studio,\nor other place where music is performed, recorded, engineered, etc.\n\"\"\"\ntype Place implements Node & Entity {\n  \"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  The MBID of the entity.\n  \"\"\"\n  mbid: MBID!\n\n  \"\"\"\n  The official name of the entity.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  A comment used to help distinguish identically named entitites.\n  \"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"\n  The address describes the location of the place using the\n  standard addressing format for the country it is located in.\n  \"\"\"\n  address: String\n\n  \"\"\"\n  The area entity representing the area, such as the city, in\n  which the place is located.\n  \"\"\"\n  area: Area\n\n  \"\"\"\n  The geographic coordinates of the place.\n  \"\"\"\n  coordinates: Coordinates\n\n  \"\"\"\n  The begin and end dates of the entity’s existence. Its exact\n  meaning depends on the type of entity.\n  \"\"\"\n  lifeSpan: LifeSpan\n\n  \"\"\"\n  The type categorises the place based on its primary\n  function.\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"\n  A list of events linked to this entity.\n  \"\"\"\n  events(after: String, first: Int): EventConnection\n\n  \"\"\"\n  Relationships between this entity and other entitites.\n  \"\"\"\n  relationships: Relationships\n\n  \"\"\"\n  A list of collections containing this entity.\n  \"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"\n  A list of tags linked to this entity.\n  \"\"\"\n  tags(after: String, first: Int): TagConnection\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PlaceConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PlaceEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Place]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PlaceEdge {\n  \"\"\"\n  The item at the end of the edge\n  \"\"\"\n  node: Place\n\n  \"\"\"\n  A cursor for use in pagination\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0–100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nThe query root, from which multiple types of MusicBrainz\nrequests can be made.\n\"\"\"\ntype Query {\n  \"\"\"\n  Perform a lookup of a MusicBrainz entity by its MBID.\n  \"\"\"\n  lookup: LookupQuery\n\n  \"\"\"\n  Browse all MusicBrainz entities directly linked to another entity.\n  \"\"\"\n  browse: BrowseQuery\n\n  \"\"\"\n  Search for MusicBrainz entities using Lucene query syntax.\n  \"\"\"\n  search: SearchQuery\n\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\n\"\"\"\n[Ratings](https://musicbrainz.org/doc/Rating_System) allow users\nto rate MusicBrainz entities. User may assign a value between 1 and 5; these\nvalues are then aggregated by the server to compute an average community rating\nfor the entity.\n\"\"\"\ntype Rating {\n  \"\"\"\n  The number of votes that have contributed to the rating.\n  \"\"\"\n  voteCount: Int!\n\n  \"\"\"\n  The average rating value based on the aggregated votes.\n  \"\"\"\n  value: Float\n}\n\n\"\"\"\nA [recording](https://musicbrainz.org/doc/Recording) is an\nentity in MusicBrainz which can be linked to tracks on releases. Each track must\nalways be associated with a single recording, but a recording can be linked to\nany number of tracks.\n\nA recording represents distinct audio that has been used to produce at least one\nreleased track through copying or mastering. A recording itself is never\nproduced solely through copying or mastering.\n\nGenerally, the audio represented by a recording corresponds to the audio at a\nstage in the production process before any final mastering but after any editing\nor mixing.\n\"\"\"\ntype Recording implements Node & Entity {\n  \"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  The MBID of the entity.\n  \"\"\"\n  mbid: MBID!\n\n  \"\"\"\n  The official title of the entity.\n  \"\"\"\n  title: String\n\n  \"\"\"\n  A comment used to help distinguish identically named entitites.\n  \"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"\n  The main credited artist(s).\n  \"\"\"\n  artistCredit: [ArtistCredit]\n    @deprecated(\n      reason: \"The `artistCredit` field has been renamed to\\n`artistCredits`, since it is a list of credits and is referred to in the\\nplural form throughout the MusicBrainz documentation. This field is deprecated\\nand will be removed in a major release in the future. Use the equivalent\\n`artistCredits` field.\"\n    )\n\n  \"\"\"\n  The main credited artist(s).\n  \"\"\"\n  artistCredits: [ArtistCredit]\n\n  \"\"\"\n  A list of [International Standard Recording Codes](https://musicbrainz.org/doc/ISRC)\n  (ISRCs) for this recording.\n  \"\"\"\n  isrcs: [ISRC]\n\n  \"\"\"\n  An approximation to the length of the recording, calculated\n  from the lengths of the tracks using it.\n  \"\"\"\n  length: Duration\n\n  \"\"\"\n  Whether this is a video recording.\n  \"\"\"\n  video: Boolean\n\n  \"\"\"\n  A list of artists linked to this entity.\n  \"\"\"\n  artists(after: String, first: Int): ArtistConnection\n\n  \"\"\"\n  A list of releases linked to this entity.\n  \"\"\"\n  releases(\n    \"\"\"\n    Filter by one or more release group types.\n    \"\"\"\n    type: [ReleaseGroupType]\n\n    \"\"\"\n    Filter by one or more release statuses.\n    \"\"\"\n    status: [ReleaseStatus]\n    after: String\n    first: Int\n  ): ReleaseConnection\n\n  \"\"\"\n  Relationships between this entity and other entitites.\n  \"\"\"\n  relationships: Relationships\n\n  \"\"\"\n  A list of collections containing this entity.\n  \"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"\n  The rating users have given to this entity.\n  \"\"\"\n  rating: Rating\n\n  \"\"\"\n  A list of tags linked to this entity.\n  \"\"\"\n  tags(after: String, first: Int): TagConnection\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype RecordingConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [RecordingEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Recording]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype RecordingEdge {\n  \"\"\"\n  The item at the end of the edge\n  \"\"\"\n  node: Recording\n\n  \"\"\"\n  A cursor for use in pagination\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0–100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\n[Relationships](https://musicbrainz.org/doc/Relationships) are a\nway to represent all the different ways in which entities are connected to each\nother and to URLs outside MusicBrainz.\n\"\"\"\ntype Relationship {\n  \"\"\"\n  The target entity.\n  \"\"\"\n  target: Entity!\n\n  \"\"\"\n  The direction of the relationship.\n  \"\"\"\n  direction: String!\n\n  \"\"\"\n  The type of entity on the receiving end of the relationship.\n  \"\"\"\n  targetType: String!\n\n  \"\"\"\n  How the source entity was actually credited, if different\n  from its main (performance) name.\n  \"\"\"\n  sourceCredit: String\n\n  \"\"\"\n  How the target entity was actually credited, if different\n  from its main (performance) name.\n  \"\"\"\n  targetCredit: String\n\n  \"\"\"\n  The date on which the relationship became applicable.\n  \"\"\"\n  begin: Date\n\n  \"\"\"\n  The date on which the relationship became no longer applicable.\n  \"\"\"\n  end: Date\n\n  \"\"\"\n  Whether the relationship still applies.\n  \"\"\"\n  ended: Boolean\n\n  \"\"\"\n  Attributes which modify the relationship. There is a [list\n  of all attributes](https://musicbrainz.org/relationship-attributes), but the\n  attributes which are available, and how they should be used, depends on the\n  relationship type.\n  \"\"\"\n  attributes: [String]\n\n  \"\"\"\n  The type of relationship.\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype RelationshipConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [RelationshipEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Relationship]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype RelationshipEdge {\n  \"\"\"\n  The item at the end of the edge\n  \"\"\"\n  node: Relationship\n\n  \"\"\"\n  A cursor for use in pagination\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0–100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nLists of entity relationships for each entity type.\n\"\"\"\ntype Relationships {\n  \"\"\"\n  A list of relationships between these two entity types.\n  \"\"\"\n  areas(\n    \"\"\"\n    Filter by the relationship direction.\n    \"\"\"\n    direction: String\n\n    \"\"\"\n    Filter by the relationship type.\n    \"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"\n  A list of relationships between these two entity types.\n  \"\"\"\n  artists(\n    \"\"\"\n    Filter by the relationship direction.\n    \"\"\"\n    direction: String\n\n    \"\"\"\n    Filter by the relationship type.\n    \"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"\n  A list of relationships between these two entity types.\n  \"\"\"\n  events(\n    \"\"\"\n    Filter by the relationship direction.\n    \"\"\"\n    direction: String\n\n    \"\"\"\n    Filter by the relationship type.\n    \"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"\n  A list of relationships between these two entity types.\n  \"\"\"\n  instruments(\n    \"\"\"\n    Filter by the relationship direction.\n    \"\"\"\n    direction: String\n\n    \"\"\"\n    Filter by the relationship type.\n    \"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"\n  A list of relationships between these two entity types.\n  \"\"\"\n  labels(\n    \"\"\"\n    Filter by the relationship direction.\n    \"\"\"\n    direction: String\n\n    \"\"\"\n    Filter by the relationship type.\n    \"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"\n  A list of relationships between these two entity types.\n  \"\"\"\n  places(\n    \"\"\"\n    Filter by the relationship direction.\n    \"\"\"\n    direction: String\n\n    \"\"\"\n    Filter by the relationship type.\n    \"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"\n  A list of relationships between these two entity types.\n  \"\"\"\n  recordings(\n    \"\"\"\n    Filter by the relationship direction.\n    \"\"\"\n    direction: String\n\n    \"\"\"\n    Filter by the relationship type.\n    \"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"\n  A list of relationships between these two entity types.\n  \"\"\"\n  releases(\n    \"\"\"\n    Filter by the relationship direction.\n    \"\"\"\n    direction: String\n\n    \"\"\"\n    Filter by the relationship type.\n    \"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"\n  A list of relationships between these two entity types.\n  \"\"\"\n  releaseGroups(\n    \"\"\"\n    Filter by the relationship direction.\n    \"\"\"\n    direction: String\n\n    \"\"\"\n    Filter by the relationship type.\n    \"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"\n  A list of relationships between these two entity types.\n  \"\"\"\n  series(\n    \"\"\"\n    Filter by the relationship direction.\n    \"\"\"\n    direction: String\n\n    \"\"\"\n    Filter by the relationship type.\n    \"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"\n  A list of relationships between these two entity types.\n  \"\"\"\n  urls(\n    \"\"\"\n    Filter by the relationship direction.\n    \"\"\"\n    direction: String\n\n    \"\"\"\n    Filter by the relationship type.\n    \"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"\n  A list of relationships between these two entity types.\n  \"\"\"\n  works(\n    \"\"\"\n    Filter by the relationship direction.\n    \"\"\"\n    direction: String\n\n    \"\"\"\n    Filter by the relationship type.\n    \"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n}\n\n\"\"\"\nA [release](https://musicbrainz.org/doc/Release) represents the\nunique release (i.e. issuing) of a product on a specific date with specific\nrelease information such as the country, label, barcode, packaging, etc. If you\nwalk into a store and purchase an album or single, they’re each represented in\nMusicBrainz as one release.\n\"\"\"\ntype Release implements Node & Entity {\n  \"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  The MBID of the entity.\n  \"\"\"\n  mbid: MBID!\n\n  \"\"\"\n  The official title of the entity.\n  \"\"\"\n  title: String\n\n  \"\"\"\n  A comment used to help distinguish identically named entitites.\n  \"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"\n  The main credited artist(s).\n  \"\"\"\n  artistCredit: [ArtistCredit]\n    @deprecated(\n      reason: \"The `artistCredit` field has been renamed to\\n`artistCredits`, since it is a list of credits and is referred to in the\\nplural form throughout the MusicBrainz documentation. This field is deprecated\\nand will be removed in a major release in the future. Use the equivalent\\n`artistCredits` field.\"\n    )\n\n  \"\"\"\n  The main credited artist(s).\n  \"\"\"\n  artistCredits: [ArtistCredit]\n\n  \"\"\"\n  The release events for this release.\n  \"\"\"\n  releaseEvents: [ReleaseEvent]\n\n  \"\"\"\n  The [release date](https://musicbrainz.org/doc/Release/Date)\n  is the date in which a release was made available through some sort of\n  distribution mechanism.\n  \"\"\"\n  date: Date\n\n  \"\"\"\n  The country in which the release was issued.\n  \"\"\"\n  country: String\n\n  \"\"\"\n  The [Amazon Standard Identification Number](https://musicbrainz.org/doc/ASIN)\n  of the release.\n  \"\"\"\n  asin: ASIN\n\n  \"\"\"\n  The [barcode](https://en.wikipedia.org/wiki/Barcode), if the\n  release has one. The most common types found on releases are 12-digit\n  [UPCs](https://en.wikipedia.org/wiki/Universal_Product_Code) and 13-digit\n  [EANs](https://en.wikipedia.org/wiki/International_Article_Number).\n  \"\"\"\n  barcode: String\n\n  \"\"\"\n  The status describes how “official” a release is.\n  \"\"\"\n  status: ReleaseStatus\n\n  \"\"\"\n  The MBID associated with the value of the `status`\n  field.\n  \"\"\"\n  statusID: MBID\n\n  \"\"\"\n  The physical packaging that accompanies the release. See\n  the [list of packaging](https://musicbrainz.org/doc/Release/Packaging) for more\n  information.\n  \"\"\"\n  packaging: String\n\n  \"\"\"\n  The MBID associated with the value of the `packaging`\n  field.\n  \"\"\"\n  packagingID: MBID\n\n  \"\"\"\n  Data quality indicates how good the data for a release is.\n  It is not a mark of how good or bad the music itself is – for that, use\n  [ratings](https://musicbrainz.org/doc/Rating_System).\n  \"\"\"\n  quality: String\n\n  \"\"\"\n  The media on which the release was distributed.\n  \"\"\"\n  media: [Medium]\n\n  \"\"\"\n  A list of artists linked to this entity.\n  \"\"\"\n  artists(after: String, first: Int): ArtistConnection\n\n  \"\"\"\n  A list of labels linked to this entity.\n  \"\"\"\n  labels(after: String, first: Int): LabelConnection\n\n  \"\"\"\n  A list of recordings linked to this entity.\n  \"\"\"\n  recordings(after: String, first: Int): RecordingConnection\n\n  \"\"\"\n  A list of release groups linked to this entity.\n  \"\"\"\n  releaseGroups(\n    \"\"\"\n    Filter by one or more release group types.\n    \"\"\"\n    type: [ReleaseGroupType]\n    after: String\n    first: Int\n  ): ReleaseGroupConnection\n\n  \"\"\"\n  Relationships between this entity and other entitites.\n  \"\"\"\n  relationships: Relationships\n\n  \"\"\"\n  A list of collections containing this entity.\n  \"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"\n  A list of tags linked to this entity.\n  \"\"\"\n  tags(after: String, first: Int): TagConnection\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype ReleaseConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [ReleaseEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Release]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype ReleaseEdge {\n  \"\"\"\n  The item at the end of the edge\n  \"\"\"\n  node: Release\n\n  \"\"\"\n  A cursor for use in pagination\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0–100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nThe date on which a release was issued in a country/region with\na particular label, catalog number, barcode, and format.\n\"\"\"\ntype ReleaseEvent {\n  area: Area\n  date: Date\n}\n\n\"\"\"\nA [release group](https://musicbrainz.org/doc/Release_Group) is\nused to group several different releases into a single logical entity. Every\nrelease belongs to one, and only one release group.\n\nBoth release groups and releases are “albums” in a general sense, but with an\nimportant difference: a release is something you can buy as media such as a CD\nor a vinyl record, while a release group embraces the overall concept of an\nalbum – it doesn’t matter how many CDs or editions/versions it had.\n\"\"\"\ntype ReleaseGroup implements Node & Entity {\n  \"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  The MBID of the entity.\n  \"\"\"\n  mbid: MBID!\n\n  \"\"\"\n  The official title of the entity.\n  \"\"\"\n  title: String\n\n  \"\"\"\n  A comment used to help distinguish identically named entitites.\n  \"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"\n  The main credited artist(s).\n  \"\"\"\n  artistCredit: [ArtistCredit]\n    @deprecated(\n      reason: \"The `artistCredit` field has been renamed to\\n`artistCredits`, since it is a list of credits and is referred to in the\\nplural form throughout the MusicBrainz documentation. This field is deprecated\\nand will be removed in a major release in the future. Use the equivalent\\n`artistCredits` field.\"\n    )\n\n  \"\"\"\n  The main credited artist(s).\n  \"\"\"\n  artistCredits: [ArtistCredit]\n\n  \"\"\"\n  The date of the earliest release in the group.\n  \"\"\"\n  firstReleaseDate: Date\n\n  \"\"\"\n  The [type](https://musicbrainz.org/doc/Release_Group/Type)\n  of a release group describes what kind of releases the release group represents,\n  e.g. album, single, soundtrack, compilation, etc. A release group can have a\n  “main” type and an unspecified number of additional types.\n  \"\"\"\n  primaryType: ReleaseGroupType\n\n  \"\"\"\n  The MBID associated with the value of the `primaryType`\n  field.\n  \"\"\"\n  primaryTypeID: MBID\n\n  \"\"\"\n  Additional [types](https://musicbrainz.org/doc/Release_Group/Type)\n  that apply to this release group.\n  \"\"\"\n  secondaryTypes: [ReleaseGroupType]\n\n  \"\"\"\n  The MBIDs associated with the values of the `secondaryTypes`\n  field.\n  \"\"\"\n  secondaryTypeIDs: [MBID]\n\n  \"\"\"\n  A list of artists linked to this entity.\n  \"\"\"\n  artists(after: String, first: Int): ArtistConnection\n\n  \"\"\"\n  A list of releases linked to this entity.\n  \"\"\"\n  releases(\n    \"\"\"\n    Filter by one or more release group types.\n    \"\"\"\n    type: [ReleaseGroupType]\n\n    \"\"\"\n    Filter by one or more release statuses.\n    \"\"\"\n    status: [ReleaseStatus]\n    after: String\n    first: Int\n  ): ReleaseConnection\n\n  \"\"\"\n  Relationships between this entity and other entitites.\n  \"\"\"\n  relationships: Relationships\n\n  \"\"\"\n  A list of collections containing this entity.\n  \"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"\n  The rating users have given to this entity.\n  \"\"\"\n  rating: Rating\n\n  \"\"\"\n  A list of tags linked to this entity.\n  \"\"\"\n  tags(after: String, first: Int): TagConnection\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype ReleaseGroupConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [ReleaseGroupEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [ReleaseGroup]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype ReleaseGroupEdge {\n  \"\"\"\n  The item at the end of the edge\n  \"\"\"\n  node: ReleaseGroup\n\n  \"\"\"\n  A cursor for use in pagination\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0–100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nA type used to describe release groups, e.g. album, single, EP,\netc.\n\"\"\"\nenum ReleaseGroupType {\n  \"\"\"\n  An album, perhaps better defined as a “Long Play” (LP)\n  release, generally consists of previously unreleased material (unless this type\n  is combined with secondary types which change that, such as “Compilation”). This\n  includes album re-issues, with or without bonus tracks.\n  \"\"\"\n  ALBUM\n\n  \"\"\"\n  A single typically has one main song and possibly a handful\n  of additional tracks or remixes of the main track. A single is usually named\n  after its main song.\n  \"\"\"\n  SINGLE\n\n  \"\"\"\n  An EP is a so-called “Extended Play” release and often\n  contains the letters EP in the title. Generally an EP will be shorter than a\n  full length release (an LP or “Long Play”) and the tracks are usually exclusive\n  to the EP, in other words the tracks don’t come from a previously issued\n  release. EP is fairly difficult to define; usually it should only be assumed\n  that a release is an EP if the artist defines it as such.\n  \"\"\"\n  EP\n\n  \"\"\"\n  Any release that does not fit any of the other categories.\n  \"\"\"\n  OTHER\n\n  \"\"\"\n  An episodic release that was originally broadcast via radio,\n  television, or the Internet, including podcasts.\n  \"\"\"\n  BROADCAST\n\n  \"\"\"\n  A compilation is a collection of previously released tracks\n  by one or more artists.\n  \"\"\"\n  COMPILATION\n\n  \"\"\"\n  A soundtrack is the musical score to a movie, TV series,\n  stage show, computer game, etc.\n  \"\"\"\n  SOUNDTRACK\n\n  \"\"\"\n  A non-music spoken word release.\n  \"\"\"\n  SPOKENWORD\n\n  \"\"\"\n  An interview release contains an interview, generally with\n  an artist.\n  \"\"\"\n  INTERVIEW\n\n  \"\"\"\n  An audiobook is a book read by a narrator without music.\n  \"\"\"\n  AUDIOBOOK\n\n  \"\"\"\n  A release that was recorded live.\n  \"\"\"\n  LIVE\n\n  \"\"\"\n  A release that was (re)mixed from previously released\n  material.\n  \"\"\"\n  REMIX\n\n  \"\"\"\n  A DJ-mix is a sequence of several recordings played one\n  after the other, each one modified so that they blend together into a continuous\n  flow of music. A DJ mix release requires that the recordings be modified in some\n  manner, and the DJ who does this modification is usually (although not always)\n  credited in a fairly prominent way.\n  \"\"\"\n  DJMIX\n\n  \"\"\"\n  Promotional in nature (but not necessarily free), mixtapes\n  and street albums are often released by artists to promote new artists, or\n  upcoming studio albums by prominent artists. They are also sometimes used to\n  keep fans’ attention between studio releases and are most common in rap & hip\n  hop genres. They are often not sanctioned by the artist’s label, may lack proper\n  sample or song clearances and vary widely in production and recording quality.\n  While mixtapes are generally DJ-mixed, they are distinct from commercial DJ\n  mixes (which are usually deemed compilations) and are defined by having a\n  significant proportion of new material, including original production or\n  original vocals over top of other artists’ instrumentals. They are distinct from\n  demos in that they are designed for release directly to the public and fans, not\n  to labels.\n  \"\"\"\n  MIXTAPE\n\n  \"\"\"\n  A release that was recorded for limited circulation or\n  reference use rather than for general public release.\n  \"\"\"\n  DEMO\n\n  \"\"\"\n  A non-album track (special case).\n  \"\"\"\n  NAT\n}\n\n\"\"\"\nA type used to describe the status of releases, e.g. official,\nbootleg, etc.\n\"\"\"\nenum ReleaseStatus {\n  \"\"\"\n  Any release officially sanctioned by the artist and/or their\n  record company. (Most releases will fit into this category.)\n  \"\"\"\n  OFFICIAL\n\n  \"\"\"\n  A giveaway release or a release intended to promote an\n  upcoming official release, e.g. prerelease albums or releases included with a\n  magazine.\n  \"\"\"\n  PROMOTION\n\n  \"\"\"\n  An unofficial/underground release that was not sanctioned by\n  the artist and/or the record company.\n  \"\"\"\n  BOOTLEG\n\n  \"\"\"\n  A pseudo-release is a duplicate release for\n  translation/transliteration purposes.\n  \"\"\"\n  PSEUDORELEASE\n}\n\n\"\"\"\nA search for MusicBrainz entities using Lucene query syntax.\n\"\"\"\ntype SearchQuery {\n  \"\"\"\n  Search for area entities matching the given query.\n  \"\"\"\n  areas(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): AreaConnection\n\n  \"\"\"\n  Search for artist entities matching the given query.\n  \"\"\"\n  artists(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): ArtistConnection\n\n  \"\"\"\n  Search for event entities matching the given query.\n  \"\"\"\n  events(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): EventConnection\n\n  \"\"\"\n  Search for instrument entities matching the given query.\n  \"\"\"\n  instruments(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): InstrumentConnection\n\n  \"\"\"\n  Search for label entities matching the given query.\n  \"\"\"\n  labels(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): LabelConnection\n\n  \"\"\"\n  Search for place entities matching the given query.\n  \"\"\"\n  places(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): PlaceConnection\n\n  \"\"\"\n  Search for recording entities matching the given query.\n  \"\"\"\n  recordings(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): RecordingConnection\n\n  \"\"\"\n  Search for release entities matching the given query.\n  \"\"\"\n  releases(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): ReleaseConnection\n\n  \"\"\"\n  Search for release group entities matching the given query.\n  \"\"\"\n  releaseGroups(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): ReleaseGroupConnection\n\n  \"\"\"\n  Search for series entities matching the given query.\n  \"\"\"\n  series(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): SeriesConnection\n\n  \"\"\"\n  Search for work entities matching the given query.\n  \"\"\"\n  works(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): WorkConnection\n}\n\n\"\"\"\nA [series](https://musicbrainz.org/doc/Series) is a sequence of\nseparate release groups, releases, recordings, works or events with a common\ntheme.\n\"\"\"\ntype Series implements Node & Entity {\n  \"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  The MBID of the entity.\n  \"\"\"\n  mbid: MBID!\n\n  \"\"\"\n  The official name of the entity.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  A comment used to help distinguish identically named entitites.\n  \"\"\"\n  disambiguation: String\n\n  \"\"\"\n  The type primarily describes what type of entity the series\n  contains.\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"\n  Relationships between this entity and other entitites.\n  \"\"\"\n  relationships: Relationships\n\n  \"\"\"\n  A list of collections containing this entity.\n  \"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"\n  A list of tags linked to this entity.\n  \"\"\"\n  tags(after: String, first: Int): TagConnection\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype SeriesConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [SeriesEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Series]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype SeriesEdge {\n  \"\"\"\n  The item at the end of the edge\n  \"\"\"\n  node: Series\n\n  \"\"\"\n  A cursor for use in pagination\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0–100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\n[Tags](https://musicbrainz.org/tags) are a way to mark entities\nwith extra information – for example, the genres that apply to an artist,\nrelease, or recording.\n\"\"\"\ntype Tag {\n  \"\"\"\n  The tag label.\n  \"\"\"\n  name: String!\n\n  \"\"\"\n  How many times this tag has been applied to the entity.\n  \"\"\"\n  count: Int\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype TagConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [TagEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Tag]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype TagEdge {\n  \"\"\"\n  The item at the end of the edge\n  \"\"\"\n  node: Tag\n\n  \"\"\"\n  A cursor for use in pagination\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0–100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nA time of day, in 24-hour hh:mm notation.\n\"\"\"\nscalar Time\n\n\"\"\"\nA track is the way a recording is represented on a particular\n  release (or, more exactly, on a particular medium). Every track has a title\n  (see the guidelines for titles) and is credited to one or more artists.\n\"\"\"\ntype Track implements Entity {\n  \"\"\"\n  The MBID of the entity.\n  \"\"\"\n  mbid: MBID!\n\n  \"\"\"\n  The official title of the entity.\n  \"\"\"\n  title: String\n\n  \"\"\"\n  The track’s position on the overall release (including all\n  tracks from all discs).\n  \"\"\"\n  position: Int\n\n  \"\"\"\n  The track number, which may include information about the\n  disc or side it appears on, e.g. “A1” or “B3”.\n  \"\"\"\n  number: String\n\n  \"\"\"\n  The length of the track.\n  \"\"\"\n  length: Duration\n\n  \"\"\"\n  The recording that appears on the track.\n  \"\"\"\n  recording: Recording\n}\n\n\"\"\"\nA [URL](https://musicbrainz.org/doc/URL) pointing to a resource\nexternal to MusicBrainz, i.e. an official homepage, a site where music can be\nacquired, an entry in another database, etc.\n\"\"\"\ntype URL implements Node & Entity {\n  \"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  The MBID of the entity.\n  \"\"\"\n  mbid: MBID!\n\n  \"\"\"\n  The actual URL string.\n  \"\"\"\n  resource: URLString!\n\n  \"\"\"\n  Relationships between this entity and other entitites.\n  \"\"\"\n  relationships: Relationships\n}\n\n\"\"\"\nA web address.\n\"\"\"\nscalar URLString\n\n\"\"\"\nA [work](https://musicbrainz.org/doc/Work) is a distinct\nintellectual or artistic creation, which can be expressed in the form of one or\nmore audio recordings.\n\"\"\"\ntype Work implements Node & Entity {\n  \"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  The MBID of the entity.\n  \"\"\"\n  mbid: MBID!\n\n  \"\"\"\n  The official title of the entity.\n  \"\"\"\n  title: String\n\n  \"\"\"\n  A comment used to help distinguish identically named entitites.\n  \"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"\n  A list of [ISWCs](https://musicbrainz.org/doc/ISWC) assigned\n  to the work by copyright collecting agencies.\n  \"\"\"\n  iswcs: [String]\n\n  \"\"\"\n  The language in which the work was originally written.\n  \"\"\"\n  language: String\n\n  \"\"\"\n  The type of work.\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"\n  A list of artists linked to this entity.\n  \"\"\"\n  artists(after: String, first: Int): ArtistConnection\n\n  \"\"\"\n  Relationships between this entity and other entitites.\n  \"\"\"\n  relationships: Relationships\n\n  \"\"\"\n  A list of collections containing this entity.\n  \"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"\n  The rating users have given to this entity.\n  \"\"\"\n  rating: Rating\n\n  \"\"\"\n  A list of tags linked to this entity.\n  \"\"\"\n  tags(after: String, first: Int): TagConnection\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype WorkConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [WorkEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Work]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype WorkEdge {\n  \"\"\"\n  The item at the end of the edge\n  \"\"\"\n  node: Work\n\n  \"\"\"\n  A cursor for use in pagination\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0–100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n",
      "containsQueryType": true,
      "typesUndefined": [],
      "directivesUndefined": [
        "deprecated"
      ],
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 58,
      "containsCycle": true,
      "numDefinitions": 75
    }
  ],
  "metrics": {
    "created_at": "2016-12-03T08:39:08Z",
    "updated_at": "2019-07-19T09:23:43Z",
    "pushed_at": "2018-10-11T09:56:42Z",
    "issues": 7,
    "watchers": 1,
    "fork_count": 19,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 30,
    "pull_requests_open": 1,
    "pull_requests_closed": 17,
    "pull_requests_merged": 12,
    "releases": 19,
    "stargazers": 58
  }
}