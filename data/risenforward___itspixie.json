{
  "repo_name": "itspixie",
  "repo_full_name": "risenforward/itspixie",
  "repo_owner": "risenforward",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "document.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/withAndWithoutId/document.graphql",
      "sha": "9364ff30f171ce88f2bea6d1ca331d6a5ff00fa2",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/withAndWithoutId/document.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/9364ff30f171ce88f2bea6d1ca331d6a5ff00fa2",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/withAndWithoutId/document.graphql",
      "content": "type AggregateTypeWithId {\n  count: Int!\n}\n\ntype AggregateTypeWithoutId {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createTypeWithId(data: TypeWithIdCreateInput!): TypeWithId!\n  createTypeWithoutId(data: TypeWithoutIdCreateInput!): TypeWithoutId!\n  updateTypeWithId(data: TypeWithIdUpdateInput!, where: TypeWithIdWhereUniqueInput!): TypeWithId\n  updateTypeWithoutId(data: TypeWithoutIdUpdateInput!, where: TypeWithoutIdWhereUniqueInput!): TypeWithoutId\n  deleteTypeWithId(where: TypeWithIdWhereUniqueInput!): TypeWithId\n  deleteTypeWithoutId(where: TypeWithoutIdWhereUniqueInput!): TypeWithoutId\n  upsertTypeWithId(where: TypeWithIdWhereUniqueInput!, create: TypeWithIdCreateInput!, update: TypeWithIdUpdateInput!): TypeWithId!\n  upsertTypeWithoutId(where: TypeWithoutIdWhereUniqueInput!, create: TypeWithoutIdCreateInput!, update: TypeWithoutIdUpdateInput!): TypeWithoutId!\n  updateManyTypeWithIds(data: TypeWithIdUpdateManyMutationInput!, where: TypeWithIdWhereInput): BatchPayload!\n  updateManyTypeWithoutIds(data: TypeWithoutIdUpdateManyMutationInput!, where: TypeWithoutIdWhereInput): BatchPayload!\n  deleteManyTypeWithIds(where: TypeWithIdWhereInput): BatchPayload!\n  deleteManyTypeWithoutIds(where: TypeWithoutIdWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  typeWithIds(where: TypeWithIdWhereInput, orderBy: TypeWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TypeWithId]!\n  typeWithoutIds(where: TypeWithoutIdWhereInput, orderBy: TypeWithoutIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TypeWithoutId]!\n  typeWithId(where: TypeWithIdWhereUniqueInput!): TypeWithId\n  typeWithoutId(where: TypeWithoutIdWhereUniqueInput!): TypeWithoutId\n  typeWithIdsConnection(where: TypeWithIdWhereInput, orderBy: TypeWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TypeWithIdConnection!\n  typeWithoutIdsConnection(where: TypeWithoutIdWhereInput, orderBy: TypeWithoutIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TypeWithoutIdConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  typeWithId(where: TypeWithIdSubscriptionWhereInput): TypeWithIdSubscriptionPayload\n  typeWithoutId(where: TypeWithoutIdSubscriptionWhereInput): TypeWithoutIdSubscriptionPayload\n}\n\ntype TypeWithId implements Node {\n  id: ID!\n  field: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype TypeWithIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [TypeWithIdEdge]!\n  aggregate: AggregateTypeWithId!\n}\n\ninput TypeWithIdCreateInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype TypeWithIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: TypeWithId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum TypeWithIdOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype TypeWithIdPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype TypeWithIdSubscriptionPayload {\n  mutation: MutationType!\n  node: TypeWithId\n  updatedFields: [String!]\n  previousValues: TypeWithIdPreviousValues\n}\n\ninput TypeWithIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TypeWithIdWhereInput\n}\n\ninput TypeWithIdUpdateInput {\n  field: String\n}\n\ninput TypeWithIdUpdateManyMutationInput {\n  field: String\n}\n\ninput TypeWithIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput TypeWithIdWhereUniqueInput {\n  id: ID\n}\n\ntype TypeWithoutId {\n  removeThisIdd: ID!\n  field: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype TypeWithoutIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [TypeWithoutIdEdge]!\n  aggregate: AggregateTypeWithoutId!\n}\n\ninput TypeWithoutIdCreateInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype TypeWithoutIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: TypeWithoutId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum TypeWithoutIdOrderByInput {\n  removeThisIdd_ASC\n  removeThisIdd_DESC\n  field_ASC\n  field_DESC\n}\n\ntype TypeWithoutIdPreviousValues {\n  removeThisIdd: ID!\n  field: String!\n}\n\ntype TypeWithoutIdSubscriptionPayload {\n  mutation: MutationType!\n  node: TypeWithoutId\n  updatedFields: [String!]\n  previousValues: TypeWithoutIdPreviousValues\n}\n\ninput TypeWithoutIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithoutIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithoutIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithoutIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TypeWithoutIdWhereInput\n}\n\ninput TypeWithoutIdUpdateInput {\n  field: String\n}\n\ninput TypeWithoutIdUpdateManyMutationInput {\n  field: String\n}\n\ninput TypeWithoutIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithoutIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithoutIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithoutIdWhereInput!]\n  removeThisIdd: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisIdd_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisIdd_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisIdd_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisIdd_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisIdd_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisIdd_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisIdd_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisIdd_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisIdd_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisIdd_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisIdd_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisIdd_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisIdd_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput TypeWithoutIdWhereUniqueInput {\n  removeThisIdd: ID\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 34
    },
    {
      "name": "document.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/todo/document.graphql",
      "sha": "5027cb55727334bd2f962637d22448e3b2c06c60",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/todo/document.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/5027cb55727334bd2f962637d22448e3b2c06c60",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/todo/document.graphql",
      "content": "type AggregateTodo {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createTodo(data: TodoCreateInput!): Todo!\n  createUser(data: UserCreateInput!): User!\n  updateTodo(data: TodoUpdateInput!, where: TodoWhereUniqueInput!): Todo\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteTodo(where: TodoWhereUniqueInput!): Todo\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertTodo(where: TodoWhereUniqueInput!, create: TodoCreateInput!, update: TodoUpdateInput!): Todo!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyTodoes(data: TodoUpdateManyMutationInput!, where: TodoWhereInput): BatchPayload!\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  deleteManyTodoes(where: TodoWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  todoes(where: TodoWhereInput, orderBy: TodoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Todo]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  todo(where: TodoWhereUniqueInput!): Todo\n  user(where: UserWhereUniqueInput!): User\n  todoesConnection(where: TodoWhereInput, orderBy: TodoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TodoConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  todo(where: TodoSubscriptionWhereInput): TodoSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype Todo implements Node {\n  id: ID!\n  text: String!\n  done: Boolean!\n  user: User!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype TodoConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [TodoEdge]!\n  aggregate: AggregateTodo!\n}\n\ninput TodoCreateInput {\n  text: String!\n  done: Boolean!\n  user: UserCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype TodoEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Todo!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum TodoOrderByInput {\n  id_ASC\n  id_DESC\n  text_ASC\n  text_DESC\n  done_ASC\n  done_DESC\n}\n\ntype TodoPreviousValues {\n  id: ID!\n  text: String!\n  done: Boolean!\n}\n\ntype TodoSubscriptionPayload {\n  mutation: MutationType!\n  node: Todo\n  updatedFields: [String!]\n  previousValues: TodoPreviousValues\n}\n\ninput TodoSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TodoSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TodoSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TodoSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TodoWhereInput\n}\n\ninput TodoUpdateInput {\n  text: String\n  done: Boolean\n  user: UserUpdateOneRequiredInput\n}\n\ninput TodoUpdateManyMutationInput {\n  text: String\n  done: Boolean\n}\n\ninput TodoWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TodoWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TodoWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TodoWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n  done: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  done_not: Boolean\n}\n\ninput TodoWhereUniqueInput {\n  id: ID\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n}\n\ninput UserCreateOneInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateDataInput {\n  name: String\n}\n\ninput UserUpdateInput {\n  name: String\n}\n\ninput UserUpdateManyMutationInput {\n  name: String\n}\n\ninput UserUpdateOneRequiredInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n  update: UserUpdateDataInput\n  upsert: UserUpsertNestedInput\n}\n\ninput UserUpsertNestedInput {\n  update: UserUpdateDataInput!\n  create: UserCreateInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 17,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 38
    },
    {
      "name": "relational.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/todo/relational.graphql",
      "sha": "788eca06b0fd232132f6de8e5be104945692c662",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/todo/relational.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/788eca06b0fd232132f6de8e5be104945692c662",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/todo/relational.graphql",
      "content": "type AggregateTodo {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createTodo(data: TodoCreateInput!): Todo!\n  createUser(data: UserCreateInput!): User!\n  updateTodo(data: TodoUpdateInput!, where: TodoWhereUniqueInput!): Todo\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteTodo(where: TodoWhereUniqueInput!): Todo\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertTodo(where: TodoWhereUniqueInput!, create: TodoCreateInput!, update: TodoUpdateInput!): Todo!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyTodoes(data: TodoUpdateManyMutationInput!, where: TodoWhereInput): BatchPayload!\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  deleteManyTodoes(where: TodoWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  todoes(where: TodoWhereInput, orderBy: TodoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Todo]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  todo(where: TodoWhereUniqueInput!): Todo\n  user(where: UserWhereUniqueInput!): User\n  todoesConnection(where: TodoWhereInput, orderBy: TodoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TodoConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  todo(where: TodoSubscriptionWhereInput): TodoSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype Todo implements Node {\n  id: ID!\n  text: String!\n  done: Boolean!\n  user: User!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype TodoConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [TodoEdge]!\n  aggregate: AggregateTodo!\n}\n\ninput TodoCreateInput {\n  text: String!\n  done: Boolean!\n  user: UserCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype TodoEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Todo!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum TodoOrderByInput {\n  id_ASC\n  id_DESC\n  text_ASC\n  text_DESC\n  done_ASC\n  done_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TodoPreviousValues {\n  id: ID!\n  text: String!\n  done: Boolean!\n}\n\ntype TodoSubscriptionPayload {\n  mutation: MutationType!\n  node: Todo\n  updatedFields: [String!]\n  previousValues: TodoPreviousValues\n}\n\ninput TodoSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TodoSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TodoSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TodoSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TodoWhereInput\n}\n\ninput TodoUpdateInput {\n  text: String\n  done: Boolean\n  user: UserUpdateOneRequiredInput\n}\n\ninput TodoUpdateManyMutationInput {\n  text: String\n  done: Boolean\n}\n\ninput TodoWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TodoWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TodoWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TodoWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n  done: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  done_not: Boolean\n  user: UserWhereInput\n}\n\ninput TodoWhereUniqueInput {\n  id: ID\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n}\n\ninput UserCreateOneInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateDataInput {\n  name: String\n}\n\ninput UserUpdateInput {\n  name: String\n}\n\ninput UserUpdateManyMutationInput {\n  name: String\n}\n\ninput UserUpdateOneRequiredInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n  update: UserUpdateDataInput\n  upsert: UserUpsertNestedInput\n}\n\ninput UserUpsertNestedInput {\n  update: UserUpdateDataInput!\n  create: UserCreateInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 39
    },
    {
      "name": "embedded.graphql",
      "path": "client/src/codegen/fixtures/embedded.graphql",
      "sha": "be9882b3caaa1220c8380b9e30c11be47ec378c9",
      "url": "https://api.github.com/repositories/162263047/contents/client/src/codegen/fixtures/embedded.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/be9882b3caaa1220c8380b9e30c11be47ec378c9",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/client/src/codegen/fixtures/embedded.graphql",
      "content": "type Query {\n  user: User\n}\n\ntype User {\n  id: ID!\n  name: String!\n  address: Address\n}\n\ntype Address {\n  location: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 3
    },
    {
      "name": "relational.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/financial/relational.graphql",
      "sha": "8d791169bbf1952a0d961b919d334499592380a5",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/financial/relational.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/8d791169bbf1952a0d961b919d334499592380a5",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/financial/relational.graphql",
      "content": "enum ACH_TYPE {\n  SAVINGS\n  CHECKING\n}\n\ntype AggregateCampus {\n  count: Int!\n}\n\ntype AggregateFinancialAccount {\n  count: Int!\n}\n\ntype AggregateFinancialPaymentDetail {\n  count: Int!\n}\n\ntype AggregateFinancialScheduledTransaction {\n  count: Int!\n}\n\ntype AggregateFinancialTransaction {\n  count: Int!\n}\n\ntype AggregateGroup {\n  count: Int!\n}\n\ntype AggregateGroupInvite {\n  count: Int!\n}\n\ntype AggregateGroupMember {\n  count: Int!\n}\n\ntype AggregateGroupRole {\n  count: Int!\n}\n\ntype AggregateGroupType {\n  count: Int!\n}\n\ntype AggregateLocation {\n  count: Int!\n}\n\ntype AggregatePerson {\n  count: Int!\n}\n\ntype AggregatePhoneNumber {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\ntype Campus implements Node {\n  id: ID!\n  accounts(where: FinancialAccountWhereInput, orderBy: FinancialAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialAccount!]\n  description: String\n  isActive: Boolean\n  organization: Group\n  location: Location\n  name: String!\n  phoneNumbers(where: PhoneNumberWhereInput, orderBy: PhoneNumberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PhoneNumber!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CampusConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CampusEdge]!\n  aggregate: AggregateCampus!\n}\n\ninput CampusCreateInput {\n  description: String\n  isActive: Boolean\n  name: String!\n  accounts: FinancialAccountCreateManyWithoutCampusesInput\n  organization: GroupCreateOneInput\n  location: LocationCreateOneInput\n  phoneNumbers: PhoneNumberCreateManyInput\n}\n\ninput CampusCreateManyWithoutAccountsInput {\n  create: [CampusCreateWithoutAccountsInput!]\n  connect: [CampusWhereUniqueInput!]\n}\n\ninput CampusCreateWithoutAccountsInput {\n  description: String\n  isActive: Boolean\n  name: String!\n  organization: GroupCreateOneInput\n  location: LocationCreateOneInput\n  phoneNumbers: PhoneNumberCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CampusEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Campus!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CampusOrderByInput {\n  id_ASC\n  id_DESC\n  description_ASC\n  description_DESC\n  isActive_ASC\n  isActive_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CampusPreviousValues {\n  id: ID!\n  description: String\n  isActive: Boolean\n  name: String!\n}\n\ninput CampusScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CampusScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CampusScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CampusScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  isActive: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isActive_not: Boolean\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ntype CampusSubscriptionPayload {\n  mutation: MutationType!\n  node: Campus\n  updatedFields: [String!]\n  previousValues: CampusPreviousValues\n}\n\ninput CampusSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CampusSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CampusSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CampusSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CampusWhereInput\n}\n\ninput CampusUpdateInput {\n  description: String\n  isActive: Boolean\n  name: String\n  accounts: FinancialAccountUpdateManyWithoutCampusesInput\n  organization: GroupUpdateOneInput\n  location: LocationUpdateOneInput\n  phoneNumbers: PhoneNumberUpdateManyInput\n}\n\ninput CampusUpdateManyDataInput {\n  description: String\n  isActive: Boolean\n  name: String\n}\n\ninput CampusUpdateManyMutationInput {\n  description: String\n  isActive: Boolean\n  name: String\n}\n\ninput CampusUpdateManyWithoutAccountsInput {\n  create: [CampusCreateWithoutAccountsInput!]\n  connect: [CampusWhereUniqueInput!]\n  disconnect: [CampusWhereUniqueInput!]\n  delete: [CampusWhereUniqueInput!]\n  update: [CampusUpdateWithWhereUniqueWithoutAccountsInput!]\n  updateMany: [CampusUpdateManyWithWhereNestedInput!]\n  deleteMany: [CampusScalarWhereInput!]\n  upsert: [CampusUpsertWithWhereUniqueWithoutAccountsInput!]\n}\n\ninput CampusUpdateManyWithWhereNestedInput {\n  where: CampusScalarWhereInput!\n  data: CampusUpdateManyDataInput!\n}\n\ninput CampusUpdateWithoutAccountsDataInput {\n  description: String\n  isActive: Boolean\n  name: String\n  organization: GroupUpdateOneInput\n  location: LocationUpdateOneInput\n  phoneNumbers: PhoneNumberUpdateManyInput\n}\n\ninput CampusUpdateWithWhereUniqueWithoutAccountsInput {\n  where: CampusWhereUniqueInput!\n  data: CampusUpdateWithoutAccountsDataInput!\n}\n\ninput CampusUpsertWithWhereUniqueWithoutAccountsInput {\n  where: CampusWhereUniqueInput!\n  update: CampusUpdateWithoutAccountsDataInput!\n  create: CampusCreateWithoutAccountsInput!\n}\n\ninput CampusWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CampusWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CampusWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CampusWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  isActive: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isActive_not: Boolean\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  accounts_every: FinancialAccountWhereInput\n  accounts_some: FinancialAccountWhereInput\n  accounts_none: FinancialAccountWhereInput\n  organization: GroupWhereInput\n  location: LocationWhereInput\n  phoneNumbers_every: PhoneNumberWhereInput\n  phoneNumbers_some: PhoneNumberWhereInput\n  phoneNumbers_none: PhoneNumberWhereInput\n}\n\ninput CampusWhereUniqueInput {\n  id: ID\n}\n\nenum CREDIT_CARD {\n  VISA\n  MASTERCARD\n  AMEX\n  DISCOVER\n}\n\nenum CURRENCY_TYPE {\n  ACH\n  CC\n}\n\nscalar DateTime\n\ntype FinancialAccount implements Node {\n  id: ID!\n  key: String\n  campuses(where: CampusWhereInput, orderBy: CampusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Campus!]\n  description: String!\n  isActive: Boolean!\n  name: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype FinancialAccountConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [FinancialAccountEdge]!\n  aggregate: AggregateFinancialAccount!\n}\n\ninput FinancialAccountCreateInput {\n  key: String\n  description: String!\n  isActive: Boolean!\n  name: String\n  campuses: CampusCreateManyWithoutAccountsInput\n}\n\ninput FinancialAccountCreateManyWithoutCampusesInput {\n  create: [FinancialAccountCreateWithoutCampusesInput!]\n  connect: [FinancialAccountWhereUniqueInput!]\n}\n\ninput FinancialAccountCreateOneInput {\n  create: FinancialAccountCreateInput\n  connect: FinancialAccountWhereUniqueInput\n}\n\ninput FinancialAccountCreateWithoutCampusesInput {\n  key: String\n  description: String!\n  isActive: Boolean!\n  name: String\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype FinancialAccountEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: FinancialAccount!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum FinancialAccountOrderByInput {\n  id_ASC\n  id_DESC\n  key_ASC\n  key_DESC\n  description_ASC\n  description_DESC\n  isActive_ASC\n  isActive_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype FinancialAccountPreviousValues {\n  id: ID!\n  key: String\n  description: String!\n  isActive: Boolean!\n  name: String\n}\n\ninput FinancialAccountScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialAccountScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialAccountScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialAccountScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  key: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  key_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  key_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  key_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  key_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  key_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  key_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  key_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  key_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  key_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  key_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  key_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  key_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  key_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  isActive: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isActive_not: Boolean\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ntype FinancialAccountSubscriptionPayload {\n  mutation: MutationType!\n  node: FinancialAccount\n  updatedFields: [String!]\n  previousValues: FinancialAccountPreviousValues\n}\n\ninput FinancialAccountSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialAccountSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialAccountSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialAccountSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FinancialAccountWhereInput\n}\n\ninput FinancialAccountUpdateDataInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n  campuses: CampusUpdateManyWithoutAccountsInput\n}\n\ninput FinancialAccountUpdateInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n  campuses: CampusUpdateManyWithoutAccountsInput\n}\n\ninput FinancialAccountUpdateManyDataInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n}\n\ninput FinancialAccountUpdateManyMutationInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n}\n\ninput FinancialAccountUpdateManyWithoutCampusesInput {\n  create: [FinancialAccountCreateWithoutCampusesInput!]\n  connect: [FinancialAccountWhereUniqueInput!]\n  disconnect: [FinancialAccountWhereUniqueInput!]\n  delete: [FinancialAccountWhereUniqueInput!]\n  update: [FinancialAccountUpdateWithWhereUniqueWithoutCampusesInput!]\n  updateMany: [FinancialAccountUpdateManyWithWhereNestedInput!]\n  deleteMany: [FinancialAccountScalarWhereInput!]\n  upsert: [FinancialAccountUpsertWithWhereUniqueWithoutCampusesInput!]\n}\n\ninput FinancialAccountUpdateManyWithWhereNestedInput {\n  where: FinancialAccountScalarWhereInput!\n  data: FinancialAccountUpdateManyDataInput!\n}\n\ninput FinancialAccountUpdateOneInput {\n  create: FinancialAccountCreateInput\n  connect: FinancialAccountWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: FinancialAccountUpdateDataInput\n  upsert: FinancialAccountUpsertNestedInput\n}\n\ninput FinancialAccountUpdateWithoutCampusesDataInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n}\n\ninput FinancialAccountUpdateWithWhereUniqueWithoutCampusesInput {\n  where: FinancialAccountWhereUniqueInput!\n  data: FinancialAccountUpdateWithoutCampusesDataInput!\n}\n\ninput FinancialAccountUpsertNestedInput {\n  update: FinancialAccountUpdateDataInput!\n  create: FinancialAccountCreateInput!\n}\n\ninput FinancialAccountUpsertWithWhereUniqueWithoutCampusesInput {\n  where: FinancialAccountWhereUniqueInput!\n  update: FinancialAccountUpdateWithoutCampusesDataInput!\n  create: FinancialAccountCreateWithoutCampusesInput!\n}\n\ninput FinancialAccountWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialAccountWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialAccountWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialAccountWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  key: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  key_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  key_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  key_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  key_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  key_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  key_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  key_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  key_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  key_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  key_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  key_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  key_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  key_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  isActive: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isActive_not: Boolean\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  campuses_every: CampusWhereInput\n  campuses_some: CampusWhereInput\n  campuses_none: CampusWhereInput\n}\n\ninput FinancialAccountWhereUniqueInput {\n  id: ID\n  key: String\n}\n\ntype FinancialPaymentDetail implements Node {\n  id: ID!\n  accountNumberMasked: String!\n  billingLocation: Location\n  creditCardType: CREDIT_CARD\n  achType: ACH_TYPE\n  currencyType: CURRENCY_TYPE\n  expirationDate: DateTime!\n  nameOnCard: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype FinancialPaymentDetailConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [FinancialPaymentDetailEdge]!\n  aggregate: AggregateFinancialPaymentDetail!\n}\n\ninput FinancialPaymentDetailCreateInput {\n  accountNumberMasked: String!\n  creditCardType: CREDIT_CARD\n  achType: ACH_TYPE\n  currencyType: CURRENCY_TYPE\n  expirationDate: DateTime!\n  nameOnCard: String\n  billingLocation: LocationCreateOneInput\n}\n\ninput FinancialPaymentDetailCreateOneInput {\n  create: FinancialPaymentDetailCreateInput\n  connect: FinancialPaymentDetailWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype FinancialPaymentDetailEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: FinancialPaymentDetail!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum FinancialPaymentDetailOrderByInput {\n  id_ASC\n  id_DESC\n  accountNumberMasked_ASC\n  accountNumberMasked_DESC\n  creditCardType_ASC\n  creditCardType_DESC\n  achType_ASC\n  achType_DESC\n  currencyType_ASC\n  currencyType_DESC\n  expirationDate_ASC\n  expirationDate_DESC\n  nameOnCard_ASC\n  nameOnCard_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype FinancialPaymentDetailPreviousValues {\n  id: ID!\n  accountNumberMasked: String!\n  creditCardType: CREDIT_CARD\n  achType: ACH_TYPE\n  currencyType: CURRENCY_TYPE\n  expirationDate: DateTime!\n  nameOnCard: String\n}\n\ntype FinancialPaymentDetailSubscriptionPayload {\n  mutation: MutationType!\n  node: FinancialPaymentDetail\n  updatedFields: [String!]\n  previousValues: FinancialPaymentDetailPreviousValues\n}\n\ninput FinancialPaymentDetailSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialPaymentDetailSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialPaymentDetailSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialPaymentDetailSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FinancialPaymentDetailWhereInput\n}\n\ninput FinancialPaymentDetailUpdateDataInput {\n  accountNumberMasked: String\n  creditCardType: CREDIT_CARD\n  achType: ACH_TYPE\n  currencyType: CURRENCY_TYPE\n  expirationDate: DateTime\n  nameOnCard: String\n  billingLocation: LocationUpdateOneInput\n}\n\ninput FinancialPaymentDetailUpdateInput {\n  accountNumberMasked: String\n  creditCardType: CREDIT_CARD\n  achType: ACH_TYPE\n  currencyType: CURRENCY_TYPE\n  expirationDate: DateTime\n  nameOnCard: String\n  billingLocation: LocationUpdateOneInput\n}\n\ninput FinancialPaymentDetailUpdateManyMutationInput {\n  accountNumberMasked: String\n  creditCardType: CREDIT_CARD\n  achType: ACH_TYPE\n  currencyType: CURRENCY_TYPE\n  expirationDate: DateTime\n  nameOnCard: String\n}\n\ninput FinancialPaymentDetailUpdateOneInput {\n  create: FinancialPaymentDetailCreateInput\n  connect: FinancialPaymentDetailWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: FinancialPaymentDetailUpdateDataInput\n  upsert: FinancialPaymentDetailUpsertNestedInput\n}\n\ninput FinancialPaymentDetailUpsertNestedInput {\n  update: FinancialPaymentDetailUpdateDataInput!\n  create: FinancialPaymentDetailCreateInput!\n}\n\ninput FinancialPaymentDetailWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialPaymentDetailWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialPaymentDetailWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialPaymentDetailWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  accountNumberMasked: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  accountNumberMasked_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  accountNumberMasked_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  accountNumberMasked_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  accountNumberMasked_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  accountNumberMasked_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  accountNumberMasked_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  accountNumberMasked_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  accountNumberMasked_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  accountNumberMasked_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  accountNumberMasked_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  accountNumberMasked_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  accountNumberMasked_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  accountNumberMasked_not_ends_with: String\n  creditCardType: CREDIT_CARD\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  creditCardType_not: CREDIT_CARD\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  creditCardType_in: [CREDIT_CARD!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  creditCardType_not_in: [CREDIT_CARD!]\n  achType: ACH_TYPE\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  achType_not: ACH_TYPE\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  achType_in: [ACH_TYPE!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  achType_not_in: [ACH_TYPE!]\n  currencyType: CURRENCY_TYPE\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  currencyType_not: CURRENCY_TYPE\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  currencyType_in: [CURRENCY_TYPE!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  currencyType_not_in: [CURRENCY_TYPE!]\n  expirationDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  expirationDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  expirationDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  expirationDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  expirationDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  expirationDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  expirationDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  expirationDate_gte: DateTime\n  nameOnCard: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  nameOnCard_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  nameOnCard_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  nameOnCard_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  nameOnCard_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  nameOnCard_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  nameOnCard_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  nameOnCard_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  nameOnCard_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  nameOnCard_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  nameOnCard_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  nameOnCard_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  nameOnCard_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  nameOnCard_not_ends_with: String\n  billingLocation: LocationWhereInput\n}\n\ninput FinancialPaymentDetailWhereUniqueInput {\n  id: ID\n}\n\ntype FinancialScheduledTransaction implements Node {\n  id: ID!\n  person: Person\n  endDate: DateTime\n  payment: FinancialPaymentDetail\n  isActive: Boolean!\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  transactions(where: FinancialTransactionWhereInput, orderBy: FinancialTransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialTransaction!]\n  account: FinancialAccount\n  amount: Float!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype FinancialScheduledTransactionConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [FinancialScheduledTransactionEdge]!\n  aggregate: AggregateFinancialScheduledTransaction!\n}\n\ninput FinancialScheduledTransactionCreateInput {\n  endDate: DateTime\n  isActive: Boolean!\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float!\n  person: PersonCreateOneWithoutScheduledTransactionsInput\n  payment: FinancialPaymentDetailCreateOneInput\n  transactions: FinancialTransactionCreateManyWithoutScheduledTransactionInput\n  account: FinancialAccountCreateOneInput\n}\n\ninput FinancialScheduledTransactionCreateManyWithoutPersonInput {\n  create: [FinancialScheduledTransactionCreateWithoutPersonInput!]\n  connect: [FinancialScheduledTransactionWhereUniqueInput!]\n}\n\ninput FinancialScheduledTransactionCreateOneWithoutTransactionsInput {\n  create: FinancialScheduledTransactionCreateWithoutTransactionsInput\n  connect: FinancialScheduledTransactionWhereUniqueInput\n}\n\ninput FinancialScheduledTransactionCreateWithoutPersonInput {\n  endDate: DateTime\n  isActive: Boolean!\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float!\n  payment: FinancialPaymentDetailCreateOneInput\n  transactions: FinancialTransactionCreateManyWithoutScheduledTransactionInput\n  account: FinancialAccountCreateOneInput\n}\n\ninput FinancialScheduledTransactionCreateWithoutTransactionsInput {\n  endDate: DateTime\n  isActive: Boolean!\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float!\n  person: PersonCreateOneWithoutScheduledTransactionsInput\n  payment: FinancialPaymentDetailCreateOneInput\n  account: FinancialAccountCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype FinancialScheduledTransactionEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: FinancialScheduledTransaction!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum FinancialScheduledTransactionOrderByInput {\n  id_ASC\n  id_DESC\n  endDate_ASC\n  endDate_DESC\n  isActive_ASC\n  isActive_DESC\n  startDate_ASC\n  startDate_DESC\n  frequency_ASC\n  frequency_DESC\n  amount_ASC\n  amount_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype FinancialScheduledTransactionPreviousValues {\n  id: ID!\n  endDate: DateTime\n  isActive: Boolean!\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float!\n}\n\ninput FinancialScheduledTransactionScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialScheduledTransactionScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialScheduledTransactionScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialScheduledTransactionScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  endDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  endDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  endDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  endDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  endDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  endDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  endDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  endDate_gte: DateTime\n  isActive: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isActive_not: Boolean\n  startDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  startDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  startDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  startDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  startDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  startDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  startDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  startDate_gte: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  frequency_not: TRANSACTION_FREQUENCY\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  frequency_in: [TRANSACTION_FREQUENCY!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  frequency_not_in: [TRANSACTION_FREQUENCY!]\n  amount: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  amount_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  amount_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  amount_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  amount_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  amount_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  amount_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  amount_gte: Float\n}\n\ntype FinancialScheduledTransactionSubscriptionPayload {\n  mutation: MutationType!\n  node: FinancialScheduledTransaction\n  updatedFields: [String!]\n  previousValues: FinancialScheduledTransactionPreviousValues\n}\n\ninput FinancialScheduledTransactionSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialScheduledTransactionSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialScheduledTransactionSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialScheduledTransactionSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FinancialScheduledTransactionWhereInput\n}\n\ninput FinancialScheduledTransactionUpdateInput {\n  endDate: DateTime\n  isActive: Boolean\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float\n  person: PersonUpdateOneWithoutScheduledTransactionsInput\n  payment: FinancialPaymentDetailUpdateOneInput\n  transactions: FinancialTransactionUpdateManyWithoutScheduledTransactionInput\n  account: FinancialAccountUpdateOneInput\n}\n\ninput FinancialScheduledTransactionUpdateManyDataInput {\n  endDate: DateTime\n  isActive: Boolean\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float\n}\n\ninput FinancialScheduledTransactionUpdateManyMutationInput {\n  endDate: DateTime\n  isActive: Boolean\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float\n}\n\ninput FinancialScheduledTransactionUpdateManyWithoutPersonInput {\n  create: [FinancialScheduledTransactionCreateWithoutPersonInput!]\n  connect: [FinancialScheduledTransactionWhereUniqueInput!]\n  disconnect: [FinancialScheduledTransactionWhereUniqueInput!]\n  delete: [FinancialScheduledTransactionWhereUniqueInput!]\n  update: [FinancialScheduledTransactionUpdateWithWhereUniqueWithoutPersonInput!]\n  updateMany: [FinancialScheduledTransactionUpdateManyWithWhereNestedInput!]\n  deleteMany: [FinancialScheduledTransactionScalarWhereInput!]\n  upsert: [FinancialScheduledTransactionUpsertWithWhereUniqueWithoutPersonInput!]\n}\n\ninput FinancialScheduledTransactionUpdateManyWithWhereNestedInput {\n  where: FinancialScheduledTransactionScalarWhereInput!\n  data: FinancialScheduledTransactionUpdateManyDataInput!\n}\n\ninput FinancialScheduledTransactionUpdateOneWithoutTransactionsInput {\n  create: FinancialScheduledTransactionCreateWithoutTransactionsInput\n  connect: FinancialScheduledTransactionWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: FinancialScheduledTransactionUpdateWithoutTransactionsDataInput\n  upsert: FinancialScheduledTransactionUpsertWithoutTransactionsInput\n}\n\ninput FinancialScheduledTransactionUpdateWithoutPersonDataInput {\n  endDate: DateTime\n  isActive: Boolean\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float\n  payment: FinancialPaymentDetailUpdateOneInput\n  transactions: FinancialTransactionUpdateManyWithoutScheduledTransactionInput\n  account: FinancialAccountUpdateOneInput\n}\n\ninput FinancialScheduledTransactionUpdateWithoutTransactionsDataInput {\n  endDate: DateTime\n  isActive: Boolean\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float\n  person: PersonUpdateOneWithoutScheduledTransactionsInput\n  payment: FinancialPaymentDetailUpdateOneInput\n  account: FinancialAccountUpdateOneInput\n}\n\ninput FinancialScheduledTransactionUpdateWithWhereUniqueWithoutPersonInput {\n  where: FinancialScheduledTransactionWhereUniqueInput!\n  data: FinancialScheduledTransactionUpdateWithoutPersonDataInput!\n}\n\ninput FinancialScheduledTransactionUpsertWithoutTransactionsInput {\n  update: FinancialScheduledTransactionUpdateWithoutTransactionsDataInput!\n  create: FinancialScheduledTransactionCreateWithoutTransactionsInput!\n}\n\ninput FinancialScheduledTransactionUpsertWithWhereUniqueWithoutPersonInput {\n  where: FinancialScheduledTransactionWhereUniqueInput!\n  update: FinancialScheduledTransactionUpdateWithoutPersonDataInput!\n  create: FinancialScheduledTransactionCreateWithoutPersonInput!\n}\n\ninput FinancialScheduledTransactionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialScheduledTransactionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialScheduledTransactionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialScheduledTransactionWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  endDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  endDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  endDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  endDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  endDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  endDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  endDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  endDate_gte: DateTime\n  isActive: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isActive_not: Boolean\n  startDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  startDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  startDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  startDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  startDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  startDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  startDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  startDate_gte: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  frequency_not: TRANSACTION_FREQUENCY\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  frequency_in: [TRANSACTION_FREQUENCY!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  frequency_not_in: [TRANSACTION_FREQUENCY!]\n  amount: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  amount_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  amount_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  amount_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  amount_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  amount_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  amount_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  amount_gte: Float\n  person: PersonWhereInput\n  payment: FinancialPaymentDetailWhereInput\n  transactions_every: FinancialTransactionWhereInput\n  transactions_some: FinancialTransactionWhereInput\n  transactions_none: FinancialTransactionWhereInput\n  account: FinancialAccountWhereInput\n}\n\ninput FinancialScheduledTransactionWhereUniqueInput {\n  id: ID\n}\n\ntype FinancialTransaction implements Node {\n  id: ID!\n  payment: FinancialPaymentDetail\n  person: Person\n  processedDate: DateTime\n  scheduledTransaction: FinancialScheduledTransaction\n  status: TRANSACTION_STATUS!\n  transactionDate: DateTime\n  amount: Float!\n  account: FinancialAccount\n  organization: Group!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype FinancialTransactionConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [FinancialTransactionEdge]!\n  aggregate: AggregateFinancialTransaction!\n}\n\ninput FinancialTransactionCreateInput {\n  processedDate: DateTime\n  status: TRANSACTION_STATUS!\n  transactionDate: DateTime\n  amount: Float!\n  payment: FinancialPaymentDetailCreateOneInput\n  person: PersonCreateOneWithoutTransactionsInput\n  scheduledTransaction: FinancialScheduledTransactionCreateOneWithoutTransactionsInput\n  account: FinancialAccountCreateOneInput\n  organization: GroupCreateOneInput!\n}\n\ninput FinancialTransactionCreateManyWithoutPersonInput {\n  create: [FinancialTransactionCreateWithoutPersonInput!]\n  connect: [FinancialTransactionWhereUniqueInput!]\n}\n\ninput FinancialTransactionCreateManyWithoutScheduledTransactionInput {\n  create: [FinancialTransactionCreateWithoutScheduledTransactionInput!]\n  connect: [FinancialTransactionWhereUniqueInput!]\n}\n\ninput FinancialTransactionCreateWithoutPersonInput {\n  processedDate: DateTime\n  status: TRANSACTION_STATUS!\n  transactionDate: DateTime\n  amount: Float!\n  payment: FinancialPaymentDetailCreateOneInput\n  scheduledTransaction: FinancialScheduledTransactionCreateOneWithoutTransactionsInput\n  account: FinancialAccountCreateOneInput\n  organization: GroupCreateOneInput!\n}\n\ninput FinancialTransactionCreateWithoutScheduledTransactionInput {\n  processedDate: DateTime\n  status: TRANSACTION_STATUS!\n  transactionDate: DateTime\n  amount: Float!\n  payment: FinancialPaymentDetailCreateOneInput\n  person: PersonCreateOneWithoutTransactionsInput\n  account: FinancialAccountCreateOneInput\n  organization: GroupCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype FinancialTransactionEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: FinancialTransaction!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum FinancialTransactionOrderByInput {\n  id_ASC\n  id_DESC\n  processedDate_ASC\n  processedDate_DESC\n  status_ASC\n  status_DESC\n  transactionDate_ASC\n  transactionDate_DESC\n  amount_ASC\n  amount_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype FinancialTransactionPreviousValues {\n  id: ID!\n  processedDate: DateTime\n  status: TRANSACTION_STATUS!\n  transactionDate: DateTime\n  amount: Float!\n}\n\ninput FinancialTransactionScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialTransactionScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialTransactionScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialTransactionScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  processedDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  processedDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  processedDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  processedDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  processedDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  processedDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  processedDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  processedDate_gte: DateTime\n  status: TRANSACTION_STATUS\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  status_not: TRANSACTION_STATUS\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  status_in: [TRANSACTION_STATUS!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  status_not_in: [TRANSACTION_STATUS!]\n  transactionDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  transactionDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  transactionDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  transactionDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  transactionDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  transactionDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  transactionDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  transactionDate_gte: DateTime\n  amount: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  amount_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  amount_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  amount_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  amount_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  amount_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  amount_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  amount_gte: Float\n}\n\ntype FinancialTransactionSubscriptionPayload {\n  mutation: MutationType!\n  node: FinancialTransaction\n  updatedFields: [String!]\n  previousValues: FinancialTransactionPreviousValues\n}\n\ninput FinancialTransactionSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialTransactionSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialTransactionSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialTransactionSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FinancialTransactionWhereInput\n}\n\ninput FinancialTransactionUpdateInput {\n  processedDate: DateTime\n  status: TRANSACTION_STATUS\n  transactionDate: DateTime\n  amount: Float\n  payment: FinancialPaymentDetailUpdateOneInput\n  person: PersonUpdateOneWithoutTransactionsInput\n  scheduledTransaction: FinancialScheduledTransactionUpdateOneWithoutTransactionsInput\n  account: FinancialAccountUpdateOneInput\n  organization: GroupUpdateOneRequiredInput\n}\n\ninput FinancialTransactionUpdateManyDataInput {\n  processedDate: DateTime\n  status: TRANSACTION_STATUS\n  transactionDate: DateTime\n  amount: Float\n}\n\ninput FinancialTransactionUpdateManyMutationInput {\n  processedDate: DateTime\n  status: TRANSACTION_STATUS\n  transactionDate: DateTime\n  amount: Float\n}\n\ninput FinancialTransactionUpdateManyWithoutPersonInput {\n  create: [FinancialTransactionCreateWithoutPersonInput!]\n  connect: [FinancialTransactionWhereUniqueInput!]\n  disconnect: [FinancialTransactionWhereUniqueInput!]\n  delete: [FinancialTransactionWhereUniqueInput!]\n  update: [FinancialTransactionUpdateWithWhereUniqueWithoutPersonInput!]\n  updateMany: [FinancialTransactionUpdateManyWithWhereNestedInput!]\n  deleteMany: [FinancialTransactionScalarWhereInput!]\n  upsert: [FinancialTransactionUpsertWithWhereUniqueWithoutPersonInput!]\n}\n\ninput FinancialTransactionUpdateManyWithoutScheduledTransactionInput {\n  create: [FinancialTransactionCreateWithoutScheduledTransactionInput!]\n  connect: [FinancialTransactionWhereUniqueInput!]\n  disconnect: [FinancialTransactionWhereUniqueInput!]\n  delete: [FinancialTransactionWhereUniqueInput!]\n  update: [FinancialTransactionUpdateWithWhereUniqueWithoutScheduledTransactionInput!]\n  updateMany: [FinancialTransactionUpdateManyWithWhereNestedInput!]\n  deleteMany: [FinancialTransactionScalarWhereInput!]\n  upsert: [FinancialTransactionUpsertWithWhereUniqueWithoutScheduledTransactionInput!]\n}\n\ninput FinancialTransactionUpdateManyWithWhereNestedInput {\n  where: FinancialTransactionScalarWhereInput!\n  data: FinancialTransactionUpdateManyDataInput!\n}\n\ninput FinancialTransactionUpdateWithoutPersonDataInput {\n  processedDate: DateTime\n  status: TRANSACTION_STATUS\n  transactionDate: DateTime\n  amount: Float\n  payment: FinancialPaymentDetailUpdateOneInput\n  scheduledTransaction: FinancialScheduledTransactionUpdateOneWithoutTransactionsInput\n  account: FinancialAccountUpdateOneInput\n  organization: GroupUpdateOneRequiredInput\n}\n\ninput FinancialTransactionUpdateWithoutScheduledTransactionDataInput {\n  processedDate: DateTime\n  status: TRANSACTION_STATUS\n  transactionDate: DateTime\n  amount: Float\n  payment: FinancialPaymentDetailUpdateOneInput\n  person: PersonUpdateOneWithoutTransactionsInput\n  account: FinancialAccountUpdateOneInput\n  organization: GroupUpdateOneRequiredInput\n}\n\ninput FinancialTransactionUpdateWithWhereUniqueWithoutPersonInput {\n  where: FinancialTransactionWhereUniqueInput!\n  data: FinancialTransactionUpdateWithoutPersonDataInput!\n}\n\ninput FinancialTransactionUpdateWithWhereUniqueWithoutScheduledTransactionInput {\n  where: FinancialTransactionWhereUniqueInput!\n  data: FinancialTransactionUpdateWithoutScheduledTransactionDataInput!\n}\n\ninput FinancialTransactionUpsertWithWhereUniqueWithoutPersonInput {\n  where: FinancialTransactionWhereUniqueInput!\n  update: FinancialTransactionUpdateWithoutPersonDataInput!\n  create: FinancialTransactionCreateWithoutPersonInput!\n}\n\ninput FinancialTransactionUpsertWithWhereUniqueWithoutScheduledTransactionInput {\n  where: FinancialTransactionWhereUniqueInput!\n  update: FinancialTransactionUpdateWithoutScheduledTransactionDataInput!\n  create: FinancialTransactionCreateWithoutScheduledTransactionInput!\n}\n\ninput FinancialTransactionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialTransactionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialTransactionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialTransactionWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  processedDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  processedDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  processedDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  processedDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  processedDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  processedDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  processedDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  processedDate_gte: DateTime\n  status: TRANSACTION_STATUS\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  status_not: TRANSACTION_STATUS\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  status_in: [TRANSACTION_STATUS!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  status_not_in: [TRANSACTION_STATUS!]\n  transactionDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  transactionDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  transactionDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  transactionDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  transactionDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  transactionDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  transactionDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  transactionDate_gte: DateTime\n  amount: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  amount_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  amount_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  amount_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  amount_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  amount_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  amount_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  amount_gte: Float\n  payment: FinancialPaymentDetailWhereInput\n  person: PersonWhereInput\n  scheduledTransaction: FinancialScheduledTransactionWhereInput\n  account: FinancialAccountWhereInput\n  organization: GroupWhereInput\n}\n\ninput FinancialTransactionWhereUniqueInput {\n  id: ID\n}\n\ntype Group implements Node {\n  id: ID!\n  key: String\n  description: String\n  type: GroupType!\n  invites(where: GroupInviteWhereInput, orderBy: GroupInviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupInvite!]\n  isActive: Boolean!\n  members(where: GroupMemberWhereInput, orderBy: GroupMemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupMember!]\n  name: String!\n  organization: Group\n}\n\nenum GROUP_INVITE_STATUS {\n  PENDING\n  JOINED\n}\n\nenum GROUP_ROLE_TYPE {\n  ADMIN\n  OWNER\n  MEMBER\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype GroupConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [GroupEdge]!\n  aggregate: AggregateGroup!\n}\n\ninput GroupCreateInput {\n  key: String\n  description: String\n  isActive: Boolean!\n  name: String!\n  type: GroupTypeCreateOneWithoutGroupsInput!\n  invites: GroupInviteCreateManyWithoutGroupInput\n  members: GroupMemberCreateManyWithoutGroupInput\n  organization: GroupCreateOneInput\n}\n\ninput GroupCreateManyWithoutTypeInput {\n  create: [GroupCreateWithoutTypeInput!]\n  connect: [GroupWhereUniqueInput!]\n}\n\ninput GroupCreateOneInput {\n  create: GroupCreateInput\n  connect: GroupWhereUniqueInput\n}\n\ninput GroupCreateOneWithoutInvitesInput {\n  create: GroupCreateWithoutInvitesInput\n  connect: GroupWhereUniqueInput\n}\n\ninput GroupCreateOneWithoutMembersInput {\n  create: GroupCreateWithoutMembersInput\n  connect: GroupWhereUniqueInput\n}\n\ninput GroupCreateWithoutInvitesInput {\n  key: String\n  description: String\n  isActive: Boolean!\n  name: String!\n  type: GroupTypeCreateOneWithoutGroupsInput!\n  members: GroupMemberCreateManyWithoutGroupInput\n  organization: GroupCreateOneInput\n}\n\ninput GroupCreateWithoutMembersInput {\n  key: String\n  description: String\n  isActive: Boolean!\n  name: String!\n  type: GroupTypeCreateOneWithoutGroupsInput!\n  invites: GroupInviteCreateManyWithoutGroupInput\n  organization: GroupCreateOneInput\n}\n\ninput GroupCreateWithoutTypeInput {\n  key: String\n  description: String\n  isActive: Boolean!\n  name: String!\n  invites: GroupInviteCreateManyWithoutGroupInput\n  members: GroupMemberCreateManyWithoutGroupInput\n  organization: GroupCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype GroupEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Group!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\ntype GroupInvite implements Node {\n  id: ID!\n  email: String!\n  group: Group!\n  groupRole: GroupRole\n  status: GROUP_INVITE_STATUS!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype GroupInviteConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [GroupInviteEdge]!\n  aggregate: AggregateGroupInvite!\n}\n\ninput GroupInviteCreateInput {\n  email: String!\n  status: GROUP_INVITE_STATUS!\n  group: GroupCreateOneWithoutInvitesInput!\n  groupRole: GroupRoleCreateOneInput\n}\n\ninput GroupInviteCreateManyWithoutGroupInput {\n  create: [GroupInviteCreateWithoutGroupInput!]\n  connect: [GroupInviteWhereUniqueInput!]\n}\n\ninput GroupInviteCreateWithoutGroupInput {\n  email: String!\n  status: GROUP_INVITE_STATUS!\n  groupRole: GroupRoleCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype GroupInviteEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: GroupInvite!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum GroupInviteOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  status_ASC\n  status_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype GroupInvitePreviousValues {\n  id: ID!\n  email: String!\n  status: GROUP_INVITE_STATUS!\n}\n\ninput GroupInviteScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupInviteScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupInviteScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupInviteScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  status: GROUP_INVITE_STATUS\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  status_not: GROUP_INVITE_STATUS\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  status_in: [GROUP_INVITE_STATUS!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  status_not_in: [GROUP_INVITE_STATUS!]\n}\n\ntype GroupInviteSubscriptionPayload {\n  mutation: MutationType!\n  node: GroupInvite\n  updatedFields: [String!]\n  previousValues: GroupInvitePreviousValues\n}\n\ninput GroupInviteSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupInviteSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupInviteSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupInviteSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: GroupInviteWhereInput\n}\n\ninput GroupInviteUpdateInput {\n  email: String\n  status: GROUP_INVITE_STATUS\n  group: GroupUpdateOneRequiredWithoutInvitesInput\n  groupRole: GroupRoleUpdateOneInput\n}\n\ninput GroupInviteUpdateManyDataInput {\n  email: String\n  status: GROUP_INVITE_STATUS\n}\n\ninput GroupInviteUpdateManyMutationInput {\n  email: String\n  status: GROUP_INVITE_STATUS\n}\n\ninput GroupInviteUpdateManyWithoutGroupInput {\n  create: [GroupInviteCreateWithoutGroupInput!]\n  connect: [GroupInviteWhereUniqueInput!]\n  disconnect: [GroupInviteWhereUniqueInput!]\n  delete: [GroupInviteWhereUniqueInput!]\n  update: [GroupInviteUpdateWithWhereUniqueWithoutGroupInput!]\n  updateMany: [GroupInviteUpdateManyWithWhereNestedInput!]\n  deleteMany: [GroupInviteScalarWhereInput!]\n  upsert: [GroupInviteUpsertWithWhereUniqueWithoutGroupInput!]\n}\n\ninput GroupInviteUpdateManyWithWhereNestedInput {\n  where: GroupInviteScalarWhereInput!\n  data: GroupInviteUpdateManyDataInput!\n}\n\ninput GroupInviteUpdateWithoutGroupDataInput {\n  email: String\n  status: GROUP_INVITE_STATUS\n  groupRole: GroupRoleUpdateOneInput\n}\n\ninput GroupInviteUpdateWithWhereUniqueWithoutGroupInput {\n  where: GroupInviteWhereUniqueInput!\n  data: GroupInviteUpdateWithoutGroupDataInput!\n}\n\ninput GroupInviteUpsertWithWhereUniqueWithoutGroupInput {\n  where: GroupInviteWhereUniqueInput!\n  update: GroupInviteUpdateWithoutGroupDataInput!\n  create: GroupInviteCreateWithoutGroupInput!\n}\n\ninput GroupInviteWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupInviteWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupInviteWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupInviteWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  status: GROUP_INVITE_STATUS\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  status_not: GROUP_INVITE_STATUS\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  status_in: [GROUP_INVITE_STATUS!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  status_not_in: [GROUP_INVITE_STATUS!]\n  group: GroupWhereInput\n  groupRole: GroupRoleWhereInput\n}\n\ninput GroupInviteWhereUniqueInput {\n  id: ID\n}\n\ntype GroupMember implements Node {\n  id: ID!\n  group: Group\n  role: GroupRole\n  person: Person\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype GroupMemberConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [GroupMemberEdge]!\n  aggregate: AggregateGroupMember!\n}\n\ninput GroupMemberCreateInput {\n  group: GroupCreateOneWithoutMembersInput\n  role: GroupRoleCreateOneInput\n  person: PersonCreateOneInput\n}\n\ninput GroupMemberCreateManyWithoutGroupInput {\n  create: [GroupMemberCreateWithoutGroupInput!]\n  connect: [GroupMemberWhereUniqueInput!]\n}\n\ninput GroupMemberCreateWithoutGroupInput {\n  role: GroupRoleCreateOneInput\n  person: PersonCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype GroupMemberEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: GroupMember!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum GroupMemberOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype GroupMemberPreviousValues {\n  id: ID!\n}\n\ninput GroupMemberScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupMemberScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupMemberScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupMemberScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ntype GroupMemberSubscriptionPayload {\n  mutation: MutationType!\n  node: GroupMember\n  updatedFields: [String!]\n  previousValues: GroupMemberPreviousValues\n}\n\ninput GroupMemberSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupMemberSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupMemberSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupMemberSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: GroupMemberWhereInput\n}\n\ninput GroupMemberUpdateInput {\n  group: GroupUpdateOneWithoutMembersInput\n  role: GroupRoleUpdateOneInput\n  person: PersonUpdateOneInput\n}\n\ninput GroupMemberUpdateManyWithoutGroupInput {\n  create: [GroupMemberCreateWithoutGroupInput!]\n  connect: [GroupMemberWhereUniqueInput!]\n  disconnect: [GroupMemberWhereUniqueInput!]\n  delete: [GroupMemberWhereUniqueInput!]\n  update: [GroupMemberUpdateWithWhereUniqueWithoutGroupInput!]\n  deleteMany: [GroupMemberScalarWhereInput!]\n  upsert: [GroupMemberUpsertWithWhereUniqueWithoutGroupInput!]\n}\n\ninput GroupMemberUpdateWithoutGroupDataInput {\n  role: GroupRoleUpdateOneInput\n  person: PersonUpdateOneInput\n}\n\ninput GroupMemberUpdateWithWhereUniqueWithoutGroupInput {\n  where: GroupMemberWhereUniqueInput!\n  data: GroupMemberUpdateWithoutGroupDataInput!\n}\n\ninput GroupMemberUpsertWithWhereUniqueWithoutGroupInput {\n  where: GroupMemberWhereUniqueInput!\n  update: GroupMemberUpdateWithoutGroupDataInput!\n  create: GroupMemberCreateWithoutGroupInput!\n}\n\ninput GroupMemberWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupMemberWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupMemberWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupMemberWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  group: GroupWhereInput\n  role: GroupRoleWhereInput\n  person: PersonWhereInput\n}\n\ninput GroupMemberWhereUniqueInput {\n  id: ID\n}\n\nenum GroupOrderByInput {\n  id_ASC\n  id_DESC\n  key_ASC\n  key_DESC\n  description_ASC\n  description_DESC\n  isActive_ASC\n  isActive_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype GroupPreviousValues {\n  id: ID!\n  key: String\n  description: String\n  isActive: Boolean!\n  name: String!\n}\n\ntype GroupRole implements Node {\n  id: ID!\n  canEdit: Boolean!\n  canView: Boolean!\n  description: String!\n  groupType: GroupType\n  isLeader: Boolean\n  name: String!\n  type: GROUP_ROLE_TYPE\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype GroupRoleConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [GroupRoleEdge]!\n  aggregate: AggregateGroupRole!\n}\n\ninput GroupRoleCreateInput {\n  canEdit: Boolean!\n  canView: Boolean!\n  description: String!\n  isLeader: Boolean\n  name: String!\n  type: GROUP_ROLE_TYPE\n  groupType: GroupTypeCreateOneWithoutRolesInput\n}\n\ninput GroupRoleCreateManyWithoutGroupTypeInput {\n  create: [GroupRoleCreateWithoutGroupTypeInput!]\n  connect: [GroupRoleWhereUniqueInput!]\n}\n\ninput GroupRoleCreateOneInput {\n  create: GroupRoleCreateInput\n  connect: GroupRoleWhereUniqueInput\n}\n\ninput GroupRoleCreateWithoutGroupTypeInput {\n  canEdit: Boolean!\n  canView: Boolean!\n  description: String!\n  isLeader: Boolean\n  name: String!\n  type: GROUP_ROLE_TYPE\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype GroupRoleEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: GroupRole!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum GroupRoleOrderByInput {\n  id_ASC\n  id_DESC\n  canEdit_ASC\n  canEdit_DESC\n  canView_ASC\n  canView_DESC\n  description_ASC\n  description_DESC\n  isLeader_ASC\n  isLeader_DESC\n  name_ASC\n  name_DESC\n  type_ASC\n  type_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype GroupRolePreviousValues {\n  id: ID!\n  canEdit: Boolean!\n  canView: Boolean!\n  description: String!\n  isLeader: Boolean\n  name: String!\n  type: GROUP_ROLE_TYPE\n}\n\ninput GroupRoleScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupRoleScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupRoleScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupRoleScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  canEdit: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  canEdit_not: Boolean\n  canView: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  canView_not: Boolean\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  isLeader: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isLeader_not: Boolean\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  type: GROUP_ROLE_TYPE\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  type_not: GROUP_ROLE_TYPE\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  type_in: [GROUP_ROLE_TYPE!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  type_not_in: [GROUP_ROLE_TYPE!]\n}\n\ntype GroupRoleSubscriptionPayload {\n  mutation: MutationType!\n  node: GroupRole\n  updatedFields: [String!]\n  previousValues: GroupRolePreviousValues\n}\n\ninput GroupRoleSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupRoleSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupRoleSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupRoleSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: GroupRoleWhereInput\n}\n\ninput GroupRoleUpdateDataInput {\n  canEdit: Boolean\n  canView: Boolean\n  description: String\n  isLeader: Boolean\n  name: String\n  type: GROUP_ROLE_TYPE\n  groupType: GroupTypeUpdateOneWithoutRolesInput\n}\n\ninput GroupRoleUpdateInput {\n  canEdit: Boolean\n  canView: Boolean\n  description: String\n  isLeader: Boolean\n  name: String\n  type: GROUP_ROLE_TYPE\n  groupType: GroupTypeUpdateOneWithoutRolesInput\n}\n\ninput GroupRoleUpdateManyDataInput {\n  canEdit: Boolean\n  canView: Boolean\n  description: String\n  isLeader: Boolean\n  name: String\n  type: GROUP_ROLE_TYPE\n}\n\ninput GroupRoleUpdateManyMutationInput {\n  canEdit: Boolean\n  canView: Boolean\n  description: String\n  isLeader: Boolean\n  name: String\n  type: GROUP_ROLE_TYPE\n}\n\ninput GroupRoleUpdateManyWithoutGroupTypeInput {\n  create: [GroupRoleCreateWithoutGroupTypeInput!]\n  connect: [GroupRoleWhereUniqueInput!]\n  disconnect: [GroupRoleWhereUniqueInput!]\n  delete: [GroupRoleWhereUniqueInput!]\n  update: [GroupRoleUpdateWithWhereUniqueWithoutGroupTypeInput!]\n  updateMany: [GroupRoleUpdateManyWithWhereNestedInput!]\n  deleteMany: [GroupRoleScalarWhereInput!]\n  upsert: [GroupRoleUpsertWithWhereUniqueWithoutGroupTypeInput!]\n}\n\ninput GroupRoleUpdateManyWithWhereNestedInput {\n  where: GroupRoleScalarWhereInput!\n  data: GroupRoleUpdateManyDataInput!\n}\n\ninput GroupRoleUpdateOneInput {\n  create: GroupRoleCreateInput\n  connect: GroupRoleWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: GroupRoleUpdateDataInput\n  upsert: GroupRoleUpsertNestedInput\n}\n\ninput GroupRoleUpdateWithoutGroupTypeDataInput {\n  canEdit: Boolean\n  canView: Boolean\n  description: String\n  isLeader: Boolean\n  name: String\n  type: GROUP_ROLE_TYPE\n}\n\ninput GroupRoleUpdateWithWhereUniqueWithoutGroupTypeInput {\n  where: GroupRoleWhereUniqueInput!\n  data: GroupRoleUpdateWithoutGroupTypeDataInput!\n}\n\ninput GroupRoleUpsertNestedInput {\n  update: GroupRoleUpdateDataInput!\n  create: GroupRoleCreateInput!\n}\n\ninput GroupRoleUpsertWithWhereUniqueWithoutGroupTypeInput {\n  where: GroupRoleWhereUniqueInput!\n  update: GroupRoleUpdateWithoutGroupTypeDataInput!\n  create: GroupRoleCreateWithoutGroupTypeInput!\n}\n\ninput GroupRoleWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupRoleWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupRoleWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupRoleWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  canEdit: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  canEdit_not: Boolean\n  canView: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  canView_not: Boolean\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  isLeader: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isLeader_not: Boolean\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  type: GROUP_ROLE_TYPE\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  type_not: GROUP_ROLE_TYPE\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  type_in: [GROUP_ROLE_TYPE!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  type_not_in: [GROUP_ROLE_TYPE!]\n  groupType: GroupTypeWhereInput\n}\n\ninput GroupRoleWhereUniqueInput {\n  id: ID\n  name: String\n}\n\ninput GroupScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  key: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  key_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  key_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  key_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  key_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  key_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  key_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  key_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  key_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  key_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  key_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  key_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  key_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  key_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  isActive: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isActive_not: Boolean\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ntype GroupSubscriptionPayload {\n  mutation: MutationType!\n  node: Group\n  updatedFields: [String!]\n  previousValues: GroupPreviousValues\n}\n\ninput GroupSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: GroupWhereInput\n}\n\ntype GroupType implements Node {\n  id: ID!\n  description: String\n  groups(where: GroupWhereInput, orderBy: GroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Group!]\n  name: String!\n  roles(where: GroupRoleWhereInput, orderBy: GroupRoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupRole!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype GroupTypeConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [GroupTypeEdge]!\n  aggregate: AggregateGroupType!\n}\n\ninput GroupTypeCreateInput {\n  description: String\n  name: String!\n  groups: GroupCreateManyWithoutTypeInput\n  roles: GroupRoleCreateManyWithoutGroupTypeInput\n}\n\ninput GroupTypeCreateOneWithoutGroupsInput {\n  create: GroupTypeCreateWithoutGroupsInput\n  connect: GroupTypeWhereUniqueInput\n}\n\ninput GroupTypeCreateOneWithoutRolesInput {\n  create: GroupTypeCreateWithoutRolesInput\n  connect: GroupTypeWhereUniqueInput\n}\n\ninput GroupTypeCreateWithoutGroupsInput {\n  description: String\n  name: String!\n  roles: GroupRoleCreateManyWithoutGroupTypeInput\n}\n\ninput GroupTypeCreateWithoutRolesInput {\n  description: String\n  name: String!\n  groups: GroupCreateManyWithoutTypeInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype GroupTypeEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: GroupType!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum GroupTypeOrderByInput {\n  id_ASC\n  id_DESC\n  description_ASC\n  description_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype GroupTypePreviousValues {\n  id: ID!\n  description: String\n  name: String!\n}\n\ntype GroupTypeSubscriptionPayload {\n  mutation: MutationType!\n  node: GroupType\n  updatedFields: [String!]\n  previousValues: GroupTypePreviousValues\n}\n\ninput GroupTypeSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupTypeSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupTypeSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupTypeSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: GroupTypeWhereInput\n}\n\ninput GroupTypeUpdateInput {\n  description: String\n  name: String\n  groups: GroupUpdateManyWithoutTypeInput\n  roles: GroupRoleUpdateManyWithoutGroupTypeInput\n}\n\ninput GroupTypeUpdateManyMutationInput {\n  description: String\n  name: String\n}\n\ninput GroupTypeUpdateOneRequiredWithoutGroupsInput {\n  create: GroupTypeCreateWithoutGroupsInput\n  connect: GroupTypeWhereUniqueInput\n  update: GroupTypeUpdateWithoutGroupsDataInput\n  upsert: GroupTypeUpsertWithoutGroupsInput\n}\n\ninput GroupTypeUpdateOneWithoutRolesInput {\n  create: GroupTypeCreateWithoutRolesInput\n  connect: GroupTypeWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: GroupTypeUpdateWithoutRolesDataInput\n  upsert: GroupTypeUpsertWithoutRolesInput\n}\n\ninput GroupTypeUpdateWithoutGroupsDataInput {\n  description: String\n  name: String\n  roles: GroupRoleUpdateManyWithoutGroupTypeInput\n}\n\ninput GroupTypeUpdateWithoutRolesDataInput {\n  description: String\n  name: String\n  groups: GroupUpdateManyWithoutTypeInput\n}\n\ninput GroupTypeUpsertWithoutGroupsInput {\n  update: GroupTypeUpdateWithoutGroupsDataInput!\n  create: GroupTypeCreateWithoutGroupsInput!\n}\n\ninput GroupTypeUpsertWithoutRolesInput {\n  update: GroupTypeUpdateWithoutRolesDataInput!\n  create: GroupTypeCreateWithoutRolesInput!\n}\n\ninput GroupTypeWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupTypeWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupTypeWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupTypeWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  groups_every: GroupWhereInput\n  groups_some: GroupWhereInput\n  groups_none: GroupWhereInput\n  roles_every: GroupRoleWhereInput\n  roles_some: GroupRoleWhereInput\n  roles_none: GroupRoleWhereInput\n}\n\ninput GroupTypeWhereUniqueInput {\n  id: ID\n  name: String\n}\n\ninput GroupUpdateDataInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n  type: GroupTypeUpdateOneRequiredWithoutGroupsInput\n  invites: GroupInviteUpdateManyWithoutGroupInput\n  members: GroupMemberUpdateManyWithoutGroupInput\n  organization: GroupUpdateOneInput\n}\n\ninput GroupUpdateInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n  type: GroupTypeUpdateOneRequiredWithoutGroupsInput\n  invites: GroupInviteUpdateManyWithoutGroupInput\n  members: GroupMemberUpdateManyWithoutGroupInput\n  organization: GroupUpdateOneInput\n}\n\ninput GroupUpdateManyDataInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n}\n\ninput GroupUpdateManyMutationInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n}\n\ninput GroupUpdateManyWithoutTypeInput {\n  create: [GroupCreateWithoutTypeInput!]\n  connect: [GroupWhereUniqueInput!]\n  disconnect: [GroupWhereUniqueInput!]\n  delete: [GroupWhereUniqueInput!]\n  update: [GroupUpdateWithWhereUniqueWithoutTypeInput!]\n  updateMany: [GroupUpdateManyWithWhereNestedInput!]\n  deleteMany: [GroupScalarWhereInput!]\n  upsert: [GroupUpsertWithWhereUniqueWithoutTypeInput!]\n}\n\ninput GroupUpdateManyWithWhereNestedInput {\n  where: GroupScalarWhereInput!\n  data: GroupUpdateManyDataInput!\n}\n\ninput GroupUpdateOneInput {\n  create: GroupCreateInput\n  connect: GroupWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: GroupUpdateDataInput\n  upsert: GroupUpsertNestedInput\n}\n\ninput GroupUpdateOneRequiredInput {\n  create: GroupCreateInput\n  connect: GroupWhereUniqueInput\n  update: GroupUpdateDataInput\n  upsert: GroupUpsertNestedInput\n}\n\ninput GroupUpdateOneRequiredWithoutInvitesInput {\n  create: GroupCreateWithoutInvitesInput\n  connect: GroupWhereUniqueInput\n  update: GroupUpdateWithoutInvitesDataInput\n  upsert: GroupUpsertWithoutInvitesInput\n}\n\ninput GroupUpdateOneWithoutMembersInput {\n  create: GroupCreateWithoutMembersInput\n  connect: GroupWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: GroupUpdateWithoutMembersDataInput\n  upsert: GroupUpsertWithoutMembersInput\n}\n\ninput GroupUpdateWithoutInvitesDataInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n  type: GroupTypeUpdateOneRequiredWithoutGroupsInput\n  members: GroupMemberUpdateManyWithoutGroupInput\n  organization: GroupUpdateOneInput\n}\n\ninput GroupUpdateWithoutMembersDataInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n  type: GroupTypeUpdateOneRequiredWithoutGroupsInput\n  invites: GroupInviteUpdateManyWithoutGroupInput\n  organization: GroupUpdateOneInput\n}\n\ninput GroupUpdateWithoutTypeDataInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n  invites: GroupInviteUpdateManyWithoutGroupInput\n  members: GroupMemberUpdateManyWithoutGroupInput\n  organization: GroupUpdateOneInput\n}\n\ninput GroupUpdateWithWhereUniqueWithoutTypeInput {\n  where: GroupWhereUniqueInput!\n  data: GroupUpdateWithoutTypeDataInput!\n}\n\ninput GroupUpsertNestedInput {\n  update: GroupUpdateDataInput!\n  create: GroupCreateInput!\n}\n\ninput GroupUpsertWithoutInvitesInput {\n  update: GroupUpdateWithoutInvitesDataInput!\n  create: GroupCreateWithoutInvitesInput!\n}\n\ninput GroupUpsertWithoutMembersInput {\n  update: GroupUpdateWithoutMembersDataInput!\n  create: GroupCreateWithoutMembersInput!\n}\n\ninput GroupUpsertWithWhereUniqueWithoutTypeInput {\n  where: GroupWhereUniqueInput!\n  update: GroupUpdateWithoutTypeDataInput!\n  create: GroupCreateWithoutTypeInput!\n}\n\ninput GroupWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  key: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  key_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  key_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  key_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  key_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  key_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  key_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  key_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  key_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  key_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  key_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  key_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  key_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  key_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  isActive: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isActive_not: Boolean\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  type: GroupTypeWhereInput\n  invites_every: GroupInviteWhereInput\n  invites_some: GroupInviteWhereInput\n  invites_none: GroupInviteWhereInput\n  members_every: GroupMemberWhereInput\n  members_some: GroupMemberWhereInput\n  members_none: GroupMemberWhereInput\n  organization: GroupWhereInput\n}\n\ninput GroupWhereUniqueInput {\n  id: ID\n  key: String\n}\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\ntype Location implements Node {\n  id: ID!\n  city: String\n  locationType: LOCATION_TYPE\n  postalCode: String\n  state: String\n  street1: String\n  street2: String\n}\n\nenum LOCATION_TYPE {\n  HOME\n  WORK\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LocationConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LocationEdge]!\n  aggregate: AggregateLocation!\n}\n\ninput LocationCreateInput {\n  city: String\n  locationType: LOCATION_TYPE\n  postalCode: String\n  state: String\n  street1: String\n  street2: String\n}\n\ninput LocationCreateOneInput {\n  create: LocationCreateInput\n  connect: LocationWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LocationEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Location!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LocationOrderByInput {\n  id_ASC\n  id_DESC\n  city_ASC\n  city_DESC\n  locationType_ASC\n  locationType_DESC\n  postalCode_ASC\n  postalCode_DESC\n  state_ASC\n  state_DESC\n  street1_ASC\n  street1_DESC\n  street2_ASC\n  street2_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype LocationPreviousValues {\n  id: ID!\n  city: String\n  locationType: LOCATION_TYPE\n  postalCode: String\n  state: String\n  street1: String\n  street2: String\n}\n\ntype LocationSubscriptionPayload {\n  mutation: MutationType!\n  node: Location\n  updatedFields: [String!]\n  previousValues: LocationPreviousValues\n}\n\ninput LocationSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LocationSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LocationSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LocationSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LocationWhereInput\n}\n\ninput LocationUpdateDataInput {\n  city: String\n  locationType: LOCATION_TYPE\n  postalCode: String\n  state: String\n  street1: String\n  street2: String\n}\n\ninput LocationUpdateInput {\n  city: String\n  locationType: LOCATION_TYPE\n  postalCode: String\n  state: String\n  street1: String\n  street2: String\n}\n\ninput LocationUpdateManyMutationInput {\n  city: String\n  locationType: LOCATION_TYPE\n  postalCode: String\n  state: String\n  street1: String\n  street2: String\n}\n\ninput LocationUpdateOneInput {\n  create: LocationCreateInput\n  connect: LocationWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: LocationUpdateDataInput\n  upsert: LocationUpsertNestedInput\n}\n\ninput LocationUpsertNestedInput {\n  update: LocationUpdateDataInput!\n  create: LocationCreateInput!\n}\n\ninput LocationWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LocationWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LocationWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LocationWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  city: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  city_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  city_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  city_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  city_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  city_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  city_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  city_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  city_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  city_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  city_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  city_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  city_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  city_not_ends_with: String\n  locationType: LOCATION_TYPE\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  locationType_not: LOCATION_TYPE\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  locationType_in: [LOCATION_TYPE!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  locationType_not_in: [LOCATION_TYPE!]\n  postalCode: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  postalCode_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  postalCode_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  postalCode_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  postalCode_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  postalCode_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  postalCode_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  postalCode_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  postalCode_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  postalCode_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  postalCode_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  postalCode_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  postalCode_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  postalCode_not_ends_with: String\n  state: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  state_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  state_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  state_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  state_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  state_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  state_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  state_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  state_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  state_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  state_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  state_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  state_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  state_not_ends_with: String\n  street1: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  street1_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  street1_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  street1_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  street1_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  street1_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  street1_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  street1_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  street1_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  street1_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  street1_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  street1_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  street1_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  street1_not_ends_with: String\n  street2: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  street2_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  street2_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  street2_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  street2_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  street2_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  street2_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  street2_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  street2_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  street2_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  street2_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  street2_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  street2_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  street2_not_ends_with: String\n}\n\ninput LocationWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  createFinancialScheduledTransaction(data: FinancialScheduledTransactionCreateInput!): FinancialScheduledTransaction!\n  createFinancialTransaction(data: FinancialTransactionCreateInput!): FinancialTransaction!\n  createGroupInvite(data: GroupInviteCreateInput!): GroupInvite!\n  createGroupMember(data: GroupMemberCreateInput!): GroupMember!\n  createGroupType(data: GroupTypeCreateInput!): GroupType!\n  createCampus(data: CampusCreateInput!): Campus!\n  createFinancialAccount(data: FinancialAccountCreateInput!): FinancialAccount!\n  createGroup(data: GroupCreateInput!): Group!\n  createPerson(data: PersonCreateInput!): Person!\n  createGroupRole(data: GroupRoleCreateInput!): GroupRole!\n  createLocation(data: LocationCreateInput!): Location!\n  createPhoneNumber(data: PhoneNumberCreateInput!): PhoneNumber!\n  createFinancialPaymentDetail(data: FinancialPaymentDetailCreateInput!): FinancialPaymentDetail!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateFinancialScheduledTransaction(data: FinancialScheduledTransactionUpdateInput!, where: FinancialScheduledTransactionWhereUniqueInput!): FinancialScheduledTransaction\n  updateFinancialTransaction(data: FinancialTransactionUpdateInput!, where: FinancialTransactionWhereUniqueInput!): FinancialTransaction\n  updateGroupInvite(data: GroupInviteUpdateInput!, where: GroupInviteWhereUniqueInput!): GroupInvite\n  updateGroupMember(data: GroupMemberUpdateInput!, where: GroupMemberWhereUniqueInput!): GroupMember\n  updateGroupType(data: GroupTypeUpdateInput!, where: GroupTypeWhereUniqueInput!): GroupType\n  updateCampus(data: CampusUpdateInput!, where: CampusWhereUniqueInput!): Campus\n  updateFinancialAccount(data: FinancialAccountUpdateInput!, where: FinancialAccountWhereUniqueInput!): FinancialAccount\n  updateGroup(data: GroupUpdateInput!, where: GroupWhereUniqueInput!): Group\n  updatePerson(data: PersonUpdateInput!, where: PersonWhereUniqueInput!): Person\n  updateGroupRole(data: GroupRoleUpdateInput!, where: GroupRoleWhereUniqueInput!): GroupRole\n  updateLocation(data: LocationUpdateInput!, where: LocationWhereUniqueInput!): Location\n  updatePhoneNumber(data: PhoneNumberUpdateInput!, where: PhoneNumberWhereUniqueInput!): PhoneNumber\n  updateFinancialPaymentDetail(data: FinancialPaymentDetailUpdateInput!, where: FinancialPaymentDetailWhereUniqueInput!): FinancialPaymentDetail\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteFinancialScheduledTransaction(where: FinancialScheduledTransactionWhereUniqueInput!): FinancialScheduledTransaction\n  deleteFinancialTransaction(where: FinancialTransactionWhereUniqueInput!): FinancialTransaction\n  deleteGroupInvite(where: GroupInviteWhereUniqueInput!): GroupInvite\n  deleteGroupMember(where: GroupMemberWhereUniqueInput!): GroupMember\n  deleteGroupType(where: GroupTypeWhereUniqueInput!): GroupType\n  deleteCampus(where: CampusWhereUniqueInput!): Campus\n  deleteFinancialAccount(where: FinancialAccountWhereUniqueInput!): FinancialAccount\n  deleteGroup(where: GroupWhereUniqueInput!): Group\n  deletePerson(where: PersonWhereUniqueInput!): Person\n  deleteGroupRole(where: GroupRoleWhereUniqueInput!): GroupRole\n  deleteLocation(where: LocationWhereUniqueInput!): Location\n  deletePhoneNumber(where: PhoneNumberWhereUniqueInput!): PhoneNumber\n  deleteFinancialPaymentDetail(where: FinancialPaymentDetailWhereUniqueInput!): FinancialPaymentDetail\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertFinancialScheduledTransaction(where: FinancialScheduledTransactionWhereUniqueInput!, create: FinancialScheduledTransactionCreateInput!, update: FinancialScheduledTransactionUpdateInput!): FinancialScheduledTransaction!\n  upsertFinancialTransaction(where: FinancialTransactionWhereUniqueInput!, create: FinancialTransactionCreateInput!, update: FinancialTransactionUpdateInput!): FinancialTransaction!\n  upsertGroupInvite(where: GroupInviteWhereUniqueInput!, create: GroupInviteCreateInput!, update: GroupInviteUpdateInput!): GroupInvite!\n  upsertGroupMember(where: GroupMemberWhereUniqueInput!, create: GroupMemberCreateInput!, update: GroupMemberUpdateInput!): GroupMember!\n  upsertGroupType(where: GroupTypeWhereUniqueInput!, create: GroupTypeCreateInput!, update: GroupTypeUpdateInput!): GroupType!\n  upsertCampus(where: CampusWhereUniqueInput!, create: CampusCreateInput!, update: CampusUpdateInput!): Campus!\n  upsertFinancialAccount(where: FinancialAccountWhereUniqueInput!, create: FinancialAccountCreateInput!, update: FinancialAccountUpdateInput!): FinancialAccount!\n  upsertGroup(where: GroupWhereUniqueInput!, create: GroupCreateInput!, update: GroupUpdateInput!): Group!\n  upsertPerson(where: PersonWhereUniqueInput!, create: PersonCreateInput!, update: PersonUpdateInput!): Person!\n  upsertGroupRole(where: GroupRoleWhereUniqueInput!, create: GroupRoleCreateInput!, update: GroupRoleUpdateInput!): GroupRole!\n  upsertLocation(where: LocationWhereUniqueInput!, create: LocationCreateInput!, update: LocationUpdateInput!): Location!\n  upsertPhoneNumber(where: PhoneNumberWhereUniqueInput!, create: PhoneNumberCreateInput!, update: PhoneNumberUpdateInput!): PhoneNumber!\n  upsertFinancialPaymentDetail(where: FinancialPaymentDetailWhereUniqueInput!, create: FinancialPaymentDetailCreateInput!, update: FinancialPaymentDetailUpdateInput!): FinancialPaymentDetail!\n  updateManyFinancialScheduledTransactions(data: FinancialScheduledTransactionUpdateManyMutationInput!, where: FinancialScheduledTransactionWhereInput): BatchPayload!\n  updateManyFinancialTransactions(data: FinancialTransactionUpdateManyMutationInput!, where: FinancialTransactionWhereInput): BatchPayload!\n  updateManyGroupInvites(data: GroupInviteUpdateManyMutationInput!, where: GroupInviteWhereInput): BatchPayload!\n  updateManyGroupTypes(data: GroupTypeUpdateManyMutationInput!, where: GroupTypeWhereInput): BatchPayload!\n  updateManyCampuses(data: CampusUpdateManyMutationInput!, where: CampusWhereInput): BatchPayload!\n  updateManyFinancialAccounts(data: FinancialAccountUpdateManyMutationInput!, where: FinancialAccountWhereInput): BatchPayload!\n  updateManyGroups(data: GroupUpdateManyMutationInput!, where: GroupWhereInput): BatchPayload!\n  updateManyPersons(data: PersonUpdateManyMutationInput!, where: PersonWhereInput): BatchPayload!\n  updateManyGroupRoles(data: GroupRoleUpdateManyMutationInput!, where: GroupRoleWhereInput): BatchPayload!\n  updateManyLocations(data: LocationUpdateManyMutationInput!, where: LocationWhereInput): BatchPayload!\n  updateManyPhoneNumbers(data: PhoneNumberUpdateManyMutationInput!, where: PhoneNumberWhereInput): BatchPayload!\n  updateManyFinancialPaymentDetails(data: FinancialPaymentDetailUpdateManyMutationInput!, where: FinancialPaymentDetailWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyFinancialScheduledTransactions(where: FinancialScheduledTransactionWhereInput): BatchPayload!\n  deleteManyFinancialTransactions(where: FinancialTransactionWhereInput): BatchPayload!\n  deleteManyGroupInvites(where: GroupInviteWhereInput): BatchPayload!\n  deleteManyGroupMembers(where: GroupMemberWhereInput): BatchPayload!\n  deleteManyGroupTypes(where: GroupTypeWhereInput): BatchPayload!\n  deleteManyCampuses(where: CampusWhereInput): BatchPayload!\n  deleteManyFinancialAccounts(where: FinancialAccountWhereInput): BatchPayload!\n  deleteManyGroups(where: GroupWhereInput): BatchPayload!\n  deleteManyPersons(where: PersonWhereInput): BatchPayload!\n  deleteManyGroupRoles(where: GroupRoleWhereInput): BatchPayload!\n  deleteManyLocations(where: LocationWhereInput): BatchPayload!\n  deleteManyPhoneNumbers(where: PhoneNumberWhereInput): BatchPayload!\n  deleteManyFinancialPaymentDetails(where: FinancialPaymentDetailWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Person implements Node {\n  id: ID!\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers(where: PhoneNumberWhereInput, orderBy: PhoneNumberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PhoneNumber!]\n  scheduledTransactions(where: FinancialScheduledTransactionWhereInput, orderBy: FinancialScheduledTransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialScheduledTransaction!]\n  transactions(where: FinancialTransactionWhereInput, orderBy: FinancialTransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialTransaction!]\n  user: User\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PersonConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PersonEdge]!\n  aggregate: AggregatePerson!\n}\n\ninput PersonCreateInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberCreateManyInput\n  scheduledTransactions: FinancialScheduledTransactionCreateManyWithoutPersonInput\n  transactions: FinancialTransactionCreateManyWithoutPersonInput\n  user: UserCreateOneWithoutPersonInput\n}\n\ninput PersonCreateOneInput {\n  create: PersonCreateInput\n  connect: PersonWhereUniqueInput\n}\n\ninput PersonCreateOneWithoutScheduledTransactionsInput {\n  create: PersonCreateWithoutScheduledTransactionsInput\n  connect: PersonWhereUniqueInput\n}\n\ninput PersonCreateOneWithoutTransactionsInput {\n  create: PersonCreateWithoutTransactionsInput\n  connect: PersonWhereUniqueInput\n}\n\ninput PersonCreateOneWithoutUserInput {\n  create: PersonCreateWithoutUserInput\n  connect: PersonWhereUniqueInput\n}\n\ninput PersonCreateWithoutScheduledTransactionsInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberCreateManyInput\n  transactions: FinancialTransactionCreateManyWithoutPersonInput\n  user: UserCreateOneWithoutPersonInput\n}\n\ninput PersonCreateWithoutTransactionsInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberCreateManyInput\n  scheduledTransactions: FinancialScheduledTransactionCreateManyWithoutPersonInput\n  user: UserCreateOneWithoutPersonInput\n}\n\ninput PersonCreateWithoutUserInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberCreateManyInput\n  scheduledTransactions: FinancialScheduledTransactionCreateManyWithoutPersonInput\n  transactions: FinancialTransactionCreateManyWithoutPersonInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PersonEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Person!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PersonOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  firstName_ASC\n  firstName_DESC\n  lastName_ASC\n  lastName_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PersonPreviousValues {\n  id: ID!\n  email: String\n  firstName: String\n  lastName: String\n}\n\ntype PersonSubscriptionPayload {\n  mutation: MutationType!\n  node: Person\n  updatedFields: [String!]\n  previousValues: PersonPreviousValues\n}\n\ninput PersonSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PersonSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PersonSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PersonSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PersonWhereInput\n}\n\ninput PersonUpdateDataInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberUpdateManyInput\n  scheduledTransactions: FinancialScheduledTransactionUpdateManyWithoutPersonInput\n  transactions: FinancialTransactionUpdateManyWithoutPersonInput\n  user: UserUpdateOneWithoutPersonInput\n}\n\ninput PersonUpdateInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberUpdateManyInput\n  scheduledTransactions: FinancialScheduledTransactionUpdateManyWithoutPersonInput\n  transactions: FinancialTransactionUpdateManyWithoutPersonInput\n  user: UserUpdateOneWithoutPersonInput\n}\n\ninput PersonUpdateManyMutationInput {\n  email: String\n  firstName: String\n  lastName: String\n}\n\ninput PersonUpdateOneInput {\n  create: PersonCreateInput\n  connect: PersonWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: PersonUpdateDataInput\n  upsert: PersonUpsertNestedInput\n}\n\ninput PersonUpdateOneRequiredWithoutUserInput {\n  create: PersonCreateWithoutUserInput\n  connect: PersonWhereUniqueInput\n  update: PersonUpdateWithoutUserDataInput\n  upsert: PersonUpsertWithoutUserInput\n}\n\ninput PersonUpdateOneWithoutScheduledTransactionsInput {\n  create: PersonCreateWithoutScheduledTransactionsInput\n  connect: PersonWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: PersonUpdateWithoutScheduledTransactionsDataInput\n  upsert: PersonUpsertWithoutScheduledTransactionsInput\n}\n\ninput PersonUpdateOneWithoutTransactionsInput {\n  create: PersonCreateWithoutTransactionsInput\n  connect: PersonWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: PersonUpdateWithoutTransactionsDataInput\n  upsert: PersonUpsertWithoutTransactionsInput\n}\n\ninput PersonUpdateWithoutScheduledTransactionsDataInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberUpdateManyInput\n  transactions: FinancialTransactionUpdateManyWithoutPersonInput\n  user: UserUpdateOneWithoutPersonInput\n}\n\ninput PersonUpdateWithoutTransactionsDataInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberUpdateManyInput\n  scheduledTransactions: FinancialScheduledTransactionUpdateManyWithoutPersonInput\n  user: UserUpdateOneWithoutPersonInput\n}\n\ninput PersonUpdateWithoutUserDataInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberUpdateManyInput\n  scheduledTransactions: FinancialScheduledTransactionUpdateManyWithoutPersonInput\n  transactions: FinancialTransactionUpdateManyWithoutPersonInput\n}\n\ninput PersonUpsertNestedInput {\n  update: PersonUpdateDataInput!\n  create: PersonCreateInput!\n}\n\ninput PersonUpsertWithoutScheduledTransactionsInput {\n  update: PersonUpdateWithoutScheduledTransactionsDataInput!\n  create: PersonCreateWithoutScheduledTransactionsInput!\n}\n\ninput PersonUpsertWithoutTransactionsInput {\n  update: PersonUpdateWithoutTransactionsDataInput!\n  create: PersonCreateWithoutTransactionsInput!\n}\n\ninput PersonUpsertWithoutUserInput {\n  update: PersonUpdateWithoutUserDataInput!\n  create: PersonCreateWithoutUserInput!\n}\n\ninput PersonWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PersonWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PersonWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PersonWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  firstName: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  firstName_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  firstName_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  firstName_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  firstName_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  firstName_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  firstName_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  firstName_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  firstName_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  firstName_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  firstName_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  firstName_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  firstName_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  firstName_not_ends_with: String\n  lastName: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  lastName_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  lastName_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  lastName_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  lastName_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  lastName_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  lastName_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  lastName_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  lastName_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  lastName_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  lastName_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  lastName_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  lastName_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  lastName_not_ends_with: String\n  phoneNumbers_every: PhoneNumberWhereInput\n  phoneNumbers_some: PhoneNumberWhereInput\n  phoneNumbers_none: PhoneNumberWhereInput\n  scheduledTransactions_every: FinancialScheduledTransactionWhereInput\n  scheduledTransactions_some: FinancialScheduledTransactionWhereInput\n  scheduledTransactions_none: FinancialScheduledTransactionWhereInput\n  transactions_every: FinancialTransactionWhereInput\n  transactions_some: FinancialTransactionWhereInput\n  transactions_none: FinancialTransactionWhereInput\n  user: UserWhereInput\n}\n\ninput PersonWhereUniqueInput {\n  id: ID\n}\n\ntype PhoneNumber implements Node {\n  id: ID!\n  number: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PhoneNumberConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PhoneNumberEdge]!\n  aggregate: AggregatePhoneNumber!\n}\n\ninput PhoneNumberCreateInput {\n  number: String!\n}\n\ninput PhoneNumberCreateManyInput {\n  create: [PhoneNumberCreateInput!]\n  connect: [PhoneNumberWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PhoneNumberEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: PhoneNumber!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PhoneNumberOrderByInput {\n  id_ASC\n  id_DESC\n  number_ASC\n  number_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PhoneNumberPreviousValues {\n  id: ID!\n  number: String!\n}\n\ninput PhoneNumberScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PhoneNumberScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PhoneNumberScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PhoneNumberScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  number: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  number_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  number_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  number_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  number_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  number_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  number_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  number_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  number_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  number_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  number_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  number_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  number_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  number_not_ends_with: String\n}\n\ntype PhoneNumberSubscriptionPayload {\n  mutation: MutationType!\n  node: PhoneNumber\n  updatedFields: [String!]\n  previousValues: PhoneNumberPreviousValues\n}\n\ninput PhoneNumberSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PhoneNumberSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PhoneNumberSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PhoneNumberSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PhoneNumberWhereInput\n}\n\ninput PhoneNumberUpdateDataInput {\n  number: String\n}\n\ninput PhoneNumberUpdateInput {\n  number: String\n}\n\ninput PhoneNumberUpdateManyDataInput {\n  number: String\n}\n\ninput PhoneNumberUpdateManyInput {\n  create: [PhoneNumberCreateInput!]\n  connect: [PhoneNumberWhereUniqueInput!]\n  disconnect: [PhoneNumberWhereUniqueInput!]\n  delete: [PhoneNumberWhereUniqueInput!]\n  update: [PhoneNumberUpdateWithWhereUniqueNestedInput!]\n  updateMany: [PhoneNumberUpdateManyWithWhereNestedInput!]\n  deleteMany: [PhoneNumberScalarWhereInput!]\n  upsert: [PhoneNumberUpsertWithWhereUniqueNestedInput!]\n}\n\ninput PhoneNumberUpdateManyMutationInput {\n  number: String\n}\n\ninput PhoneNumberUpdateManyWithWhereNestedInput {\n  where: PhoneNumberScalarWhereInput!\n  data: PhoneNumberUpdateManyDataInput!\n}\n\ninput PhoneNumberUpdateWithWhereUniqueNestedInput {\n  where: PhoneNumberWhereUniqueInput!\n  data: PhoneNumberUpdateDataInput!\n}\n\ninput PhoneNumberUpsertWithWhereUniqueNestedInput {\n  where: PhoneNumberWhereUniqueInput!\n  update: PhoneNumberUpdateDataInput!\n  create: PhoneNumberCreateInput!\n}\n\ninput PhoneNumberWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PhoneNumberWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PhoneNumberWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PhoneNumberWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  number: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  number_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  number_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  number_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  number_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  number_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  number_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  number_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  number_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  number_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  number_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  number_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  number_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  number_not_ends_with: String\n}\n\ninput PhoneNumberWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  financialScheduledTransactions(where: FinancialScheduledTransactionWhereInput, orderBy: FinancialScheduledTransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialScheduledTransaction]!\n  financialTransactions(where: FinancialTransactionWhereInput, orderBy: FinancialTransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialTransaction]!\n  groupInvites(where: GroupInviteWhereInput, orderBy: GroupInviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupInvite]!\n  groupMembers(where: GroupMemberWhereInput, orderBy: GroupMemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupMember]!\n  groupTypes(where: GroupTypeWhereInput, orderBy: GroupTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupType]!\n  campuses(where: CampusWhereInput, orderBy: CampusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Campus]!\n  financialAccounts(where: FinancialAccountWhereInput, orderBy: FinancialAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialAccount]!\n  groups(where: GroupWhereInput, orderBy: GroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Group]!\n  persons(where: PersonWhereInput, orderBy: PersonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Person]!\n  groupRoles(where: GroupRoleWhereInput, orderBy: GroupRoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupRole]!\n  locations(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Location]!\n  phoneNumbers(where: PhoneNumberWhereInput, orderBy: PhoneNumberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PhoneNumber]!\n  financialPaymentDetails(where: FinancialPaymentDetailWhereInput, orderBy: FinancialPaymentDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialPaymentDetail]!\n  user(where: UserWhereUniqueInput!): User\n  financialScheduledTransaction(where: FinancialScheduledTransactionWhereUniqueInput!): FinancialScheduledTransaction\n  financialTransaction(where: FinancialTransactionWhereUniqueInput!): FinancialTransaction\n  groupInvite(where: GroupInviteWhereUniqueInput!): GroupInvite\n  groupMember(where: GroupMemberWhereUniqueInput!): GroupMember\n  groupType(where: GroupTypeWhereUniqueInput!): GroupType\n  campus(where: CampusWhereUniqueInput!): Campus\n  financialAccount(where: FinancialAccountWhereUniqueInput!): FinancialAccount\n  group(where: GroupWhereUniqueInput!): Group\n  person(where: PersonWhereUniqueInput!): Person\n  groupRole(where: GroupRoleWhereUniqueInput!): GroupRole\n  location(where: LocationWhereUniqueInput!): Location\n  phoneNumber(where: PhoneNumberWhereUniqueInput!): PhoneNumber\n  financialPaymentDetail(where: FinancialPaymentDetailWhereUniqueInput!): FinancialPaymentDetail\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  financialScheduledTransactionsConnection(where: FinancialScheduledTransactionWhereInput, orderBy: FinancialScheduledTransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FinancialScheduledTransactionConnection!\n  financialTransactionsConnection(where: FinancialTransactionWhereInput, orderBy: FinancialTransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FinancialTransactionConnection!\n  groupInvitesConnection(where: GroupInviteWhereInput, orderBy: GroupInviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupInviteConnection!\n  groupMembersConnection(where: GroupMemberWhereInput, orderBy: GroupMemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupMemberConnection!\n  groupTypesConnection(where: GroupTypeWhereInput, orderBy: GroupTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupTypeConnection!\n  campusesConnection(where: CampusWhereInput, orderBy: CampusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CampusConnection!\n  financialAccountsConnection(where: FinancialAccountWhereInput, orderBy: FinancialAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FinancialAccountConnection!\n  groupsConnection(where: GroupWhereInput, orderBy: GroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupConnection!\n  personsConnection(where: PersonWhereInput, orderBy: PersonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PersonConnection!\n  groupRolesConnection(where: GroupRoleWhereInput, orderBy: GroupRoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupRoleConnection!\n  locationsConnection(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LocationConnection!\n  phoneNumbersConnection(where: PhoneNumberWhereInput, orderBy: PhoneNumberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PhoneNumberConnection!\n  financialPaymentDetailsConnection(where: FinancialPaymentDetailWhereInput, orderBy: FinancialPaymentDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FinancialPaymentDetailConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  financialScheduledTransaction(where: FinancialScheduledTransactionSubscriptionWhereInput): FinancialScheduledTransactionSubscriptionPayload\n  financialTransaction(where: FinancialTransactionSubscriptionWhereInput): FinancialTransactionSubscriptionPayload\n  groupInvite(where: GroupInviteSubscriptionWhereInput): GroupInviteSubscriptionPayload\n  groupMember(where: GroupMemberSubscriptionWhereInput): GroupMemberSubscriptionPayload\n  groupType(where: GroupTypeSubscriptionWhereInput): GroupTypeSubscriptionPayload\n  campus(where: CampusSubscriptionWhereInput): CampusSubscriptionPayload\n  financialAccount(where: FinancialAccountSubscriptionWhereInput): FinancialAccountSubscriptionPayload\n  group(where: GroupSubscriptionWhereInput): GroupSubscriptionPayload\n  person(where: PersonSubscriptionWhereInput): PersonSubscriptionPayload\n  groupRole(where: GroupRoleSubscriptionWhereInput): GroupRoleSubscriptionPayload\n  location(where: LocationSubscriptionWhereInput): LocationSubscriptionPayload\n  phoneNumber(where: PhoneNumberSubscriptionWhereInput): PhoneNumberSubscriptionPayload\n  financialPaymentDetail(where: FinancialPaymentDetailSubscriptionWhereInput): FinancialPaymentDetailSubscriptionPayload\n}\n\nenum TRANSACTION_FREQUENCY {\n  DAILY\n  MONTHLY\n  BIWEEKLY\n  CUSTOM\n}\n\nenum TRANSACTION_STATUS {\n  PENDING\n  SUCCESS\n  FAILED\n}\n\ntype User implements Node {\n  id: ID!\n  person: Person!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  person: PersonCreateOneWithoutUserInput!\n}\n\ninput UserCreateOneWithoutPersonInput {\n  connect: UserWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  person: PersonUpdateOneRequiredWithoutUserInput\n}\n\ninput UserUpdateOneWithoutPersonInput {\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  person: PersonWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 349
    },
    {
      "name": "document.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/financial/document.graphql",
      "sha": "87ffd9182643f466f8a7a97fefbdd3e597554aba",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/financial/document.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/87ffd9182643f466f8a7a97fefbdd3e597554aba",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/financial/document.graphql",
      "content": "enum ACH_TYPE {\n  SAVINGS\n  CHECKING\n}\n\ntype AggregateCampus {\n  count: Int!\n}\n\ntype AggregateFinancialAccount {\n  count: Int!\n}\n\ntype AggregateFinancialPaymentDetail {\n  count: Int!\n}\n\ntype AggregateFinancialScheduledTransaction {\n  count: Int!\n}\n\ntype AggregateFinancialTransaction {\n  count: Int!\n}\n\ntype AggregateGroup {\n  count: Int!\n}\n\ntype AggregateGroupInvite {\n  count: Int!\n}\n\ntype AggregateGroupMember {\n  count: Int!\n}\n\ntype AggregateGroupRole {\n  count: Int!\n}\n\ntype AggregateGroupType {\n  count: Int!\n}\n\ntype AggregateLocation {\n  count: Int!\n}\n\ntype AggregatePerson {\n  count: Int!\n}\n\ntype AggregatePhoneNumber {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\ntype Campus implements Node {\n  id: ID!\n  accounts(where: FinancialAccountWhereInput, orderBy: FinancialAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialAccount!]\n  description: String\n  isActive: Boolean\n  organization: Group\n  location: Location\n  name: String!\n  phoneNumbers(where: PhoneNumberWhereInput, orderBy: PhoneNumberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PhoneNumber!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CampusConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CampusEdge]!\n  aggregate: AggregateCampus!\n}\n\ninput CampusCreateInput {\n  description: String\n  isActive: Boolean\n  name: String!\n  accounts: FinancialAccountCreateManyWithoutCampusesInput\n  organization: GroupCreateOneInput\n  location: LocationCreateOneInput\n  phoneNumbers: PhoneNumberCreateManyInput\n}\n\ninput CampusCreateManyWithoutAccountsInput {\n  create: [CampusCreateWithoutAccountsInput!]\n  connect: [CampusWhereUniqueInput!]\n}\n\ninput CampusCreateWithoutAccountsInput {\n  description: String\n  isActive: Boolean\n  name: String!\n  organization: GroupCreateOneInput\n  location: LocationCreateOneInput\n  phoneNumbers: PhoneNumberCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CampusEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Campus!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CampusOrderByInput {\n  id_ASC\n  id_DESC\n  description_ASC\n  description_DESC\n  isActive_ASC\n  isActive_DESC\n  name_ASC\n  name_DESC\n}\n\ntype CampusPreviousValues {\n  id: ID!\n  description: String\n  isActive: Boolean\n  name: String!\n}\n\ninput CampusScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CampusScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CampusScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CampusScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  isActive: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isActive_not: Boolean\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ntype CampusSubscriptionPayload {\n  mutation: MutationType!\n  node: Campus\n  updatedFields: [String!]\n  previousValues: CampusPreviousValues\n}\n\ninput CampusSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CampusSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CampusSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CampusSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CampusWhereInput\n}\n\ninput CampusUpdateInput {\n  description: String\n  isActive: Boolean\n  name: String\n  accounts: FinancialAccountUpdateManyWithoutCampusesInput\n  organization: GroupUpdateOneInput\n  location: LocationUpdateOneInput\n  phoneNumbers: PhoneNumberUpdateManyInput\n}\n\ninput CampusUpdateManyDataInput {\n  description: String\n  isActive: Boolean\n  name: String\n}\n\ninput CampusUpdateManyMutationInput {\n  description: String\n  isActive: Boolean\n  name: String\n}\n\ninput CampusUpdateManyWithoutAccountsInput {\n  create: [CampusCreateWithoutAccountsInput!]\n  connect: [CampusWhereUniqueInput!]\n  disconnect: [CampusWhereUniqueInput!]\n  delete: [CampusWhereUniqueInput!]\n  update: [CampusUpdateWithWhereUniqueWithoutAccountsInput!]\n  updateMany: [CampusUpdateManyWithWhereNestedInput!]\n  deleteMany: [CampusScalarWhereInput!]\n  upsert: [CampusUpsertWithWhereUniqueWithoutAccountsInput!]\n}\n\ninput CampusUpdateManyWithWhereNestedInput {\n  where: CampusScalarWhereInput!\n  data: CampusUpdateManyDataInput!\n}\n\ninput CampusUpdateWithoutAccountsDataInput {\n  description: String\n  isActive: Boolean\n  name: String\n  organization: GroupUpdateOneInput\n  location: LocationUpdateOneInput\n  phoneNumbers: PhoneNumberUpdateManyInput\n}\n\ninput CampusUpdateWithWhereUniqueWithoutAccountsInput {\n  where: CampusWhereUniqueInput!\n  data: CampusUpdateWithoutAccountsDataInput!\n}\n\ninput CampusUpsertWithWhereUniqueWithoutAccountsInput {\n  where: CampusWhereUniqueInput!\n  update: CampusUpdateWithoutAccountsDataInput!\n  create: CampusCreateWithoutAccountsInput!\n}\n\ninput CampusWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CampusWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CampusWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CampusWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  isActive: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isActive_not: Boolean\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ninput CampusWhereUniqueInput {\n  id: ID\n}\n\nenum CREDIT_CARD {\n  VISA\n  MASTERCARD\n  AMEX\n  DISCOVER\n}\n\nenum CURRENCY_TYPE {\n  ACH\n  CC\n}\n\nscalar DateTime\n\ntype FinancialAccount implements Node {\n  id: ID!\n  key: String\n  campuses(where: CampusWhereInput, orderBy: CampusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Campus!]\n  description: String!\n  isActive: Boolean!\n  name: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype FinancialAccountConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [FinancialAccountEdge]!\n  aggregate: AggregateFinancialAccount!\n}\n\ninput FinancialAccountCreateInput {\n  key: String\n  description: String!\n  isActive: Boolean!\n  name: String\n  campuses: CampusCreateManyWithoutAccountsInput\n}\n\ninput FinancialAccountCreateManyWithoutCampusesInput {\n  create: [FinancialAccountCreateWithoutCampusesInput!]\n  connect: [FinancialAccountWhereUniqueInput!]\n}\n\ninput FinancialAccountCreateOneInput {\n  create: FinancialAccountCreateInput\n  connect: FinancialAccountWhereUniqueInput\n}\n\ninput FinancialAccountCreateWithoutCampusesInput {\n  key: String\n  description: String!\n  isActive: Boolean!\n  name: String\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype FinancialAccountEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: FinancialAccount!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum FinancialAccountOrderByInput {\n  id_ASC\n  id_DESC\n  key_ASC\n  key_DESC\n  description_ASC\n  description_DESC\n  isActive_ASC\n  isActive_DESC\n  name_ASC\n  name_DESC\n}\n\ntype FinancialAccountPreviousValues {\n  id: ID!\n  key: String\n  description: String!\n  isActive: Boolean!\n  name: String\n}\n\ninput FinancialAccountScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialAccountScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialAccountScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialAccountScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  key: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  key_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  key_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  key_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  key_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  key_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  key_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  key_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  key_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  key_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  key_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  key_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  key_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  key_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  isActive: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isActive_not: Boolean\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ntype FinancialAccountSubscriptionPayload {\n  mutation: MutationType!\n  node: FinancialAccount\n  updatedFields: [String!]\n  previousValues: FinancialAccountPreviousValues\n}\n\ninput FinancialAccountSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialAccountSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialAccountSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialAccountSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FinancialAccountWhereInput\n}\n\ninput FinancialAccountUpdateDataInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n  campuses: CampusUpdateManyWithoutAccountsInput\n}\n\ninput FinancialAccountUpdateInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n  campuses: CampusUpdateManyWithoutAccountsInput\n}\n\ninput FinancialAccountUpdateManyDataInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n}\n\ninput FinancialAccountUpdateManyMutationInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n}\n\ninput FinancialAccountUpdateManyWithoutCampusesInput {\n  create: [FinancialAccountCreateWithoutCampusesInput!]\n  connect: [FinancialAccountWhereUniqueInput!]\n  disconnect: [FinancialAccountWhereUniqueInput!]\n  delete: [FinancialAccountWhereUniqueInput!]\n  update: [FinancialAccountUpdateWithWhereUniqueWithoutCampusesInput!]\n  updateMany: [FinancialAccountUpdateManyWithWhereNestedInput!]\n  deleteMany: [FinancialAccountScalarWhereInput!]\n  upsert: [FinancialAccountUpsertWithWhereUniqueWithoutCampusesInput!]\n}\n\ninput FinancialAccountUpdateManyWithWhereNestedInput {\n  where: FinancialAccountScalarWhereInput!\n  data: FinancialAccountUpdateManyDataInput!\n}\n\ninput FinancialAccountUpdateOneInput {\n  create: FinancialAccountCreateInput\n  connect: FinancialAccountWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: FinancialAccountUpdateDataInput\n  upsert: FinancialAccountUpsertNestedInput\n}\n\ninput FinancialAccountUpdateWithoutCampusesDataInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n}\n\ninput FinancialAccountUpdateWithWhereUniqueWithoutCampusesInput {\n  where: FinancialAccountWhereUniqueInput!\n  data: FinancialAccountUpdateWithoutCampusesDataInput!\n}\n\ninput FinancialAccountUpsertNestedInput {\n  update: FinancialAccountUpdateDataInput!\n  create: FinancialAccountCreateInput!\n}\n\ninput FinancialAccountUpsertWithWhereUniqueWithoutCampusesInput {\n  where: FinancialAccountWhereUniqueInput!\n  update: FinancialAccountUpdateWithoutCampusesDataInput!\n  create: FinancialAccountCreateWithoutCampusesInput!\n}\n\ninput FinancialAccountWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialAccountWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialAccountWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialAccountWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  key: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  key_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  key_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  key_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  key_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  key_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  key_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  key_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  key_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  key_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  key_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  key_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  key_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  key_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  isActive: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isActive_not: Boolean\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ninput FinancialAccountWhereUniqueInput {\n  id: ID\n  key: String\n}\n\ntype FinancialPaymentDetail implements Node {\n  id: ID!\n  accountNumberMasked: String!\n  billingLocation: Location\n  creditCardType: CREDIT_CARD\n  achType: ACH_TYPE\n  currencyType: CURRENCY_TYPE\n  expirationDate: DateTime!\n  nameOnCard: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype FinancialPaymentDetailConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [FinancialPaymentDetailEdge]!\n  aggregate: AggregateFinancialPaymentDetail!\n}\n\ninput FinancialPaymentDetailCreateInput {\n  accountNumberMasked: String!\n  creditCardType: CREDIT_CARD\n  achType: ACH_TYPE\n  currencyType: CURRENCY_TYPE\n  expirationDate: DateTime!\n  nameOnCard: String\n  billingLocation: LocationCreateOneInput\n}\n\ninput FinancialPaymentDetailCreateOneInput {\n  create: FinancialPaymentDetailCreateInput\n  connect: FinancialPaymentDetailWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype FinancialPaymentDetailEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: FinancialPaymentDetail!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum FinancialPaymentDetailOrderByInput {\n  id_ASC\n  id_DESC\n  accountNumberMasked_ASC\n  accountNumberMasked_DESC\n  creditCardType_ASC\n  creditCardType_DESC\n  achType_ASC\n  achType_DESC\n  currencyType_ASC\n  currencyType_DESC\n  expirationDate_ASC\n  expirationDate_DESC\n  nameOnCard_ASC\n  nameOnCard_DESC\n}\n\ntype FinancialPaymentDetailPreviousValues {\n  id: ID!\n  accountNumberMasked: String!\n  creditCardType: CREDIT_CARD\n  achType: ACH_TYPE\n  currencyType: CURRENCY_TYPE\n  expirationDate: DateTime!\n  nameOnCard: String\n}\n\ntype FinancialPaymentDetailSubscriptionPayload {\n  mutation: MutationType!\n  node: FinancialPaymentDetail\n  updatedFields: [String!]\n  previousValues: FinancialPaymentDetailPreviousValues\n}\n\ninput FinancialPaymentDetailSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialPaymentDetailSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialPaymentDetailSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialPaymentDetailSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FinancialPaymentDetailWhereInput\n}\n\ninput FinancialPaymentDetailUpdateDataInput {\n  accountNumberMasked: String\n  creditCardType: CREDIT_CARD\n  achType: ACH_TYPE\n  currencyType: CURRENCY_TYPE\n  expirationDate: DateTime\n  nameOnCard: String\n  billingLocation: LocationUpdateOneInput\n}\n\ninput FinancialPaymentDetailUpdateInput {\n  accountNumberMasked: String\n  creditCardType: CREDIT_CARD\n  achType: ACH_TYPE\n  currencyType: CURRENCY_TYPE\n  expirationDate: DateTime\n  nameOnCard: String\n  billingLocation: LocationUpdateOneInput\n}\n\ninput FinancialPaymentDetailUpdateManyMutationInput {\n  accountNumberMasked: String\n  creditCardType: CREDIT_CARD\n  achType: ACH_TYPE\n  currencyType: CURRENCY_TYPE\n  expirationDate: DateTime\n  nameOnCard: String\n}\n\ninput FinancialPaymentDetailUpdateOneInput {\n  create: FinancialPaymentDetailCreateInput\n  connect: FinancialPaymentDetailWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: FinancialPaymentDetailUpdateDataInput\n  upsert: FinancialPaymentDetailUpsertNestedInput\n}\n\ninput FinancialPaymentDetailUpsertNestedInput {\n  update: FinancialPaymentDetailUpdateDataInput!\n  create: FinancialPaymentDetailCreateInput!\n}\n\ninput FinancialPaymentDetailWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialPaymentDetailWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialPaymentDetailWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialPaymentDetailWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  accountNumberMasked: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  accountNumberMasked_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  accountNumberMasked_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  accountNumberMasked_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  accountNumberMasked_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  accountNumberMasked_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  accountNumberMasked_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  accountNumberMasked_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  accountNumberMasked_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  accountNumberMasked_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  accountNumberMasked_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  accountNumberMasked_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  accountNumberMasked_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  accountNumberMasked_not_ends_with: String\n  creditCardType: CREDIT_CARD\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  creditCardType_not: CREDIT_CARD\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  creditCardType_in: [CREDIT_CARD!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  creditCardType_not_in: [CREDIT_CARD!]\n  achType: ACH_TYPE\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  achType_not: ACH_TYPE\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  achType_in: [ACH_TYPE!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  achType_not_in: [ACH_TYPE!]\n  currencyType: CURRENCY_TYPE\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  currencyType_not: CURRENCY_TYPE\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  currencyType_in: [CURRENCY_TYPE!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  currencyType_not_in: [CURRENCY_TYPE!]\n  expirationDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  expirationDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  expirationDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  expirationDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  expirationDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  expirationDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  expirationDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  expirationDate_gte: DateTime\n  nameOnCard: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  nameOnCard_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  nameOnCard_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  nameOnCard_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  nameOnCard_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  nameOnCard_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  nameOnCard_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  nameOnCard_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  nameOnCard_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  nameOnCard_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  nameOnCard_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  nameOnCard_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  nameOnCard_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  nameOnCard_not_ends_with: String\n}\n\ninput FinancialPaymentDetailWhereUniqueInput {\n  id: ID\n}\n\ntype FinancialScheduledTransaction implements Node {\n  id: ID!\n  person: Person\n  endDate: DateTime\n  payment: FinancialPaymentDetail\n  isActive: Boolean!\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  transactions(where: FinancialTransactionWhereInput, orderBy: FinancialTransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialTransaction!]\n  account: FinancialAccount\n  amount: Float!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype FinancialScheduledTransactionConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [FinancialScheduledTransactionEdge]!\n  aggregate: AggregateFinancialScheduledTransaction!\n}\n\ninput FinancialScheduledTransactionCreateInput {\n  endDate: DateTime\n  isActive: Boolean!\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float!\n  person: PersonCreateOneWithoutScheduledTransactionsInput\n  payment: FinancialPaymentDetailCreateOneInput\n  transactions: FinancialTransactionCreateManyWithoutScheduledTransactionInput\n  account: FinancialAccountCreateOneInput\n}\n\ninput FinancialScheduledTransactionCreateManyWithoutPersonInput {\n  create: [FinancialScheduledTransactionCreateWithoutPersonInput!]\n  connect: [FinancialScheduledTransactionWhereUniqueInput!]\n}\n\ninput FinancialScheduledTransactionCreateOneWithoutTransactionsInput {\n  create: FinancialScheduledTransactionCreateWithoutTransactionsInput\n  connect: FinancialScheduledTransactionWhereUniqueInput\n}\n\ninput FinancialScheduledTransactionCreateWithoutPersonInput {\n  endDate: DateTime\n  isActive: Boolean!\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float!\n  payment: FinancialPaymentDetailCreateOneInput\n  transactions: FinancialTransactionCreateManyWithoutScheduledTransactionInput\n  account: FinancialAccountCreateOneInput\n}\n\ninput FinancialScheduledTransactionCreateWithoutTransactionsInput {\n  endDate: DateTime\n  isActive: Boolean!\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float!\n  person: PersonCreateOneWithoutScheduledTransactionsInput\n  payment: FinancialPaymentDetailCreateOneInput\n  account: FinancialAccountCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype FinancialScheduledTransactionEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: FinancialScheduledTransaction!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum FinancialScheduledTransactionOrderByInput {\n  id_ASC\n  id_DESC\n  endDate_ASC\n  endDate_DESC\n  isActive_ASC\n  isActive_DESC\n  startDate_ASC\n  startDate_DESC\n  frequency_ASC\n  frequency_DESC\n  amount_ASC\n  amount_DESC\n}\n\ntype FinancialScheduledTransactionPreviousValues {\n  id: ID!\n  endDate: DateTime\n  isActive: Boolean!\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float!\n}\n\ninput FinancialScheduledTransactionScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialScheduledTransactionScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialScheduledTransactionScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialScheduledTransactionScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  endDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  endDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  endDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  endDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  endDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  endDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  endDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  endDate_gte: DateTime\n  isActive: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isActive_not: Boolean\n  startDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  startDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  startDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  startDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  startDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  startDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  startDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  startDate_gte: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  frequency_not: TRANSACTION_FREQUENCY\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  frequency_in: [TRANSACTION_FREQUENCY!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  frequency_not_in: [TRANSACTION_FREQUENCY!]\n  amount: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  amount_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  amount_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  amount_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  amount_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  amount_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  amount_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  amount_gte: Float\n}\n\ntype FinancialScheduledTransactionSubscriptionPayload {\n  mutation: MutationType!\n  node: FinancialScheduledTransaction\n  updatedFields: [String!]\n  previousValues: FinancialScheduledTransactionPreviousValues\n}\n\ninput FinancialScheduledTransactionSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialScheduledTransactionSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialScheduledTransactionSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialScheduledTransactionSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FinancialScheduledTransactionWhereInput\n}\n\ninput FinancialScheduledTransactionUpdateInput {\n  endDate: DateTime\n  isActive: Boolean\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float\n  person: PersonUpdateOneWithoutScheduledTransactionsInput\n  payment: FinancialPaymentDetailUpdateOneInput\n  transactions: FinancialTransactionUpdateManyWithoutScheduledTransactionInput\n  account: FinancialAccountUpdateOneInput\n}\n\ninput FinancialScheduledTransactionUpdateManyDataInput {\n  endDate: DateTime\n  isActive: Boolean\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float\n}\n\ninput FinancialScheduledTransactionUpdateManyMutationInput {\n  endDate: DateTime\n  isActive: Boolean\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float\n}\n\ninput FinancialScheduledTransactionUpdateManyWithoutPersonInput {\n  create: [FinancialScheduledTransactionCreateWithoutPersonInput!]\n  connect: [FinancialScheduledTransactionWhereUniqueInput!]\n  disconnect: [FinancialScheduledTransactionWhereUniqueInput!]\n  delete: [FinancialScheduledTransactionWhereUniqueInput!]\n  update: [FinancialScheduledTransactionUpdateWithWhereUniqueWithoutPersonInput!]\n  updateMany: [FinancialScheduledTransactionUpdateManyWithWhereNestedInput!]\n  deleteMany: [FinancialScheduledTransactionScalarWhereInput!]\n  upsert: [FinancialScheduledTransactionUpsertWithWhereUniqueWithoutPersonInput!]\n}\n\ninput FinancialScheduledTransactionUpdateManyWithWhereNestedInput {\n  where: FinancialScheduledTransactionScalarWhereInput!\n  data: FinancialScheduledTransactionUpdateManyDataInput!\n}\n\ninput FinancialScheduledTransactionUpdateOneWithoutTransactionsInput {\n  create: FinancialScheduledTransactionCreateWithoutTransactionsInput\n  connect: FinancialScheduledTransactionWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: FinancialScheduledTransactionUpdateWithoutTransactionsDataInput\n  upsert: FinancialScheduledTransactionUpsertWithoutTransactionsInput\n}\n\ninput FinancialScheduledTransactionUpdateWithoutPersonDataInput {\n  endDate: DateTime\n  isActive: Boolean\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float\n  payment: FinancialPaymentDetailUpdateOneInput\n  transactions: FinancialTransactionUpdateManyWithoutScheduledTransactionInput\n  account: FinancialAccountUpdateOneInput\n}\n\ninput FinancialScheduledTransactionUpdateWithoutTransactionsDataInput {\n  endDate: DateTime\n  isActive: Boolean\n  startDate: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  amount: Float\n  person: PersonUpdateOneWithoutScheduledTransactionsInput\n  payment: FinancialPaymentDetailUpdateOneInput\n  account: FinancialAccountUpdateOneInput\n}\n\ninput FinancialScheduledTransactionUpdateWithWhereUniqueWithoutPersonInput {\n  where: FinancialScheduledTransactionWhereUniqueInput!\n  data: FinancialScheduledTransactionUpdateWithoutPersonDataInput!\n}\n\ninput FinancialScheduledTransactionUpsertWithoutTransactionsInput {\n  update: FinancialScheduledTransactionUpdateWithoutTransactionsDataInput!\n  create: FinancialScheduledTransactionCreateWithoutTransactionsInput!\n}\n\ninput FinancialScheduledTransactionUpsertWithWhereUniqueWithoutPersonInput {\n  where: FinancialScheduledTransactionWhereUniqueInput!\n  update: FinancialScheduledTransactionUpdateWithoutPersonDataInput!\n  create: FinancialScheduledTransactionCreateWithoutPersonInput!\n}\n\ninput FinancialScheduledTransactionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialScheduledTransactionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialScheduledTransactionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialScheduledTransactionWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  endDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  endDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  endDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  endDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  endDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  endDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  endDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  endDate_gte: DateTime\n  isActive: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isActive_not: Boolean\n  startDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  startDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  startDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  startDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  startDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  startDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  startDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  startDate_gte: DateTime\n  frequency: TRANSACTION_FREQUENCY\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  frequency_not: TRANSACTION_FREQUENCY\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  frequency_in: [TRANSACTION_FREQUENCY!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  frequency_not_in: [TRANSACTION_FREQUENCY!]\n  amount: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  amount_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  amount_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  amount_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  amount_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  amount_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  amount_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  amount_gte: Float\n}\n\ninput FinancialScheduledTransactionWhereUniqueInput {\n  id: ID\n}\n\ntype FinancialTransaction implements Node {\n  id: ID!\n  payment: FinancialPaymentDetail\n  person: Person\n  processedDate: DateTime\n  scheduledTransaction: FinancialScheduledTransaction\n  status: TRANSACTION_STATUS!\n  transactionDate: DateTime\n  amount: Float!\n  account: FinancialAccount\n  organization: Group!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype FinancialTransactionConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [FinancialTransactionEdge]!\n  aggregate: AggregateFinancialTransaction!\n}\n\ninput FinancialTransactionCreateInput {\n  processedDate: DateTime\n  status: TRANSACTION_STATUS!\n  transactionDate: DateTime\n  amount: Float!\n  payment: FinancialPaymentDetailCreateOneInput\n  person: PersonCreateOneWithoutTransactionsInput\n  scheduledTransaction: FinancialScheduledTransactionCreateOneWithoutTransactionsInput\n  account: FinancialAccountCreateOneInput\n  organization: GroupCreateOneInput!\n}\n\ninput FinancialTransactionCreateManyWithoutPersonInput {\n  create: [FinancialTransactionCreateWithoutPersonInput!]\n  connect: [FinancialTransactionWhereUniqueInput!]\n}\n\ninput FinancialTransactionCreateManyWithoutScheduledTransactionInput {\n  create: [FinancialTransactionCreateWithoutScheduledTransactionInput!]\n  connect: [FinancialTransactionWhereUniqueInput!]\n}\n\ninput FinancialTransactionCreateWithoutPersonInput {\n  processedDate: DateTime\n  status: TRANSACTION_STATUS!\n  transactionDate: DateTime\n  amount: Float!\n  payment: FinancialPaymentDetailCreateOneInput\n  scheduledTransaction: FinancialScheduledTransactionCreateOneWithoutTransactionsInput\n  account: FinancialAccountCreateOneInput\n  organization: GroupCreateOneInput!\n}\n\ninput FinancialTransactionCreateWithoutScheduledTransactionInput {\n  processedDate: DateTime\n  status: TRANSACTION_STATUS!\n  transactionDate: DateTime\n  amount: Float!\n  payment: FinancialPaymentDetailCreateOneInput\n  person: PersonCreateOneWithoutTransactionsInput\n  account: FinancialAccountCreateOneInput\n  organization: GroupCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype FinancialTransactionEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: FinancialTransaction!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum FinancialTransactionOrderByInput {\n  id_ASC\n  id_DESC\n  processedDate_ASC\n  processedDate_DESC\n  status_ASC\n  status_DESC\n  transactionDate_ASC\n  transactionDate_DESC\n  amount_ASC\n  amount_DESC\n}\n\ntype FinancialTransactionPreviousValues {\n  id: ID!\n  processedDate: DateTime\n  status: TRANSACTION_STATUS!\n  transactionDate: DateTime\n  amount: Float!\n}\n\ninput FinancialTransactionScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialTransactionScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialTransactionScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialTransactionScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  processedDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  processedDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  processedDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  processedDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  processedDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  processedDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  processedDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  processedDate_gte: DateTime\n  status: TRANSACTION_STATUS\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  status_not: TRANSACTION_STATUS\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  status_in: [TRANSACTION_STATUS!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  status_not_in: [TRANSACTION_STATUS!]\n  transactionDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  transactionDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  transactionDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  transactionDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  transactionDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  transactionDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  transactionDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  transactionDate_gte: DateTime\n  amount: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  amount_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  amount_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  amount_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  amount_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  amount_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  amount_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  amount_gte: Float\n}\n\ntype FinancialTransactionSubscriptionPayload {\n  mutation: MutationType!\n  node: FinancialTransaction\n  updatedFields: [String!]\n  previousValues: FinancialTransactionPreviousValues\n}\n\ninput FinancialTransactionSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialTransactionSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialTransactionSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialTransactionSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FinancialTransactionWhereInput\n}\n\ninput FinancialTransactionUpdateInput {\n  processedDate: DateTime\n  status: TRANSACTION_STATUS\n  transactionDate: DateTime\n  amount: Float\n  payment: FinancialPaymentDetailUpdateOneInput\n  person: PersonUpdateOneWithoutTransactionsInput\n  scheduledTransaction: FinancialScheduledTransactionUpdateOneWithoutTransactionsInput\n  account: FinancialAccountUpdateOneInput\n  organization: GroupUpdateOneRequiredInput\n}\n\ninput FinancialTransactionUpdateManyDataInput {\n  processedDate: DateTime\n  status: TRANSACTION_STATUS\n  transactionDate: DateTime\n  amount: Float\n}\n\ninput FinancialTransactionUpdateManyMutationInput {\n  processedDate: DateTime\n  status: TRANSACTION_STATUS\n  transactionDate: DateTime\n  amount: Float\n}\n\ninput FinancialTransactionUpdateManyWithoutPersonInput {\n  create: [FinancialTransactionCreateWithoutPersonInput!]\n  connect: [FinancialTransactionWhereUniqueInput!]\n  disconnect: [FinancialTransactionWhereUniqueInput!]\n  delete: [FinancialTransactionWhereUniqueInput!]\n  update: [FinancialTransactionUpdateWithWhereUniqueWithoutPersonInput!]\n  updateMany: [FinancialTransactionUpdateManyWithWhereNestedInput!]\n  deleteMany: [FinancialTransactionScalarWhereInput!]\n  upsert: [FinancialTransactionUpsertWithWhereUniqueWithoutPersonInput!]\n}\n\ninput FinancialTransactionUpdateManyWithoutScheduledTransactionInput {\n  create: [FinancialTransactionCreateWithoutScheduledTransactionInput!]\n  connect: [FinancialTransactionWhereUniqueInput!]\n  disconnect: [FinancialTransactionWhereUniqueInput!]\n  delete: [FinancialTransactionWhereUniqueInput!]\n  update: [FinancialTransactionUpdateWithWhereUniqueWithoutScheduledTransactionInput!]\n  updateMany: [FinancialTransactionUpdateManyWithWhereNestedInput!]\n  deleteMany: [FinancialTransactionScalarWhereInput!]\n  upsert: [FinancialTransactionUpsertWithWhereUniqueWithoutScheduledTransactionInput!]\n}\n\ninput FinancialTransactionUpdateManyWithWhereNestedInput {\n  where: FinancialTransactionScalarWhereInput!\n  data: FinancialTransactionUpdateManyDataInput!\n}\n\ninput FinancialTransactionUpdateWithoutPersonDataInput {\n  processedDate: DateTime\n  status: TRANSACTION_STATUS\n  transactionDate: DateTime\n  amount: Float\n  payment: FinancialPaymentDetailUpdateOneInput\n  scheduledTransaction: FinancialScheduledTransactionUpdateOneWithoutTransactionsInput\n  account: FinancialAccountUpdateOneInput\n  organization: GroupUpdateOneRequiredInput\n}\n\ninput FinancialTransactionUpdateWithoutScheduledTransactionDataInput {\n  processedDate: DateTime\n  status: TRANSACTION_STATUS\n  transactionDate: DateTime\n  amount: Float\n  payment: FinancialPaymentDetailUpdateOneInput\n  person: PersonUpdateOneWithoutTransactionsInput\n  account: FinancialAccountUpdateOneInput\n  organization: GroupUpdateOneRequiredInput\n}\n\ninput FinancialTransactionUpdateWithWhereUniqueWithoutPersonInput {\n  where: FinancialTransactionWhereUniqueInput!\n  data: FinancialTransactionUpdateWithoutPersonDataInput!\n}\n\ninput FinancialTransactionUpdateWithWhereUniqueWithoutScheduledTransactionInput {\n  where: FinancialTransactionWhereUniqueInput!\n  data: FinancialTransactionUpdateWithoutScheduledTransactionDataInput!\n}\n\ninput FinancialTransactionUpsertWithWhereUniqueWithoutPersonInput {\n  where: FinancialTransactionWhereUniqueInput!\n  update: FinancialTransactionUpdateWithoutPersonDataInput!\n  create: FinancialTransactionCreateWithoutPersonInput!\n}\n\ninput FinancialTransactionUpsertWithWhereUniqueWithoutScheduledTransactionInput {\n  where: FinancialTransactionWhereUniqueInput!\n  update: FinancialTransactionUpdateWithoutScheduledTransactionDataInput!\n  create: FinancialTransactionCreateWithoutScheduledTransactionInput!\n}\n\ninput FinancialTransactionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FinancialTransactionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FinancialTransactionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FinancialTransactionWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  processedDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  processedDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  processedDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  processedDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  processedDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  processedDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  processedDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  processedDate_gte: DateTime\n  status: TRANSACTION_STATUS\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  status_not: TRANSACTION_STATUS\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  status_in: [TRANSACTION_STATUS!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  status_not_in: [TRANSACTION_STATUS!]\n  transactionDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  transactionDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  transactionDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  transactionDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  transactionDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  transactionDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  transactionDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  transactionDate_gte: DateTime\n  amount: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  amount_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  amount_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  amount_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  amount_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  amount_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  amount_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  amount_gte: Float\n}\n\ninput FinancialTransactionWhereUniqueInput {\n  id: ID\n}\n\ntype Group implements Node {\n  id: ID!\n  key: String\n  description: String\n  type: GroupType!\n  invites(where: GroupInviteWhereInput, orderBy: GroupInviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupInvite!]\n  isActive: Boolean!\n  members(where: GroupMemberWhereInput, orderBy: GroupMemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupMember!]\n  name: String!\n  organization: Group\n}\n\nenum GROUP_INVITE_STATUS {\n  PENDING\n  JOINED\n}\n\nenum GROUP_ROLE_TYPE {\n  ADMIN\n  OWNER\n  MEMBER\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype GroupConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [GroupEdge]!\n  aggregate: AggregateGroup!\n}\n\ninput GroupCreateInput {\n  key: String\n  description: String\n  isActive: Boolean!\n  name: String!\n  type: GroupTypeCreateOneWithoutGroupsInput!\n  invites: GroupInviteCreateManyWithoutGroupInput\n  members: GroupMemberCreateManyWithoutGroupInput\n  organization: GroupCreateOneInput\n}\n\ninput GroupCreateManyWithoutTypeInput {\n  create: [GroupCreateWithoutTypeInput!]\n  connect: [GroupWhereUniqueInput!]\n}\n\ninput GroupCreateOneInput {\n  create: GroupCreateInput\n  connect: GroupWhereUniqueInput\n}\n\ninput GroupCreateOneWithoutInvitesInput {\n  create: GroupCreateWithoutInvitesInput\n  connect: GroupWhereUniqueInput\n}\n\ninput GroupCreateOneWithoutMembersInput {\n  create: GroupCreateWithoutMembersInput\n  connect: GroupWhereUniqueInput\n}\n\ninput GroupCreateWithoutInvitesInput {\n  key: String\n  description: String\n  isActive: Boolean!\n  name: String!\n  type: GroupTypeCreateOneWithoutGroupsInput!\n  members: GroupMemberCreateManyWithoutGroupInput\n  organization: GroupCreateOneInput\n}\n\ninput GroupCreateWithoutMembersInput {\n  key: String\n  description: String\n  isActive: Boolean!\n  name: String!\n  type: GroupTypeCreateOneWithoutGroupsInput!\n  invites: GroupInviteCreateManyWithoutGroupInput\n  organization: GroupCreateOneInput\n}\n\ninput GroupCreateWithoutTypeInput {\n  key: String\n  description: String\n  isActive: Boolean!\n  name: String!\n  invites: GroupInviteCreateManyWithoutGroupInput\n  members: GroupMemberCreateManyWithoutGroupInput\n  organization: GroupCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype GroupEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Group!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\ntype GroupInvite implements Node {\n  id: ID!\n  email: String!\n  group: Group!\n  groupRole: GroupRole\n  status: GROUP_INVITE_STATUS!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype GroupInviteConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [GroupInviteEdge]!\n  aggregate: AggregateGroupInvite!\n}\n\ninput GroupInviteCreateInput {\n  email: String!\n  status: GROUP_INVITE_STATUS!\n  group: GroupCreateOneWithoutInvitesInput!\n  groupRole: GroupRoleCreateOneInput\n}\n\ninput GroupInviteCreateManyWithoutGroupInput {\n  create: [GroupInviteCreateWithoutGroupInput!]\n  connect: [GroupInviteWhereUniqueInput!]\n}\n\ninput GroupInviteCreateWithoutGroupInput {\n  email: String!\n  status: GROUP_INVITE_STATUS!\n  groupRole: GroupRoleCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype GroupInviteEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: GroupInvite!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum GroupInviteOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  status_ASC\n  status_DESC\n}\n\ntype GroupInvitePreviousValues {\n  id: ID!\n  email: String!\n  status: GROUP_INVITE_STATUS!\n}\n\ninput GroupInviteScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupInviteScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupInviteScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupInviteScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  status: GROUP_INVITE_STATUS\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  status_not: GROUP_INVITE_STATUS\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  status_in: [GROUP_INVITE_STATUS!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  status_not_in: [GROUP_INVITE_STATUS!]\n}\n\ntype GroupInviteSubscriptionPayload {\n  mutation: MutationType!\n  node: GroupInvite\n  updatedFields: [String!]\n  previousValues: GroupInvitePreviousValues\n}\n\ninput GroupInviteSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupInviteSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupInviteSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupInviteSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: GroupInviteWhereInput\n}\n\ninput GroupInviteUpdateInput {\n  email: String\n  status: GROUP_INVITE_STATUS\n  group: GroupUpdateOneRequiredWithoutInvitesInput\n  groupRole: GroupRoleUpdateOneInput\n}\n\ninput GroupInviteUpdateManyDataInput {\n  email: String\n  status: GROUP_INVITE_STATUS\n}\n\ninput GroupInviteUpdateManyMutationInput {\n  email: String\n  status: GROUP_INVITE_STATUS\n}\n\ninput GroupInviteUpdateManyWithoutGroupInput {\n  create: [GroupInviteCreateWithoutGroupInput!]\n  connect: [GroupInviteWhereUniqueInput!]\n  disconnect: [GroupInviteWhereUniqueInput!]\n  delete: [GroupInviteWhereUniqueInput!]\n  update: [GroupInviteUpdateWithWhereUniqueWithoutGroupInput!]\n  updateMany: [GroupInviteUpdateManyWithWhereNestedInput!]\n  deleteMany: [GroupInviteScalarWhereInput!]\n  upsert: [GroupInviteUpsertWithWhereUniqueWithoutGroupInput!]\n}\n\ninput GroupInviteUpdateManyWithWhereNestedInput {\n  where: GroupInviteScalarWhereInput!\n  data: GroupInviteUpdateManyDataInput!\n}\n\ninput GroupInviteUpdateWithoutGroupDataInput {\n  email: String\n  status: GROUP_INVITE_STATUS\n  groupRole: GroupRoleUpdateOneInput\n}\n\ninput GroupInviteUpdateWithWhereUniqueWithoutGroupInput {\n  where: GroupInviteWhereUniqueInput!\n  data: GroupInviteUpdateWithoutGroupDataInput!\n}\n\ninput GroupInviteUpsertWithWhereUniqueWithoutGroupInput {\n  where: GroupInviteWhereUniqueInput!\n  update: GroupInviteUpdateWithoutGroupDataInput!\n  create: GroupInviteCreateWithoutGroupInput!\n}\n\ninput GroupInviteWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupInviteWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupInviteWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupInviteWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  status: GROUP_INVITE_STATUS\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  status_not: GROUP_INVITE_STATUS\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  status_in: [GROUP_INVITE_STATUS!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  status_not_in: [GROUP_INVITE_STATUS!]\n}\n\ninput GroupInviteWhereUniqueInput {\n  id: ID\n}\n\ntype GroupMember implements Node {\n  id: ID!\n  group: Group\n  role: GroupRole\n  person: Person\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype GroupMemberConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [GroupMemberEdge]!\n  aggregate: AggregateGroupMember!\n}\n\ninput GroupMemberCreateInput {\n  group: GroupCreateOneWithoutMembersInput\n  role: GroupRoleCreateOneInput\n  person: PersonCreateOneInput\n}\n\ninput GroupMemberCreateManyWithoutGroupInput {\n  create: [GroupMemberCreateWithoutGroupInput!]\n  connect: [GroupMemberWhereUniqueInput!]\n}\n\ninput GroupMemberCreateWithoutGroupInput {\n  role: GroupRoleCreateOneInput\n  person: PersonCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype GroupMemberEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: GroupMember!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum GroupMemberOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype GroupMemberPreviousValues {\n  id: ID!\n}\n\ninput GroupMemberScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupMemberScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupMemberScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupMemberScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ntype GroupMemberSubscriptionPayload {\n  mutation: MutationType!\n  node: GroupMember\n  updatedFields: [String!]\n  previousValues: GroupMemberPreviousValues\n}\n\ninput GroupMemberSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupMemberSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupMemberSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupMemberSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: GroupMemberWhereInput\n}\n\ninput GroupMemberUpdateInput {\n  group: GroupUpdateOneWithoutMembersInput\n  role: GroupRoleUpdateOneInput\n  person: PersonUpdateOneInput\n}\n\ninput GroupMemberUpdateManyWithoutGroupInput {\n  create: [GroupMemberCreateWithoutGroupInput!]\n  connect: [GroupMemberWhereUniqueInput!]\n  disconnect: [GroupMemberWhereUniqueInput!]\n  delete: [GroupMemberWhereUniqueInput!]\n  update: [GroupMemberUpdateWithWhereUniqueWithoutGroupInput!]\n  deleteMany: [GroupMemberScalarWhereInput!]\n  upsert: [GroupMemberUpsertWithWhereUniqueWithoutGroupInput!]\n}\n\ninput GroupMemberUpdateWithoutGroupDataInput {\n  role: GroupRoleUpdateOneInput\n  person: PersonUpdateOneInput\n}\n\ninput GroupMemberUpdateWithWhereUniqueWithoutGroupInput {\n  where: GroupMemberWhereUniqueInput!\n  data: GroupMemberUpdateWithoutGroupDataInput!\n}\n\ninput GroupMemberUpsertWithWhereUniqueWithoutGroupInput {\n  where: GroupMemberWhereUniqueInput!\n  update: GroupMemberUpdateWithoutGroupDataInput!\n  create: GroupMemberCreateWithoutGroupInput!\n}\n\ninput GroupMemberWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupMemberWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupMemberWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupMemberWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput GroupMemberWhereUniqueInput {\n  id: ID\n}\n\nenum GroupOrderByInput {\n  id_ASC\n  id_DESC\n  key_ASC\n  key_DESC\n  description_ASC\n  description_DESC\n  isActive_ASC\n  isActive_DESC\n  name_ASC\n  name_DESC\n}\n\ntype GroupPreviousValues {\n  id: ID!\n  key: String\n  description: String\n  isActive: Boolean!\n  name: String!\n}\n\ntype GroupRole implements Node {\n  id: ID!\n  canEdit: Boolean!\n  canView: Boolean!\n  description: String!\n  groupType: GroupType\n  isLeader: Boolean\n  name: String!\n  type: GROUP_ROLE_TYPE\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype GroupRoleConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [GroupRoleEdge]!\n  aggregate: AggregateGroupRole!\n}\n\ninput GroupRoleCreateInput {\n  canEdit: Boolean!\n  canView: Boolean!\n  description: String!\n  isLeader: Boolean\n  name: String!\n  type: GROUP_ROLE_TYPE\n  groupType: GroupTypeCreateOneWithoutRolesInput\n}\n\ninput GroupRoleCreateManyWithoutGroupTypeInput {\n  create: [GroupRoleCreateWithoutGroupTypeInput!]\n  connect: [GroupRoleWhereUniqueInput!]\n}\n\ninput GroupRoleCreateOneInput {\n  create: GroupRoleCreateInput\n  connect: GroupRoleWhereUniqueInput\n}\n\ninput GroupRoleCreateWithoutGroupTypeInput {\n  canEdit: Boolean!\n  canView: Boolean!\n  description: String!\n  isLeader: Boolean\n  name: String!\n  type: GROUP_ROLE_TYPE\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype GroupRoleEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: GroupRole!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum GroupRoleOrderByInput {\n  id_ASC\n  id_DESC\n  canEdit_ASC\n  canEdit_DESC\n  canView_ASC\n  canView_DESC\n  description_ASC\n  description_DESC\n  isLeader_ASC\n  isLeader_DESC\n  name_ASC\n  name_DESC\n  type_ASC\n  type_DESC\n}\n\ntype GroupRolePreviousValues {\n  id: ID!\n  canEdit: Boolean!\n  canView: Boolean!\n  description: String!\n  isLeader: Boolean\n  name: String!\n  type: GROUP_ROLE_TYPE\n}\n\ninput GroupRoleScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupRoleScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupRoleScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupRoleScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  canEdit: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  canEdit_not: Boolean\n  canView: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  canView_not: Boolean\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  isLeader: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isLeader_not: Boolean\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  type: GROUP_ROLE_TYPE\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  type_not: GROUP_ROLE_TYPE\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  type_in: [GROUP_ROLE_TYPE!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  type_not_in: [GROUP_ROLE_TYPE!]\n}\n\ntype GroupRoleSubscriptionPayload {\n  mutation: MutationType!\n  node: GroupRole\n  updatedFields: [String!]\n  previousValues: GroupRolePreviousValues\n}\n\ninput GroupRoleSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupRoleSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupRoleSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupRoleSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: GroupRoleWhereInput\n}\n\ninput GroupRoleUpdateDataInput {\n  canEdit: Boolean\n  canView: Boolean\n  description: String\n  isLeader: Boolean\n  name: String\n  type: GROUP_ROLE_TYPE\n  groupType: GroupTypeUpdateOneWithoutRolesInput\n}\n\ninput GroupRoleUpdateInput {\n  canEdit: Boolean\n  canView: Boolean\n  description: String\n  isLeader: Boolean\n  name: String\n  type: GROUP_ROLE_TYPE\n  groupType: GroupTypeUpdateOneWithoutRolesInput\n}\n\ninput GroupRoleUpdateManyDataInput {\n  canEdit: Boolean\n  canView: Boolean\n  description: String\n  isLeader: Boolean\n  name: String\n  type: GROUP_ROLE_TYPE\n}\n\ninput GroupRoleUpdateManyMutationInput {\n  canEdit: Boolean\n  canView: Boolean\n  description: String\n  isLeader: Boolean\n  name: String\n  type: GROUP_ROLE_TYPE\n}\n\ninput GroupRoleUpdateManyWithoutGroupTypeInput {\n  create: [GroupRoleCreateWithoutGroupTypeInput!]\n  connect: [GroupRoleWhereUniqueInput!]\n  disconnect: [GroupRoleWhereUniqueInput!]\n  delete: [GroupRoleWhereUniqueInput!]\n  update: [GroupRoleUpdateWithWhereUniqueWithoutGroupTypeInput!]\n  updateMany: [GroupRoleUpdateManyWithWhereNestedInput!]\n  deleteMany: [GroupRoleScalarWhereInput!]\n  upsert: [GroupRoleUpsertWithWhereUniqueWithoutGroupTypeInput!]\n}\n\ninput GroupRoleUpdateManyWithWhereNestedInput {\n  where: GroupRoleScalarWhereInput!\n  data: GroupRoleUpdateManyDataInput!\n}\n\ninput GroupRoleUpdateOneInput {\n  create: GroupRoleCreateInput\n  connect: GroupRoleWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: GroupRoleUpdateDataInput\n  upsert: GroupRoleUpsertNestedInput\n}\n\ninput GroupRoleUpdateWithoutGroupTypeDataInput {\n  canEdit: Boolean\n  canView: Boolean\n  description: String\n  isLeader: Boolean\n  name: String\n  type: GROUP_ROLE_TYPE\n}\n\ninput GroupRoleUpdateWithWhereUniqueWithoutGroupTypeInput {\n  where: GroupRoleWhereUniqueInput!\n  data: GroupRoleUpdateWithoutGroupTypeDataInput!\n}\n\ninput GroupRoleUpsertNestedInput {\n  update: GroupRoleUpdateDataInput!\n  create: GroupRoleCreateInput!\n}\n\ninput GroupRoleUpsertWithWhereUniqueWithoutGroupTypeInput {\n  where: GroupRoleWhereUniqueInput!\n  update: GroupRoleUpdateWithoutGroupTypeDataInput!\n  create: GroupRoleCreateWithoutGroupTypeInput!\n}\n\ninput GroupRoleWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupRoleWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupRoleWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupRoleWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  canEdit: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  canEdit_not: Boolean\n  canView: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  canView_not: Boolean\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  isLeader: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isLeader_not: Boolean\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  type: GROUP_ROLE_TYPE\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  type_not: GROUP_ROLE_TYPE\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  type_in: [GROUP_ROLE_TYPE!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  type_not_in: [GROUP_ROLE_TYPE!]\n}\n\ninput GroupRoleWhereUniqueInput {\n  id: ID\n  name: String\n}\n\ninput GroupScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  key: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  key_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  key_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  key_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  key_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  key_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  key_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  key_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  key_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  key_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  key_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  key_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  key_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  key_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  isActive: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isActive_not: Boolean\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ntype GroupSubscriptionPayload {\n  mutation: MutationType!\n  node: Group\n  updatedFields: [String!]\n  previousValues: GroupPreviousValues\n}\n\ninput GroupSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: GroupWhereInput\n}\n\ntype GroupType implements Node {\n  id: ID!\n  description: String\n  groups(where: GroupWhereInput, orderBy: GroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Group!]\n  name: String!\n  roles(where: GroupRoleWhereInput, orderBy: GroupRoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupRole!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype GroupTypeConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [GroupTypeEdge]!\n  aggregate: AggregateGroupType!\n}\n\ninput GroupTypeCreateInput {\n  description: String\n  name: String!\n  groups: GroupCreateManyWithoutTypeInput\n  roles: GroupRoleCreateManyWithoutGroupTypeInput\n}\n\ninput GroupTypeCreateOneWithoutGroupsInput {\n  create: GroupTypeCreateWithoutGroupsInput\n  connect: GroupTypeWhereUniqueInput\n}\n\ninput GroupTypeCreateOneWithoutRolesInput {\n  create: GroupTypeCreateWithoutRolesInput\n  connect: GroupTypeWhereUniqueInput\n}\n\ninput GroupTypeCreateWithoutGroupsInput {\n  description: String\n  name: String!\n  roles: GroupRoleCreateManyWithoutGroupTypeInput\n}\n\ninput GroupTypeCreateWithoutRolesInput {\n  description: String\n  name: String!\n  groups: GroupCreateManyWithoutTypeInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype GroupTypeEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: GroupType!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum GroupTypeOrderByInput {\n  id_ASC\n  id_DESC\n  description_ASC\n  description_DESC\n  name_ASC\n  name_DESC\n}\n\ntype GroupTypePreviousValues {\n  id: ID!\n  description: String\n  name: String!\n}\n\ntype GroupTypeSubscriptionPayload {\n  mutation: MutationType!\n  node: GroupType\n  updatedFields: [String!]\n  previousValues: GroupTypePreviousValues\n}\n\ninput GroupTypeSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupTypeSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupTypeSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupTypeSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: GroupTypeWhereInput\n}\n\ninput GroupTypeUpdateInput {\n  description: String\n  name: String\n  groups: GroupUpdateManyWithoutTypeInput\n  roles: GroupRoleUpdateManyWithoutGroupTypeInput\n}\n\ninput GroupTypeUpdateManyMutationInput {\n  description: String\n  name: String\n}\n\ninput GroupTypeUpdateOneRequiredWithoutGroupsInput {\n  create: GroupTypeCreateWithoutGroupsInput\n  connect: GroupTypeWhereUniqueInput\n  update: GroupTypeUpdateWithoutGroupsDataInput\n  upsert: GroupTypeUpsertWithoutGroupsInput\n}\n\ninput GroupTypeUpdateOneWithoutRolesInput {\n  create: GroupTypeCreateWithoutRolesInput\n  connect: GroupTypeWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: GroupTypeUpdateWithoutRolesDataInput\n  upsert: GroupTypeUpsertWithoutRolesInput\n}\n\ninput GroupTypeUpdateWithoutGroupsDataInput {\n  description: String\n  name: String\n  roles: GroupRoleUpdateManyWithoutGroupTypeInput\n}\n\ninput GroupTypeUpdateWithoutRolesDataInput {\n  description: String\n  name: String\n  groups: GroupUpdateManyWithoutTypeInput\n}\n\ninput GroupTypeUpsertWithoutGroupsInput {\n  update: GroupTypeUpdateWithoutGroupsDataInput!\n  create: GroupTypeCreateWithoutGroupsInput!\n}\n\ninput GroupTypeUpsertWithoutRolesInput {\n  update: GroupTypeUpdateWithoutRolesDataInput!\n  create: GroupTypeCreateWithoutRolesInput!\n}\n\ninput GroupTypeWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupTypeWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupTypeWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupTypeWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ninput GroupTypeWhereUniqueInput {\n  id: ID\n  name: String\n}\n\ninput GroupUpdateDataInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n  type: GroupTypeUpdateOneRequiredWithoutGroupsInput\n  invites: GroupInviteUpdateManyWithoutGroupInput\n  members: GroupMemberUpdateManyWithoutGroupInput\n  organization: GroupUpdateOneInput\n}\n\ninput GroupUpdateInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n  type: GroupTypeUpdateOneRequiredWithoutGroupsInput\n  invites: GroupInviteUpdateManyWithoutGroupInput\n  members: GroupMemberUpdateManyWithoutGroupInput\n  organization: GroupUpdateOneInput\n}\n\ninput GroupUpdateManyDataInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n}\n\ninput GroupUpdateManyMutationInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n}\n\ninput GroupUpdateManyWithoutTypeInput {\n  create: [GroupCreateWithoutTypeInput!]\n  connect: [GroupWhereUniqueInput!]\n  disconnect: [GroupWhereUniqueInput!]\n  delete: [GroupWhereUniqueInput!]\n  update: [GroupUpdateWithWhereUniqueWithoutTypeInput!]\n  updateMany: [GroupUpdateManyWithWhereNestedInput!]\n  deleteMany: [GroupScalarWhereInput!]\n  upsert: [GroupUpsertWithWhereUniqueWithoutTypeInput!]\n}\n\ninput GroupUpdateManyWithWhereNestedInput {\n  where: GroupScalarWhereInput!\n  data: GroupUpdateManyDataInput!\n}\n\ninput GroupUpdateOneInput {\n  create: GroupCreateInput\n  connect: GroupWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: GroupUpdateDataInput\n  upsert: GroupUpsertNestedInput\n}\n\ninput GroupUpdateOneRequiredInput {\n  create: GroupCreateInput\n  connect: GroupWhereUniqueInput\n  update: GroupUpdateDataInput\n  upsert: GroupUpsertNestedInput\n}\n\ninput GroupUpdateOneRequiredWithoutInvitesInput {\n  create: GroupCreateWithoutInvitesInput\n  connect: GroupWhereUniqueInput\n  update: GroupUpdateWithoutInvitesDataInput\n  upsert: GroupUpsertWithoutInvitesInput\n}\n\ninput GroupUpdateOneWithoutMembersInput {\n  create: GroupCreateWithoutMembersInput\n  connect: GroupWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: GroupUpdateWithoutMembersDataInput\n  upsert: GroupUpsertWithoutMembersInput\n}\n\ninput GroupUpdateWithoutInvitesDataInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n  type: GroupTypeUpdateOneRequiredWithoutGroupsInput\n  members: GroupMemberUpdateManyWithoutGroupInput\n  organization: GroupUpdateOneInput\n}\n\ninput GroupUpdateWithoutMembersDataInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n  type: GroupTypeUpdateOneRequiredWithoutGroupsInput\n  invites: GroupInviteUpdateManyWithoutGroupInput\n  organization: GroupUpdateOneInput\n}\n\ninput GroupUpdateWithoutTypeDataInput {\n  key: String\n  description: String\n  isActive: Boolean\n  name: String\n  invites: GroupInviteUpdateManyWithoutGroupInput\n  members: GroupMemberUpdateManyWithoutGroupInput\n  organization: GroupUpdateOneInput\n}\n\ninput GroupUpdateWithWhereUniqueWithoutTypeInput {\n  where: GroupWhereUniqueInput!\n  data: GroupUpdateWithoutTypeDataInput!\n}\n\ninput GroupUpsertNestedInput {\n  update: GroupUpdateDataInput!\n  create: GroupCreateInput!\n}\n\ninput GroupUpsertWithoutInvitesInput {\n  update: GroupUpdateWithoutInvitesDataInput!\n  create: GroupCreateWithoutInvitesInput!\n}\n\ninput GroupUpsertWithoutMembersInput {\n  update: GroupUpdateWithoutMembersDataInput!\n  create: GroupCreateWithoutMembersInput!\n}\n\ninput GroupUpsertWithWhereUniqueWithoutTypeInput {\n  where: GroupWhereUniqueInput!\n  update: GroupUpdateWithoutTypeDataInput!\n  create: GroupCreateWithoutTypeInput!\n}\n\ninput GroupWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GroupWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GroupWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GroupWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  key: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  key_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  key_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  key_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  key_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  key_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  key_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  key_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  key_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  key_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  key_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  key_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  key_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  key_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  isActive: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isActive_not: Boolean\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ninput GroupWhereUniqueInput {\n  id: ID\n  key: String\n}\n\ntype Location implements Node {\n  id: ID!\n  city: String\n  locationType: LOCATION_TYPE\n  postalCode: String\n  state: String\n  street1: String\n  street2: String\n}\n\nenum LOCATION_TYPE {\n  HOME\n  WORK\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LocationConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LocationEdge]!\n  aggregate: AggregateLocation!\n}\n\ninput LocationCreateInput {\n  city: String\n  locationType: LOCATION_TYPE\n  postalCode: String\n  state: String\n  street1: String\n  street2: String\n}\n\ninput LocationCreateOneInput {\n  create: LocationCreateInput\n  connect: LocationWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LocationEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Location!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LocationOrderByInput {\n  id_ASC\n  id_DESC\n  city_ASC\n  city_DESC\n  locationType_ASC\n  locationType_DESC\n  postalCode_ASC\n  postalCode_DESC\n  state_ASC\n  state_DESC\n  street1_ASC\n  street1_DESC\n  street2_ASC\n  street2_DESC\n}\n\ntype LocationPreviousValues {\n  id: ID!\n  city: String\n  locationType: LOCATION_TYPE\n  postalCode: String\n  state: String\n  street1: String\n  street2: String\n}\n\ntype LocationSubscriptionPayload {\n  mutation: MutationType!\n  node: Location\n  updatedFields: [String!]\n  previousValues: LocationPreviousValues\n}\n\ninput LocationSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LocationSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LocationSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LocationSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LocationWhereInput\n}\n\ninput LocationUpdateDataInput {\n  city: String\n  locationType: LOCATION_TYPE\n  postalCode: String\n  state: String\n  street1: String\n  street2: String\n}\n\ninput LocationUpdateInput {\n  city: String\n  locationType: LOCATION_TYPE\n  postalCode: String\n  state: String\n  street1: String\n  street2: String\n}\n\ninput LocationUpdateManyMutationInput {\n  city: String\n  locationType: LOCATION_TYPE\n  postalCode: String\n  state: String\n  street1: String\n  street2: String\n}\n\ninput LocationUpdateOneInput {\n  create: LocationCreateInput\n  connect: LocationWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: LocationUpdateDataInput\n  upsert: LocationUpsertNestedInput\n}\n\ninput LocationUpsertNestedInput {\n  update: LocationUpdateDataInput!\n  create: LocationCreateInput!\n}\n\ninput LocationWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LocationWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LocationWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LocationWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  city: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  city_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  city_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  city_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  city_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  city_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  city_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  city_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  city_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  city_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  city_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  city_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  city_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  city_not_ends_with: String\n  locationType: LOCATION_TYPE\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  locationType_not: LOCATION_TYPE\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  locationType_in: [LOCATION_TYPE!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  locationType_not_in: [LOCATION_TYPE!]\n  postalCode: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  postalCode_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  postalCode_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  postalCode_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  postalCode_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  postalCode_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  postalCode_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  postalCode_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  postalCode_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  postalCode_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  postalCode_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  postalCode_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  postalCode_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  postalCode_not_ends_with: String\n  state: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  state_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  state_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  state_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  state_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  state_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  state_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  state_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  state_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  state_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  state_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  state_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  state_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  state_not_ends_with: String\n  street1: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  street1_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  street1_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  street1_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  street1_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  street1_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  street1_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  street1_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  street1_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  street1_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  street1_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  street1_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  street1_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  street1_not_ends_with: String\n  street2: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  street2_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  street2_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  street2_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  street2_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  street2_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  street2_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  street2_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  street2_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  street2_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  street2_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  street2_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  street2_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  street2_not_ends_with: String\n}\n\ninput LocationWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  createFinancialScheduledTransaction(data: FinancialScheduledTransactionCreateInput!): FinancialScheduledTransaction!\n  createFinancialTransaction(data: FinancialTransactionCreateInput!): FinancialTransaction!\n  createGroupInvite(data: GroupInviteCreateInput!): GroupInvite!\n  createGroupMember(data: GroupMemberCreateInput!): GroupMember!\n  createGroupType(data: GroupTypeCreateInput!): GroupType!\n  createCampus(data: CampusCreateInput!): Campus!\n  createPerson(data: PersonCreateInput!): Person!\n  createGroup(data: GroupCreateInput!): Group!\n  createFinancialAccount(data: FinancialAccountCreateInput!): FinancialAccount!\n  createPhoneNumber(data: PhoneNumberCreateInput!): PhoneNumber!\n  createGroupRole(data: GroupRoleCreateInput!): GroupRole!\n  createLocation(data: LocationCreateInput!): Location!\n  createFinancialPaymentDetail(data: FinancialPaymentDetailCreateInput!): FinancialPaymentDetail!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateFinancialScheduledTransaction(data: FinancialScheduledTransactionUpdateInput!, where: FinancialScheduledTransactionWhereUniqueInput!): FinancialScheduledTransaction\n  updateFinancialTransaction(data: FinancialTransactionUpdateInput!, where: FinancialTransactionWhereUniqueInput!): FinancialTransaction\n  updateGroupInvite(data: GroupInviteUpdateInput!, where: GroupInviteWhereUniqueInput!): GroupInvite\n  updateGroupMember(data: GroupMemberUpdateInput!, where: GroupMemberWhereUniqueInput!): GroupMember\n  updateGroupType(data: GroupTypeUpdateInput!, where: GroupTypeWhereUniqueInput!): GroupType\n  updateCampus(data: CampusUpdateInput!, where: CampusWhereUniqueInput!): Campus\n  updatePerson(data: PersonUpdateInput!, where: PersonWhereUniqueInput!): Person\n  updateGroup(data: GroupUpdateInput!, where: GroupWhereUniqueInput!): Group\n  updateFinancialAccount(data: FinancialAccountUpdateInput!, where: FinancialAccountWhereUniqueInput!): FinancialAccount\n  updatePhoneNumber(data: PhoneNumberUpdateInput!, where: PhoneNumberWhereUniqueInput!): PhoneNumber\n  updateGroupRole(data: GroupRoleUpdateInput!, where: GroupRoleWhereUniqueInput!): GroupRole\n  updateLocation(data: LocationUpdateInput!, where: LocationWhereUniqueInput!): Location\n  updateFinancialPaymentDetail(data: FinancialPaymentDetailUpdateInput!, where: FinancialPaymentDetailWhereUniqueInput!): FinancialPaymentDetail\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteFinancialScheduledTransaction(where: FinancialScheduledTransactionWhereUniqueInput!): FinancialScheduledTransaction\n  deleteFinancialTransaction(where: FinancialTransactionWhereUniqueInput!): FinancialTransaction\n  deleteGroupInvite(where: GroupInviteWhereUniqueInput!): GroupInvite\n  deleteGroupMember(where: GroupMemberWhereUniqueInput!): GroupMember\n  deleteGroupType(where: GroupTypeWhereUniqueInput!): GroupType\n  deleteCampus(where: CampusWhereUniqueInput!): Campus\n  deletePerson(where: PersonWhereUniqueInput!): Person\n  deleteGroup(where: GroupWhereUniqueInput!): Group\n  deleteFinancialAccount(where: FinancialAccountWhereUniqueInput!): FinancialAccount\n  deletePhoneNumber(where: PhoneNumberWhereUniqueInput!): PhoneNumber\n  deleteGroupRole(where: GroupRoleWhereUniqueInput!): GroupRole\n  deleteLocation(where: LocationWhereUniqueInput!): Location\n  deleteFinancialPaymentDetail(where: FinancialPaymentDetailWhereUniqueInput!): FinancialPaymentDetail\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertFinancialScheduledTransaction(where: FinancialScheduledTransactionWhereUniqueInput!, create: FinancialScheduledTransactionCreateInput!, update: FinancialScheduledTransactionUpdateInput!): FinancialScheduledTransaction!\n  upsertFinancialTransaction(where: FinancialTransactionWhereUniqueInput!, create: FinancialTransactionCreateInput!, update: FinancialTransactionUpdateInput!): FinancialTransaction!\n  upsertGroupInvite(where: GroupInviteWhereUniqueInput!, create: GroupInviteCreateInput!, update: GroupInviteUpdateInput!): GroupInvite!\n  upsertGroupMember(where: GroupMemberWhereUniqueInput!, create: GroupMemberCreateInput!, update: GroupMemberUpdateInput!): GroupMember!\n  upsertGroupType(where: GroupTypeWhereUniqueInput!, create: GroupTypeCreateInput!, update: GroupTypeUpdateInput!): GroupType!\n  upsertCampus(where: CampusWhereUniqueInput!, create: CampusCreateInput!, update: CampusUpdateInput!): Campus!\n  upsertPerson(where: PersonWhereUniqueInput!, create: PersonCreateInput!, update: PersonUpdateInput!): Person!\n  upsertGroup(where: GroupWhereUniqueInput!, create: GroupCreateInput!, update: GroupUpdateInput!): Group!\n  upsertFinancialAccount(where: FinancialAccountWhereUniqueInput!, create: FinancialAccountCreateInput!, update: FinancialAccountUpdateInput!): FinancialAccount!\n  upsertPhoneNumber(where: PhoneNumberWhereUniqueInput!, create: PhoneNumberCreateInput!, update: PhoneNumberUpdateInput!): PhoneNumber!\n  upsertGroupRole(where: GroupRoleWhereUniqueInput!, create: GroupRoleCreateInput!, update: GroupRoleUpdateInput!): GroupRole!\n  upsertLocation(where: LocationWhereUniqueInput!, create: LocationCreateInput!, update: LocationUpdateInput!): Location!\n  upsertFinancialPaymentDetail(where: FinancialPaymentDetailWhereUniqueInput!, create: FinancialPaymentDetailCreateInput!, update: FinancialPaymentDetailUpdateInput!): FinancialPaymentDetail!\n  updateManyFinancialScheduledTransactions(data: FinancialScheduledTransactionUpdateManyMutationInput!, where: FinancialScheduledTransactionWhereInput): BatchPayload!\n  updateManyFinancialTransactions(data: FinancialTransactionUpdateManyMutationInput!, where: FinancialTransactionWhereInput): BatchPayload!\n  updateManyGroupInvites(data: GroupInviteUpdateManyMutationInput!, where: GroupInviteWhereInput): BatchPayload!\n  updateManyGroupTypes(data: GroupTypeUpdateManyMutationInput!, where: GroupTypeWhereInput): BatchPayload!\n  updateManyCampuses(data: CampusUpdateManyMutationInput!, where: CampusWhereInput): BatchPayload!\n  updateManyPersons(data: PersonUpdateManyMutationInput!, where: PersonWhereInput): BatchPayload!\n  updateManyGroups(data: GroupUpdateManyMutationInput!, where: GroupWhereInput): BatchPayload!\n  updateManyFinancialAccounts(data: FinancialAccountUpdateManyMutationInput!, where: FinancialAccountWhereInput): BatchPayload!\n  updateManyPhoneNumbers(data: PhoneNumberUpdateManyMutationInput!, where: PhoneNumberWhereInput): BatchPayload!\n  updateManyGroupRoles(data: GroupRoleUpdateManyMutationInput!, where: GroupRoleWhereInput): BatchPayload!\n  updateManyLocations(data: LocationUpdateManyMutationInput!, where: LocationWhereInput): BatchPayload!\n  updateManyFinancialPaymentDetails(data: FinancialPaymentDetailUpdateManyMutationInput!, where: FinancialPaymentDetailWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyFinancialScheduledTransactions(where: FinancialScheduledTransactionWhereInput): BatchPayload!\n  deleteManyFinancialTransactions(where: FinancialTransactionWhereInput): BatchPayload!\n  deleteManyGroupInvites(where: GroupInviteWhereInput): BatchPayload!\n  deleteManyGroupMembers(where: GroupMemberWhereInput): BatchPayload!\n  deleteManyGroupTypes(where: GroupTypeWhereInput): BatchPayload!\n  deleteManyCampuses(where: CampusWhereInput): BatchPayload!\n  deleteManyPersons(where: PersonWhereInput): BatchPayload!\n  deleteManyGroups(where: GroupWhereInput): BatchPayload!\n  deleteManyFinancialAccounts(where: FinancialAccountWhereInput): BatchPayload!\n  deleteManyPhoneNumbers(where: PhoneNumberWhereInput): BatchPayload!\n  deleteManyGroupRoles(where: GroupRoleWhereInput): BatchPayload!\n  deleteManyLocations(where: LocationWhereInput): BatchPayload!\n  deleteManyFinancialPaymentDetails(where: FinancialPaymentDetailWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Person implements Node {\n  id: ID!\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers(where: PhoneNumberWhereInput, orderBy: PhoneNumberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PhoneNumber!]\n  scheduledTransactions(where: FinancialScheduledTransactionWhereInput, orderBy: FinancialScheduledTransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialScheduledTransaction!]\n  transactions(where: FinancialTransactionWhereInput, orderBy: FinancialTransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialTransaction!]\n  user: User\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PersonConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PersonEdge]!\n  aggregate: AggregatePerson!\n}\n\ninput PersonCreateInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberCreateManyInput\n  scheduledTransactions: FinancialScheduledTransactionCreateManyWithoutPersonInput\n  transactions: FinancialTransactionCreateManyWithoutPersonInput\n  user: UserCreateOneWithoutPersonInput\n}\n\ninput PersonCreateOneInput {\n  create: PersonCreateInput\n  connect: PersonWhereUniqueInput\n}\n\ninput PersonCreateOneWithoutScheduledTransactionsInput {\n  create: PersonCreateWithoutScheduledTransactionsInput\n  connect: PersonWhereUniqueInput\n}\n\ninput PersonCreateOneWithoutTransactionsInput {\n  create: PersonCreateWithoutTransactionsInput\n  connect: PersonWhereUniqueInput\n}\n\ninput PersonCreateOneWithoutUserInput {\n  create: PersonCreateWithoutUserInput\n  connect: PersonWhereUniqueInput\n}\n\ninput PersonCreateWithoutScheduledTransactionsInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberCreateManyInput\n  transactions: FinancialTransactionCreateManyWithoutPersonInput\n  user: UserCreateOneWithoutPersonInput\n}\n\ninput PersonCreateWithoutTransactionsInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberCreateManyInput\n  scheduledTransactions: FinancialScheduledTransactionCreateManyWithoutPersonInput\n  user: UserCreateOneWithoutPersonInput\n}\n\ninput PersonCreateWithoutUserInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberCreateManyInput\n  scheduledTransactions: FinancialScheduledTransactionCreateManyWithoutPersonInput\n  transactions: FinancialTransactionCreateManyWithoutPersonInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PersonEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Person!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PersonOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  firstName_ASC\n  firstName_DESC\n  lastName_ASC\n  lastName_DESC\n}\n\ntype PersonPreviousValues {\n  id: ID!\n  email: String\n  firstName: String\n  lastName: String\n}\n\ntype PersonSubscriptionPayload {\n  mutation: MutationType!\n  node: Person\n  updatedFields: [String!]\n  previousValues: PersonPreviousValues\n}\n\ninput PersonSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PersonSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PersonSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PersonSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PersonWhereInput\n}\n\ninput PersonUpdateDataInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberUpdateManyInput\n  scheduledTransactions: FinancialScheduledTransactionUpdateManyWithoutPersonInput\n  transactions: FinancialTransactionUpdateManyWithoutPersonInput\n  user: UserUpdateOneWithoutPersonInput\n}\n\ninput PersonUpdateInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberUpdateManyInput\n  scheduledTransactions: FinancialScheduledTransactionUpdateManyWithoutPersonInput\n  transactions: FinancialTransactionUpdateManyWithoutPersonInput\n  user: UserUpdateOneWithoutPersonInput\n}\n\ninput PersonUpdateManyMutationInput {\n  email: String\n  firstName: String\n  lastName: String\n}\n\ninput PersonUpdateOneInput {\n  create: PersonCreateInput\n  connect: PersonWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: PersonUpdateDataInput\n  upsert: PersonUpsertNestedInput\n}\n\ninput PersonUpdateOneRequiredWithoutUserInput {\n  create: PersonCreateWithoutUserInput\n  connect: PersonWhereUniqueInput\n  update: PersonUpdateWithoutUserDataInput\n  upsert: PersonUpsertWithoutUserInput\n}\n\ninput PersonUpdateOneWithoutScheduledTransactionsInput {\n  create: PersonCreateWithoutScheduledTransactionsInput\n  connect: PersonWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: PersonUpdateWithoutScheduledTransactionsDataInput\n  upsert: PersonUpsertWithoutScheduledTransactionsInput\n}\n\ninput PersonUpdateOneWithoutTransactionsInput {\n  create: PersonCreateWithoutTransactionsInput\n  connect: PersonWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: PersonUpdateWithoutTransactionsDataInput\n  upsert: PersonUpsertWithoutTransactionsInput\n}\n\ninput PersonUpdateWithoutScheduledTransactionsDataInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberUpdateManyInput\n  transactions: FinancialTransactionUpdateManyWithoutPersonInput\n  user: UserUpdateOneWithoutPersonInput\n}\n\ninput PersonUpdateWithoutTransactionsDataInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberUpdateManyInput\n  scheduledTransactions: FinancialScheduledTransactionUpdateManyWithoutPersonInput\n  user: UserUpdateOneWithoutPersonInput\n}\n\ninput PersonUpdateWithoutUserDataInput {\n  email: String\n  firstName: String\n  lastName: String\n  phoneNumbers: PhoneNumberUpdateManyInput\n  scheduledTransactions: FinancialScheduledTransactionUpdateManyWithoutPersonInput\n  transactions: FinancialTransactionUpdateManyWithoutPersonInput\n}\n\ninput PersonUpsertNestedInput {\n  update: PersonUpdateDataInput!\n  create: PersonCreateInput!\n}\n\ninput PersonUpsertWithoutScheduledTransactionsInput {\n  update: PersonUpdateWithoutScheduledTransactionsDataInput!\n  create: PersonCreateWithoutScheduledTransactionsInput!\n}\n\ninput PersonUpsertWithoutTransactionsInput {\n  update: PersonUpdateWithoutTransactionsDataInput!\n  create: PersonCreateWithoutTransactionsInput!\n}\n\ninput PersonUpsertWithoutUserInput {\n  update: PersonUpdateWithoutUserDataInput!\n  create: PersonCreateWithoutUserInput!\n}\n\ninput PersonWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PersonWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PersonWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PersonWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  firstName: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  firstName_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  firstName_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  firstName_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  firstName_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  firstName_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  firstName_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  firstName_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  firstName_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  firstName_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  firstName_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  firstName_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  firstName_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  firstName_not_ends_with: String\n  lastName: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  lastName_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  lastName_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  lastName_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  lastName_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  lastName_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  lastName_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  lastName_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  lastName_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  lastName_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  lastName_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  lastName_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  lastName_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  lastName_not_ends_with: String\n}\n\ninput PersonWhereUniqueInput {\n  id: ID\n}\n\ntype PhoneNumber implements Node {\n  id: ID!\n  number: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PhoneNumberConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PhoneNumberEdge]!\n  aggregate: AggregatePhoneNumber!\n}\n\ninput PhoneNumberCreateInput {\n  number: String!\n}\n\ninput PhoneNumberCreateManyInput {\n  create: [PhoneNumberCreateInput!]\n  connect: [PhoneNumberWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PhoneNumberEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: PhoneNumber!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PhoneNumberOrderByInput {\n  id_ASC\n  id_DESC\n  number_ASC\n  number_DESC\n}\n\ntype PhoneNumberPreviousValues {\n  id: ID!\n  number: String!\n}\n\ninput PhoneNumberScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PhoneNumberScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PhoneNumberScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PhoneNumberScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  number: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  number_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  number_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  number_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  number_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  number_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  number_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  number_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  number_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  number_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  number_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  number_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  number_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  number_not_ends_with: String\n}\n\ntype PhoneNumberSubscriptionPayload {\n  mutation: MutationType!\n  node: PhoneNumber\n  updatedFields: [String!]\n  previousValues: PhoneNumberPreviousValues\n}\n\ninput PhoneNumberSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PhoneNumberSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PhoneNumberSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PhoneNumberSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PhoneNumberWhereInput\n}\n\ninput PhoneNumberUpdateDataInput {\n  number: String\n}\n\ninput PhoneNumberUpdateInput {\n  number: String\n}\n\ninput PhoneNumberUpdateManyDataInput {\n  number: String\n}\n\ninput PhoneNumberUpdateManyInput {\n  create: [PhoneNumberCreateInput!]\n  connect: [PhoneNumberWhereUniqueInput!]\n  disconnect: [PhoneNumberWhereUniqueInput!]\n  delete: [PhoneNumberWhereUniqueInput!]\n  update: [PhoneNumberUpdateWithWhereUniqueNestedInput!]\n  updateMany: [PhoneNumberUpdateManyWithWhereNestedInput!]\n  deleteMany: [PhoneNumberScalarWhereInput!]\n  upsert: [PhoneNumberUpsertWithWhereUniqueNestedInput!]\n}\n\ninput PhoneNumberUpdateManyMutationInput {\n  number: String\n}\n\ninput PhoneNumberUpdateManyWithWhereNestedInput {\n  where: PhoneNumberScalarWhereInput!\n  data: PhoneNumberUpdateManyDataInput!\n}\n\ninput PhoneNumberUpdateWithWhereUniqueNestedInput {\n  where: PhoneNumberWhereUniqueInput!\n  data: PhoneNumberUpdateDataInput!\n}\n\ninput PhoneNumberUpsertWithWhereUniqueNestedInput {\n  where: PhoneNumberWhereUniqueInput!\n  update: PhoneNumberUpdateDataInput!\n  create: PhoneNumberCreateInput!\n}\n\ninput PhoneNumberWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PhoneNumberWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PhoneNumberWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PhoneNumberWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  number: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  number_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  number_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  number_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  number_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  number_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  number_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  number_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  number_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  number_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  number_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  number_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  number_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  number_not_ends_with: String\n}\n\ninput PhoneNumberWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  financialScheduledTransactions(where: FinancialScheduledTransactionWhereInput, orderBy: FinancialScheduledTransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialScheduledTransaction]!\n  financialTransactions(where: FinancialTransactionWhereInput, orderBy: FinancialTransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialTransaction]!\n  groupInvites(where: GroupInviteWhereInput, orderBy: GroupInviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupInvite]!\n  groupMembers(where: GroupMemberWhereInput, orderBy: GroupMemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupMember]!\n  groupTypes(where: GroupTypeWhereInput, orderBy: GroupTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupType]!\n  campuses(where: CampusWhereInput, orderBy: CampusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Campus]!\n  persons(where: PersonWhereInput, orderBy: PersonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Person]!\n  groups(where: GroupWhereInput, orderBy: GroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Group]!\n  financialAccounts(where: FinancialAccountWhereInput, orderBy: FinancialAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialAccount]!\n  phoneNumbers(where: PhoneNumberWhereInput, orderBy: PhoneNumberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PhoneNumber]!\n  groupRoles(where: GroupRoleWhereInput, orderBy: GroupRoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GroupRole]!\n  locations(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Location]!\n  financialPaymentDetails(where: FinancialPaymentDetailWhereInput, orderBy: FinancialPaymentDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialPaymentDetail]!\n  user(where: UserWhereUniqueInput!): User\n  financialScheduledTransaction(where: FinancialScheduledTransactionWhereUniqueInput!): FinancialScheduledTransaction\n  financialTransaction(where: FinancialTransactionWhereUniqueInput!): FinancialTransaction\n  groupInvite(where: GroupInviteWhereUniqueInput!): GroupInvite\n  groupMember(where: GroupMemberWhereUniqueInput!): GroupMember\n  groupType(where: GroupTypeWhereUniqueInput!): GroupType\n  campus(where: CampusWhereUniqueInput!): Campus\n  person(where: PersonWhereUniqueInput!): Person\n  group(where: GroupWhereUniqueInput!): Group\n  financialAccount(where: FinancialAccountWhereUniqueInput!): FinancialAccount\n  phoneNumber(where: PhoneNumberWhereUniqueInput!): PhoneNumber\n  groupRole(where: GroupRoleWhereUniqueInput!): GroupRole\n  location(where: LocationWhereUniqueInput!): Location\n  financialPaymentDetail(where: FinancialPaymentDetailWhereUniqueInput!): FinancialPaymentDetail\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  financialScheduledTransactionsConnection(where: FinancialScheduledTransactionWhereInput, orderBy: FinancialScheduledTransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FinancialScheduledTransactionConnection!\n  financialTransactionsConnection(where: FinancialTransactionWhereInput, orderBy: FinancialTransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FinancialTransactionConnection!\n  groupInvitesConnection(where: GroupInviteWhereInput, orderBy: GroupInviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupInviteConnection!\n  groupMembersConnection(where: GroupMemberWhereInput, orderBy: GroupMemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupMemberConnection!\n  groupTypesConnection(where: GroupTypeWhereInput, orderBy: GroupTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupTypeConnection!\n  campusesConnection(where: CampusWhereInput, orderBy: CampusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CampusConnection!\n  personsConnection(where: PersonWhereInput, orderBy: PersonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PersonConnection!\n  groupsConnection(where: GroupWhereInput, orderBy: GroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupConnection!\n  financialAccountsConnection(where: FinancialAccountWhereInput, orderBy: FinancialAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FinancialAccountConnection!\n  phoneNumbersConnection(where: PhoneNumberWhereInput, orderBy: PhoneNumberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PhoneNumberConnection!\n  groupRolesConnection(where: GroupRoleWhereInput, orderBy: GroupRoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupRoleConnection!\n  locationsConnection(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LocationConnection!\n  financialPaymentDetailsConnection(where: FinancialPaymentDetailWhereInput, orderBy: FinancialPaymentDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FinancialPaymentDetailConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  financialScheduledTransaction(where: FinancialScheduledTransactionSubscriptionWhereInput): FinancialScheduledTransactionSubscriptionPayload\n  financialTransaction(where: FinancialTransactionSubscriptionWhereInput): FinancialTransactionSubscriptionPayload\n  groupInvite(where: GroupInviteSubscriptionWhereInput): GroupInviteSubscriptionPayload\n  groupMember(where: GroupMemberSubscriptionWhereInput): GroupMemberSubscriptionPayload\n  groupType(where: GroupTypeSubscriptionWhereInput): GroupTypeSubscriptionPayload\n  campus(where: CampusSubscriptionWhereInput): CampusSubscriptionPayload\n  person(where: PersonSubscriptionWhereInput): PersonSubscriptionPayload\n  group(where: GroupSubscriptionWhereInput): GroupSubscriptionPayload\n  financialAccount(where: FinancialAccountSubscriptionWhereInput): FinancialAccountSubscriptionPayload\n  phoneNumber(where: PhoneNumberSubscriptionWhereInput): PhoneNumberSubscriptionPayload\n  groupRole(where: GroupRoleSubscriptionWhereInput): GroupRoleSubscriptionPayload\n  location(where: LocationSubscriptionWhereInput): LocationSubscriptionPayload\n  financialPaymentDetail(where: FinancialPaymentDetailSubscriptionWhereInput): FinancialPaymentDetailSubscriptionPayload\n}\n\nenum TRANSACTION_FREQUENCY {\n  DAILY\n  MONTHLY\n  BIWEEKLY\n  CUSTOM\n}\n\nenum TRANSACTION_STATUS {\n  PENDING\n  SUCCESS\n  FAILED\n}\n\ntype User implements Node {\n  id: ID!\n  person: Person!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  person: PersonCreateOneWithoutUserInput!\n}\n\ninput UserCreateOneWithoutPersonInput {\n  connect: UserWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  person: PersonUpdateOneRequiredWithoutUserInput\n}\n\ninput UserUpdateOneWithoutPersonInput {\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 89,
      "containsCycle": true,
      "numDefinitions": 348
    },
    {
      "name": "document.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/twoSidedConnection/document.graphql",
      "sha": "1a35d6cf1d5b58fa33eaae21003892f7615fd96a",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/twoSidedConnection/document.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/1a35d6cf1d5b58fa33eaae21003892f7615fd96a",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/twoSidedConnection/document.graphql",
      "content": "type AggregateAWithA {\n  count: Int!\n}\n\ntype AggregateAWithB {\n  count: Int!\n}\n\ntype AggregateAWithC {\n  count: Int!\n}\n\ntype AggregateAWithIdWithA {\n  count: Int!\n}\n\ntype AggregateAWithIdWithB {\n  count: Int!\n}\n\ntype AggregateAWithIdWithC {\n  count: Int!\n}\n\ntype AggregateAWithoutIdWithA {\n  count: Int!\n}\n\ntype AggregateAWithoutIdWithB {\n  count: Int!\n}\n\ntype AggregateAWithoutIdWithC {\n  count: Int!\n}\n\ntype AggregateBWithA {\n  count: Int!\n}\n\ntype AggregateBWithB {\n  count: Int!\n}\n\ntype AggregateBWithC {\n  count: Int!\n}\n\ntype AggregateBWithIdWithA {\n  count: Int!\n}\n\ntype AggregateBWithIdWithB {\n  count: Int!\n}\n\ntype AggregateBWithIdWithC {\n  count: Int!\n}\n\ntype AggregateBWithoutIdWithA {\n  count: Int!\n}\n\ntype AggregateBWithoutIdWithB {\n  count: Int!\n}\n\ntype AggregateBWithoutIdWithC {\n  count: Int!\n}\n\ntype AggregateCWithA {\n  count: Int!\n}\n\ntype AggregateCWithB {\n  count: Int!\n}\n\ntype AggregateCWithC {\n  count: Int!\n}\n\ntype AggregateCWithIdWithA {\n  count: Int!\n}\n\ntype AggregateCWithIdWithB {\n  count: Int!\n}\n\ntype AggregateCWithIdWithC {\n  count: Int!\n}\n\ntype AggregateCWithoutIdWithA {\n  count: Int!\n}\n\ntype AggregateCWithoutIdWithB {\n  count: Int!\n}\n\ntype AggregateCWithoutIdWithC {\n  count: Int!\n}\n\ntype AWithA {\n  removeThisId: ID!\n  x: AWithIdWithA!\n  y: AWithoutIdWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithAEdge]!\n  aggregate: AggregateAWithA!\n}\n\ninput AWithACreateInput {\n  x: AWithIdWithACreateOneWithoutXInput!\n  y: AWithoutIdWithACreateOneWithoutXInput!\n}\n\ninput AWithACreateOneWithoutXInput {\n  create: AWithACreateWithoutXInput\n  connect: AWithAWhereUniqueInput\n}\n\ninput AWithACreateOneWithoutYInput {\n  create: AWithACreateWithoutYInput\n  connect: AWithAWhereUniqueInput\n}\n\ninput AWithACreateWithoutXInput {\n  y: AWithoutIdWithACreateOneWithoutXInput!\n}\n\ninput AWithACreateWithoutYInput {\n  x: AWithIdWithACreateOneWithoutXInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithAOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n}\n\ntype AWithAPreviousValues {\n  removeThisId: ID!\n}\n\ntype AWithASubscriptionPayload {\n  mutation: MutationType!\n  node: AWithA\n  updatedFields: [String!]\n  previousValues: AWithAPreviousValues\n}\n\ninput AWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithAWhereInput\n}\n\ninput AWithAUpdateInput {\n  x: AWithIdWithAUpdateOneRequiredWithoutXInput\n  y: AWithoutIdWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithAUpdateOneRequiredWithoutXInput {\n  create: AWithACreateWithoutXInput\n  connect: AWithAWhereUniqueInput\n  update: AWithAUpdateWithoutXDataInput\n  upsert: AWithAUpsertWithoutXInput\n}\n\ninput AWithAUpdateOneRequiredWithoutYInput {\n  create: AWithACreateWithoutYInput\n  connect: AWithAWhereUniqueInput\n  update: AWithAUpdateWithoutYDataInput\n  upsert: AWithAUpsertWithoutYInput\n}\n\ninput AWithAUpdateWithoutXDataInput {\n  y: AWithoutIdWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithAUpdateWithoutYDataInput {\n  x: AWithIdWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithAUpsertWithoutXInput {\n  update: AWithAUpdateWithoutXDataInput!\n  create: AWithACreateWithoutXInput!\n}\n\ninput AWithAUpsertWithoutYInput {\n  update: AWithAUpdateWithoutYDataInput!\n  create: AWithACreateWithoutYInput!\n}\n\ninput AWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithAWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n}\n\ninput AWithAWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype AWithB {\n  removeThisId: ID!\n  x: BWithIdWithA!\n  y: BWithoutIdWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithBEdge]!\n  aggregate: AggregateAWithB!\n}\n\ninput AWithBCreateInput {\n  x: BWithIdWithACreateOneWithoutXInput!\n  y: BWithoutIdWithACreateOneWithoutXInput!\n}\n\ninput AWithBCreateOneWithoutXInput {\n  create: AWithBCreateWithoutXInput\n  connect: AWithBWhereUniqueInput\n}\n\ninput AWithBCreateOneWithoutYInput {\n  create: AWithBCreateWithoutYInput\n  connect: AWithBWhereUniqueInput\n}\n\ninput AWithBCreateWithoutXInput {\n  y: BWithoutIdWithACreateOneWithoutXInput!\n}\n\ninput AWithBCreateWithoutYInput {\n  x: BWithIdWithACreateOneWithoutXInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithBOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n}\n\ntype AWithBPreviousValues {\n  removeThisId: ID!\n}\n\ntype AWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: AWithB\n  updatedFields: [String!]\n  previousValues: AWithBPreviousValues\n}\n\ninput AWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithBWhereInput\n}\n\ninput AWithBUpdateInput {\n  x: BWithIdWithAUpdateOneRequiredWithoutXInput\n  y: BWithoutIdWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithBUpdateOneWithoutXInput {\n  create: AWithBCreateWithoutXInput\n  connect: AWithBWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: AWithBUpdateWithoutXDataInput\n  upsert: AWithBUpsertWithoutXInput\n}\n\ninput AWithBUpdateOneWithoutYInput {\n  create: AWithBCreateWithoutYInput\n  connect: AWithBWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: AWithBUpdateWithoutYDataInput\n  upsert: AWithBUpsertWithoutYInput\n}\n\ninput AWithBUpdateWithoutXDataInput {\n  y: BWithoutIdWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithBUpdateWithoutYDataInput {\n  x: BWithIdWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithBUpsertWithoutXInput {\n  update: AWithBUpdateWithoutXDataInput!\n  create: AWithBCreateWithoutXInput!\n}\n\ninput AWithBUpsertWithoutYInput {\n  update: AWithBUpdateWithoutYDataInput!\n  create: AWithBCreateWithoutYInput!\n}\n\ninput AWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithBWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n}\n\ninput AWithBWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype AWithC {\n  removeThisId: ID!\n  x: CWithIdWithA!\n  y: CWithoutIdWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithCEdge]!\n  aggregate: AggregateAWithC!\n}\n\ninput AWithCCreateInput {\n  x: CWithIdWithACreateOneWithoutXInput!\n  y: CWithoutIdWithACreateOneWithoutXInput!\n}\n\ninput AWithCCreateManyWithoutXInput {\n  create: [AWithCCreateWithoutXInput!]\n  connect: [AWithCWhereUniqueInput!]\n}\n\ninput AWithCCreateManyWithoutYInput {\n  create: [AWithCCreateWithoutYInput!]\n  connect: [AWithCWhereUniqueInput!]\n}\n\ninput AWithCCreateWithoutXInput {\n  y: CWithoutIdWithACreateOneWithoutXInput!\n}\n\ninput AWithCCreateWithoutYInput {\n  x: CWithIdWithACreateOneWithoutXInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithCOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n}\n\ntype AWithCPreviousValues {\n  removeThisId: ID!\n}\n\ninput AWithCScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithCScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithCScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithCScalarWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n}\n\ntype AWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: AWithC\n  updatedFields: [String!]\n  previousValues: AWithCPreviousValues\n}\n\ninput AWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithCWhereInput\n}\n\ninput AWithCUpdateInput {\n  x: CWithIdWithAUpdateOneRequiredWithoutXInput\n  y: CWithoutIdWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithCUpdateManyWithoutXInput {\n  create: [AWithCCreateWithoutXInput!]\n  connect: [AWithCWhereUniqueInput!]\n  disconnect: [AWithCWhereUniqueInput!]\n  delete: [AWithCWhereUniqueInput!]\n  update: [AWithCUpdateWithWhereUniqueWithoutXInput!]\n  deleteMany: [AWithCScalarWhereInput!]\n  upsert: [AWithCUpsertWithWhereUniqueWithoutXInput!]\n}\n\ninput AWithCUpdateManyWithoutYInput {\n  create: [AWithCCreateWithoutYInput!]\n  connect: [AWithCWhereUniqueInput!]\n  disconnect: [AWithCWhereUniqueInput!]\n  delete: [AWithCWhereUniqueInput!]\n  update: [AWithCUpdateWithWhereUniqueWithoutYInput!]\n  deleteMany: [AWithCScalarWhereInput!]\n  upsert: [AWithCUpsertWithWhereUniqueWithoutYInput!]\n}\n\ninput AWithCUpdateWithoutXDataInput {\n  y: CWithoutIdWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithCUpdateWithoutYDataInput {\n  x: CWithIdWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithCUpdateWithWhereUniqueWithoutXInput {\n  where: AWithCWhereUniqueInput!\n  data: AWithCUpdateWithoutXDataInput!\n}\n\ninput AWithCUpdateWithWhereUniqueWithoutYInput {\n  where: AWithCWhereUniqueInput!\n  data: AWithCUpdateWithoutYDataInput!\n}\n\ninput AWithCUpsertWithWhereUniqueWithoutXInput {\n  where: AWithCWhereUniqueInput!\n  update: AWithCUpdateWithoutXDataInput!\n  create: AWithCCreateWithoutXInput!\n}\n\ninput AWithCUpsertWithWhereUniqueWithoutYInput {\n  where: AWithCWhereUniqueInput!\n  update: AWithCUpdateWithoutYDataInput!\n  create: AWithCCreateWithoutYInput!\n}\n\ninput AWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithCWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n}\n\ninput AWithCWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype AWithIdWithA implements Node {\n  id: ID!\n  field: String!\n  x: AWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithIdWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithIdWithAEdge]!\n  aggregate: AggregateAWithIdWithA!\n}\n\ninput AWithIdWithACreateInput {\n  field: String!\n  x: AWithACreateOneWithoutXInput!\n}\n\ninput AWithIdWithACreateOneWithoutXInput {\n  create: AWithIdWithACreateWithoutXInput\n  connect: AWithIdWithAWhereUniqueInput\n}\n\ninput AWithIdWithACreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithIdWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithIdWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithIdWithAOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype AWithIdWithAPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype AWithIdWithASubscriptionPayload {\n  mutation: MutationType!\n  node: AWithIdWithA\n  updatedFields: [String!]\n  previousValues: AWithIdWithAPreviousValues\n}\n\ninput AWithIdWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithIdWithAWhereInput\n}\n\ninput AWithIdWithAUpdateInput {\n  field: String\n  x: AWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithIdWithAUpdateManyMutationInput {\n  field: String\n}\n\ninput AWithIdWithAUpdateOneRequiredWithoutXInput {\n  create: AWithIdWithACreateWithoutXInput\n  connect: AWithIdWithAWhereUniqueInput\n  update: AWithIdWithAUpdateWithoutXDataInput\n  upsert: AWithIdWithAUpsertWithoutXInput\n}\n\ninput AWithIdWithAUpdateWithoutXDataInput {\n  field: String\n}\n\ninput AWithIdWithAUpsertWithoutXInput {\n  update: AWithIdWithAUpdateWithoutXDataInput!\n  create: AWithIdWithACreateWithoutXInput!\n}\n\ninput AWithIdWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWithAWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput AWithIdWithAWhereUniqueInput {\n  id: ID\n}\n\ntype AWithIdWithB implements Node {\n  id: ID!\n  field: String!\n  x: BWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithIdWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithIdWithBEdge]!\n  aggregate: AggregateAWithIdWithB!\n}\n\ninput AWithIdWithBCreateInput {\n  field: String!\n  x: BWithACreateOneWithoutXInput!\n}\n\ninput AWithIdWithBCreateOneWithoutXInput {\n  create: AWithIdWithBCreateWithoutXInput\n  connect: AWithIdWithBWhereUniqueInput\n}\n\ninput AWithIdWithBCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithIdWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithIdWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithIdWithBOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype AWithIdWithBPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype AWithIdWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: AWithIdWithB\n  updatedFields: [String!]\n  previousValues: AWithIdWithBPreviousValues\n}\n\ninput AWithIdWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithIdWithBWhereInput\n}\n\ninput AWithIdWithBUpdateInput {\n  field: String\n  x: BWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithIdWithBUpdateManyMutationInput {\n  field: String\n}\n\ninput AWithIdWithBUpdateOneWithoutXInput {\n  create: AWithIdWithBCreateWithoutXInput\n  connect: AWithIdWithBWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: AWithIdWithBUpdateWithoutXDataInput\n  upsert: AWithIdWithBUpsertWithoutXInput\n}\n\ninput AWithIdWithBUpdateWithoutXDataInput {\n  field: String\n}\n\ninput AWithIdWithBUpsertWithoutXInput {\n  update: AWithIdWithBUpdateWithoutXDataInput!\n  create: AWithIdWithBCreateWithoutXInput!\n}\n\ninput AWithIdWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWithBWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput AWithIdWithBWhereUniqueInput {\n  id: ID\n}\n\ntype AWithIdWithC implements Node {\n  id: ID!\n  field: String!\n  x: CWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithIdWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithIdWithCEdge]!\n  aggregate: AggregateAWithIdWithC!\n}\n\ninput AWithIdWithCCreateInput {\n  field: String!\n  x: CWithACreateOneWithoutXInput!\n}\n\ninput AWithIdWithCCreateManyWithoutXInput {\n  create: [AWithIdWithCCreateWithoutXInput!]\n  connect: [AWithIdWithCWhereUniqueInput!]\n}\n\ninput AWithIdWithCCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithIdWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithIdWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithIdWithCOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype AWithIdWithCPreviousValues {\n  id: ID!\n  field: String!\n}\n\ninput AWithIdWithCScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWithCScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWithCScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWithCScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ntype AWithIdWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: AWithIdWithC\n  updatedFields: [String!]\n  previousValues: AWithIdWithCPreviousValues\n}\n\ninput AWithIdWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithIdWithCWhereInput\n}\n\ninput AWithIdWithCUpdateInput {\n  field: String\n  x: CWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithIdWithCUpdateManyDataInput {\n  field: String\n}\n\ninput AWithIdWithCUpdateManyMutationInput {\n  field: String\n}\n\ninput AWithIdWithCUpdateManyWithoutXInput {\n  create: [AWithIdWithCCreateWithoutXInput!]\n  connect: [AWithIdWithCWhereUniqueInput!]\n  disconnect: [AWithIdWithCWhereUniqueInput!]\n  delete: [AWithIdWithCWhereUniqueInput!]\n  update: [AWithIdWithCUpdateWithWhereUniqueWithoutXInput!]\n  updateMany: [AWithIdWithCUpdateManyWithWhereNestedInput!]\n  deleteMany: [AWithIdWithCScalarWhereInput!]\n  upsert: [AWithIdWithCUpsertWithWhereUniqueWithoutXInput!]\n}\n\ninput AWithIdWithCUpdateManyWithWhereNestedInput {\n  where: AWithIdWithCScalarWhereInput!\n  data: AWithIdWithCUpdateManyDataInput!\n}\n\ninput AWithIdWithCUpdateWithoutXDataInput {\n  field: String\n}\n\ninput AWithIdWithCUpdateWithWhereUniqueWithoutXInput {\n  where: AWithIdWithCWhereUniqueInput!\n  data: AWithIdWithCUpdateWithoutXDataInput!\n}\n\ninput AWithIdWithCUpsertWithWhereUniqueWithoutXInput {\n  where: AWithIdWithCWhereUniqueInput!\n  update: AWithIdWithCUpdateWithoutXDataInput!\n  create: AWithIdWithCCreateWithoutXInput!\n}\n\ninput AWithIdWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWithCWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput AWithIdWithCWhereUniqueInput {\n  id: ID\n}\n\ntype AWithoutIdWithA {\n  removeThisId: ID!\n  field: String!\n  x: AWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithoutIdWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithoutIdWithAEdge]!\n  aggregate: AggregateAWithoutIdWithA!\n}\n\ninput AWithoutIdWithACreateInput {\n  field: String!\n  x: AWithACreateOneWithoutYInput!\n}\n\ninput AWithoutIdWithACreateOneWithoutXInput {\n  create: AWithoutIdWithACreateWithoutXInput\n  connect: AWithoutIdWithAWhereUniqueInput\n}\n\ninput AWithoutIdWithACreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithoutIdWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithoutIdWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithoutIdWithAOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n  field_ASC\n  field_DESC\n}\n\ntype AWithoutIdWithAPreviousValues {\n  removeThisId: ID!\n  field: String!\n}\n\ntype AWithoutIdWithASubscriptionPayload {\n  mutation: MutationType!\n  node: AWithoutIdWithA\n  updatedFields: [String!]\n  previousValues: AWithoutIdWithAPreviousValues\n}\n\ninput AWithoutIdWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithoutIdWithAWhereInput\n}\n\ninput AWithoutIdWithAUpdateInput {\n  field: String\n  x: AWithAUpdateOneRequiredWithoutYInput\n}\n\ninput AWithoutIdWithAUpdateManyMutationInput {\n  field: String\n}\n\ninput AWithoutIdWithAUpdateOneRequiredWithoutXInput {\n  create: AWithoutIdWithACreateWithoutXInput\n  connect: AWithoutIdWithAWhereUniqueInput\n  update: AWithoutIdWithAUpdateWithoutXDataInput\n  upsert: AWithoutIdWithAUpsertWithoutXInput\n}\n\ninput AWithoutIdWithAUpdateWithoutXDataInput {\n  field: String\n}\n\ninput AWithoutIdWithAUpsertWithoutXInput {\n  update: AWithoutIdWithAUpdateWithoutXDataInput!\n  create: AWithoutIdWithACreateWithoutXInput!\n}\n\ninput AWithoutIdWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithoutIdWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithoutIdWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithoutIdWithAWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput AWithoutIdWithAWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype AWithoutIdWithB {\n  removeThisId: ID!\n  field: String!\n  x: BWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithoutIdWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithoutIdWithBEdge]!\n  aggregate: AggregateAWithoutIdWithB!\n}\n\ninput AWithoutIdWithBCreateInput {\n  field: String!\n  x: BWithACreateOneWithoutYInput!\n}\n\ninput AWithoutIdWithBCreateOneWithoutXInput {\n  create: AWithoutIdWithBCreateWithoutXInput\n  connect: AWithoutIdWithBWhereUniqueInput\n}\n\ninput AWithoutIdWithBCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithoutIdWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithoutIdWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithoutIdWithBOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n  field_ASC\n  field_DESC\n}\n\ntype AWithoutIdWithBPreviousValues {\n  removeThisId: ID!\n  field: String!\n}\n\ntype AWithoutIdWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: AWithoutIdWithB\n  updatedFields: [String!]\n  previousValues: AWithoutIdWithBPreviousValues\n}\n\ninput AWithoutIdWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithoutIdWithBWhereInput\n}\n\ninput AWithoutIdWithBUpdateInput {\n  field: String\n  x: BWithAUpdateOneRequiredWithoutYInput\n}\n\ninput AWithoutIdWithBUpdateManyMutationInput {\n  field: String\n}\n\ninput AWithoutIdWithBUpdateOneWithoutXInput {\n  create: AWithoutIdWithBCreateWithoutXInput\n  connect: AWithoutIdWithBWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: AWithoutIdWithBUpdateWithoutXDataInput\n  upsert: AWithoutIdWithBUpsertWithoutXInput\n}\n\ninput AWithoutIdWithBUpdateWithoutXDataInput {\n  field: String\n}\n\ninput AWithoutIdWithBUpsertWithoutXInput {\n  update: AWithoutIdWithBUpdateWithoutXDataInput!\n  create: AWithoutIdWithBCreateWithoutXInput!\n}\n\ninput AWithoutIdWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithoutIdWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithoutIdWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithoutIdWithBWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput AWithoutIdWithBWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype AWithoutIdWithC {\n  removeThisId: ID!\n  field: String!\n  x: CWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithoutIdWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithoutIdWithCEdge]!\n  aggregate: AggregateAWithoutIdWithC!\n}\n\ninput AWithoutIdWithCCreateInput {\n  field: String!\n  x: CWithACreateOneWithoutYInput!\n}\n\ninput AWithoutIdWithCCreateManyWithoutXInput {\n  create: [AWithoutIdWithCCreateWithoutXInput!]\n  connect: [AWithoutIdWithCWhereUniqueInput!]\n}\n\ninput AWithoutIdWithCCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithoutIdWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithoutIdWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithoutIdWithCOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n  field_ASC\n  field_DESC\n}\n\ntype AWithoutIdWithCPreviousValues {\n  removeThisId: ID!\n  field: String!\n}\n\ninput AWithoutIdWithCScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithoutIdWithCScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithoutIdWithCScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithoutIdWithCScalarWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ntype AWithoutIdWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: AWithoutIdWithC\n  updatedFields: [String!]\n  previousValues: AWithoutIdWithCPreviousValues\n}\n\ninput AWithoutIdWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithoutIdWithCWhereInput\n}\n\ninput AWithoutIdWithCUpdateInput {\n  field: String\n  x: CWithAUpdateOneRequiredWithoutYInput\n}\n\ninput AWithoutIdWithCUpdateManyDataInput {\n  field: String\n}\n\ninput AWithoutIdWithCUpdateManyMutationInput {\n  field: String\n}\n\ninput AWithoutIdWithCUpdateManyWithoutXInput {\n  create: [AWithoutIdWithCCreateWithoutXInput!]\n  connect: [AWithoutIdWithCWhereUniqueInput!]\n  disconnect: [AWithoutIdWithCWhereUniqueInput!]\n  delete: [AWithoutIdWithCWhereUniqueInput!]\n  update: [AWithoutIdWithCUpdateWithWhereUniqueWithoutXInput!]\n  updateMany: [AWithoutIdWithCUpdateManyWithWhereNestedInput!]\n  deleteMany: [AWithoutIdWithCScalarWhereInput!]\n  upsert: [AWithoutIdWithCUpsertWithWhereUniqueWithoutXInput!]\n}\n\ninput AWithoutIdWithCUpdateManyWithWhereNestedInput {\n  where: AWithoutIdWithCScalarWhereInput!\n  data: AWithoutIdWithCUpdateManyDataInput!\n}\n\ninput AWithoutIdWithCUpdateWithoutXDataInput {\n  field: String\n}\n\ninput AWithoutIdWithCUpdateWithWhereUniqueWithoutXInput {\n  where: AWithoutIdWithCWhereUniqueInput!\n  data: AWithoutIdWithCUpdateWithoutXDataInput!\n}\n\ninput AWithoutIdWithCUpsertWithWhereUniqueWithoutXInput {\n  where: AWithoutIdWithCWhereUniqueInput!\n  update: AWithoutIdWithCUpdateWithoutXDataInput!\n  create: AWithoutIdWithCCreateWithoutXInput!\n}\n\ninput AWithoutIdWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithoutIdWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithoutIdWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithoutIdWithCWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput AWithoutIdWithCWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\ntype BWithA {\n  removeThisId: ID!\n  x: AWithIdWithB\n  y: AWithoutIdWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithAEdge]!\n  aggregate: AggregateBWithA!\n}\n\ninput BWithACreateInput {\n  x: AWithIdWithBCreateOneWithoutXInput\n  y: AWithoutIdWithBCreateOneWithoutXInput\n}\n\ninput BWithACreateOneWithoutXInput {\n  create: BWithACreateWithoutXInput\n  connect: BWithAWhereUniqueInput\n}\n\ninput BWithACreateOneWithoutYInput {\n  create: BWithACreateWithoutYInput\n  connect: BWithAWhereUniqueInput\n}\n\ninput BWithACreateWithoutXInput {\n  y: AWithoutIdWithBCreateOneWithoutXInput\n}\n\ninput BWithACreateWithoutYInput {\n  x: AWithIdWithBCreateOneWithoutXInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithAOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n}\n\ntype BWithAPreviousValues {\n  removeThisId: ID!\n}\n\ntype BWithASubscriptionPayload {\n  mutation: MutationType!\n  node: BWithA\n  updatedFields: [String!]\n  previousValues: BWithAPreviousValues\n}\n\ninput BWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithAWhereInput\n}\n\ninput BWithAUpdateInput {\n  x: AWithIdWithBUpdateOneWithoutXInput\n  y: AWithoutIdWithBUpdateOneWithoutXInput\n}\n\ninput BWithAUpdateOneRequiredWithoutXInput {\n  create: BWithACreateWithoutXInput\n  connect: BWithAWhereUniqueInput\n  update: BWithAUpdateWithoutXDataInput\n  upsert: BWithAUpsertWithoutXInput\n}\n\ninput BWithAUpdateOneRequiredWithoutYInput {\n  create: BWithACreateWithoutYInput\n  connect: BWithAWhereUniqueInput\n  update: BWithAUpdateWithoutYDataInput\n  upsert: BWithAUpsertWithoutYInput\n}\n\ninput BWithAUpdateWithoutXDataInput {\n  y: AWithoutIdWithBUpdateOneWithoutXInput\n}\n\ninput BWithAUpdateWithoutYDataInput {\n  x: AWithIdWithBUpdateOneWithoutXInput\n}\n\ninput BWithAUpsertWithoutXInput {\n  update: BWithAUpdateWithoutXDataInput!\n  create: BWithACreateWithoutXInput!\n}\n\ninput BWithAUpsertWithoutYInput {\n  update: BWithAUpdateWithoutYDataInput!\n  create: BWithACreateWithoutYInput!\n}\n\ninput BWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithAWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n}\n\ninput BWithAWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype BWithB {\n  removeThisId: ID!\n  x: BWithIdWithB\n  y: BWithoutIdWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithBEdge]!\n  aggregate: AggregateBWithB!\n}\n\ninput BWithBCreateInput {\n  x: BWithIdWithBCreateOneWithoutXInput\n  y: BWithoutIdWithBCreateOneWithoutXInput\n}\n\ninput BWithBCreateOneWithoutXInput {\n  create: BWithBCreateWithoutXInput\n  connect: BWithBWhereUniqueInput\n}\n\ninput BWithBCreateOneWithoutYInput {\n  create: BWithBCreateWithoutYInput\n  connect: BWithBWhereUniqueInput\n}\n\ninput BWithBCreateWithoutXInput {\n  y: BWithoutIdWithBCreateOneWithoutXInput\n}\n\ninput BWithBCreateWithoutYInput {\n  x: BWithIdWithBCreateOneWithoutXInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithBOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n}\n\ntype BWithBPreviousValues {\n  removeThisId: ID!\n}\n\ntype BWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: BWithB\n  updatedFields: [String!]\n  previousValues: BWithBPreviousValues\n}\n\ninput BWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithBWhereInput\n}\n\ninput BWithBUpdateInput {\n  x: BWithIdWithBUpdateOneWithoutXInput\n  y: BWithoutIdWithBUpdateOneWithoutXInput\n}\n\ninput BWithBUpdateOneWithoutXInput {\n  create: BWithBCreateWithoutXInput\n  connect: BWithBWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: BWithBUpdateWithoutXDataInput\n  upsert: BWithBUpsertWithoutXInput\n}\n\ninput BWithBUpdateOneWithoutYInput {\n  create: BWithBCreateWithoutYInput\n  connect: BWithBWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: BWithBUpdateWithoutYDataInput\n  upsert: BWithBUpsertWithoutYInput\n}\n\ninput BWithBUpdateWithoutXDataInput {\n  y: BWithoutIdWithBUpdateOneWithoutXInput\n}\n\ninput BWithBUpdateWithoutYDataInput {\n  x: BWithIdWithBUpdateOneWithoutXInput\n}\n\ninput BWithBUpsertWithoutXInput {\n  update: BWithBUpdateWithoutXDataInput!\n  create: BWithBCreateWithoutXInput!\n}\n\ninput BWithBUpsertWithoutYInput {\n  update: BWithBUpdateWithoutYDataInput!\n  create: BWithBCreateWithoutYInput!\n}\n\ninput BWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithBWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n}\n\ninput BWithBWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype BWithC {\n  removeThisId: ID!\n  x: CWithIdWithB\n  y: CWithoutIdWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithCEdge]!\n  aggregate: AggregateBWithC!\n}\n\ninput BWithCCreateInput {\n  x: CWithIdWithBCreateOneWithoutXInput\n  y: CWithoutIdWithBCreateOneWithoutXInput\n}\n\ninput BWithCCreateManyWithoutXInput {\n  create: [BWithCCreateWithoutXInput!]\n  connect: [BWithCWhereUniqueInput!]\n}\n\ninput BWithCCreateManyWithoutYInput {\n  create: [BWithCCreateWithoutYInput!]\n  connect: [BWithCWhereUniqueInput!]\n}\n\ninput BWithCCreateWithoutXInput {\n  y: CWithoutIdWithBCreateOneWithoutXInput\n}\n\ninput BWithCCreateWithoutYInput {\n  x: CWithIdWithBCreateOneWithoutXInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithCOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n}\n\ntype BWithCPreviousValues {\n  removeThisId: ID!\n}\n\ninput BWithCScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithCScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithCScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithCScalarWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n}\n\ntype BWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: BWithC\n  updatedFields: [String!]\n  previousValues: BWithCPreviousValues\n}\n\ninput BWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithCWhereInput\n}\n\ninput BWithCUpdateInput {\n  x: CWithIdWithBUpdateOneWithoutXInput\n  y: CWithoutIdWithBUpdateOneWithoutXInput\n}\n\ninput BWithCUpdateManyWithoutXInput {\n  create: [BWithCCreateWithoutXInput!]\n  connect: [BWithCWhereUniqueInput!]\n  disconnect: [BWithCWhereUniqueInput!]\n  delete: [BWithCWhereUniqueInput!]\n  update: [BWithCUpdateWithWhereUniqueWithoutXInput!]\n  deleteMany: [BWithCScalarWhereInput!]\n  upsert: [BWithCUpsertWithWhereUniqueWithoutXInput!]\n}\n\ninput BWithCUpdateManyWithoutYInput {\n  create: [BWithCCreateWithoutYInput!]\n  connect: [BWithCWhereUniqueInput!]\n  disconnect: [BWithCWhereUniqueInput!]\n  delete: [BWithCWhereUniqueInput!]\n  update: [BWithCUpdateWithWhereUniqueWithoutYInput!]\n  deleteMany: [BWithCScalarWhereInput!]\n  upsert: [BWithCUpsertWithWhereUniqueWithoutYInput!]\n}\n\ninput BWithCUpdateWithoutXDataInput {\n  y: CWithoutIdWithBUpdateOneWithoutXInput\n}\n\ninput BWithCUpdateWithoutYDataInput {\n  x: CWithIdWithBUpdateOneWithoutXInput\n}\n\ninput BWithCUpdateWithWhereUniqueWithoutXInput {\n  where: BWithCWhereUniqueInput!\n  data: BWithCUpdateWithoutXDataInput!\n}\n\ninput BWithCUpdateWithWhereUniqueWithoutYInput {\n  where: BWithCWhereUniqueInput!\n  data: BWithCUpdateWithoutYDataInput!\n}\n\ninput BWithCUpsertWithWhereUniqueWithoutXInput {\n  where: BWithCWhereUniqueInput!\n  update: BWithCUpdateWithoutXDataInput!\n  create: BWithCCreateWithoutXInput!\n}\n\ninput BWithCUpsertWithWhereUniqueWithoutYInput {\n  where: BWithCWhereUniqueInput!\n  update: BWithCUpdateWithoutYDataInput!\n  create: BWithCCreateWithoutYInput!\n}\n\ninput BWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithCWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n}\n\ninput BWithCWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype BWithIdWithA implements Node {\n  id: ID!\n  field: String!\n  x: AWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithIdWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithIdWithAEdge]!\n  aggregate: AggregateBWithIdWithA!\n}\n\ninput BWithIdWithACreateInput {\n  field: String!\n  x: AWithBCreateOneWithoutXInput\n}\n\ninput BWithIdWithACreateOneWithoutXInput {\n  create: BWithIdWithACreateWithoutXInput\n  connect: BWithIdWithAWhereUniqueInput\n}\n\ninput BWithIdWithACreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithIdWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithIdWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithIdWithAOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype BWithIdWithAPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype BWithIdWithASubscriptionPayload {\n  mutation: MutationType!\n  node: BWithIdWithA\n  updatedFields: [String!]\n  previousValues: BWithIdWithAPreviousValues\n}\n\ninput BWithIdWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithIdWithAWhereInput\n}\n\ninput BWithIdWithAUpdateInput {\n  field: String\n  x: AWithBUpdateOneWithoutXInput\n}\n\ninput BWithIdWithAUpdateManyMutationInput {\n  field: String\n}\n\ninput BWithIdWithAUpdateOneRequiredWithoutXInput {\n  create: BWithIdWithACreateWithoutXInput\n  connect: BWithIdWithAWhereUniqueInput\n  update: BWithIdWithAUpdateWithoutXDataInput\n  upsert: BWithIdWithAUpsertWithoutXInput\n}\n\ninput BWithIdWithAUpdateWithoutXDataInput {\n  field: String\n}\n\ninput BWithIdWithAUpsertWithoutXInput {\n  update: BWithIdWithAUpdateWithoutXDataInput!\n  create: BWithIdWithACreateWithoutXInput!\n}\n\ninput BWithIdWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithIdWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithIdWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithIdWithAWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput BWithIdWithAWhereUniqueInput {\n  id: ID\n}\n\ntype BWithIdWithB implements Node {\n  id: ID!\n  field: String!\n  x: BWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithIdWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithIdWithBEdge]!\n  aggregate: AggregateBWithIdWithB!\n}\n\ninput BWithIdWithBCreateInput {\n  field: String!\n  x: BWithBCreateOneWithoutXInput\n}\n\ninput BWithIdWithBCreateOneWithoutXInput {\n  create: BWithIdWithBCreateWithoutXInput\n  connect: BWithIdWithBWhereUniqueInput\n}\n\ninput BWithIdWithBCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithIdWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithIdWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithIdWithBOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype BWithIdWithBPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype BWithIdWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: BWithIdWithB\n  updatedFields: [String!]\n  previousValues: BWithIdWithBPreviousValues\n}\n\ninput BWithIdWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithIdWithBWhereInput\n}\n\ninput BWithIdWithBUpdateInput {\n  field: String\n  x: BWithBUpdateOneWithoutXInput\n}\n\ninput BWithIdWithBUpdateManyMutationInput {\n  field: String\n}\n\ninput BWithIdWithBUpdateOneWithoutXInput {\n  create: BWithIdWithBCreateWithoutXInput\n  connect: BWithIdWithBWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: BWithIdWithBUpdateWithoutXDataInput\n  upsert: BWithIdWithBUpsertWithoutXInput\n}\n\ninput BWithIdWithBUpdateWithoutXDataInput {\n  field: String\n}\n\ninput BWithIdWithBUpsertWithoutXInput {\n  update: BWithIdWithBUpdateWithoutXDataInput!\n  create: BWithIdWithBCreateWithoutXInput!\n}\n\ninput BWithIdWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithIdWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithIdWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithIdWithBWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput BWithIdWithBWhereUniqueInput {\n  id: ID\n}\n\ntype BWithIdWithC implements Node {\n  id: ID!\n  field: String!\n  x: CWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithIdWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithIdWithCEdge]!\n  aggregate: AggregateBWithIdWithC!\n}\n\ninput BWithIdWithCCreateInput {\n  field: String!\n  x: CWithBCreateOneWithoutXInput\n}\n\ninput BWithIdWithCCreateManyWithoutXInput {\n  create: [BWithIdWithCCreateWithoutXInput!]\n  connect: [BWithIdWithCWhereUniqueInput!]\n}\n\ninput BWithIdWithCCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithIdWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithIdWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithIdWithCOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype BWithIdWithCPreviousValues {\n  id: ID!\n  field: String!\n}\n\ninput BWithIdWithCScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithIdWithCScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithIdWithCScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithIdWithCScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ntype BWithIdWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: BWithIdWithC\n  updatedFields: [String!]\n  previousValues: BWithIdWithCPreviousValues\n}\n\ninput BWithIdWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithIdWithCWhereInput\n}\n\ninput BWithIdWithCUpdateInput {\n  field: String\n  x: CWithBUpdateOneWithoutXInput\n}\n\ninput BWithIdWithCUpdateManyDataInput {\n  field: String\n}\n\ninput BWithIdWithCUpdateManyMutationInput {\n  field: String\n}\n\ninput BWithIdWithCUpdateManyWithoutXInput {\n  create: [BWithIdWithCCreateWithoutXInput!]\n  connect: [BWithIdWithCWhereUniqueInput!]\n  disconnect: [BWithIdWithCWhereUniqueInput!]\n  delete: [BWithIdWithCWhereUniqueInput!]\n  update: [BWithIdWithCUpdateWithWhereUniqueWithoutXInput!]\n  updateMany: [BWithIdWithCUpdateManyWithWhereNestedInput!]\n  deleteMany: [BWithIdWithCScalarWhereInput!]\n  upsert: [BWithIdWithCUpsertWithWhereUniqueWithoutXInput!]\n}\n\ninput BWithIdWithCUpdateManyWithWhereNestedInput {\n  where: BWithIdWithCScalarWhereInput!\n  data: BWithIdWithCUpdateManyDataInput!\n}\n\ninput BWithIdWithCUpdateWithoutXDataInput {\n  field: String\n}\n\ninput BWithIdWithCUpdateWithWhereUniqueWithoutXInput {\n  where: BWithIdWithCWhereUniqueInput!\n  data: BWithIdWithCUpdateWithoutXDataInput!\n}\n\ninput BWithIdWithCUpsertWithWhereUniqueWithoutXInput {\n  where: BWithIdWithCWhereUniqueInput!\n  update: BWithIdWithCUpdateWithoutXDataInput!\n  create: BWithIdWithCCreateWithoutXInput!\n}\n\ninput BWithIdWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithIdWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithIdWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithIdWithCWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput BWithIdWithCWhereUniqueInput {\n  id: ID\n}\n\ntype BWithoutIdWithA {\n  removeThisId: ID!\n  field: String!\n  x: AWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithoutIdWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithoutIdWithAEdge]!\n  aggregate: AggregateBWithoutIdWithA!\n}\n\ninput BWithoutIdWithACreateInput {\n  field: String!\n  x: AWithBCreateOneWithoutYInput\n}\n\ninput BWithoutIdWithACreateOneWithoutXInput {\n  create: BWithoutIdWithACreateWithoutXInput\n  connect: BWithoutIdWithAWhereUniqueInput\n}\n\ninput BWithoutIdWithACreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithoutIdWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithoutIdWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithoutIdWithAOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n  field_ASC\n  field_DESC\n}\n\ntype BWithoutIdWithAPreviousValues {\n  removeThisId: ID!\n  field: String!\n}\n\ntype BWithoutIdWithASubscriptionPayload {\n  mutation: MutationType!\n  node: BWithoutIdWithA\n  updatedFields: [String!]\n  previousValues: BWithoutIdWithAPreviousValues\n}\n\ninput BWithoutIdWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithoutIdWithAWhereInput\n}\n\ninput BWithoutIdWithAUpdateInput {\n  field: String\n  x: AWithBUpdateOneWithoutYInput\n}\n\ninput BWithoutIdWithAUpdateManyMutationInput {\n  field: String\n}\n\ninput BWithoutIdWithAUpdateOneRequiredWithoutXInput {\n  create: BWithoutIdWithACreateWithoutXInput\n  connect: BWithoutIdWithAWhereUniqueInput\n  update: BWithoutIdWithAUpdateWithoutXDataInput\n  upsert: BWithoutIdWithAUpsertWithoutXInput\n}\n\ninput BWithoutIdWithAUpdateWithoutXDataInput {\n  field: String\n}\n\ninput BWithoutIdWithAUpsertWithoutXInput {\n  update: BWithoutIdWithAUpdateWithoutXDataInput!\n  create: BWithoutIdWithACreateWithoutXInput!\n}\n\ninput BWithoutIdWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithoutIdWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithoutIdWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithoutIdWithAWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput BWithoutIdWithAWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype BWithoutIdWithB {\n  removeThisId: ID!\n  field: String!\n  x: BWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithoutIdWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithoutIdWithBEdge]!\n  aggregate: AggregateBWithoutIdWithB!\n}\n\ninput BWithoutIdWithBCreateInput {\n  field: String!\n  x: BWithBCreateOneWithoutYInput\n}\n\ninput BWithoutIdWithBCreateOneWithoutXInput {\n  create: BWithoutIdWithBCreateWithoutXInput\n  connect: BWithoutIdWithBWhereUniqueInput\n}\n\ninput BWithoutIdWithBCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithoutIdWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithoutIdWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithoutIdWithBOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n  field_ASC\n  field_DESC\n}\n\ntype BWithoutIdWithBPreviousValues {\n  removeThisId: ID!\n  field: String!\n}\n\ntype BWithoutIdWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: BWithoutIdWithB\n  updatedFields: [String!]\n  previousValues: BWithoutIdWithBPreviousValues\n}\n\ninput BWithoutIdWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithoutIdWithBWhereInput\n}\n\ninput BWithoutIdWithBUpdateInput {\n  field: String\n  x: BWithBUpdateOneWithoutYInput\n}\n\ninput BWithoutIdWithBUpdateManyMutationInput {\n  field: String\n}\n\ninput BWithoutIdWithBUpdateOneWithoutXInput {\n  create: BWithoutIdWithBCreateWithoutXInput\n  connect: BWithoutIdWithBWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: BWithoutIdWithBUpdateWithoutXDataInput\n  upsert: BWithoutIdWithBUpsertWithoutXInput\n}\n\ninput BWithoutIdWithBUpdateWithoutXDataInput {\n  field: String\n}\n\ninput BWithoutIdWithBUpsertWithoutXInput {\n  update: BWithoutIdWithBUpdateWithoutXDataInput!\n  create: BWithoutIdWithBCreateWithoutXInput!\n}\n\ninput BWithoutIdWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithoutIdWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithoutIdWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithoutIdWithBWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput BWithoutIdWithBWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype BWithoutIdWithC {\n  removeThisId: ID!\n  field: String!\n  x: CWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithoutIdWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithoutIdWithCEdge]!\n  aggregate: AggregateBWithoutIdWithC!\n}\n\ninput BWithoutIdWithCCreateInput {\n  field: String!\n  x: CWithBCreateOneWithoutYInput\n}\n\ninput BWithoutIdWithCCreateManyWithoutXInput {\n  create: [BWithoutIdWithCCreateWithoutXInput!]\n  connect: [BWithoutIdWithCWhereUniqueInput!]\n}\n\ninput BWithoutIdWithCCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithoutIdWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithoutIdWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithoutIdWithCOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n  field_ASC\n  field_DESC\n}\n\ntype BWithoutIdWithCPreviousValues {\n  removeThisId: ID!\n  field: String!\n}\n\ninput BWithoutIdWithCScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithoutIdWithCScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithoutIdWithCScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithoutIdWithCScalarWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ntype BWithoutIdWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: BWithoutIdWithC\n  updatedFields: [String!]\n  previousValues: BWithoutIdWithCPreviousValues\n}\n\ninput BWithoutIdWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithoutIdWithCWhereInput\n}\n\ninput BWithoutIdWithCUpdateInput {\n  field: String\n  x: CWithBUpdateOneWithoutYInput\n}\n\ninput BWithoutIdWithCUpdateManyDataInput {\n  field: String\n}\n\ninput BWithoutIdWithCUpdateManyMutationInput {\n  field: String\n}\n\ninput BWithoutIdWithCUpdateManyWithoutXInput {\n  create: [BWithoutIdWithCCreateWithoutXInput!]\n  connect: [BWithoutIdWithCWhereUniqueInput!]\n  disconnect: [BWithoutIdWithCWhereUniqueInput!]\n  delete: [BWithoutIdWithCWhereUniqueInput!]\n  update: [BWithoutIdWithCUpdateWithWhereUniqueWithoutXInput!]\n  updateMany: [BWithoutIdWithCUpdateManyWithWhereNestedInput!]\n  deleteMany: [BWithoutIdWithCScalarWhereInput!]\n  upsert: [BWithoutIdWithCUpsertWithWhereUniqueWithoutXInput!]\n}\n\ninput BWithoutIdWithCUpdateManyWithWhereNestedInput {\n  where: BWithoutIdWithCScalarWhereInput!\n  data: BWithoutIdWithCUpdateManyDataInput!\n}\n\ninput BWithoutIdWithCUpdateWithoutXDataInput {\n  field: String\n}\n\ninput BWithoutIdWithCUpdateWithWhereUniqueWithoutXInput {\n  where: BWithoutIdWithCWhereUniqueInput!\n  data: BWithoutIdWithCUpdateWithoutXDataInput!\n}\n\ninput BWithoutIdWithCUpsertWithWhereUniqueWithoutXInput {\n  where: BWithoutIdWithCWhereUniqueInput!\n  update: BWithoutIdWithCUpdateWithoutXDataInput!\n  create: BWithoutIdWithCCreateWithoutXInput!\n}\n\ninput BWithoutIdWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithoutIdWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithoutIdWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithoutIdWithCWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput BWithoutIdWithCWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype CWithA {\n  removeThisId: ID!\n  x(where: AWithIdWithCWhereInput, orderBy: AWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithIdWithC!]\n  y(where: AWithoutIdWithCWhereInput, orderBy: AWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithoutIdWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithAEdge]!\n  aggregate: AggregateCWithA!\n}\n\ninput CWithACreateInput {\n  x: AWithIdWithCCreateManyWithoutXInput\n  y: AWithoutIdWithCCreateManyWithoutXInput\n}\n\ninput CWithACreateOneWithoutXInput {\n  create: CWithACreateWithoutXInput\n  connect: CWithAWhereUniqueInput\n}\n\ninput CWithACreateOneWithoutYInput {\n  create: CWithACreateWithoutYInput\n  connect: CWithAWhereUniqueInput\n}\n\ninput CWithACreateWithoutXInput {\n  y: AWithoutIdWithCCreateManyWithoutXInput\n}\n\ninput CWithACreateWithoutYInput {\n  x: AWithIdWithCCreateManyWithoutXInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithAOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n}\n\ntype CWithAPreviousValues {\n  removeThisId: ID!\n}\n\ntype CWithASubscriptionPayload {\n  mutation: MutationType!\n  node: CWithA\n  updatedFields: [String!]\n  previousValues: CWithAPreviousValues\n}\n\ninput CWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithAWhereInput\n}\n\ninput CWithAUpdateInput {\n  x: AWithIdWithCUpdateManyWithoutXInput\n  y: AWithoutIdWithCUpdateManyWithoutXInput\n}\n\ninput CWithAUpdateOneRequiredWithoutXInput {\n  create: CWithACreateWithoutXInput\n  connect: CWithAWhereUniqueInput\n  update: CWithAUpdateWithoutXDataInput\n  upsert: CWithAUpsertWithoutXInput\n}\n\ninput CWithAUpdateOneRequiredWithoutYInput {\n  create: CWithACreateWithoutYInput\n  connect: CWithAWhereUniqueInput\n  update: CWithAUpdateWithoutYDataInput\n  upsert: CWithAUpsertWithoutYInput\n}\n\ninput CWithAUpdateWithoutXDataInput {\n  y: AWithoutIdWithCUpdateManyWithoutXInput\n}\n\ninput CWithAUpdateWithoutYDataInput {\n  x: AWithIdWithCUpdateManyWithoutXInput\n}\n\ninput CWithAUpsertWithoutXInput {\n  update: CWithAUpdateWithoutXDataInput!\n  create: CWithACreateWithoutXInput!\n}\n\ninput CWithAUpsertWithoutYInput {\n  update: CWithAUpdateWithoutYDataInput!\n  create: CWithACreateWithoutYInput!\n}\n\ninput CWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithAWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n}\n\ninput CWithAWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype CWithB {\n  removeThisId: ID!\n  x(where: BWithIdWithCWhereInput, orderBy: BWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithIdWithC!]\n  y(where: BWithoutIdWithCWhereInput, orderBy: BWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithoutIdWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithBEdge]!\n  aggregate: AggregateCWithB!\n}\n\ninput CWithBCreateInput {\n  x: BWithIdWithCCreateManyWithoutXInput\n  y: BWithoutIdWithCCreateManyWithoutXInput\n}\n\ninput CWithBCreateOneWithoutXInput {\n  create: CWithBCreateWithoutXInput\n  connect: CWithBWhereUniqueInput\n}\n\ninput CWithBCreateOneWithoutYInput {\n  create: CWithBCreateWithoutYInput\n  connect: CWithBWhereUniqueInput\n}\n\ninput CWithBCreateWithoutXInput {\n  y: BWithoutIdWithCCreateManyWithoutXInput\n}\n\ninput CWithBCreateWithoutYInput {\n  x: BWithIdWithCCreateManyWithoutXInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithBOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n}\n\ntype CWithBPreviousValues {\n  removeThisId: ID!\n}\n\ntype CWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: CWithB\n  updatedFields: [String!]\n  previousValues: CWithBPreviousValues\n}\n\ninput CWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithBWhereInput\n}\n\ninput CWithBUpdateInput {\n  x: BWithIdWithCUpdateManyWithoutXInput\n  y: BWithoutIdWithCUpdateManyWithoutXInput\n}\n\ninput CWithBUpdateOneWithoutXInput {\n  create: CWithBCreateWithoutXInput\n  connect: CWithBWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: CWithBUpdateWithoutXDataInput\n  upsert: CWithBUpsertWithoutXInput\n}\n\ninput CWithBUpdateOneWithoutYInput {\n  create: CWithBCreateWithoutYInput\n  connect: CWithBWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: CWithBUpdateWithoutYDataInput\n  upsert: CWithBUpsertWithoutYInput\n}\n\ninput CWithBUpdateWithoutXDataInput {\n  y: BWithoutIdWithCUpdateManyWithoutXInput\n}\n\ninput CWithBUpdateWithoutYDataInput {\n  x: BWithIdWithCUpdateManyWithoutXInput\n}\n\ninput CWithBUpsertWithoutXInput {\n  update: CWithBUpdateWithoutXDataInput!\n  create: CWithBCreateWithoutXInput!\n}\n\ninput CWithBUpsertWithoutYInput {\n  update: CWithBUpdateWithoutYDataInput!\n  create: CWithBCreateWithoutYInput!\n}\n\ninput CWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithBWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n}\n\ninput CWithBWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype CWithC {\n  removeThisId: ID!\n  x(where: CWithIdWithCWhereInput, orderBy: CWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithIdWithC!]\n  y(where: CWithoutIdWithCWhereInput, orderBy: CWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithoutIdWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithCEdge]!\n  aggregate: AggregateCWithC!\n}\n\ninput CWithCCreateInput {\n  x: CWithIdWithCCreateManyWithoutXInput\n  y: CWithoutIdWithCCreateManyWithoutXInput\n}\n\ninput CWithCCreateManyWithoutXInput {\n  create: [CWithCCreateWithoutXInput!]\n  connect: [CWithCWhereUniqueInput!]\n}\n\ninput CWithCCreateManyWithoutYInput {\n  create: [CWithCCreateWithoutYInput!]\n  connect: [CWithCWhereUniqueInput!]\n}\n\ninput CWithCCreateWithoutXInput {\n  y: CWithoutIdWithCCreateManyWithoutXInput\n}\n\ninput CWithCCreateWithoutYInput {\n  x: CWithIdWithCCreateManyWithoutXInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithCOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n}\n\ntype CWithCPreviousValues {\n  removeThisId: ID!\n}\n\ninput CWithCScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithCScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithCScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithCScalarWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n}\n\ntype CWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: CWithC\n  updatedFields: [String!]\n  previousValues: CWithCPreviousValues\n}\n\ninput CWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithCWhereInput\n}\n\ninput CWithCUpdateInput {\n  x: CWithIdWithCUpdateManyWithoutXInput\n  y: CWithoutIdWithCUpdateManyWithoutXInput\n}\n\ninput CWithCUpdateManyWithoutXInput {\n  create: [CWithCCreateWithoutXInput!]\n  connect: [CWithCWhereUniqueInput!]\n  disconnect: [CWithCWhereUniqueInput!]\n  delete: [CWithCWhereUniqueInput!]\n  update: [CWithCUpdateWithWhereUniqueWithoutXInput!]\n  deleteMany: [CWithCScalarWhereInput!]\n  upsert: [CWithCUpsertWithWhereUniqueWithoutXInput!]\n}\n\ninput CWithCUpdateManyWithoutYInput {\n  create: [CWithCCreateWithoutYInput!]\n  connect: [CWithCWhereUniqueInput!]\n  disconnect: [CWithCWhereUniqueInput!]\n  delete: [CWithCWhereUniqueInput!]\n  update: [CWithCUpdateWithWhereUniqueWithoutYInput!]\n  deleteMany: [CWithCScalarWhereInput!]\n  upsert: [CWithCUpsertWithWhereUniqueWithoutYInput!]\n}\n\ninput CWithCUpdateWithoutXDataInput {\n  y: CWithoutIdWithCUpdateManyWithoutXInput\n}\n\ninput CWithCUpdateWithoutYDataInput {\n  x: CWithIdWithCUpdateManyWithoutXInput\n}\n\ninput CWithCUpdateWithWhereUniqueWithoutXInput {\n  where: CWithCWhereUniqueInput!\n  data: CWithCUpdateWithoutXDataInput!\n}\n\ninput CWithCUpdateWithWhereUniqueWithoutYInput {\n  where: CWithCWhereUniqueInput!\n  data: CWithCUpdateWithoutYDataInput!\n}\n\ninput CWithCUpsertWithWhereUniqueWithoutXInput {\n  where: CWithCWhereUniqueInput!\n  update: CWithCUpdateWithoutXDataInput!\n  create: CWithCCreateWithoutXInput!\n}\n\ninput CWithCUpsertWithWhereUniqueWithoutYInput {\n  where: CWithCWhereUniqueInput!\n  update: CWithCUpdateWithoutYDataInput!\n  create: CWithCCreateWithoutYInput!\n}\n\ninput CWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithCWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n}\n\ninput CWithCWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype CWithIdWithA implements Node {\n  id: ID!\n  field: String!\n  x(where: AWithCWhereInput, orderBy: AWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithIdWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithIdWithAEdge]!\n  aggregate: AggregateCWithIdWithA!\n}\n\ninput CWithIdWithACreateInput {\n  field: String!\n  x: AWithCCreateManyWithoutXInput\n}\n\ninput CWithIdWithACreateOneWithoutXInput {\n  create: CWithIdWithACreateWithoutXInput\n  connect: CWithIdWithAWhereUniqueInput\n}\n\ninput CWithIdWithACreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithIdWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithIdWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithIdWithAOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype CWithIdWithAPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype CWithIdWithASubscriptionPayload {\n  mutation: MutationType!\n  node: CWithIdWithA\n  updatedFields: [String!]\n  previousValues: CWithIdWithAPreviousValues\n}\n\ninput CWithIdWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithIdWithAWhereInput\n}\n\ninput CWithIdWithAUpdateInput {\n  field: String\n  x: AWithCUpdateManyWithoutXInput\n}\n\ninput CWithIdWithAUpdateManyMutationInput {\n  field: String\n}\n\ninput CWithIdWithAUpdateOneRequiredWithoutXInput {\n  create: CWithIdWithACreateWithoutXInput\n  connect: CWithIdWithAWhereUniqueInput\n  update: CWithIdWithAUpdateWithoutXDataInput\n  upsert: CWithIdWithAUpsertWithoutXInput\n}\n\ninput CWithIdWithAUpdateWithoutXDataInput {\n  field: String\n}\n\ninput CWithIdWithAUpsertWithoutXInput {\n  update: CWithIdWithAUpdateWithoutXDataInput!\n  create: CWithIdWithACreateWithoutXInput!\n}\n\ninput CWithIdWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithIdWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithIdWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithIdWithAWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput CWithIdWithAWhereUniqueInput {\n  id: ID\n}\n\ntype CWithIdWithB implements Node {\n  id: ID!\n  field: String!\n  x(where: BWithCWhereInput, orderBy: BWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithIdWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithIdWithBEdge]!\n  aggregate: AggregateCWithIdWithB!\n}\n\ninput CWithIdWithBCreateInput {\n  field: String!\n  x: BWithCCreateManyWithoutXInput\n}\n\ninput CWithIdWithBCreateOneWithoutXInput {\n  create: CWithIdWithBCreateWithoutXInput\n  connect: CWithIdWithBWhereUniqueInput\n}\n\ninput CWithIdWithBCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithIdWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithIdWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithIdWithBOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype CWithIdWithBPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype CWithIdWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: CWithIdWithB\n  updatedFields: [String!]\n  previousValues: CWithIdWithBPreviousValues\n}\n\ninput CWithIdWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithIdWithBWhereInput\n}\n\ninput CWithIdWithBUpdateInput {\n  field: String\n  x: BWithCUpdateManyWithoutXInput\n}\n\ninput CWithIdWithBUpdateManyMutationInput {\n  field: String\n}\n\ninput CWithIdWithBUpdateOneWithoutXInput {\n  create: CWithIdWithBCreateWithoutXInput\n  connect: CWithIdWithBWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: CWithIdWithBUpdateWithoutXDataInput\n  upsert: CWithIdWithBUpsertWithoutXInput\n}\n\ninput CWithIdWithBUpdateWithoutXDataInput {\n  field: String\n}\n\ninput CWithIdWithBUpsertWithoutXInput {\n  update: CWithIdWithBUpdateWithoutXDataInput!\n  create: CWithIdWithBCreateWithoutXInput!\n}\n\ninput CWithIdWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithIdWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithIdWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithIdWithBWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput CWithIdWithBWhereUniqueInput {\n  id: ID\n}\n\ntype CWithIdWithC implements Node {\n  id: ID!\n  field: String!\n  x(where: CWithCWhereInput, orderBy: CWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithIdWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithIdWithCEdge]!\n  aggregate: AggregateCWithIdWithC!\n}\n\ninput CWithIdWithCCreateInput {\n  field: String!\n  x: CWithCCreateManyWithoutXInput\n}\n\ninput CWithIdWithCCreateManyWithoutXInput {\n  create: [CWithIdWithCCreateWithoutXInput!]\n  connect: [CWithIdWithCWhereUniqueInput!]\n}\n\ninput CWithIdWithCCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithIdWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithIdWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithIdWithCOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype CWithIdWithCPreviousValues {\n  id: ID!\n  field: String!\n}\n\ninput CWithIdWithCScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithIdWithCScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithIdWithCScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithIdWithCScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ntype CWithIdWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: CWithIdWithC\n  updatedFields: [String!]\n  previousValues: CWithIdWithCPreviousValues\n}\n\ninput CWithIdWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithIdWithCWhereInput\n}\n\ninput CWithIdWithCUpdateInput {\n  field: String\n  x: CWithCUpdateManyWithoutXInput\n}\n\ninput CWithIdWithCUpdateManyDataInput {\n  field: String\n}\n\ninput CWithIdWithCUpdateManyMutationInput {\n  field: String\n}\n\ninput CWithIdWithCUpdateManyWithoutXInput {\n  create: [CWithIdWithCCreateWithoutXInput!]\n  connect: [CWithIdWithCWhereUniqueInput!]\n  disconnect: [CWithIdWithCWhereUniqueInput!]\n  delete: [CWithIdWithCWhereUniqueInput!]\n  update: [CWithIdWithCUpdateWithWhereUniqueWithoutXInput!]\n  updateMany: [CWithIdWithCUpdateManyWithWhereNestedInput!]\n  deleteMany: [CWithIdWithCScalarWhereInput!]\n  upsert: [CWithIdWithCUpsertWithWhereUniqueWithoutXInput!]\n}\n\ninput CWithIdWithCUpdateManyWithWhereNestedInput {\n  where: CWithIdWithCScalarWhereInput!\n  data: CWithIdWithCUpdateManyDataInput!\n}\n\ninput CWithIdWithCUpdateWithoutXDataInput {\n  field: String\n}\n\ninput CWithIdWithCUpdateWithWhereUniqueWithoutXInput {\n  where: CWithIdWithCWhereUniqueInput!\n  data: CWithIdWithCUpdateWithoutXDataInput!\n}\n\ninput CWithIdWithCUpsertWithWhereUniqueWithoutXInput {\n  where: CWithIdWithCWhereUniqueInput!\n  update: CWithIdWithCUpdateWithoutXDataInput!\n  create: CWithIdWithCCreateWithoutXInput!\n}\n\ninput CWithIdWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithIdWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithIdWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithIdWithCWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput CWithIdWithCWhereUniqueInput {\n  id: ID\n}\n\ntype CWithoutIdWithA {\n  removeThisId: ID!\n  field: String!\n  x(where: AWithCWhereInput, orderBy: AWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithoutIdWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithoutIdWithAEdge]!\n  aggregate: AggregateCWithoutIdWithA!\n}\n\ninput CWithoutIdWithACreateInput {\n  field: String!\n  x: AWithCCreateManyWithoutYInput\n}\n\ninput CWithoutIdWithACreateOneWithoutXInput {\n  create: CWithoutIdWithACreateWithoutXInput\n  connect: CWithoutIdWithAWhereUniqueInput\n}\n\ninput CWithoutIdWithACreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithoutIdWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithoutIdWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithoutIdWithAOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n  field_ASC\n  field_DESC\n}\n\ntype CWithoutIdWithAPreviousValues {\n  removeThisId: ID!\n  field: String!\n}\n\ntype CWithoutIdWithASubscriptionPayload {\n  mutation: MutationType!\n  node: CWithoutIdWithA\n  updatedFields: [String!]\n  previousValues: CWithoutIdWithAPreviousValues\n}\n\ninput CWithoutIdWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithoutIdWithAWhereInput\n}\n\ninput CWithoutIdWithAUpdateInput {\n  field: String\n  x: AWithCUpdateManyWithoutYInput\n}\n\ninput CWithoutIdWithAUpdateManyMutationInput {\n  field: String\n}\n\ninput CWithoutIdWithAUpdateOneRequiredWithoutXInput {\n  create: CWithoutIdWithACreateWithoutXInput\n  connect: CWithoutIdWithAWhereUniqueInput\n  update: CWithoutIdWithAUpdateWithoutXDataInput\n  upsert: CWithoutIdWithAUpsertWithoutXInput\n}\n\ninput CWithoutIdWithAUpdateWithoutXDataInput {\n  field: String\n}\n\ninput CWithoutIdWithAUpsertWithoutXInput {\n  update: CWithoutIdWithAUpdateWithoutXDataInput!\n  create: CWithoutIdWithACreateWithoutXInput!\n}\n\ninput CWithoutIdWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithoutIdWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithoutIdWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithoutIdWithAWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput CWithoutIdWithAWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype CWithoutIdWithB {\n  removeThisId: ID!\n  field: String!\n  x(where: BWithCWhereInput, orderBy: BWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithoutIdWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithoutIdWithBEdge]!\n  aggregate: AggregateCWithoutIdWithB!\n}\n\ninput CWithoutIdWithBCreateInput {\n  field: String!\n  x: BWithCCreateManyWithoutYInput\n}\n\ninput CWithoutIdWithBCreateOneWithoutXInput {\n  create: CWithoutIdWithBCreateWithoutXInput\n  connect: CWithoutIdWithBWhereUniqueInput\n}\n\ninput CWithoutIdWithBCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithoutIdWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithoutIdWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithoutIdWithBOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n  field_ASC\n  field_DESC\n}\n\ntype CWithoutIdWithBPreviousValues {\n  removeThisId: ID!\n  field: String!\n}\n\ntype CWithoutIdWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: CWithoutIdWithB\n  updatedFields: [String!]\n  previousValues: CWithoutIdWithBPreviousValues\n}\n\ninput CWithoutIdWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithoutIdWithBWhereInput\n}\n\ninput CWithoutIdWithBUpdateInput {\n  field: String\n  x: BWithCUpdateManyWithoutYInput\n}\n\ninput CWithoutIdWithBUpdateManyMutationInput {\n  field: String\n}\n\ninput CWithoutIdWithBUpdateOneWithoutXInput {\n  create: CWithoutIdWithBCreateWithoutXInput\n  connect: CWithoutIdWithBWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: CWithoutIdWithBUpdateWithoutXDataInput\n  upsert: CWithoutIdWithBUpsertWithoutXInput\n}\n\ninput CWithoutIdWithBUpdateWithoutXDataInput {\n  field: String\n}\n\ninput CWithoutIdWithBUpsertWithoutXInput {\n  update: CWithoutIdWithBUpdateWithoutXDataInput!\n  create: CWithoutIdWithBCreateWithoutXInput!\n}\n\ninput CWithoutIdWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithoutIdWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithoutIdWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithoutIdWithBWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput CWithoutIdWithBWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype CWithoutIdWithC {\n  removeThisId: ID!\n  field: String!\n  x(where: CWithCWhereInput, orderBy: CWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithoutIdWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithoutIdWithCEdge]!\n  aggregate: AggregateCWithoutIdWithC!\n}\n\ninput CWithoutIdWithCCreateInput {\n  field: String!\n  x: CWithCCreateManyWithoutYInput\n}\n\ninput CWithoutIdWithCCreateManyWithoutXInput {\n  create: [CWithoutIdWithCCreateWithoutXInput!]\n  connect: [CWithoutIdWithCWhereUniqueInput!]\n}\n\ninput CWithoutIdWithCCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithoutIdWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithoutIdWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithoutIdWithCOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n  field_ASC\n  field_DESC\n}\n\ntype CWithoutIdWithCPreviousValues {\n  removeThisId: ID!\n  field: String!\n}\n\ninput CWithoutIdWithCScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithoutIdWithCScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithoutIdWithCScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithoutIdWithCScalarWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ntype CWithoutIdWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: CWithoutIdWithC\n  updatedFields: [String!]\n  previousValues: CWithoutIdWithCPreviousValues\n}\n\ninput CWithoutIdWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithoutIdWithCWhereInput\n}\n\ninput CWithoutIdWithCUpdateInput {\n  field: String\n  x: CWithCUpdateManyWithoutYInput\n}\n\ninput CWithoutIdWithCUpdateManyDataInput {\n  field: String\n}\n\ninput CWithoutIdWithCUpdateManyMutationInput {\n  field: String\n}\n\ninput CWithoutIdWithCUpdateManyWithoutXInput {\n  create: [CWithoutIdWithCCreateWithoutXInput!]\n  connect: [CWithoutIdWithCWhereUniqueInput!]\n  disconnect: [CWithoutIdWithCWhereUniqueInput!]\n  delete: [CWithoutIdWithCWhereUniqueInput!]\n  update: [CWithoutIdWithCUpdateWithWhereUniqueWithoutXInput!]\n  updateMany: [CWithoutIdWithCUpdateManyWithWhereNestedInput!]\n  deleteMany: [CWithoutIdWithCScalarWhereInput!]\n  upsert: [CWithoutIdWithCUpsertWithWhereUniqueWithoutXInput!]\n}\n\ninput CWithoutIdWithCUpdateManyWithWhereNestedInput {\n  where: CWithoutIdWithCScalarWhereInput!\n  data: CWithoutIdWithCUpdateManyDataInput!\n}\n\ninput CWithoutIdWithCUpdateWithoutXDataInput {\n  field: String\n}\n\ninput CWithoutIdWithCUpdateWithWhereUniqueWithoutXInput {\n  where: CWithoutIdWithCWhereUniqueInput!\n  data: CWithoutIdWithCUpdateWithoutXDataInput!\n}\n\ninput CWithoutIdWithCUpsertWithWhereUniqueWithoutXInput {\n  where: CWithoutIdWithCWhereUniqueInput!\n  update: CWithoutIdWithCUpdateWithoutXDataInput!\n  create: CWithoutIdWithCCreateWithoutXInput!\n}\n\ninput CWithoutIdWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithoutIdWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithoutIdWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithoutIdWithCWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput CWithoutIdWithCWhereUniqueInput {\n  removeThisId: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createAWithIdWithA(data: AWithIdWithACreateInput!): AWithIdWithA!\n  createAWithoutIdWithA(data: AWithoutIdWithACreateInput!): AWithoutIdWithA!\n  createBWithIdWithA(data: BWithIdWithACreateInput!): BWithIdWithA!\n  createBWithoutIdWithA(data: BWithoutIdWithACreateInput!): BWithoutIdWithA!\n  createCWithIdWithA(data: CWithIdWithACreateInput!): CWithIdWithA!\n  createCWithoutIdWithA(data: CWithoutIdWithACreateInput!): CWithoutIdWithA!\n  createAWithIdWithB(data: AWithIdWithBCreateInput!): AWithIdWithB!\n  createAWithoutIdWithB(data: AWithoutIdWithBCreateInput!): AWithoutIdWithB!\n  createBWithIdWithB(data: BWithIdWithBCreateInput!): BWithIdWithB!\n  createBWithoutIdWithB(data: BWithoutIdWithBCreateInput!): BWithoutIdWithB!\n  createCWithIdWithB(data: CWithIdWithBCreateInput!): CWithIdWithB!\n  createCWithoutIdWithB(data: CWithoutIdWithBCreateInput!): CWithoutIdWithB!\n  createAWithIdWithC(data: AWithIdWithCCreateInput!): AWithIdWithC!\n  createAWithoutIdWithC(data: AWithoutIdWithCCreateInput!): AWithoutIdWithC!\n  createBWithIdWithC(data: BWithIdWithCCreateInput!): BWithIdWithC!\n  createBWithoutIdWithC(data: BWithoutIdWithCCreateInput!): BWithoutIdWithC!\n  createCWithIdWithC(data: CWithIdWithCCreateInput!): CWithIdWithC!\n  createCWithoutIdWithC(data: CWithoutIdWithCCreateInput!): CWithoutIdWithC!\n  createAWithA(data: AWithACreateInput!): AWithA!\n  createAWithB(data: AWithBCreateInput!): AWithB!\n  createAWithC(data: AWithCCreateInput!): AWithC!\n  createBWithA(data: BWithACreateInput!): BWithA!\n  createBWithB(data: BWithBCreateInput!): BWithB!\n  createBWithC(data: BWithCCreateInput!): BWithC!\n  createCWithA(data: CWithACreateInput!): CWithA!\n  createCWithB(data: CWithBCreateInput!): CWithB!\n  createCWithC(data: CWithCCreateInput!): CWithC!\n  updateAWithIdWithA(data: AWithIdWithAUpdateInput!, where: AWithIdWithAWhereUniqueInput!): AWithIdWithA\n  updateAWithoutIdWithA(data: AWithoutIdWithAUpdateInput!, where: AWithoutIdWithAWhereUniqueInput!): AWithoutIdWithA\n  updateBWithIdWithA(data: BWithIdWithAUpdateInput!, where: BWithIdWithAWhereUniqueInput!): BWithIdWithA\n  updateBWithoutIdWithA(data: BWithoutIdWithAUpdateInput!, where: BWithoutIdWithAWhereUniqueInput!): BWithoutIdWithA\n  updateCWithIdWithA(data: CWithIdWithAUpdateInput!, where: CWithIdWithAWhereUniqueInput!): CWithIdWithA\n  updateCWithoutIdWithA(data: CWithoutIdWithAUpdateInput!, where: CWithoutIdWithAWhereUniqueInput!): CWithoutIdWithA\n  updateAWithIdWithB(data: AWithIdWithBUpdateInput!, where: AWithIdWithBWhereUniqueInput!): AWithIdWithB\n  updateAWithoutIdWithB(data: AWithoutIdWithBUpdateInput!, where: AWithoutIdWithBWhereUniqueInput!): AWithoutIdWithB\n  updateBWithIdWithB(data: BWithIdWithBUpdateInput!, where: BWithIdWithBWhereUniqueInput!): BWithIdWithB\n  updateBWithoutIdWithB(data: BWithoutIdWithBUpdateInput!, where: BWithoutIdWithBWhereUniqueInput!): BWithoutIdWithB\n  updateCWithIdWithB(data: CWithIdWithBUpdateInput!, where: CWithIdWithBWhereUniqueInput!): CWithIdWithB\n  updateCWithoutIdWithB(data: CWithoutIdWithBUpdateInput!, where: CWithoutIdWithBWhereUniqueInput!): CWithoutIdWithB\n  updateAWithIdWithC(data: AWithIdWithCUpdateInput!, where: AWithIdWithCWhereUniqueInput!): AWithIdWithC\n  updateAWithoutIdWithC(data: AWithoutIdWithCUpdateInput!, where: AWithoutIdWithCWhereUniqueInput!): AWithoutIdWithC\n  updateBWithIdWithC(data: BWithIdWithCUpdateInput!, where: BWithIdWithCWhereUniqueInput!): BWithIdWithC\n  updateBWithoutIdWithC(data: BWithoutIdWithCUpdateInput!, where: BWithoutIdWithCWhereUniqueInput!): BWithoutIdWithC\n  updateCWithIdWithC(data: CWithIdWithCUpdateInput!, where: CWithIdWithCWhereUniqueInput!): CWithIdWithC\n  updateCWithoutIdWithC(data: CWithoutIdWithCUpdateInput!, where: CWithoutIdWithCWhereUniqueInput!): CWithoutIdWithC\n  updateAWithA(data: AWithAUpdateInput!, where: AWithAWhereUniqueInput!): AWithA\n  updateAWithB(data: AWithBUpdateInput!, where: AWithBWhereUniqueInput!): AWithB\n  updateAWithC(data: AWithCUpdateInput!, where: AWithCWhereUniqueInput!): AWithC\n  updateBWithA(data: BWithAUpdateInput!, where: BWithAWhereUniqueInput!): BWithA\n  updateBWithB(data: BWithBUpdateInput!, where: BWithBWhereUniqueInput!): BWithB\n  updateBWithC(data: BWithCUpdateInput!, where: BWithCWhereUniqueInput!): BWithC\n  updateCWithA(data: CWithAUpdateInput!, where: CWithAWhereUniqueInput!): CWithA\n  updateCWithB(data: CWithBUpdateInput!, where: CWithBWhereUniqueInput!): CWithB\n  updateCWithC(data: CWithCUpdateInput!, where: CWithCWhereUniqueInput!): CWithC\n  deleteAWithIdWithA(where: AWithIdWithAWhereUniqueInput!): AWithIdWithA\n  deleteAWithoutIdWithA(where: AWithoutIdWithAWhereUniqueInput!): AWithoutIdWithA\n  deleteBWithIdWithA(where: BWithIdWithAWhereUniqueInput!): BWithIdWithA\n  deleteBWithoutIdWithA(where: BWithoutIdWithAWhereUniqueInput!): BWithoutIdWithA\n  deleteCWithIdWithA(where: CWithIdWithAWhereUniqueInput!): CWithIdWithA\n  deleteCWithoutIdWithA(where: CWithoutIdWithAWhereUniqueInput!): CWithoutIdWithA\n  deleteAWithIdWithB(where: AWithIdWithBWhereUniqueInput!): AWithIdWithB\n  deleteAWithoutIdWithB(where: AWithoutIdWithBWhereUniqueInput!): AWithoutIdWithB\n  deleteBWithIdWithB(where: BWithIdWithBWhereUniqueInput!): BWithIdWithB\n  deleteBWithoutIdWithB(where: BWithoutIdWithBWhereUniqueInput!): BWithoutIdWithB\n  deleteCWithIdWithB(where: CWithIdWithBWhereUniqueInput!): CWithIdWithB\n  deleteCWithoutIdWithB(where: CWithoutIdWithBWhereUniqueInput!): CWithoutIdWithB\n  deleteAWithIdWithC(where: AWithIdWithCWhereUniqueInput!): AWithIdWithC\n  deleteAWithoutIdWithC(where: AWithoutIdWithCWhereUniqueInput!): AWithoutIdWithC\n  deleteBWithIdWithC(where: BWithIdWithCWhereUniqueInput!): BWithIdWithC\n  deleteBWithoutIdWithC(where: BWithoutIdWithCWhereUniqueInput!): BWithoutIdWithC\n  deleteCWithIdWithC(where: CWithIdWithCWhereUniqueInput!): CWithIdWithC\n  deleteCWithoutIdWithC(where: CWithoutIdWithCWhereUniqueInput!): CWithoutIdWithC\n  deleteAWithA(where: AWithAWhereUniqueInput!): AWithA\n  deleteAWithB(where: AWithBWhereUniqueInput!): AWithB\n  deleteAWithC(where: AWithCWhereUniqueInput!): AWithC\n  deleteBWithA(where: BWithAWhereUniqueInput!): BWithA\n  deleteBWithB(where: BWithBWhereUniqueInput!): BWithB\n  deleteBWithC(where: BWithCWhereUniqueInput!): BWithC\n  deleteCWithA(where: CWithAWhereUniqueInput!): CWithA\n  deleteCWithB(where: CWithBWhereUniqueInput!): CWithB\n  deleteCWithC(where: CWithCWhereUniqueInput!): CWithC\n  upsertAWithIdWithA(where: AWithIdWithAWhereUniqueInput!, create: AWithIdWithACreateInput!, update: AWithIdWithAUpdateInput!): AWithIdWithA!\n  upsertAWithoutIdWithA(where: AWithoutIdWithAWhereUniqueInput!, create: AWithoutIdWithACreateInput!, update: AWithoutIdWithAUpdateInput!): AWithoutIdWithA!\n  upsertBWithIdWithA(where: BWithIdWithAWhereUniqueInput!, create: BWithIdWithACreateInput!, update: BWithIdWithAUpdateInput!): BWithIdWithA!\n  upsertBWithoutIdWithA(where: BWithoutIdWithAWhereUniqueInput!, create: BWithoutIdWithACreateInput!, update: BWithoutIdWithAUpdateInput!): BWithoutIdWithA!\n  upsertCWithIdWithA(where: CWithIdWithAWhereUniqueInput!, create: CWithIdWithACreateInput!, update: CWithIdWithAUpdateInput!): CWithIdWithA!\n  upsertCWithoutIdWithA(where: CWithoutIdWithAWhereUniqueInput!, create: CWithoutIdWithACreateInput!, update: CWithoutIdWithAUpdateInput!): CWithoutIdWithA!\n  upsertAWithIdWithB(where: AWithIdWithBWhereUniqueInput!, create: AWithIdWithBCreateInput!, update: AWithIdWithBUpdateInput!): AWithIdWithB!\n  upsertAWithoutIdWithB(where: AWithoutIdWithBWhereUniqueInput!, create: AWithoutIdWithBCreateInput!, update: AWithoutIdWithBUpdateInput!): AWithoutIdWithB!\n  upsertBWithIdWithB(where: BWithIdWithBWhereUniqueInput!, create: BWithIdWithBCreateInput!, update: BWithIdWithBUpdateInput!): BWithIdWithB!\n  upsertBWithoutIdWithB(where: BWithoutIdWithBWhereUniqueInput!, create: BWithoutIdWithBCreateInput!, update: BWithoutIdWithBUpdateInput!): BWithoutIdWithB!\n  upsertCWithIdWithB(where: CWithIdWithBWhereUniqueInput!, create: CWithIdWithBCreateInput!, update: CWithIdWithBUpdateInput!): CWithIdWithB!\n  upsertCWithoutIdWithB(where: CWithoutIdWithBWhereUniqueInput!, create: CWithoutIdWithBCreateInput!, update: CWithoutIdWithBUpdateInput!): CWithoutIdWithB!\n  upsertAWithIdWithC(where: AWithIdWithCWhereUniqueInput!, create: AWithIdWithCCreateInput!, update: AWithIdWithCUpdateInput!): AWithIdWithC!\n  upsertAWithoutIdWithC(where: AWithoutIdWithCWhereUniqueInput!, create: AWithoutIdWithCCreateInput!, update: AWithoutIdWithCUpdateInput!): AWithoutIdWithC!\n  upsertBWithIdWithC(where: BWithIdWithCWhereUniqueInput!, create: BWithIdWithCCreateInput!, update: BWithIdWithCUpdateInput!): BWithIdWithC!\n  upsertBWithoutIdWithC(where: BWithoutIdWithCWhereUniqueInput!, create: BWithoutIdWithCCreateInput!, update: BWithoutIdWithCUpdateInput!): BWithoutIdWithC!\n  upsertCWithIdWithC(where: CWithIdWithCWhereUniqueInput!, create: CWithIdWithCCreateInput!, update: CWithIdWithCUpdateInput!): CWithIdWithC!\n  upsertCWithoutIdWithC(where: CWithoutIdWithCWhereUniqueInput!, create: CWithoutIdWithCCreateInput!, update: CWithoutIdWithCUpdateInput!): CWithoutIdWithC!\n  upsertAWithA(where: AWithAWhereUniqueInput!, create: AWithACreateInput!, update: AWithAUpdateInput!): AWithA!\n  upsertAWithB(where: AWithBWhereUniqueInput!, create: AWithBCreateInput!, update: AWithBUpdateInput!): AWithB!\n  upsertAWithC(where: AWithCWhereUniqueInput!, create: AWithCCreateInput!, update: AWithCUpdateInput!): AWithC!\n  upsertBWithA(where: BWithAWhereUniqueInput!, create: BWithACreateInput!, update: BWithAUpdateInput!): BWithA!\n  upsertBWithB(where: BWithBWhereUniqueInput!, create: BWithBCreateInput!, update: BWithBUpdateInput!): BWithB!\n  upsertBWithC(where: BWithCWhereUniqueInput!, create: BWithCCreateInput!, update: BWithCUpdateInput!): BWithC!\n  upsertCWithA(where: CWithAWhereUniqueInput!, create: CWithACreateInput!, update: CWithAUpdateInput!): CWithA!\n  upsertCWithB(where: CWithBWhereUniqueInput!, create: CWithBCreateInput!, update: CWithBUpdateInput!): CWithB!\n  upsertCWithC(where: CWithCWhereUniqueInput!, create: CWithCCreateInput!, update: CWithCUpdateInput!): CWithC!\n  updateManyAWithIdWithAs(data: AWithIdWithAUpdateManyMutationInput!, where: AWithIdWithAWhereInput): BatchPayload!\n  updateManyAWithoutIdWithAs(data: AWithoutIdWithAUpdateManyMutationInput!, where: AWithoutIdWithAWhereInput): BatchPayload!\n  updateManyBWithIdWithAs(data: BWithIdWithAUpdateManyMutationInput!, where: BWithIdWithAWhereInput): BatchPayload!\n  updateManyBWithoutIdWithAs(data: BWithoutIdWithAUpdateManyMutationInput!, where: BWithoutIdWithAWhereInput): BatchPayload!\n  updateManyCWithIdWithAs(data: CWithIdWithAUpdateManyMutationInput!, where: CWithIdWithAWhereInput): BatchPayload!\n  updateManyCWithoutIdWithAs(data: CWithoutIdWithAUpdateManyMutationInput!, where: CWithoutIdWithAWhereInput): BatchPayload!\n  updateManyAWithIdWithBs(data: AWithIdWithBUpdateManyMutationInput!, where: AWithIdWithBWhereInput): BatchPayload!\n  updateManyAWithoutIdWithBs(data: AWithoutIdWithBUpdateManyMutationInput!, where: AWithoutIdWithBWhereInput): BatchPayload!\n  updateManyBWithIdWithBs(data: BWithIdWithBUpdateManyMutationInput!, where: BWithIdWithBWhereInput): BatchPayload!\n  updateManyBWithoutIdWithBs(data: BWithoutIdWithBUpdateManyMutationInput!, where: BWithoutIdWithBWhereInput): BatchPayload!\n  updateManyCWithIdWithBs(data: CWithIdWithBUpdateManyMutationInput!, where: CWithIdWithBWhereInput): BatchPayload!\n  updateManyCWithoutIdWithBs(data: CWithoutIdWithBUpdateManyMutationInput!, where: CWithoutIdWithBWhereInput): BatchPayload!\n  updateManyAWithIdWithCs(data: AWithIdWithCUpdateManyMutationInput!, where: AWithIdWithCWhereInput): BatchPayload!\n  updateManyAWithoutIdWithCs(data: AWithoutIdWithCUpdateManyMutationInput!, where: AWithoutIdWithCWhereInput): BatchPayload!\n  updateManyBWithIdWithCs(data: BWithIdWithCUpdateManyMutationInput!, where: BWithIdWithCWhereInput): BatchPayload!\n  updateManyBWithoutIdWithCs(data: BWithoutIdWithCUpdateManyMutationInput!, where: BWithoutIdWithCWhereInput): BatchPayload!\n  updateManyCWithIdWithCs(data: CWithIdWithCUpdateManyMutationInput!, where: CWithIdWithCWhereInput): BatchPayload!\n  updateManyCWithoutIdWithCs(data: CWithoutIdWithCUpdateManyMutationInput!, where: CWithoutIdWithCWhereInput): BatchPayload!\n  deleteManyAWithIdWithAs(where: AWithIdWithAWhereInput): BatchPayload!\n  deleteManyAWithoutIdWithAs(where: AWithoutIdWithAWhereInput): BatchPayload!\n  deleteManyBWithIdWithAs(where: BWithIdWithAWhereInput): BatchPayload!\n  deleteManyBWithoutIdWithAs(where: BWithoutIdWithAWhereInput): BatchPayload!\n  deleteManyCWithIdWithAs(where: CWithIdWithAWhereInput): BatchPayload!\n  deleteManyCWithoutIdWithAs(where: CWithoutIdWithAWhereInput): BatchPayload!\n  deleteManyAWithIdWithBs(where: AWithIdWithBWhereInput): BatchPayload!\n  deleteManyAWithoutIdWithBs(where: AWithoutIdWithBWhereInput): BatchPayload!\n  deleteManyBWithIdWithBs(where: BWithIdWithBWhereInput): BatchPayload!\n  deleteManyBWithoutIdWithBs(where: BWithoutIdWithBWhereInput): BatchPayload!\n  deleteManyCWithIdWithBs(where: CWithIdWithBWhereInput): BatchPayload!\n  deleteManyCWithoutIdWithBs(where: CWithoutIdWithBWhereInput): BatchPayload!\n  deleteManyAWithIdWithCs(where: AWithIdWithCWhereInput): BatchPayload!\n  deleteManyAWithoutIdWithCs(where: AWithoutIdWithCWhereInput): BatchPayload!\n  deleteManyBWithIdWithCs(where: BWithIdWithCWhereInput): BatchPayload!\n  deleteManyBWithoutIdWithCs(where: BWithoutIdWithCWhereInput): BatchPayload!\n  deleteManyCWithIdWithCs(where: CWithIdWithCWhereInput): BatchPayload!\n  deleteManyCWithoutIdWithCs(where: CWithoutIdWithCWhereInput): BatchPayload!\n  deleteManyAWithAs(where: AWithAWhereInput): BatchPayload!\n  deleteManyAWithBs(where: AWithBWhereInput): BatchPayload!\n  deleteManyAWithCs(where: AWithCWhereInput): BatchPayload!\n  deleteManyBWithAs(where: BWithAWhereInput): BatchPayload!\n  deleteManyBWithBs(where: BWithBWhereInput): BatchPayload!\n  deleteManyBWithCs(where: BWithCWhereInput): BatchPayload!\n  deleteManyCWithAs(where: CWithAWhereInput): BatchPayload!\n  deleteManyCWithBs(where: CWithBWhereInput): BatchPayload!\n  deleteManyCWithCs(where: CWithCWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  aWithIdWithAs(where: AWithIdWithAWhereInput, orderBy: AWithIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithIdWithA]!\n  aWithoutIdWithAs(where: AWithoutIdWithAWhereInput, orderBy: AWithoutIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithoutIdWithA]!\n  bWithIdWithAs(where: BWithIdWithAWhereInput, orderBy: BWithIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithIdWithA]!\n  bWithoutIdWithAs(where: BWithoutIdWithAWhereInput, orderBy: BWithoutIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithoutIdWithA]!\n  cWithIdWithAs(where: CWithIdWithAWhereInput, orderBy: CWithIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithIdWithA]!\n  cWithoutIdWithAs(where: CWithoutIdWithAWhereInput, orderBy: CWithoutIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithoutIdWithA]!\n  aWithIdWithBs(where: AWithIdWithBWhereInput, orderBy: AWithIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithIdWithB]!\n  aWithoutIdWithBs(where: AWithoutIdWithBWhereInput, orderBy: AWithoutIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithoutIdWithB]!\n  bWithIdWithBs(where: BWithIdWithBWhereInput, orderBy: BWithIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithIdWithB]!\n  bWithoutIdWithBs(where: BWithoutIdWithBWhereInput, orderBy: BWithoutIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithoutIdWithB]!\n  cWithIdWithBs(where: CWithIdWithBWhereInput, orderBy: CWithIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithIdWithB]!\n  cWithoutIdWithBs(where: CWithoutIdWithBWhereInput, orderBy: CWithoutIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithoutIdWithB]!\n  aWithIdWithCs(where: AWithIdWithCWhereInput, orderBy: AWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithIdWithC]!\n  aWithoutIdWithCs(where: AWithoutIdWithCWhereInput, orderBy: AWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithoutIdWithC]!\n  bWithIdWithCs(where: BWithIdWithCWhereInput, orderBy: BWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithIdWithC]!\n  bWithoutIdWithCs(where: BWithoutIdWithCWhereInput, orderBy: BWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithoutIdWithC]!\n  cWithIdWithCs(where: CWithIdWithCWhereInput, orderBy: CWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithIdWithC]!\n  cWithoutIdWithCs(where: CWithoutIdWithCWhereInput, orderBy: CWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithoutIdWithC]!\n  aWithAs(where: AWithAWhereInput, orderBy: AWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithA]!\n  aWithBs(where: AWithBWhereInput, orderBy: AWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithB]!\n  aWithCs(where: AWithCWhereInput, orderBy: AWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithC]!\n  bWithAs(where: BWithAWhereInput, orderBy: BWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithA]!\n  bWithBs(where: BWithBWhereInput, orderBy: BWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithB]!\n  bWithCs(where: BWithCWhereInput, orderBy: BWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithC]!\n  cWithAs(where: CWithAWhereInput, orderBy: CWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithA]!\n  cWithBs(where: CWithBWhereInput, orderBy: CWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithB]!\n  cWithCs(where: CWithCWhereInput, orderBy: CWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithC]!\n  aWithIdWithA(where: AWithIdWithAWhereUniqueInput!): AWithIdWithA\n  aWithoutIdWithA(where: AWithoutIdWithAWhereUniqueInput!): AWithoutIdWithA\n  bWithIdWithA(where: BWithIdWithAWhereUniqueInput!): BWithIdWithA\n  bWithoutIdWithA(where: BWithoutIdWithAWhereUniqueInput!): BWithoutIdWithA\n  cWithIdWithA(where: CWithIdWithAWhereUniqueInput!): CWithIdWithA\n  cWithoutIdWithA(where: CWithoutIdWithAWhereUniqueInput!): CWithoutIdWithA\n  aWithIdWithB(where: AWithIdWithBWhereUniqueInput!): AWithIdWithB\n  aWithoutIdWithB(where: AWithoutIdWithBWhereUniqueInput!): AWithoutIdWithB\n  bWithIdWithB(where: BWithIdWithBWhereUniqueInput!): BWithIdWithB\n  bWithoutIdWithB(where: BWithoutIdWithBWhereUniqueInput!): BWithoutIdWithB\n  cWithIdWithB(where: CWithIdWithBWhereUniqueInput!): CWithIdWithB\n  cWithoutIdWithB(where: CWithoutIdWithBWhereUniqueInput!): CWithoutIdWithB\n  aWithIdWithC(where: AWithIdWithCWhereUniqueInput!): AWithIdWithC\n  aWithoutIdWithC(where: AWithoutIdWithCWhereUniqueInput!): AWithoutIdWithC\n  bWithIdWithC(where: BWithIdWithCWhereUniqueInput!): BWithIdWithC\n  bWithoutIdWithC(where: BWithoutIdWithCWhereUniqueInput!): BWithoutIdWithC\n  cWithIdWithC(where: CWithIdWithCWhereUniqueInput!): CWithIdWithC\n  cWithoutIdWithC(where: CWithoutIdWithCWhereUniqueInput!): CWithoutIdWithC\n  aWithA(where: AWithAWhereUniqueInput!): AWithA\n  aWithB(where: AWithBWhereUniqueInput!): AWithB\n  aWithC(where: AWithCWhereUniqueInput!): AWithC\n  bWithA(where: BWithAWhereUniqueInput!): BWithA\n  bWithB(where: BWithBWhereUniqueInput!): BWithB\n  bWithC(where: BWithCWhereUniqueInput!): BWithC\n  cWithA(where: CWithAWhereUniqueInput!): CWithA\n  cWithB(where: CWithBWhereUniqueInput!): CWithB\n  cWithC(where: CWithCWhereUniqueInput!): CWithC\n  aWithIdWithAsConnection(where: AWithIdWithAWhereInput, orderBy: AWithIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithIdWithAConnection!\n  aWithoutIdWithAsConnection(where: AWithoutIdWithAWhereInput, orderBy: AWithoutIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithoutIdWithAConnection!\n  bWithIdWithAsConnection(where: BWithIdWithAWhereInput, orderBy: BWithIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithIdWithAConnection!\n  bWithoutIdWithAsConnection(where: BWithoutIdWithAWhereInput, orderBy: BWithoutIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithoutIdWithAConnection!\n  cWithIdWithAsConnection(where: CWithIdWithAWhereInput, orderBy: CWithIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithIdWithAConnection!\n  cWithoutIdWithAsConnection(where: CWithoutIdWithAWhereInput, orderBy: CWithoutIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithoutIdWithAConnection!\n  aWithIdWithBsConnection(where: AWithIdWithBWhereInput, orderBy: AWithIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithIdWithBConnection!\n  aWithoutIdWithBsConnection(where: AWithoutIdWithBWhereInput, orderBy: AWithoutIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithoutIdWithBConnection!\n  bWithIdWithBsConnection(where: BWithIdWithBWhereInput, orderBy: BWithIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithIdWithBConnection!\n  bWithoutIdWithBsConnection(where: BWithoutIdWithBWhereInput, orderBy: BWithoutIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithoutIdWithBConnection!\n  cWithIdWithBsConnection(where: CWithIdWithBWhereInput, orderBy: CWithIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithIdWithBConnection!\n  cWithoutIdWithBsConnection(where: CWithoutIdWithBWhereInput, orderBy: CWithoutIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithoutIdWithBConnection!\n  aWithIdWithCsConnection(where: AWithIdWithCWhereInput, orderBy: AWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithIdWithCConnection!\n  aWithoutIdWithCsConnection(where: AWithoutIdWithCWhereInput, orderBy: AWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithoutIdWithCConnection!\n  bWithIdWithCsConnection(where: BWithIdWithCWhereInput, orderBy: BWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithIdWithCConnection!\n  bWithoutIdWithCsConnection(where: BWithoutIdWithCWhereInput, orderBy: BWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithoutIdWithCConnection!\n  cWithIdWithCsConnection(where: CWithIdWithCWhereInput, orderBy: CWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithIdWithCConnection!\n  cWithoutIdWithCsConnection(where: CWithoutIdWithCWhereInput, orderBy: CWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithoutIdWithCConnection!\n  aWithAsConnection(where: AWithAWhereInput, orderBy: AWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithAConnection!\n  aWithBsConnection(where: AWithBWhereInput, orderBy: AWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithBConnection!\n  aWithCsConnection(where: AWithCWhereInput, orderBy: AWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithCConnection!\n  bWithAsConnection(where: BWithAWhereInput, orderBy: BWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithAConnection!\n  bWithBsConnection(where: BWithBWhereInput, orderBy: BWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithBConnection!\n  bWithCsConnection(where: BWithCWhereInput, orderBy: BWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithCConnection!\n  cWithAsConnection(where: CWithAWhereInput, orderBy: CWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithAConnection!\n  cWithBsConnection(where: CWithBWhereInput, orderBy: CWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithBConnection!\n  cWithCsConnection(where: CWithCWhereInput, orderBy: CWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithCConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  aWithIdWithA(where: AWithIdWithASubscriptionWhereInput): AWithIdWithASubscriptionPayload\n  aWithoutIdWithA(where: AWithoutIdWithASubscriptionWhereInput): AWithoutIdWithASubscriptionPayload\n  bWithIdWithA(where: BWithIdWithASubscriptionWhereInput): BWithIdWithASubscriptionPayload\n  bWithoutIdWithA(where: BWithoutIdWithASubscriptionWhereInput): BWithoutIdWithASubscriptionPayload\n  cWithIdWithA(where: CWithIdWithASubscriptionWhereInput): CWithIdWithASubscriptionPayload\n  cWithoutIdWithA(where: CWithoutIdWithASubscriptionWhereInput): CWithoutIdWithASubscriptionPayload\n  aWithIdWithB(where: AWithIdWithBSubscriptionWhereInput): AWithIdWithBSubscriptionPayload\n  aWithoutIdWithB(where: AWithoutIdWithBSubscriptionWhereInput): AWithoutIdWithBSubscriptionPayload\n  bWithIdWithB(where: BWithIdWithBSubscriptionWhereInput): BWithIdWithBSubscriptionPayload\n  bWithoutIdWithB(where: BWithoutIdWithBSubscriptionWhereInput): BWithoutIdWithBSubscriptionPayload\n  cWithIdWithB(where: CWithIdWithBSubscriptionWhereInput): CWithIdWithBSubscriptionPayload\n  cWithoutIdWithB(where: CWithoutIdWithBSubscriptionWhereInput): CWithoutIdWithBSubscriptionPayload\n  aWithIdWithC(where: AWithIdWithCSubscriptionWhereInput): AWithIdWithCSubscriptionPayload\n  aWithoutIdWithC(where: AWithoutIdWithCSubscriptionWhereInput): AWithoutIdWithCSubscriptionPayload\n  bWithIdWithC(where: BWithIdWithCSubscriptionWhereInput): BWithIdWithCSubscriptionPayload\n  bWithoutIdWithC(where: BWithoutIdWithCSubscriptionWhereInput): BWithoutIdWithCSubscriptionPayload\n  cWithIdWithC(where: CWithIdWithCSubscriptionWhereInput): CWithIdWithCSubscriptionPayload\n  cWithoutIdWithC(where: CWithoutIdWithCSubscriptionWhereInput): CWithoutIdWithCSubscriptionPayload\n  aWithA(where: AWithASubscriptionWhereInput): AWithASubscriptionPayload\n  aWithB(where: AWithBSubscriptionWhereInput): AWithBSubscriptionPayload\n  aWithC(where: AWithCSubscriptionWhereInput): AWithCSubscriptionPayload\n  bWithA(where: BWithASubscriptionWhereInput): BWithASubscriptionPayload\n  bWithB(where: BWithBSubscriptionWhereInput): BWithBSubscriptionPayload\n  bWithC(where: BWithCSubscriptionWhereInput): BWithCSubscriptionPayload\n  cWithA(where: CWithASubscriptionWhereInput): CWithASubscriptionPayload\n  cWithB(where: CWithBSubscriptionWhereInput): CWithBSubscriptionPayload\n  cWithC(where: CWithCSubscriptionWhereInput): CWithCSubscriptionPayload\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 167,
      "containsCycle": true,
      "numDefinitions": 563
    },
    {
      "name": "schema.graphql",
      "path": "client/src/codegen/fixtures/schema.graphql",
      "sha": "b36abefdcb39df2ce0bd7d843f6c879a53de0560",
      "url": "https://api.github.com/repositories/162263047/contents/client/src/codegen/fixtures/schema.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/b36abefdcb39df2ce0bd7d843f6c879a53de0560",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/client/src/codegen/fixtures/schema.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Post implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  isPublished: Boolean!\n  title: String!\n  text: String!\n  author: User!\n}\n\ntype User implements Node {\n  id: ID!\n  email: String!\n  password: String!\n  name: String!\n  posts(\n    where: PostWhereInput\n    orderBy: PostOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [Post!]\n}\n\n#\n# Other Types\n#\n\ntype AggregatePost {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\nscalar DateTime\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createPost(data: PostCreateInput!): Post!\n  createUser(data: UserCreateInput!): User!\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deletePost(where: PostWhereUniqueInput!): Post\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertPost(\n    where: PostWhereUniqueInput!\n    create: PostCreateInput!\n    update: PostUpdateInput!\n  ): Post!\n  upsertUser(\n    where: UserWhereUniqueInput!\n    create: UserCreateInput!\n    update: UserUpdateInput!\n  ): User!\n  updateManyPosts(data: PostUpdateInput!, where: PostWhereInput!): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!\n  deleteManyPosts(where: PostWhereInput!): BatchPayload!\n  deleteManyUsers(where: UserWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PostConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  isPublished: Boolean\n  title: String!\n  text: String!\n  author: UserCreateOneWithoutPostsInput!\n}\n\ninput PostCreateManyWithoutAuthorInput {\n  create: [PostCreateWithoutAuthorInput!]\n  connect: [PostWhereUniqueInput!]\n}\n\ninput PostCreateWithoutAuthorInput {\n  isPublished: Boolean\n  title: String!\n  text: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PostEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Post!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  isPublished_ASC\n  isPublished_DESC\n  title_ASC\n  title_DESC\n  text_ASC\n  text_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  isPublished: Boolean!\n  title: String!\n  text: String!\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n}\n\ninput PostUpdateInput {\n  isPublished: Boolean\n  title: String\n  text: String\n  author: UserUpdateOneWithoutPostsInput\n}\n\ninput PostUpdateManyWithoutAuthorInput {\n  create: [PostCreateWithoutAuthorInput!]\n  connect: [PostWhereUniqueInput!]\n  disconnect: [PostWhereUniqueInput!]\n  delete: [PostWhereUniqueInput!]\n  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]\n  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]\n}\n\ninput PostUpdateWithoutAuthorDataInput {\n  isPublished: Boolean\n  title: String\n  text: String\n}\n\ninput PostUpdateWithWhereUniqueWithoutAuthorInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutAuthorDataInput!\n}\n\ninput PostUpsertWithWhereUniqueWithoutAuthorInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutAuthorDataInput!\n  create: PostCreateWithoutAuthorInput!\n}\n\ninput PostWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  isPublished: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isPublished_not: Boolean\n  title: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  title_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  title_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  title_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  title_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  title_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  title_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  title_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  title_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  title_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  title_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  title_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  title_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  title_not_ends_with: String\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n  author: UserWhereInput\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  posts(\n    where: PostWhereInput\n    orderBy: PostOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [Post]!\n  users(\n    where: UserWhereInput\n    orderBy: UserOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [User]!\n  post(where: PostWhereUniqueInput!): Post\n  user(where: UserWhereUniqueInput!): User\n  postsConnection(\n    where: PostWhereInput\n    orderBy: PostOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): PostConnection!\n  usersConnection(\n    where: UserWhereInput\n    orderBy: UserOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): UserConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  password: String!\n  name: String!\n  posts: PostCreateManyWithoutAuthorInput\n}\n\ninput UserCreateOneWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutPostsInput {\n  email: String!\n  password: String!\n  name: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  password: String!\n  name: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  email: String\n  password: String\n  name: String\n  posts: PostUpdateManyWithoutAuthorInput\n}\n\ninput UserUpdateOneWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutPostsDataInput\n  upsert: UserUpsertWithoutPostsInput\n}\n\ninput UserUpdateWithoutPostsDataInput {\n  email: String\n  password: String\n  name: String\n}\n\ninput UserUpsertWithoutPostsInput {\n  update: UserUpdateWithoutPostsDataInput!\n  create: UserCreateWithoutPostsInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  password: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  password_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  password_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  password_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  password_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  password_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  password_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  password_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  password_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  password_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  password_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  password_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  password_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  password_not_ends_with: String\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  posts_every: PostWhereInput\n  posts_some: PostWhereInput\n  posts_none: PostWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 44
    },
    {
      "name": "relational.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/meshRelation/relational.graphql",
      "sha": "aa2098ab5a13489a0b70dfd1e4bb5f2c3dd785e8",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/meshRelation/relational.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/aa2098ab5a13489a0b70dfd1e4bb5f2c3dd785e8",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/meshRelation/relational.graphql",
      "content": "type A {\n  field: Int!\n  a: A!\n  b(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B!]\n  c: C\n  e(where: EWhereInput, orderBy: EOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [E!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AEdge]!\n  aggregate: AggregateA!\n}\n\ninput ACreateInput {\n  field: Int!\n  a: ACreateOneInput!\n  b: BCreateManyWithoutAInput\n  c: CCreateOneWithoutAInput\n  e: ECreateManyWithoutAInput\n}\n\ninput ACreateOneInput {\n  create: ACreateInput\n}\n\ninput ACreateOneWithoutBInput {\n  create: ACreateWithoutBInput\n}\n\ninput ACreateOneWithoutCInput {\n  create: ACreateWithoutCInput\n}\n\ninput ACreateOneWithoutEInput {\n  create: ACreateWithoutEInput\n}\n\ninput ACreateWithoutBInput {\n  field: Int!\n  a: ACreateOneInput!\n  c: CCreateOneWithoutAInput\n  e: ECreateManyWithoutAInput\n}\n\ninput ACreateWithoutCInput {\n  field: Int!\n  a: ACreateOneInput!\n  b: BCreateManyWithoutAInput\n  e: ECreateManyWithoutAInput\n}\n\ninput ACreateWithoutEInput {\n  field: Int!\n  a: ACreateOneInput!\n  b: BCreateManyWithoutAInput\n  c: CCreateOneWithoutAInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: A!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\ntype AggregateA {\n  count: Int!\n}\n\ntype AggregateB {\n  count: Int!\n}\n\ntype AggregateC {\n  count: Int!\n}\n\ntype AggregateD {\n  count: Int!\n}\n\ntype AggregateE {\n  count: Int!\n}\n\nenum AOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype APreviousValues {\n  field: Int!\n}\n\ntype ASubscriptionPayload {\n  mutation: MutationType!\n  node: A\n  updatedFields: [String!]\n  previousValues: APreviousValues\n}\n\ninput ASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWhereInput\n}\n\ninput AUpdateManyMutationInput {\n  field: Int\n}\n\ninput AWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWhereInput!]\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n  a: AWhereInput\n  b_every: BWhereInput\n  b_some: BWhereInput\n  b_none: BWhereInput\n  c: CWhereInput\n  e_every: EWhereInput\n  e_some: EWhereInput\n  e_none: EWhereInput\n}\n\ntype B {\n  field: [String!]!\n  c: C\n  b(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B!]\n  a: A!\n  c2: C\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BEdge]!\n  aggregate: AggregateB!\n}\n\ninput BCreatefieldInput {\n  set: [String!]\n}\n\ninput BCreateInput {\n  field: BCreatefieldInput\n  c: CCreateOneWithoutBInput\n  b: BCreateManyInput\n  a: ACreateOneWithoutBInput!\n  c2: CCreateOneWithoutB2Input\n}\n\ninput BCreateManyInput {\n  create: [BCreateInput!]\n}\n\ninput BCreateManyWithoutAInput {\n  create: [BCreateWithoutAInput!]\n}\n\ninput BCreateManyWithoutCInput {\n  create: [BCreateWithoutCInput!]\n}\n\ninput BCreateOneInput {\n  create: BCreateInput\n}\n\ninput BCreateOneWithoutC2Input {\n  create: BCreateWithoutC2Input\n}\n\ninput BCreateWithoutAInput {\n  field: BCreatefieldInput\n  c: CCreateOneWithoutBInput\n  b: BCreateManyInput\n  c2: CCreateOneWithoutB2Input\n}\n\ninput BCreateWithoutC2Input {\n  field: BCreatefieldInput\n  c: CCreateOneWithoutBInput\n  b: BCreateManyInput\n  a: ACreateOneWithoutBInput!\n}\n\ninput BCreateWithoutCInput {\n  field: BCreatefieldInput\n  b: BCreateManyInput\n  a: ACreateOneWithoutBInput!\n  c2: CCreateOneWithoutB2Input\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: B!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BPreviousValues {\n  field: [String!]!\n}\n\ntype BSubscriptionPayload {\n  mutation: MutationType!\n  node: B\n  updatedFields: [String!]\n  previousValues: BPreviousValues\n}\n\ninput BSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWhereInput\n}\n\ninput BUpdatefieldInput {\n  set: [String!]\n}\n\ninput BUpdateManyMutationInput {\n  field: BUpdatefieldInput\n}\n\ninput BWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWhereInput!]\n  c: CWhereInput\n  b_every: BWhereInput\n  b_some: BWhereInput\n  b_none: BWhereInput\n  a: AWhereInput\n  c2: CWhereInput\n}\n\ntype C {\n  expirationDate: DateTime\n  c: C!\n  b(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B!]\n  a: A\n  b2: B\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CEdge]!\n  aggregate: AggregateC!\n}\n\ninput CCreateInput {\n  expirationDate: DateTime\n  c: CCreateOneInput!\n  b: BCreateManyWithoutCInput\n  a: ACreateOneWithoutCInput\n  b2: BCreateOneWithoutC2Input\n}\n\ninput CCreateOneInput {\n  create: CCreateInput\n}\n\ninput CCreateOneWithoutAInput {\n  create: CCreateWithoutAInput\n}\n\ninput CCreateOneWithoutB2Input {\n  create: CCreateWithoutB2Input\n}\n\ninput CCreateOneWithoutBInput {\n  create: CCreateWithoutBInput\n}\n\ninput CCreateWithoutAInput {\n  expirationDate: DateTime\n  c: CCreateOneInput!\n  b: BCreateManyWithoutCInput\n  b2: BCreateOneWithoutC2Input\n}\n\ninput CCreateWithoutB2Input {\n  expirationDate: DateTime\n  c: CCreateOneInput!\n  b: BCreateManyWithoutCInput\n  a: ACreateOneWithoutCInput\n}\n\ninput CCreateWithoutBInput {\n  expirationDate: DateTime\n  c: CCreateOneInput!\n  a: ACreateOneWithoutCInput\n  b2: BCreateOneWithoutC2Input\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: C!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum COrderByInput {\n  expirationDate_ASC\n  expirationDate_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CPreviousValues {\n  expirationDate: DateTime\n}\n\ntype CSubscriptionPayload {\n  mutation: MutationType!\n  node: C\n  updatedFields: [String!]\n  previousValues: CPreviousValues\n}\n\ninput CSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWhereInput\n}\n\ninput CUpdateManyMutationInput {\n  expirationDate: DateTime\n}\n\ninput CWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWhereInput!]\n  expirationDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  expirationDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  expirationDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  expirationDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  expirationDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  expirationDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  expirationDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  expirationDate_gte: DateTime\n  c: CWhereInput\n  b_every: BWhereInput\n  b_some: BWhereInput\n  b_none: BWhereInput\n  a: AWhereInput\n  b2: BWhereInput\n}\n\ntype D {\n  field: Json\n  c: C!\n  b: B!\n  a: A!\n  d(where: DWhereInput, orderBy: DOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [D!]\n}\n\nscalar DateTime\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype DConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [DEdge]!\n  aggregate: AggregateD!\n}\n\ninput DCreateInput {\n  field: Json\n  c: CCreateOneInput!\n  b: BCreateOneInput!\n  a: ACreateOneInput!\n  d: DCreateManyInput\n}\n\ninput DCreateManyInput {\n  create: [DCreateInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype DEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: D!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum DOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype DPreviousValues {\n  field: Json\n}\n\ntype DSubscriptionPayload {\n  mutation: MutationType!\n  node: D\n  updatedFields: [String!]\n  previousValues: DPreviousValues\n}\n\ninput DSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [DSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [DSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [DSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: DWhereInput\n}\n\ninput DUpdateManyMutationInput {\n  field: Json\n}\n\ninput DWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [DWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [DWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [DWhereInput!]\n  c: CWhereInput\n  b: BWhereInput\n  a: AWhereInput\n  d_every: DWhereInput\n  d_some: DWhereInput\n  d_none: DWhereInput\n}\n\ntype E {\n  field: Json\n  a: A!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype EConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [EEdge]!\n  aggregate: AggregateE!\n}\n\ninput ECreateInput {\n  field: Json\n  a: ACreateOneWithoutEInput!\n}\n\ninput ECreateManyWithoutAInput {\n  create: [ECreateWithoutAInput!]\n}\n\ninput ECreateWithoutAInput {\n  field: Json\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype EEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: E!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum EOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype EPreviousValues {\n  field: Json\n}\n\ntype ESubscriptionPayload {\n  mutation: MutationType!\n  node: E\n  updatedFields: [String!]\n  previousValues: EPreviousValues\n}\n\ninput ESubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ESubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ESubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ESubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: EWhereInput\n}\n\ninput EUpdateManyMutationInput {\n  field: Json\n}\n\ninput EWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [EWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [EWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [EWhereInput!]\n  a: AWhereInput\n}\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createE(data: ECreateInput!): E!\n  createD(data: DCreateInput!): D!\n  createA(data: ACreateInput!): A!\n  createC(data: CCreateInput!): C!\n  createB(data: BCreateInput!): B!\n  updateManyEs(data: EUpdateManyMutationInput!, where: EWhereInput): BatchPayload!\n  updateManyDs(data: DUpdateManyMutationInput!, where: DWhereInput): BatchPayload!\n  updateManyAs(data: AUpdateManyMutationInput!, where: AWhereInput): BatchPayload!\n  updateManyCs(data: CUpdateManyMutationInput!, where: CWhereInput): BatchPayload!\n  updateManyBs(data: BUpdateManyMutationInput!, where: BWhereInput): BatchPayload!\n  deleteManyEs(where: EWhereInput): BatchPayload!\n  deleteManyDs(where: DWhereInput): BatchPayload!\n  deleteManyAs(where: AWhereInput): BatchPayload!\n  deleteManyCs(where: CWhereInput): BatchPayload!\n  deleteManyBs(where: BWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  es(where: EWhereInput, orderBy: EOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [E]!\n  ds(where: DWhereInput, orderBy: DOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [D]!\n  as(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A]!\n  cs(where: CWhereInput, orderBy: COrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [C]!\n  bs(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B]!\n  esConnection(where: EWhereInput, orderBy: EOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EConnection!\n  dsConnection(where: DWhereInput, orderBy: DOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DConnection!\n  asConnection(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AConnection!\n  csConnection(where: CWhereInput, orderBy: COrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CConnection!\n  bsConnection(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  e(where: ESubscriptionWhereInput): ESubscriptionPayload\n  d(where: DSubscriptionWhereInput): DSubscriptionPayload\n  a(where: ASubscriptionWhereInput): ASubscriptionPayload\n  c(where: CSubscriptionWhereInput): CSubscriptionPayload\n  b(where: BSubscriptionWhereInput): BSubscriptionPayload\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 92
    },
    {
      "name": "document.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/relationNames/document.graphql",
      "sha": "66015eaed771b7dc32fc504bb18d281f5595b3b9",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/relationNames/document.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/66015eaed771b7dc32fc504bb18d281f5595b3b9",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/relationNames/document.graphql",
      "content": "type A implements Node {\n  toB: B!\n  toB2: B!\n  toC: C\n  id: ID!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AEdge]!\n  aggregate: AggregateA!\n}\n\ninput ACreateInput {\n  toB: BCreateOneWithoutToAInput!\n  toB2: BCreateOneWithoutToA2Input!\n  toC: CCreateOneWithoutToAInput\n}\n\ninput ACreateManyWithoutToCInput {\n  create: [ACreateWithoutToCInput!]\n  connect: [AWhereUniqueInput!]\n}\n\ninput ACreateOneWithoutToB2Input {\n  create: ACreateWithoutToB2Input\n  connect: AWhereUniqueInput\n}\n\ninput ACreateOneWithoutToBInput {\n  create: ACreateWithoutToBInput\n  connect: AWhereUniqueInput\n}\n\ninput ACreateWithoutToB2Input {\n  toB: BCreateOneWithoutToAInput!\n  toC: CCreateOneWithoutToAInput\n}\n\ninput ACreateWithoutToBInput {\n  toB2: BCreateOneWithoutToA2Input!\n  toC: CCreateOneWithoutToAInput\n}\n\ninput ACreateWithoutToCInput {\n  toB: BCreateOneWithoutToAInput!\n  toB2: BCreateOneWithoutToA2Input!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: A!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\ntype AggregateA {\n  count: Int!\n}\n\ntype AggregateB {\n  count: Int!\n}\n\ntype AggregateC {\n  count: Int!\n}\n\nenum AOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype APreviousValues {\n  id: ID!\n}\n\ninput AScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ntype ASubscriptionPayload {\n  mutation: MutationType!\n  node: A\n  updatedFields: [String!]\n  previousValues: APreviousValues\n}\n\ninput ASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWhereInput\n}\n\ninput AUpdateInput {\n  toB: BUpdateOneRequiredWithoutToAInput\n  toB2: BUpdateOneRequiredWithoutToA2Input\n  toC: CUpdateOneWithoutToAInput\n}\n\ninput AUpdateManyWithoutToCInput {\n  create: [ACreateWithoutToCInput!]\n  connect: [AWhereUniqueInput!]\n  disconnect: [AWhereUniqueInput!]\n  delete: [AWhereUniqueInput!]\n  update: [AUpdateWithWhereUniqueWithoutToCInput!]\n  deleteMany: [AScalarWhereInput!]\n  upsert: [AUpsertWithWhereUniqueWithoutToCInput!]\n}\n\ninput AUpdateOneRequiredWithoutToB2Input {\n  create: ACreateWithoutToB2Input\n  connect: AWhereUniqueInput\n  update: AUpdateWithoutToB2DataInput\n  upsert: AUpsertWithoutToB2Input\n}\n\ninput AUpdateOneRequiredWithoutToBInput {\n  create: ACreateWithoutToBInput\n  connect: AWhereUniqueInput\n  update: AUpdateWithoutToBDataInput\n  upsert: AUpsertWithoutToBInput\n}\n\ninput AUpdateWithoutToB2DataInput {\n  toB: BUpdateOneRequiredWithoutToAInput\n  toC: CUpdateOneWithoutToAInput\n}\n\ninput AUpdateWithoutToBDataInput {\n  toB2: BUpdateOneRequiredWithoutToA2Input\n  toC: CUpdateOneWithoutToAInput\n}\n\ninput AUpdateWithoutToCDataInput {\n  toB: BUpdateOneRequiredWithoutToAInput\n  toB2: BUpdateOneRequiredWithoutToA2Input\n}\n\ninput AUpdateWithWhereUniqueWithoutToCInput {\n  where: AWhereUniqueInput!\n  data: AUpdateWithoutToCDataInput!\n}\n\ninput AUpsertWithoutToB2Input {\n  update: AUpdateWithoutToB2DataInput!\n  create: ACreateWithoutToB2Input!\n}\n\ninput AUpsertWithoutToBInput {\n  update: AUpdateWithoutToBDataInput!\n  create: ACreateWithoutToBInput!\n}\n\ninput AUpsertWithWhereUniqueWithoutToCInput {\n  where: AWhereUniqueInput!\n  update: AUpdateWithoutToCDataInput!\n  create: ACreateWithoutToCInput!\n}\n\ninput AWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput AWhereUniqueInput {\n  id: ID\n}\n\ntype B implements Node {\n  toA: A!\n  toA2: A!\n  toC: C!\n  id: ID!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BEdge]!\n  aggregate: AggregateB!\n}\n\ninput BCreateInput {\n  toA: ACreateOneWithoutToBInput!\n  toA2: ACreateOneWithoutToB2Input!\n  toC: CCreateOneWithoutToBInput!\n}\n\ninput BCreateManyWithoutToCInput {\n  create: [BCreateWithoutToCInput!]\n  connect: [BWhereUniqueInput!]\n}\n\ninput BCreateOneWithoutToA2Input {\n  create: BCreateWithoutToA2Input\n  connect: BWhereUniqueInput\n}\n\ninput BCreateOneWithoutToAInput {\n  create: BCreateWithoutToAInput\n  connect: BWhereUniqueInput\n}\n\ninput BCreateWithoutToA2Input {\n  toA: ACreateOneWithoutToBInput!\n  toC: CCreateOneWithoutToBInput!\n}\n\ninput BCreateWithoutToAInput {\n  toA2: ACreateOneWithoutToB2Input!\n  toC: CCreateOneWithoutToBInput!\n}\n\ninput BCreateWithoutToCInput {\n  toA: ACreateOneWithoutToBInput!\n  toA2: ACreateOneWithoutToB2Input!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: B!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype BPreviousValues {\n  id: ID!\n}\n\ninput BScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ntype BSubscriptionPayload {\n  mutation: MutationType!\n  node: B\n  updatedFields: [String!]\n  previousValues: BPreviousValues\n}\n\ninput BSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWhereInput\n}\n\ninput BUpdateInput {\n  toA: AUpdateOneRequiredWithoutToBInput\n  toA2: AUpdateOneRequiredWithoutToB2Input\n  toC: CUpdateOneRequiredWithoutToBInput\n}\n\ninput BUpdateManyWithoutToCInput {\n  create: [BCreateWithoutToCInput!]\n  connect: [BWhereUniqueInput!]\n  disconnect: [BWhereUniqueInput!]\n  delete: [BWhereUniqueInput!]\n  update: [BUpdateWithWhereUniqueWithoutToCInput!]\n  deleteMany: [BScalarWhereInput!]\n  upsert: [BUpsertWithWhereUniqueWithoutToCInput!]\n}\n\ninput BUpdateOneRequiredWithoutToA2Input {\n  create: BCreateWithoutToA2Input\n  connect: BWhereUniqueInput\n  update: BUpdateWithoutToA2DataInput\n  upsert: BUpsertWithoutToA2Input\n}\n\ninput BUpdateOneRequiredWithoutToAInput {\n  create: BCreateWithoutToAInput\n  connect: BWhereUniqueInput\n  update: BUpdateWithoutToADataInput\n  upsert: BUpsertWithoutToAInput\n}\n\ninput BUpdateWithoutToA2DataInput {\n  toA: AUpdateOneRequiredWithoutToBInput\n  toC: CUpdateOneRequiredWithoutToBInput\n}\n\ninput BUpdateWithoutToADataInput {\n  toA2: AUpdateOneRequiredWithoutToB2Input\n  toC: CUpdateOneRequiredWithoutToBInput\n}\n\ninput BUpdateWithoutToCDataInput {\n  toA: AUpdateOneRequiredWithoutToBInput\n  toA2: AUpdateOneRequiredWithoutToB2Input\n}\n\ninput BUpdateWithWhereUniqueWithoutToCInput {\n  where: BWhereUniqueInput!\n  data: BUpdateWithoutToCDataInput!\n}\n\ninput BUpsertWithoutToA2Input {\n  update: BUpdateWithoutToA2DataInput!\n  create: BCreateWithoutToA2Input!\n}\n\ninput BUpsertWithoutToAInput {\n  update: BUpdateWithoutToADataInput!\n  create: BCreateWithoutToAInput!\n}\n\ninput BUpsertWithWhereUniqueWithoutToCInput {\n  where: BWhereUniqueInput!\n  update: BUpdateWithoutToCDataInput!\n  create: BCreateWithoutToCInput!\n}\n\ninput BWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput BWhereUniqueInput {\n  id: ID\n}\n\ntype C implements Node {\n  toB(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B!]\n  toA(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A!]\n  id: ID!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CEdge]!\n  aggregate: AggregateC!\n}\n\ninput CCreateInput {\n  toB: BCreateManyWithoutToCInput\n  toA: ACreateManyWithoutToCInput\n}\n\ninput CCreateOneWithoutToAInput {\n  create: CCreateWithoutToAInput\n  connect: CWhereUniqueInput\n}\n\ninput CCreateOneWithoutToBInput {\n  create: CCreateWithoutToBInput\n  connect: CWhereUniqueInput\n}\n\ninput CCreateWithoutToAInput {\n  toB: BCreateManyWithoutToCInput\n}\n\ninput CCreateWithoutToBInput {\n  toA: ACreateManyWithoutToCInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: C!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum COrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype CPreviousValues {\n  id: ID!\n}\n\ntype CSubscriptionPayload {\n  mutation: MutationType!\n  node: C\n  updatedFields: [String!]\n  previousValues: CPreviousValues\n}\n\ninput CSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWhereInput\n}\n\ninput CUpdateInput {\n  toB: BUpdateManyWithoutToCInput\n  toA: AUpdateManyWithoutToCInput\n}\n\ninput CUpdateOneRequiredWithoutToBInput {\n  create: CCreateWithoutToBInput\n  connect: CWhereUniqueInput\n  update: CUpdateWithoutToBDataInput\n  upsert: CUpsertWithoutToBInput\n}\n\ninput CUpdateOneWithoutToAInput {\n  create: CCreateWithoutToAInput\n  connect: CWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: CUpdateWithoutToADataInput\n  upsert: CUpsertWithoutToAInput\n}\n\ninput CUpdateWithoutToADataInput {\n  toB: BUpdateManyWithoutToCInput\n}\n\ninput CUpdateWithoutToBDataInput {\n  toA: AUpdateManyWithoutToCInput\n}\n\ninput CUpsertWithoutToAInput {\n  update: CUpdateWithoutToADataInput!\n  create: CCreateWithoutToAInput!\n}\n\ninput CUpsertWithoutToBInput {\n  update: CUpdateWithoutToBDataInput!\n  create: CCreateWithoutToBInput!\n}\n\ninput CWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput CWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createA(data: ACreateInput!): A!\n  createB(data: BCreateInput!): B!\n  createC(data: CCreateInput!): C!\n  updateA(data: AUpdateInput!, where: AWhereUniqueInput!): A\n  updateB(data: BUpdateInput!, where: BWhereUniqueInput!): B\n  updateC(data: CUpdateInput!, where: CWhereUniqueInput!): C\n  deleteA(where: AWhereUniqueInput!): A\n  deleteB(where: BWhereUniqueInput!): B\n  deleteC(where: CWhereUniqueInput!): C\n  upsertA(where: AWhereUniqueInput!, create: ACreateInput!, update: AUpdateInput!): A!\n  upsertB(where: BWhereUniqueInput!, create: BCreateInput!, update: BUpdateInput!): B!\n  upsertC(where: CWhereUniqueInput!, create: CCreateInput!, update: CUpdateInput!): C!\n  deleteManyAs(where: AWhereInput): BatchPayload!\n  deleteManyBs(where: BWhereInput): BatchPayload!\n  deleteManyCs(where: CWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  as(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A]!\n  bs(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B]!\n  cs(where: CWhereInput, orderBy: COrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [C]!\n  a(where: AWhereUniqueInput!): A\n  b(where: BWhereUniqueInput!): B\n  c(where: CWhereUniqueInput!): C\n  asConnection(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AConnection!\n  bsConnection(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BConnection!\n  csConnection(where: CWhereInput, orderBy: COrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  a(where: ASubscriptionWhereInput): ASubscriptionPayload\n  b(where: BSubscriptionWhereInput): BSubscriptionPayload\n  c(where: CSubscriptionWhereInput): CSubscriptionPayload\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 23,
      "containsCycle": true,
      "numDefinitions": 88
    },
    {
      "name": "relational.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/defaultValue/relational.graphql",
      "sha": "3b430dd7a5d372b93014e06ec43cc0f6448f4342",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/defaultValue/relational.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/3b430dd7a5d372b93014e06ec43cc0f6448f4342",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/defaultValue/relational.graphql",
      "content": "type A {\n  a: Int\n  b: Int!\n  c: String!\n  d: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AEdge]!\n  aggregate: AggregateA!\n}\n\ninput ACreateInput {\n  a: Int\n  b: Int\n  c: String!\n  d: String\n}\n\ninput ACreateManyInput {\n  create: [ACreateInput!]\n  connect: [AWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: A!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\ntype AggregateA {\n  count: Int!\n}\n\ntype AggregateAWithId {\n  count: Int!\n}\n\ntype AggregateB {\n  count: Int!\n}\n\nenum AOrderByInput {\n  a_ASC\n  a_DESC\n  b_ASC\n  b_DESC\n  c_ASC\n  c_DESC\n  d_ASC\n  d_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype APreviousValues {\n  a: Int\n  b: Int!\n  c: String!\n  d: String\n}\n\ninput AScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AScalarWhereInput!]\n  a: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  a_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  a_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  a_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  a_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  a_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  a_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  a_gte: Int\n  b: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  b_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  b_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  b_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  b_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  b_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  b_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  b_gte: Int\n  c: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  c_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  c_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  c_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  c_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  c_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  c_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  c_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  c_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  c_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  c_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  c_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  c_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  c_not_ends_with: String\n  d: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  d_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  d_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  d_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  d_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  d_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  d_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  d_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  d_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  d_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  d_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  d_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  d_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  d_not_ends_with: String\n}\n\ntype ASubscriptionPayload {\n  mutation: MutationType!\n  node: A\n  updatedFields: [String!]\n  previousValues: APreviousValues\n}\n\ninput ASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWhereInput\n}\n\ninput AUpdateDataInput {\n  a: Int\n  b: Int\n  c: String\n  d: String\n}\n\ninput AUpdateInput {\n  a: Int\n  b: Int\n  c: String\n  d: String\n}\n\ninput AUpdateManyDataInput {\n  a: Int\n  b: Int\n  c: String\n  d: String\n}\n\ninput AUpdateManyInput {\n  create: [ACreateInput!]\n  connect: [AWhereUniqueInput!]\n  disconnect: [AWhereUniqueInput!]\n  delete: [AWhereUniqueInput!]\n  update: [AUpdateWithWhereUniqueNestedInput!]\n  updateMany: [AUpdateManyWithWhereNestedInput!]\n  deleteMany: [AScalarWhereInput!]\n  upsert: [AUpsertWithWhereUniqueNestedInput!]\n}\n\ninput AUpdateManyMutationInput {\n  a: Int\n  b: Int\n  c: String\n  d: String\n}\n\ninput AUpdateManyWithWhereNestedInput {\n  where: AScalarWhereInput!\n  data: AUpdateManyDataInput!\n}\n\ninput AUpdateWithWhereUniqueNestedInput {\n  where: AWhereUniqueInput!\n  data: AUpdateDataInput!\n}\n\ninput AUpsertWithWhereUniqueNestedInput {\n  where: AWhereUniqueInput!\n  update: AUpdateDataInput!\n  create: ACreateInput!\n}\n\ninput AWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWhereInput!]\n  a: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  a_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  a_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  a_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  a_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  a_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  a_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  a_gte: Int\n  b: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  b_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  b_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  b_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  b_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  b_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  b_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  b_gte: Int\n  c: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  c_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  c_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  c_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  c_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  c_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  c_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  c_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  c_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  c_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  c_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  c_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  c_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  c_not_ends_with: String\n  d: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  d_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  d_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  d_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  d_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  d_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  d_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  d_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  d_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  d_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  d_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  d_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  d_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  d_not_ends_with: String\n}\n\ninput AWhereUniqueInput {\n  a: Int\n  c: String\n}\n\ntype AWithId implements Node {\n  id: ID!\n  a: Int\n  b: Int!\n  c: String!\n  d: String\n  b2: B!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithIdEdge]!\n  aggregate: AggregateAWithId!\n}\n\ninput AWithIdCreateInput {\n  a: Int\n  b: Int\n  c: String!\n  d: String\n  b2: BCreateOneWithoutA2Input!\n}\n\ninput AWithIdCreateOneWithoutB2Input {\n  create: AWithIdCreateWithoutB2Input\n  connect: AWithIdWhereUniqueInput\n}\n\ninput AWithIdCreateWithoutB2Input {\n  a: Int\n  b: Int\n  c: String!\n  d: String\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithIdOrderByInput {\n  id_ASC\n  id_DESC\n  a_ASC\n  a_DESC\n  b_ASC\n  b_DESC\n  c_ASC\n  c_DESC\n  d_ASC\n  d_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AWithIdPreviousValues {\n  id: ID!\n  a: Int\n  b: Int!\n  c: String!\n  d: String\n}\n\ntype AWithIdSubscriptionPayload {\n  mutation: MutationType!\n  node: AWithId\n  updatedFields: [String!]\n  previousValues: AWithIdPreviousValues\n}\n\ninput AWithIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithIdWhereInput\n}\n\ninput AWithIdUpdateInput {\n  a: Int\n  b: Int\n  c: String\n  d: String\n  b2: BUpdateOneRequiredWithoutA2Input\n}\n\ninput AWithIdUpdateManyMutationInput {\n  a: Int\n  b: Int\n  c: String\n  d: String\n}\n\ninput AWithIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  a: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  a_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  a_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  a_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  a_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  a_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  a_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  a_gte: Int\n  b: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  b_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  b_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  b_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  b_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  b_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  b_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  b_gte: Int\n  c: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  c_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  c_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  c_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  c_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  c_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  c_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  c_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  c_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  c_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  c_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  c_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  c_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  c_not_ends_with: String\n  d: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  d_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  d_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  d_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  d_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  d_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  d_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  d_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  d_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  d_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  d_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  d_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  d_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  d_not_ends_with: String\n  b2: BWhereInput\n}\n\ninput AWithIdWhereUniqueInput {\n  id: ID\n  a: Int\n  c: String\n}\n\ntype B {\n  a(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A!]\n  a2: AWithId\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BEdge]!\n  aggregate: AggregateB!\n}\n\ninput BCreateInput {\n  a: ACreateManyInput\n  a2: AWithIdCreateOneWithoutB2Input\n}\n\ninput BCreateOneWithoutA2Input {\n  create: BCreateWithoutA2Input\n}\n\ninput BCreateWithoutA2Input {\n  a: ACreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: B!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BSubscriptionPayload {\n  mutation: MutationType!\n  node: B\n  updatedFields: [String!]\n}\n\ninput BSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWhereInput\n}\n\ninput BUpdateOneRequiredWithoutA2Input {\n  create: BCreateWithoutA2Input\n  update: BUpdateWithoutA2DataInput\n  upsert: BUpsertWithoutA2Input\n}\n\ninput BUpdateWithoutA2DataInput {\n  a: AUpdateManyInput\n}\n\ninput BUpsertWithoutA2Input {\n  update: BUpdateWithoutA2DataInput!\n  create: BCreateWithoutA2Input!\n}\n\ninput BWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWhereInput!]\n  a_every: AWhereInput\n  a_some: AWhereInput\n  a_none: AWhereInput\n  a2: AWithIdWhereInput\n}\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createAWithId(data: AWithIdCreateInput!): AWithId!\n  createB(data: BCreateInput!): B!\n  createA(data: ACreateInput!): A!\n  updateAWithId(data: AWithIdUpdateInput!, where: AWithIdWhereUniqueInput!): AWithId\n  updateA(data: AUpdateInput!, where: AWhereUniqueInput!): A\n  deleteAWithId(where: AWithIdWhereUniqueInput!): AWithId\n  deleteA(where: AWhereUniqueInput!): A\n  upsertAWithId(where: AWithIdWhereUniqueInput!, create: AWithIdCreateInput!, update: AWithIdUpdateInput!): AWithId!\n  upsertA(where: AWhereUniqueInput!, create: ACreateInput!, update: AUpdateInput!): A!\n  updateManyAWithIds(data: AWithIdUpdateManyMutationInput!, where: AWithIdWhereInput): BatchPayload!\n  updateManyAs(data: AUpdateManyMutationInput!, where: AWhereInput): BatchPayload!\n  deleteManyAWithIds(where: AWithIdWhereInput): BatchPayload!\n  deleteManyBs(where: BWhereInput): BatchPayload!\n  deleteManyAs(where: AWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  aWithIds(where: AWithIdWhereInput, orderBy: AWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithId]!\n  bs(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B]!\n  as(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A]!\n  aWithId(where: AWithIdWhereUniqueInput!): AWithId\n  a(where: AWhereUniqueInput!): A\n  aWithIdsConnection(where: AWithIdWhereInput, orderBy: AWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithIdConnection!\n  bsConnection(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BConnection!\n  asConnection(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  aWithId(where: AWithIdSubscriptionWhereInput): AWithIdSubscriptionPayload\n  b(where: BSubscriptionWhereInput): BSubscriptionPayload\n  a(where: ASubscriptionWhereInput): ASubscriptionPayload\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 59
    },
    {
      "name": "testSchemaA.graphql",
      "path": "client/src/fixtures/testSchemaA.graphql",
      "sha": "465ddfaea2fdfb2fb27d118bbe063e47cf7fb956",
      "url": "https://api.github.com/repositories/162263047/contents/client/src/fixtures/testSchemaA.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/465ddfaea2fdfb2fb27d118bbe063e47cf7fb956",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/client/src/fixtures/testSchemaA.graphql",
      "content": "type Query {\n  a: Int\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 1
    },
    {
      "name": "testSchemaB.graphql",
      "path": "client/src/fixtures/testSchemaB.graphql",
      "sha": "b49d397106343a14e878afa0f9546aa57c5c8115",
      "url": "https://api.github.com/repositories/162263047/contents/client/src/fixtures/testSchemaB.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/b49d397106343a14e878afa0f9546aa57c5c8115",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/client/src/fixtures/testSchemaB.graphql",
      "content": "type Query {\n  b: Int\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 1
    },
    {
      "name": "airbnb.graphql",
      "path": "client/src/codegen/fixtures/airbnb.graphql",
      "sha": "7a624c36a2738885529fc0a1646047495faf8c29",
      "url": "https://api.github.com/repositories/162263047/contents/client/src/codegen/fixtures/airbnb.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/7a624c36a2738885529fc0a1646047495faf8c29",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/client/src/codegen/fixtures/airbnb.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Amenities implements Node {\n  id: ID!\n  place(where: PlaceWhereInput): Place!\n  elevator: Boolean!\n  petsAllowed: Boolean!\n  internet: Boolean!\n  kitchen: Boolean!\n  wirelessInternet: Boolean!\n  familyKidFriendly: Boolean!\n  freeParkingOnPremises: Boolean!\n  hotTub: Boolean!\n  pool: Boolean!\n  smokingAllowed: Boolean!\n  wheelchairAccessible: Boolean!\n  breakfast: Boolean!\n  cableTv: Boolean!\n  suitableForEvents: Boolean!\n  dryer: Boolean!\n  washer: Boolean!\n  indoorFireplace: Boolean!\n  tv: Boolean!\n  heating: Boolean!\n  hangers: Boolean!\n  iron: Boolean!\n  hairDryer: Boolean!\n  doorman: Boolean!\n  paidParkingOffPremises: Boolean!\n  freeParkingOnStreet: Boolean!\n  gym: Boolean!\n  airConditioning: Boolean!\n  shampoo: Boolean!\n  essentials: Boolean!\n  laptopFriendlyWorkspace: Boolean!\n  privateEntrance: Boolean!\n  buzzerWirelessIntercom: Boolean!\n  babyBath: Boolean!\n  babyMonitor: Boolean!\n  babysitterRecommendations: Boolean!\n  bathtub: Boolean!\n  changingTable: Boolean!\n  childrensBooksAndToys: Boolean!\n  childrensDinnerware: Boolean!\n  crib: Boolean!\n}\n\ntype Booking implements Node {\n  id: ID!\n  createdAt: DateTime!\n  bookee(where: UserWhereInput): User!\n  place(where: PlaceWhereInput): Place!\n  startDate: DateTime!\n  endDate: DateTime!\n  payment(where: PaymentWhereInput): Payment!\n}\n\ntype City implements Node {\n  id: ID!\n  name: String!\n  neighbourhoods(where: NeighbourhoodWhereInput, orderBy: NeighbourhoodOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Neighbourhood!]\n}\n\ntype CreditCardInformation implements Node {\n  id: ID!\n  createdAt: DateTime!\n  cardNumber: String!\n  expiresOnMonth: Int!\n  expiresOnYear: Int!\n  securityCode: String!\n  firstName: String!\n  lastName: String!\n  postalCode: String!\n  country: String!\n  paymentAccount(where: PaymentAccountWhereInput): PaymentAccount\n}\n\ntype Experience implements Node {\n  id: ID!\n  category(where: ExperienceCategoryWhereInput): ExperienceCategory\n  title: String!\n  host(where: UserWhereInput): User!\n  location(where: LocationWhereInput): Location!\n  pricePerPerson: Int!\n  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review!]\n  preview(where: PictureWhereInput): Picture!\n  popularity: Int!\n}\n\ntype ExperienceCategory implements Node {\n  id: ID!\n  mainColor: String!\n  name: String!\n  experience(where: ExperienceWhereInput): Experience\n}\n\ntype GuestRequirements implements Node {\n  id: ID!\n  govIssuedId: Boolean!\n  recommendationsFromOtherHosts: Boolean!\n  guestTripInformation: Boolean!\n  place(where: PlaceWhereInput): Place!\n}\n\ntype HouseRules implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  suitableForChildren: Boolean\n  suitableForInfants: Boolean\n  petsAllowed: Boolean\n  smokingAllowed: Boolean\n  partiesAndEventsAllowed: Boolean\n  additionalRules: String\n}\n\ntype Location implements Node {\n  id: ID!\n  lat: Float!\n  lng: Float!\n  neighbourHood(where: NeighbourhoodWhereInput): Neighbourhood\n  user(where: UserWhereInput): User\n  place(where: PlaceWhereInput): Place\n  address: String\n  directions: String\n  experience(where: ExperienceWhereInput): Experience\n  restaurant(where: RestaurantWhereInput): Restaurant\n}\n\ntype Message implements Node {\n  id: ID!\n  createdAt: DateTime!\n  from(where: UserWhereInput): User!\n  to(where: UserWhereInput): User!\n  deliveredAt: DateTime!\n  readAt: DateTime!\n}\n\ntype Neighbourhood implements Node {\n  id: ID!\n  locations(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Location!]\n  name: String!\n  slug: String!\n  homePreview(where: PictureWhereInput): Picture\n  city(where: CityWhereInput): City!\n  featured: Boolean!\n  popularity: Int!\n}\n\ntype Notification implements Node {\n  id: ID!\n  createdAt: DateTime!\n  type: NOTIFICATION_TYPE\n  user(where: UserWhereInput): User!\n  link: String!\n  readDate: DateTime!\n}\n\ntype Payment implements Node {\n  id: ID!\n  createdAt: DateTime!\n  serviceFee: Float!\n  placePrice: Float!\n  totalPrice: Float!\n  booking(where: BookingWhereInput): Booking!\n  paymentMethod(where: PaymentAccountWhereInput): PaymentAccount!\n}\n\ntype PaymentAccount implements Node {\n  id: ID!\n  createdAt: DateTime!\n  type: PAYMENT_PROVIDER\n  user(where: UserWhereInput): User!\n  payments(where: PaymentWhereInput, orderBy: PaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Payment!]\n  paypal(where: PaypalInformationWhereInput): PaypalInformation\n  creditcard(where: CreditCardInformationWhereInput): CreditCardInformation\n}\n\ntype PaypalInformation implements Node {\n  id: ID!\n  createdAt: DateTime!\n  email: String!\n  paymentAccount(where: PaymentAccountWhereInput): PaymentAccount!\n}\n\ntype Place implements Node {\n  id: ID!\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String!\n  description: String!\n  slug: String!\n  maxGuests: Int!\n  numBedrooms: Int!\n  numBeds: Int!\n  numBaths: Int!\n  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review!]\n  amenities(where: AmenitiesWhereInput): Amenities!\n  host(where: UserWhereInput): User!\n  pricing(where: PricingWhereInput): Pricing!\n  location(where: LocationWhereInput): Location!\n  views(where: ViewsWhereInput): Views!\n  guestRequirements(where: GuestRequirementsWhereInput): GuestRequirements\n  policies(where: PoliciesWhereInput): Policies\n  houseRules(where: HouseRulesWhereInput): HouseRules\n  bookings(where: BookingWhereInput, orderBy: BookingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Booking!]\n  pictures(where: PictureWhereInput, orderBy: PictureOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Picture!]\n  popularity: Int!\n}\n\ntype Policies implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  checkInStartTime: Float!\n  checkInEndTime: Float!\n  checkoutTime: Float!\n  place(where: PlaceWhereInput): Place!\n}\n\ntype Pricing implements Node {\n  id: ID!\n  place(where: PlaceWhereInput): Place!\n  monthlyDiscount: Int\n  weeklyDiscount: Int\n  perNight: Int!\n  smartPricing: Boolean!\n  basePrice: Int!\n  averageWeekly: Int!\n  averageMonthly: Int!\n  cleaningFee: Int\n  securityDeposit: Int\n  extraGuests: Int\n  weekendPricing: Int\n  currency: CURRENCY\n}\n\ntype Restaurant implements Node {\n  id: ID!\n  createdAt: DateTime!\n  title: String!\n  avgPricePerPerson: Int!\n  pictures(where: PictureWhereInput, orderBy: PictureOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Picture!]\n  location(where: LocationWhereInput): Location!\n  isCurated: Boolean!\n  slug: String!\n  popularity: Int!\n}\n\ntype Review implements Node {\n  id: ID!\n  createdAt: DateTime!\n  text: String!\n  stars: Int!\n  accuracy: Int!\n  location: Int!\n  checkIn: Int!\n  value: Int!\n  cleanliness: Int!\n  communication: Int!\n  place(where: PlaceWhereInput): Place!\n  experience(where: ExperienceWhereInput): Experience\n}\n\ntype User implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  firstName: String!\n  lastName: String!\n  email: String!\n  password: String!\n  phone: String!\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean!\n  ownedPlaces(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Place!]\n  location(where: LocationWhereInput): Location\n  bookings(where: BookingWhereInput, orderBy: BookingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Booking!]\n  paymentAccount(where: PaymentAccountWhereInput, orderBy: PaymentAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PaymentAccount!]\n  sentMessages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message!]\n  receivedMessages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message!]\n  notifications(where: NotificationWhereInput, orderBy: NotificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Notification!]\n  profilePicture(where: PictureWhereInput): Picture\n  hostingExperiences(where: ExperienceWhereInput, orderBy: ExperienceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Experience!]\n}\n\ntype Views implements Node {\n  id: ID!\n  lastWeek: Int!\n  place(where: PlaceWhereInput): Place!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateAmenities {\n  count: Int!\n}\n\ntype AggregateBooking {\n  count: Int!\n}\n\ntype AggregateCity {\n  count: Int!\n}\n\ntype AggregateCreditCardInformation {\n  count: Int!\n}\n\ntype AggregateExperience {\n  count: Int!\n}\n\ntype AggregateExperienceCategory {\n  count: Int!\n}\n\ntype AggregateGuestRequirements {\n  count: Int!\n}\n\ntype AggregateHouseRules {\n  count: Int!\n}\n\ntype AggregateLocation {\n  count: Int!\n}\n\ntype AggregateMessage {\n  count: Int!\n}\n\ntype AggregateNeighbourhood {\n  count: Int!\n}\n\ntype AggregateNotification {\n  count: Int!\n}\n\ntype AggregatePayment {\n  count: Int!\n}\n\ntype AggregatePaymentAccount {\n  count: Int!\n}\n\ntype AggregatePaypalInformation {\n  count: Int!\n}\n\ntype AggregatePicture {\n  count: Int!\n}\n\ntype AggregatePlace {\n  count: Int!\n}\n\ntype AggregatePolicies {\n  count: Int!\n}\n\ntype AggregatePricing {\n  count: Int!\n}\n\ntype AggregateRestaurant {\n  count: Int!\n}\n\ntype AggregateReview {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype AggregateViews {\n  count: Int!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AmenitiesConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AmenitiesEdge]!\n  aggregate: AggregateAmenities!\n}\n\ninput AmenitiesCreateInput {\n  elevator: Boolean\n  petsAllowed: Boolean\n  internet: Boolean\n  kitchen: Boolean\n  wirelessInternet: Boolean\n  familyKidFriendly: Boolean\n  freeParkingOnPremises: Boolean\n  hotTub: Boolean\n  pool: Boolean\n  smokingAllowed: Boolean\n  wheelchairAccessible: Boolean\n  breakfast: Boolean\n  cableTv: Boolean\n  suitableForEvents: Boolean\n  dryer: Boolean\n  washer: Boolean\n  indoorFireplace: Boolean\n  tv: Boolean\n  heating: Boolean\n  hangers: Boolean\n  iron: Boolean\n  hairDryer: Boolean\n  doorman: Boolean\n  paidParkingOffPremises: Boolean\n  freeParkingOnStreet: Boolean\n  gym: Boolean\n  airConditioning: Boolean\n  shampoo: Boolean\n  essentials: Boolean\n  laptopFriendlyWorkspace: Boolean\n  privateEntrance: Boolean\n  buzzerWirelessIntercom: Boolean\n  babyBath: Boolean\n  babyMonitor: Boolean\n  babysitterRecommendations: Boolean\n  bathtub: Boolean\n  changingTable: Boolean\n  childrensBooksAndToys: Boolean\n  childrensDinnerware: Boolean\n  crib: Boolean\n  place: PlaceCreateOneWithoutAmenitiesInput!\n}\n\ninput AmenitiesCreateOneWithoutPlaceInput {\n  create: AmenitiesCreateWithoutPlaceInput\n  connect: AmenitiesWhereUniqueInput\n}\n\ninput AmenitiesCreateWithoutPlaceInput {\n  elevator: Boolean\n  petsAllowed: Boolean\n  internet: Boolean\n  kitchen: Boolean\n  wirelessInternet: Boolean\n  familyKidFriendly: Boolean\n  freeParkingOnPremises: Boolean\n  hotTub: Boolean\n  pool: Boolean\n  smokingAllowed: Boolean\n  wheelchairAccessible: Boolean\n  breakfast: Boolean\n  cableTv: Boolean\n  suitableForEvents: Boolean\n  dryer: Boolean\n  washer: Boolean\n  indoorFireplace: Boolean\n  tv: Boolean\n  heating: Boolean\n  hangers: Boolean\n  iron: Boolean\n  hairDryer: Boolean\n  doorman: Boolean\n  paidParkingOffPremises: Boolean\n  freeParkingOnStreet: Boolean\n  gym: Boolean\n  airConditioning: Boolean\n  shampoo: Boolean\n  essentials: Boolean\n  laptopFriendlyWorkspace: Boolean\n  privateEntrance: Boolean\n  buzzerWirelessIntercom: Boolean\n  babyBath: Boolean\n  babyMonitor: Boolean\n  babysitterRecommendations: Boolean\n  bathtub: Boolean\n  changingTable: Boolean\n  childrensBooksAndToys: Boolean\n  childrensDinnerware: Boolean\n  crib: Boolean\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AmenitiesEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Amenities!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AmenitiesOrderByInput {\n  id_ASC\n  id_DESC\n  elevator_ASC\n  elevator_DESC\n  petsAllowed_ASC\n  petsAllowed_DESC\n  internet_ASC\n  internet_DESC\n  kitchen_ASC\n  kitchen_DESC\n  wirelessInternet_ASC\n  wirelessInternet_DESC\n  familyKidFriendly_ASC\n  familyKidFriendly_DESC\n  freeParkingOnPremises_ASC\n  freeParkingOnPremises_DESC\n  hotTub_ASC\n  hotTub_DESC\n  pool_ASC\n  pool_DESC\n  smokingAllowed_ASC\n  smokingAllowed_DESC\n  wheelchairAccessible_ASC\n  wheelchairAccessible_DESC\n  breakfast_ASC\n  breakfast_DESC\n  cableTv_ASC\n  cableTv_DESC\n  suitableForEvents_ASC\n  suitableForEvents_DESC\n  dryer_ASC\n  dryer_DESC\n  washer_ASC\n  washer_DESC\n  indoorFireplace_ASC\n  indoorFireplace_DESC\n  tv_ASC\n  tv_DESC\n  heating_ASC\n  heating_DESC\n  hangers_ASC\n  hangers_DESC\n  iron_ASC\n  iron_DESC\n  hairDryer_ASC\n  hairDryer_DESC\n  doorman_ASC\n  doorman_DESC\n  paidParkingOffPremises_ASC\n  paidParkingOffPremises_DESC\n  freeParkingOnStreet_ASC\n  freeParkingOnStreet_DESC\n  gym_ASC\n  gym_DESC\n  airConditioning_ASC\n  airConditioning_DESC\n  shampoo_ASC\n  shampoo_DESC\n  essentials_ASC\n  essentials_DESC\n  laptopFriendlyWorkspace_ASC\n  laptopFriendlyWorkspace_DESC\n  privateEntrance_ASC\n  privateEntrance_DESC\n  buzzerWirelessIntercom_ASC\n  buzzerWirelessIntercom_DESC\n  babyBath_ASC\n  babyBath_DESC\n  babyMonitor_ASC\n  babyMonitor_DESC\n  babysitterRecommendations_ASC\n  babysitterRecommendations_DESC\n  bathtub_ASC\n  bathtub_DESC\n  changingTable_ASC\n  changingTable_DESC\n  childrensBooksAndToys_ASC\n  childrensBooksAndToys_DESC\n  childrensDinnerware_ASC\n  childrensDinnerware_DESC\n  crib_ASC\n  crib_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AmenitiesPreviousValues {\n  id: ID!\n  elevator: Boolean!\n  petsAllowed: Boolean!\n  internet: Boolean!\n  kitchen: Boolean!\n  wirelessInternet: Boolean!\n  familyKidFriendly: Boolean!\n  freeParkingOnPremises: Boolean!\n  hotTub: Boolean!\n  pool: Boolean!\n  smokingAllowed: Boolean!\n  wheelchairAccessible: Boolean!\n  breakfast: Boolean!\n  cableTv: Boolean!\n  suitableForEvents: Boolean!\n  dryer: Boolean!\n  washer: Boolean!\n  indoorFireplace: Boolean!\n  tv: Boolean!\n  heating: Boolean!\n  hangers: Boolean!\n  iron: Boolean!\n  hairDryer: Boolean!\n  doorman: Boolean!\n  paidParkingOffPremises: Boolean!\n  freeParkingOnStreet: Boolean!\n  gym: Boolean!\n  airConditioning: Boolean!\n  shampoo: Boolean!\n  essentials: Boolean!\n  laptopFriendlyWorkspace: Boolean!\n  privateEntrance: Boolean!\n  buzzerWirelessIntercom: Boolean!\n  babyBath: Boolean!\n  babyMonitor: Boolean!\n  babysitterRecommendations: Boolean!\n  bathtub: Boolean!\n  changingTable: Boolean!\n  childrensBooksAndToys: Boolean!\n  childrensDinnerware: Boolean!\n  crib: Boolean!\n}\n\ntype AmenitiesSubscriptionPayload {\n  mutation: MutationType!\n  node: Amenities\n  updatedFields: [String!]\n  previousValues: AmenitiesPreviousValues\n}\n\ninput AmenitiesSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AmenitiesSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AmenitiesSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AmenitiesSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AmenitiesWhereInput\n}\n\ninput AmenitiesUpdateInput {\n  elevator: Boolean\n  petsAllowed: Boolean\n  internet: Boolean\n  kitchen: Boolean\n  wirelessInternet: Boolean\n  familyKidFriendly: Boolean\n  freeParkingOnPremises: Boolean\n  hotTub: Boolean\n  pool: Boolean\n  smokingAllowed: Boolean\n  wheelchairAccessible: Boolean\n  breakfast: Boolean\n  cableTv: Boolean\n  suitableForEvents: Boolean\n  dryer: Boolean\n  washer: Boolean\n  indoorFireplace: Boolean\n  tv: Boolean\n  heating: Boolean\n  hangers: Boolean\n  iron: Boolean\n  hairDryer: Boolean\n  doorman: Boolean\n  paidParkingOffPremises: Boolean\n  freeParkingOnStreet: Boolean\n  gym: Boolean\n  airConditioning: Boolean\n  shampoo: Boolean\n  essentials: Boolean\n  laptopFriendlyWorkspace: Boolean\n  privateEntrance: Boolean\n  buzzerWirelessIntercom: Boolean\n  babyBath: Boolean\n  babyMonitor: Boolean\n  babysitterRecommendations: Boolean\n  bathtub: Boolean\n  changingTable: Boolean\n  childrensBooksAndToys: Boolean\n  childrensDinnerware: Boolean\n  crib: Boolean\n  place: PlaceUpdateOneWithoutAmenitiesInput\n}\n\ninput AmenitiesUpdateOneWithoutPlaceInput {\n  create: AmenitiesCreateWithoutPlaceInput\n  connect: AmenitiesWhereUniqueInput\n  delete: Boolean\n  update: AmenitiesUpdateWithoutPlaceDataInput\n  upsert: AmenitiesUpsertWithoutPlaceInput\n}\n\ninput AmenitiesUpdateWithoutPlaceDataInput {\n  elevator: Boolean\n  petsAllowed: Boolean\n  internet: Boolean\n  kitchen: Boolean\n  wirelessInternet: Boolean\n  familyKidFriendly: Boolean\n  freeParkingOnPremises: Boolean\n  hotTub: Boolean\n  pool: Boolean\n  smokingAllowed: Boolean\n  wheelchairAccessible: Boolean\n  breakfast: Boolean\n  cableTv: Boolean\n  suitableForEvents: Boolean\n  dryer: Boolean\n  washer: Boolean\n  indoorFireplace: Boolean\n  tv: Boolean\n  heating: Boolean\n  hangers: Boolean\n  iron: Boolean\n  hairDryer: Boolean\n  doorman: Boolean\n  paidParkingOffPremises: Boolean\n  freeParkingOnStreet: Boolean\n  gym: Boolean\n  airConditioning: Boolean\n  shampoo: Boolean\n  essentials: Boolean\n  laptopFriendlyWorkspace: Boolean\n  privateEntrance: Boolean\n  buzzerWirelessIntercom: Boolean\n  babyBath: Boolean\n  babyMonitor: Boolean\n  babysitterRecommendations: Boolean\n  bathtub: Boolean\n  changingTable: Boolean\n  childrensBooksAndToys: Boolean\n  childrensDinnerware: Boolean\n  crib: Boolean\n}\n\ninput AmenitiesUpsertWithoutPlaceInput {\n  update: AmenitiesUpdateWithoutPlaceDataInput!\n  create: AmenitiesCreateWithoutPlaceInput!\n}\n\ninput AmenitiesWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AmenitiesWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AmenitiesWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AmenitiesWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  elevator: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  elevator_not: Boolean\n  petsAllowed: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  petsAllowed_not: Boolean\n  internet: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  internet_not: Boolean\n  kitchen: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  kitchen_not: Boolean\n  wirelessInternet: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  wirelessInternet_not: Boolean\n  familyKidFriendly: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  familyKidFriendly_not: Boolean\n  freeParkingOnPremises: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  freeParkingOnPremises_not: Boolean\n  hotTub: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  hotTub_not: Boolean\n  pool: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  pool_not: Boolean\n  smokingAllowed: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  smokingAllowed_not: Boolean\n  wheelchairAccessible: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  wheelchairAccessible_not: Boolean\n  breakfast: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  breakfast_not: Boolean\n  cableTv: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  cableTv_not: Boolean\n  suitableForEvents: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  suitableForEvents_not: Boolean\n  dryer: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  dryer_not: Boolean\n  washer: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  washer_not: Boolean\n  indoorFireplace: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  indoorFireplace_not: Boolean\n  tv: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  tv_not: Boolean\n  heating: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  heating_not: Boolean\n  hangers: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  hangers_not: Boolean\n  iron: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  iron_not: Boolean\n  hairDryer: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  hairDryer_not: Boolean\n  doorman: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  doorman_not: Boolean\n  paidParkingOffPremises: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  paidParkingOffPremises_not: Boolean\n  freeParkingOnStreet: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  freeParkingOnStreet_not: Boolean\n  gym: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  gym_not: Boolean\n  airConditioning: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  airConditioning_not: Boolean\n  shampoo: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  shampoo_not: Boolean\n  essentials: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  essentials_not: Boolean\n  laptopFriendlyWorkspace: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  laptopFriendlyWorkspace_not: Boolean\n  privateEntrance: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  privateEntrance_not: Boolean\n  buzzerWirelessIntercom: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  buzzerWirelessIntercom_not: Boolean\n  babyBath: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  babyBath_not: Boolean\n  babyMonitor: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  babyMonitor_not: Boolean\n  babysitterRecommendations: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  babysitterRecommendations_not: Boolean\n  bathtub: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  bathtub_not: Boolean\n  changingTable: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  changingTable_not: Boolean\n  childrensBooksAndToys: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  childrensBooksAndToys_not: Boolean\n  childrensDinnerware: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  childrensDinnerware_not: Boolean\n  crib: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  crib_not: Boolean\n  place: PlaceWhereInput\n}\n\ninput AmenitiesWhereUniqueInput {\n  id: ID\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BookingConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BookingEdge]!\n  aggregate: AggregateBooking!\n}\n\ninput BookingCreateInput {\n  startDate: DateTime!\n  endDate: DateTime!\n  bookee: UserCreateOneWithoutBookingsInput!\n  place: PlaceCreateOneWithoutBookingsInput!\n  payment: PaymentCreateOneWithoutBookingInput!\n}\n\ninput BookingCreateManyWithoutBookeeInput {\n  create: [BookingCreateWithoutBookeeInput!]\n  connect: [BookingWhereUniqueInput!]\n}\n\ninput BookingCreateManyWithoutPlaceInput {\n  create: [BookingCreateWithoutPlaceInput!]\n  connect: [BookingWhereUniqueInput!]\n}\n\ninput BookingCreateOneWithoutPaymentInput {\n  create: BookingCreateWithoutPaymentInput\n  connect: BookingWhereUniqueInput\n}\n\ninput BookingCreateWithoutBookeeInput {\n  startDate: DateTime!\n  endDate: DateTime!\n  place: PlaceCreateOneWithoutBookingsInput!\n  payment: PaymentCreateOneWithoutBookingInput!\n}\n\ninput BookingCreateWithoutPaymentInput {\n  startDate: DateTime!\n  endDate: DateTime!\n  bookee: UserCreateOneWithoutBookingsInput!\n  place: PlaceCreateOneWithoutBookingsInput!\n}\n\ninput BookingCreateWithoutPlaceInput {\n  startDate: DateTime!\n  endDate: DateTime!\n  bookee: UserCreateOneWithoutBookingsInput!\n  payment: PaymentCreateOneWithoutBookingInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BookingEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Booking!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BookingOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  startDate_ASC\n  startDate_DESC\n  endDate_ASC\n  endDate_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype BookingPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  startDate: DateTime!\n  endDate: DateTime!\n}\n\ntype BookingSubscriptionPayload {\n  mutation: MutationType!\n  node: Booking\n  updatedFields: [String!]\n  previousValues: BookingPreviousValues\n}\n\ninput BookingSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BookingSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BookingSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BookingSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BookingWhereInput\n}\n\ninput BookingUpdateInput {\n  startDate: DateTime\n  endDate: DateTime\n  bookee: UserUpdateOneWithoutBookingsInput\n  place: PlaceUpdateOneWithoutBookingsInput\n  payment: PaymentUpdateOneWithoutBookingInput\n}\n\ninput BookingUpdateManyWithoutBookeeInput {\n  create: [BookingCreateWithoutBookeeInput!]\n  connect: [BookingWhereUniqueInput!]\n  disconnect: [BookingWhereUniqueInput!]\n  delete: [BookingWhereUniqueInput!]\n  update: [BookingUpdateWithWhereUniqueWithoutBookeeInput!]\n  upsert: [BookingUpsertWithWhereUniqueWithoutBookeeInput!]\n}\n\ninput BookingUpdateManyWithoutPlaceInput {\n  create: [BookingCreateWithoutPlaceInput!]\n  connect: [BookingWhereUniqueInput!]\n  disconnect: [BookingWhereUniqueInput!]\n  delete: [BookingWhereUniqueInput!]\n  update: [BookingUpdateWithWhereUniqueWithoutPlaceInput!]\n  upsert: [BookingUpsertWithWhereUniqueWithoutPlaceInput!]\n}\n\ninput BookingUpdateOneWithoutPaymentInput {\n  create: BookingCreateWithoutPaymentInput\n  connect: BookingWhereUniqueInput\n  delete: Boolean\n  update: BookingUpdateWithoutPaymentDataInput\n  upsert: BookingUpsertWithoutPaymentInput\n}\n\ninput BookingUpdateWithoutBookeeDataInput {\n  startDate: DateTime\n  endDate: DateTime\n  place: PlaceUpdateOneWithoutBookingsInput\n  payment: PaymentUpdateOneWithoutBookingInput\n}\n\ninput BookingUpdateWithoutPaymentDataInput {\n  startDate: DateTime\n  endDate: DateTime\n  bookee: UserUpdateOneWithoutBookingsInput\n  place: PlaceUpdateOneWithoutBookingsInput\n}\n\ninput BookingUpdateWithoutPlaceDataInput {\n  startDate: DateTime\n  endDate: DateTime\n  bookee: UserUpdateOneWithoutBookingsInput\n  payment: PaymentUpdateOneWithoutBookingInput\n}\n\ninput BookingUpdateWithWhereUniqueWithoutBookeeInput {\n  where: BookingWhereUniqueInput!\n  data: BookingUpdateWithoutBookeeDataInput!\n}\n\ninput BookingUpdateWithWhereUniqueWithoutPlaceInput {\n  where: BookingWhereUniqueInput!\n  data: BookingUpdateWithoutPlaceDataInput!\n}\n\ninput BookingUpsertWithoutPaymentInput {\n  update: BookingUpdateWithoutPaymentDataInput!\n  create: BookingCreateWithoutPaymentInput!\n}\n\ninput BookingUpsertWithWhereUniqueWithoutBookeeInput {\n  where: BookingWhereUniqueInput!\n  update: BookingUpdateWithoutBookeeDataInput!\n  create: BookingCreateWithoutBookeeInput!\n}\n\ninput BookingUpsertWithWhereUniqueWithoutPlaceInput {\n  where: BookingWhereUniqueInput!\n  update: BookingUpdateWithoutPlaceDataInput!\n  create: BookingCreateWithoutPlaceInput!\n}\n\ninput BookingWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BookingWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BookingWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BookingWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  startDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  startDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  startDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  startDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  startDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  startDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  startDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  startDate_gte: DateTime\n  endDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  endDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  endDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  endDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  endDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  endDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  endDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  endDate_gte: DateTime\n  bookee: UserWhereInput\n  place: PlaceWhereInput\n  payment: PaymentWhereInput\n}\n\ninput BookingWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CityConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CityEdge]!\n  aggregate: AggregateCity!\n}\n\ninput CityCreateInput {\n  name: String!\n  neighbourhoods: NeighbourhoodCreateManyWithoutCityInput\n}\n\ninput CityCreateOneWithoutNeighbourhoodsInput {\n  create: CityCreateWithoutNeighbourhoodsInput\n  connect: CityWhereUniqueInput\n}\n\ninput CityCreateWithoutNeighbourhoodsInput {\n  name: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CityEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: City!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CityOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CityPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype CitySubscriptionPayload {\n  mutation: MutationType!\n  node: City\n  updatedFields: [String!]\n  previousValues: CityPreviousValues\n}\n\ninput CitySubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CitySubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CitySubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CitySubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CityWhereInput\n}\n\ninput CityUpdateInput {\n  name: String\n  neighbourhoods: NeighbourhoodUpdateManyWithoutCityInput\n}\n\ninput CityUpdateOneWithoutNeighbourhoodsInput {\n  create: CityCreateWithoutNeighbourhoodsInput\n  connect: CityWhereUniqueInput\n  delete: Boolean\n  update: CityUpdateWithoutNeighbourhoodsDataInput\n  upsert: CityUpsertWithoutNeighbourhoodsInput\n}\n\ninput CityUpdateWithoutNeighbourhoodsDataInput {\n  name: String\n}\n\ninput CityUpsertWithoutNeighbourhoodsInput {\n  update: CityUpdateWithoutNeighbourhoodsDataInput!\n  create: CityCreateWithoutNeighbourhoodsInput!\n}\n\ninput CityWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CityWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CityWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CityWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  neighbourhoods_every: NeighbourhoodWhereInput\n  neighbourhoods_some: NeighbourhoodWhereInput\n  neighbourhoods_none: NeighbourhoodWhereInput\n}\n\ninput CityWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CreditCardInformationConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CreditCardInformationEdge]!\n  aggregate: AggregateCreditCardInformation!\n}\n\ninput CreditCardInformationCreateInput {\n  cardNumber: String!\n  expiresOnMonth: Int!\n  expiresOnYear: Int!\n  securityCode: String!\n  firstName: String!\n  lastName: String!\n  postalCode: String!\n  country: String!\n  paymentAccount: PaymentAccountCreateOneWithoutCreditcardInput\n}\n\ninput CreditCardInformationCreateOneWithoutPaymentAccountInput {\n  create: CreditCardInformationCreateWithoutPaymentAccountInput\n  connect: CreditCardInformationWhereUniqueInput\n}\n\ninput CreditCardInformationCreateWithoutPaymentAccountInput {\n  cardNumber: String!\n  expiresOnMonth: Int!\n  expiresOnYear: Int!\n  securityCode: String!\n  firstName: String!\n  lastName: String!\n  postalCode: String!\n  country: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CreditCardInformationEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CreditCardInformation!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CreditCardInformationOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  cardNumber_ASC\n  cardNumber_DESC\n  expiresOnMonth_ASC\n  expiresOnMonth_DESC\n  expiresOnYear_ASC\n  expiresOnYear_DESC\n  securityCode_ASC\n  securityCode_DESC\n  firstName_ASC\n  firstName_DESC\n  lastName_ASC\n  lastName_DESC\n  postalCode_ASC\n  postalCode_DESC\n  country_ASC\n  country_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype CreditCardInformationPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  cardNumber: String!\n  expiresOnMonth: Int!\n  expiresOnYear: Int!\n  securityCode: String!\n  firstName: String!\n  lastName: String!\n  postalCode: String!\n  country: String!\n}\n\ntype CreditCardInformationSubscriptionPayload {\n  mutation: MutationType!\n  node: CreditCardInformation\n  updatedFields: [String!]\n  previousValues: CreditCardInformationPreviousValues\n}\n\ninput CreditCardInformationSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CreditCardInformationSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CreditCardInformationSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CreditCardInformationSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CreditCardInformationWhereInput\n}\n\ninput CreditCardInformationUpdateInput {\n  cardNumber: String\n  expiresOnMonth: Int\n  expiresOnYear: Int\n  securityCode: String\n  firstName: String\n  lastName: String\n  postalCode: String\n  country: String\n  paymentAccount: PaymentAccountUpdateOneWithoutCreditcardInput\n}\n\ninput CreditCardInformationUpdateOneWithoutPaymentAccountInput {\n  create: CreditCardInformationCreateWithoutPaymentAccountInput\n  connect: CreditCardInformationWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: CreditCardInformationUpdateWithoutPaymentAccountDataInput\n  upsert: CreditCardInformationUpsertWithoutPaymentAccountInput\n}\n\ninput CreditCardInformationUpdateWithoutPaymentAccountDataInput {\n  cardNumber: String\n  expiresOnMonth: Int\n  expiresOnYear: Int\n  securityCode: String\n  firstName: String\n  lastName: String\n  postalCode: String\n  country: String\n}\n\ninput CreditCardInformationUpsertWithoutPaymentAccountInput {\n  update: CreditCardInformationUpdateWithoutPaymentAccountDataInput!\n  create: CreditCardInformationCreateWithoutPaymentAccountInput!\n}\n\ninput CreditCardInformationWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CreditCardInformationWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CreditCardInformationWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CreditCardInformationWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  cardNumber: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  cardNumber_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  cardNumber_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  cardNumber_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  cardNumber_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  cardNumber_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  cardNumber_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  cardNumber_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  cardNumber_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  cardNumber_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  cardNumber_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  cardNumber_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  cardNumber_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  cardNumber_not_ends_with: String\n  expiresOnMonth: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  expiresOnMonth_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  expiresOnMonth_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  expiresOnMonth_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  expiresOnMonth_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  expiresOnMonth_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  expiresOnMonth_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  expiresOnMonth_gte: Int\n  expiresOnYear: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  expiresOnYear_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  expiresOnYear_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  expiresOnYear_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  expiresOnYear_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  expiresOnYear_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  expiresOnYear_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  expiresOnYear_gte: Int\n  securityCode: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  securityCode_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  securityCode_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  securityCode_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  securityCode_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  securityCode_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  securityCode_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  securityCode_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  securityCode_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  securityCode_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  securityCode_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  securityCode_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  securityCode_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  securityCode_not_ends_with: String\n  firstName: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  firstName_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  firstName_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  firstName_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  firstName_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  firstName_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  firstName_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  firstName_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  firstName_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  firstName_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  firstName_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  firstName_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  firstName_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  firstName_not_ends_with: String\n  lastName: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  lastName_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  lastName_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  lastName_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  lastName_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  lastName_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  lastName_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  lastName_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  lastName_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  lastName_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  lastName_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  lastName_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  lastName_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  lastName_not_ends_with: String\n  postalCode: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  postalCode_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  postalCode_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  postalCode_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  postalCode_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  postalCode_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  postalCode_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  postalCode_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  postalCode_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  postalCode_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  postalCode_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  postalCode_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  postalCode_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  postalCode_not_ends_with: String\n  country: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  country_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  country_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  country_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  country_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  country_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  country_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  country_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  country_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  country_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  country_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  country_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  country_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  country_not_ends_with: String\n  paymentAccount: PaymentAccountWhereInput\n}\n\ninput CreditCardInformationWhereUniqueInput {\n  id: ID\n}\n\nenum CURRENCY {\n  CAD\n  CHF\n  EUR\n  JPY\n  USD\n  ZAR\n}\n\nscalar DateTime\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype ExperienceCategoryConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [ExperienceCategoryEdge]!\n  aggregate: AggregateExperienceCategory!\n}\n\ninput ExperienceCategoryCreateInput {\n  mainColor: String\n  name: String!\n  experience: ExperienceCreateOneWithoutCategoryInput\n}\n\ninput ExperienceCategoryCreateOneWithoutExperienceInput {\n  create: ExperienceCategoryCreateWithoutExperienceInput\n  connect: ExperienceCategoryWhereUniqueInput\n}\n\ninput ExperienceCategoryCreateWithoutExperienceInput {\n  mainColor: String\n  name: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype ExperienceCategoryEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: ExperienceCategory!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum ExperienceCategoryOrderByInput {\n  id_ASC\n  id_DESC\n  mainColor_ASC\n  mainColor_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ExperienceCategoryPreviousValues {\n  id: ID!\n  mainColor: String!\n  name: String!\n}\n\ntype ExperienceCategorySubscriptionPayload {\n  mutation: MutationType!\n  node: ExperienceCategory\n  updatedFields: [String!]\n  previousValues: ExperienceCategoryPreviousValues\n}\n\ninput ExperienceCategorySubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ExperienceCategorySubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ExperienceCategorySubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ExperienceCategorySubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ExperienceCategoryWhereInput\n}\n\ninput ExperienceCategoryUpdateInput {\n  mainColor: String\n  name: String\n  experience: ExperienceUpdateOneWithoutCategoryInput\n}\n\ninput ExperienceCategoryUpdateOneWithoutExperienceInput {\n  create: ExperienceCategoryCreateWithoutExperienceInput\n  connect: ExperienceCategoryWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: ExperienceCategoryUpdateWithoutExperienceDataInput\n  upsert: ExperienceCategoryUpsertWithoutExperienceInput\n}\n\ninput ExperienceCategoryUpdateWithoutExperienceDataInput {\n  mainColor: String\n  name: String\n}\n\ninput ExperienceCategoryUpsertWithoutExperienceInput {\n  update: ExperienceCategoryUpdateWithoutExperienceDataInput!\n  create: ExperienceCategoryCreateWithoutExperienceInput!\n}\n\ninput ExperienceCategoryWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ExperienceCategoryWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ExperienceCategoryWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ExperienceCategoryWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  mainColor: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  mainColor_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  mainColor_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  mainColor_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  mainColor_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  mainColor_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  mainColor_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  mainColor_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  mainColor_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  mainColor_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  mainColor_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  mainColor_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  mainColor_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  mainColor_not_ends_with: String\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  experience: ExperienceWhereInput\n}\n\ninput ExperienceCategoryWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype ExperienceConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [ExperienceEdge]!\n  aggregate: AggregateExperience!\n}\n\ninput ExperienceCreateInput {\n  title: String!\n  pricePerPerson: Int!\n  popularity: Int!\n  category: ExperienceCategoryCreateOneWithoutExperienceInput\n  host: UserCreateOneWithoutHostingExperiencesInput!\n  location: LocationCreateOneWithoutExperienceInput!\n  reviews: ReviewCreateManyWithoutExperienceInput\n  preview: PictureCreateOneInput!\n}\n\ninput ExperienceCreateManyWithoutHostInput {\n  create: [ExperienceCreateWithoutHostInput!]\n  connect: [ExperienceWhereUniqueInput!]\n}\n\ninput ExperienceCreateOneWithoutCategoryInput {\n  create: ExperienceCreateWithoutCategoryInput\n  connect: ExperienceWhereUniqueInput\n}\n\ninput ExperienceCreateOneWithoutLocationInput {\n  create: ExperienceCreateWithoutLocationInput\n  connect: ExperienceWhereUniqueInput\n}\n\ninput ExperienceCreateOneWithoutReviewsInput {\n  create: ExperienceCreateWithoutReviewsInput\n  connect: ExperienceWhereUniqueInput\n}\n\ninput ExperienceCreateWithoutCategoryInput {\n  title: String!\n  pricePerPerson: Int!\n  popularity: Int!\n  host: UserCreateOneWithoutHostingExperiencesInput!\n  location: LocationCreateOneWithoutExperienceInput!\n  reviews: ReviewCreateManyWithoutExperienceInput\n  preview: PictureCreateOneInput!\n}\n\ninput ExperienceCreateWithoutHostInput {\n  title: String!\n  pricePerPerson: Int!\n  popularity: Int!\n  category: ExperienceCategoryCreateOneWithoutExperienceInput\n  location: LocationCreateOneWithoutExperienceInput!\n  reviews: ReviewCreateManyWithoutExperienceInput\n  preview: PictureCreateOneInput!\n}\n\ninput ExperienceCreateWithoutLocationInput {\n  title: String!\n  pricePerPerson: Int!\n  popularity: Int!\n  category: ExperienceCategoryCreateOneWithoutExperienceInput\n  host: UserCreateOneWithoutHostingExperiencesInput!\n  reviews: ReviewCreateManyWithoutExperienceInput\n  preview: PictureCreateOneInput!\n}\n\ninput ExperienceCreateWithoutReviewsInput {\n  title: String!\n  pricePerPerson: Int!\n  popularity: Int!\n  category: ExperienceCategoryCreateOneWithoutExperienceInput\n  host: UserCreateOneWithoutHostingExperiencesInput!\n  location: LocationCreateOneWithoutExperienceInput!\n  preview: PictureCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype ExperienceEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Experience!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum ExperienceOrderByInput {\n  id_ASC\n  id_DESC\n  title_ASC\n  title_DESC\n  pricePerPerson_ASC\n  pricePerPerson_DESC\n  popularity_ASC\n  popularity_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ExperiencePreviousValues {\n  id: ID!\n  title: String!\n  pricePerPerson: Int!\n  popularity: Int!\n}\n\ntype ExperienceSubscriptionPayload {\n  mutation: MutationType!\n  node: Experience\n  updatedFields: [String!]\n  previousValues: ExperiencePreviousValues\n}\n\ninput ExperienceSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ExperienceSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ExperienceSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ExperienceSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ExperienceWhereInput\n}\n\ninput ExperienceUpdateInput {\n  title: String\n  pricePerPerson: Int\n  popularity: Int\n  category: ExperienceCategoryUpdateOneWithoutExperienceInput\n  host: UserUpdateOneWithoutHostingExperiencesInput\n  location: LocationUpdateOneWithoutExperienceInput\n  reviews: ReviewUpdateManyWithoutExperienceInput\n  preview: PictureUpdateOneInput\n}\n\ninput ExperienceUpdateManyWithoutHostInput {\n  create: [ExperienceCreateWithoutHostInput!]\n  connect: [ExperienceWhereUniqueInput!]\n  disconnect: [ExperienceWhereUniqueInput!]\n  delete: [ExperienceWhereUniqueInput!]\n  update: [ExperienceUpdateWithWhereUniqueWithoutHostInput!]\n  upsert: [ExperienceUpsertWithWhereUniqueWithoutHostInput!]\n}\n\ninput ExperienceUpdateOneWithoutCategoryInput {\n  create: ExperienceCreateWithoutCategoryInput\n  connect: ExperienceWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: ExperienceUpdateWithoutCategoryDataInput\n  upsert: ExperienceUpsertWithoutCategoryInput\n}\n\ninput ExperienceUpdateOneWithoutLocationInput {\n  create: ExperienceCreateWithoutLocationInput\n  connect: ExperienceWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: ExperienceUpdateWithoutLocationDataInput\n  upsert: ExperienceUpsertWithoutLocationInput\n}\n\ninput ExperienceUpdateOneWithoutReviewsInput {\n  create: ExperienceCreateWithoutReviewsInput\n  connect: ExperienceWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: ExperienceUpdateWithoutReviewsDataInput\n  upsert: ExperienceUpsertWithoutReviewsInput\n}\n\ninput ExperienceUpdateWithoutCategoryDataInput {\n  title: String\n  pricePerPerson: Int\n  popularity: Int\n  host: UserUpdateOneWithoutHostingExperiencesInput\n  location: LocationUpdateOneWithoutExperienceInput\n  reviews: ReviewUpdateManyWithoutExperienceInput\n  preview: PictureUpdateOneInput\n}\n\ninput ExperienceUpdateWithoutHostDataInput {\n  title: String\n  pricePerPerson: Int\n  popularity: Int\n  category: ExperienceCategoryUpdateOneWithoutExperienceInput\n  location: LocationUpdateOneWithoutExperienceInput\n  reviews: ReviewUpdateManyWithoutExperienceInput\n  preview: PictureUpdateOneInput\n}\n\ninput ExperienceUpdateWithoutLocationDataInput {\n  title: String\n  pricePerPerson: Int\n  popularity: Int\n  category: ExperienceCategoryUpdateOneWithoutExperienceInput\n  host: UserUpdateOneWithoutHostingExperiencesInput\n  reviews: ReviewUpdateManyWithoutExperienceInput\n  preview: PictureUpdateOneInput\n}\n\ninput ExperienceUpdateWithoutReviewsDataInput {\n  title: String\n  pricePerPerson: Int\n  popularity: Int\n  category: ExperienceCategoryUpdateOneWithoutExperienceInput\n  host: UserUpdateOneWithoutHostingExperiencesInput\n  location: LocationUpdateOneWithoutExperienceInput\n  preview: PictureUpdateOneInput\n}\n\ninput ExperienceUpdateWithWhereUniqueWithoutHostInput {\n  where: ExperienceWhereUniqueInput!\n  data: ExperienceUpdateWithoutHostDataInput!\n}\n\ninput ExperienceUpsertWithoutCategoryInput {\n  update: ExperienceUpdateWithoutCategoryDataInput!\n  create: ExperienceCreateWithoutCategoryInput!\n}\n\ninput ExperienceUpsertWithoutLocationInput {\n  update: ExperienceUpdateWithoutLocationDataInput!\n  create: ExperienceCreateWithoutLocationInput!\n}\n\ninput ExperienceUpsertWithoutReviewsInput {\n  update: ExperienceUpdateWithoutReviewsDataInput!\n  create: ExperienceCreateWithoutReviewsInput!\n}\n\ninput ExperienceUpsertWithWhereUniqueWithoutHostInput {\n  where: ExperienceWhereUniqueInput!\n  update: ExperienceUpdateWithoutHostDataInput!\n  create: ExperienceCreateWithoutHostInput!\n}\n\ninput ExperienceWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ExperienceWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ExperienceWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ExperienceWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  title: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  title_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  title_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  title_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  title_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  title_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  title_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  title_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  title_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  title_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  title_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  title_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  title_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  title_not_ends_with: String\n  pricePerPerson: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  pricePerPerson_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  pricePerPerson_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  pricePerPerson_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  pricePerPerson_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  pricePerPerson_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  pricePerPerson_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  pricePerPerson_gte: Int\n  popularity: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  popularity_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  popularity_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  popularity_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  popularity_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  popularity_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  popularity_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  popularity_gte: Int\n  category: ExperienceCategoryWhereInput\n  host: UserWhereInput\n  location: LocationWhereInput\n  reviews_every: ReviewWhereInput\n  reviews_some: ReviewWhereInput\n  reviews_none: ReviewWhereInput\n  preview: PictureWhereInput\n}\n\ninput ExperienceWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype GuestRequirementsConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [GuestRequirementsEdge]!\n  aggregate: AggregateGuestRequirements!\n}\n\ninput GuestRequirementsCreateInput {\n  govIssuedId: Boolean\n  recommendationsFromOtherHosts: Boolean\n  guestTripInformation: Boolean\n  place: PlaceCreateOneWithoutGuestRequirementsInput!\n}\n\ninput GuestRequirementsCreateOneWithoutPlaceInput {\n  create: GuestRequirementsCreateWithoutPlaceInput\n  connect: GuestRequirementsWhereUniqueInput\n}\n\ninput GuestRequirementsCreateWithoutPlaceInput {\n  govIssuedId: Boolean\n  recommendationsFromOtherHosts: Boolean\n  guestTripInformation: Boolean\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype GuestRequirementsEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: GuestRequirements!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum GuestRequirementsOrderByInput {\n  id_ASC\n  id_DESC\n  govIssuedId_ASC\n  govIssuedId_DESC\n  recommendationsFromOtherHosts_ASC\n  recommendationsFromOtherHosts_DESC\n  guestTripInformation_ASC\n  guestTripInformation_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype GuestRequirementsPreviousValues {\n  id: ID!\n  govIssuedId: Boolean!\n  recommendationsFromOtherHosts: Boolean!\n  guestTripInformation: Boolean!\n}\n\ntype GuestRequirementsSubscriptionPayload {\n  mutation: MutationType!\n  node: GuestRequirements\n  updatedFields: [String!]\n  previousValues: GuestRequirementsPreviousValues\n}\n\ninput GuestRequirementsSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GuestRequirementsSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GuestRequirementsSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GuestRequirementsSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: GuestRequirementsWhereInput\n}\n\ninput GuestRequirementsUpdateInput {\n  govIssuedId: Boolean\n  recommendationsFromOtherHosts: Boolean\n  guestTripInformation: Boolean\n  place: PlaceUpdateOneWithoutGuestRequirementsInput\n}\n\ninput GuestRequirementsUpdateOneWithoutPlaceInput {\n  create: GuestRequirementsCreateWithoutPlaceInput\n  connect: GuestRequirementsWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: GuestRequirementsUpdateWithoutPlaceDataInput\n  upsert: GuestRequirementsUpsertWithoutPlaceInput\n}\n\ninput GuestRequirementsUpdateWithoutPlaceDataInput {\n  govIssuedId: Boolean\n  recommendationsFromOtherHosts: Boolean\n  guestTripInformation: Boolean\n}\n\ninput GuestRequirementsUpsertWithoutPlaceInput {\n  update: GuestRequirementsUpdateWithoutPlaceDataInput!\n  create: GuestRequirementsCreateWithoutPlaceInput!\n}\n\ninput GuestRequirementsWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [GuestRequirementsWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [GuestRequirementsWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [GuestRequirementsWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  govIssuedId: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  govIssuedId_not: Boolean\n  recommendationsFromOtherHosts: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  recommendationsFromOtherHosts_not: Boolean\n  guestTripInformation: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  guestTripInformation_not: Boolean\n  place: PlaceWhereInput\n}\n\ninput GuestRequirementsWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype HouseRulesConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [HouseRulesEdge]!\n  aggregate: AggregateHouseRules!\n}\n\ninput HouseRulesCreateInput {\n  suitableForChildren: Boolean\n  suitableForInfants: Boolean\n  petsAllowed: Boolean\n  smokingAllowed: Boolean\n  partiesAndEventsAllowed: Boolean\n  additionalRules: String\n}\n\ninput HouseRulesCreateOneInput {\n  create: HouseRulesCreateInput\n  connect: HouseRulesWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype HouseRulesEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: HouseRules!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum HouseRulesOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  suitableForChildren_ASC\n  suitableForChildren_DESC\n  suitableForInfants_ASC\n  suitableForInfants_DESC\n  petsAllowed_ASC\n  petsAllowed_DESC\n  smokingAllowed_ASC\n  smokingAllowed_DESC\n  partiesAndEventsAllowed_ASC\n  partiesAndEventsAllowed_DESC\n  additionalRules_ASC\n  additionalRules_DESC\n}\n\ntype HouseRulesPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  suitableForChildren: Boolean\n  suitableForInfants: Boolean\n  petsAllowed: Boolean\n  smokingAllowed: Boolean\n  partiesAndEventsAllowed: Boolean\n  additionalRules: String\n}\n\ntype HouseRulesSubscriptionPayload {\n  mutation: MutationType!\n  node: HouseRules\n  updatedFields: [String!]\n  previousValues: HouseRulesPreviousValues\n}\n\ninput HouseRulesSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [HouseRulesSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [HouseRulesSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [HouseRulesSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: HouseRulesWhereInput\n}\n\ninput HouseRulesUpdateDataInput {\n  suitableForChildren: Boolean\n  suitableForInfants: Boolean\n  petsAllowed: Boolean\n  smokingAllowed: Boolean\n  partiesAndEventsAllowed: Boolean\n  additionalRules: String\n}\n\ninput HouseRulesUpdateInput {\n  suitableForChildren: Boolean\n  suitableForInfants: Boolean\n  petsAllowed: Boolean\n  smokingAllowed: Boolean\n  partiesAndEventsAllowed: Boolean\n  additionalRules: String\n}\n\ninput HouseRulesUpdateOneInput {\n  create: HouseRulesCreateInput\n  connect: HouseRulesWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: HouseRulesUpdateDataInput\n  upsert: HouseRulesUpsertNestedInput\n}\n\ninput HouseRulesUpsertNestedInput {\n  update: HouseRulesUpdateDataInput!\n  create: HouseRulesCreateInput!\n}\n\ninput HouseRulesWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [HouseRulesWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [HouseRulesWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [HouseRulesWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  suitableForChildren: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  suitableForChildren_not: Boolean\n  suitableForInfants: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  suitableForInfants_not: Boolean\n  petsAllowed: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  petsAllowed_not: Boolean\n  smokingAllowed: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  smokingAllowed_not: Boolean\n  partiesAndEventsAllowed: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  partiesAndEventsAllowed_not: Boolean\n  additionalRules: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  additionalRules_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  additionalRules_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  additionalRules_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  additionalRules_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  additionalRules_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  additionalRules_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  additionalRules_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  additionalRules_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  additionalRules_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  additionalRules_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  additionalRules_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  additionalRules_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  additionalRules_not_ends_with: String\n  _MagicalBackRelation_HouseRulesToPlace_every: PlaceWhereInput\n  _MagicalBackRelation_HouseRulesToPlace_some: PlaceWhereInput\n  _MagicalBackRelation_HouseRulesToPlace_none: PlaceWhereInput\n}\n\ninput HouseRulesWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LocationConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LocationEdge]!\n  aggregate: AggregateLocation!\n}\n\ninput LocationCreateInput {\n  lat: Float!\n  lng: Float!\n  address: String\n  directions: String\n  neighbourHood: NeighbourhoodCreateOneWithoutLocationsInput\n  user: UserCreateOneWithoutLocationInput\n  place: PlaceCreateOneWithoutLocationInput\n  experience: ExperienceCreateOneWithoutLocationInput\n  restaurant: RestaurantCreateOneWithoutLocationInput\n}\n\ninput LocationCreateManyWithoutNeighbourHoodInput {\n  create: [LocationCreateWithoutNeighbourHoodInput!]\n  connect: [LocationWhereUniqueInput!]\n}\n\ninput LocationCreateOneWithoutExperienceInput {\n  create: LocationCreateWithoutExperienceInput\n  connect: LocationWhereUniqueInput\n}\n\ninput LocationCreateOneWithoutPlaceInput {\n  create: LocationCreateWithoutPlaceInput\n  connect: LocationWhereUniqueInput\n}\n\ninput LocationCreateOneWithoutRestaurantInput {\n  create: LocationCreateWithoutRestaurantInput\n  connect: LocationWhereUniqueInput\n}\n\ninput LocationCreateOneWithoutUserInput {\n  create: LocationCreateWithoutUserInput\n  connect: LocationWhereUniqueInput\n}\n\ninput LocationCreateWithoutExperienceInput {\n  lat: Float!\n  lng: Float!\n  address: String\n  directions: String\n  neighbourHood: NeighbourhoodCreateOneWithoutLocationsInput\n  user: UserCreateOneWithoutLocationInput\n  place: PlaceCreateOneWithoutLocationInput\n  restaurant: RestaurantCreateOneWithoutLocationInput\n}\n\ninput LocationCreateWithoutNeighbourHoodInput {\n  lat: Float!\n  lng: Float!\n  address: String\n  directions: String\n  user: UserCreateOneWithoutLocationInput\n  place: PlaceCreateOneWithoutLocationInput\n  experience: ExperienceCreateOneWithoutLocationInput\n  restaurant: RestaurantCreateOneWithoutLocationInput\n}\n\ninput LocationCreateWithoutPlaceInput {\n  lat: Float!\n  lng: Float!\n  address: String\n  directions: String\n  neighbourHood: NeighbourhoodCreateOneWithoutLocationsInput\n  user: UserCreateOneWithoutLocationInput\n  experience: ExperienceCreateOneWithoutLocationInput\n  restaurant: RestaurantCreateOneWithoutLocationInput\n}\n\ninput LocationCreateWithoutRestaurantInput {\n  lat: Float!\n  lng: Float!\n  address: String\n  directions: String\n  neighbourHood: NeighbourhoodCreateOneWithoutLocationsInput\n  user: UserCreateOneWithoutLocationInput\n  place: PlaceCreateOneWithoutLocationInput\n  experience: ExperienceCreateOneWithoutLocationInput\n}\n\ninput LocationCreateWithoutUserInput {\n  lat: Float!\n  lng: Float!\n  address: String\n  directions: String\n  neighbourHood: NeighbourhoodCreateOneWithoutLocationsInput\n  place: PlaceCreateOneWithoutLocationInput\n  experience: ExperienceCreateOneWithoutLocationInput\n  restaurant: RestaurantCreateOneWithoutLocationInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LocationEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Location!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LocationOrderByInput {\n  id_ASC\n  id_DESC\n  lat_ASC\n  lat_DESC\n  lng_ASC\n  lng_DESC\n  address_ASC\n  address_DESC\n  directions_ASC\n  directions_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype LocationPreviousValues {\n  id: ID!\n  lat: Float!\n  lng: Float!\n  address: String\n  directions: String\n}\n\ntype LocationSubscriptionPayload {\n  mutation: MutationType!\n  node: Location\n  updatedFields: [String!]\n  previousValues: LocationPreviousValues\n}\n\ninput LocationSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LocationSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LocationSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LocationSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LocationWhereInput\n}\n\ninput LocationUpdateInput {\n  lat: Float\n  lng: Float\n  address: String\n  directions: String\n  neighbourHood: NeighbourhoodUpdateOneWithoutLocationsInput\n  user: UserUpdateOneWithoutLocationInput\n  place: PlaceUpdateOneWithoutLocationInput\n  experience: ExperienceUpdateOneWithoutLocationInput\n  restaurant: RestaurantUpdateOneWithoutLocationInput\n}\n\ninput LocationUpdateManyWithoutNeighbourHoodInput {\n  create: [LocationCreateWithoutNeighbourHoodInput!]\n  connect: [LocationWhereUniqueInput!]\n  disconnect: [LocationWhereUniqueInput!]\n  delete: [LocationWhereUniqueInput!]\n  update: [LocationUpdateWithWhereUniqueWithoutNeighbourHoodInput!]\n  upsert: [LocationUpsertWithWhereUniqueWithoutNeighbourHoodInput!]\n}\n\ninput LocationUpdateOneWithoutExperienceInput {\n  create: LocationCreateWithoutExperienceInput\n  connect: LocationWhereUniqueInput\n  delete: Boolean\n  update: LocationUpdateWithoutExperienceDataInput\n  upsert: LocationUpsertWithoutExperienceInput\n}\n\ninput LocationUpdateOneWithoutPlaceInput {\n  create: LocationCreateWithoutPlaceInput\n  connect: LocationWhereUniqueInput\n  delete: Boolean\n  update: LocationUpdateWithoutPlaceDataInput\n  upsert: LocationUpsertWithoutPlaceInput\n}\n\ninput LocationUpdateOneWithoutRestaurantInput {\n  create: LocationCreateWithoutRestaurantInput\n  connect: LocationWhereUniqueInput\n  delete: Boolean\n  update: LocationUpdateWithoutRestaurantDataInput\n  upsert: LocationUpsertWithoutRestaurantInput\n}\n\ninput LocationUpdateOneWithoutUserInput {\n  create: LocationCreateWithoutUserInput\n  connect: LocationWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: LocationUpdateWithoutUserDataInput\n  upsert: LocationUpsertWithoutUserInput\n}\n\ninput LocationUpdateWithoutExperienceDataInput {\n  lat: Float\n  lng: Float\n  address: String\n  directions: String\n  neighbourHood: NeighbourhoodUpdateOneWithoutLocationsInput\n  user: UserUpdateOneWithoutLocationInput\n  place: PlaceUpdateOneWithoutLocationInput\n  restaurant: RestaurantUpdateOneWithoutLocationInput\n}\n\ninput LocationUpdateWithoutNeighbourHoodDataInput {\n  lat: Float\n  lng: Float\n  address: String\n  directions: String\n  user: UserUpdateOneWithoutLocationInput\n  place: PlaceUpdateOneWithoutLocationInput\n  experience: ExperienceUpdateOneWithoutLocationInput\n  restaurant: RestaurantUpdateOneWithoutLocationInput\n}\n\ninput LocationUpdateWithoutPlaceDataInput {\n  lat: Float\n  lng: Float\n  address: String\n  directions: String\n  neighbourHood: NeighbourhoodUpdateOneWithoutLocationsInput\n  user: UserUpdateOneWithoutLocationInput\n  experience: ExperienceUpdateOneWithoutLocationInput\n  restaurant: RestaurantUpdateOneWithoutLocationInput\n}\n\ninput LocationUpdateWithoutRestaurantDataInput {\n  lat: Float\n  lng: Float\n  address: String\n  directions: String\n  neighbourHood: NeighbourhoodUpdateOneWithoutLocationsInput\n  user: UserUpdateOneWithoutLocationInput\n  place: PlaceUpdateOneWithoutLocationInput\n  experience: ExperienceUpdateOneWithoutLocationInput\n}\n\ninput LocationUpdateWithoutUserDataInput {\n  lat: Float\n  lng: Float\n  address: String\n  directions: String\n  neighbourHood: NeighbourhoodUpdateOneWithoutLocationsInput\n  place: PlaceUpdateOneWithoutLocationInput\n  experience: ExperienceUpdateOneWithoutLocationInput\n  restaurant: RestaurantUpdateOneWithoutLocationInput\n}\n\ninput LocationUpdateWithWhereUniqueWithoutNeighbourHoodInput {\n  where: LocationWhereUniqueInput!\n  data: LocationUpdateWithoutNeighbourHoodDataInput!\n}\n\ninput LocationUpsertWithoutExperienceInput {\n  update: LocationUpdateWithoutExperienceDataInput!\n  create: LocationCreateWithoutExperienceInput!\n}\n\ninput LocationUpsertWithoutPlaceInput {\n  update: LocationUpdateWithoutPlaceDataInput!\n  create: LocationCreateWithoutPlaceInput!\n}\n\ninput LocationUpsertWithoutRestaurantInput {\n  update: LocationUpdateWithoutRestaurantDataInput!\n  create: LocationCreateWithoutRestaurantInput!\n}\n\ninput LocationUpsertWithoutUserInput {\n  update: LocationUpdateWithoutUserDataInput!\n  create: LocationCreateWithoutUserInput!\n}\n\ninput LocationUpsertWithWhereUniqueWithoutNeighbourHoodInput {\n  where: LocationWhereUniqueInput!\n  update: LocationUpdateWithoutNeighbourHoodDataInput!\n  create: LocationCreateWithoutNeighbourHoodInput!\n}\n\ninput LocationWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LocationWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LocationWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LocationWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  lat: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  lat_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  lat_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  lat_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  lat_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  lat_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  lat_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  lat_gte: Float\n  lng: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  lng_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  lng_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  lng_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  lng_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  lng_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  lng_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  lng_gte: Float\n  address: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  address_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  address_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  address_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  address_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  address_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  address_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  address_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  address_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  address_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  address_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  address_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  address_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  address_not_ends_with: String\n  directions: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  directions_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  directions_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  directions_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  directions_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  directions_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  directions_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  directions_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  directions_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  directions_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  directions_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  directions_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  directions_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  directions_not_ends_with: String\n  neighbourHood: NeighbourhoodWhereInput\n  user: UserWhereInput\n  place: PlaceWhereInput\n  experience: ExperienceWhereInput\n  restaurant: RestaurantWhereInput\n}\n\ninput LocationWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype MessageConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [MessageEdge]!\n  aggregate: AggregateMessage!\n}\n\ninput MessageCreateInput {\n  deliveredAt: DateTime!\n  readAt: DateTime!\n  from: UserCreateOneWithoutSentMessagesInput!\n  to: UserCreateOneWithoutReceivedMessagesInput!\n}\n\ninput MessageCreateManyWithoutFromInput {\n  create: [MessageCreateWithoutFromInput!]\n  connect: [MessageWhereUniqueInput!]\n}\n\ninput MessageCreateManyWithoutToInput {\n  create: [MessageCreateWithoutToInput!]\n  connect: [MessageWhereUniqueInput!]\n}\n\ninput MessageCreateWithoutFromInput {\n  deliveredAt: DateTime!\n  readAt: DateTime!\n  to: UserCreateOneWithoutReceivedMessagesInput!\n}\n\ninput MessageCreateWithoutToInput {\n  deliveredAt: DateTime!\n  readAt: DateTime!\n  from: UserCreateOneWithoutSentMessagesInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype MessageEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Message!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum MessageOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  deliveredAt_ASC\n  deliveredAt_DESC\n  readAt_ASC\n  readAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype MessagePreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  deliveredAt: DateTime!\n  readAt: DateTime!\n}\n\ntype MessageSubscriptionPayload {\n  mutation: MutationType!\n  node: Message\n  updatedFields: [String!]\n  previousValues: MessagePreviousValues\n}\n\ninput MessageSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MessageSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MessageSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MessageSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: MessageWhereInput\n}\n\ninput MessageUpdateInput {\n  deliveredAt: DateTime\n  readAt: DateTime\n  from: UserUpdateOneWithoutSentMessagesInput\n  to: UserUpdateOneWithoutReceivedMessagesInput\n}\n\ninput MessageUpdateManyWithoutFromInput {\n  create: [MessageCreateWithoutFromInput!]\n  connect: [MessageWhereUniqueInput!]\n  disconnect: [MessageWhereUniqueInput!]\n  delete: [MessageWhereUniqueInput!]\n  update: [MessageUpdateWithWhereUniqueWithoutFromInput!]\n  upsert: [MessageUpsertWithWhereUniqueWithoutFromInput!]\n}\n\ninput MessageUpdateManyWithoutToInput {\n  create: [MessageCreateWithoutToInput!]\n  connect: [MessageWhereUniqueInput!]\n  disconnect: [MessageWhereUniqueInput!]\n  delete: [MessageWhereUniqueInput!]\n  update: [MessageUpdateWithWhereUniqueWithoutToInput!]\n  upsert: [MessageUpsertWithWhereUniqueWithoutToInput!]\n}\n\ninput MessageUpdateWithoutFromDataInput {\n  deliveredAt: DateTime\n  readAt: DateTime\n  to: UserUpdateOneWithoutReceivedMessagesInput\n}\n\ninput MessageUpdateWithoutToDataInput {\n  deliveredAt: DateTime\n  readAt: DateTime\n  from: UserUpdateOneWithoutSentMessagesInput\n}\n\ninput MessageUpdateWithWhereUniqueWithoutFromInput {\n  where: MessageWhereUniqueInput!\n  data: MessageUpdateWithoutFromDataInput!\n}\n\ninput MessageUpdateWithWhereUniqueWithoutToInput {\n  where: MessageWhereUniqueInput!\n  data: MessageUpdateWithoutToDataInput!\n}\n\ninput MessageUpsertWithWhereUniqueWithoutFromInput {\n  where: MessageWhereUniqueInput!\n  update: MessageUpdateWithoutFromDataInput!\n  create: MessageCreateWithoutFromInput!\n}\n\ninput MessageUpsertWithWhereUniqueWithoutToInput {\n  where: MessageWhereUniqueInput!\n  update: MessageUpdateWithoutToDataInput!\n  create: MessageCreateWithoutToInput!\n}\n\ninput MessageWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MessageWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MessageWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MessageWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  deliveredAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  deliveredAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  deliveredAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  deliveredAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  deliveredAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  deliveredAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  deliveredAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  deliveredAt_gte: DateTime\n  readAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  readAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  readAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  readAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  readAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  readAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  readAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  readAt_gte: DateTime\n  from: UserWhereInput\n  to: UserWhereInput\n}\n\ninput MessageWhereUniqueInput {\n  id: ID\n}\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  createPlace(data: PlaceCreateInput!): Place!\n  createPricing(data: PricingCreateInput!): Pricing!\n  createGuestRequirements(data: GuestRequirementsCreateInput!): GuestRequirements!\n  createPolicies(data: PoliciesCreateInput!): Policies!\n  createViews(data: ViewsCreateInput!): Views!\n  createLocation(data: LocationCreateInput!): Location!\n  createNeighbourhood(data: NeighbourhoodCreateInput!): Neighbourhood!\n  createCity(data: CityCreateInput!): City!\n  createExperience(data: ExperienceCreateInput!): Experience!\n  createExperienceCategory(data: ExperienceCategoryCreateInput!): ExperienceCategory!\n  createAmenities(data: AmenitiesCreateInput!): Amenities!\n  createReview(data: ReviewCreateInput!): Review!\n  createBooking(data: BookingCreateInput!): Booking!\n  createPayment(data: PaymentCreateInput!): Payment!\n  createPaymentAccount(data: PaymentAccountCreateInput!): PaymentAccount!\n  createPaypalInformation(data: PaypalInformationCreateInput!): PaypalInformation!\n  createCreditCardInformation(data: CreditCardInformationCreateInput!): CreditCardInformation!\n  createMessage(data: MessageCreateInput!): Message!\n  createNotification(data: NotificationCreateInput!): Notification!\n  createRestaurant(data: RestaurantCreateInput!): Restaurant!\n  createPicture(data: PictureCreateInput!): Picture!\n  createHouseRules(data: HouseRulesCreateInput!): HouseRules!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updatePlace(data: PlaceUpdateInput!, where: PlaceWhereUniqueInput!): Place\n  updatePricing(data: PricingUpdateInput!, where: PricingWhereUniqueInput!): Pricing\n  updateGuestRequirements(data: GuestRequirementsUpdateInput!, where: GuestRequirementsWhereUniqueInput!): GuestRequirements\n  updatePolicies(data: PoliciesUpdateInput!, where: PoliciesWhereUniqueInput!): Policies\n  updateViews(data: ViewsUpdateInput!, where: ViewsWhereUniqueInput!): Views\n  updateLocation(data: LocationUpdateInput!, where: LocationWhereUniqueInput!): Location\n  updateNeighbourhood(data: NeighbourhoodUpdateInput!, where: NeighbourhoodWhereUniqueInput!): Neighbourhood\n  updateCity(data: CityUpdateInput!, where: CityWhereUniqueInput!): City\n  updateExperience(data: ExperienceUpdateInput!, where: ExperienceWhereUniqueInput!): Experience\n  updateExperienceCategory(data: ExperienceCategoryUpdateInput!, where: ExperienceCategoryWhereUniqueInput!): ExperienceCategory\n  updateAmenities(data: AmenitiesUpdateInput!, where: AmenitiesWhereUniqueInput!): Amenities\n  updateReview(data: ReviewUpdateInput!, where: ReviewWhereUniqueInput!): Review\n  updateBooking(data: BookingUpdateInput!, where: BookingWhereUniqueInput!): Booking\n  updatePayment(data: PaymentUpdateInput!, where: PaymentWhereUniqueInput!): Payment\n  updatePaymentAccount(data: PaymentAccountUpdateInput!, where: PaymentAccountWhereUniqueInput!): PaymentAccount\n  updatePaypalInformation(data: PaypalInformationUpdateInput!, where: PaypalInformationWhereUniqueInput!): PaypalInformation\n  updateCreditCardInformation(data: CreditCardInformationUpdateInput!, where: CreditCardInformationWhereUniqueInput!): CreditCardInformation\n  updateMessage(data: MessageUpdateInput!, where: MessageWhereUniqueInput!): Message\n  updateNotification(data: NotificationUpdateInput!, where: NotificationWhereUniqueInput!): Notification\n  updateRestaurant(data: RestaurantUpdateInput!, where: RestaurantWhereUniqueInput!): Restaurant\n  updateHouseRules(data: HouseRulesUpdateInput!, where: HouseRulesWhereUniqueInput!): HouseRules\n  deleteUser(where: UserWhereUniqueInput!): User\n  deletePlace(where: PlaceWhereUniqueInput!): Place\n  deletePricing(where: PricingWhereUniqueInput!): Pricing\n  deleteGuestRequirements(where: GuestRequirementsWhereUniqueInput!): GuestRequirements\n  deletePolicies(where: PoliciesWhereUniqueInput!): Policies\n  deleteViews(where: ViewsWhereUniqueInput!): Views\n  deleteLocation(where: LocationWhereUniqueInput!): Location\n  deleteNeighbourhood(where: NeighbourhoodWhereUniqueInput!): Neighbourhood\n  deleteCity(where: CityWhereUniqueInput!): City\n  deleteExperience(where: ExperienceWhereUniqueInput!): Experience\n  deleteExperienceCategory(where: ExperienceCategoryWhereUniqueInput!): ExperienceCategory\n  deleteAmenities(where: AmenitiesWhereUniqueInput!): Amenities\n  deleteReview(where: ReviewWhereUniqueInput!): Review\n  deleteBooking(where: BookingWhereUniqueInput!): Booking\n  deletePayment(where: PaymentWhereUniqueInput!): Payment\n  deletePaymentAccount(where: PaymentAccountWhereUniqueInput!): PaymentAccount\n  deletePaypalInformation(where: PaypalInformationWhereUniqueInput!): PaypalInformation\n  deleteCreditCardInformation(where: CreditCardInformationWhereUniqueInput!): CreditCardInformation\n  deleteMessage(where: MessageWhereUniqueInput!): Message\n  deleteNotification(where: NotificationWhereUniqueInput!): Notification\n  deleteRestaurant(where: RestaurantWhereUniqueInput!): Restaurant\n  deleteHouseRules(where: HouseRulesWhereUniqueInput!): HouseRules\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertPlace(where: PlaceWhereUniqueInput!, create: PlaceCreateInput!, update: PlaceUpdateInput!): Place!\n  upsertPricing(where: PricingWhereUniqueInput!, create: PricingCreateInput!, update: PricingUpdateInput!): Pricing!\n  upsertGuestRequirements(where: GuestRequirementsWhereUniqueInput!, create: GuestRequirementsCreateInput!, update: GuestRequirementsUpdateInput!): GuestRequirements!\n  upsertPolicies(where: PoliciesWhereUniqueInput!, create: PoliciesCreateInput!, update: PoliciesUpdateInput!): Policies!\n  upsertViews(where: ViewsWhereUniqueInput!, create: ViewsCreateInput!, update: ViewsUpdateInput!): Views!\n  upsertLocation(where: LocationWhereUniqueInput!, create: LocationCreateInput!, update: LocationUpdateInput!): Location!\n  upsertNeighbourhood(where: NeighbourhoodWhereUniqueInput!, create: NeighbourhoodCreateInput!, update: NeighbourhoodUpdateInput!): Neighbourhood!\n  upsertCity(where: CityWhereUniqueInput!, create: CityCreateInput!, update: CityUpdateInput!): City!\n  upsertExperience(where: ExperienceWhereUniqueInput!, create: ExperienceCreateInput!, update: ExperienceUpdateInput!): Experience!\n  upsertExperienceCategory(where: ExperienceCategoryWhereUniqueInput!, create: ExperienceCategoryCreateInput!, update: ExperienceCategoryUpdateInput!): ExperienceCategory!\n  upsertAmenities(where: AmenitiesWhereUniqueInput!, create: AmenitiesCreateInput!, update: AmenitiesUpdateInput!): Amenities!\n  upsertReview(where: ReviewWhereUniqueInput!, create: ReviewCreateInput!, update: ReviewUpdateInput!): Review!\n  upsertBooking(where: BookingWhereUniqueInput!, create: BookingCreateInput!, update: BookingUpdateInput!): Booking!\n  upsertPayment(where: PaymentWhereUniqueInput!, create: PaymentCreateInput!, update: PaymentUpdateInput!): Payment!\n  upsertPaymentAccount(where: PaymentAccountWhereUniqueInput!, create: PaymentAccountCreateInput!, update: PaymentAccountUpdateInput!): PaymentAccount!\n  upsertPaypalInformation(where: PaypalInformationWhereUniqueInput!, create: PaypalInformationCreateInput!, update: PaypalInformationUpdateInput!): PaypalInformation!\n  upsertCreditCardInformation(where: CreditCardInformationWhereUniqueInput!, create: CreditCardInformationCreateInput!, update: CreditCardInformationUpdateInput!): CreditCardInformation!\n  upsertMessage(where: MessageWhereUniqueInput!, create: MessageCreateInput!, update: MessageUpdateInput!): Message!\n  upsertNotification(where: NotificationWhereUniqueInput!, create: NotificationCreateInput!, update: NotificationUpdateInput!): Notification!\n  upsertRestaurant(where: RestaurantWhereUniqueInput!, create: RestaurantCreateInput!, update: RestaurantUpdateInput!): Restaurant!\n  upsertHouseRules(where: HouseRulesWhereUniqueInput!, create: HouseRulesCreateInput!, update: HouseRulesUpdateInput!): HouseRules!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  updateManyPlaces(data: PlaceUpdateInput!, where: PlaceWhereInput): BatchPayload!\n  updateManyPricings(data: PricingUpdateInput!, where: PricingWhereInput): BatchPayload!\n  updateManyGuestRequirementses(data: GuestRequirementsUpdateInput!, where: GuestRequirementsWhereInput): BatchPayload!\n  updateManyPolicieses(data: PoliciesUpdateInput!, where: PoliciesWhereInput): BatchPayload!\n  updateManyViewses(data: ViewsUpdateInput!, where: ViewsWhereInput): BatchPayload!\n  updateManyLocations(data: LocationUpdateInput!, where: LocationWhereInput): BatchPayload!\n  updateManyNeighbourhoods(data: NeighbourhoodUpdateInput!, where: NeighbourhoodWhereInput): BatchPayload!\n  updateManyCities(data: CityUpdateInput!, where: CityWhereInput): BatchPayload!\n  updateManyExperiences(data: ExperienceUpdateInput!, where: ExperienceWhereInput): BatchPayload!\n  updateManyExperienceCategories(data: ExperienceCategoryUpdateInput!, where: ExperienceCategoryWhereInput): BatchPayload!\n  updateManyAmenitieses(data: AmenitiesUpdateInput!, where: AmenitiesWhereInput): BatchPayload!\n  updateManyReviews(data: ReviewUpdateInput!, where: ReviewWhereInput): BatchPayload!\n  updateManyBookings(data: BookingUpdateInput!, where: BookingWhereInput): BatchPayload!\n  updateManyPayments(data: PaymentUpdateInput!, where: PaymentWhereInput): BatchPayload!\n  updateManyPaymentAccounts(data: PaymentAccountUpdateInput!, where: PaymentAccountWhereInput): BatchPayload!\n  updateManyPaypalInformations(data: PaypalInformationUpdateInput!, where: PaypalInformationWhereInput): BatchPayload!\n  updateManyCreditCardInformations(data: CreditCardInformationUpdateInput!, where: CreditCardInformationWhereInput): BatchPayload!\n  updateManyMessages(data: MessageUpdateInput!, where: MessageWhereInput): BatchPayload!\n  updateManyNotifications(data: NotificationUpdateInput!, where: NotificationWhereInput): BatchPayload!\n  updateManyRestaurants(data: RestaurantUpdateInput!, where: RestaurantWhereInput): BatchPayload!\n  updateManyPictures(data: PictureUpdateInput!, where: PictureWhereInput): BatchPayload!\n  updateManyHouseRuleses(data: HouseRulesUpdateInput!, where: HouseRulesWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyPlaces(where: PlaceWhereInput): BatchPayload!\n  deleteManyPricings(where: PricingWhereInput): BatchPayload!\n  deleteManyGuestRequirementses(where: GuestRequirementsWhereInput): BatchPayload!\n  deleteManyPolicieses(where: PoliciesWhereInput): BatchPayload!\n  deleteManyViewses(where: ViewsWhereInput): BatchPayload!\n  deleteManyLocations(where: LocationWhereInput): BatchPayload!\n  deleteManyNeighbourhoods(where: NeighbourhoodWhereInput): BatchPayload!\n  deleteManyCities(where: CityWhereInput): BatchPayload!\n  deleteManyExperiences(where: ExperienceWhereInput): BatchPayload!\n  deleteManyExperienceCategories(where: ExperienceCategoryWhereInput): BatchPayload!\n  deleteManyAmenitieses(where: AmenitiesWhereInput): BatchPayload!\n  deleteManyReviews(where: ReviewWhereInput): BatchPayload!\n  deleteManyBookings(where: BookingWhereInput): BatchPayload!\n  deleteManyPayments(where: PaymentWhereInput): BatchPayload!\n  deleteManyPaymentAccounts(where: PaymentAccountWhereInput): BatchPayload!\n  deleteManyPaypalInformations(where: PaypalInformationWhereInput): BatchPayload!\n  deleteManyCreditCardInformations(where: CreditCardInformationWhereInput): BatchPayload!\n  deleteManyMessages(where: MessageWhereInput): BatchPayload!\n  deleteManyNotifications(where: NotificationWhereInput): BatchPayload!\n  deleteManyRestaurants(where: RestaurantWhereInput): BatchPayload!\n  deleteManyPictures(where: PictureWhereInput): BatchPayload!\n  deleteManyHouseRuleses(where: HouseRulesWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype NeighbourhoodConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [NeighbourhoodEdge]!\n  aggregate: AggregateNeighbourhood!\n}\n\ninput NeighbourhoodCreateInput {\n  name: String!\n  slug: String!\n  featured: Boolean!\n  popularity: Int!\n  locations: LocationCreateManyWithoutNeighbourHoodInput\n  homePreview: PictureCreateOneInput\n  city: CityCreateOneWithoutNeighbourhoodsInput!\n}\n\ninput NeighbourhoodCreateManyWithoutCityInput {\n  create: [NeighbourhoodCreateWithoutCityInput!]\n  connect: [NeighbourhoodWhereUniqueInput!]\n}\n\ninput NeighbourhoodCreateOneWithoutLocationsInput {\n  create: NeighbourhoodCreateWithoutLocationsInput\n  connect: NeighbourhoodWhereUniqueInput\n}\n\ninput NeighbourhoodCreateWithoutCityInput {\n  name: String!\n  slug: String!\n  featured: Boolean!\n  popularity: Int!\n  locations: LocationCreateManyWithoutNeighbourHoodInput\n  homePreview: PictureCreateOneInput\n}\n\ninput NeighbourhoodCreateWithoutLocationsInput {\n  name: String!\n  slug: String!\n  featured: Boolean!\n  popularity: Int!\n  homePreview: PictureCreateOneInput\n  city: CityCreateOneWithoutNeighbourhoodsInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype NeighbourhoodEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Neighbourhood!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum NeighbourhoodOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  slug_ASC\n  slug_DESC\n  featured_ASC\n  featured_DESC\n  popularity_ASC\n  popularity_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype NeighbourhoodPreviousValues {\n  id: ID!\n  name: String!\n  slug: String!\n  featured: Boolean!\n  popularity: Int!\n}\n\ntype NeighbourhoodSubscriptionPayload {\n  mutation: MutationType!\n  node: Neighbourhood\n  updatedFields: [String!]\n  previousValues: NeighbourhoodPreviousValues\n}\n\ninput NeighbourhoodSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [NeighbourhoodSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [NeighbourhoodSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [NeighbourhoodSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: NeighbourhoodWhereInput\n}\n\ninput NeighbourhoodUpdateInput {\n  name: String\n  slug: String\n  featured: Boolean\n  popularity: Int\n  locations: LocationUpdateManyWithoutNeighbourHoodInput\n  homePreview: PictureUpdateOneInput\n  city: CityUpdateOneWithoutNeighbourhoodsInput\n}\n\ninput NeighbourhoodUpdateManyWithoutCityInput {\n  create: [NeighbourhoodCreateWithoutCityInput!]\n  connect: [NeighbourhoodWhereUniqueInput!]\n  disconnect: [NeighbourhoodWhereUniqueInput!]\n  delete: [NeighbourhoodWhereUniqueInput!]\n  update: [NeighbourhoodUpdateWithWhereUniqueWithoutCityInput!]\n  upsert: [NeighbourhoodUpsertWithWhereUniqueWithoutCityInput!]\n}\n\ninput NeighbourhoodUpdateOneWithoutLocationsInput {\n  create: NeighbourhoodCreateWithoutLocationsInput\n  connect: NeighbourhoodWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: NeighbourhoodUpdateWithoutLocationsDataInput\n  upsert: NeighbourhoodUpsertWithoutLocationsInput\n}\n\ninput NeighbourhoodUpdateWithoutCityDataInput {\n  name: String\n  slug: String\n  featured: Boolean\n  popularity: Int\n  locations: LocationUpdateManyWithoutNeighbourHoodInput\n  homePreview: PictureUpdateOneInput\n}\n\ninput NeighbourhoodUpdateWithoutLocationsDataInput {\n  name: String\n  slug: String\n  featured: Boolean\n  popularity: Int\n  homePreview: PictureUpdateOneInput\n  city: CityUpdateOneWithoutNeighbourhoodsInput\n}\n\ninput NeighbourhoodUpdateWithWhereUniqueWithoutCityInput {\n  where: NeighbourhoodWhereUniqueInput!\n  data: NeighbourhoodUpdateWithoutCityDataInput!\n}\n\ninput NeighbourhoodUpsertWithoutLocationsInput {\n  update: NeighbourhoodUpdateWithoutLocationsDataInput!\n  create: NeighbourhoodCreateWithoutLocationsInput!\n}\n\ninput NeighbourhoodUpsertWithWhereUniqueWithoutCityInput {\n  where: NeighbourhoodWhereUniqueInput!\n  update: NeighbourhoodUpdateWithoutCityDataInput!\n  create: NeighbourhoodCreateWithoutCityInput!\n}\n\ninput NeighbourhoodWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [NeighbourhoodWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [NeighbourhoodWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [NeighbourhoodWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  slug: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  slug_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  slug_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  slug_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  slug_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  slug_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  slug_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  slug_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  slug_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  slug_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  slug_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  slug_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  slug_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  slug_not_ends_with: String\n  featured: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  featured_not: Boolean\n  popularity: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  popularity_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  popularity_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  popularity_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  popularity_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  popularity_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  popularity_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  popularity_gte: Int\n  locations_every: LocationWhereInput\n  locations_some: LocationWhereInput\n  locations_none: LocationWhereInput\n  homePreview: PictureWhereInput\n  city: CityWhereInput\n}\n\ninput NeighbourhoodWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\nenum NOTIFICATION_TYPE {\n  OFFER\n  INSTANT_BOOK\n  RESPONSIVENESS\n  NEW_AMENITIES\n  HOUSE_RULES\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype NotificationConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [NotificationEdge]!\n  aggregate: AggregateNotification!\n}\n\ninput NotificationCreateInput {\n  type: NOTIFICATION_TYPE\n  link: String!\n  readDate: DateTime!\n  user: UserCreateOneWithoutNotificationsInput!\n}\n\ninput NotificationCreateManyWithoutUserInput {\n  create: [NotificationCreateWithoutUserInput!]\n  connect: [NotificationWhereUniqueInput!]\n}\n\ninput NotificationCreateWithoutUserInput {\n  type: NOTIFICATION_TYPE\n  link: String!\n  readDate: DateTime!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype NotificationEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Notification!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum NotificationOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  type_ASC\n  type_DESC\n  link_ASC\n  link_DESC\n  readDate_ASC\n  readDate_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype NotificationPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  type: NOTIFICATION_TYPE\n  link: String!\n  readDate: DateTime!\n}\n\ntype NotificationSubscriptionPayload {\n  mutation: MutationType!\n  node: Notification\n  updatedFields: [String!]\n  previousValues: NotificationPreviousValues\n}\n\ninput NotificationSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [NotificationSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [NotificationSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [NotificationSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: NotificationWhereInput\n}\n\ninput NotificationUpdateInput {\n  type: NOTIFICATION_TYPE\n  link: String\n  readDate: DateTime\n  user: UserUpdateOneWithoutNotificationsInput\n}\n\ninput NotificationUpdateManyWithoutUserInput {\n  create: [NotificationCreateWithoutUserInput!]\n  connect: [NotificationWhereUniqueInput!]\n  disconnect: [NotificationWhereUniqueInput!]\n  delete: [NotificationWhereUniqueInput!]\n  update: [NotificationUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [NotificationUpsertWithWhereUniqueWithoutUserInput!]\n}\n\ninput NotificationUpdateWithoutUserDataInput {\n  type: NOTIFICATION_TYPE\n  link: String\n  readDate: DateTime\n}\n\ninput NotificationUpdateWithWhereUniqueWithoutUserInput {\n  where: NotificationWhereUniqueInput!\n  data: NotificationUpdateWithoutUserDataInput!\n}\n\ninput NotificationUpsertWithWhereUniqueWithoutUserInput {\n  where: NotificationWhereUniqueInput!\n  update: NotificationUpdateWithoutUserDataInput!\n  create: NotificationCreateWithoutUserInput!\n}\n\ninput NotificationWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [NotificationWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [NotificationWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [NotificationWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  type: NOTIFICATION_TYPE\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  type_not: NOTIFICATION_TYPE\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  type_in: [NOTIFICATION_TYPE!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  type_not_in: [NOTIFICATION_TYPE!]\n  link: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  link_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  link_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  link_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  link_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  link_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  link_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  link_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  link_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  link_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  link_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  link_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  link_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  link_not_ends_with: String\n  readDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  readDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  readDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  readDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  readDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  readDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  readDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  readDate_gte: DateTime\n  user: UserWhereInput\n}\n\ninput NotificationWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\nenum PAYMENT_PROVIDER {\n  PAYPAL\n  CREDIT_CARD\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PaymentAccountConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PaymentAccountEdge]!\n  aggregate: AggregatePaymentAccount!\n}\n\ninput PaymentAccountCreateInput {\n  type: PAYMENT_PROVIDER\n  user: UserCreateOneWithoutPaymentAccountInput!\n  payments: PaymentCreateManyWithoutPaymentMethodInput\n  paypal: PaypalInformationCreateOneWithoutPaymentAccountInput\n  creditcard: CreditCardInformationCreateOneWithoutPaymentAccountInput\n}\n\ninput PaymentAccountCreateManyWithoutUserInput {\n  create: [PaymentAccountCreateWithoutUserInput!]\n  connect: [PaymentAccountWhereUniqueInput!]\n}\n\ninput PaymentAccountCreateOneWithoutCreditcardInput {\n  create: PaymentAccountCreateWithoutCreditcardInput\n  connect: PaymentAccountWhereUniqueInput\n}\n\ninput PaymentAccountCreateOneWithoutPaymentsInput {\n  create: PaymentAccountCreateWithoutPaymentsInput\n  connect: PaymentAccountWhereUniqueInput\n}\n\ninput PaymentAccountCreateOneWithoutPaypalInput {\n  create: PaymentAccountCreateWithoutPaypalInput\n  connect: PaymentAccountWhereUniqueInput\n}\n\ninput PaymentAccountCreateWithoutCreditcardInput {\n  type: PAYMENT_PROVIDER\n  user: UserCreateOneWithoutPaymentAccountInput!\n  payments: PaymentCreateManyWithoutPaymentMethodInput\n  paypal: PaypalInformationCreateOneWithoutPaymentAccountInput\n}\n\ninput PaymentAccountCreateWithoutPaymentsInput {\n  type: PAYMENT_PROVIDER\n  user: UserCreateOneWithoutPaymentAccountInput!\n  paypal: PaypalInformationCreateOneWithoutPaymentAccountInput\n  creditcard: CreditCardInformationCreateOneWithoutPaymentAccountInput\n}\n\ninput PaymentAccountCreateWithoutPaypalInput {\n  type: PAYMENT_PROVIDER\n  user: UserCreateOneWithoutPaymentAccountInput!\n  payments: PaymentCreateManyWithoutPaymentMethodInput\n  creditcard: CreditCardInformationCreateOneWithoutPaymentAccountInput\n}\n\ninput PaymentAccountCreateWithoutUserInput {\n  type: PAYMENT_PROVIDER\n  payments: PaymentCreateManyWithoutPaymentMethodInput\n  paypal: PaypalInformationCreateOneWithoutPaymentAccountInput\n  creditcard: CreditCardInformationCreateOneWithoutPaymentAccountInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PaymentAccountEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: PaymentAccount!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PaymentAccountOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  type_ASC\n  type_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype PaymentAccountPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  type: PAYMENT_PROVIDER\n}\n\ntype PaymentAccountSubscriptionPayload {\n  mutation: MutationType!\n  node: PaymentAccount\n  updatedFields: [String!]\n  previousValues: PaymentAccountPreviousValues\n}\n\ninput PaymentAccountSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PaymentAccountSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PaymentAccountSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PaymentAccountSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PaymentAccountWhereInput\n}\n\ninput PaymentAccountUpdateInput {\n  type: PAYMENT_PROVIDER\n  user: UserUpdateOneWithoutPaymentAccountInput\n  payments: PaymentUpdateManyWithoutPaymentMethodInput\n  paypal: PaypalInformationUpdateOneWithoutPaymentAccountInput\n  creditcard: CreditCardInformationUpdateOneWithoutPaymentAccountInput\n}\n\ninput PaymentAccountUpdateManyWithoutUserInput {\n  create: [PaymentAccountCreateWithoutUserInput!]\n  connect: [PaymentAccountWhereUniqueInput!]\n  disconnect: [PaymentAccountWhereUniqueInput!]\n  delete: [PaymentAccountWhereUniqueInput!]\n  update: [PaymentAccountUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [PaymentAccountUpsertWithWhereUniqueWithoutUserInput!]\n}\n\ninput PaymentAccountUpdateOneWithoutCreditcardInput {\n  create: PaymentAccountCreateWithoutCreditcardInput\n  connect: PaymentAccountWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: PaymentAccountUpdateWithoutCreditcardDataInput\n  upsert: PaymentAccountUpsertWithoutCreditcardInput\n}\n\ninput PaymentAccountUpdateOneWithoutPaymentsInput {\n  create: PaymentAccountCreateWithoutPaymentsInput\n  connect: PaymentAccountWhereUniqueInput\n  delete: Boolean\n  update: PaymentAccountUpdateWithoutPaymentsDataInput\n  upsert: PaymentAccountUpsertWithoutPaymentsInput\n}\n\ninput PaymentAccountUpdateOneWithoutPaypalInput {\n  create: PaymentAccountCreateWithoutPaypalInput\n  connect: PaymentAccountWhereUniqueInput\n  delete: Boolean\n  update: PaymentAccountUpdateWithoutPaypalDataInput\n  upsert: PaymentAccountUpsertWithoutPaypalInput\n}\n\ninput PaymentAccountUpdateWithoutCreditcardDataInput {\n  type: PAYMENT_PROVIDER\n  user: UserUpdateOneWithoutPaymentAccountInput\n  payments: PaymentUpdateManyWithoutPaymentMethodInput\n  paypal: PaypalInformationUpdateOneWithoutPaymentAccountInput\n}\n\ninput PaymentAccountUpdateWithoutPaymentsDataInput {\n  type: PAYMENT_PROVIDER\n  user: UserUpdateOneWithoutPaymentAccountInput\n  paypal: PaypalInformationUpdateOneWithoutPaymentAccountInput\n  creditcard: CreditCardInformationUpdateOneWithoutPaymentAccountInput\n}\n\ninput PaymentAccountUpdateWithoutPaypalDataInput {\n  type: PAYMENT_PROVIDER\n  user: UserUpdateOneWithoutPaymentAccountInput\n  payments: PaymentUpdateManyWithoutPaymentMethodInput\n  creditcard: CreditCardInformationUpdateOneWithoutPaymentAccountInput\n}\n\ninput PaymentAccountUpdateWithoutUserDataInput {\n  type: PAYMENT_PROVIDER\n  payments: PaymentUpdateManyWithoutPaymentMethodInput\n  paypal: PaypalInformationUpdateOneWithoutPaymentAccountInput\n  creditcard: CreditCardInformationUpdateOneWithoutPaymentAccountInput\n}\n\ninput PaymentAccountUpdateWithWhereUniqueWithoutUserInput {\n  where: PaymentAccountWhereUniqueInput!\n  data: PaymentAccountUpdateWithoutUserDataInput!\n}\n\ninput PaymentAccountUpsertWithoutCreditcardInput {\n  update: PaymentAccountUpdateWithoutCreditcardDataInput!\n  create: PaymentAccountCreateWithoutCreditcardInput!\n}\n\ninput PaymentAccountUpsertWithoutPaymentsInput {\n  update: PaymentAccountUpdateWithoutPaymentsDataInput!\n  create: PaymentAccountCreateWithoutPaymentsInput!\n}\n\ninput PaymentAccountUpsertWithoutPaypalInput {\n  update: PaymentAccountUpdateWithoutPaypalDataInput!\n  create: PaymentAccountCreateWithoutPaypalInput!\n}\n\ninput PaymentAccountUpsertWithWhereUniqueWithoutUserInput {\n  where: PaymentAccountWhereUniqueInput!\n  update: PaymentAccountUpdateWithoutUserDataInput!\n  create: PaymentAccountCreateWithoutUserInput!\n}\n\ninput PaymentAccountWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PaymentAccountWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PaymentAccountWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PaymentAccountWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  type: PAYMENT_PROVIDER\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  type_not: PAYMENT_PROVIDER\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  type_in: [PAYMENT_PROVIDER!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  type_not_in: [PAYMENT_PROVIDER!]\n  user: UserWhereInput\n  payments_every: PaymentWhereInput\n  payments_some: PaymentWhereInput\n  payments_none: PaymentWhereInput\n  paypal: PaypalInformationWhereInput\n  creditcard: CreditCardInformationWhereInput\n}\n\ninput PaymentAccountWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PaymentConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PaymentEdge]!\n  aggregate: AggregatePayment!\n}\n\ninput PaymentCreateInput {\n  serviceFee: Float!\n  placePrice: Float!\n  totalPrice: Float!\n  booking: BookingCreateOneWithoutPaymentInput!\n  paymentMethod: PaymentAccountCreateOneWithoutPaymentsInput!\n}\n\ninput PaymentCreateManyWithoutPaymentMethodInput {\n  create: [PaymentCreateWithoutPaymentMethodInput!]\n  connect: [PaymentWhereUniqueInput!]\n}\n\ninput PaymentCreateOneWithoutBookingInput {\n  create: PaymentCreateWithoutBookingInput\n  connect: PaymentWhereUniqueInput\n}\n\ninput PaymentCreateWithoutBookingInput {\n  serviceFee: Float!\n  placePrice: Float!\n  totalPrice: Float!\n  paymentMethod: PaymentAccountCreateOneWithoutPaymentsInput!\n}\n\ninput PaymentCreateWithoutPaymentMethodInput {\n  serviceFee: Float!\n  placePrice: Float!\n  totalPrice: Float!\n  booking: BookingCreateOneWithoutPaymentInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PaymentEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Payment!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PaymentOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  serviceFee_ASC\n  serviceFee_DESC\n  placePrice_ASC\n  placePrice_DESC\n  totalPrice_ASC\n  totalPrice_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype PaymentPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  serviceFee: Float!\n  placePrice: Float!\n  totalPrice: Float!\n}\n\ntype PaymentSubscriptionPayload {\n  mutation: MutationType!\n  node: Payment\n  updatedFields: [String!]\n  previousValues: PaymentPreviousValues\n}\n\ninput PaymentSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PaymentSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PaymentSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PaymentSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PaymentWhereInput\n}\n\ninput PaymentUpdateInput {\n  serviceFee: Float\n  placePrice: Float\n  totalPrice: Float\n  booking: BookingUpdateOneWithoutPaymentInput\n  paymentMethod: PaymentAccountUpdateOneWithoutPaymentsInput\n}\n\ninput PaymentUpdateManyWithoutPaymentMethodInput {\n  create: [PaymentCreateWithoutPaymentMethodInput!]\n  connect: [PaymentWhereUniqueInput!]\n  disconnect: [PaymentWhereUniqueInput!]\n  delete: [PaymentWhereUniqueInput!]\n  update: [PaymentUpdateWithWhereUniqueWithoutPaymentMethodInput!]\n  upsert: [PaymentUpsertWithWhereUniqueWithoutPaymentMethodInput!]\n}\n\ninput PaymentUpdateOneWithoutBookingInput {\n  create: PaymentCreateWithoutBookingInput\n  connect: PaymentWhereUniqueInput\n  delete: Boolean\n  update: PaymentUpdateWithoutBookingDataInput\n  upsert: PaymentUpsertWithoutBookingInput\n}\n\ninput PaymentUpdateWithoutBookingDataInput {\n  serviceFee: Float\n  placePrice: Float\n  totalPrice: Float\n  paymentMethod: PaymentAccountUpdateOneWithoutPaymentsInput\n}\n\ninput PaymentUpdateWithoutPaymentMethodDataInput {\n  serviceFee: Float\n  placePrice: Float\n  totalPrice: Float\n  booking: BookingUpdateOneWithoutPaymentInput\n}\n\ninput PaymentUpdateWithWhereUniqueWithoutPaymentMethodInput {\n  where: PaymentWhereUniqueInput!\n  data: PaymentUpdateWithoutPaymentMethodDataInput!\n}\n\ninput PaymentUpsertWithoutBookingInput {\n  update: PaymentUpdateWithoutBookingDataInput!\n  create: PaymentCreateWithoutBookingInput!\n}\n\ninput PaymentUpsertWithWhereUniqueWithoutPaymentMethodInput {\n  where: PaymentWhereUniqueInput!\n  update: PaymentUpdateWithoutPaymentMethodDataInput!\n  create: PaymentCreateWithoutPaymentMethodInput!\n}\n\ninput PaymentWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PaymentWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PaymentWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PaymentWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  serviceFee: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  serviceFee_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  serviceFee_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  serviceFee_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  serviceFee_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  serviceFee_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  serviceFee_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  serviceFee_gte: Float\n  placePrice: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  placePrice_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  placePrice_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  placePrice_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  placePrice_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  placePrice_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  placePrice_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  placePrice_gte: Float\n  totalPrice: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  totalPrice_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  totalPrice_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  totalPrice_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  totalPrice_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  totalPrice_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  totalPrice_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  totalPrice_gte: Float\n  booking: BookingWhereInput\n  paymentMethod: PaymentAccountWhereInput\n}\n\ninput PaymentWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PaypalInformationConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PaypalInformationEdge]!\n  aggregate: AggregatePaypalInformation!\n}\n\ninput PaypalInformationCreateInput {\n  email: String!\n  paymentAccount: PaymentAccountCreateOneWithoutPaypalInput!\n}\n\ninput PaypalInformationCreateOneWithoutPaymentAccountInput {\n  create: PaypalInformationCreateWithoutPaymentAccountInput\n  connect: PaypalInformationWhereUniqueInput\n}\n\ninput PaypalInformationCreateWithoutPaymentAccountInput {\n  email: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PaypalInformationEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: PaypalInformation!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PaypalInformationOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  email_ASC\n  email_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype PaypalInformationPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  email: String!\n}\n\ntype PaypalInformationSubscriptionPayload {\n  mutation: MutationType!\n  node: PaypalInformation\n  updatedFields: [String!]\n  previousValues: PaypalInformationPreviousValues\n}\n\ninput PaypalInformationSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PaypalInformationSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PaypalInformationSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PaypalInformationSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PaypalInformationWhereInput\n}\n\ninput PaypalInformationUpdateInput {\n  email: String\n  paymentAccount: PaymentAccountUpdateOneWithoutPaypalInput\n}\n\ninput PaypalInformationUpdateOneWithoutPaymentAccountInput {\n  create: PaypalInformationCreateWithoutPaymentAccountInput\n  connect: PaypalInformationWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: PaypalInformationUpdateWithoutPaymentAccountDataInput\n  upsert: PaypalInformationUpsertWithoutPaymentAccountInput\n}\n\ninput PaypalInformationUpdateWithoutPaymentAccountDataInput {\n  email: String\n}\n\ninput PaypalInformationUpsertWithoutPaymentAccountInput {\n  update: PaypalInformationUpdateWithoutPaymentAccountDataInput!\n  create: PaypalInformationCreateWithoutPaymentAccountInput!\n}\n\ninput PaypalInformationWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PaypalInformationWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PaypalInformationWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PaypalInformationWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  paymentAccount: PaymentAccountWhereInput\n}\n\ninput PaypalInformationWhereUniqueInput {\n  id: ID\n}\n\ntype Picture {\n  url: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PictureConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PictureEdge]!\n  aggregate: AggregatePicture!\n}\n\ninput PictureCreateInput {\n  url: String!\n}\n\ninput PictureCreateManyInput {\n  create: [PictureCreateInput!]\n}\n\ninput PictureCreateOneInput {\n  create: PictureCreateInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PictureEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Picture!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PictureOrderByInput {\n  url_ASC\n  url_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PicturePreviousValues {\n  url: String!\n}\n\ntype PictureSubscriptionPayload {\n  mutation: MutationType!\n  node: Picture\n  updatedFields: [String!]\n  previousValues: PicturePreviousValues\n}\n\ninput PictureSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PictureSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PictureSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PictureSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PictureWhereInput\n}\n\ninput PictureUpdateDataInput {\n  url: String\n}\n\ninput PictureUpdateInput {\n  url: String\n}\n\ninput PictureUpdateManyInput {\n  create: [PictureCreateInput!]\n}\n\ninput PictureUpdateOneInput {\n  create: PictureCreateInput\n  disconnect: Boolean\n  delete: Boolean\n  update: PictureUpdateDataInput\n  upsert: PictureUpsertNestedInput\n}\n\ninput PictureUpsertNestedInput {\n  update: PictureUpdateDataInput!\n  create: PictureCreateInput!\n}\n\ninput PictureWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PictureWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PictureWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PictureWhereInput!]\n  url: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  url_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  url_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  url_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  url_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  url_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  url_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  url_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  url_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  url_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  url_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  url_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  url_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  url_not_ends_with: String\n  _MagicalBackRelation_NeighbourhoodToPicture_every: NeighbourhoodWhereInput\n  _MagicalBackRelation_NeighbourhoodToPicture_some: NeighbourhoodWhereInput\n  _MagicalBackRelation_NeighbourhoodToPicture_none: NeighbourhoodWhereInput\n  _MagicalBackRelation_ExperienceToPicture_every: ExperienceWhereInput\n  _MagicalBackRelation_ExperienceToPicture_some: ExperienceWhereInput\n  _MagicalBackRelation_ExperienceToPicture_none: ExperienceWhereInput\n  _MagicalBackRelation_PictureToPlace_every: PlaceWhereInput\n  _MagicalBackRelation_PictureToPlace_some: PlaceWhereInput\n  _MagicalBackRelation_PictureToPlace_none: PlaceWhereInput\n  _MagicalBackRelation_PictureToUser_every: UserWhereInput\n  _MagicalBackRelation_PictureToUser_some: UserWhereInput\n  _MagicalBackRelation_PictureToUser_none: UserWhereInput\n  _MagicalBackRelation_PictureToRestaurant_every: RestaurantWhereInput\n  _MagicalBackRelation_PictureToRestaurant_some: RestaurantWhereInput\n  _MagicalBackRelation_PictureToRestaurant_none: RestaurantWhereInput\n}\n\nenum PLACE_SIZES {\n  ENTIRE_HOUSE\n  ENTIRE_APARTMENT\n  ENTIRE_EARTH_HOUSE\n  ENTIRE_CABIN\n  ENTIRE_VILLA\n  ENTIRE_PLACE\n  ENTIRE_BOAT\n  PRIVATE_ROOM\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PlaceConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PlaceEdge]!\n  aggregate: AggregatePlace!\n}\n\ninput PlaceCreateInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String!\n  description: String!\n  slug: String!\n  maxGuests: Int!\n  numBedrooms: Int!\n  numBeds: Int!\n  numBaths: Int!\n  popularity: Int!\n  reviews: ReviewCreateManyWithoutPlaceInput\n  amenities: AmenitiesCreateOneWithoutPlaceInput!\n  host: UserCreateOneWithoutOwnedPlacesInput!\n  pricing: PricingCreateOneWithoutPlaceInput!\n  location: LocationCreateOneWithoutPlaceInput!\n  views: ViewsCreateOneWithoutPlaceInput!\n  guestRequirements: GuestRequirementsCreateOneWithoutPlaceInput\n  policies: PoliciesCreateOneWithoutPlaceInput\n  houseRules: HouseRulesCreateOneInput\n  bookings: BookingCreateManyWithoutPlaceInput\n  pictures: PictureCreateManyInput\n}\n\ninput PlaceCreateManyWithoutHostInput {\n  create: [PlaceCreateWithoutHostInput!]\n  connect: [PlaceWhereUniqueInput!]\n}\n\ninput PlaceCreateOneWithoutAmenitiesInput {\n  create: PlaceCreateWithoutAmenitiesInput\n  connect: PlaceWhereUniqueInput\n}\n\ninput PlaceCreateOneWithoutBookingsInput {\n  create: PlaceCreateWithoutBookingsInput\n  connect: PlaceWhereUniqueInput\n}\n\ninput PlaceCreateOneWithoutGuestRequirementsInput {\n  create: PlaceCreateWithoutGuestRequirementsInput\n  connect: PlaceWhereUniqueInput\n}\n\ninput PlaceCreateOneWithoutLocationInput {\n  create: PlaceCreateWithoutLocationInput\n  connect: PlaceWhereUniqueInput\n}\n\ninput PlaceCreateOneWithoutPoliciesInput {\n  create: PlaceCreateWithoutPoliciesInput\n  connect: PlaceWhereUniqueInput\n}\n\ninput PlaceCreateOneWithoutPricingInput {\n  create: PlaceCreateWithoutPricingInput\n  connect: PlaceWhereUniqueInput\n}\n\ninput PlaceCreateOneWithoutReviewsInput {\n  create: PlaceCreateWithoutReviewsInput\n  connect: PlaceWhereUniqueInput\n}\n\ninput PlaceCreateOneWithoutViewsInput {\n  create: PlaceCreateWithoutViewsInput\n  connect: PlaceWhereUniqueInput\n}\n\ninput PlaceCreateWithoutAmenitiesInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String!\n  description: String!\n  slug: String!\n  maxGuests: Int!\n  numBedrooms: Int!\n  numBeds: Int!\n  numBaths: Int!\n  popularity: Int!\n  reviews: ReviewCreateManyWithoutPlaceInput\n  host: UserCreateOneWithoutOwnedPlacesInput!\n  pricing: PricingCreateOneWithoutPlaceInput!\n  location: LocationCreateOneWithoutPlaceInput!\n  views: ViewsCreateOneWithoutPlaceInput!\n  guestRequirements: GuestRequirementsCreateOneWithoutPlaceInput\n  policies: PoliciesCreateOneWithoutPlaceInput\n  houseRules: HouseRulesCreateOneInput\n  bookings: BookingCreateManyWithoutPlaceInput\n  pictures: PictureCreateManyInput\n}\n\ninput PlaceCreateWithoutBookingsInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String!\n  description: String!\n  slug: String!\n  maxGuests: Int!\n  numBedrooms: Int!\n  numBeds: Int!\n  numBaths: Int!\n  popularity: Int!\n  reviews: ReviewCreateManyWithoutPlaceInput\n  amenities: AmenitiesCreateOneWithoutPlaceInput!\n  host: UserCreateOneWithoutOwnedPlacesInput!\n  pricing: PricingCreateOneWithoutPlaceInput!\n  location: LocationCreateOneWithoutPlaceInput!\n  views: ViewsCreateOneWithoutPlaceInput!\n  guestRequirements: GuestRequirementsCreateOneWithoutPlaceInput\n  policies: PoliciesCreateOneWithoutPlaceInput\n  houseRules: HouseRulesCreateOneInput\n  pictures: PictureCreateManyInput\n}\n\ninput PlaceCreateWithoutGuestRequirementsInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String!\n  description: String!\n  slug: String!\n  maxGuests: Int!\n  numBedrooms: Int!\n  numBeds: Int!\n  numBaths: Int!\n  popularity: Int!\n  reviews: ReviewCreateManyWithoutPlaceInput\n  amenities: AmenitiesCreateOneWithoutPlaceInput!\n  host: UserCreateOneWithoutOwnedPlacesInput!\n  pricing: PricingCreateOneWithoutPlaceInput!\n  location: LocationCreateOneWithoutPlaceInput!\n  views: ViewsCreateOneWithoutPlaceInput!\n  policies: PoliciesCreateOneWithoutPlaceInput\n  houseRules: HouseRulesCreateOneInput\n  bookings: BookingCreateManyWithoutPlaceInput\n  pictures: PictureCreateManyInput\n}\n\ninput PlaceCreateWithoutHostInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String!\n  description: String!\n  slug: String!\n  maxGuests: Int!\n  numBedrooms: Int!\n  numBeds: Int!\n  numBaths: Int!\n  popularity: Int!\n  reviews: ReviewCreateManyWithoutPlaceInput\n  amenities: AmenitiesCreateOneWithoutPlaceInput!\n  pricing: PricingCreateOneWithoutPlaceInput!\n  location: LocationCreateOneWithoutPlaceInput!\n  views: ViewsCreateOneWithoutPlaceInput!\n  guestRequirements: GuestRequirementsCreateOneWithoutPlaceInput\n  policies: PoliciesCreateOneWithoutPlaceInput\n  houseRules: HouseRulesCreateOneInput\n  bookings: BookingCreateManyWithoutPlaceInput\n  pictures: PictureCreateManyInput\n}\n\ninput PlaceCreateWithoutLocationInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String!\n  description: String!\n  slug: String!\n  maxGuests: Int!\n  numBedrooms: Int!\n  numBeds: Int!\n  numBaths: Int!\n  popularity: Int!\n  reviews: ReviewCreateManyWithoutPlaceInput\n  amenities: AmenitiesCreateOneWithoutPlaceInput!\n  host: UserCreateOneWithoutOwnedPlacesInput!\n  pricing: PricingCreateOneWithoutPlaceInput!\n  views: ViewsCreateOneWithoutPlaceInput!\n  guestRequirements: GuestRequirementsCreateOneWithoutPlaceInput\n  policies: PoliciesCreateOneWithoutPlaceInput\n  houseRules: HouseRulesCreateOneInput\n  bookings: BookingCreateManyWithoutPlaceInput\n  pictures: PictureCreateManyInput\n}\n\ninput PlaceCreateWithoutPoliciesInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String!\n  description: String!\n  slug: String!\n  maxGuests: Int!\n  numBedrooms: Int!\n  numBeds: Int!\n  numBaths: Int!\n  popularity: Int!\n  reviews: ReviewCreateManyWithoutPlaceInput\n  amenities: AmenitiesCreateOneWithoutPlaceInput!\n  host: UserCreateOneWithoutOwnedPlacesInput!\n  pricing: PricingCreateOneWithoutPlaceInput!\n  location: LocationCreateOneWithoutPlaceInput!\n  views: ViewsCreateOneWithoutPlaceInput!\n  guestRequirements: GuestRequirementsCreateOneWithoutPlaceInput\n  houseRules: HouseRulesCreateOneInput\n  bookings: BookingCreateManyWithoutPlaceInput\n  pictures: PictureCreateManyInput\n}\n\ninput PlaceCreateWithoutPricingInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String!\n  description: String!\n  slug: String!\n  maxGuests: Int!\n  numBedrooms: Int!\n  numBeds: Int!\n  numBaths: Int!\n  popularity: Int!\n  reviews: ReviewCreateManyWithoutPlaceInput\n  amenities: AmenitiesCreateOneWithoutPlaceInput!\n  host: UserCreateOneWithoutOwnedPlacesInput!\n  location: LocationCreateOneWithoutPlaceInput!\n  views: ViewsCreateOneWithoutPlaceInput!\n  guestRequirements: GuestRequirementsCreateOneWithoutPlaceInput\n  policies: PoliciesCreateOneWithoutPlaceInput\n  houseRules: HouseRulesCreateOneInput\n  bookings: BookingCreateManyWithoutPlaceInput\n  pictures: PictureCreateManyInput\n}\n\ninput PlaceCreateWithoutReviewsInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String!\n  description: String!\n  slug: String!\n  maxGuests: Int!\n  numBedrooms: Int!\n  numBeds: Int!\n  numBaths: Int!\n  popularity: Int!\n  amenities: AmenitiesCreateOneWithoutPlaceInput!\n  host: UserCreateOneWithoutOwnedPlacesInput!\n  pricing: PricingCreateOneWithoutPlaceInput!\n  location: LocationCreateOneWithoutPlaceInput!\n  views: ViewsCreateOneWithoutPlaceInput!\n  guestRequirements: GuestRequirementsCreateOneWithoutPlaceInput\n  policies: PoliciesCreateOneWithoutPlaceInput\n  houseRules: HouseRulesCreateOneInput\n  bookings: BookingCreateManyWithoutPlaceInput\n  pictures: PictureCreateManyInput\n}\n\ninput PlaceCreateWithoutViewsInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String!\n  description: String!\n  slug: String!\n  maxGuests: Int!\n  numBedrooms: Int!\n  numBeds: Int!\n  numBaths: Int!\n  popularity: Int!\n  reviews: ReviewCreateManyWithoutPlaceInput\n  amenities: AmenitiesCreateOneWithoutPlaceInput!\n  host: UserCreateOneWithoutOwnedPlacesInput!\n  pricing: PricingCreateOneWithoutPlaceInput!\n  location: LocationCreateOneWithoutPlaceInput!\n  guestRequirements: GuestRequirementsCreateOneWithoutPlaceInput\n  policies: PoliciesCreateOneWithoutPlaceInput\n  houseRules: HouseRulesCreateOneInput\n  bookings: BookingCreateManyWithoutPlaceInput\n  pictures: PictureCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PlaceEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Place!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PlaceOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  size_ASC\n  size_DESC\n  shortDescription_ASC\n  shortDescription_DESC\n  description_ASC\n  description_DESC\n  slug_ASC\n  slug_DESC\n  maxGuests_ASC\n  maxGuests_DESC\n  numBedrooms_ASC\n  numBedrooms_DESC\n  numBeds_ASC\n  numBeds_DESC\n  numBaths_ASC\n  numBaths_DESC\n  popularity_ASC\n  popularity_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PlacePreviousValues {\n  id: ID!\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String!\n  description: String!\n  slug: String!\n  maxGuests: Int!\n  numBedrooms: Int!\n  numBeds: Int!\n  numBaths: Int!\n  popularity: Int!\n}\n\ntype PlaceSubscriptionPayload {\n  mutation: MutationType!\n  node: Place\n  updatedFields: [String!]\n  previousValues: PlacePreviousValues\n}\n\ninput PlaceSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PlaceSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PlaceSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PlaceSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PlaceWhereInput\n}\n\ninput PlaceUpdateInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String\n  description: String\n  slug: String\n  maxGuests: Int\n  numBedrooms: Int\n  numBeds: Int\n  numBaths: Int\n  popularity: Int\n  reviews: ReviewUpdateManyWithoutPlaceInput\n  amenities: AmenitiesUpdateOneWithoutPlaceInput\n  host: UserUpdateOneWithoutOwnedPlacesInput\n  pricing: PricingUpdateOneWithoutPlaceInput\n  location: LocationUpdateOneWithoutPlaceInput\n  views: ViewsUpdateOneWithoutPlaceInput\n  guestRequirements: GuestRequirementsUpdateOneWithoutPlaceInput\n  policies: PoliciesUpdateOneWithoutPlaceInput\n  houseRules: HouseRulesUpdateOneInput\n  bookings: BookingUpdateManyWithoutPlaceInput\n  pictures: PictureUpdateManyInput\n}\n\ninput PlaceUpdateManyWithoutHostInput {\n  create: [PlaceCreateWithoutHostInput!]\n  connect: [PlaceWhereUniqueInput!]\n  disconnect: [PlaceWhereUniqueInput!]\n  delete: [PlaceWhereUniqueInput!]\n  update: [PlaceUpdateWithWhereUniqueWithoutHostInput!]\n  upsert: [PlaceUpsertWithWhereUniqueWithoutHostInput!]\n}\n\ninput PlaceUpdateOneWithoutAmenitiesInput {\n  create: PlaceCreateWithoutAmenitiesInput\n  connect: PlaceWhereUniqueInput\n  delete: Boolean\n  update: PlaceUpdateWithoutAmenitiesDataInput\n  upsert: PlaceUpsertWithoutAmenitiesInput\n}\n\ninput PlaceUpdateOneWithoutBookingsInput {\n  create: PlaceCreateWithoutBookingsInput\n  connect: PlaceWhereUniqueInput\n  delete: Boolean\n  update: PlaceUpdateWithoutBookingsDataInput\n  upsert: PlaceUpsertWithoutBookingsInput\n}\n\ninput PlaceUpdateOneWithoutGuestRequirementsInput {\n  create: PlaceCreateWithoutGuestRequirementsInput\n  connect: PlaceWhereUniqueInput\n  delete: Boolean\n  update: PlaceUpdateWithoutGuestRequirementsDataInput\n  upsert: PlaceUpsertWithoutGuestRequirementsInput\n}\n\ninput PlaceUpdateOneWithoutLocationInput {\n  create: PlaceCreateWithoutLocationInput\n  connect: PlaceWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: PlaceUpdateWithoutLocationDataInput\n  upsert: PlaceUpsertWithoutLocationInput\n}\n\ninput PlaceUpdateOneWithoutPoliciesInput {\n  create: PlaceCreateWithoutPoliciesInput\n  connect: PlaceWhereUniqueInput\n  delete: Boolean\n  update: PlaceUpdateWithoutPoliciesDataInput\n  upsert: PlaceUpsertWithoutPoliciesInput\n}\n\ninput PlaceUpdateOneWithoutPricingInput {\n  create: PlaceCreateWithoutPricingInput\n  connect: PlaceWhereUniqueInput\n  delete: Boolean\n  update: PlaceUpdateWithoutPricingDataInput\n  upsert: PlaceUpsertWithoutPricingInput\n}\n\ninput PlaceUpdateOneWithoutReviewsInput {\n  create: PlaceCreateWithoutReviewsInput\n  connect: PlaceWhereUniqueInput\n  delete: Boolean\n  update: PlaceUpdateWithoutReviewsDataInput\n  upsert: PlaceUpsertWithoutReviewsInput\n}\n\ninput PlaceUpdateOneWithoutViewsInput {\n  create: PlaceCreateWithoutViewsInput\n  connect: PlaceWhereUniqueInput\n  delete: Boolean\n  update: PlaceUpdateWithoutViewsDataInput\n  upsert: PlaceUpsertWithoutViewsInput\n}\n\ninput PlaceUpdateWithoutAmenitiesDataInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String\n  description: String\n  slug: String\n  maxGuests: Int\n  numBedrooms: Int\n  numBeds: Int\n  numBaths: Int\n  popularity: Int\n  reviews: ReviewUpdateManyWithoutPlaceInput\n  host: UserUpdateOneWithoutOwnedPlacesInput\n  pricing: PricingUpdateOneWithoutPlaceInput\n  location: LocationUpdateOneWithoutPlaceInput\n  views: ViewsUpdateOneWithoutPlaceInput\n  guestRequirements: GuestRequirementsUpdateOneWithoutPlaceInput\n  policies: PoliciesUpdateOneWithoutPlaceInput\n  houseRules: HouseRulesUpdateOneInput\n  bookings: BookingUpdateManyWithoutPlaceInput\n  pictures: PictureUpdateManyInput\n}\n\ninput PlaceUpdateWithoutBookingsDataInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String\n  description: String\n  slug: String\n  maxGuests: Int\n  numBedrooms: Int\n  numBeds: Int\n  numBaths: Int\n  popularity: Int\n  reviews: ReviewUpdateManyWithoutPlaceInput\n  amenities: AmenitiesUpdateOneWithoutPlaceInput\n  host: UserUpdateOneWithoutOwnedPlacesInput\n  pricing: PricingUpdateOneWithoutPlaceInput\n  location: LocationUpdateOneWithoutPlaceInput\n  views: ViewsUpdateOneWithoutPlaceInput\n  guestRequirements: GuestRequirementsUpdateOneWithoutPlaceInput\n  policies: PoliciesUpdateOneWithoutPlaceInput\n  houseRules: HouseRulesUpdateOneInput\n  pictures: PictureUpdateManyInput\n}\n\ninput PlaceUpdateWithoutGuestRequirementsDataInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String\n  description: String\n  slug: String\n  maxGuests: Int\n  numBedrooms: Int\n  numBeds: Int\n  numBaths: Int\n  popularity: Int\n  reviews: ReviewUpdateManyWithoutPlaceInput\n  amenities: AmenitiesUpdateOneWithoutPlaceInput\n  host: UserUpdateOneWithoutOwnedPlacesInput\n  pricing: PricingUpdateOneWithoutPlaceInput\n  location: LocationUpdateOneWithoutPlaceInput\n  views: ViewsUpdateOneWithoutPlaceInput\n  policies: PoliciesUpdateOneWithoutPlaceInput\n  houseRules: HouseRulesUpdateOneInput\n  bookings: BookingUpdateManyWithoutPlaceInput\n  pictures: PictureUpdateManyInput\n}\n\ninput PlaceUpdateWithoutHostDataInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String\n  description: String\n  slug: String\n  maxGuests: Int\n  numBedrooms: Int\n  numBeds: Int\n  numBaths: Int\n  popularity: Int\n  reviews: ReviewUpdateManyWithoutPlaceInput\n  amenities: AmenitiesUpdateOneWithoutPlaceInput\n  pricing: PricingUpdateOneWithoutPlaceInput\n  location: LocationUpdateOneWithoutPlaceInput\n  views: ViewsUpdateOneWithoutPlaceInput\n  guestRequirements: GuestRequirementsUpdateOneWithoutPlaceInput\n  policies: PoliciesUpdateOneWithoutPlaceInput\n  houseRules: HouseRulesUpdateOneInput\n  bookings: BookingUpdateManyWithoutPlaceInput\n  pictures: PictureUpdateManyInput\n}\n\ninput PlaceUpdateWithoutLocationDataInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String\n  description: String\n  slug: String\n  maxGuests: Int\n  numBedrooms: Int\n  numBeds: Int\n  numBaths: Int\n  popularity: Int\n  reviews: ReviewUpdateManyWithoutPlaceInput\n  amenities: AmenitiesUpdateOneWithoutPlaceInput\n  host: UserUpdateOneWithoutOwnedPlacesInput\n  pricing: PricingUpdateOneWithoutPlaceInput\n  views: ViewsUpdateOneWithoutPlaceInput\n  guestRequirements: GuestRequirementsUpdateOneWithoutPlaceInput\n  policies: PoliciesUpdateOneWithoutPlaceInput\n  houseRules: HouseRulesUpdateOneInput\n  bookings: BookingUpdateManyWithoutPlaceInput\n  pictures: PictureUpdateManyInput\n}\n\ninput PlaceUpdateWithoutPoliciesDataInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String\n  description: String\n  slug: String\n  maxGuests: Int\n  numBedrooms: Int\n  numBeds: Int\n  numBaths: Int\n  popularity: Int\n  reviews: ReviewUpdateManyWithoutPlaceInput\n  amenities: AmenitiesUpdateOneWithoutPlaceInput\n  host: UserUpdateOneWithoutOwnedPlacesInput\n  pricing: PricingUpdateOneWithoutPlaceInput\n  location: LocationUpdateOneWithoutPlaceInput\n  views: ViewsUpdateOneWithoutPlaceInput\n  guestRequirements: GuestRequirementsUpdateOneWithoutPlaceInput\n  houseRules: HouseRulesUpdateOneInput\n  bookings: BookingUpdateManyWithoutPlaceInput\n  pictures: PictureUpdateManyInput\n}\n\ninput PlaceUpdateWithoutPricingDataInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String\n  description: String\n  slug: String\n  maxGuests: Int\n  numBedrooms: Int\n  numBeds: Int\n  numBaths: Int\n  popularity: Int\n  reviews: ReviewUpdateManyWithoutPlaceInput\n  amenities: AmenitiesUpdateOneWithoutPlaceInput\n  host: UserUpdateOneWithoutOwnedPlacesInput\n  location: LocationUpdateOneWithoutPlaceInput\n  views: ViewsUpdateOneWithoutPlaceInput\n  guestRequirements: GuestRequirementsUpdateOneWithoutPlaceInput\n  policies: PoliciesUpdateOneWithoutPlaceInput\n  houseRules: HouseRulesUpdateOneInput\n  bookings: BookingUpdateManyWithoutPlaceInput\n  pictures: PictureUpdateManyInput\n}\n\ninput PlaceUpdateWithoutReviewsDataInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String\n  description: String\n  slug: String\n  maxGuests: Int\n  numBedrooms: Int\n  numBeds: Int\n  numBaths: Int\n  popularity: Int\n  amenities: AmenitiesUpdateOneWithoutPlaceInput\n  host: UserUpdateOneWithoutOwnedPlacesInput\n  pricing: PricingUpdateOneWithoutPlaceInput\n  location: LocationUpdateOneWithoutPlaceInput\n  views: ViewsUpdateOneWithoutPlaceInput\n  guestRequirements: GuestRequirementsUpdateOneWithoutPlaceInput\n  policies: PoliciesUpdateOneWithoutPlaceInput\n  houseRules: HouseRulesUpdateOneInput\n  bookings: BookingUpdateManyWithoutPlaceInput\n  pictures: PictureUpdateManyInput\n}\n\ninput PlaceUpdateWithoutViewsDataInput {\n  name: String\n  size: PLACE_SIZES\n  shortDescription: String\n  description: String\n  slug: String\n  maxGuests: Int\n  numBedrooms: Int\n  numBeds: Int\n  numBaths: Int\n  popularity: Int\n  reviews: ReviewUpdateManyWithoutPlaceInput\n  amenities: AmenitiesUpdateOneWithoutPlaceInput\n  host: UserUpdateOneWithoutOwnedPlacesInput\n  pricing: PricingUpdateOneWithoutPlaceInput\n  location: LocationUpdateOneWithoutPlaceInput\n  guestRequirements: GuestRequirementsUpdateOneWithoutPlaceInput\n  policies: PoliciesUpdateOneWithoutPlaceInput\n  houseRules: HouseRulesUpdateOneInput\n  bookings: BookingUpdateManyWithoutPlaceInput\n  pictures: PictureUpdateManyInput\n}\n\ninput PlaceUpdateWithWhereUniqueWithoutHostInput {\n  where: PlaceWhereUniqueInput!\n  data: PlaceUpdateWithoutHostDataInput!\n}\n\ninput PlaceUpsertWithoutAmenitiesInput {\n  update: PlaceUpdateWithoutAmenitiesDataInput!\n  create: PlaceCreateWithoutAmenitiesInput!\n}\n\ninput PlaceUpsertWithoutBookingsInput {\n  update: PlaceUpdateWithoutBookingsDataInput!\n  create: PlaceCreateWithoutBookingsInput!\n}\n\ninput PlaceUpsertWithoutGuestRequirementsInput {\n  update: PlaceUpdateWithoutGuestRequirementsDataInput!\n  create: PlaceCreateWithoutGuestRequirementsInput!\n}\n\ninput PlaceUpsertWithoutLocationInput {\n  update: PlaceUpdateWithoutLocationDataInput!\n  create: PlaceCreateWithoutLocationInput!\n}\n\ninput PlaceUpsertWithoutPoliciesInput {\n  update: PlaceUpdateWithoutPoliciesDataInput!\n  create: PlaceCreateWithoutPoliciesInput!\n}\n\ninput PlaceUpsertWithoutPricingInput {\n  update: PlaceUpdateWithoutPricingDataInput!\n  create: PlaceCreateWithoutPricingInput!\n}\n\ninput PlaceUpsertWithoutReviewsInput {\n  update: PlaceUpdateWithoutReviewsDataInput!\n  create: PlaceCreateWithoutReviewsInput!\n}\n\ninput PlaceUpsertWithoutViewsInput {\n  update: PlaceUpdateWithoutViewsDataInput!\n  create: PlaceCreateWithoutViewsInput!\n}\n\ninput PlaceUpsertWithWhereUniqueWithoutHostInput {\n  where: PlaceWhereUniqueInput!\n  update: PlaceUpdateWithoutHostDataInput!\n  create: PlaceCreateWithoutHostInput!\n}\n\ninput PlaceWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PlaceWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PlaceWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PlaceWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  size: PLACE_SIZES\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  size_not: PLACE_SIZES\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  size_in: [PLACE_SIZES!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  size_not_in: [PLACE_SIZES!]\n  shortDescription: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  shortDescription_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  shortDescription_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  shortDescription_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  shortDescription_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  shortDescription_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  shortDescription_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  shortDescription_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  shortDescription_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  shortDescription_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  shortDescription_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  shortDescription_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  shortDescription_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  shortDescription_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  slug: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  slug_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  slug_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  slug_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  slug_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  slug_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  slug_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  slug_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  slug_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  slug_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  slug_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  slug_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  slug_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  slug_not_ends_with: String\n  maxGuests: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  maxGuests_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  maxGuests_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  maxGuests_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  maxGuests_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  maxGuests_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  maxGuests_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  maxGuests_gte: Int\n  numBedrooms: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  numBedrooms_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  numBedrooms_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  numBedrooms_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  numBedrooms_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  numBedrooms_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  numBedrooms_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  numBedrooms_gte: Int\n  numBeds: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  numBeds_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  numBeds_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  numBeds_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  numBeds_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  numBeds_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  numBeds_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  numBeds_gte: Int\n  numBaths: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  numBaths_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  numBaths_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  numBaths_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  numBaths_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  numBaths_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  numBaths_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  numBaths_gte: Int\n  popularity: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  popularity_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  popularity_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  popularity_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  popularity_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  popularity_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  popularity_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  popularity_gte: Int\n  reviews_every: ReviewWhereInput\n  reviews_some: ReviewWhereInput\n  reviews_none: ReviewWhereInput\n  amenities: AmenitiesWhereInput\n  host: UserWhereInput\n  pricing: PricingWhereInput\n  location: LocationWhereInput\n  views: ViewsWhereInput\n  guestRequirements: GuestRequirementsWhereInput\n  policies: PoliciesWhereInput\n  houseRules: HouseRulesWhereInput\n  bookings_every: BookingWhereInput\n  bookings_some: BookingWhereInput\n  bookings_none: BookingWhereInput\n  pictures_every: PictureWhereInput\n  pictures_some: PictureWhereInput\n  pictures_none: PictureWhereInput\n}\n\ninput PlaceWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PoliciesConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PoliciesEdge]!\n  aggregate: AggregatePolicies!\n}\n\ninput PoliciesCreateInput {\n  checkInStartTime: Float!\n  checkInEndTime: Float!\n  checkoutTime: Float!\n  place: PlaceCreateOneWithoutPoliciesInput!\n}\n\ninput PoliciesCreateOneWithoutPlaceInput {\n  create: PoliciesCreateWithoutPlaceInput\n  connect: PoliciesWhereUniqueInput\n}\n\ninput PoliciesCreateWithoutPlaceInput {\n  checkInStartTime: Float!\n  checkInEndTime: Float!\n  checkoutTime: Float!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PoliciesEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Policies!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PoliciesOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  checkInStartTime_ASC\n  checkInStartTime_DESC\n  checkInEndTime_ASC\n  checkInEndTime_DESC\n  checkoutTime_ASC\n  checkoutTime_DESC\n}\n\ntype PoliciesPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  checkInStartTime: Float!\n  checkInEndTime: Float!\n  checkoutTime: Float!\n}\n\ntype PoliciesSubscriptionPayload {\n  mutation: MutationType!\n  node: Policies\n  updatedFields: [String!]\n  previousValues: PoliciesPreviousValues\n}\n\ninput PoliciesSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PoliciesSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PoliciesSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PoliciesSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PoliciesWhereInput\n}\n\ninput PoliciesUpdateInput {\n  checkInStartTime: Float\n  checkInEndTime: Float\n  checkoutTime: Float\n  place: PlaceUpdateOneWithoutPoliciesInput\n}\n\ninput PoliciesUpdateOneWithoutPlaceInput {\n  create: PoliciesCreateWithoutPlaceInput\n  connect: PoliciesWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: PoliciesUpdateWithoutPlaceDataInput\n  upsert: PoliciesUpsertWithoutPlaceInput\n}\n\ninput PoliciesUpdateWithoutPlaceDataInput {\n  checkInStartTime: Float\n  checkInEndTime: Float\n  checkoutTime: Float\n}\n\ninput PoliciesUpsertWithoutPlaceInput {\n  update: PoliciesUpdateWithoutPlaceDataInput!\n  create: PoliciesCreateWithoutPlaceInput!\n}\n\ninput PoliciesWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PoliciesWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PoliciesWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PoliciesWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  checkInStartTime: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  checkInStartTime_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  checkInStartTime_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  checkInStartTime_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  checkInStartTime_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  checkInStartTime_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  checkInStartTime_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  checkInStartTime_gte: Float\n  checkInEndTime: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  checkInEndTime_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  checkInEndTime_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  checkInEndTime_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  checkInEndTime_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  checkInEndTime_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  checkInEndTime_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  checkInEndTime_gte: Float\n  checkoutTime: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  checkoutTime_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  checkoutTime_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  checkoutTime_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  checkoutTime_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  checkoutTime_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  checkoutTime_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  checkoutTime_gte: Float\n  place: PlaceWhereInput\n}\n\ninput PoliciesWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PricingConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PricingEdge]!\n  aggregate: AggregatePricing!\n}\n\ninput PricingCreateInput {\n  monthlyDiscount: Int\n  weeklyDiscount: Int\n  perNight: Int!\n  smartPricing: Boolean\n  basePrice: Int!\n  averageWeekly: Int!\n  averageMonthly: Int!\n  cleaningFee: Int\n  securityDeposit: Int\n  extraGuests: Int\n  weekendPricing: Int\n  currency: CURRENCY\n  place: PlaceCreateOneWithoutPricingInput!\n}\n\ninput PricingCreateOneWithoutPlaceInput {\n  create: PricingCreateWithoutPlaceInput\n  connect: PricingWhereUniqueInput\n}\n\ninput PricingCreateWithoutPlaceInput {\n  monthlyDiscount: Int\n  weeklyDiscount: Int\n  perNight: Int!\n  smartPricing: Boolean\n  basePrice: Int!\n  averageWeekly: Int!\n  averageMonthly: Int!\n  cleaningFee: Int\n  securityDeposit: Int\n  extraGuests: Int\n  weekendPricing: Int\n  currency: CURRENCY\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PricingEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Pricing!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PricingOrderByInput {\n  id_ASC\n  id_DESC\n  monthlyDiscount_ASC\n  monthlyDiscount_DESC\n  weeklyDiscount_ASC\n  weeklyDiscount_DESC\n  perNight_ASC\n  perNight_DESC\n  smartPricing_ASC\n  smartPricing_DESC\n  basePrice_ASC\n  basePrice_DESC\n  averageWeekly_ASC\n  averageWeekly_DESC\n  averageMonthly_ASC\n  averageMonthly_DESC\n  cleaningFee_ASC\n  cleaningFee_DESC\n  securityDeposit_ASC\n  securityDeposit_DESC\n  extraGuests_ASC\n  extraGuests_DESC\n  weekendPricing_ASC\n  weekendPricing_DESC\n  currency_ASC\n  currency_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PricingPreviousValues {\n  id: ID!\n  monthlyDiscount: Int\n  weeklyDiscount: Int\n  perNight: Int!\n  smartPricing: Boolean!\n  basePrice: Int!\n  averageWeekly: Int!\n  averageMonthly: Int!\n  cleaningFee: Int\n  securityDeposit: Int\n  extraGuests: Int\n  weekendPricing: Int\n  currency: CURRENCY\n}\n\ntype PricingSubscriptionPayload {\n  mutation: MutationType!\n  node: Pricing\n  updatedFields: [String!]\n  previousValues: PricingPreviousValues\n}\n\ninput PricingSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PricingSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PricingSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PricingSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PricingWhereInput\n}\n\ninput PricingUpdateInput {\n  monthlyDiscount: Int\n  weeklyDiscount: Int\n  perNight: Int\n  smartPricing: Boolean\n  basePrice: Int\n  averageWeekly: Int\n  averageMonthly: Int\n  cleaningFee: Int\n  securityDeposit: Int\n  extraGuests: Int\n  weekendPricing: Int\n  currency: CURRENCY\n  place: PlaceUpdateOneWithoutPricingInput\n}\n\ninput PricingUpdateOneWithoutPlaceInput {\n  create: PricingCreateWithoutPlaceInput\n  connect: PricingWhereUniqueInput\n  delete: Boolean\n  update: PricingUpdateWithoutPlaceDataInput\n  upsert: PricingUpsertWithoutPlaceInput\n}\n\ninput PricingUpdateWithoutPlaceDataInput {\n  monthlyDiscount: Int\n  weeklyDiscount: Int\n  perNight: Int\n  smartPricing: Boolean\n  basePrice: Int\n  averageWeekly: Int\n  averageMonthly: Int\n  cleaningFee: Int\n  securityDeposit: Int\n  extraGuests: Int\n  weekendPricing: Int\n  currency: CURRENCY\n}\n\ninput PricingUpsertWithoutPlaceInput {\n  update: PricingUpdateWithoutPlaceDataInput!\n  create: PricingCreateWithoutPlaceInput!\n}\n\ninput PricingWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PricingWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PricingWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PricingWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  monthlyDiscount: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  monthlyDiscount_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  monthlyDiscount_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  monthlyDiscount_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  monthlyDiscount_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  monthlyDiscount_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  monthlyDiscount_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  monthlyDiscount_gte: Int\n  weeklyDiscount: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  weeklyDiscount_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  weeklyDiscount_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  weeklyDiscount_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  weeklyDiscount_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  weeklyDiscount_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  weeklyDiscount_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  weeklyDiscount_gte: Int\n  perNight: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  perNight_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  perNight_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  perNight_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  perNight_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  perNight_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  perNight_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  perNight_gte: Int\n  smartPricing: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  smartPricing_not: Boolean\n  basePrice: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  basePrice_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  basePrice_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  basePrice_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  basePrice_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  basePrice_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  basePrice_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  basePrice_gte: Int\n  averageWeekly: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  averageWeekly_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  averageWeekly_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  averageWeekly_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  averageWeekly_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  averageWeekly_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  averageWeekly_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  averageWeekly_gte: Int\n  averageMonthly: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  averageMonthly_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  averageMonthly_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  averageMonthly_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  averageMonthly_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  averageMonthly_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  averageMonthly_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  averageMonthly_gte: Int\n  cleaningFee: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  cleaningFee_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  cleaningFee_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  cleaningFee_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  cleaningFee_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  cleaningFee_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  cleaningFee_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  cleaningFee_gte: Int\n  securityDeposit: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  securityDeposit_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  securityDeposit_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  securityDeposit_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  securityDeposit_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  securityDeposit_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  securityDeposit_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  securityDeposit_gte: Int\n  extraGuests: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  extraGuests_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  extraGuests_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  extraGuests_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  extraGuests_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  extraGuests_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  extraGuests_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  extraGuests_gte: Int\n  weekendPricing: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  weekendPricing_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  weekendPricing_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  weekendPricing_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  weekendPricing_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  weekendPricing_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  weekendPricing_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  weekendPricing_gte: Int\n  currency: CURRENCY\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  currency_not: CURRENCY\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  currency_in: [CURRENCY!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  currency_not_in: [CURRENCY!]\n  place: PlaceWhereInput\n}\n\ninput PricingWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  places(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Place]!\n  pricings(where: PricingWhereInput, orderBy: PricingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Pricing]!\n  guestRequirementses(where: GuestRequirementsWhereInput, orderBy: GuestRequirementsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GuestRequirements]!\n  policieses(where: PoliciesWhereInput, orderBy: PoliciesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Policies]!\n  viewses(where: ViewsWhereInput, orderBy: ViewsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Views]!\n  locations(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Location]!\n  neighbourhoods(where: NeighbourhoodWhereInput, orderBy: NeighbourhoodOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Neighbourhood]!\n  cities(where: CityWhereInput, orderBy: CityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [City]!\n  experiences(where: ExperienceWhereInput, orderBy: ExperienceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Experience]!\n  experienceCategories(where: ExperienceCategoryWhereInput, orderBy: ExperienceCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ExperienceCategory]!\n  amenitieses(where: AmenitiesWhereInput, orderBy: AmenitiesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Amenities]!\n  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review]!\n  bookings(where: BookingWhereInput, orderBy: BookingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Booking]!\n  payments(where: PaymentWhereInput, orderBy: PaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Payment]!\n  paymentAccounts(where: PaymentAccountWhereInput, orderBy: PaymentAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PaymentAccount]!\n  paypalInformations(where: PaypalInformationWhereInput, orderBy: PaypalInformationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PaypalInformation]!\n  creditCardInformations(where: CreditCardInformationWhereInput, orderBy: CreditCardInformationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CreditCardInformation]!\n  messages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message]!\n  notifications(where: NotificationWhereInput, orderBy: NotificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Notification]!\n  restaurants(where: RestaurantWhereInput, orderBy: RestaurantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Restaurant]!\n  pictures(where: PictureWhereInput, orderBy: PictureOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Picture]!\n  houseRuleses(where: HouseRulesWhereInput, orderBy: HouseRulesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [HouseRules]!\n  user(where: UserWhereUniqueInput!): User\n  place(where: PlaceWhereUniqueInput!): Place\n  pricing(where: PricingWhereUniqueInput!): Pricing\n  guestRequirements(where: GuestRequirementsWhereUniqueInput!): GuestRequirements\n  policies(where: PoliciesWhereUniqueInput!): Policies\n  views(where: ViewsWhereUniqueInput!): Views\n  location(where: LocationWhereUniqueInput!): Location\n  neighbourhood(where: NeighbourhoodWhereUniqueInput!): Neighbourhood\n  city(where: CityWhereUniqueInput!): City\n  experience(where: ExperienceWhereUniqueInput!): Experience\n  experienceCategory(where: ExperienceCategoryWhereUniqueInput!): ExperienceCategory\n  amenities(where: AmenitiesWhereUniqueInput!): Amenities\n  review(where: ReviewWhereUniqueInput!): Review\n  booking(where: BookingWhereUniqueInput!): Booking\n  payment(where: PaymentWhereUniqueInput!): Payment\n  paymentAccount(where: PaymentAccountWhereUniqueInput!): PaymentAccount\n  paypalInformation(where: PaypalInformationWhereUniqueInput!): PaypalInformation\n  creditCardInformation(where: CreditCardInformationWhereUniqueInput!): CreditCardInformation\n  message(where: MessageWhereUniqueInput!): Message\n  notification(where: NotificationWhereUniqueInput!): Notification\n  restaurant(where: RestaurantWhereUniqueInput!): Restaurant\n  houseRules(where: HouseRulesWhereUniqueInput!): HouseRules\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  placesConnection(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PlaceConnection!\n  pricingsConnection(where: PricingWhereInput, orderBy: PricingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PricingConnection!\n  guestRequirementsesConnection(where: GuestRequirementsWhereInput, orderBy: GuestRequirementsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GuestRequirementsConnection!\n  policiesesConnection(where: PoliciesWhereInput, orderBy: PoliciesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PoliciesConnection!\n  viewsesConnection(where: ViewsWhereInput, orderBy: ViewsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ViewsConnection!\n  locationsConnection(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LocationConnection!\n  neighbourhoodsConnection(where: NeighbourhoodWhereInput, orderBy: NeighbourhoodOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NeighbourhoodConnection!\n  citiesConnection(where: CityWhereInput, orderBy: CityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CityConnection!\n  experiencesConnection(where: ExperienceWhereInput, orderBy: ExperienceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ExperienceConnection!\n  experienceCategoriesConnection(where: ExperienceCategoryWhereInput, orderBy: ExperienceCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ExperienceCategoryConnection!\n  amenitiesesConnection(where: AmenitiesWhereInput, orderBy: AmenitiesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AmenitiesConnection!\n  reviewsConnection(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReviewConnection!\n  bookingsConnection(where: BookingWhereInput, orderBy: BookingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BookingConnection!\n  paymentsConnection(where: PaymentWhereInput, orderBy: PaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PaymentConnection!\n  paymentAccountsConnection(where: PaymentAccountWhereInput, orderBy: PaymentAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PaymentAccountConnection!\n  paypalInformationsConnection(where: PaypalInformationWhereInput, orderBy: PaypalInformationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PaypalInformationConnection!\n  creditCardInformationsConnection(where: CreditCardInformationWhereInput, orderBy: CreditCardInformationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CreditCardInformationConnection!\n  messagesConnection(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MessageConnection!\n  notificationsConnection(where: NotificationWhereInput, orderBy: NotificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NotificationConnection!\n  restaurantsConnection(where: RestaurantWhereInput, orderBy: RestaurantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RestaurantConnection!\n  picturesConnection(where: PictureWhereInput, orderBy: PictureOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PictureConnection!\n  houseRulesesConnection(where: HouseRulesWhereInput, orderBy: HouseRulesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): HouseRulesConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!): Node\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype RestaurantConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [RestaurantEdge]!\n  aggregate: AggregateRestaurant!\n}\n\ninput RestaurantCreateInput {\n  title: String!\n  avgPricePerPerson: Int!\n  isCurated: Boolean\n  slug: String!\n  popularity: Int!\n  pictures: PictureCreateManyInput\n  location: LocationCreateOneWithoutRestaurantInput!\n}\n\ninput RestaurantCreateOneWithoutLocationInput {\n  create: RestaurantCreateWithoutLocationInput\n  connect: RestaurantWhereUniqueInput\n}\n\ninput RestaurantCreateWithoutLocationInput {\n  title: String!\n  avgPricePerPerson: Int!\n  isCurated: Boolean\n  slug: String!\n  popularity: Int!\n  pictures: PictureCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype RestaurantEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Restaurant!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum RestaurantOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  title_ASC\n  title_DESC\n  avgPricePerPerson_ASC\n  avgPricePerPerson_DESC\n  isCurated_ASC\n  isCurated_DESC\n  slug_ASC\n  slug_DESC\n  popularity_ASC\n  popularity_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype RestaurantPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  title: String!\n  avgPricePerPerson: Int!\n  isCurated: Boolean!\n  slug: String!\n  popularity: Int!\n}\n\ntype RestaurantSubscriptionPayload {\n  mutation: MutationType!\n  node: Restaurant\n  updatedFields: [String!]\n  previousValues: RestaurantPreviousValues\n}\n\ninput RestaurantSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [RestaurantSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [RestaurantSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [RestaurantSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: RestaurantWhereInput\n}\n\ninput RestaurantUpdateInput {\n  title: String\n  avgPricePerPerson: Int\n  isCurated: Boolean\n  slug: String\n  popularity: Int\n  pictures: PictureUpdateManyInput\n  location: LocationUpdateOneWithoutRestaurantInput\n}\n\ninput RestaurantUpdateOneWithoutLocationInput {\n  create: RestaurantCreateWithoutLocationInput\n  connect: RestaurantWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: RestaurantUpdateWithoutLocationDataInput\n  upsert: RestaurantUpsertWithoutLocationInput\n}\n\ninput RestaurantUpdateWithoutLocationDataInput {\n  title: String\n  avgPricePerPerson: Int\n  isCurated: Boolean\n  slug: String\n  popularity: Int\n  pictures: PictureUpdateManyInput\n}\n\ninput RestaurantUpsertWithoutLocationInput {\n  update: RestaurantUpdateWithoutLocationDataInput!\n  create: RestaurantCreateWithoutLocationInput!\n}\n\ninput RestaurantWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [RestaurantWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [RestaurantWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [RestaurantWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  title: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  title_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  title_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  title_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  title_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  title_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  title_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  title_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  title_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  title_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  title_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  title_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  title_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  title_not_ends_with: String\n  avgPricePerPerson: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  avgPricePerPerson_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  avgPricePerPerson_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  avgPricePerPerson_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  avgPricePerPerson_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  avgPricePerPerson_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  avgPricePerPerson_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  avgPricePerPerson_gte: Int\n  isCurated: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isCurated_not: Boolean\n  slug: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  slug_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  slug_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  slug_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  slug_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  slug_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  slug_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  slug_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  slug_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  slug_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  slug_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  slug_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  slug_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  slug_not_ends_with: String\n  popularity: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  popularity_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  popularity_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  popularity_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  popularity_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  popularity_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  popularity_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  popularity_gte: Int\n  pictures_every: PictureWhereInput\n  pictures_some: PictureWhereInput\n  pictures_none: PictureWhereInput\n  location: LocationWhereInput\n}\n\ninput RestaurantWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype ReviewConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [ReviewEdge]!\n  aggregate: AggregateReview!\n}\n\ninput ReviewCreateInput {\n  text: String!\n  stars: Int!\n  accuracy: Int!\n  location: Int!\n  checkIn: Int!\n  value: Int!\n  cleanliness: Int!\n  communication: Int!\n  place: PlaceCreateOneWithoutReviewsInput!\n  experience: ExperienceCreateOneWithoutReviewsInput\n}\n\ninput ReviewCreateManyWithoutExperienceInput {\n  create: [ReviewCreateWithoutExperienceInput!]\n  connect: [ReviewWhereUniqueInput!]\n}\n\ninput ReviewCreateManyWithoutPlaceInput {\n  create: [ReviewCreateWithoutPlaceInput!]\n  connect: [ReviewWhereUniqueInput!]\n}\n\ninput ReviewCreateWithoutExperienceInput {\n  text: String!\n  stars: Int!\n  accuracy: Int!\n  location: Int!\n  checkIn: Int!\n  value: Int!\n  cleanliness: Int!\n  communication: Int!\n  place: PlaceCreateOneWithoutReviewsInput!\n}\n\ninput ReviewCreateWithoutPlaceInput {\n  text: String!\n  stars: Int!\n  accuracy: Int!\n  location: Int!\n  checkIn: Int!\n  value: Int!\n  cleanliness: Int!\n  communication: Int!\n  experience: ExperienceCreateOneWithoutReviewsInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype ReviewEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Review!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum ReviewOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  text_ASC\n  text_DESC\n  stars_ASC\n  stars_DESC\n  accuracy_ASC\n  accuracy_DESC\n  location_ASC\n  location_DESC\n  checkIn_ASC\n  checkIn_DESC\n  value_ASC\n  value_DESC\n  cleanliness_ASC\n  cleanliness_DESC\n  communication_ASC\n  communication_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype ReviewPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  text: String!\n  stars: Int!\n  accuracy: Int!\n  location: Int!\n  checkIn: Int!\n  value: Int!\n  cleanliness: Int!\n  communication: Int!\n}\n\ntype ReviewSubscriptionPayload {\n  mutation: MutationType!\n  node: Review\n  updatedFields: [String!]\n  previousValues: ReviewPreviousValues\n}\n\ninput ReviewSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ReviewSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ReviewSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ReviewSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ReviewWhereInput\n}\n\ninput ReviewUpdateInput {\n  text: String\n  stars: Int\n  accuracy: Int\n  location: Int\n  checkIn: Int\n  value: Int\n  cleanliness: Int\n  communication: Int\n  place: PlaceUpdateOneWithoutReviewsInput\n  experience: ExperienceUpdateOneWithoutReviewsInput\n}\n\ninput ReviewUpdateManyWithoutExperienceInput {\n  create: [ReviewCreateWithoutExperienceInput!]\n  connect: [ReviewWhereUniqueInput!]\n  disconnect: [ReviewWhereUniqueInput!]\n  delete: [ReviewWhereUniqueInput!]\n  update: [ReviewUpdateWithWhereUniqueWithoutExperienceInput!]\n  upsert: [ReviewUpsertWithWhereUniqueWithoutExperienceInput!]\n}\n\ninput ReviewUpdateManyWithoutPlaceInput {\n  create: [ReviewCreateWithoutPlaceInput!]\n  connect: [ReviewWhereUniqueInput!]\n  disconnect: [ReviewWhereUniqueInput!]\n  delete: [ReviewWhereUniqueInput!]\n  update: [ReviewUpdateWithWhereUniqueWithoutPlaceInput!]\n  upsert: [ReviewUpsertWithWhereUniqueWithoutPlaceInput!]\n}\n\ninput ReviewUpdateWithoutExperienceDataInput {\n  text: String\n  stars: Int\n  accuracy: Int\n  location: Int\n  checkIn: Int\n  value: Int\n  cleanliness: Int\n  communication: Int\n  place: PlaceUpdateOneWithoutReviewsInput\n}\n\ninput ReviewUpdateWithoutPlaceDataInput {\n  text: String\n  stars: Int\n  accuracy: Int\n  location: Int\n  checkIn: Int\n  value: Int\n  cleanliness: Int\n  communication: Int\n  experience: ExperienceUpdateOneWithoutReviewsInput\n}\n\ninput ReviewUpdateWithWhereUniqueWithoutExperienceInput {\n  where: ReviewWhereUniqueInput!\n  data: ReviewUpdateWithoutExperienceDataInput!\n}\n\ninput ReviewUpdateWithWhereUniqueWithoutPlaceInput {\n  where: ReviewWhereUniqueInput!\n  data: ReviewUpdateWithoutPlaceDataInput!\n}\n\ninput ReviewUpsertWithWhereUniqueWithoutExperienceInput {\n  where: ReviewWhereUniqueInput!\n  update: ReviewUpdateWithoutExperienceDataInput!\n  create: ReviewCreateWithoutExperienceInput!\n}\n\ninput ReviewUpsertWithWhereUniqueWithoutPlaceInput {\n  where: ReviewWhereUniqueInput!\n  update: ReviewUpdateWithoutPlaceDataInput!\n  create: ReviewCreateWithoutPlaceInput!\n}\n\ninput ReviewWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ReviewWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ReviewWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ReviewWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n  stars: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  stars_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  stars_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  stars_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  stars_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  stars_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  stars_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  stars_gte: Int\n  accuracy: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  accuracy_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  accuracy_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  accuracy_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  accuracy_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  accuracy_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  accuracy_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  accuracy_gte: Int\n  location: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  location_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  location_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  location_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  location_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  location_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  location_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  location_gte: Int\n  checkIn: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  checkIn_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  checkIn_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  checkIn_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  checkIn_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  checkIn_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  checkIn_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  checkIn_gte: Int\n  value: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  value_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  value_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  value_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  value_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  value_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  value_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  value_gte: Int\n  cleanliness: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  cleanliness_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  cleanliness_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  cleanliness_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  cleanliness_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  cleanliness_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  cleanliness_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  cleanliness_gte: Int\n  communication: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  communication_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  communication_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  communication_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  communication_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  communication_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  communication_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  communication_gte: Int\n  place: PlaceWhereInput\n  experience: ExperienceWhereInput\n}\n\ninput ReviewWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  place(where: PlaceSubscriptionWhereInput): PlaceSubscriptionPayload\n  pricing(where: PricingSubscriptionWhereInput): PricingSubscriptionPayload\n  guestRequirements(where: GuestRequirementsSubscriptionWhereInput): GuestRequirementsSubscriptionPayload\n  policies(where: PoliciesSubscriptionWhereInput): PoliciesSubscriptionPayload\n  views(where: ViewsSubscriptionWhereInput): ViewsSubscriptionPayload\n  location(where: LocationSubscriptionWhereInput): LocationSubscriptionPayload\n  neighbourhood(where: NeighbourhoodSubscriptionWhereInput): NeighbourhoodSubscriptionPayload\n  city(where: CitySubscriptionWhereInput): CitySubscriptionPayload\n  experience(where: ExperienceSubscriptionWhereInput): ExperienceSubscriptionPayload\n  experienceCategory(where: ExperienceCategorySubscriptionWhereInput): ExperienceCategorySubscriptionPayload\n  amenities(where: AmenitiesSubscriptionWhereInput): AmenitiesSubscriptionPayload\n  review(where: ReviewSubscriptionWhereInput): ReviewSubscriptionPayload\n  booking(where: BookingSubscriptionWhereInput): BookingSubscriptionPayload\n  payment(where: PaymentSubscriptionWhereInput): PaymentSubscriptionPayload\n  paymentAccount(where: PaymentAccountSubscriptionWhereInput): PaymentAccountSubscriptionPayload\n  paypalInformation(where: PaypalInformationSubscriptionWhereInput): PaypalInformationSubscriptionPayload\n  creditCardInformation(where: CreditCardInformationSubscriptionWhereInput): CreditCardInformationSubscriptionPayload\n  message(where: MessageSubscriptionWhereInput): MessageSubscriptionPayload\n  notification(where: NotificationSubscriptionWhereInput): NotificationSubscriptionPayload\n  restaurant(where: RestaurantSubscriptionWhereInput): RestaurantSubscriptionPayload\n  picture(where: PictureSubscriptionWhereInput): PictureSubscriptionPayload\n  houseRules(where: HouseRulesSubscriptionWhereInput): HouseRulesSubscriptionPayload\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  firstName: String!\n  lastName: String!\n  email: String!\n  password: String!\n  phone: String!\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  ownedPlaces: PlaceCreateManyWithoutHostInput\n  location: LocationCreateOneWithoutUserInput\n  bookings: BookingCreateManyWithoutBookeeInput\n  paymentAccount: PaymentAccountCreateManyWithoutUserInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receivedMessages: MessageCreateManyWithoutToInput\n  notifications: NotificationCreateManyWithoutUserInput\n  profilePicture: PictureCreateOneInput\n  hostingExperiences: ExperienceCreateManyWithoutHostInput\n}\n\ninput UserCreateOneWithoutBookingsInput {\n  create: UserCreateWithoutBookingsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutHostingExperiencesInput {\n  create: UserCreateWithoutHostingExperiencesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutLocationInput {\n  create: UserCreateWithoutLocationInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutNotificationsInput {\n  create: UserCreateWithoutNotificationsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutOwnedPlacesInput {\n  create: UserCreateWithoutOwnedPlacesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutPaymentAccountInput {\n  create: UserCreateWithoutPaymentAccountInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutReceivedMessagesInput {\n  create: UserCreateWithoutReceivedMessagesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutSentMessagesInput {\n  create: UserCreateWithoutSentMessagesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutBookingsInput {\n  firstName: String!\n  lastName: String!\n  email: String!\n  password: String!\n  phone: String!\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  ownedPlaces: PlaceCreateManyWithoutHostInput\n  location: LocationCreateOneWithoutUserInput\n  paymentAccount: PaymentAccountCreateManyWithoutUserInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receivedMessages: MessageCreateManyWithoutToInput\n  notifications: NotificationCreateManyWithoutUserInput\n  profilePicture: PictureCreateOneInput\n  hostingExperiences: ExperienceCreateManyWithoutHostInput\n}\n\ninput UserCreateWithoutHostingExperiencesInput {\n  firstName: String!\n  lastName: String!\n  email: String!\n  password: String!\n  phone: String!\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  ownedPlaces: PlaceCreateManyWithoutHostInput\n  location: LocationCreateOneWithoutUserInput\n  bookings: BookingCreateManyWithoutBookeeInput\n  paymentAccount: PaymentAccountCreateManyWithoutUserInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receivedMessages: MessageCreateManyWithoutToInput\n  notifications: NotificationCreateManyWithoutUserInput\n  profilePicture: PictureCreateOneInput\n}\n\ninput UserCreateWithoutLocationInput {\n  firstName: String!\n  lastName: String!\n  email: String!\n  password: String!\n  phone: String!\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  ownedPlaces: PlaceCreateManyWithoutHostInput\n  bookings: BookingCreateManyWithoutBookeeInput\n  paymentAccount: PaymentAccountCreateManyWithoutUserInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receivedMessages: MessageCreateManyWithoutToInput\n  notifications: NotificationCreateManyWithoutUserInput\n  profilePicture: PictureCreateOneInput\n  hostingExperiences: ExperienceCreateManyWithoutHostInput\n}\n\ninput UserCreateWithoutNotificationsInput {\n  firstName: String!\n  lastName: String!\n  email: String!\n  password: String!\n  phone: String!\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  ownedPlaces: PlaceCreateManyWithoutHostInput\n  location: LocationCreateOneWithoutUserInput\n  bookings: BookingCreateManyWithoutBookeeInput\n  paymentAccount: PaymentAccountCreateManyWithoutUserInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receivedMessages: MessageCreateManyWithoutToInput\n  profilePicture: PictureCreateOneInput\n  hostingExperiences: ExperienceCreateManyWithoutHostInput\n}\n\ninput UserCreateWithoutOwnedPlacesInput {\n  firstName: String!\n  lastName: String!\n  email: String!\n  password: String!\n  phone: String!\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  location: LocationCreateOneWithoutUserInput\n  bookings: BookingCreateManyWithoutBookeeInput\n  paymentAccount: PaymentAccountCreateManyWithoutUserInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receivedMessages: MessageCreateManyWithoutToInput\n  notifications: NotificationCreateManyWithoutUserInput\n  profilePicture: PictureCreateOneInput\n  hostingExperiences: ExperienceCreateManyWithoutHostInput\n}\n\ninput UserCreateWithoutPaymentAccountInput {\n  firstName: String!\n  lastName: String!\n  email: String!\n  password: String!\n  phone: String!\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  ownedPlaces: PlaceCreateManyWithoutHostInput\n  location: LocationCreateOneWithoutUserInput\n  bookings: BookingCreateManyWithoutBookeeInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  receivedMessages: MessageCreateManyWithoutToInput\n  notifications: NotificationCreateManyWithoutUserInput\n  profilePicture: PictureCreateOneInput\n  hostingExperiences: ExperienceCreateManyWithoutHostInput\n}\n\ninput UserCreateWithoutReceivedMessagesInput {\n  firstName: String!\n  lastName: String!\n  email: String!\n  password: String!\n  phone: String!\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  ownedPlaces: PlaceCreateManyWithoutHostInput\n  location: LocationCreateOneWithoutUserInput\n  bookings: BookingCreateManyWithoutBookeeInput\n  paymentAccount: PaymentAccountCreateManyWithoutUserInput\n  sentMessages: MessageCreateManyWithoutFromInput\n  notifications: NotificationCreateManyWithoutUserInput\n  profilePicture: PictureCreateOneInput\n  hostingExperiences: ExperienceCreateManyWithoutHostInput\n}\n\ninput UserCreateWithoutSentMessagesInput {\n  firstName: String!\n  lastName: String!\n  email: String!\n  password: String!\n  phone: String!\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  ownedPlaces: PlaceCreateManyWithoutHostInput\n  location: LocationCreateOneWithoutUserInput\n  bookings: BookingCreateManyWithoutBookeeInput\n  paymentAccount: PaymentAccountCreateManyWithoutUserInput\n  receivedMessages: MessageCreateManyWithoutToInput\n  notifications: NotificationCreateManyWithoutUserInput\n  profilePicture: PictureCreateOneInput\n  hostingExperiences: ExperienceCreateManyWithoutHostInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  firstName_ASC\n  firstName_DESC\n  lastName_ASC\n  lastName_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  phone_ASC\n  phone_DESC\n  responseRate_ASC\n  responseRate_DESC\n  responseTime_ASC\n  responseTime_DESC\n  isSuperHost_ASC\n  isSuperHost_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  firstName: String!\n  lastName: String!\n  email: String!\n  password: String!\n  phone: String!\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  phone: String\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  ownedPlaces: PlaceUpdateManyWithoutHostInput\n  location: LocationUpdateOneWithoutUserInput\n  bookings: BookingUpdateManyWithoutBookeeInput\n  paymentAccount: PaymentAccountUpdateManyWithoutUserInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receivedMessages: MessageUpdateManyWithoutToInput\n  notifications: NotificationUpdateManyWithoutUserInput\n  profilePicture: PictureUpdateOneInput\n  hostingExperiences: ExperienceUpdateManyWithoutHostInput\n}\n\ninput UserUpdateOneWithoutBookingsInput {\n  create: UserCreateWithoutBookingsInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutBookingsDataInput\n  upsert: UserUpsertWithoutBookingsInput\n}\n\ninput UserUpdateOneWithoutHostingExperiencesInput {\n  create: UserCreateWithoutHostingExperiencesInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutHostingExperiencesDataInput\n  upsert: UserUpsertWithoutHostingExperiencesInput\n}\n\ninput UserUpdateOneWithoutLocationInput {\n  create: UserCreateWithoutLocationInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutLocationDataInput\n  upsert: UserUpsertWithoutLocationInput\n}\n\ninput UserUpdateOneWithoutNotificationsInput {\n  create: UserCreateWithoutNotificationsInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutNotificationsDataInput\n  upsert: UserUpsertWithoutNotificationsInput\n}\n\ninput UserUpdateOneWithoutOwnedPlacesInput {\n  create: UserCreateWithoutOwnedPlacesInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutOwnedPlacesDataInput\n  upsert: UserUpsertWithoutOwnedPlacesInput\n}\n\ninput UserUpdateOneWithoutPaymentAccountInput {\n  create: UserCreateWithoutPaymentAccountInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutPaymentAccountDataInput\n  upsert: UserUpsertWithoutPaymentAccountInput\n}\n\ninput UserUpdateOneWithoutReceivedMessagesInput {\n  create: UserCreateWithoutReceivedMessagesInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutReceivedMessagesDataInput\n  upsert: UserUpsertWithoutReceivedMessagesInput\n}\n\ninput UserUpdateOneWithoutSentMessagesInput {\n  create: UserCreateWithoutSentMessagesInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutSentMessagesDataInput\n  upsert: UserUpsertWithoutSentMessagesInput\n}\n\ninput UserUpdateWithoutBookingsDataInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  phone: String\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  ownedPlaces: PlaceUpdateManyWithoutHostInput\n  location: LocationUpdateOneWithoutUserInput\n  paymentAccount: PaymentAccountUpdateManyWithoutUserInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receivedMessages: MessageUpdateManyWithoutToInput\n  notifications: NotificationUpdateManyWithoutUserInput\n  profilePicture: PictureUpdateOneInput\n  hostingExperiences: ExperienceUpdateManyWithoutHostInput\n}\n\ninput UserUpdateWithoutHostingExperiencesDataInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  phone: String\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  ownedPlaces: PlaceUpdateManyWithoutHostInput\n  location: LocationUpdateOneWithoutUserInput\n  bookings: BookingUpdateManyWithoutBookeeInput\n  paymentAccount: PaymentAccountUpdateManyWithoutUserInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receivedMessages: MessageUpdateManyWithoutToInput\n  notifications: NotificationUpdateManyWithoutUserInput\n  profilePicture: PictureUpdateOneInput\n}\n\ninput UserUpdateWithoutLocationDataInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  phone: String\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  ownedPlaces: PlaceUpdateManyWithoutHostInput\n  bookings: BookingUpdateManyWithoutBookeeInput\n  paymentAccount: PaymentAccountUpdateManyWithoutUserInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receivedMessages: MessageUpdateManyWithoutToInput\n  notifications: NotificationUpdateManyWithoutUserInput\n  profilePicture: PictureUpdateOneInput\n  hostingExperiences: ExperienceUpdateManyWithoutHostInput\n}\n\ninput UserUpdateWithoutNotificationsDataInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  phone: String\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  ownedPlaces: PlaceUpdateManyWithoutHostInput\n  location: LocationUpdateOneWithoutUserInput\n  bookings: BookingUpdateManyWithoutBookeeInput\n  paymentAccount: PaymentAccountUpdateManyWithoutUserInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receivedMessages: MessageUpdateManyWithoutToInput\n  profilePicture: PictureUpdateOneInput\n  hostingExperiences: ExperienceUpdateManyWithoutHostInput\n}\n\ninput UserUpdateWithoutOwnedPlacesDataInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  phone: String\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  location: LocationUpdateOneWithoutUserInput\n  bookings: BookingUpdateManyWithoutBookeeInput\n  paymentAccount: PaymentAccountUpdateManyWithoutUserInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receivedMessages: MessageUpdateManyWithoutToInput\n  notifications: NotificationUpdateManyWithoutUserInput\n  profilePicture: PictureUpdateOneInput\n  hostingExperiences: ExperienceUpdateManyWithoutHostInput\n}\n\ninput UserUpdateWithoutPaymentAccountDataInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  phone: String\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  ownedPlaces: PlaceUpdateManyWithoutHostInput\n  location: LocationUpdateOneWithoutUserInput\n  bookings: BookingUpdateManyWithoutBookeeInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  receivedMessages: MessageUpdateManyWithoutToInput\n  notifications: NotificationUpdateManyWithoutUserInput\n  profilePicture: PictureUpdateOneInput\n  hostingExperiences: ExperienceUpdateManyWithoutHostInput\n}\n\ninput UserUpdateWithoutReceivedMessagesDataInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  phone: String\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  ownedPlaces: PlaceUpdateManyWithoutHostInput\n  location: LocationUpdateOneWithoutUserInput\n  bookings: BookingUpdateManyWithoutBookeeInput\n  paymentAccount: PaymentAccountUpdateManyWithoutUserInput\n  sentMessages: MessageUpdateManyWithoutFromInput\n  notifications: NotificationUpdateManyWithoutUserInput\n  profilePicture: PictureUpdateOneInput\n  hostingExperiences: ExperienceUpdateManyWithoutHostInput\n}\n\ninput UserUpdateWithoutSentMessagesDataInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  phone: String\n  responseRate: Float\n  responseTime: Int\n  isSuperHost: Boolean\n  ownedPlaces: PlaceUpdateManyWithoutHostInput\n  location: LocationUpdateOneWithoutUserInput\n  bookings: BookingUpdateManyWithoutBookeeInput\n  paymentAccount: PaymentAccountUpdateManyWithoutUserInput\n  receivedMessages: MessageUpdateManyWithoutToInput\n  notifications: NotificationUpdateManyWithoutUserInput\n  profilePicture: PictureUpdateOneInput\n  hostingExperiences: ExperienceUpdateManyWithoutHostInput\n}\n\ninput UserUpsertWithoutBookingsInput {\n  update: UserUpdateWithoutBookingsDataInput!\n  create: UserCreateWithoutBookingsInput!\n}\n\ninput UserUpsertWithoutHostingExperiencesInput {\n  update: UserUpdateWithoutHostingExperiencesDataInput!\n  create: UserCreateWithoutHostingExperiencesInput!\n}\n\ninput UserUpsertWithoutLocationInput {\n  update: UserUpdateWithoutLocationDataInput!\n  create: UserCreateWithoutLocationInput!\n}\n\ninput UserUpsertWithoutNotificationsInput {\n  update: UserUpdateWithoutNotificationsDataInput!\n  create: UserCreateWithoutNotificationsInput!\n}\n\ninput UserUpsertWithoutOwnedPlacesInput {\n  update: UserUpdateWithoutOwnedPlacesDataInput!\n  create: UserCreateWithoutOwnedPlacesInput!\n}\n\ninput UserUpsertWithoutPaymentAccountInput {\n  update: UserUpdateWithoutPaymentAccountDataInput!\n  create: UserCreateWithoutPaymentAccountInput!\n}\n\ninput UserUpsertWithoutReceivedMessagesInput {\n  update: UserUpdateWithoutReceivedMessagesDataInput!\n  create: UserCreateWithoutReceivedMessagesInput!\n}\n\ninput UserUpsertWithoutSentMessagesInput {\n  update: UserUpdateWithoutSentMessagesDataInput!\n  create: UserCreateWithoutSentMessagesInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  firstName: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  firstName_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  firstName_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  firstName_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  firstName_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  firstName_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  firstName_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  firstName_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  firstName_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  firstName_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  firstName_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  firstName_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  firstName_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  firstName_not_ends_with: String\n  lastName: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  lastName_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  lastName_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  lastName_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  lastName_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  lastName_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  lastName_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  lastName_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  lastName_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  lastName_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  lastName_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  lastName_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  lastName_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  lastName_not_ends_with: String\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  password: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  password_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  password_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  password_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  password_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  password_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  password_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  password_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  password_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  password_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  password_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  password_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  password_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  password_not_ends_with: String\n  phone: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  phone_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  phone_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  phone_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  phone_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  phone_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  phone_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  phone_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  phone_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  phone_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  phone_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  phone_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  phone_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  phone_not_ends_with: String\n  responseRate: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  responseRate_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  responseRate_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  responseRate_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  responseRate_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  responseRate_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  responseRate_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  responseRate_gte: Float\n  responseTime: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  responseTime_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  responseTime_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  responseTime_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  responseTime_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  responseTime_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  responseTime_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  responseTime_gte: Int\n  isSuperHost: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isSuperHost_not: Boolean\n  ownedPlaces_every: PlaceWhereInput\n  ownedPlaces_some: PlaceWhereInput\n  ownedPlaces_none: PlaceWhereInput\n  location: LocationWhereInput\n  bookings_every: BookingWhereInput\n  bookings_some: BookingWhereInput\n  bookings_none: BookingWhereInput\n  paymentAccount_every: PaymentAccountWhereInput\n  paymentAccount_some: PaymentAccountWhereInput\n  paymentAccount_none: PaymentAccountWhereInput\n  sentMessages_every: MessageWhereInput\n  sentMessages_some: MessageWhereInput\n  sentMessages_none: MessageWhereInput\n  receivedMessages_every: MessageWhereInput\n  receivedMessages_some: MessageWhereInput\n  receivedMessages_none: MessageWhereInput\n  notifications_every: NotificationWhereInput\n  notifications_some: NotificationWhereInput\n  notifications_none: NotificationWhereInput\n  profilePicture: PictureWhereInput\n  hostingExperiences_every: ExperienceWhereInput\n  hostingExperiences_some: ExperienceWhereInput\n  hostingExperiences_none: ExperienceWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype ViewsConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [ViewsEdge]!\n  aggregate: AggregateViews!\n}\n\ninput ViewsCreateInput {\n  lastWeek: Int!\n  place: PlaceCreateOneWithoutViewsInput!\n}\n\ninput ViewsCreateOneWithoutPlaceInput {\n  create: ViewsCreateWithoutPlaceInput\n  connect: ViewsWhereUniqueInput\n}\n\ninput ViewsCreateWithoutPlaceInput {\n  lastWeek: Int!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype ViewsEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Views!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum ViewsOrderByInput {\n  id_ASC\n  id_DESC\n  lastWeek_ASC\n  lastWeek_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ViewsPreviousValues {\n  id: ID!\n  lastWeek: Int!\n}\n\ntype ViewsSubscriptionPayload {\n  mutation: MutationType!\n  node: Views\n  updatedFields: [String!]\n  previousValues: ViewsPreviousValues\n}\n\ninput ViewsSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ViewsSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ViewsSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ViewsSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ViewsWhereInput\n}\n\ninput ViewsUpdateInput {\n  lastWeek: Int\n  place: PlaceUpdateOneWithoutViewsInput\n}\n\ninput ViewsUpdateOneWithoutPlaceInput {\n  create: ViewsCreateWithoutPlaceInput\n  connect: ViewsWhereUniqueInput\n  delete: Boolean\n  update: ViewsUpdateWithoutPlaceDataInput\n  upsert: ViewsUpsertWithoutPlaceInput\n}\n\ninput ViewsUpdateWithoutPlaceDataInput {\n  lastWeek: Int\n}\n\ninput ViewsUpsertWithoutPlaceInput {\n  update: ViewsUpdateWithoutPlaceDataInput!\n  create: ViewsCreateWithoutPlaceInput!\n}\n\ninput ViewsWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ViewsWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ViewsWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ViewsWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  lastWeek: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  lastWeek_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  lastWeek_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  lastWeek_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  lastWeek_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  lastWeek_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  lastWeek_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  lastWeek_gte: Int\n  place: PlaceWhereInput\n}\n\ninput ViewsWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 571
    },
    {
      "name": "relational.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/enum/relational.graphql",
      "sha": "609cf738356874d114b32647344a23cfc6a22d65",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/enum/relational.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/609cf738356874d114b32647344a23cfc6a22d65",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/enum/relational.graphql",
      "content": "type A {\n  fieldA: UsedEnum\n  fieldB: UsedEnum!\n  fieldC: [UsedEnum!]!\n  b: B!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AEdge]!\n  aggregate: AggregateA!\n}\n\ninput ACreatefieldCInput {\n  set: [UsedEnum!]\n}\n\ninput ACreateInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum!\n  fieldC: ACreatefieldCInput\n  b: BCreateOneWithoutAInput!\n}\n\ninput ACreateManyInput {\n  create: [ACreateInput!]\n}\n\ninput ACreateManyWithoutBInput {\n  create: [ACreateWithoutBInput!]\n}\n\ninput ACreateWithoutBInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum!\n  fieldC: ACreatefieldCInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: A!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\ntype AggregateA {\n  count: Int!\n}\n\ntype AggregateAWithId {\n  count: Int!\n}\n\ntype AggregateB {\n  count: Int!\n}\n\ntype AggregateC {\n  count: Int!\n}\n\ntype AggregateD {\n  count: Int!\n}\n\ntype AggregateE {\n  count: Int!\n}\n\nenum AOrderByInput {\n  fieldA_ASC\n  fieldA_DESC\n  fieldB_ASC\n  fieldB_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype APreviousValues {\n  fieldA: UsedEnum\n  fieldB: UsedEnum!\n  fieldC: [UsedEnum!]!\n}\n\ntype ASubscriptionPayload {\n  mutation: MutationType!\n  node: A\n  updatedFields: [String!]\n  previousValues: APreviousValues\n}\n\ninput ASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWhereInput\n}\n\ninput AUpdatefieldCInput {\n  set: [UsedEnum!]\n}\n\ninput AUpdateManyMutationInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum\n  fieldC: AUpdatefieldCInput\n}\n\ninput AWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWhereInput!]\n  fieldA: UsedEnum\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  fieldA_not: UsedEnum\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  fieldA_in: [UsedEnum!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  fieldA_not_in: [UsedEnum!]\n  fieldB: UsedEnum\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  fieldB_not: UsedEnum\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  fieldB_in: [UsedEnum!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  fieldB_not_in: [UsedEnum!]\n  b: BWhereInput\n}\n\ntype AWithId implements Node {\n  id: ID!\n  fieldA: UsedEnum\n  fieldB: UsedEnum!\n  fieldC: [UsedEnum!]!\n  c: C\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithIdEdge]!\n  aggregate: AggregateAWithId!\n}\n\ninput AWithIdCreatefieldCInput {\n  set: [UsedEnum!]\n}\n\ninput AWithIdCreateInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum!\n  fieldC: AWithIdCreatefieldCInput\n  c: CCreateOneWithoutAInput\n}\n\ninput AWithIdCreateOneInput {\n  create: AWithIdCreateInput\n  connect: AWithIdWhereUniqueInput\n}\n\ninput AWithIdCreateOneWithoutCInput {\n  create: AWithIdCreateWithoutCInput\n  connect: AWithIdWhereUniqueInput\n}\n\ninput AWithIdCreateWithoutCInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum!\n  fieldC: AWithIdCreatefieldCInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithIdOrderByInput {\n  id_ASC\n  id_DESC\n  fieldA_ASC\n  fieldA_DESC\n  fieldB_ASC\n  fieldB_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AWithIdPreviousValues {\n  id: ID!\n  fieldA: UsedEnum\n  fieldB: UsedEnum!\n  fieldC: [UsedEnum!]!\n}\n\ntype AWithIdSubscriptionPayload {\n  mutation: MutationType!\n  node: AWithId\n  updatedFields: [String!]\n  previousValues: AWithIdPreviousValues\n}\n\ninput AWithIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithIdWhereInput\n}\n\ninput AWithIdUpdatefieldCInput {\n  set: [UsedEnum!]\n}\n\ninput AWithIdUpdateInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum\n  fieldC: AWithIdUpdatefieldCInput\n  c: CUpdateOneWithoutAInput\n}\n\ninput AWithIdUpdateManyMutationInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum\n  fieldC: AWithIdUpdatefieldCInput\n}\n\ninput AWithIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  fieldA: UsedEnum\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  fieldA_not: UsedEnum\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  fieldA_in: [UsedEnum!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  fieldA_not_in: [UsedEnum!]\n  fieldB: UsedEnum\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  fieldB_not: UsedEnum\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  fieldB_in: [UsedEnum!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  fieldB_not_in: [UsedEnum!]\n  c: CWhereInput\n}\n\ninput AWithIdWhereUniqueInput {\n  id: ID\n}\n\ntype B {\n  field: String!\n  a(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A!]\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BEdge]!\n  aggregate: AggregateB!\n}\n\ninput BCreateInput {\n  field: String!\n  a: ACreateManyWithoutBInput\n}\n\ninput BCreateOneWithoutAInput {\n  create: BCreateWithoutAInput\n}\n\ninput BCreateWithoutAInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: B!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BPreviousValues {\n  field: String!\n}\n\ntype BSubscriptionPayload {\n  mutation: MutationType!\n  node: B\n  updatedFields: [String!]\n  previousValues: BPreviousValues\n}\n\ninput BSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWhereInput\n}\n\ninput BUpdateManyMutationInput {\n  field: String\n}\n\ninput BWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWhereInput!]\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  a_every: AWhereInput\n  a_some: AWhereInput\n  a_none: AWhereInput\n}\n\ntype C {\n  field: [Int!]!\n  a: AWithId!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CEdge]!\n  aggregate: AggregateC!\n}\n\ninput CCreatefieldInput {\n  set: [Int!]\n}\n\ninput CCreateInput {\n  field: CCreatefieldInput\n  a: AWithIdCreateOneWithoutCInput!\n}\n\ninput CCreateOneWithoutAInput {\n  create: CCreateWithoutAInput\n}\n\ninput CCreateWithoutAInput {\n  field: CCreatefieldInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: C!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum COrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CPreviousValues {\n  field: [Int!]!\n}\n\ntype CSubscriptionPayload {\n  mutation: MutationType!\n  node: C\n  updatedFields: [String!]\n  previousValues: CPreviousValues\n}\n\ninput CSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWhereInput\n}\n\ninput CUpdatefieldInput {\n  set: [Int!]\n}\n\ninput CUpdateManyMutationInput {\n  field: CUpdatefieldInput\n}\n\ninput CUpdateOneWithoutAInput {\n  create: CCreateWithoutAInput\n  disconnect: Boolean\n  delete: Boolean\n  update: CUpdateWithoutADataInput\n  upsert: CUpsertWithoutAInput\n}\n\ninput CUpdateWithoutADataInput {\n  field: CUpdatefieldInput\n}\n\ninput CUpsertWithoutAInput {\n  update: CUpdateWithoutADataInput!\n  create: CCreateWithoutAInput!\n}\n\ninput CWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWhereInput!]\n  a: AWithIdWhereInput\n}\n\ntype D {\n  field: [DateTime!]!\n  a: AWithId!\n}\n\nscalar DateTime\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype DConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [DEdge]!\n  aggregate: AggregateD!\n}\n\ninput DCreatefieldInput {\n  set: [DateTime!]\n}\n\ninput DCreateInput {\n  field: DCreatefieldInput\n  a: AWithIdCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype DEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: D!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum DOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype DPreviousValues {\n  field: [DateTime!]!\n}\n\ntype DSubscriptionPayload {\n  mutation: MutationType!\n  node: D\n  updatedFields: [String!]\n  previousValues: DPreviousValues\n}\n\ninput DSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [DSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [DSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [DSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: DWhereInput\n}\n\ninput DUpdatefieldInput {\n  set: [DateTime!]\n}\n\ninput DUpdateManyMutationInput {\n  field: DUpdatefieldInput\n}\n\ninput DWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [DWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [DWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [DWhereInput!]\n  a: AWithIdWhereInput\n}\n\ntype E {\n  field: Json\n  a(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype EConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [EEdge]!\n  aggregate: AggregateE!\n}\n\ninput ECreateInput {\n  field: Json\n  a: ACreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype EEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: E!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum EOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype EPreviousValues {\n  field: Json\n}\n\ntype ESubscriptionPayload {\n  mutation: MutationType!\n  node: E\n  updatedFields: [String!]\n  previousValues: EPreviousValues\n}\n\ninput ESubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ESubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ESubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ESubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: EWhereInput\n}\n\ninput EUpdateManyMutationInput {\n  field: Json\n}\n\ninput EWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [EWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [EWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [EWhereInput!]\n  a_every: AWhereInput\n  a_some: AWhereInput\n  a_none: AWhereInput\n}\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createB(data: BCreateInput!): B!\n  createC(data: CCreateInput!): C!\n  createD(data: DCreateInput!): D!\n  createE(data: ECreateInput!): E!\n  createA(data: ACreateInput!): A!\n  createAWithId(data: AWithIdCreateInput!): AWithId!\n  updateAWithId(data: AWithIdUpdateInput!, where: AWithIdWhereUniqueInput!): AWithId\n  deleteAWithId(where: AWithIdWhereUniqueInput!): AWithId\n  upsertAWithId(where: AWithIdWhereUniqueInput!, create: AWithIdCreateInput!, update: AWithIdUpdateInput!): AWithId!\n  updateManyBs(data: BUpdateManyMutationInput!, where: BWhereInput): BatchPayload!\n  updateManyCs(data: CUpdateManyMutationInput!, where: CWhereInput): BatchPayload!\n  updateManyDs(data: DUpdateManyMutationInput!, where: DWhereInput): BatchPayload!\n  updateManyEs(data: EUpdateManyMutationInput!, where: EWhereInput): BatchPayload!\n  updateManyAs(data: AUpdateManyMutationInput!, where: AWhereInput): BatchPayload!\n  updateManyAWithIds(data: AWithIdUpdateManyMutationInput!, where: AWithIdWhereInput): BatchPayload!\n  deleteManyBs(where: BWhereInput): BatchPayload!\n  deleteManyCs(where: CWhereInput): BatchPayload!\n  deleteManyDs(where: DWhereInput): BatchPayload!\n  deleteManyEs(where: EWhereInput): BatchPayload!\n  deleteManyAs(where: AWhereInput): BatchPayload!\n  deleteManyAWithIds(where: AWithIdWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  bs(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B]!\n  cs(where: CWhereInput, orderBy: COrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [C]!\n  ds(where: DWhereInput, orderBy: DOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [D]!\n  es(where: EWhereInput, orderBy: EOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [E]!\n  as(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A]!\n  aWithIds(where: AWithIdWhereInput, orderBy: AWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithId]!\n  aWithId(where: AWithIdWhereUniqueInput!): AWithId\n  bsConnection(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BConnection!\n  csConnection(where: CWhereInput, orderBy: COrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CConnection!\n  dsConnection(where: DWhereInput, orderBy: DOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DConnection!\n  esConnection(where: EWhereInput, orderBy: EOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EConnection!\n  asConnection(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AConnection!\n  aWithIdsConnection(where: AWithIdWhereInput, orderBy: AWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithIdConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  b(where: BSubscriptionWhereInput): BSubscriptionPayload\n  c(where: CSubscriptionWhereInput): CSubscriptionPayload\n  d(where: DSubscriptionWhereInput): DSubscriptionPayload\n  e(where: ESubscriptionWhereInput): ESubscriptionPayload\n  a(where: ASubscriptionWhereInput): ASubscriptionPayload\n  aWithId(where: AWithIdSubscriptionWhereInput): AWithIdSubscriptionPayload\n}\n\nenum UsedEnum {\n  A\n  B\n  C\n  D\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 100
    },
    {
      "name": "document.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/embedded/document.graphql",
      "sha": "0d7b4dc1a759de9993a79a45bccf01c2e1147c72",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/embedded/document.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/0d7b4dc1a759de9993a79a45bccf01c2e1147c72",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/embedded/document.graphql",
      "content": "type AggregateFriend {\n  count: Int!\n}\n\ntype AggregateJoint {\n  count: Int!\n}\n\ntype AggregateParent {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\ntype Child {\n  c: String\n  friendsOpt(where: FriendWhereInput, orderBy: FriendOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Friend!]\n  jointOpt: Joint!\n}\n\ninput ChildCreateInput {\n  c: String\n  friendsOpt: FriendCreateManyInput\n  jointOpt: JointCreateOneInput!\n}\n\ninput ChildCreateManyInput {\n  create: [ChildCreateInput!]\n}\n\ntype ChildPreviousValues {\n  c: String\n}\n\ninput ChildScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ChildScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ChildScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ChildScalarWhereInput!]\n  c: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  c_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  c_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  c_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  c_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  c_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  c_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  c_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  c_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  c_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  c_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  c_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  c_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  c_not_ends_with: String\n}\n\ntype ChildSubscriptionPayload {\n  mutation: MutationType!\n  node: Child\n  updatedFields: [String!]\n  previousValues: ChildPreviousValues\n}\n\ninput ChildSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ChildSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ChildSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ChildSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ChildWhereInput\n}\n\ninput ChildUpdateManyDataInput {\n  c: String\n}\n\ninput ChildUpdateManyInput {\n  create: [ChildCreateInput!]\n  updateMany: [ChildUpdateManyWithWhereNestedInput!]\n  deleteMany: [ChildScalarWhereInput!]\n}\n\ninput ChildUpdateManyWithWhereNestedInput {\n  where: ChildScalarWhereInput!\n  data: ChildUpdateManyDataInput!\n}\n\ninput ChildWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ChildWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ChildWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ChildWhereInput!]\n  c: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  c_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  c_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  c_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  c_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  c_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  c_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  c_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  c_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  c_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  c_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  c_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  c_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  c_not_ends_with: String\n}\n\ntype Friend {\n  f: String\n  test: ID!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype FriendConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [FriendEdge]!\n  aggregate: AggregateFriend!\n}\n\ninput FriendCreateInput {\n  f: String\n}\n\ninput FriendCreateManyInput {\n  create: [FriendCreateInput!]\n  connect: [FriendWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype FriendEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Friend!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum FriendOrderByInput {\n  f_ASC\n  f_DESC\n  test_ASC\n  test_DESC\n}\n\ntype FriendPreviousValues {\n  f: String\n  test: ID!\n}\n\ntype FriendSubscriptionPayload {\n  mutation: MutationType!\n  node: Friend\n  updatedFields: [String!]\n  previousValues: FriendPreviousValues\n}\n\ninput FriendSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FriendSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FriendSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FriendSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FriendWhereInput\n}\n\ninput FriendUpdateInput {\n  f: String\n}\n\ninput FriendUpdateManyMutationInput {\n  f: String\n}\n\ninput FriendWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FriendWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FriendWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FriendWhereInput!]\n  f: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  f_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  f_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  f_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  f_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  f_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  f_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  f_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  f_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  f_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  f_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  f_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  f_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  f_not_ends_with: String\n  test: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  test_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  test_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  test_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  test_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  test_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  test_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  test_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  test_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  test_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  test_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  test_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  test_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  test_not_ends_with: ID\n}\n\ninput FriendWhereUniqueInput {\n  f: String\n  test: ID\n}\n\ntype Joint implements Node {\n  id: ID!\n  j: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype JointConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [JointEdge]!\n  aggregate: AggregateJoint!\n}\n\ninput JointCreateInput {\n  j: String\n}\n\ninput JointCreateManyInput {\n  create: [JointCreateInput!]\n  connect: [JointWhereUniqueInput!]\n}\n\ninput JointCreateOneInput {\n  create: JointCreateInput\n  connect: JointWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype JointEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Joint!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum JointOrderByInput {\n  id_ASC\n  id_DESC\n  j_ASC\n  j_DESC\n}\n\ntype JointPreviousValues {\n  id: ID!\n  j: String\n}\n\ninput JointScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [JointScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [JointScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [JointScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  j: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  j_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  j_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  j_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  j_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  j_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  j_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  j_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  j_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  j_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  j_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  j_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  j_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  j_not_ends_with: String\n}\n\ntype JointSubscriptionPayload {\n  mutation: MutationType!\n  node: Joint\n  updatedFields: [String!]\n  previousValues: JointPreviousValues\n}\n\ninput JointSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [JointSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [JointSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [JointSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: JointWhereInput\n}\n\ninput JointUpdateDataInput {\n  j: String\n}\n\ninput JointUpdateInput {\n  j: String\n}\n\ninput JointUpdateManyDataInput {\n  j: String\n}\n\ninput JointUpdateManyInput {\n  create: [JointCreateInput!]\n  connect: [JointWhereUniqueInput!]\n  disconnect: [JointWhereUniqueInput!]\n  delete: [JointWhereUniqueInput!]\n  update: [JointUpdateWithWhereUniqueNestedInput!]\n  updateMany: [JointUpdateManyWithWhereNestedInput!]\n  deleteMany: [JointScalarWhereInput!]\n  upsert: [JointUpsertWithWhereUniqueNestedInput!]\n}\n\ninput JointUpdateManyMutationInput {\n  j: String\n}\n\ninput JointUpdateManyWithWhereNestedInput {\n  where: JointScalarWhereInput!\n  data: JointUpdateManyDataInput!\n}\n\ninput JointUpdateWithWhereUniqueNestedInput {\n  where: JointWhereUniqueInput!\n  data: JointUpdateDataInput!\n}\n\ninput JointUpsertWithWhereUniqueNestedInput {\n  where: JointWhereUniqueInput!\n  update: JointUpdateDataInput!\n  create: JointCreateInput!\n}\n\ninput JointWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [JointWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [JointWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [JointWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  j: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  j_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  j_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  j_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  j_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  j_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  j_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  j_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  j_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  j_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  j_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  j_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  j_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  j_not_ends_with: String\n}\n\ninput JointWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createParent(data: ParentCreateInput!): Parent!\n  createJoint(data: JointCreateInput!): Joint!\n  createFriend(data: FriendCreateInput!): Friend!\n  updateParent(data: ParentUpdateInput!, where: ParentWhereUniqueInput!): Parent\n  updateJoint(data: JointUpdateInput!, where: JointWhereUniqueInput!): Joint\n  updateFriend(data: FriendUpdateInput!, where: FriendWhereUniqueInput!): Friend\n  deleteParent(where: ParentWhereUniqueInput!): Parent\n  deleteJoint(where: JointWhereUniqueInput!): Joint\n  deleteFriend(where: FriendWhereUniqueInput!): Friend\n  upsertParent(where: ParentWhereUniqueInput!, create: ParentCreateInput!, update: ParentUpdateInput!): Parent!\n  upsertJoint(where: JointWhereUniqueInput!, create: JointCreateInput!, update: JointUpdateInput!): Joint!\n  upsertFriend(where: FriendWhereUniqueInput!, create: FriendCreateInput!, update: FriendUpdateInput!): Friend!\n  updateManyParents(data: ParentUpdateManyMutationInput!, where: ParentWhereInput): BatchPayload!\n  updateManyJoints(data: JointUpdateManyMutationInput!, where: JointWhereInput): BatchPayload!\n  updateManyFriends(data: FriendUpdateManyMutationInput!, where: FriendWhereInput): BatchPayload!\n  deleteManyParents(where: ParentWhereInput): BatchPayload!\n  deleteManyJoints(where: JointWhereInput): BatchPayload!\n  deleteManyFriends(where: FriendWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Parent implements Node {\n  id: ID!\n  p: String\n  children: [Child!]\n  j(where: JointWhereInput, orderBy: JointOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Joint!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype ParentConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [ParentEdge]!\n  aggregate: AggregateParent!\n}\n\ninput ParentCreateInput {\n  p: String\n  children: ChildCreateManyInput\n  j: JointCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype ParentEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Parent!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum ParentOrderByInput {\n  id_ASC\n  id_DESC\n  p_ASC\n  p_DESC\n}\n\ntype ParentPreviousValues {\n  id: ID!\n  p: String\n}\n\ntype ParentSubscriptionPayload {\n  mutation: MutationType!\n  node: Parent\n  updatedFields: [String!]\n  previousValues: ParentPreviousValues\n}\n\ninput ParentSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ParentSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ParentSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ParentSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ParentWhereInput\n}\n\ninput ParentUpdateInput {\n  p: String\n  children: ChildUpdateManyInput\n  j: JointUpdateManyInput\n}\n\ninput ParentUpdateManyMutationInput {\n  p: String\n}\n\ninput ParentWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ParentWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ParentWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ParentWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  p: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  p_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  p_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  p_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  p_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  p_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  p_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  p_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  p_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  p_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  p_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  p_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  p_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  p_not_ends_with: String\n  children_every: ChildWhereInput\n  children_some: ChildWhereInput\n  children_none: ChildWhereInput\n}\n\ninput ParentWhereUniqueInput {\n  id: ID\n  p: String\n}\n\ntype Query {\n  parents(where: ParentWhereInput, orderBy: ParentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Parent]!\n  joints(where: JointWhereInput, orderBy: JointOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Joint]!\n  friends(where: FriendWhereInput, orderBy: FriendOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Friend]!\n  parent(where: ParentWhereUniqueInput!): Parent\n  joint(where: JointWhereUniqueInput!): Joint\n  friend(where: FriendWhereUniqueInput!): Friend\n  parentsConnection(where: ParentWhereInput, orderBy: ParentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ParentConnection!\n  jointsConnection(where: JointWhereInput, orderBy: JointOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): JointConnection!\n  friendsConnection(where: FriendWhereInput, orderBy: FriendOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FriendConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  parent(where: ParentSubscriptionWhereInput): ParentSubscriptionPayload\n  child(where: ChildSubscriptionWhereInput): ChildSubscriptionPayload\n  joint(where: JointSubscriptionWhereInput): JointSubscriptionPayload\n  friend(where: FriendSubscriptionWhereInput): FriendSubscriptionPayload\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 26,
      "containsCycle": false,
      "polynomialLevel": 3,
      "numDefinitions": 68
    },
    {
      "name": "document.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/defaultValue/document.graphql",
      "sha": "86fabfe2dfd6d5e02e7f1b84f58ece2e659575ee",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/defaultValue/document.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/86fabfe2dfd6d5e02e7f1b84f58ece2e659575ee",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/defaultValue/document.graphql",
      "content": "type A {\n  c: String!\n  removeThisIdd: ID!\n  d: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AEdge]!\n  aggregate: AggregateA!\n}\n\ninput ACreateInput {\n  c: String!\n  d: String\n}\n\ninput ACreateManyInput {\n  create: [ACreateInput!]\n  connect: [AWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: A!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\ntype AggregateA {\n  count: Int!\n}\n\ntype AggregateAWithId {\n  count: Int!\n}\n\ntype AggregateB {\n  count: Int!\n}\n\nenum AOrderByInput {\n  c_ASC\n  c_DESC\n  removeThisIdd_ASC\n  removeThisIdd_DESC\n  d_ASC\n  d_DESC\n}\n\ntype APreviousValues {\n  c: String!\n  removeThisIdd: ID!\n  d: String\n}\n\ninput AScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AScalarWhereInput!]\n  c: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  c_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  c_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  c_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  c_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  c_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  c_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  c_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  c_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  c_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  c_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  c_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  c_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  c_not_ends_with: String\n  removeThisIdd: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisIdd_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisIdd_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisIdd_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisIdd_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisIdd_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisIdd_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisIdd_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisIdd_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisIdd_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisIdd_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisIdd_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisIdd_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisIdd_not_ends_with: ID\n  d: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  d_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  d_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  d_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  d_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  d_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  d_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  d_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  d_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  d_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  d_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  d_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  d_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  d_not_ends_with: String\n}\n\ntype ASubscriptionPayload {\n  mutation: MutationType!\n  node: A\n  updatedFields: [String!]\n  previousValues: APreviousValues\n}\n\ninput ASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWhereInput\n}\n\ninput AUpdateDataInput {\n  c: String\n  d: String\n}\n\ninput AUpdateInput {\n  c: String\n  d: String\n}\n\ninput AUpdateManyDataInput {\n  c: String\n  d: String\n}\n\ninput AUpdateManyInput {\n  create: [ACreateInput!]\n  connect: [AWhereUniqueInput!]\n  disconnect: [AWhereUniqueInput!]\n  delete: [AWhereUniqueInput!]\n  update: [AUpdateWithWhereUniqueNestedInput!]\n  updateMany: [AUpdateManyWithWhereNestedInput!]\n  deleteMany: [AScalarWhereInput!]\n  upsert: [AUpsertWithWhereUniqueNestedInput!]\n}\n\ninput AUpdateManyMutationInput {\n  c: String\n  d: String\n}\n\ninput AUpdateManyWithWhereNestedInput {\n  where: AScalarWhereInput!\n  data: AUpdateManyDataInput!\n}\n\ninput AUpdateWithWhereUniqueNestedInput {\n  where: AWhereUniqueInput!\n  data: AUpdateDataInput!\n}\n\ninput AUpsertWithWhereUniqueNestedInput {\n  where: AWhereUniqueInput!\n  update: AUpdateDataInput!\n  create: ACreateInput!\n}\n\ninput AWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWhereInput!]\n  c: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  c_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  c_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  c_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  c_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  c_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  c_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  c_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  c_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  c_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  c_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  c_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  c_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  c_not_ends_with: String\n  removeThisIdd: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisIdd_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisIdd_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisIdd_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisIdd_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisIdd_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisIdd_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisIdd_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisIdd_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisIdd_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisIdd_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisIdd_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisIdd_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisIdd_not_ends_with: ID\n  d: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  d_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  d_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  d_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  d_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  d_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  d_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  d_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  d_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  d_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  d_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  d_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  d_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  d_not_ends_with: String\n}\n\ninput AWhereUniqueInput {\n  c: String\n  removeThisIdd: ID\n}\n\ntype AWithId implements Node {\n  id: ID!\n  c: String!\n  d: String\n  b2: B!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithIdEdge]!\n  aggregate: AggregateAWithId!\n}\n\ninput AWithIdCreateInput {\n  c: String!\n  d: String\n  b2: BCreateOneWithoutA2Input!\n}\n\ninput AWithIdCreateOneWithoutB2Input {\n  create: AWithIdCreateWithoutB2Input\n  connect: AWithIdWhereUniqueInput\n}\n\ninput AWithIdCreateWithoutB2Input {\n  c: String!\n  d: String\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithIdOrderByInput {\n  id_ASC\n  id_DESC\n  c_ASC\n  c_DESC\n  d_ASC\n  d_DESC\n}\n\ntype AWithIdPreviousValues {\n  id: ID!\n  c: String!\n  d: String\n}\n\ntype AWithIdSubscriptionPayload {\n  mutation: MutationType!\n  node: AWithId\n  updatedFields: [String!]\n  previousValues: AWithIdPreviousValues\n}\n\ninput AWithIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithIdWhereInput\n}\n\ninput AWithIdUpdateInput {\n  c: String\n  d: String\n  b2: BUpdateOneRequiredWithoutA2Input\n}\n\ninput AWithIdUpdateManyMutationInput {\n  c: String\n  d: String\n}\n\ninput AWithIdUpdateOneWithoutB2Input {\n  create: AWithIdCreateWithoutB2Input\n  connect: AWithIdWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: AWithIdUpdateWithoutB2DataInput\n  upsert: AWithIdUpsertWithoutB2Input\n}\n\ninput AWithIdUpdateWithoutB2DataInput {\n  c: String\n  d: String\n}\n\ninput AWithIdUpsertWithoutB2Input {\n  update: AWithIdUpdateWithoutB2DataInput!\n  create: AWithIdCreateWithoutB2Input!\n}\n\ninput AWithIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  c: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  c_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  c_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  c_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  c_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  c_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  c_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  c_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  c_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  c_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  c_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  c_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  c_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  c_not_ends_with: String\n  d: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  d_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  d_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  d_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  d_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  d_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  d_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  d_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  d_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  d_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  d_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  d_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  d_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  d_not_ends_with: String\n}\n\ninput AWithIdWhereUniqueInput {\n  id: ID\n  c: String\n}\n\ntype B implements Node {\n  a(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A!]\n  id: ID!\n  a2: AWithId\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BEdge]!\n  aggregate: AggregateB!\n}\n\ninput BCreateInput {\n  a: ACreateManyInput\n  a2: AWithIdCreateOneWithoutB2Input\n}\n\ninput BCreateOneWithoutA2Input {\n  create: BCreateWithoutA2Input\n  connect: BWhereUniqueInput\n}\n\ninput BCreateWithoutA2Input {\n  a: ACreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: B!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype BPreviousValues {\n  id: ID!\n}\n\ntype BSubscriptionPayload {\n  mutation: MutationType!\n  node: B\n  updatedFields: [String!]\n  previousValues: BPreviousValues\n}\n\ninput BSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWhereInput\n}\n\ninput BUpdateInput {\n  a: AUpdateManyInput\n  a2: AWithIdUpdateOneWithoutB2Input\n}\n\ninput BUpdateOneRequiredWithoutA2Input {\n  create: BCreateWithoutA2Input\n  connect: BWhereUniqueInput\n  update: BUpdateWithoutA2DataInput\n  upsert: BUpsertWithoutA2Input\n}\n\ninput BUpdateWithoutA2DataInput {\n  a: AUpdateManyInput\n}\n\ninput BUpsertWithoutA2Input {\n  update: BUpdateWithoutA2DataInput!\n  create: BCreateWithoutA2Input!\n}\n\ninput BWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput BWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createAWithId(data: AWithIdCreateInput!): AWithId!\n  createB(data: BCreateInput!): B!\n  createA(data: ACreateInput!): A!\n  updateAWithId(data: AWithIdUpdateInput!, where: AWithIdWhereUniqueInput!): AWithId\n  updateB(data: BUpdateInput!, where: BWhereUniqueInput!): B\n  updateA(data: AUpdateInput!, where: AWhereUniqueInput!): A\n  deleteAWithId(where: AWithIdWhereUniqueInput!): AWithId\n  deleteB(where: BWhereUniqueInput!): B\n  deleteA(where: AWhereUniqueInput!): A\n  upsertAWithId(where: AWithIdWhereUniqueInput!, create: AWithIdCreateInput!, update: AWithIdUpdateInput!): AWithId!\n  upsertB(where: BWhereUniqueInput!, create: BCreateInput!, update: BUpdateInput!): B!\n  upsertA(where: AWhereUniqueInput!, create: ACreateInput!, update: AUpdateInput!): A!\n  updateManyAWithIds(data: AWithIdUpdateManyMutationInput!, where: AWithIdWhereInput): BatchPayload!\n  updateManyAs(data: AUpdateManyMutationInput!, where: AWhereInput): BatchPayload!\n  deleteManyAWithIds(where: AWithIdWhereInput): BatchPayload!\n  deleteManyBs(where: BWhereInput): BatchPayload!\n  deleteManyAs(where: AWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  aWithIds(where: AWithIdWhereInput, orderBy: AWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithId]!\n  bs(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B]!\n  as(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A]!\n  aWithId(where: AWithIdWhereUniqueInput!): AWithId\n  b(where: BWhereUniqueInput!): B\n  a(where: AWhereUniqueInput!): A\n  aWithIdsConnection(where: AWithIdWhereInput, orderBy: AWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithIdConnection!\n  bsConnection(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BConnection!\n  asConnection(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  aWithId(where: AWithIdSubscriptionWhereInput): AWithIdSubscriptionPayload\n  b(where: BSubscriptionWhereInput): BSubscriptionPayload\n  a(where: ASubscriptionWhereInput): ASubscriptionPayload\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 23,
      "containsCycle": false,
      "polynomialLevel": 2,
      "numDefinitions": 64
    },
    {
      "name": "relational.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/emptyTypes/relational.graphql",
      "sha": "b8f3b0a05433070c5b5180ded748a456640d0ba8",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/emptyTypes/relational.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/b8f3b0a05433070c5b5180ded748a456640d0ba8",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/emptyTypes/relational.graphql",
      "content": "type AggregateOnlyDate {\n  count: Int!\n}\n\ntype AggregateOnlyId {\n  count: Int!\n}\n\ntype AggregateOnlyIdAndARelation {\n  count: Int!\n}\n\ntype AggregateOnlyIdAndARelation2 {\n  count: Int!\n}\n\ntype AggregateOnlyRelation {\n  count: Int!\n}\n\ntype AggregateOnlyRelationA {\n  count: Int!\n}\n\ntype AggregateOnlyRelationB {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\nscalar DateTime\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createOnlyIdAndARelation(data: OnlyIdAndARelationCreateInput!): OnlyIdAndARelation!\n  createOnlyIdAndARelation2(data: OnlyIdAndARelation2CreateInput!): OnlyIdAndARelation2!\n  createOnlyRelation: OnlyRelation!\n  createOnlyRelationA(data: OnlyRelationACreateInput!): OnlyRelationA!\n  createOnlyDate: OnlyDate!\n  createOnlyRelationB(data: OnlyRelationBCreateInput!): OnlyRelationB!\n  createOnlyId: OnlyId!\n  updateOnlyIdAndARelation(data: OnlyIdAndARelationUpdateInput!, where: OnlyIdAndARelationWhereUniqueInput!): OnlyIdAndARelation\n  updateOnlyIdAndARelation2(data: OnlyIdAndARelation2UpdateInput!, where: OnlyIdAndARelation2WhereUniqueInput!): OnlyIdAndARelation2\n  deleteOnlyIdAndARelation(where: OnlyIdAndARelationWhereUniqueInput!): OnlyIdAndARelation\n  deleteOnlyIdAndARelation2(where: OnlyIdAndARelation2WhereUniqueInput!): OnlyIdAndARelation2\n  deleteOnlyId(where: OnlyIdWhereUniqueInput!): OnlyId\n  upsertOnlyIdAndARelation(where: OnlyIdAndARelationWhereUniqueInput!, create: OnlyIdAndARelationCreateInput!, update: OnlyIdAndARelationUpdateInput!): OnlyIdAndARelation!\n  upsertOnlyIdAndARelation2(where: OnlyIdAndARelation2WhereUniqueInput!, create: OnlyIdAndARelation2CreateInput!, update: OnlyIdAndARelation2UpdateInput!): OnlyIdAndARelation2!\n  deleteManyOnlyIdAndARelations(where: OnlyIdAndARelationWhereInput): BatchPayload!\n  deleteManyOnlyIdAndARelation2s(where: OnlyIdAndARelation2WhereInput): BatchPayload!\n  deleteManyOnlyRelations(where: OnlyRelationWhereInput): BatchPayload!\n  deleteManyOnlyRelationAs(where: OnlyRelationAWhereInput): BatchPayload!\n  deleteManyOnlyDates(where: OnlyDateWhereInput): BatchPayload!\n  deleteManyOnlyRelationBs(where: OnlyRelationBWhereInput): BatchPayload!\n  deleteManyOnlyIds(where: OnlyIdWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\ntype OnlyDate {\n  createdAt: DateTime!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OnlyDateConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OnlyDateEdge]!\n  aggregate: AggregateOnlyDate!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OnlyDateEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OnlyDate!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OnlyDateOrderByInput {\n  createdAt_ASC\n  createdAt_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype OnlyDatePreviousValues {\n  createdAt: DateTime!\n}\n\ntype OnlyDateSubscriptionPayload {\n  mutation: MutationType!\n  node: OnlyDate\n  updatedFields: [String!]\n  previousValues: OnlyDatePreviousValues\n}\n\ninput OnlyDateSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyDateSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyDateSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyDateSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OnlyDateWhereInput\n}\n\ninput OnlyDateWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyDateWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyDateWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyDateWhereInput!]\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n}\n\ntype OnlyId implements Node {\n  id: ID!\n}\n\ntype OnlyIdAndARelation implements Node {\n  id: ID!\n  ref: OnlyId!\n}\n\ntype OnlyIdAndARelation2 implements Node {\n  id: ID!\n  ref: OnlyId\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OnlyIdAndARelation2Connection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OnlyIdAndARelation2Edge]!\n  aggregate: AggregateOnlyIdAndARelation2!\n}\n\ninput OnlyIdAndARelation2CreateInput {\n  ref: OnlyIdCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OnlyIdAndARelation2Edge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OnlyIdAndARelation2!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OnlyIdAndARelation2OrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype OnlyIdAndARelation2PreviousValues {\n  id: ID!\n}\n\ntype OnlyIdAndARelation2SubscriptionPayload {\n  mutation: MutationType!\n  node: OnlyIdAndARelation2\n  updatedFields: [String!]\n  previousValues: OnlyIdAndARelation2PreviousValues\n}\n\ninput OnlyIdAndARelation2SubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyIdAndARelation2SubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyIdAndARelation2SubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyIdAndARelation2SubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OnlyIdAndARelation2WhereInput\n}\n\ninput OnlyIdAndARelation2UpdateInput {\n  ref: OnlyIdUpdateOneInput\n}\n\ninput OnlyIdAndARelation2WhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyIdAndARelation2WhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyIdAndARelation2WhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyIdAndARelation2WhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  ref: OnlyIdWhereInput\n}\n\ninput OnlyIdAndARelation2WhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OnlyIdAndARelationConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OnlyIdAndARelationEdge]!\n  aggregate: AggregateOnlyIdAndARelation!\n}\n\ninput OnlyIdAndARelationCreateInput {\n  ref: OnlyIdCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OnlyIdAndARelationEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OnlyIdAndARelation!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OnlyIdAndARelationOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype OnlyIdAndARelationPreviousValues {\n  id: ID!\n}\n\ntype OnlyIdAndARelationSubscriptionPayload {\n  mutation: MutationType!\n  node: OnlyIdAndARelation\n  updatedFields: [String!]\n  previousValues: OnlyIdAndARelationPreviousValues\n}\n\ninput OnlyIdAndARelationSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyIdAndARelationSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyIdAndARelationSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyIdAndARelationSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OnlyIdAndARelationWhereInput\n}\n\ninput OnlyIdAndARelationUpdateInput {\n  ref: OnlyIdUpdateOneRequiredInput\n}\n\ninput OnlyIdAndARelationWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyIdAndARelationWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyIdAndARelationWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyIdAndARelationWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  ref: OnlyIdWhereInput\n}\n\ninput OnlyIdAndARelationWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OnlyIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OnlyIdEdge]!\n  aggregate: AggregateOnlyId!\n}\n\ninput OnlyIdCreateOneInput {\n  connect: OnlyIdWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OnlyIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OnlyId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OnlyIdOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype OnlyIdPreviousValues {\n  id: ID!\n}\n\ntype OnlyIdSubscriptionPayload {\n  mutation: MutationType!\n  node: OnlyId\n  updatedFields: [String!]\n  previousValues: OnlyIdPreviousValues\n}\n\ninput OnlyIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OnlyIdWhereInput\n}\n\ninput OnlyIdUpdateOneInput {\n  connect: OnlyIdWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n}\n\ninput OnlyIdUpdateOneRequiredInput {\n  connect: OnlyIdWhereUniqueInput\n}\n\ninput OnlyIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput OnlyIdWhereUniqueInput {\n  id: ID\n}\n\ntype OnlyRelation {\n  ref(where: OnlyDateWhereInput, orderBy: OnlyDateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OnlyDate!]\n}\n\ntype OnlyRelationA {\n  ref: OnlyRelationA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OnlyRelationAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OnlyRelationAEdge]!\n  aggregate: AggregateOnlyRelationA!\n}\n\ninput OnlyRelationACreateInput {\n  ref: OnlyRelationACreateOneInput!\n}\n\ninput OnlyRelationACreateOneInput {\n  create: OnlyRelationACreateInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OnlyRelationAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OnlyRelationA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OnlyRelationAOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype OnlyRelationASubscriptionPayload {\n  mutation: MutationType!\n  node: OnlyRelationA\n  updatedFields: [String!]\n}\n\ninput OnlyRelationASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyRelationASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyRelationASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyRelationASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OnlyRelationAWhereInput\n}\n\ninput OnlyRelationAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyRelationAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyRelationAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyRelationAWhereInput!]\n  ref: OnlyRelationAWhereInput\n}\n\ntype OnlyRelationB {\n  ref: OnlyRelationB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OnlyRelationBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OnlyRelationBEdge]!\n  aggregate: AggregateOnlyRelationB!\n}\n\ninput OnlyRelationBCreateInput {\n  ref: OnlyRelationBCreateOneInput\n}\n\ninput OnlyRelationBCreateOneInput {\n  create: OnlyRelationBCreateInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OnlyRelationBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OnlyRelationB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OnlyRelationBOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype OnlyRelationBSubscriptionPayload {\n  mutation: MutationType!\n  node: OnlyRelationB\n  updatedFields: [String!]\n}\n\ninput OnlyRelationBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyRelationBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyRelationBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyRelationBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OnlyRelationBWhereInput\n}\n\ninput OnlyRelationBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyRelationBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyRelationBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyRelationBWhereInput!]\n  ref: OnlyRelationBWhereInput\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OnlyRelationConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OnlyRelationEdge]!\n  aggregate: AggregateOnlyRelation!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OnlyRelationEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OnlyRelation!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OnlyRelationOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype OnlyRelationSubscriptionPayload {\n  mutation: MutationType!\n  node: OnlyRelation\n  updatedFields: [String!]\n}\n\ninput OnlyRelationSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyRelationSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyRelationSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyRelationSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OnlyRelationWhereInput\n}\n\ninput OnlyRelationWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyRelationWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyRelationWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyRelationWhereInput!]\n  ref_every: OnlyDateWhereInput\n  ref_some: OnlyDateWhereInput\n  ref_none: OnlyDateWhereInput\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  onlyIdAndARelations(where: OnlyIdAndARelationWhereInput, orderBy: OnlyIdAndARelationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OnlyIdAndARelation]!\n  onlyIdAndARelation2s(where: OnlyIdAndARelation2WhereInput, orderBy: OnlyIdAndARelation2OrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OnlyIdAndARelation2]!\n  onlyRelations(where: OnlyRelationWhereInput, orderBy: OnlyRelationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OnlyRelation]!\n  onlyRelationAs(where: OnlyRelationAWhereInput, orderBy: OnlyRelationAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OnlyRelationA]!\n  onlyDates(where: OnlyDateWhereInput, orderBy: OnlyDateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OnlyDate]!\n  onlyRelationBs(where: OnlyRelationBWhereInput, orderBy: OnlyRelationBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OnlyRelationB]!\n  onlyIds(where: OnlyIdWhereInput, orderBy: OnlyIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OnlyId]!\n  onlyIdAndARelation(where: OnlyIdAndARelationWhereUniqueInput!): OnlyIdAndARelation\n  onlyIdAndARelation2(where: OnlyIdAndARelation2WhereUniqueInput!): OnlyIdAndARelation2\n  onlyId(where: OnlyIdWhereUniqueInput!): OnlyId\n  onlyIdAndARelationsConnection(where: OnlyIdAndARelationWhereInput, orderBy: OnlyIdAndARelationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OnlyIdAndARelationConnection!\n  onlyIdAndARelation2sConnection(where: OnlyIdAndARelation2WhereInput, orderBy: OnlyIdAndARelation2OrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OnlyIdAndARelation2Connection!\n  onlyRelationsConnection(where: OnlyRelationWhereInput, orderBy: OnlyRelationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OnlyRelationConnection!\n  onlyRelationAsConnection(where: OnlyRelationAWhereInput, orderBy: OnlyRelationAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OnlyRelationAConnection!\n  onlyDatesConnection(where: OnlyDateWhereInput, orderBy: OnlyDateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OnlyDateConnection!\n  onlyRelationBsConnection(where: OnlyRelationBWhereInput, orderBy: OnlyRelationBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OnlyRelationBConnection!\n  onlyIdsConnection(where: OnlyIdWhereInput, orderBy: OnlyIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OnlyIdConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  onlyIdAndARelation(where: OnlyIdAndARelationSubscriptionWhereInput): OnlyIdAndARelationSubscriptionPayload\n  onlyIdAndARelation2(where: OnlyIdAndARelation2SubscriptionWhereInput): OnlyIdAndARelation2SubscriptionPayload\n  onlyRelation(where: OnlyRelationSubscriptionWhereInput): OnlyRelationSubscriptionPayload\n  onlyRelationA(where: OnlyRelationASubscriptionWhereInput): OnlyRelationASubscriptionPayload\n  onlyDate(where: OnlyDateSubscriptionWhereInput): OnlyDateSubscriptionPayload\n  onlyRelationB(where: OnlyRelationBSubscriptionWhereInput): OnlyRelationBSubscriptionPayload\n  onlyId(where: OnlyIdSubscriptionWhereInput): OnlyIdSubscriptionPayload\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 84
    },
    {
      "name": "relational.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/embedded/relational.graphql",
      "sha": "6142914df35af01d4f8038b5fa78d793cacceb6a",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/embedded/relational.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/6142914df35af01d4f8038b5fa78d793cacceb6a",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/embedded/relational.graphql",
      "content": "type AggregateChild {\n  count: Int!\n}\n\ntype AggregateFriend {\n  count: Int!\n}\n\ntype AggregateJoint {\n  count: Int!\n}\n\ntype AggregateParent {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\ntype Child {\n  c: String\n  friendsOpt(where: FriendWhereInput, orderBy: FriendOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Friend!]\n  jointOpt: Joint!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype ChildConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [ChildEdge]!\n  aggregate: AggregateChild!\n}\n\ninput ChildCreateInput {\n  c: String\n  friendsOpt: FriendCreateManyInput\n  jointOpt: JointCreateOneInput!\n}\n\ninput ChildCreateManyInput {\n  create: [ChildCreateInput!]\n  connect: [ChildWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype ChildEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Child!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum ChildOrderByInput {\n  c_ASC\n  c_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ChildPreviousValues {\n  c: String\n}\n\ninput ChildScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ChildScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ChildScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ChildScalarWhereInput!]\n  c: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  c_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  c_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  c_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  c_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  c_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  c_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  c_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  c_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  c_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  c_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  c_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  c_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  c_not_ends_with: String\n}\n\ntype ChildSubscriptionPayload {\n  mutation: MutationType!\n  node: Child\n  updatedFields: [String!]\n  previousValues: ChildPreviousValues\n}\n\ninput ChildSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ChildSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ChildSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ChildSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ChildWhereInput\n}\n\ninput ChildUpdateDataInput {\n  c: String\n  friendsOpt: FriendUpdateManyInput\n  jointOpt: JointUpdateOneRequiredInput\n}\n\ninput ChildUpdateInput {\n  c: String\n  friendsOpt: FriendUpdateManyInput\n  jointOpt: JointUpdateOneRequiredInput\n}\n\ninput ChildUpdateManyDataInput {\n  c: String\n}\n\ninput ChildUpdateManyInput {\n  create: [ChildCreateInput!]\n  connect: [ChildWhereUniqueInput!]\n  disconnect: [ChildWhereUniqueInput!]\n  delete: [ChildWhereUniqueInput!]\n  update: [ChildUpdateWithWhereUniqueNestedInput!]\n  updateMany: [ChildUpdateManyWithWhereNestedInput!]\n  deleteMany: [ChildScalarWhereInput!]\n  upsert: [ChildUpsertWithWhereUniqueNestedInput!]\n}\n\ninput ChildUpdateManyMutationInput {\n  c: String\n}\n\ninput ChildUpdateManyWithWhereNestedInput {\n  where: ChildScalarWhereInput!\n  data: ChildUpdateManyDataInput!\n}\n\ninput ChildUpdateWithWhereUniqueNestedInput {\n  where: ChildWhereUniqueInput!\n  data: ChildUpdateDataInput!\n}\n\ninput ChildUpsertWithWhereUniqueNestedInput {\n  where: ChildWhereUniqueInput!\n  update: ChildUpdateDataInput!\n  create: ChildCreateInput!\n}\n\ninput ChildWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ChildWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ChildWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ChildWhereInput!]\n  c: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  c_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  c_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  c_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  c_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  c_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  c_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  c_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  c_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  c_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  c_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  c_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  c_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  c_not_ends_with: String\n  friendsOpt_every: FriendWhereInput\n  friendsOpt_some: FriendWhereInput\n  friendsOpt_none: FriendWhereInput\n  jointOpt: JointWhereInput\n}\n\ninput ChildWhereUniqueInput {\n  c: String\n}\n\ntype Friend {\n  f: String\n  test: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype FriendConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [FriendEdge]!\n  aggregate: AggregateFriend!\n}\n\ninput FriendCreateInput {\n  f: String\n  test: String\n}\n\ninput FriendCreateManyInput {\n  create: [FriendCreateInput!]\n  connect: [FriendWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype FriendEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Friend!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum FriendOrderByInput {\n  f_ASC\n  f_DESC\n  test_ASC\n  test_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype FriendPreviousValues {\n  f: String\n  test: String\n}\n\ninput FriendScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FriendScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FriendScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FriendScalarWhereInput!]\n  f: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  f_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  f_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  f_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  f_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  f_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  f_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  f_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  f_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  f_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  f_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  f_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  f_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  f_not_ends_with: String\n  test: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  test_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  test_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  test_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  test_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  test_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  test_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  test_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  test_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  test_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  test_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  test_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  test_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  test_not_ends_with: String\n}\n\ntype FriendSubscriptionPayload {\n  mutation: MutationType!\n  node: Friend\n  updatedFields: [String!]\n  previousValues: FriendPreviousValues\n}\n\ninput FriendSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FriendSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FriendSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FriendSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FriendWhereInput\n}\n\ninput FriendUpdateDataInput {\n  f: String\n  test: String\n}\n\ninput FriendUpdateInput {\n  f: String\n  test: String\n}\n\ninput FriendUpdateManyDataInput {\n  f: String\n  test: String\n}\n\ninput FriendUpdateManyInput {\n  create: [FriendCreateInput!]\n  connect: [FriendWhereUniqueInput!]\n  disconnect: [FriendWhereUniqueInput!]\n  delete: [FriendWhereUniqueInput!]\n  update: [FriendUpdateWithWhereUniqueNestedInput!]\n  updateMany: [FriendUpdateManyWithWhereNestedInput!]\n  deleteMany: [FriendScalarWhereInput!]\n  upsert: [FriendUpsertWithWhereUniqueNestedInput!]\n}\n\ninput FriendUpdateManyMutationInput {\n  f: String\n  test: String\n}\n\ninput FriendUpdateManyWithWhereNestedInput {\n  where: FriendScalarWhereInput!\n  data: FriendUpdateManyDataInput!\n}\n\ninput FriendUpdateWithWhereUniqueNestedInput {\n  where: FriendWhereUniqueInput!\n  data: FriendUpdateDataInput!\n}\n\ninput FriendUpsertWithWhereUniqueNestedInput {\n  where: FriendWhereUniqueInput!\n  update: FriendUpdateDataInput!\n  create: FriendCreateInput!\n}\n\ninput FriendWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FriendWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FriendWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FriendWhereInput!]\n  f: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  f_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  f_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  f_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  f_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  f_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  f_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  f_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  f_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  f_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  f_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  f_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  f_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  f_not_ends_with: String\n  test: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  test_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  test_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  test_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  test_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  test_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  test_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  test_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  test_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  test_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  test_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  test_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  test_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  test_not_ends_with: String\n}\n\ninput FriendWhereUniqueInput {\n  f: String\n}\n\ntype Joint implements Node {\n  id: ID!\n  j: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype JointConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [JointEdge]!\n  aggregate: AggregateJoint!\n}\n\ninput JointCreateInput {\n  j: String\n}\n\ninput JointCreateManyInput {\n  create: [JointCreateInput!]\n  connect: [JointWhereUniqueInput!]\n}\n\ninput JointCreateOneInput {\n  create: JointCreateInput\n  connect: JointWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype JointEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Joint!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum JointOrderByInput {\n  id_ASC\n  id_DESC\n  j_ASC\n  j_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype JointPreviousValues {\n  id: ID!\n  j: String\n}\n\ninput JointScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [JointScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [JointScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [JointScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  j: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  j_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  j_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  j_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  j_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  j_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  j_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  j_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  j_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  j_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  j_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  j_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  j_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  j_not_ends_with: String\n}\n\ntype JointSubscriptionPayload {\n  mutation: MutationType!\n  node: Joint\n  updatedFields: [String!]\n  previousValues: JointPreviousValues\n}\n\ninput JointSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [JointSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [JointSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [JointSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: JointWhereInput\n}\n\ninput JointUpdateDataInput {\n  j: String\n}\n\ninput JointUpdateInput {\n  j: String\n}\n\ninput JointUpdateManyDataInput {\n  j: String\n}\n\ninput JointUpdateManyInput {\n  create: [JointCreateInput!]\n  connect: [JointWhereUniqueInput!]\n  disconnect: [JointWhereUniqueInput!]\n  delete: [JointWhereUniqueInput!]\n  update: [JointUpdateWithWhereUniqueNestedInput!]\n  updateMany: [JointUpdateManyWithWhereNestedInput!]\n  deleteMany: [JointScalarWhereInput!]\n  upsert: [JointUpsertWithWhereUniqueNestedInput!]\n}\n\ninput JointUpdateManyMutationInput {\n  j: String\n}\n\ninput JointUpdateManyWithWhereNestedInput {\n  where: JointScalarWhereInput!\n  data: JointUpdateManyDataInput!\n}\n\ninput JointUpdateOneRequiredInput {\n  create: JointCreateInput\n  connect: JointWhereUniqueInput\n  update: JointUpdateDataInput\n  upsert: JointUpsertNestedInput\n}\n\ninput JointUpdateWithWhereUniqueNestedInput {\n  where: JointWhereUniqueInput!\n  data: JointUpdateDataInput!\n}\n\ninput JointUpsertNestedInput {\n  update: JointUpdateDataInput!\n  create: JointCreateInput!\n}\n\ninput JointUpsertWithWhereUniqueNestedInput {\n  where: JointWhereUniqueInput!\n  update: JointUpdateDataInput!\n  create: JointCreateInput!\n}\n\ninput JointWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [JointWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [JointWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [JointWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  j: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  j_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  j_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  j_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  j_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  j_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  j_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  j_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  j_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  j_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  j_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  j_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  j_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  j_not_ends_with: String\n}\n\ninput JointWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createParent(data: ParentCreateInput!): Parent!\n  createChild(data: ChildCreateInput!): Child!\n  createJoint(data: JointCreateInput!): Joint!\n  createFriend(data: FriendCreateInput!): Friend!\n  updateParent(data: ParentUpdateInput!, where: ParentWhereUniqueInput!): Parent\n  updateChild(data: ChildUpdateInput!, where: ChildWhereUniqueInput!): Child\n  updateJoint(data: JointUpdateInput!, where: JointWhereUniqueInput!): Joint\n  updateFriend(data: FriendUpdateInput!, where: FriendWhereUniqueInput!): Friend\n  deleteParent(where: ParentWhereUniqueInput!): Parent\n  deleteChild(where: ChildWhereUniqueInput!): Child\n  deleteJoint(where: JointWhereUniqueInput!): Joint\n  deleteFriend(where: FriendWhereUniqueInput!): Friend\n  upsertParent(where: ParentWhereUniqueInput!, create: ParentCreateInput!, update: ParentUpdateInput!): Parent!\n  upsertChild(where: ChildWhereUniqueInput!, create: ChildCreateInput!, update: ChildUpdateInput!): Child!\n  upsertJoint(where: JointWhereUniqueInput!, create: JointCreateInput!, update: JointUpdateInput!): Joint!\n  upsertFriend(where: FriendWhereUniqueInput!, create: FriendCreateInput!, update: FriendUpdateInput!): Friend!\n  updateManyParents(data: ParentUpdateManyMutationInput!, where: ParentWhereInput): BatchPayload!\n  updateManyChildren(data: ChildUpdateManyMutationInput!, where: ChildWhereInput): BatchPayload!\n  updateManyJoints(data: JointUpdateManyMutationInput!, where: JointWhereInput): BatchPayload!\n  updateManyFriends(data: FriendUpdateManyMutationInput!, where: FriendWhereInput): BatchPayload!\n  deleteManyParents(where: ParentWhereInput): BatchPayload!\n  deleteManyChildren(where: ChildWhereInput): BatchPayload!\n  deleteManyJoints(where: JointWhereInput): BatchPayload!\n  deleteManyFriends(where: FriendWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Parent implements Node {\n  id: ID!\n  p: String\n  children(where: ChildWhereInput, orderBy: ChildOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Child!]\n  j(where: JointWhereInput, orderBy: JointOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Joint!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype ParentConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [ParentEdge]!\n  aggregate: AggregateParent!\n}\n\ninput ParentCreateInput {\n  p: String\n  children: ChildCreateManyInput\n  j: JointCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype ParentEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Parent!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum ParentOrderByInput {\n  id_ASC\n  id_DESC\n  p_ASC\n  p_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ParentPreviousValues {\n  id: ID!\n  p: String\n}\n\ntype ParentSubscriptionPayload {\n  mutation: MutationType!\n  node: Parent\n  updatedFields: [String!]\n  previousValues: ParentPreviousValues\n}\n\ninput ParentSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ParentSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ParentSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ParentSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ParentWhereInput\n}\n\ninput ParentUpdateInput {\n  p: String\n  children: ChildUpdateManyInput\n  j: JointUpdateManyInput\n}\n\ninput ParentUpdateManyMutationInput {\n  p: String\n}\n\ninput ParentWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ParentWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ParentWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ParentWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  p: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  p_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  p_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  p_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  p_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  p_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  p_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  p_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  p_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  p_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  p_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  p_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  p_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  p_not_ends_with: String\n  children_every: ChildWhereInput\n  children_some: ChildWhereInput\n  children_none: ChildWhereInput\n  j_every: JointWhereInput\n  j_some: JointWhereInput\n  j_none: JointWhereInput\n}\n\ninput ParentWhereUniqueInput {\n  id: ID\n  p: String\n}\n\ntype Query {\n  parents(where: ParentWhereInput, orderBy: ParentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Parent]!\n  children(where: ChildWhereInput, orderBy: ChildOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Child]!\n  joints(where: JointWhereInput, orderBy: JointOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Joint]!\n  friends(where: FriendWhereInput, orderBy: FriendOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Friend]!\n  parent(where: ParentWhereUniqueInput!): Parent\n  child(where: ChildWhereUniqueInput!): Child\n  joint(where: JointWhereUniqueInput!): Joint\n  friend(where: FriendWhereUniqueInput!): Friend\n  parentsConnection(where: ParentWhereInput, orderBy: ParentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ParentConnection!\n  childrenConnection(where: ChildWhereInput, orderBy: ChildOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChildConnection!\n  jointsConnection(where: JointWhereInput, orderBy: JointOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): JointConnection!\n  friendsConnection(where: FriendWhereInput, orderBy: FriendOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FriendConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  parent(where: ParentSubscriptionWhereInput): ParentSubscriptionPayload\n  child(where: ChildSubscriptionWhereInput): ChildSubscriptionPayload\n  joint(where: JointSubscriptionWhereInput): JointSubscriptionPayload\n  friend(where: FriendSubscriptionWhereInput): FriendSubscriptionPayload\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 88
    },
    {
      "name": "relational.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/oneSidedConnection/relational.graphql",
      "sha": "fee5cefcbf0e9f3e17e22f32dc1e9a680955a9d9",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/oneSidedConnection/relational.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/fee5cefcbf0e9f3e17e22f32dc1e9a680955a9d9",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/oneSidedConnection/relational.graphql",
      "content": "type A {\n  x: TypeWithId!\n  y: TypeWithoutId!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AEdge]!\n  aggregate: AggregateA!\n}\n\ninput ACreateInput {\n  x: TypeWithIdCreateOneInput!\n  y: TypeWithoutIdCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: A!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\ntype AggregateA {\n  count: Int!\n}\n\ntype AggregateB {\n  count: Int!\n}\n\ntype AggregateC {\n  count: Int!\n}\n\ntype AggregateD {\n  count: Int!\n}\n\ntype AggregateE {\n  count: Int!\n}\n\ntype AggregateF {\n  count: Int!\n}\n\ntype AggregateTypeWithId {\n  count: Int!\n}\n\ntype AggregateTypeWithoutId {\n  count: Int!\n}\n\nenum AOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ASubscriptionPayload {\n  mutation: MutationType!\n  node: A\n  updatedFields: [String!]\n}\n\ninput ASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWhereInput\n}\n\ninput AWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWhereInput!]\n  x: TypeWithIdWhereInput\n  y: TypeWithoutIdWhereInput\n}\n\ntype B {\n  x: TypeWithId\n  y: TypeWithoutId\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BEdge]!\n  aggregate: AggregateB!\n}\n\ninput BCreateInput {\n  x: TypeWithIdCreateOneInput\n  y: TypeWithoutIdCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: B!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BSubscriptionPayload {\n  mutation: MutationType!\n  node: B\n  updatedFields: [String!]\n}\n\ninput BSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWhereInput\n}\n\ninput BWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWhereInput!]\n  x: TypeWithIdWhereInput\n  y: TypeWithoutIdWhereInput\n}\n\ntype C {\n  x(where: TypeWithIdWhereInput, orderBy: TypeWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TypeWithId!]\n  y(where: TypeWithoutIdWhereInput, orderBy: TypeWithoutIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TypeWithoutId!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CEdge]!\n  aggregate: AggregateC!\n}\n\ninput CCreateInput {\n  x: TypeWithIdCreateManyInput\n  y: TypeWithoutIdCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: C!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum COrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CSubscriptionPayload {\n  mutation: MutationType!\n  node: C\n  updatedFields: [String!]\n}\n\ninput CSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWhereInput\n}\n\ninput CWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWhereInput!]\n  x_every: TypeWithIdWhereInput\n  x_some: TypeWithIdWhereInput\n  x_none: TypeWithIdWhereInput\n  y_every: TypeWithoutIdWhereInput\n  y_some: TypeWithoutIdWhereInput\n  y_none: TypeWithoutIdWhereInput\n}\n\ntype D implements Node {\n  id: ID!\n  x: TypeWithId!\n  y: TypeWithoutId!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype DConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [DEdge]!\n  aggregate: AggregateD!\n}\n\ninput DCreateInput {\n  x: TypeWithIdCreateOneInput!\n  y: TypeWithoutIdCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype DEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: D!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum DOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype DPreviousValues {\n  id: ID!\n}\n\ntype DSubscriptionPayload {\n  mutation: MutationType!\n  node: D\n  updatedFields: [String!]\n  previousValues: DPreviousValues\n}\n\ninput DSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [DSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [DSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [DSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: DWhereInput\n}\n\ninput DUpdateInput {\n  x: TypeWithIdUpdateOneRequiredInput\n  y: TypeWithoutIdUpdateOneRequiredInput\n}\n\ninput DWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [DWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [DWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [DWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  x: TypeWithIdWhereInput\n  y: TypeWithoutIdWhereInput\n}\n\ninput DWhereUniqueInput {\n  id: ID\n}\n\ntype E implements Node {\n  id: ID!\n  x: TypeWithId\n  y: TypeWithoutId\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype EConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [EEdge]!\n  aggregate: AggregateE!\n}\n\ninput ECreateInput {\n  x: TypeWithIdCreateOneInput\n  y: TypeWithoutIdCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype EEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: E!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum EOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype EPreviousValues {\n  id: ID!\n}\n\ntype ESubscriptionPayload {\n  mutation: MutationType!\n  node: E\n  updatedFields: [String!]\n  previousValues: EPreviousValues\n}\n\ninput ESubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ESubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ESubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ESubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: EWhereInput\n}\n\ninput EUpdateInput {\n  x: TypeWithIdUpdateOneInput\n  y: TypeWithoutIdUpdateOneInput\n}\n\ninput EWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [EWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [EWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [EWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  x: TypeWithIdWhereInput\n  y: TypeWithoutIdWhereInput\n}\n\ninput EWhereUniqueInput {\n  id: ID\n}\n\ntype F implements Node {\n  id: ID!\n  x(where: TypeWithIdWhereInput, orderBy: TypeWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TypeWithId!]\n  y(where: TypeWithoutIdWhereInput, orderBy: TypeWithoutIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TypeWithoutId!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype FConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [FEdge]!\n  aggregate: AggregateF!\n}\n\ninput FCreateInput {\n  x: TypeWithIdCreateManyInput\n  y: TypeWithoutIdCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype FEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: F!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum FOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype FPreviousValues {\n  id: ID!\n}\n\ntype FSubscriptionPayload {\n  mutation: MutationType!\n  node: F\n  updatedFields: [String!]\n  previousValues: FPreviousValues\n}\n\ninput FSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FWhereInput\n}\n\ninput FUpdateInput {\n  x: TypeWithIdUpdateManyInput\n  y: TypeWithoutIdUpdateManyInput\n}\n\ninput FWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  x_every: TypeWithIdWhereInput\n  x_some: TypeWithIdWhereInput\n  x_none: TypeWithIdWhereInput\n  y_every: TypeWithoutIdWhereInput\n  y_some: TypeWithoutIdWhereInput\n  y_none: TypeWithoutIdWhereInput\n}\n\ninput FWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createA(data: ACreateInput!): A!\n  createB(data: BCreateInput!): B!\n  createC(data: CCreateInput!): C!\n  createD(data: DCreateInput!): D!\n  createE(data: ECreateInput!): E!\n  createF(data: FCreateInput!): F!\n  createTypeWithoutId(data: TypeWithoutIdCreateInput!): TypeWithoutId!\n  createTypeWithId(data: TypeWithIdCreateInput!): TypeWithId!\n  updateD(data: DUpdateInput!, where: DWhereUniqueInput!): D\n  updateE(data: EUpdateInput!, where: EWhereUniqueInput!): E\n  updateF(data: FUpdateInput!, where: FWhereUniqueInput!): F\n  updateTypeWithId(data: TypeWithIdUpdateInput!, where: TypeWithIdWhereUniqueInput!): TypeWithId\n  deleteD(where: DWhereUniqueInput!): D\n  deleteE(where: EWhereUniqueInput!): E\n  deleteF(where: FWhereUniqueInput!): F\n  deleteTypeWithId(where: TypeWithIdWhereUniqueInput!): TypeWithId\n  upsertD(where: DWhereUniqueInput!, create: DCreateInput!, update: DUpdateInput!): D!\n  upsertE(where: EWhereUniqueInput!, create: ECreateInput!, update: EUpdateInput!): E!\n  upsertF(where: FWhereUniqueInput!, create: FCreateInput!, update: FUpdateInput!): F!\n  upsertTypeWithId(where: TypeWithIdWhereUniqueInput!, create: TypeWithIdCreateInput!, update: TypeWithIdUpdateInput!): TypeWithId!\n  updateManyTypeWithoutIds(data: TypeWithoutIdUpdateManyMutationInput!, where: TypeWithoutIdWhereInput): BatchPayload!\n  updateManyTypeWithIds(data: TypeWithIdUpdateManyMutationInput!, where: TypeWithIdWhereInput): BatchPayload!\n  deleteManyAs(where: AWhereInput): BatchPayload!\n  deleteManyBs(where: BWhereInput): BatchPayload!\n  deleteManyCs(where: CWhereInput): BatchPayload!\n  deleteManyDs(where: DWhereInput): BatchPayload!\n  deleteManyEs(where: EWhereInput): BatchPayload!\n  deleteManyFs(where: FWhereInput): BatchPayload!\n  deleteManyTypeWithoutIds(where: TypeWithoutIdWhereInput): BatchPayload!\n  deleteManyTypeWithIds(where: TypeWithIdWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  as(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A]!\n  bs(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B]!\n  cs(where: CWhereInput, orderBy: COrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [C]!\n  ds(where: DWhereInput, orderBy: DOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [D]!\n  es(where: EWhereInput, orderBy: EOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [E]!\n  fs(where: FWhereInput, orderBy: FOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [F]!\n  typeWithoutIds(where: TypeWithoutIdWhereInput, orderBy: TypeWithoutIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TypeWithoutId]!\n  typeWithIds(where: TypeWithIdWhereInput, orderBy: TypeWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TypeWithId]!\n  d(where: DWhereUniqueInput!): D\n  e(where: EWhereUniqueInput!): E\n  f(where: FWhereUniqueInput!): F\n  typeWithId(where: TypeWithIdWhereUniqueInput!): TypeWithId\n  asConnection(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AConnection!\n  bsConnection(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BConnection!\n  csConnection(where: CWhereInput, orderBy: COrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CConnection!\n  dsConnection(where: DWhereInput, orderBy: DOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DConnection!\n  esConnection(where: EWhereInput, orderBy: EOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EConnection!\n  fsConnection(where: FWhereInput, orderBy: FOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FConnection!\n  typeWithoutIdsConnection(where: TypeWithoutIdWhereInput, orderBy: TypeWithoutIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TypeWithoutIdConnection!\n  typeWithIdsConnection(where: TypeWithIdWhereInput, orderBy: TypeWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TypeWithIdConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  a(where: ASubscriptionWhereInput): ASubscriptionPayload\n  b(where: BSubscriptionWhereInput): BSubscriptionPayload\n  c(where: CSubscriptionWhereInput): CSubscriptionPayload\n  d(where: DSubscriptionWhereInput): DSubscriptionPayload\n  e(where: ESubscriptionWhereInput): ESubscriptionPayload\n  f(where: FSubscriptionWhereInput): FSubscriptionPayload\n  typeWithoutId(where: TypeWithoutIdSubscriptionWhereInput): TypeWithoutIdSubscriptionPayload\n  typeWithId(where: TypeWithIdSubscriptionWhereInput): TypeWithIdSubscriptionPayload\n}\n\ntype TypeWithId implements Node {\n  id: ID!\n  field: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype TypeWithIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [TypeWithIdEdge]!\n  aggregate: AggregateTypeWithId!\n}\n\ninput TypeWithIdCreateInput {\n  field: String!\n}\n\ninput TypeWithIdCreateManyInput {\n  create: [TypeWithIdCreateInput!]\n  connect: [TypeWithIdWhereUniqueInput!]\n}\n\ninput TypeWithIdCreateOneInput {\n  create: TypeWithIdCreateInput\n  connect: TypeWithIdWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype TypeWithIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: TypeWithId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum TypeWithIdOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TypeWithIdPreviousValues {\n  id: ID!\n  field: String!\n}\n\ninput TypeWithIdScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithIdScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithIdScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithIdScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ntype TypeWithIdSubscriptionPayload {\n  mutation: MutationType!\n  node: TypeWithId\n  updatedFields: [String!]\n  previousValues: TypeWithIdPreviousValues\n}\n\ninput TypeWithIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TypeWithIdWhereInput\n}\n\ninput TypeWithIdUpdateDataInput {\n  field: String\n}\n\ninput TypeWithIdUpdateInput {\n  field: String\n}\n\ninput TypeWithIdUpdateManyDataInput {\n  field: String\n}\n\ninput TypeWithIdUpdateManyInput {\n  create: [TypeWithIdCreateInput!]\n  connect: [TypeWithIdWhereUniqueInput!]\n  disconnect: [TypeWithIdWhereUniqueInput!]\n  delete: [TypeWithIdWhereUniqueInput!]\n  update: [TypeWithIdUpdateWithWhereUniqueNestedInput!]\n  updateMany: [TypeWithIdUpdateManyWithWhereNestedInput!]\n  deleteMany: [TypeWithIdScalarWhereInput!]\n  upsert: [TypeWithIdUpsertWithWhereUniqueNestedInput!]\n}\n\ninput TypeWithIdUpdateManyMutationInput {\n  field: String\n}\n\ninput TypeWithIdUpdateManyWithWhereNestedInput {\n  where: TypeWithIdScalarWhereInput!\n  data: TypeWithIdUpdateManyDataInput!\n}\n\ninput TypeWithIdUpdateOneInput {\n  create: TypeWithIdCreateInput\n  connect: TypeWithIdWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: TypeWithIdUpdateDataInput\n  upsert: TypeWithIdUpsertNestedInput\n}\n\ninput TypeWithIdUpdateOneRequiredInput {\n  create: TypeWithIdCreateInput\n  connect: TypeWithIdWhereUniqueInput\n  update: TypeWithIdUpdateDataInput\n  upsert: TypeWithIdUpsertNestedInput\n}\n\ninput TypeWithIdUpdateWithWhereUniqueNestedInput {\n  where: TypeWithIdWhereUniqueInput!\n  data: TypeWithIdUpdateDataInput!\n}\n\ninput TypeWithIdUpsertNestedInput {\n  update: TypeWithIdUpdateDataInput!\n  create: TypeWithIdCreateInput!\n}\n\ninput TypeWithIdUpsertWithWhereUniqueNestedInput {\n  where: TypeWithIdWhereUniqueInput!\n  update: TypeWithIdUpdateDataInput!\n  create: TypeWithIdCreateInput!\n}\n\ninput TypeWithIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput TypeWithIdWhereUniqueInput {\n  id: ID\n}\n\ntype TypeWithoutId {\n  field: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype TypeWithoutIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [TypeWithoutIdEdge]!\n  aggregate: AggregateTypeWithoutId!\n}\n\ninput TypeWithoutIdCreateInput {\n  field: String!\n}\n\ninput TypeWithoutIdCreateManyInput {\n  create: [TypeWithoutIdCreateInput!]\n}\n\ninput TypeWithoutIdCreateOneInput {\n  create: TypeWithoutIdCreateInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype TypeWithoutIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: TypeWithoutId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum TypeWithoutIdOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TypeWithoutIdPreviousValues {\n  field: String!\n}\n\ninput TypeWithoutIdScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithoutIdScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithoutIdScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithoutIdScalarWhereInput!]\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ntype TypeWithoutIdSubscriptionPayload {\n  mutation: MutationType!\n  node: TypeWithoutId\n  updatedFields: [String!]\n  previousValues: TypeWithoutIdPreviousValues\n}\n\ninput TypeWithoutIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithoutIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithoutIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithoutIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TypeWithoutIdWhereInput\n}\n\ninput TypeWithoutIdUpdateDataInput {\n  field: String\n}\n\ninput TypeWithoutIdUpdateManyDataInput {\n  field: String\n}\n\ninput TypeWithoutIdUpdateManyInput {\n  create: [TypeWithoutIdCreateInput!]\n  updateMany: [TypeWithoutIdUpdateManyWithWhereNestedInput!]\n  deleteMany: [TypeWithoutIdScalarWhereInput!]\n}\n\ninput TypeWithoutIdUpdateManyMutationInput {\n  field: String\n}\n\ninput TypeWithoutIdUpdateManyWithWhereNestedInput {\n  where: TypeWithoutIdScalarWhereInput!\n  data: TypeWithoutIdUpdateManyDataInput!\n}\n\ninput TypeWithoutIdUpdateOneInput {\n  create: TypeWithoutIdCreateInput\n  disconnect: Boolean\n  delete: Boolean\n  update: TypeWithoutIdUpdateDataInput\n  upsert: TypeWithoutIdUpsertNestedInput\n}\n\ninput TypeWithoutIdUpdateOneRequiredInput {\n  create: TypeWithoutIdCreateInput\n  update: TypeWithoutIdUpdateDataInput\n  upsert: TypeWithoutIdUpsertNestedInput\n}\n\ninput TypeWithoutIdUpsertNestedInput {\n  update: TypeWithoutIdUpdateDataInput!\n  create: TypeWithoutIdCreateInput!\n}\n\ninput TypeWithoutIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithoutIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithoutIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithoutIdWhereInput!]\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 118
    },
    {
      "name": "document.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/emptyTypes/document.graphql",
      "sha": "19eae4966634ce27f24a87f1ab50896002fefbd1",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/emptyTypes/document.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/19eae4966634ce27f24a87f1ab50896002fefbd1",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/emptyTypes/document.graphql",
      "content": "type AggregateOnlyDate {\n  count: Int!\n}\n\ntype AggregateOnlyId {\n  count: Int!\n}\n\ntype AggregateOnlyIdAndARelation {\n  count: Int!\n}\n\ntype AggregateOnlyIdAndARelation2 {\n  count: Int!\n}\n\ntype AggregateOnlyRelation {\n  count: Int!\n}\n\ntype AggregateOnlyRelationA {\n  count: Int!\n}\n\ntype AggregateOnlyRelationB {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\nscalar DateTime\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createOnlyIdAndARelation(data: OnlyIdAndARelationCreateInput!): OnlyIdAndARelation!\n  createOnlyIdAndARelation2(data: OnlyIdAndARelation2CreateInput!): OnlyIdAndARelation2!\n  createOnlyRelation(data: OnlyRelationCreateInput!): OnlyRelation!\n  createOnlyRelationA(data: OnlyRelationACreateInput!): OnlyRelationA!\n  createOnlyRelationB(data: OnlyRelationBCreateInput!): OnlyRelationB!\n  createOnlyId: OnlyId!\n  createOnlyDate: OnlyDate!\n  updateOnlyIdAndARelation(data: OnlyIdAndARelationUpdateInput!, where: OnlyIdAndARelationWhereUniqueInput!): OnlyIdAndARelation\n  updateOnlyIdAndARelation2(data: OnlyIdAndARelation2UpdateInput!, where: OnlyIdAndARelation2WhereUniqueInput!): OnlyIdAndARelation2\n  updateOnlyRelation(data: OnlyRelationUpdateInput!, where: OnlyRelationWhereUniqueInput!): OnlyRelation\n  updateOnlyRelationA(data: OnlyRelationAUpdateInput!, where: OnlyRelationAWhereUniqueInput!): OnlyRelationA\n  updateOnlyRelationB(data: OnlyRelationBUpdateInput!, where: OnlyRelationBWhereUniqueInput!): OnlyRelationB\n  deleteOnlyIdAndARelation(where: OnlyIdAndARelationWhereUniqueInput!): OnlyIdAndARelation\n  deleteOnlyIdAndARelation2(where: OnlyIdAndARelation2WhereUniqueInput!): OnlyIdAndARelation2\n  deleteOnlyRelation(where: OnlyRelationWhereUniqueInput!): OnlyRelation\n  deleteOnlyRelationA(where: OnlyRelationAWhereUniqueInput!): OnlyRelationA\n  deleteOnlyRelationB(where: OnlyRelationBWhereUniqueInput!): OnlyRelationB\n  deleteOnlyId(where: OnlyIdWhereUniqueInput!): OnlyId\n  deleteOnlyDate(where: OnlyDateWhereUniqueInput!): OnlyDate\n  upsertOnlyIdAndARelation(where: OnlyIdAndARelationWhereUniqueInput!, create: OnlyIdAndARelationCreateInput!, update: OnlyIdAndARelationUpdateInput!): OnlyIdAndARelation!\n  upsertOnlyIdAndARelation2(where: OnlyIdAndARelation2WhereUniqueInput!, create: OnlyIdAndARelation2CreateInput!, update: OnlyIdAndARelation2UpdateInput!): OnlyIdAndARelation2!\n  upsertOnlyRelation(where: OnlyRelationWhereUniqueInput!, create: OnlyRelationCreateInput!, update: OnlyRelationUpdateInput!): OnlyRelation!\n  upsertOnlyRelationA(where: OnlyRelationAWhereUniqueInput!, create: OnlyRelationACreateInput!, update: OnlyRelationAUpdateInput!): OnlyRelationA!\n  upsertOnlyRelationB(where: OnlyRelationBWhereUniqueInput!, create: OnlyRelationBCreateInput!, update: OnlyRelationBUpdateInput!): OnlyRelationB!\n  deleteManyOnlyIdAndARelations(where: OnlyIdAndARelationWhereInput): BatchPayload!\n  deleteManyOnlyIdAndARelation2s(where: OnlyIdAndARelation2WhereInput): BatchPayload!\n  deleteManyOnlyRelations(where: OnlyRelationWhereInput): BatchPayload!\n  deleteManyOnlyRelationAs(where: OnlyRelationAWhereInput): BatchPayload!\n  deleteManyOnlyRelationBs(where: OnlyRelationBWhereInput): BatchPayload!\n  deleteManyOnlyIds(where: OnlyIdWhereInput): BatchPayload!\n  deleteManyOnlyDates(where: OnlyDateWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\ntype OnlyDate implements Node {\n  id: ID!\n  createdAt: DateTime!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OnlyDateConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OnlyDateEdge]!\n  aggregate: AggregateOnlyDate!\n}\n\ninput OnlyDateCreateManyInput {\n  connect: [OnlyDateWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OnlyDateEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OnlyDate!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OnlyDateOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype OnlyDatePreviousValues {\n  id: ID!\n  createdAt: DateTime!\n}\n\ninput OnlyDateScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyDateScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyDateScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyDateScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n}\n\ntype OnlyDateSubscriptionPayload {\n  mutation: MutationType!\n  node: OnlyDate\n  updatedFields: [String!]\n  previousValues: OnlyDatePreviousValues\n}\n\ninput OnlyDateSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyDateSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyDateSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyDateSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OnlyDateWhereInput\n}\n\ninput OnlyDateUpdateManyInput {\n  connect: [OnlyDateWhereUniqueInput!]\n  disconnect: [OnlyDateWhereUniqueInput!]\n  delete: [OnlyDateWhereUniqueInput!]\n  deleteMany: [OnlyDateScalarWhereInput!]\n}\n\ninput OnlyDateWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyDateWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyDateWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyDateWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n}\n\ninput OnlyDateWhereUniqueInput {\n  id: ID\n}\n\ntype OnlyId implements Node {\n  id: ID!\n}\n\ntype OnlyIdAndARelation implements Node {\n  id: ID!\n  ref: OnlyId!\n}\n\ntype OnlyIdAndARelation2 implements Node {\n  id: ID!\n  ref: OnlyId\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OnlyIdAndARelation2Connection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OnlyIdAndARelation2Edge]!\n  aggregate: AggregateOnlyIdAndARelation2!\n}\n\ninput OnlyIdAndARelation2CreateInput {\n  ref: OnlyIdCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OnlyIdAndARelation2Edge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OnlyIdAndARelation2!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OnlyIdAndARelation2OrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype OnlyIdAndARelation2PreviousValues {\n  id: ID!\n}\n\ntype OnlyIdAndARelation2SubscriptionPayload {\n  mutation: MutationType!\n  node: OnlyIdAndARelation2\n  updatedFields: [String!]\n  previousValues: OnlyIdAndARelation2PreviousValues\n}\n\ninput OnlyIdAndARelation2SubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyIdAndARelation2SubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyIdAndARelation2SubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyIdAndARelation2SubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OnlyIdAndARelation2WhereInput\n}\n\ninput OnlyIdAndARelation2UpdateInput {\n  ref: OnlyIdUpdateOneInput\n}\n\ninput OnlyIdAndARelation2WhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyIdAndARelation2WhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyIdAndARelation2WhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyIdAndARelation2WhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput OnlyIdAndARelation2WhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OnlyIdAndARelationConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OnlyIdAndARelationEdge]!\n  aggregate: AggregateOnlyIdAndARelation!\n}\n\ninput OnlyIdAndARelationCreateInput {\n  ref: OnlyIdCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OnlyIdAndARelationEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OnlyIdAndARelation!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OnlyIdAndARelationOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype OnlyIdAndARelationPreviousValues {\n  id: ID!\n}\n\ntype OnlyIdAndARelationSubscriptionPayload {\n  mutation: MutationType!\n  node: OnlyIdAndARelation\n  updatedFields: [String!]\n  previousValues: OnlyIdAndARelationPreviousValues\n}\n\ninput OnlyIdAndARelationSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyIdAndARelationSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyIdAndARelationSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyIdAndARelationSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OnlyIdAndARelationWhereInput\n}\n\ninput OnlyIdAndARelationUpdateInput {\n  ref: OnlyIdUpdateOneRequiredInput\n}\n\ninput OnlyIdAndARelationWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyIdAndARelationWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyIdAndARelationWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyIdAndARelationWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput OnlyIdAndARelationWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OnlyIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OnlyIdEdge]!\n  aggregate: AggregateOnlyId!\n}\n\ninput OnlyIdCreateOneInput {\n  connect: OnlyIdWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OnlyIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OnlyId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OnlyIdOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype OnlyIdPreviousValues {\n  id: ID!\n}\n\ntype OnlyIdSubscriptionPayload {\n  mutation: MutationType!\n  node: OnlyId\n  updatedFields: [String!]\n  previousValues: OnlyIdPreviousValues\n}\n\ninput OnlyIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OnlyIdWhereInput\n}\n\ninput OnlyIdUpdateOneInput {\n  connect: OnlyIdWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n}\n\ninput OnlyIdUpdateOneRequiredInput {\n  connect: OnlyIdWhereUniqueInput\n}\n\ninput OnlyIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput OnlyIdWhereUniqueInput {\n  id: ID\n}\n\ntype OnlyRelation implements Node {\n  id: ID!\n  ref(where: OnlyDateWhereInput, orderBy: OnlyDateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OnlyDate!]\n}\n\ntype OnlyRelationA implements Node {\n  id: ID!\n  ref: OnlyRelationA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OnlyRelationAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OnlyRelationAEdge]!\n  aggregate: AggregateOnlyRelationA!\n}\n\ninput OnlyRelationACreateInput {\n  ref: OnlyRelationACreateOneInput!\n}\n\ninput OnlyRelationACreateOneInput {\n  create: OnlyRelationACreateInput\n  connect: OnlyRelationAWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OnlyRelationAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OnlyRelationA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OnlyRelationAOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype OnlyRelationAPreviousValues {\n  id: ID!\n}\n\ntype OnlyRelationASubscriptionPayload {\n  mutation: MutationType!\n  node: OnlyRelationA\n  updatedFields: [String!]\n  previousValues: OnlyRelationAPreviousValues\n}\n\ninput OnlyRelationASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyRelationASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyRelationASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyRelationASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OnlyRelationAWhereInput\n}\n\ninput OnlyRelationAUpdateDataInput {\n  ref: OnlyRelationAUpdateOneRequiredInput\n}\n\ninput OnlyRelationAUpdateInput {\n  ref: OnlyRelationAUpdateOneRequiredInput\n}\n\ninput OnlyRelationAUpdateOneRequiredInput {\n  create: OnlyRelationACreateInput\n  connect: OnlyRelationAWhereUniqueInput\n  update: OnlyRelationAUpdateDataInput\n  upsert: OnlyRelationAUpsertNestedInput\n}\n\ninput OnlyRelationAUpsertNestedInput {\n  update: OnlyRelationAUpdateDataInput!\n  create: OnlyRelationACreateInput!\n}\n\ninput OnlyRelationAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyRelationAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyRelationAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyRelationAWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput OnlyRelationAWhereUniqueInput {\n  id: ID\n}\n\ntype OnlyRelationB implements Node {\n  id: ID!\n  ref: OnlyRelationB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OnlyRelationBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OnlyRelationBEdge]!\n  aggregate: AggregateOnlyRelationB!\n}\n\ninput OnlyRelationBCreateInput {\n  ref: OnlyRelationBCreateOneInput\n}\n\ninput OnlyRelationBCreateOneInput {\n  create: OnlyRelationBCreateInput\n  connect: OnlyRelationBWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OnlyRelationBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OnlyRelationB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OnlyRelationBOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype OnlyRelationBPreviousValues {\n  id: ID!\n}\n\ntype OnlyRelationBSubscriptionPayload {\n  mutation: MutationType!\n  node: OnlyRelationB\n  updatedFields: [String!]\n  previousValues: OnlyRelationBPreviousValues\n}\n\ninput OnlyRelationBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyRelationBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyRelationBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyRelationBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OnlyRelationBWhereInput\n}\n\ninput OnlyRelationBUpdateDataInput {\n  ref: OnlyRelationBUpdateOneInput\n}\n\ninput OnlyRelationBUpdateInput {\n  ref: OnlyRelationBUpdateOneInput\n}\n\ninput OnlyRelationBUpdateOneInput {\n  create: OnlyRelationBCreateInput\n  connect: OnlyRelationBWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: OnlyRelationBUpdateDataInput\n  upsert: OnlyRelationBUpsertNestedInput\n}\n\ninput OnlyRelationBUpsertNestedInput {\n  update: OnlyRelationBUpdateDataInput!\n  create: OnlyRelationBCreateInput!\n}\n\ninput OnlyRelationBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyRelationBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyRelationBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyRelationBWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput OnlyRelationBWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OnlyRelationConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OnlyRelationEdge]!\n  aggregate: AggregateOnlyRelation!\n}\n\ninput OnlyRelationCreateInput {\n  ref: OnlyDateCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OnlyRelationEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OnlyRelation!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OnlyRelationOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype OnlyRelationPreviousValues {\n  id: ID!\n}\n\ntype OnlyRelationSubscriptionPayload {\n  mutation: MutationType!\n  node: OnlyRelation\n  updatedFields: [String!]\n  previousValues: OnlyRelationPreviousValues\n}\n\ninput OnlyRelationSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyRelationSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyRelationSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyRelationSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OnlyRelationWhereInput\n}\n\ninput OnlyRelationUpdateInput {\n  ref: OnlyDateUpdateManyInput\n}\n\ninput OnlyRelationWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OnlyRelationWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OnlyRelationWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OnlyRelationWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput OnlyRelationWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  onlyIdAndARelations(where: OnlyIdAndARelationWhereInput, orderBy: OnlyIdAndARelationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OnlyIdAndARelation]!\n  onlyIdAndARelation2s(where: OnlyIdAndARelation2WhereInput, orderBy: OnlyIdAndARelation2OrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OnlyIdAndARelation2]!\n  onlyRelations(where: OnlyRelationWhereInput, orderBy: OnlyRelationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OnlyRelation]!\n  onlyRelationAs(where: OnlyRelationAWhereInput, orderBy: OnlyRelationAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OnlyRelationA]!\n  onlyRelationBs(where: OnlyRelationBWhereInput, orderBy: OnlyRelationBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OnlyRelationB]!\n  onlyIds(where: OnlyIdWhereInput, orderBy: OnlyIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OnlyId]!\n  onlyDates(where: OnlyDateWhereInput, orderBy: OnlyDateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OnlyDate]!\n  onlyIdAndARelation(where: OnlyIdAndARelationWhereUniqueInput!): OnlyIdAndARelation\n  onlyIdAndARelation2(where: OnlyIdAndARelation2WhereUniqueInput!): OnlyIdAndARelation2\n  onlyRelation(where: OnlyRelationWhereUniqueInput!): OnlyRelation\n  onlyRelationA(where: OnlyRelationAWhereUniqueInput!): OnlyRelationA\n  onlyRelationB(where: OnlyRelationBWhereUniqueInput!): OnlyRelationB\n  onlyId(where: OnlyIdWhereUniqueInput!): OnlyId\n  onlyDate(where: OnlyDateWhereUniqueInput!): OnlyDate\n  onlyIdAndARelationsConnection(where: OnlyIdAndARelationWhereInput, orderBy: OnlyIdAndARelationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OnlyIdAndARelationConnection!\n  onlyIdAndARelation2sConnection(where: OnlyIdAndARelation2WhereInput, orderBy: OnlyIdAndARelation2OrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OnlyIdAndARelation2Connection!\n  onlyRelationsConnection(where: OnlyRelationWhereInput, orderBy: OnlyRelationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OnlyRelationConnection!\n  onlyRelationAsConnection(where: OnlyRelationAWhereInput, orderBy: OnlyRelationAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OnlyRelationAConnection!\n  onlyRelationBsConnection(where: OnlyRelationBWhereInput, orderBy: OnlyRelationBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OnlyRelationBConnection!\n  onlyIdsConnection(where: OnlyIdWhereInput, orderBy: OnlyIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OnlyIdConnection!\n  onlyDatesConnection(where: OnlyDateWhereInput, orderBy: OnlyDateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OnlyDateConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  onlyIdAndARelation(where: OnlyIdAndARelationSubscriptionWhereInput): OnlyIdAndARelationSubscriptionPayload\n  onlyIdAndARelation2(where: OnlyIdAndARelation2SubscriptionWhereInput): OnlyIdAndARelation2SubscriptionPayload\n  onlyRelation(where: OnlyRelationSubscriptionWhereInput): OnlyRelationSubscriptionPayload\n  onlyRelationA(where: OnlyRelationASubscriptionWhereInput): OnlyRelationASubscriptionPayload\n  onlyRelationB(where: OnlyRelationBSubscriptionWhereInput): OnlyRelationBSubscriptionPayload\n  onlyId(where: OnlyIdSubscriptionWhereInput): OnlyIdSubscriptionPayload\n  onlyDate(where: OnlyDateSubscriptionWhereInput): OnlyDateSubscriptionPayload\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 47,
      "containsCycle": false,
      "polynomialLevel": 2,
      "numDefinitions": 103
    },
    {
      "name": "document.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/enum/document.graphql",
      "sha": "fd3bac0f038d08434e8ae27bdb9dab38b95c2573",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/enum/document.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/fd3bac0f038d08434e8ae27bdb9dab38b95c2573",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/enum/document.graphql",
      "content": "type A implements Node {\n  id: ID!\n  fieldA: UsedEnum\n  fieldB: UsedEnum!\n  fieldC: [UsedEnum!]!\n  b: B!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AEdge]!\n  aggregate: AggregateA!\n}\n\ninput ACreatefieldCInput {\n  set: [UsedEnum!]\n}\n\ninput ACreateInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum!\n  fieldC: ACreatefieldCInput\n  b: BCreateOneWithoutAInput!\n}\n\ninput ACreateManyInput {\n  create: [ACreateInput!]\n  connect: [AWhereUniqueInput!]\n}\n\ninput ACreateManyWithoutBInput {\n  create: [ACreateWithoutBInput!]\n  connect: [AWhereUniqueInput!]\n}\n\ninput ACreateWithoutBInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum!\n  fieldC: ACreatefieldCInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: A!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\ntype AggregateA {\n  count: Int!\n}\n\ntype AggregateAWithId {\n  count: Int!\n}\n\ntype AggregateB {\n  count: Int!\n}\n\ntype AggregateC {\n  count: Int!\n}\n\ntype AggregateD {\n  count: Int!\n}\n\ntype AggregateE {\n  count: Int!\n}\n\nenum AOrderByInput {\n  id_ASC\n  id_DESC\n  fieldA_ASC\n  fieldA_DESC\n  fieldB_ASC\n  fieldB_DESC\n}\n\ntype APreviousValues {\n  id: ID!\n  fieldA: UsedEnum\n  fieldB: UsedEnum!\n  fieldC: [UsedEnum!]!\n}\n\ninput AScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  fieldA: UsedEnum\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  fieldA_not: UsedEnum\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  fieldA_in: [UsedEnum!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  fieldA_not_in: [UsedEnum!]\n  fieldB: UsedEnum\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  fieldB_not: UsedEnum\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  fieldB_in: [UsedEnum!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  fieldB_not_in: [UsedEnum!]\n}\n\ntype ASubscriptionPayload {\n  mutation: MutationType!\n  node: A\n  updatedFields: [String!]\n  previousValues: APreviousValues\n}\n\ninput ASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWhereInput\n}\n\ninput AUpdateDataInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum\n  fieldC: AUpdatefieldCInput\n  b: BUpdateOneRequiredWithoutAInput\n}\n\ninput AUpdatefieldCInput {\n  set: [UsedEnum!]\n}\n\ninput AUpdateInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum\n  fieldC: AUpdatefieldCInput\n  b: BUpdateOneRequiredWithoutAInput\n}\n\ninput AUpdateManyDataInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum\n  fieldC: AUpdatefieldCInput\n}\n\ninput AUpdateManyInput {\n  create: [ACreateInput!]\n  connect: [AWhereUniqueInput!]\n  disconnect: [AWhereUniqueInput!]\n  delete: [AWhereUniqueInput!]\n  update: [AUpdateWithWhereUniqueNestedInput!]\n  updateMany: [AUpdateManyWithWhereNestedInput!]\n  deleteMany: [AScalarWhereInput!]\n  upsert: [AUpsertWithWhereUniqueNestedInput!]\n}\n\ninput AUpdateManyMutationInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum\n  fieldC: AUpdatefieldCInput\n}\n\ninput AUpdateManyWithoutBInput {\n  create: [ACreateWithoutBInput!]\n  connect: [AWhereUniqueInput!]\n  disconnect: [AWhereUniqueInput!]\n  delete: [AWhereUniqueInput!]\n  update: [AUpdateWithWhereUniqueWithoutBInput!]\n  updateMany: [AUpdateManyWithWhereNestedInput!]\n  deleteMany: [AScalarWhereInput!]\n  upsert: [AUpsertWithWhereUniqueWithoutBInput!]\n}\n\ninput AUpdateManyWithWhereNestedInput {\n  where: AScalarWhereInput!\n  data: AUpdateManyDataInput!\n}\n\ninput AUpdateWithoutBDataInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum\n  fieldC: AUpdatefieldCInput\n}\n\ninput AUpdateWithWhereUniqueNestedInput {\n  where: AWhereUniqueInput!\n  data: AUpdateDataInput!\n}\n\ninput AUpdateWithWhereUniqueWithoutBInput {\n  where: AWhereUniqueInput!\n  data: AUpdateWithoutBDataInput!\n}\n\ninput AUpsertWithWhereUniqueNestedInput {\n  where: AWhereUniqueInput!\n  update: AUpdateDataInput!\n  create: ACreateInput!\n}\n\ninput AUpsertWithWhereUniqueWithoutBInput {\n  where: AWhereUniqueInput!\n  update: AUpdateWithoutBDataInput!\n  create: ACreateWithoutBInput!\n}\n\ninput AWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  fieldA: UsedEnum\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  fieldA_not: UsedEnum\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  fieldA_in: [UsedEnum!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  fieldA_not_in: [UsedEnum!]\n  fieldB: UsedEnum\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  fieldB_not: UsedEnum\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  fieldB_in: [UsedEnum!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  fieldB_not_in: [UsedEnum!]\n}\n\ninput AWhereUniqueInput {\n  id: ID\n}\n\ntype AWithId implements Node {\n  id: ID!\n  fieldA: UsedEnum\n  fieldB: UsedEnum!\n  fieldC: [UsedEnum!]!\n  c: C\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithIdEdge]!\n  aggregate: AggregateAWithId!\n}\n\ninput AWithIdCreatefieldCInput {\n  set: [UsedEnum!]\n}\n\ninput AWithIdCreateInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum!\n  fieldC: AWithIdCreatefieldCInput\n  c: CCreateOneWithoutAInput\n}\n\ninput AWithIdCreateOneInput {\n  create: AWithIdCreateInput\n  connect: AWithIdWhereUniqueInput\n}\n\ninput AWithIdCreateOneWithoutCInput {\n  create: AWithIdCreateWithoutCInput\n  connect: AWithIdWhereUniqueInput\n}\n\ninput AWithIdCreateWithoutCInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum!\n  fieldC: AWithIdCreatefieldCInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithIdOrderByInput {\n  id_ASC\n  id_DESC\n  fieldA_ASC\n  fieldA_DESC\n  fieldB_ASC\n  fieldB_DESC\n}\n\ntype AWithIdPreviousValues {\n  id: ID!\n  fieldA: UsedEnum\n  fieldB: UsedEnum!\n  fieldC: [UsedEnum!]!\n}\n\ntype AWithIdSubscriptionPayload {\n  mutation: MutationType!\n  node: AWithId\n  updatedFields: [String!]\n  previousValues: AWithIdPreviousValues\n}\n\ninput AWithIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithIdWhereInput\n}\n\ninput AWithIdUpdateDataInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum\n  fieldC: AWithIdUpdatefieldCInput\n  c: CUpdateOneWithoutAInput\n}\n\ninput AWithIdUpdatefieldCInput {\n  set: [UsedEnum!]\n}\n\ninput AWithIdUpdateInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum\n  fieldC: AWithIdUpdatefieldCInput\n  c: CUpdateOneWithoutAInput\n}\n\ninput AWithIdUpdateManyMutationInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum\n  fieldC: AWithIdUpdatefieldCInput\n}\n\ninput AWithIdUpdateOneRequiredInput {\n  create: AWithIdCreateInput\n  connect: AWithIdWhereUniqueInput\n  update: AWithIdUpdateDataInput\n  upsert: AWithIdUpsertNestedInput\n}\n\ninput AWithIdUpdateOneRequiredWithoutCInput {\n  create: AWithIdCreateWithoutCInput\n  connect: AWithIdWhereUniqueInput\n  update: AWithIdUpdateWithoutCDataInput\n  upsert: AWithIdUpsertWithoutCInput\n}\n\ninput AWithIdUpdateWithoutCDataInput {\n  fieldA: UsedEnum\n  fieldB: UsedEnum\n  fieldC: AWithIdUpdatefieldCInput\n}\n\ninput AWithIdUpsertNestedInput {\n  update: AWithIdUpdateDataInput!\n  create: AWithIdCreateInput!\n}\n\ninput AWithIdUpsertWithoutCInput {\n  update: AWithIdUpdateWithoutCDataInput!\n  create: AWithIdCreateWithoutCInput!\n}\n\ninput AWithIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  fieldA: UsedEnum\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  fieldA_not: UsedEnum\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  fieldA_in: [UsedEnum!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  fieldA_not_in: [UsedEnum!]\n  fieldB: UsedEnum\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  fieldB_not: UsedEnum\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  fieldB_in: [UsedEnum!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  fieldB_not_in: [UsedEnum!]\n}\n\ninput AWithIdWhereUniqueInput {\n  id: ID\n}\n\ntype B implements Node {\n  field: String!\n  id: ID!\n  a(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A!]\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BEdge]!\n  aggregate: AggregateB!\n}\n\ninput BCreateInput {\n  field: String!\n  a: ACreateManyWithoutBInput\n}\n\ninput BCreateOneWithoutAInput {\n  create: BCreateWithoutAInput\n  connect: BWhereUniqueInput\n}\n\ninput BCreateWithoutAInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: B!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n}\n\ntype BPreviousValues {\n  field: String!\n  id: ID!\n}\n\ntype BSubscriptionPayload {\n  mutation: MutationType!\n  node: B\n  updatedFields: [String!]\n  previousValues: BPreviousValues\n}\n\ninput BSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWhereInput\n}\n\ninput BUpdateInput {\n  field: String\n  a: AUpdateManyWithoutBInput\n}\n\ninput BUpdateManyMutationInput {\n  field: String\n}\n\ninput BUpdateOneRequiredWithoutAInput {\n  create: BCreateWithoutAInput\n  connect: BWhereUniqueInput\n  update: BUpdateWithoutADataInput\n  upsert: BUpsertWithoutAInput\n}\n\ninput BUpdateWithoutADataInput {\n  field: String\n}\n\ninput BUpsertWithoutAInput {\n  update: BUpdateWithoutADataInput!\n  create: BCreateWithoutAInput!\n}\n\ninput BWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWhereInput!]\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput BWhereUniqueInput {\n  id: ID\n}\n\ntype C implements Node {\n  field: [Int!]!\n  id: ID!\n  a: AWithId!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CEdge]!\n  aggregate: AggregateC!\n}\n\ninput CCreatefieldInput {\n  set: [Int!]\n}\n\ninput CCreateInput {\n  field: CCreatefieldInput\n  a: AWithIdCreateOneWithoutCInput!\n}\n\ninput CCreateOneWithoutAInput {\n  create: CCreateWithoutAInput\n  connect: CWhereUniqueInput\n}\n\ninput CCreateWithoutAInput {\n  field: CCreatefieldInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: C!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum COrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype CPreviousValues {\n  field: [Int!]!\n  id: ID!\n}\n\ntype CSubscriptionPayload {\n  mutation: MutationType!\n  node: C\n  updatedFields: [String!]\n  previousValues: CPreviousValues\n}\n\ninput CSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWhereInput\n}\n\ninput CUpdatefieldInput {\n  set: [Int!]\n}\n\ninput CUpdateInput {\n  field: CUpdatefieldInput\n  a: AWithIdUpdateOneRequiredWithoutCInput\n}\n\ninput CUpdateManyMutationInput {\n  field: CUpdatefieldInput\n}\n\ninput CUpdateOneWithoutAInput {\n  create: CCreateWithoutAInput\n  connect: CWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: CUpdateWithoutADataInput\n  upsert: CUpsertWithoutAInput\n}\n\ninput CUpdateWithoutADataInput {\n  field: CUpdatefieldInput\n}\n\ninput CUpsertWithoutAInput {\n  update: CUpdateWithoutADataInput!\n  create: CCreateWithoutAInput!\n}\n\ninput CWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput CWhereUniqueInput {\n  id: ID\n}\n\ntype D implements Node {\n  field: [DateTime!]!\n  id: ID!\n  a: AWithId!\n}\n\nscalar DateTime\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype DConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [DEdge]!\n  aggregate: AggregateD!\n}\n\ninput DCreatefieldInput {\n  set: [DateTime!]\n}\n\ninput DCreateInput {\n  field: DCreatefieldInput\n  a: AWithIdCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype DEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: D!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum DOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype DPreviousValues {\n  field: [DateTime!]!\n  id: ID!\n}\n\ntype DSubscriptionPayload {\n  mutation: MutationType!\n  node: D\n  updatedFields: [String!]\n  previousValues: DPreviousValues\n}\n\ninput DSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [DSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [DSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [DSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: DWhereInput\n}\n\ninput DUpdatefieldInput {\n  set: [DateTime!]\n}\n\ninput DUpdateInput {\n  field: DUpdatefieldInput\n  a: AWithIdUpdateOneRequiredInput\n}\n\ninput DUpdateManyMutationInput {\n  field: DUpdatefieldInput\n}\n\ninput DWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [DWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [DWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [DWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput DWhereUniqueInput {\n  id: ID\n}\n\ntype E implements Node {\n  field: Json\n  id: ID!\n  a(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype EConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [EEdge]!\n  aggregate: AggregateE!\n}\n\ninput ECreateInput {\n  field: Json\n  a: ACreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype EEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: E!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum EOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n}\n\ntype EPreviousValues {\n  field: Json\n  id: ID!\n}\n\ntype ESubscriptionPayload {\n  mutation: MutationType!\n  node: E\n  updatedFields: [String!]\n  previousValues: EPreviousValues\n}\n\ninput ESubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ESubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ESubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ESubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: EWhereInput\n}\n\ninput EUpdateInput {\n  field: Json\n  a: AUpdateManyInput\n}\n\ninput EUpdateManyMutationInput {\n  field: Json\n}\n\ninput EWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [EWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [EWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [EWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput EWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createB(data: BCreateInput!): B!\n  createC(data: CCreateInput!): C!\n  createD(data: DCreateInput!): D!\n  createE(data: ECreateInput!): E!\n  createA(data: ACreateInput!): A!\n  createAWithId(data: AWithIdCreateInput!): AWithId!\n  updateB(data: BUpdateInput!, where: BWhereUniqueInput!): B\n  updateC(data: CUpdateInput!, where: CWhereUniqueInput!): C\n  updateD(data: DUpdateInput!, where: DWhereUniqueInput!): D\n  updateE(data: EUpdateInput!, where: EWhereUniqueInput!): E\n  updateA(data: AUpdateInput!, where: AWhereUniqueInput!): A\n  updateAWithId(data: AWithIdUpdateInput!, where: AWithIdWhereUniqueInput!): AWithId\n  deleteB(where: BWhereUniqueInput!): B\n  deleteC(where: CWhereUniqueInput!): C\n  deleteD(where: DWhereUniqueInput!): D\n  deleteE(where: EWhereUniqueInput!): E\n  deleteA(where: AWhereUniqueInput!): A\n  deleteAWithId(where: AWithIdWhereUniqueInput!): AWithId\n  upsertB(where: BWhereUniqueInput!, create: BCreateInput!, update: BUpdateInput!): B!\n  upsertC(where: CWhereUniqueInput!, create: CCreateInput!, update: CUpdateInput!): C!\n  upsertD(where: DWhereUniqueInput!, create: DCreateInput!, update: DUpdateInput!): D!\n  upsertE(where: EWhereUniqueInput!, create: ECreateInput!, update: EUpdateInput!): E!\n  upsertA(where: AWhereUniqueInput!, create: ACreateInput!, update: AUpdateInput!): A!\n  upsertAWithId(where: AWithIdWhereUniqueInput!, create: AWithIdCreateInput!, update: AWithIdUpdateInput!): AWithId!\n  updateManyBs(data: BUpdateManyMutationInput!, where: BWhereInput): BatchPayload!\n  updateManyCs(data: CUpdateManyMutationInput!, where: CWhereInput): BatchPayload!\n  updateManyDs(data: DUpdateManyMutationInput!, where: DWhereInput): BatchPayload!\n  updateManyEs(data: EUpdateManyMutationInput!, where: EWhereInput): BatchPayload!\n  updateManyAs(data: AUpdateManyMutationInput!, where: AWhereInput): BatchPayload!\n  updateManyAWithIds(data: AWithIdUpdateManyMutationInput!, where: AWithIdWhereInput): BatchPayload!\n  deleteManyBs(where: BWhereInput): BatchPayload!\n  deleteManyCs(where: CWhereInput): BatchPayload!\n  deleteManyDs(where: DWhereInput): BatchPayload!\n  deleteManyEs(where: EWhereInput): BatchPayload!\n  deleteManyAs(where: AWhereInput): BatchPayload!\n  deleteManyAWithIds(where: AWithIdWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  bs(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B]!\n  cs(where: CWhereInput, orderBy: COrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [C]!\n  ds(where: DWhereInput, orderBy: DOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [D]!\n  es(where: EWhereInput, orderBy: EOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [E]!\n  as(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A]!\n  aWithIds(where: AWithIdWhereInput, orderBy: AWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithId]!\n  b(where: BWhereUniqueInput!): B\n  c(where: CWhereUniqueInput!): C\n  d(where: DWhereUniqueInput!): D\n  e(where: EWhereUniqueInput!): E\n  a(where: AWhereUniqueInput!): A\n  aWithId(where: AWithIdWhereUniqueInput!): AWithId\n  bsConnection(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BConnection!\n  csConnection(where: CWhereInput, orderBy: COrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CConnection!\n  dsConnection(where: DWhereInput, orderBy: DOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DConnection!\n  esConnection(where: EWhereInput, orderBy: EOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EConnection!\n  asConnection(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AConnection!\n  aWithIdsConnection(where: AWithIdWhereInput, orderBy: AWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithIdConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  b(where: BSubscriptionWhereInput): BSubscriptionPayload\n  c(where: CSubscriptionWhereInput): CSubscriptionPayload\n  d(where: DSubscriptionWhereInput): DSubscriptionPayload\n  e(where: ESubscriptionWhereInput): ESubscriptionPayload\n  a(where: ASubscriptionWhereInput): ASubscriptionPayload\n  aWithId(where: AWithIdSubscriptionWhereInput): AWithIdSubscriptionPayload\n}\n\nenum UsedEnum {\n  A\n  B\n  C\n  D\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 41,
      "containsCycle": true,
      "numDefinitions": 130
    },
    {
      "name": "document.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/meshRelation/document.graphql",
      "sha": "60d8d9cd335688d1a36bcaaffb1d4e0ed8d2ada9",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/meshRelation/document.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/60d8d9cd335688d1a36bcaaffb1d4e0ed8d2ada9",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/meshRelation/document.graphql",
      "content": "type A implements Node {\n  field: Int!\n  id: ID!\n  a: A!\n  b(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B!]\n  c: C\n  e(where: EWhereInput, orderBy: EOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [E!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AEdge]!\n  aggregate: AggregateA!\n}\n\ninput ACreateInput {\n  field: Int!\n  a: ACreateOneInput!\n  b: BCreateManyWithoutAInput\n  c: CCreateOneWithoutAInput\n  e: ECreateManyWithoutAInput\n}\n\ninput ACreateOneInput {\n  create: ACreateInput\n  connect: AWhereUniqueInput\n}\n\ninput ACreateOneWithoutBInput {\n  create: ACreateWithoutBInput\n  connect: AWhereUniqueInput\n}\n\ninput ACreateOneWithoutCInput {\n  create: ACreateWithoutCInput\n  connect: AWhereUniqueInput\n}\n\ninput ACreateOneWithoutEInput {\n  create: ACreateWithoutEInput\n  connect: AWhereUniqueInput\n}\n\ninput ACreateWithoutBInput {\n  field: Int!\n  a: ACreateOneInput!\n  c: CCreateOneWithoutAInput\n  e: ECreateManyWithoutAInput\n}\n\ninput ACreateWithoutCInput {\n  field: Int!\n  a: ACreateOneInput!\n  b: BCreateManyWithoutAInput\n  e: ECreateManyWithoutAInput\n}\n\ninput ACreateWithoutEInput {\n  field: Int!\n  a: ACreateOneInput!\n  b: BCreateManyWithoutAInput\n  c: CCreateOneWithoutAInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: A!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\ntype AggregateA {\n  count: Int!\n}\n\ntype AggregateB {\n  count: Int!\n}\n\ntype AggregateC {\n  count: Int!\n}\n\ntype AggregateD {\n  count: Int!\n}\n\ntype AggregateE {\n  count: Int!\n}\n\nenum AOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n}\n\ntype APreviousValues {\n  field: Int!\n  id: ID!\n}\n\ntype ASubscriptionPayload {\n  mutation: MutationType!\n  node: A\n  updatedFields: [String!]\n  previousValues: APreviousValues\n}\n\ninput ASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWhereInput\n}\n\ninput AUpdateDataInput {\n  field: Int\n  a: AUpdateOneRequiredInput\n  b: BUpdateManyWithoutAInput\n  c: CUpdateOneWithoutAInput\n  e: EUpdateManyWithoutAInput\n}\n\ninput AUpdateInput {\n  field: Int\n  a: AUpdateOneRequiredInput\n  b: BUpdateManyWithoutAInput\n  c: CUpdateOneWithoutAInput\n  e: EUpdateManyWithoutAInput\n}\n\ninput AUpdateManyMutationInput {\n  field: Int\n}\n\ninput AUpdateOneRequiredInput {\n  create: ACreateInput\n  connect: AWhereUniqueInput\n  update: AUpdateDataInput\n  upsert: AUpsertNestedInput\n}\n\ninput AUpdateOneRequiredWithoutBInput {\n  create: ACreateWithoutBInput\n  connect: AWhereUniqueInput\n  update: AUpdateWithoutBDataInput\n  upsert: AUpsertWithoutBInput\n}\n\ninput AUpdateOneRequiredWithoutEInput {\n  create: ACreateWithoutEInput\n  connect: AWhereUniqueInput\n  update: AUpdateWithoutEDataInput\n  upsert: AUpsertWithoutEInput\n}\n\ninput AUpdateOneWithoutCInput {\n  create: ACreateWithoutCInput\n  connect: AWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: AUpdateWithoutCDataInput\n  upsert: AUpsertWithoutCInput\n}\n\ninput AUpdateWithoutBDataInput {\n  field: Int\n  a: AUpdateOneRequiredInput\n  c: CUpdateOneWithoutAInput\n  e: EUpdateManyWithoutAInput\n}\n\ninput AUpdateWithoutCDataInput {\n  field: Int\n  a: AUpdateOneRequiredInput\n  b: BUpdateManyWithoutAInput\n  e: EUpdateManyWithoutAInput\n}\n\ninput AUpdateWithoutEDataInput {\n  field: Int\n  a: AUpdateOneRequiredInput\n  b: BUpdateManyWithoutAInput\n  c: CUpdateOneWithoutAInput\n}\n\ninput AUpsertNestedInput {\n  update: AUpdateDataInput!\n  create: ACreateInput!\n}\n\ninput AUpsertWithoutBInput {\n  update: AUpdateWithoutBDataInput!\n  create: ACreateWithoutBInput!\n}\n\ninput AUpsertWithoutCInput {\n  update: AUpdateWithoutCDataInput!\n  create: ACreateWithoutCInput!\n}\n\ninput AUpsertWithoutEInput {\n  update: AUpdateWithoutEDataInput!\n  create: ACreateWithoutEInput!\n}\n\ninput AWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWhereInput!]\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput AWhereUniqueInput {\n  id: ID\n}\n\ntype B implements Node {\n  id: ID!\n  field: [String!]!\n  c: C\n  b(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B!]\n  a: A!\n  c2: C\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BEdge]!\n  aggregate: AggregateB!\n}\n\ninput BCreatefieldInput {\n  set: [String!]\n}\n\ninput BCreateInput {\n  field: BCreatefieldInput\n  c: CCreateOneWithoutBInput\n  b: BCreateManyInput\n  a: ACreateOneWithoutBInput!\n  c2: CCreateOneWithoutB2Input\n}\n\ninput BCreateManyInput {\n  create: [BCreateInput!]\n  connect: [BWhereUniqueInput!]\n}\n\ninput BCreateManyWithoutAInput {\n  create: [BCreateWithoutAInput!]\n  connect: [BWhereUniqueInput!]\n}\n\ninput BCreateManyWithoutCInput {\n  create: [BCreateWithoutCInput!]\n  connect: [BWhereUniqueInput!]\n}\n\ninput BCreateOneInput {\n  create: BCreateInput\n  connect: BWhereUniqueInput\n}\n\ninput BCreateOneWithoutC2Input {\n  create: BCreateWithoutC2Input\n  connect: BWhereUniqueInput\n}\n\ninput BCreateWithoutAInput {\n  field: BCreatefieldInput\n  c: CCreateOneWithoutBInput\n  b: BCreateManyInput\n  c2: CCreateOneWithoutB2Input\n}\n\ninput BCreateWithoutC2Input {\n  field: BCreatefieldInput\n  c: CCreateOneWithoutBInput\n  b: BCreateManyInput\n  a: ACreateOneWithoutBInput!\n}\n\ninput BCreateWithoutCInput {\n  field: BCreatefieldInput\n  b: BCreateManyInput\n  a: ACreateOneWithoutBInput!\n  c2: CCreateOneWithoutB2Input\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: B!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype BPreviousValues {\n  id: ID!\n  field: [String!]!\n}\n\ninput BScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ntype BSubscriptionPayload {\n  mutation: MutationType!\n  node: B\n  updatedFields: [String!]\n  previousValues: BPreviousValues\n}\n\ninput BSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWhereInput\n}\n\ninput BUpdateDataInput {\n  field: BUpdatefieldInput\n  c: CUpdateOneWithoutBInput\n  b: BUpdateManyInput\n  a: AUpdateOneRequiredWithoutBInput\n  c2: CUpdateOneWithoutB2Input\n}\n\ninput BUpdatefieldInput {\n  set: [String!]\n}\n\ninput BUpdateInput {\n  field: BUpdatefieldInput\n  c: CUpdateOneWithoutBInput\n  b: BUpdateManyInput\n  a: AUpdateOneRequiredWithoutBInput\n  c2: CUpdateOneWithoutB2Input\n}\n\ninput BUpdateManyDataInput {\n  field: BUpdatefieldInput\n}\n\ninput BUpdateManyInput {\n  create: [BCreateInput!]\n  connect: [BWhereUniqueInput!]\n  disconnect: [BWhereUniqueInput!]\n  delete: [BWhereUniqueInput!]\n  update: [BUpdateWithWhereUniqueNestedInput!]\n  updateMany: [BUpdateManyWithWhereNestedInput!]\n  deleteMany: [BScalarWhereInput!]\n  upsert: [BUpsertWithWhereUniqueNestedInput!]\n}\n\ninput BUpdateManyMutationInput {\n  field: BUpdatefieldInput\n}\n\ninput BUpdateManyWithoutAInput {\n  create: [BCreateWithoutAInput!]\n  connect: [BWhereUniqueInput!]\n  disconnect: [BWhereUniqueInput!]\n  delete: [BWhereUniqueInput!]\n  update: [BUpdateWithWhereUniqueWithoutAInput!]\n  updateMany: [BUpdateManyWithWhereNestedInput!]\n  deleteMany: [BScalarWhereInput!]\n  upsert: [BUpsertWithWhereUniqueWithoutAInput!]\n}\n\ninput BUpdateManyWithoutCInput {\n  create: [BCreateWithoutCInput!]\n  connect: [BWhereUniqueInput!]\n  disconnect: [BWhereUniqueInput!]\n  delete: [BWhereUniqueInput!]\n  update: [BUpdateWithWhereUniqueWithoutCInput!]\n  updateMany: [BUpdateManyWithWhereNestedInput!]\n  deleteMany: [BScalarWhereInput!]\n  upsert: [BUpsertWithWhereUniqueWithoutCInput!]\n}\n\ninput BUpdateManyWithWhereNestedInput {\n  where: BScalarWhereInput!\n  data: BUpdateManyDataInput!\n}\n\ninput BUpdateOneRequiredInput {\n  create: BCreateInput\n  connect: BWhereUniqueInput\n  update: BUpdateDataInput\n  upsert: BUpsertNestedInput\n}\n\ninput BUpdateOneWithoutC2Input {\n  create: BCreateWithoutC2Input\n  connect: BWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: BUpdateWithoutC2DataInput\n  upsert: BUpsertWithoutC2Input\n}\n\ninput BUpdateWithoutADataInput {\n  field: BUpdatefieldInput\n  c: CUpdateOneWithoutBInput\n  b: BUpdateManyInput\n  c2: CUpdateOneWithoutB2Input\n}\n\ninput BUpdateWithoutC2DataInput {\n  field: BUpdatefieldInput\n  c: CUpdateOneWithoutBInput\n  b: BUpdateManyInput\n  a: AUpdateOneRequiredWithoutBInput\n}\n\ninput BUpdateWithoutCDataInput {\n  field: BUpdatefieldInput\n  b: BUpdateManyInput\n  a: AUpdateOneRequiredWithoutBInput\n  c2: CUpdateOneWithoutB2Input\n}\n\ninput BUpdateWithWhereUniqueNestedInput {\n  where: BWhereUniqueInput!\n  data: BUpdateDataInput!\n}\n\ninput BUpdateWithWhereUniqueWithoutAInput {\n  where: BWhereUniqueInput!\n  data: BUpdateWithoutADataInput!\n}\n\ninput BUpdateWithWhereUniqueWithoutCInput {\n  where: BWhereUniqueInput!\n  data: BUpdateWithoutCDataInput!\n}\n\ninput BUpsertNestedInput {\n  update: BUpdateDataInput!\n  create: BCreateInput!\n}\n\ninput BUpsertWithoutC2Input {\n  update: BUpdateWithoutC2DataInput!\n  create: BCreateWithoutC2Input!\n}\n\ninput BUpsertWithWhereUniqueNestedInput {\n  where: BWhereUniqueInput!\n  update: BUpdateDataInput!\n  create: BCreateInput!\n}\n\ninput BUpsertWithWhereUniqueWithoutAInput {\n  where: BWhereUniqueInput!\n  update: BUpdateWithoutADataInput!\n  create: BCreateWithoutAInput!\n}\n\ninput BUpsertWithWhereUniqueWithoutCInput {\n  where: BWhereUniqueInput!\n  update: BUpdateWithoutCDataInput!\n  create: BCreateWithoutCInput!\n}\n\ninput BWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput BWhereUniqueInput {\n  id: ID\n}\n\ntype C implements Node {\n  id: ID!\n  expirationDate: DateTime\n  c: C!\n  b(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B!]\n  a: A\n  b2: B\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CEdge]!\n  aggregate: AggregateC!\n}\n\ninput CCreateInput {\n  expirationDate: DateTime\n  c: CCreateOneInput!\n  b: BCreateManyWithoutCInput\n  a: ACreateOneWithoutCInput\n  b2: BCreateOneWithoutC2Input\n}\n\ninput CCreateOneInput {\n  create: CCreateInput\n  connect: CWhereUniqueInput\n}\n\ninput CCreateOneWithoutAInput {\n  create: CCreateWithoutAInput\n  connect: CWhereUniqueInput\n}\n\ninput CCreateOneWithoutB2Input {\n  create: CCreateWithoutB2Input\n  connect: CWhereUniqueInput\n}\n\ninput CCreateOneWithoutBInput {\n  create: CCreateWithoutBInput\n  connect: CWhereUniqueInput\n}\n\ninput CCreateWithoutAInput {\n  expirationDate: DateTime\n  c: CCreateOneInput!\n  b: BCreateManyWithoutCInput\n  b2: BCreateOneWithoutC2Input\n}\n\ninput CCreateWithoutB2Input {\n  expirationDate: DateTime\n  c: CCreateOneInput!\n  b: BCreateManyWithoutCInput\n  a: ACreateOneWithoutCInput\n}\n\ninput CCreateWithoutBInput {\n  expirationDate: DateTime\n  c: CCreateOneInput!\n  a: ACreateOneWithoutCInput\n  b2: BCreateOneWithoutC2Input\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: C!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum COrderByInput {\n  id_ASC\n  id_DESC\n  expirationDate_ASC\n  expirationDate_DESC\n}\n\ntype CPreviousValues {\n  id: ID!\n  expirationDate: DateTime\n}\n\ntype CSubscriptionPayload {\n  mutation: MutationType!\n  node: C\n  updatedFields: [String!]\n  previousValues: CPreviousValues\n}\n\ninput CSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWhereInput\n}\n\ninput CUpdateDataInput {\n  expirationDate: DateTime\n  c: CUpdateOneRequiredInput\n  b: BUpdateManyWithoutCInput\n  a: AUpdateOneWithoutCInput\n  b2: BUpdateOneWithoutC2Input\n}\n\ninput CUpdateInput {\n  expirationDate: DateTime\n  c: CUpdateOneRequiredInput\n  b: BUpdateManyWithoutCInput\n  a: AUpdateOneWithoutCInput\n  b2: BUpdateOneWithoutC2Input\n}\n\ninput CUpdateManyMutationInput {\n  expirationDate: DateTime\n}\n\ninput CUpdateOneRequiredInput {\n  create: CCreateInput\n  connect: CWhereUniqueInput\n  update: CUpdateDataInput\n  upsert: CUpsertNestedInput\n}\n\ninput CUpdateOneWithoutAInput {\n  create: CCreateWithoutAInput\n  connect: CWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: CUpdateWithoutADataInput\n  upsert: CUpsertWithoutAInput\n}\n\ninput CUpdateOneWithoutB2Input {\n  create: CCreateWithoutB2Input\n  connect: CWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: CUpdateWithoutB2DataInput\n  upsert: CUpsertWithoutB2Input\n}\n\ninput CUpdateOneWithoutBInput {\n  create: CCreateWithoutBInput\n  connect: CWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: CUpdateWithoutBDataInput\n  upsert: CUpsertWithoutBInput\n}\n\ninput CUpdateWithoutADataInput {\n  expirationDate: DateTime\n  c: CUpdateOneRequiredInput\n  b: BUpdateManyWithoutCInput\n  b2: BUpdateOneWithoutC2Input\n}\n\ninput CUpdateWithoutB2DataInput {\n  expirationDate: DateTime\n  c: CUpdateOneRequiredInput\n  b: BUpdateManyWithoutCInput\n  a: AUpdateOneWithoutCInput\n}\n\ninput CUpdateWithoutBDataInput {\n  expirationDate: DateTime\n  c: CUpdateOneRequiredInput\n  a: AUpdateOneWithoutCInput\n  b2: BUpdateOneWithoutC2Input\n}\n\ninput CUpsertNestedInput {\n  update: CUpdateDataInput!\n  create: CCreateInput!\n}\n\ninput CUpsertWithoutAInput {\n  update: CUpdateWithoutADataInput!\n  create: CCreateWithoutAInput!\n}\n\ninput CUpsertWithoutB2Input {\n  update: CUpdateWithoutB2DataInput!\n  create: CCreateWithoutB2Input!\n}\n\ninput CUpsertWithoutBInput {\n  update: CUpdateWithoutBDataInput!\n  create: CCreateWithoutBInput!\n}\n\ninput CWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  expirationDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  expirationDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  expirationDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  expirationDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  expirationDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  expirationDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  expirationDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  expirationDate_gte: DateTime\n}\n\ninput CWhereUniqueInput {\n  id: ID\n}\n\ntype D implements Node {\n  id: ID!\n  field: Json\n  c: C!\n  b: B!\n  a: A!\n  d(where: DWhereInput, orderBy: DOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [D!]\n}\n\nscalar DateTime\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype DConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [DEdge]!\n  aggregate: AggregateD!\n}\n\ninput DCreateInput {\n  field: Json\n  c: CCreateOneInput!\n  b: BCreateOneInput!\n  a: ACreateOneInput!\n  d: DCreateManyInput\n}\n\ninput DCreateManyInput {\n  create: [DCreateInput!]\n  connect: [DWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype DEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: D!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum DOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype DPreviousValues {\n  id: ID!\n  field: Json\n}\n\ninput DScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [DScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [DScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [DScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ntype DSubscriptionPayload {\n  mutation: MutationType!\n  node: D\n  updatedFields: [String!]\n  previousValues: DPreviousValues\n}\n\ninput DSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [DSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [DSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [DSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: DWhereInput\n}\n\ninput DUpdateDataInput {\n  field: Json\n  c: CUpdateOneRequiredInput\n  b: BUpdateOneRequiredInput\n  a: AUpdateOneRequiredInput\n  d: DUpdateManyInput\n}\n\ninput DUpdateInput {\n  field: Json\n  c: CUpdateOneRequiredInput\n  b: BUpdateOneRequiredInput\n  a: AUpdateOneRequiredInput\n  d: DUpdateManyInput\n}\n\ninput DUpdateManyDataInput {\n  field: Json\n}\n\ninput DUpdateManyInput {\n  create: [DCreateInput!]\n  connect: [DWhereUniqueInput!]\n  disconnect: [DWhereUniqueInput!]\n  delete: [DWhereUniqueInput!]\n  update: [DUpdateWithWhereUniqueNestedInput!]\n  updateMany: [DUpdateManyWithWhereNestedInput!]\n  deleteMany: [DScalarWhereInput!]\n  upsert: [DUpsertWithWhereUniqueNestedInput!]\n}\n\ninput DUpdateManyMutationInput {\n  field: Json\n}\n\ninput DUpdateManyWithWhereNestedInput {\n  where: DScalarWhereInput!\n  data: DUpdateManyDataInput!\n}\n\ninput DUpdateWithWhereUniqueNestedInput {\n  where: DWhereUniqueInput!\n  data: DUpdateDataInput!\n}\n\ninput DUpsertWithWhereUniqueNestedInput {\n  where: DWhereUniqueInput!\n  update: DUpdateDataInput!\n  create: DCreateInput!\n}\n\ninput DWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [DWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [DWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [DWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput DWhereUniqueInput {\n  id: ID\n}\n\ntype E implements Node {\n  id: ID!\n  field: Json\n  a: A!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype EConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [EEdge]!\n  aggregate: AggregateE!\n}\n\ninput ECreateInput {\n  field: Json\n  a: ACreateOneWithoutEInput!\n}\n\ninput ECreateManyWithoutAInput {\n  create: [ECreateWithoutAInput!]\n  connect: [EWhereUniqueInput!]\n}\n\ninput ECreateWithoutAInput {\n  field: Json\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype EEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: E!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum EOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype EPreviousValues {\n  id: ID!\n  field: Json\n}\n\ninput EScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [EScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [EScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [EScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ntype ESubscriptionPayload {\n  mutation: MutationType!\n  node: E\n  updatedFields: [String!]\n  previousValues: EPreviousValues\n}\n\ninput ESubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ESubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ESubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ESubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: EWhereInput\n}\n\ninput EUpdateInput {\n  field: Json\n  a: AUpdateOneRequiredWithoutEInput\n}\n\ninput EUpdateManyDataInput {\n  field: Json\n}\n\ninput EUpdateManyMutationInput {\n  field: Json\n}\n\ninput EUpdateManyWithoutAInput {\n  create: [ECreateWithoutAInput!]\n  connect: [EWhereUniqueInput!]\n  disconnect: [EWhereUniqueInput!]\n  delete: [EWhereUniqueInput!]\n  update: [EUpdateWithWhereUniqueWithoutAInput!]\n  updateMany: [EUpdateManyWithWhereNestedInput!]\n  deleteMany: [EScalarWhereInput!]\n  upsert: [EUpsertWithWhereUniqueWithoutAInput!]\n}\n\ninput EUpdateManyWithWhereNestedInput {\n  where: EScalarWhereInput!\n  data: EUpdateManyDataInput!\n}\n\ninput EUpdateWithoutADataInput {\n  field: Json\n}\n\ninput EUpdateWithWhereUniqueWithoutAInput {\n  where: EWhereUniqueInput!\n  data: EUpdateWithoutADataInput!\n}\n\ninput EUpsertWithWhereUniqueWithoutAInput {\n  where: EWhereUniqueInput!\n  update: EUpdateWithoutADataInput!\n  create: ECreateWithoutAInput!\n}\n\ninput EWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [EWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [EWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [EWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput EWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createE(data: ECreateInput!): E!\n  createC(data: CCreateInput!): C!\n  createD(data: DCreateInput!): D!\n  createA(data: ACreateInput!): A!\n  createB(data: BCreateInput!): B!\n  updateE(data: EUpdateInput!, where: EWhereUniqueInput!): E\n  updateC(data: CUpdateInput!, where: CWhereUniqueInput!): C\n  updateD(data: DUpdateInput!, where: DWhereUniqueInput!): D\n  updateA(data: AUpdateInput!, where: AWhereUniqueInput!): A\n  updateB(data: BUpdateInput!, where: BWhereUniqueInput!): B\n  deleteE(where: EWhereUniqueInput!): E\n  deleteC(where: CWhereUniqueInput!): C\n  deleteD(where: DWhereUniqueInput!): D\n  deleteA(where: AWhereUniqueInput!): A\n  deleteB(where: BWhereUniqueInput!): B\n  upsertE(where: EWhereUniqueInput!, create: ECreateInput!, update: EUpdateInput!): E!\n  upsertC(where: CWhereUniqueInput!, create: CCreateInput!, update: CUpdateInput!): C!\n  upsertD(where: DWhereUniqueInput!, create: DCreateInput!, update: DUpdateInput!): D!\n  upsertA(where: AWhereUniqueInput!, create: ACreateInput!, update: AUpdateInput!): A!\n  upsertB(where: BWhereUniqueInput!, create: BCreateInput!, update: BUpdateInput!): B!\n  updateManyEs(data: EUpdateManyMutationInput!, where: EWhereInput): BatchPayload!\n  updateManyCs(data: CUpdateManyMutationInput!, where: CWhereInput): BatchPayload!\n  updateManyDs(data: DUpdateManyMutationInput!, where: DWhereInput): BatchPayload!\n  updateManyAs(data: AUpdateManyMutationInput!, where: AWhereInput): BatchPayload!\n  updateManyBs(data: BUpdateManyMutationInput!, where: BWhereInput): BatchPayload!\n  deleteManyEs(where: EWhereInput): BatchPayload!\n  deleteManyCs(where: CWhereInput): BatchPayload!\n  deleteManyDs(where: DWhereInput): BatchPayload!\n  deleteManyAs(where: AWhereInput): BatchPayload!\n  deleteManyBs(where: BWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  es(where: EWhereInput, orderBy: EOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [E]!\n  cs(where: CWhereInput, orderBy: COrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [C]!\n  ds(where: DWhereInput, orderBy: DOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [D]!\n  as(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A]!\n  bs(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B]!\n  e(where: EWhereUniqueInput!): E\n  c(where: CWhereUniqueInput!): C\n  d(where: DWhereUniqueInput!): D\n  a(where: AWhereUniqueInput!): A\n  b(where: BWhereUniqueInput!): B\n  esConnection(where: EWhereInput, orderBy: EOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EConnection!\n  csConnection(where: CWhereInput, orderBy: COrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CConnection!\n  dsConnection(where: DWhereInput, orderBy: DOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DConnection!\n  asConnection(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AConnection!\n  bsConnection(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  e(where: ESubscriptionWhereInput): ESubscriptionPayload\n  c(where: CSubscriptionWhereInput): CSubscriptionPayload\n  d(where: DSubscriptionWhereInput): DSubscriptionPayload\n  a(where: ASubscriptionWhereInput): ASubscriptionPayload\n  b(where: BSubscriptionWhereInput): BSubscriptionPayload\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 35,
      "containsCycle": true,
      "numDefinitions": 160
    },
    {
      "name": "cluster.graphql",
      "path": "cli/packages/prisma-cli-core/src/test/cluster.graphql",
      "sha": "6cc1bc2dc4c7dc05e5058b0999bc9f9a0598e222",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-cli-core/src/test/cluster.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/6cc1bc2dc4c7dc05e5058b0999bc9f9a0598e222",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-cli-core/src/test/cluster.graphql",
      "content": "input AddProjectInput {\n  name: String!\n  stage: String!\n  secrets: [String!]\n  clientMutationId: String\n}\n\ntype AddProjectPayload {\n  project: Project\n  clientMutationId: String\n}\n\n# Information about the deployed cluster\ntype ClusterInfo {\n  version: String!\n  commit: String!\n}\n\ntype CreateEnum implements MigrationStep {\n  name: String!\n  values: [String!]!\n  type: String!\n}\n\ntype CreateField implements MigrationStep {\n  model: String!\n  name: String!\n  typeName: String!\n  isRequired: Boolean!\n  isList: Boolean!\n  unique: Boolean!\n  relation: String\n  default: String\n  enum: String\n  type: String!\n}\n\ntype CreateModel implements MigrationStep {\n  name: String!\n  type: String!\n}\n\ntype CreateRelation implements MigrationStep {\n  name: String!\n  leftModel: String!\n  rightModel: String!\n  type: String!\n}\n\nscalar DateTime\n\ntype DeleteEnum implements MigrationStep {\n  name: String!\n  type: String!\n}\n\ntype DeleteField implements MigrationStep {\n  model: String!\n  name: String!\n  type: String!\n}\n\ntype DeleteModel implements MigrationStep {\n  name: String!\n  type: String!\n}\n\ninput DeleteProjectInput {\n  name: String!\n  stage: String!\n  clientMutationId: String\n}\n\ntype DeleteProjectPayload {\n  project: Project\n  clientMutationId: String\n}\n\ntype DeleteRelation implements MigrationStep {\n  name: String!\n  type: String!\n}\n\ninput DeployInput {\n  name: String!\n  stage: String!\n  types: String!\n  dryRun: Boolean\n  secrets: [String!]\n  subscriptions: [FunctionInput!]\n  force: Boolean\n  clientMutationId: String\n}\n\ntype DeployPayload {\n  errors: [SchemaError!]!\n  migration: Migration\n  warnings: [SchemaWarning!]!\n  clientMutationId: String\n}\n\ninput FunctionInput {\n  name: String!\n  query: String!\n  url: String!\n  headers: [HeaderInput!]!\n}\n\ninput HeaderInput {\n  name: String!\n  value: String!\n}\n\n# This is a migration\ntype Migration {\n  projectId: String!\n  revision: Int!\n  status: String!\n  applied: Int!\n  rolledBack: Int!\n  steps: [MigrationStep!]!\n  errors: [String!]!\n  startedAt: DateTime\n  finishedAt: DateTime\n}\n\n# This is a migration step.\ninterface MigrationStep {\n  type: String!\n}\n\ntype Mutation {\n  deploy(input: DeployInput!): DeployPayload\n  addProject(input: AddProjectInput!): AddProjectPayload\n  deleteProject(input: DeleteProjectInput!): DeleteProjectPayload\n}\n\n# This is a project\ntype Project {\n  metricKey: String!\n  name: String!\n  stage: String!\n}\n\ntype Query {\n  # Shows the status of the next migration in line to be applied to the project.\n  # If no such migration exists, it shows the last applied migration.\n  migrationStatus(name: String!, stage: String!): Migration!\n\n  # Shows all projects the caller has access to.\n  listProjects: [Project!]!\n\n  # Shows all migrations for the project. Debug query, will likely be removed in the future.\n  listMigrations(name: String!, stage: String!): [Migration!]!\n\n  # Gets a project by name and stage.\n  project(name: String!, stage: String!): Project!\n\n  # Information about the cluster\n  clusterInfo: ClusterInfo!\n\n  # generates a token for the given project\n  generateProjectToken(name: String!, stage: String!): String!\n}\n\n# An error that occurred while validating the schema.\ntype SchemaError {\n  type: String!\n  field: String\n  description: String!\n}\n\n# A warning created while validating the schema against existing data.\ntype SchemaWarning {\n  type: String!\n  field: String\n  description: String!\n}\n\ntype UpdateEnum implements MigrationStep {\n  name: String!\n  newName: String\n  values: [String!]\n  type: String!\n}\n\ntype UpdateField implements MigrationStep {\n  model: String!\n  name: String!\n  newName: String\n  typeName: String\n  isRequired: Boolean\n  isList: Boolean\n  unique: Boolean\n  relation: String\n  default: String\n  enum: String\n  type: String!\n}\n\ntype UpdateModel implements MigrationStep {\n  name: String!\n  newName: String!\n  type: String!\n}\n\ntype UpdateRelation implements MigrationStep {\n  name: String!\n  newName: String\n  modelAId: String\n  modelBId: String\n  type: String!\n}\n\ntype UpdateSecrets implements MigrationStep {\n  message: String!\n  type: String!\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 30
    },
    {
      "name": "document.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/oneSidedConnection/document.graphql",
      "sha": "9536cfe7b6b1803f0e2e9d7304d5b93d98c5b5a9",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/oneSidedConnection/document.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/9536cfe7b6b1803f0e2e9d7304d5b93d98c5b5a9",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/oneSidedConnection/document.graphql",
      "content": "type A implements Node {\n  id: ID!\n  x: TypeWithId!\n  y: TypeWithoutId!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AEdge]!\n  aggregate: AggregateA!\n}\n\ninput ACreateInput {\n  x: TypeWithIdCreateOneInput!\n  y: TypeWithoutIdCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: A!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\ntype AggregateA {\n  count: Int!\n}\n\ntype AggregateB {\n  count: Int!\n}\n\ntype AggregateC {\n  count: Int!\n}\n\ntype AggregateD {\n  count: Int!\n}\n\ntype AggregateE {\n  count: Int!\n}\n\ntype AggregateF {\n  count: Int!\n}\n\ntype AggregateTypeWithId {\n  count: Int!\n}\n\ntype AggregateTypeWithoutId {\n  count: Int!\n}\n\nenum AOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype APreviousValues {\n  id: ID!\n}\n\ntype ASubscriptionPayload {\n  mutation: MutationType!\n  node: A\n  updatedFields: [String!]\n  previousValues: APreviousValues\n}\n\ninput ASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWhereInput\n}\n\ninput AUpdateInput {\n  x: TypeWithIdUpdateOneRequiredInput\n  y: TypeWithoutIdUpdateOneRequiredInput\n}\n\ninput AWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput AWhereUniqueInput {\n  id: ID\n}\n\ntype B implements Node {\n  id: ID!\n  x: TypeWithId\n  y: TypeWithoutId\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BEdge]!\n  aggregate: AggregateB!\n}\n\ninput BCreateInput {\n  x: TypeWithIdCreateOneInput\n  y: TypeWithoutIdCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: B!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype BPreviousValues {\n  id: ID!\n}\n\ntype BSubscriptionPayload {\n  mutation: MutationType!\n  node: B\n  updatedFields: [String!]\n  previousValues: BPreviousValues\n}\n\ninput BSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWhereInput\n}\n\ninput BUpdateInput {\n  x: TypeWithIdUpdateOneInput\n  y: TypeWithoutIdUpdateOneInput\n}\n\ninput BWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput BWhereUniqueInput {\n  id: ID\n}\n\ntype C implements Node {\n  id: ID!\n  x(where: TypeWithIdWhereInput, orderBy: TypeWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TypeWithId!]\n  y(where: TypeWithoutIdWhereInput, orderBy: TypeWithoutIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TypeWithoutId!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CEdge]!\n  aggregate: AggregateC!\n}\n\ninput CCreateInput {\n  x: TypeWithIdCreateManyInput\n  y: TypeWithoutIdCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: C!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum COrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype CPreviousValues {\n  id: ID!\n}\n\ntype CSubscriptionPayload {\n  mutation: MutationType!\n  node: C\n  updatedFields: [String!]\n  previousValues: CPreviousValues\n}\n\ninput CSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWhereInput\n}\n\ninput CUpdateInput {\n  x: TypeWithIdUpdateManyInput\n  y: TypeWithoutIdUpdateManyInput\n}\n\ninput CWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput CWhereUniqueInput {\n  id: ID\n}\n\ntype D implements Node {\n  id: ID!\n  x: TypeWithId!\n  y: TypeWithoutId!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype DConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [DEdge]!\n  aggregate: AggregateD!\n}\n\ninput DCreateInput {\n  x: TypeWithIdCreateOneInput!\n  y: TypeWithoutIdCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype DEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: D!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum DOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype DPreviousValues {\n  id: ID!\n}\n\ntype DSubscriptionPayload {\n  mutation: MutationType!\n  node: D\n  updatedFields: [String!]\n  previousValues: DPreviousValues\n}\n\ninput DSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [DSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [DSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [DSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: DWhereInput\n}\n\ninput DUpdateInput {\n  x: TypeWithIdUpdateOneRequiredInput\n  y: TypeWithoutIdUpdateOneRequiredInput\n}\n\ninput DWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [DWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [DWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [DWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput DWhereUniqueInput {\n  id: ID\n}\n\ntype E implements Node {\n  id: ID!\n  x: TypeWithId\n  y: TypeWithoutId\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype EConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [EEdge]!\n  aggregate: AggregateE!\n}\n\ninput ECreateInput {\n  x: TypeWithIdCreateOneInput\n  y: TypeWithoutIdCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype EEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: E!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum EOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype EPreviousValues {\n  id: ID!\n}\n\ntype ESubscriptionPayload {\n  mutation: MutationType!\n  node: E\n  updatedFields: [String!]\n  previousValues: EPreviousValues\n}\n\ninput ESubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ESubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ESubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ESubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: EWhereInput\n}\n\ninput EUpdateInput {\n  x: TypeWithIdUpdateOneInput\n  y: TypeWithoutIdUpdateOneInput\n}\n\ninput EWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [EWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [EWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [EWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput EWhereUniqueInput {\n  id: ID\n}\n\ntype F implements Node {\n  id: ID!\n  x(where: TypeWithIdWhereInput, orderBy: TypeWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TypeWithId!]\n  y(where: TypeWithoutIdWhereInput, orderBy: TypeWithoutIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TypeWithoutId!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype FConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [FEdge]!\n  aggregate: AggregateF!\n}\n\ninput FCreateInput {\n  x: TypeWithIdCreateManyInput\n  y: TypeWithoutIdCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype FEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: F!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum FOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype FPreviousValues {\n  id: ID!\n}\n\ntype FSubscriptionPayload {\n  mutation: MutationType!\n  node: F\n  updatedFields: [String!]\n  previousValues: FPreviousValues\n}\n\ninput FSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FWhereInput\n}\n\ninput FUpdateInput {\n  x: TypeWithIdUpdateManyInput\n  y: TypeWithoutIdUpdateManyInput\n}\n\ninput FWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [FWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput FWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createA(data: ACreateInput!): A!\n  createB(data: BCreateInput!): B!\n  createC(data: CCreateInput!): C!\n  createD(data: DCreateInput!): D!\n  createE(data: ECreateInput!): E!\n  createF(data: FCreateInput!): F!\n  createTypeWithoutId(data: TypeWithoutIdCreateInput!): TypeWithoutId!\n  createTypeWithId(data: TypeWithIdCreateInput!): TypeWithId!\n  updateA(data: AUpdateInput!, where: AWhereUniqueInput!): A\n  updateB(data: BUpdateInput!, where: BWhereUniqueInput!): B\n  updateC(data: CUpdateInput!, where: CWhereUniqueInput!): C\n  updateD(data: DUpdateInput!, where: DWhereUniqueInput!): D\n  updateE(data: EUpdateInput!, where: EWhereUniqueInput!): E\n  updateF(data: FUpdateInput!, where: FWhereUniqueInput!): F\n  updateTypeWithoutId(data: TypeWithoutIdUpdateInput!, where: TypeWithoutIdWhereUniqueInput!): TypeWithoutId\n  updateTypeWithId(data: TypeWithIdUpdateInput!, where: TypeWithIdWhereUniqueInput!): TypeWithId\n  deleteA(where: AWhereUniqueInput!): A\n  deleteB(where: BWhereUniqueInput!): B\n  deleteC(where: CWhereUniqueInput!): C\n  deleteD(where: DWhereUniqueInput!): D\n  deleteE(where: EWhereUniqueInput!): E\n  deleteF(where: FWhereUniqueInput!): F\n  deleteTypeWithoutId(where: TypeWithoutIdWhereUniqueInput!): TypeWithoutId\n  deleteTypeWithId(where: TypeWithIdWhereUniqueInput!): TypeWithId\n  upsertA(where: AWhereUniqueInput!, create: ACreateInput!, update: AUpdateInput!): A!\n  upsertB(where: BWhereUniqueInput!, create: BCreateInput!, update: BUpdateInput!): B!\n  upsertC(where: CWhereUniqueInput!, create: CCreateInput!, update: CUpdateInput!): C!\n  upsertD(where: DWhereUniqueInput!, create: DCreateInput!, update: DUpdateInput!): D!\n  upsertE(where: EWhereUniqueInput!, create: ECreateInput!, update: EUpdateInput!): E!\n  upsertF(where: FWhereUniqueInput!, create: FCreateInput!, update: FUpdateInput!): F!\n  upsertTypeWithoutId(where: TypeWithoutIdWhereUniqueInput!, create: TypeWithoutIdCreateInput!, update: TypeWithoutIdUpdateInput!): TypeWithoutId!\n  upsertTypeWithId(where: TypeWithIdWhereUniqueInput!, create: TypeWithIdCreateInput!, update: TypeWithIdUpdateInput!): TypeWithId!\n  updateManyTypeWithoutIds(data: TypeWithoutIdUpdateManyMutationInput!, where: TypeWithoutIdWhereInput): BatchPayload!\n  updateManyTypeWithIds(data: TypeWithIdUpdateManyMutationInput!, where: TypeWithIdWhereInput): BatchPayload!\n  deleteManyAs(where: AWhereInput): BatchPayload!\n  deleteManyBs(where: BWhereInput): BatchPayload!\n  deleteManyCs(where: CWhereInput): BatchPayload!\n  deleteManyDs(where: DWhereInput): BatchPayload!\n  deleteManyEs(where: EWhereInput): BatchPayload!\n  deleteManyFs(where: FWhereInput): BatchPayload!\n  deleteManyTypeWithoutIds(where: TypeWithoutIdWhereInput): BatchPayload!\n  deleteManyTypeWithIds(where: TypeWithIdWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  as(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A]!\n  bs(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B]!\n  cs(where: CWhereInput, orderBy: COrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [C]!\n  ds(where: DWhereInput, orderBy: DOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [D]!\n  es(where: EWhereInput, orderBy: EOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [E]!\n  fs(where: FWhereInput, orderBy: FOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [F]!\n  typeWithoutIds(where: TypeWithoutIdWhereInput, orderBy: TypeWithoutIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TypeWithoutId]!\n  typeWithIds(where: TypeWithIdWhereInput, orderBy: TypeWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TypeWithId]!\n  a(where: AWhereUniqueInput!): A\n  b(where: BWhereUniqueInput!): B\n  c(where: CWhereUniqueInput!): C\n  d(where: DWhereUniqueInput!): D\n  e(where: EWhereUniqueInput!): E\n  f(where: FWhereUniqueInput!): F\n  typeWithoutId(where: TypeWithoutIdWhereUniqueInput!): TypeWithoutId\n  typeWithId(where: TypeWithIdWhereUniqueInput!): TypeWithId\n  asConnection(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AConnection!\n  bsConnection(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BConnection!\n  csConnection(where: CWhereInput, orderBy: COrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CConnection!\n  dsConnection(where: DWhereInput, orderBy: DOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DConnection!\n  esConnection(where: EWhereInput, orderBy: EOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EConnection!\n  fsConnection(where: FWhereInput, orderBy: FOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FConnection!\n  typeWithoutIdsConnection(where: TypeWithoutIdWhereInput, orderBy: TypeWithoutIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TypeWithoutIdConnection!\n  typeWithIdsConnection(where: TypeWithIdWhereInput, orderBy: TypeWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TypeWithIdConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  a(where: ASubscriptionWhereInput): ASubscriptionPayload\n  b(where: BSubscriptionWhereInput): BSubscriptionPayload\n  c(where: CSubscriptionWhereInput): CSubscriptionPayload\n  d(where: DSubscriptionWhereInput): DSubscriptionPayload\n  e(where: ESubscriptionWhereInput): ESubscriptionPayload\n  f(where: FSubscriptionWhereInput): FSubscriptionPayload\n  typeWithoutId(where: TypeWithoutIdSubscriptionWhereInput): TypeWithoutIdSubscriptionPayload\n  typeWithId(where: TypeWithIdSubscriptionWhereInput): TypeWithIdSubscriptionPayload\n}\n\ntype TypeWithId implements Node {\n  id: ID!\n  field: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype TypeWithIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [TypeWithIdEdge]!\n  aggregate: AggregateTypeWithId!\n}\n\ninput TypeWithIdCreateInput {\n  field: String!\n}\n\ninput TypeWithIdCreateManyInput {\n  create: [TypeWithIdCreateInput!]\n  connect: [TypeWithIdWhereUniqueInput!]\n}\n\ninput TypeWithIdCreateOneInput {\n  create: TypeWithIdCreateInput\n  connect: TypeWithIdWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype TypeWithIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: TypeWithId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum TypeWithIdOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype TypeWithIdPreviousValues {\n  id: ID!\n  field: String!\n}\n\ninput TypeWithIdScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithIdScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithIdScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithIdScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ntype TypeWithIdSubscriptionPayload {\n  mutation: MutationType!\n  node: TypeWithId\n  updatedFields: [String!]\n  previousValues: TypeWithIdPreviousValues\n}\n\ninput TypeWithIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TypeWithIdWhereInput\n}\n\ninput TypeWithIdUpdateDataInput {\n  field: String\n}\n\ninput TypeWithIdUpdateInput {\n  field: String\n}\n\ninput TypeWithIdUpdateManyDataInput {\n  field: String\n}\n\ninput TypeWithIdUpdateManyInput {\n  create: [TypeWithIdCreateInput!]\n  connect: [TypeWithIdWhereUniqueInput!]\n  disconnect: [TypeWithIdWhereUniqueInput!]\n  delete: [TypeWithIdWhereUniqueInput!]\n  update: [TypeWithIdUpdateWithWhereUniqueNestedInput!]\n  updateMany: [TypeWithIdUpdateManyWithWhereNestedInput!]\n  deleteMany: [TypeWithIdScalarWhereInput!]\n  upsert: [TypeWithIdUpsertWithWhereUniqueNestedInput!]\n}\n\ninput TypeWithIdUpdateManyMutationInput {\n  field: String\n}\n\ninput TypeWithIdUpdateManyWithWhereNestedInput {\n  where: TypeWithIdScalarWhereInput!\n  data: TypeWithIdUpdateManyDataInput!\n}\n\ninput TypeWithIdUpdateOneInput {\n  create: TypeWithIdCreateInput\n  connect: TypeWithIdWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: TypeWithIdUpdateDataInput\n  upsert: TypeWithIdUpsertNestedInput\n}\n\ninput TypeWithIdUpdateOneRequiredInput {\n  create: TypeWithIdCreateInput\n  connect: TypeWithIdWhereUniqueInput\n  update: TypeWithIdUpdateDataInput\n  upsert: TypeWithIdUpsertNestedInput\n}\n\ninput TypeWithIdUpdateWithWhereUniqueNestedInput {\n  where: TypeWithIdWhereUniqueInput!\n  data: TypeWithIdUpdateDataInput!\n}\n\ninput TypeWithIdUpsertNestedInput {\n  update: TypeWithIdUpdateDataInput!\n  create: TypeWithIdCreateInput!\n}\n\ninput TypeWithIdUpsertWithWhereUniqueNestedInput {\n  where: TypeWithIdWhereUniqueInput!\n  update: TypeWithIdUpdateDataInput!\n  create: TypeWithIdCreateInput!\n}\n\ninput TypeWithIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput TypeWithIdWhereUniqueInput {\n  id: ID\n}\n\ntype TypeWithoutId implements Node {\n  id: ID!\n  field: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype TypeWithoutIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [TypeWithoutIdEdge]!\n  aggregate: AggregateTypeWithoutId!\n}\n\ninput TypeWithoutIdCreateInput {\n  field: String!\n}\n\ninput TypeWithoutIdCreateManyInput {\n  create: [TypeWithoutIdCreateInput!]\n  connect: [TypeWithoutIdWhereUniqueInput!]\n}\n\ninput TypeWithoutIdCreateOneInput {\n  create: TypeWithoutIdCreateInput\n  connect: TypeWithoutIdWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype TypeWithoutIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: TypeWithoutId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum TypeWithoutIdOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype TypeWithoutIdPreviousValues {\n  id: ID!\n  field: String!\n}\n\ninput TypeWithoutIdScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithoutIdScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithoutIdScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithoutIdScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ntype TypeWithoutIdSubscriptionPayload {\n  mutation: MutationType!\n  node: TypeWithoutId\n  updatedFields: [String!]\n  previousValues: TypeWithoutIdPreviousValues\n}\n\ninput TypeWithoutIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithoutIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithoutIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithoutIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TypeWithoutIdWhereInput\n}\n\ninput TypeWithoutIdUpdateDataInput {\n  field: String\n}\n\ninput TypeWithoutIdUpdateInput {\n  field: String\n}\n\ninput TypeWithoutIdUpdateManyDataInput {\n  field: String\n}\n\ninput TypeWithoutIdUpdateManyInput {\n  create: [TypeWithoutIdCreateInput!]\n  connect: [TypeWithoutIdWhereUniqueInput!]\n  disconnect: [TypeWithoutIdWhereUniqueInput!]\n  delete: [TypeWithoutIdWhereUniqueInput!]\n  update: [TypeWithoutIdUpdateWithWhereUniqueNestedInput!]\n  updateMany: [TypeWithoutIdUpdateManyWithWhereNestedInput!]\n  deleteMany: [TypeWithoutIdScalarWhereInput!]\n  upsert: [TypeWithoutIdUpsertWithWhereUniqueNestedInput!]\n}\n\ninput TypeWithoutIdUpdateManyMutationInput {\n  field: String\n}\n\ninput TypeWithoutIdUpdateManyWithWhereNestedInput {\n  where: TypeWithoutIdScalarWhereInput!\n  data: TypeWithoutIdUpdateManyDataInput!\n}\n\ninput TypeWithoutIdUpdateOneInput {\n  create: TypeWithoutIdCreateInput\n  connect: TypeWithoutIdWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: TypeWithoutIdUpdateDataInput\n  upsert: TypeWithoutIdUpsertNestedInput\n}\n\ninput TypeWithoutIdUpdateOneRequiredInput {\n  create: TypeWithoutIdCreateInput\n  connect: TypeWithoutIdWhereUniqueInput\n  update: TypeWithoutIdUpdateDataInput\n  upsert: TypeWithoutIdUpsertNestedInput\n}\n\ninput TypeWithoutIdUpdateWithWhereUniqueNestedInput {\n  where: TypeWithoutIdWhereUniqueInput!\n  data: TypeWithoutIdUpdateDataInput!\n}\n\ninput TypeWithoutIdUpsertNestedInput {\n  update: TypeWithoutIdUpdateDataInput!\n  create: TypeWithoutIdCreateInput!\n}\n\ninput TypeWithoutIdUpsertWithWhereUniqueNestedInput {\n  where: TypeWithoutIdWhereUniqueInput!\n  update: TypeWithoutIdUpdateDataInput!\n  create: TypeWithoutIdCreateInput!\n}\n\ninput TypeWithoutIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithoutIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithoutIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithoutIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput TypeWithoutIdWhereUniqueInput {\n  id: ID\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 53,
      "containsCycle": false,
      "polynomialLevel": 2,
      "numDefinitions": 130
    },
    {
      "name": "relational.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/scalars/relational.graphql",
      "sha": "c884691019e30320ef7b5579be84e028001fa8ac",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/scalars/relational.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/c884691019e30320ef7b5579be84e028001fa8ac",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/scalars/relational.graphql",
      "content": "type AggregateLotsOfRequiredScalars {\n  count: Int!\n}\n\ntype AggregateLotsOfRequiredScalarsWithID {\n  count: Int!\n}\n\ntype AggregateLotsOfScalarLists {\n  count: Int!\n}\n\ntype AggregateLotsOfScalarListsWithID {\n  count: Int!\n}\n\ntype AggregateLotsOfScalars {\n  count: Int!\n}\n\ntype AggregateLotsOfScalarsWithID {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\nscalar DateTime\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype LotsOfRequiredScalars {\n  int: Int!\n  string: String!\n  float: Float!\n  dateTime: DateTime!\n  json: Json!\n  boolean: Boolean!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LotsOfRequiredScalarsConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LotsOfRequiredScalarsEdge]!\n  aggregate: AggregateLotsOfRequiredScalars!\n}\n\ninput LotsOfRequiredScalarsCreateInput {\n  int: Int!\n  string: String!\n  float: Float!\n  dateTime: DateTime!\n  json: Json!\n  boolean: Boolean!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LotsOfRequiredScalarsEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: LotsOfRequiredScalars!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LotsOfRequiredScalarsOrderByInput {\n  int_ASC\n  int_DESC\n  string_ASC\n  string_DESC\n  float_ASC\n  float_DESC\n  dateTime_ASC\n  dateTime_DESC\n  json_ASC\n  json_DESC\n  boolean_ASC\n  boolean_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype LotsOfRequiredScalarsPreviousValues {\n  int: Int!\n  string: String!\n  float: Float!\n  dateTime: DateTime!\n  json: Json!\n  boolean: Boolean!\n}\n\ntype LotsOfRequiredScalarsSubscriptionPayload {\n  mutation: MutationType!\n  node: LotsOfRequiredScalars\n  updatedFields: [String!]\n  previousValues: LotsOfRequiredScalarsPreviousValues\n}\n\ninput LotsOfRequiredScalarsSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfRequiredScalarsSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfRequiredScalarsSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfRequiredScalarsSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LotsOfRequiredScalarsWhereInput\n}\n\ninput LotsOfRequiredScalarsUpdateManyMutationInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ninput LotsOfRequiredScalarsWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfRequiredScalarsWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfRequiredScalarsWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfRequiredScalarsWhereInput!]\n  int: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  int_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  int_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  int_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  int_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  int_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  int_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  int_gte: Int\n  string: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  string_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  string_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  string_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  string_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  string_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  string_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  string_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  string_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  string_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  string_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  string_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  string_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  string_not_ends_with: String\n  float: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  float_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  float_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  float_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  float_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  float_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  float_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  float_gte: Float\n  dateTime: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  dateTime_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  dateTime_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  dateTime_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  dateTime_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  dateTime_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  dateTime_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  dateTime_gte: DateTime\n  boolean: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  boolean_not: Boolean\n}\n\ntype LotsOfRequiredScalarsWithID implements Node {\n  id: ID!\n  int: Int!\n  string: String!\n  float: Float!\n  dateTime: DateTime!\n  json: Json!\n  boolean: Boolean!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LotsOfRequiredScalarsWithIDConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LotsOfRequiredScalarsWithIDEdge]!\n  aggregate: AggregateLotsOfRequiredScalarsWithID!\n}\n\ninput LotsOfRequiredScalarsWithIDCreateInput {\n  int: Int!\n  string: String!\n  float: Float!\n  dateTime: DateTime!\n  json: Json!\n  boolean: Boolean!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LotsOfRequiredScalarsWithIDEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: LotsOfRequiredScalarsWithID!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LotsOfRequiredScalarsWithIDOrderByInput {\n  id_ASC\n  id_DESC\n  int_ASC\n  int_DESC\n  string_ASC\n  string_DESC\n  float_ASC\n  float_DESC\n  dateTime_ASC\n  dateTime_DESC\n  json_ASC\n  json_DESC\n  boolean_ASC\n  boolean_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype LotsOfRequiredScalarsWithIDPreviousValues {\n  id: ID!\n  int: Int!\n  string: String!\n  float: Float!\n  dateTime: DateTime!\n  json: Json!\n  boolean: Boolean!\n}\n\ntype LotsOfRequiredScalarsWithIDSubscriptionPayload {\n  mutation: MutationType!\n  node: LotsOfRequiredScalarsWithID\n  updatedFields: [String!]\n  previousValues: LotsOfRequiredScalarsWithIDPreviousValues\n}\n\ninput LotsOfRequiredScalarsWithIDSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfRequiredScalarsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfRequiredScalarsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfRequiredScalarsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LotsOfRequiredScalarsWithIDWhereInput\n}\n\ninput LotsOfRequiredScalarsWithIDUpdateInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ninput LotsOfRequiredScalarsWithIDUpdateManyMutationInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ninput LotsOfRequiredScalarsWithIDWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfRequiredScalarsWithIDWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfRequiredScalarsWithIDWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfRequiredScalarsWithIDWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  int: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  int_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  int_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  int_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  int_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  int_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  int_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  int_gte: Int\n  string: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  string_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  string_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  string_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  string_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  string_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  string_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  string_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  string_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  string_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  string_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  string_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  string_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  string_not_ends_with: String\n  float: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  float_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  float_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  float_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  float_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  float_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  float_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  float_gte: Float\n  dateTime: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  dateTime_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  dateTime_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  dateTime_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  dateTime_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  dateTime_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  dateTime_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  dateTime_gte: DateTime\n  boolean: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  boolean_not: Boolean\n}\n\ninput LotsOfRequiredScalarsWithIDWhereUniqueInput {\n  id: ID\n}\n\ntype LotsOfScalarLists {\n  int: [Int!]!\n  string: [String!]!\n  float: [Float!]!\n  dateTime: [DateTime!]!\n  json: [Json!]!\n  boolean: [Boolean!]!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LotsOfScalarListsConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LotsOfScalarListsEdge]!\n  aggregate: AggregateLotsOfScalarLists!\n}\n\ninput LotsOfScalarListsCreatebooleanInput {\n  set: [Boolean!]\n}\n\ninput LotsOfScalarListsCreatedateTimeInput {\n  set: [DateTime!]\n}\n\ninput LotsOfScalarListsCreatefloatInput {\n  set: [Float!]\n}\n\ninput LotsOfScalarListsCreateInput {\n  int: LotsOfScalarListsCreateintInput\n  string: LotsOfScalarListsCreatestringInput\n  float: LotsOfScalarListsCreatefloatInput\n  dateTime: LotsOfScalarListsCreatedateTimeInput\n  json: LotsOfScalarListsCreatejsonInput\n  boolean: LotsOfScalarListsCreatebooleanInput\n}\n\ninput LotsOfScalarListsCreateintInput {\n  set: [Int!]\n}\n\ninput LotsOfScalarListsCreatejsonInput {\n  set: [Json!]\n}\n\ninput LotsOfScalarListsCreatestringInput {\n  set: [String!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LotsOfScalarListsEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: LotsOfScalarLists!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LotsOfScalarListsOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype LotsOfScalarListsPreviousValues {\n  int: [Int!]!\n  string: [String!]!\n  float: [Float!]!\n  dateTime: [DateTime!]!\n  json: [Json!]!\n  boolean: [Boolean!]!\n}\n\ntype LotsOfScalarListsSubscriptionPayload {\n  mutation: MutationType!\n  node: LotsOfScalarLists\n  updatedFields: [String!]\n  previousValues: LotsOfScalarListsPreviousValues\n}\n\ninput LotsOfScalarListsSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfScalarListsSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfScalarListsSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfScalarListsSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LotsOfScalarListsWhereInput\n}\n\ninput LotsOfScalarListsUpdatebooleanInput {\n  set: [Boolean!]\n}\n\ninput LotsOfScalarListsUpdatedateTimeInput {\n  set: [DateTime!]\n}\n\ninput LotsOfScalarListsUpdatefloatInput {\n  set: [Float!]\n}\n\ninput LotsOfScalarListsUpdateintInput {\n  set: [Int!]\n}\n\ninput LotsOfScalarListsUpdatejsonInput {\n  set: [Json!]\n}\n\ninput LotsOfScalarListsUpdateManyMutationInput {\n  int: LotsOfScalarListsUpdateintInput\n  string: LotsOfScalarListsUpdatestringInput\n  float: LotsOfScalarListsUpdatefloatInput\n  dateTime: LotsOfScalarListsUpdatedateTimeInput\n  json: LotsOfScalarListsUpdatejsonInput\n  boolean: LotsOfScalarListsUpdatebooleanInput\n}\n\ninput LotsOfScalarListsUpdatestringInput {\n  set: [String!]\n}\n\ninput LotsOfScalarListsWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfScalarListsWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfScalarListsWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfScalarListsWhereInput!]\n}\n\ntype LotsOfScalarListsWithID implements Node {\n  id: ID!\n  int: [Int!]!\n  string: [String!]!\n  float: [Float!]!\n  dateTime: [DateTime!]!\n  json: [Json!]!\n  boolean: [Boolean!]!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LotsOfScalarListsWithIDConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LotsOfScalarListsWithIDEdge]!\n  aggregate: AggregateLotsOfScalarListsWithID!\n}\n\ninput LotsOfScalarListsWithIDCreatebooleanInput {\n  set: [Boolean!]\n}\n\ninput LotsOfScalarListsWithIDCreatedateTimeInput {\n  set: [DateTime!]\n}\n\ninput LotsOfScalarListsWithIDCreatefloatInput {\n  set: [Float!]\n}\n\ninput LotsOfScalarListsWithIDCreateInput {\n  int: LotsOfScalarListsWithIDCreateintInput\n  string: LotsOfScalarListsWithIDCreatestringInput\n  float: LotsOfScalarListsWithIDCreatefloatInput\n  dateTime: LotsOfScalarListsWithIDCreatedateTimeInput\n  json: LotsOfScalarListsWithIDCreatejsonInput\n  boolean: LotsOfScalarListsWithIDCreatebooleanInput\n}\n\ninput LotsOfScalarListsWithIDCreateintInput {\n  set: [Int!]\n}\n\ninput LotsOfScalarListsWithIDCreatejsonInput {\n  set: [Json!]\n}\n\ninput LotsOfScalarListsWithIDCreatestringInput {\n  set: [String!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LotsOfScalarListsWithIDEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: LotsOfScalarListsWithID!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LotsOfScalarListsWithIDOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype LotsOfScalarListsWithIDPreviousValues {\n  id: ID!\n  int: [Int!]!\n  string: [String!]!\n  float: [Float!]!\n  dateTime: [DateTime!]!\n  json: [Json!]!\n  boolean: [Boolean!]!\n}\n\ntype LotsOfScalarListsWithIDSubscriptionPayload {\n  mutation: MutationType!\n  node: LotsOfScalarListsWithID\n  updatedFields: [String!]\n  previousValues: LotsOfScalarListsWithIDPreviousValues\n}\n\ninput LotsOfScalarListsWithIDSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfScalarListsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfScalarListsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfScalarListsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LotsOfScalarListsWithIDWhereInput\n}\n\ninput LotsOfScalarListsWithIDUpdatebooleanInput {\n  set: [Boolean!]\n}\n\ninput LotsOfScalarListsWithIDUpdatedateTimeInput {\n  set: [DateTime!]\n}\n\ninput LotsOfScalarListsWithIDUpdatefloatInput {\n  set: [Float!]\n}\n\ninput LotsOfScalarListsWithIDUpdateInput {\n  int: LotsOfScalarListsWithIDUpdateintInput\n  string: LotsOfScalarListsWithIDUpdatestringInput\n  float: LotsOfScalarListsWithIDUpdatefloatInput\n  dateTime: LotsOfScalarListsWithIDUpdatedateTimeInput\n  json: LotsOfScalarListsWithIDUpdatejsonInput\n  boolean: LotsOfScalarListsWithIDUpdatebooleanInput\n}\n\ninput LotsOfScalarListsWithIDUpdateintInput {\n  set: [Int!]\n}\n\ninput LotsOfScalarListsWithIDUpdatejsonInput {\n  set: [Json!]\n}\n\ninput LotsOfScalarListsWithIDUpdateManyMutationInput {\n  int: LotsOfScalarListsWithIDUpdateintInput\n  string: LotsOfScalarListsWithIDUpdatestringInput\n  float: LotsOfScalarListsWithIDUpdatefloatInput\n  dateTime: LotsOfScalarListsWithIDUpdatedateTimeInput\n  json: LotsOfScalarListsWithIDUpdatejsonInput\n  boolean: LotsOfScalarListsWithIDUpdatebooleanInput\n}\n\ninput LotsOfScalarListsWithIDUpdatestringInput {\n  set: [String!]\n}\n\ninput LotsOfScalarListsWithIDWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfScalarListsWithIDWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfScalarListsWithIDWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfScalarListsWithIDWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput LotsOfScalarListsWithIDWhereUniqueInput {\n  id: ID\n}\n\ntype LotsOfScalars {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LotsOfScalarsConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LotsOfScalarsEdge]!\n  aggregate: AggregateLotsOfScalars!\n}\n\ninput LotsOfScalarsCreateInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LotsOfScalarsEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: LotsOfScalars!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LotsOfScalarsOrderByInput {\n  int_ASC\n  int_DESC\n  string_ASC\n  string_DESC\n  float_ASC\n  float_DESC\n  dateTime_ASC\n  dateTime_DESC\n  json_ASC\n  json_DESC\n  boolean_ASC\n  boolean_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype LotsOfScalarsPreviousValues {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ntype LotsOfScalarsSubscriptionPayload {\n  mutation: MutationType!\n  node: LotsOfScalars\n  updatedFields: [String!]\n  previousValues: LotsOfScalarsPreviousValues\n}\n\ninput LotsOfScalarsSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfScalarsSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfScalarsSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfScalarsSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LotsOfScalarsWhereInput\n}\n\ninput LotsOfScalarsUpdateManyMutationInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ninput LotsOfScalarsWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfScalarsWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfScalarsWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfScalarsWhereInput!]\n  int: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  int_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  int_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  int_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  int_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  int_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  int_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  int_gte: Int\n  string: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  string_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  string_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  string_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  string_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  string_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  string_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  string_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  string_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  string_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  string_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  string_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  string_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  string_not_ends_with: String\n  float: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  float_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  float_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  float_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  float_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  float_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  float_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  float_gte: Float\n  dateTime: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  dateTime_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  dateTime_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  dateTime_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  dateTime_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  dateTime_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  dateTime_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  dateTime_gte: DateTime\n  boolean: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  boolean_not: Boolean\n}\n\ntype LotsOfScalarsWithID implements Node {\n  id: ID!\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LotsOfScalarsWithIDConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LotsOfScalarsWithIDEdge]!\n  aggregate: AggregateLotsOfScalarsWithID!\n}\n\ninput LotsOfScalarsWithIDCreateInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LotsOfScalarsWithIDEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: LotsOfScalarsWithID!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LotsOfScalarsWithIDOrderByInput {\n  id_ASC\n  id_DESC\n  int_ASC\n  int_DESC\n  string_ASC\n  string_DESC\n  float_ASC\n  float_DESC\n  dateTime_ASC\n  dateTime_DESC\n  json_ASC\n  json_DESC\n  boolean_ASC\n  boolean_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype LotsOfScalarsWithIDPreviousValues {\n  id: ID!\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ntype LotsOfScalarsWithIDSubscriptionPayload {\n  mutation: MutationType!\n  node: LotsOfScalarsWithID\n  updatedFields: [String!]\n  previousValues: LotsOfScalarsWithIDPreviousValues\n}\n\ninput LotsOfScalarsWithIDSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfScalarsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfScalarsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfScalarsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LotsOfScalarsWithIDWhereInput\n}\n\ninput LotsOfScalarsWithIDUpdateInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ninput LotsOfScalarsWithIDUpdateManyMutationInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ninput LotsOfScalarsWithIDWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfScalarsWithIDWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfScalarsWithIDWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfScalarsWithIDWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  int: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  int_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  int_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  int_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  int_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  int_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  int_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  int_gte: Int\n  string: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  string_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  string_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  string_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  string_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  string_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  string_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  string_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  string_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  string_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  string_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  string_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  string_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  string_not_ends_with: String\n  float: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  float_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  float_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  float_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  float_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  float_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  float_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  float_gte: Float\n  dateTime: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  dateTime_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  dateTime_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  dateTime_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  dateTime_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  dateTime_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  dateTime_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  dateTime_gte: DateTime\n  boolean: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  boolean_not: Boolean\n}\n\ninput LotsOfScalarsWithIDWhereUniqueInput {\n  id: ID\n}\n\ntype Mutation {\n  createLotsOfScalars(data: LotsOfScalarsCreateInput!): LotsOfScalars!\n  createLotsOfRequiredScalars(data: LotsOfRequiredScalarsCreateInput!): LotsOfRequiredScalars!\n  createLotsOfScalarLists(data: LotsOfScalarListsCreateInput!): LotsOfScalarLists!\n  createLotsOfScalarsWithID(data: LotsOfScalarsWithIDCreateInput!): LotsOfScalarsWithID!\n  createLotsOfRequiredScalarsWithID(data: LotsOfRequiredScalarsWithIDCreateInput!): LotsOfRequiredScalarsWithID!\n  createLotsOfScalarListsWithID(data: LotsOfScalarListsWithIDCreateInput!): LotsOfScalarListsWithID!\n  updateLotsOfScalarsWithID(data: LotsOfScalarsWithIDUpdateInput!, where: LotsOfScalarsWithIDWhereUniqueInput!): LotsOfScalarsWithID\n  updateLotsOfRequiredScalarsWithID(data: LotsOfRequiredScalarsWithIDUpdateInput!, where: LotsOfRequiredScalarsWithIDWhereUniqueInput!): LotsOfRequiredScalarsWithID\n  updateLotsOfScalarListsWithID(data: LotsOfScalarListsWithIDUpdateInput!, where: LotsOfScalarListsWithIDWhereUniqueInput!): LotsOfScalarListsWithID\n  deleteLotsOfScalarsWithID(where: LotsOfScalarsWithIDWhereUniqueInput!): LotsOfScalarsWithID\n  deleteLotsOfRequiredScalarsWithID(where: LotsOfRequiredScalarsWithIDWhereUniqueInput!): LotsOfRequiredScalarsWithID\n  deleteLotsOfScalarListsWithID(where: LotsOfScalarListsWithIDWhereUniqueInput!): LotsOfScalarListsWithID\n  upsertLotsOfScalarsWithID(where: LotsOfScalarsWithIDWhereUniqueInput!, create: LotsOfScalarsWithIDCreateInput!, update: LotsOfScalarsWithIDUpdateInput!): LotsOfScalarsWithID!\n  upsertLotsOfRequiredScalarsWithID(where: LotsOfRequiredScalarsWithIDWhereUniqueInput!, create: LotsOfRequiredScalarsWithIDCreateInput!, update: LotsOfRequiredScalarsWithIDUpdateInput!): LotsOfRequiredScalarsWithID!\n  upsertLotsOfScalarListsWithID(where: LotsOfScalarListsWithIDWhereUniqueInput!, create: LotsOfScalarListsWithIDCreateInput!, update: LotsOfScalarListsWithIDUpdateInput!): LotsOfScalarListsWithID!\n  updateManyLotsOfScalarses(data: LotsOfScalarsUpdateManyMutationInput!, where: LotsOfScalarsWhereInput): BatchPayload!\n  updateManyLotsOfRequiredScalarses(data: LotsOfRequiredScalarsUpdateManyMutationInput!, where: LotsOfRequiredScalarsWhereInput): BatchPayload!\n  updateManyLotsOfScalarListses(data: LotsOfScalarListsUpdateManyMutationInput!, where: LotsOfScalarListsWhereInput): BatchPayload!\n  updateManyLotsOfScalarsWithIDs(data: LotsOfScalarsWithIDUpdateManyMutationInput!, where: LotsOfScalarsWithIDWhereInput): BatchPayload!\n  updateManyLotsOfRequiredScalarsWithIDs(data: LotsOfRequiredScalarsWithIDUpdateManyMutationInput!, where: LotsOfRequiredScalarsWithIDWhereInput): BatchPayload!\n  updateManyLotsOfScalarListsWithIDs(data: LotsOfScalarListsWithIDUpdateManyMutationInput!, where: LotsOfScalarListsWithIDWhereInput): BatchPayload!\n  deleteManyLotsOfScalarses(where: LotsOfScalarsWhereInput): BatchPayload!\n  deleteManyLotsOfRequiredScalarses(where: LotsOfRequiredScalarsWhereInput): BatchPayload!\n  deleteManyLotsOfScalarListses(where: LotsOfScalarListsWhereInput): BatchPayload!\n  deleteManyLotsOfScalarsWithIDs(where: LotsOfScalarsWithIDWhereInput): BatchPayload!\n  deleteManyLotsOfRequiredScalarsWithIDs(where: LotsOfRequiredScalarsWithIDWhereInput): BatchPayload!\n  deleteManyLotsOfScalarListsWithIDs(where: LotsOfScalarListsWithIDWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  lotsOfScalarses(where: LotsOfScalarsWhereInput, orderBy: LotsOfScalarsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LotsOfScalars]!\n  lotsOfRequiredScalarses(where: LotsOfRequiredScalarsWhereInput, orderBy: LotsOfRequiredScalarsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LotsOfRequiredScalars]!\n  lotsOfScalarListses(where: LotsOfScalarListsWhereInput, orderBy: LotsOfScalarListsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LotsOfScalarLists]!\n  lotsOfScalarsWithIDs(where: LotsOfScalarsWithIDWhereInput, orderBy: LotsOfScalarsWithIDOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LotsOfScalarsWithID]!\n  lotsOfRequiredScalarsWithIDs(where: LotsOfRequiredScalarsWithIDWhereInput, orderBy: LotsOfRequiredScalarsWithIDOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LotsOfRequiredScalarsWithID]!\n  lotsOfScalarListsWithIDs(where: LotsOfScalarListsWithIDWhereInput, orderBy: LotsOfScalarListsWithIDOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LotsOfScalarListsWithID]!\n  lotsOfScalarsWithID(where: LotsOfScalarsWithIDWhereUniqueInput!): LotsOfScalarsWithID\n  lotsOfRequiredScalarsWithID(where: LotsOfRequiredScalarsWithIDWhereUniqueInput!): LotsOfRequiredScalarsWithID\n  lotsOfScalarListsWithID(where: LotsOfScalarListsWithIDWhereUniqueInput!): LotsOfScalarListsWithID\n  lotsOfScalarsesConnection(where: LotsOfScalarsWhereInput, orderBy: LotsOfScalarsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LotsOfScalarsConnection!\n  lotsOfRequiredScalarsesConnection(where: LotsOfRequiredScalarsWhereInput, orderBy: LotsOfRequiredScalarsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LotsOfRequiredScalarsConnection!\n  lotsOfScalarListsesConnection(where: LotsOfScalarListsWhereInput, orderBy: LotsOfScalarListsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LotsOfScalarListsConnection!\n  lotsOfScalarsWithIDsConnection(where: LotsOfScalarsWithIDWhereInput, orderBy: LotsOfScalarsWithIDOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LotsOfScalarsWithIDConnection!\n  lotsOfRequiredScalarsWithIDsConnection(where: LotsOfRequiredScalarsWithIDWhereInput, orderBy: LotsOfRequiredScalarsWithIDOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LotsOfRequiredScalarsWithIDConnection!\n  lotsOfScalarListsWithIDsConnection(where: LotsOfScalarListsWithIDWhereInput, orderBy: LotsOfScalarListsWithIDOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LotsOfScalarListsWithIDConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  lotsOfScalars(where: LotsOfScalarsSubscriptionWhereInput): LotsOfScalarsSubscriptionPayload\n  lotsOfRequiredScalars(where: LotsOfRequiredScalarsSubscriptionWhereInput): LotsOfRequiredScalarsSubscriptionPayload\n  lotsOfScalarLists(where: LotsOfScalarListsSubscriptionWhereInput): LotsOfScalarListsSubscriptionPayload\n  lotsOfScalarsWithID(where: LotsOfScalarsWithIDSubscriptionWhereInput): LotsOfScalarsWithIDSubscriptionPayload\n  lotsOfRequiredScalarsWithID(where: LotsOfRequiredScalarsWithIDSubscriptionWhereInput): LotsOfRequiredScalarsWithIDSubscriptionPayload\n  lotsOfScalarListsWithID(where: LotsOfScalarListsWithIDSubscriptionWhereInput): LotsOfScalarListsWithIDSubscriptionPayload\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 106
    },
    {
      "name": "document.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/selfReferencing/document.graphql",
      "sha": "cde6c74a423c87aa2e0024ad9a17f7830a1209d9",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/selfReferencing/document.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/cde6c74a423c87aa2e0024ad9a17f7830a1209d9",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/selfReferencing/document.graphql",
      "content": "type AggregateSelfReferencingA {\n  count: Int!\n}\n\ntype AggregateSelfReferencingAWithId {\n  count: Int!\n}\n\ntype AggregateSelfReferencingB {\n  count: Int!\n}\n\ntype AggregateSelfReferencingBWithId {\n  count: Int!\n}\n\ntype AggregateSelfReferencingC {\n  count: Int!\n}\n\ntype AggregateSelfReferencingCWithId {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createSelfReferencingCWithId(data: SelfReferencingCWithIdCreateInput!): SelfReferencingCWithId!\n  createSelfReferencingA(data: SelfReferencingACreateInput!): SelfReferencingA!\n  createSelfReferencingB(data: SelfReferencingBCreateInput!): SelfReferencingB!\n  createSelfReferencingC(data: SelfReferencingCCreateInput!): SelfReferencingC!\n  createSelfReferencingAWithId(data: SelfReferencingAWithIdCreateInput!): SelfReferencingAWithId!\n  createSelfReferencingBWithId(data: SelfReferencingBWithIdCreateInput!): SelfReferencingBWithId!\n  updateSelfReferencingCWithId(data: SelfReferencingCWithIdUpdateInput!, where: SelfReferencingCWithIdWhereUniqueInput!): SelfReferencingCWithId\n  updateSelfReferencingA(data: SelfReferencingAUpdateInput!, where: SelfReferencingAWhereUniqueInput!): SelfReferencingA\n  updateSelfReferencingB(data: SelfReferencingBUpdateInput!, where: SelfReferencingBWhereUniqueInput!): SelfReferencingB\n  updateSelfReferencingC(data: SelfReferencingCUpdateInput!, where: SelfReferencingCWhereUniqueInput!): SelfReferencingC\n  updateSelfReferencingAWithId(data: SelfReferencingAWithIdUpdateInput!, where: SelfReferencingAWithIdWhereUniqueInput!): SelfReferencingAWithId\n  updateSelfReferencingBWithId(data: SelfReferencingBWithIdUpdateInput!, where: SelfReferencingBWithIdWhereUniqueInput!): SelfReferencingBWithId\n  deleteSelfReferencingCWithId(where: SelfReferencingCWithIdWhereUniqueInput!): SelfReferencingCWithId\n  deleteSelfReferencingA(where: SelfReferencingAWhereUniqueInput!): SelfReferencingA\n  deleteSelfReferencingB(where: SelfReferencingBWhereUniqueInput!): SelfReferencingB\n  deleteSelfReferencingC(where: SelfReferencingCWhereUniqueInput!): SelfReferencingC\n  deleteSelfReferencingAWithId(where: SelfReferencingAWithIdWhereUniqueInput!): SelfReferencingAWithId\n  deleteSelfReferencingBWithId(where: SelfReferencingBWithIdWhereUniqueInput!): SelfReferencingBWithId\n  upsertSelfReferencingCWithId(where: SelfReferencingCWithIdWhereUniqueInput!, create: SelfReferencingCWithIdCreateInput!, update: SelfReferencingCWithIdUpdateInput!): SelfReferencingCWithId!\n  upsertSelfReferencingA(where: SelfReferencingAWhereUniqueInput!, create: SelfReferencingACreateInput!, update: SelfReferencingAUpdateInput!): SelfReferencingA!\n  upsertSelfReferencingB(where: SelfReferencingBWhereUniqueInput!, create: SelfReferencingBCreateInput!, update: SelfReferencingBUpdateInput!): SelfReferencingB!\n  upsertSelfReferencingC(where: SelfReferencingCWhereUniqueInput!, create: SelfReferencingCCreateInput!, update: SelfReferencingCUpdateInput!): SelfReferencingC!\n  upsertSelfReferencingAWithId(where: SelfReferencingAWithIdWhereUniqueInput!, create: SelfReferencingAWithIdCreateInput!, update: SelfReferencingAWithIdUpdateInput!): SelfReferencingAWithId!\n  upsertSelfReferencingBWithId(where: SelfReferencingBWithIdWhereUniqueInput!, create: SelfReferencingBWithIdCreateInput!, update: SelfReferencingBWithIdUpdateInput!): SelfReferencingBWithId!\n  updateManySelfReferencingCWithIds(data: SelfReferencingCWithIdUpdateManyMutationInput!, where: SelfReferencingCWithIdWhereInput): BatchPayload!\n  updateManySelfReferencingAs(data: SelfReferencingAUpdateManyMutationInput!, where: SelfReferencingAWhereInput): BatchPayload!\n  updateManySelfReferencingBs(data: SelfReferencingBUpdateManyMutationInput!, where: SelfReferencingBWhereInput): BatchPayload!\n  updateManySelfReferencingCs(data: SelfReferencingCUpdateManyMutationInput!, where: SelfReferencingCWhereInput): BatchPayload!\n  updateManySelfReferencingAWithIds(data: SelfReferencingAWithIdUpdateManyMutationInput!, where: SelfReferencingAWithIdWhereInput): BatchPayload!\n  updateManySelfReferencingBWithIds(data: SelfReferencingBWithIdUpdateManyMutationInput!, where: SelfReferencingBWithIdWhereInput): BatchPayload!\n  deleteManySelfReferencingCWithIds(where: SelfReferencingCWithIdWhereInput): BatchPayload!\n  deleteManySelfReferencingAs(where: SelfReferencingAWhereInput): BatchPayload!\n  deleteManySelfReferencingBs(where: SelfReferencingBWhereInput): BatchPayload!\n  deleteManySelfReferencingCs(where: SelfReferencingCWhereInput): BatchPayload!\n  deleteManySelfReferencingAWithIds(where: SelfReferencingAWithIdWhereInput): BatchPayload!\n  deleteManySelfReferencingBWithIds(where: SelfReferencingBWithIdWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  selfReferencingCWithIds(where: SelfReferencingCWithIdWhereInput, orderBy: SelfReferencingCWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SelfReferencingCWithId]!\n  selfReferencingAs(where: SelfReferencingAWhereInput, orderBy: SelfReferencingAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SelfReferencingA]!\n  selfReferencingBs(where: SelfReferencingBWhereInput, orderBy: SelfReferencingBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SelfReferencingB]!\n  selfReferencingCs(where: SelfReferencingCWhereInput, orderBy: SelfReferencingCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SelfReferencingC]!\n  selfReferencingAWithIds(where: SelfReferencingAWithIdWhereInput, orderBy: SelfReferencingAWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SelfReferencingAWithId]!\n  selfReferencingBWithIds(where: SelfReferencingBWithIdWhereInput, orderBy: SelfReferencingBWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SelfReferencingBWithId]!\n  selfReferencingCWithId(where: SelfReferencingCWithIdWhereUniqueInput!): SelfReferencingCWithId\n  selfReferencingA(where: SelfReferencingAWhereUniqueInput!): SelfReferencingA\n  selfReferencingB(where: SelfReferencingBWhereUniqueInput!): SelfReferencingB\n  selfReferencingC(where: SelfReferencingCWhereUniqueInput!): SelfReferencingC\n  selfReferencingAWithId(where: SelfReferencingAWithIdWhereUniqueInput!): SelfReferencingAWithId\n  selfReferencingBWithId(where: SelfReferencingBWithIdWhereUniqueInput!): SelfReferencingBWithId\n  selfReferencingCWithIdsConnection(where: SelfReferencingCWithIdWhereInput, orderBy: SelfReferencingCWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SelfReferencingCWithIdConnection!\n  selfReferencingAsConnection(where: SelfReferencingAWhereInput, orderBy: SelfReferencingAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SelfReferencingAConnection!\n  selfReferencingBsConnection(where: SelfReferencingBWhereInput, orderBy: SelfReferencingBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SelfReferencingBConnection!\n  selfReferencingCsConnection(where: SelfReferencingCWhereInput, orderBy: SelfReferencingCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SelfReferencingCConnection!\n  selfReferencingAWithIdsConnection(where: SelfReferencingAWithIdWhereInput, orderBy: SelfReferencingAWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SelfReferencingAWithIdConnection!\n  selfReferencingBWithIdsConnection(where: SelfReferencingBWithIdWhereInput, orderBy: SelfReferencingBWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SelfReferencingBWithIdConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype SelfReferencingA {\n  removeThisId: ID!\n  a: SelfReferencingAWithId!\n  field: Int!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype SelfReferencingAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [SelfReferencingAEdge]!\n  aggregate: AggregateSelfReferencingA!\n}\n\ninput SelfReferencingACreateInput {\n  field: Int!\n  a: SelfReferencingAWithIdCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype SelfReferencingAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: SelfReferencingA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum SelfReferencingAOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n  field_ASC\n  field_DESC\n}\n\ntype SelfReferencingAPreviousValues {\n  removeThisId: ID!\n  field: Int!\n}\n\ntype SelfReferencingASubscriptionPayload {\n  mutation: MutationType!\n  node: SelfReferencingA\n  updatedFields: [String!]\n  previousValues: SelfReferencingAPreviousValues\n}\n\ninput SelfReferencingASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SelfReferencingAWhereInput\n}\n\ninput SelfReferencingAUpdateInput {\n  field: Int\n  a: SelfReferencingAWithIdUpdateOneRequiredInput\n}\n\ninput SelfReferencingAUpdateManyMutationInput {\n  field: Int\n}\n\ninput SelfReferencingAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingAWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n}\n\ninput SelfReferencingAWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype SelfReferencingAWithId implements Node {\n  id: ID!\n  a: SelfReferencingAWithId!\n  field: Int!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype SelfReferencingAWithIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [SelfReferencingAWithIdEdge]!\n  aggregate: AggregateSelfReferencingAWithId!\n}\n\ninput SelfReferencingAWithIdCreateInput {\n  field: Int!\n  a: SelfReferencingAWithIdCreateOneInput!\n}\n\ninput SelfReferencingAWithIdCreateOneInput {\n  create: SelfReferencingAWithIdCreateInput\n  connect: SelfReferencingAWithIdWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype SelfReferencingAWithIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: SelfReferencingAWithId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum SelfReferencingAWithIdOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype SelfReferencingAWithIdPreviousValues {\n  id: ID!\n  field: Int!\n}\n\ntype SelfReferencingAWithIdSubscriptionPayload {\n  mutation: MutationType!\n  node: SelfReferencingAWithId\n  updatedFields: [String!]\n  previousValues: SelfReferencingAWithIdPreviousValues\n}\n\ninput SelfReferencingAWithIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingAWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingAWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingAWithIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SelfReferencingAWithIdWhereInput\n}\n\ninput SelfReferencingAWithIdUpdateDataInput {\n  field: Int\n  a: SelfReferencingAWithIdUpdateOneRequiredInput\n}\n\ninput SelfReferencingAWithIdUpdateInput {\n  field: Int\n  a: SelfReferencingAWithIdUpdateOneRequiredInput\n}\n\ninput SelfReferencingAWithIdUpdateManyMutationInput {\n  field: Int\n}\n\ninput SelfReferencingAWithIdUpdateOneRequiredInput {\n  create: SelfReferencingAWithIdCreateInput\n  connect: SelfReferencingAWithIdWhereUniqueInput\n  update: SelfReferencingAWithIdUpdateDataInput\n  upsert: SelfReferencingAWithIdUpsertNestedInput\n}\n\ninput SelfReferencingAWithIdUpsertNestedInput {\n  update: SelfReferencingAWithIdUpdateDataInput!\n  create: SelfReferencingAWithIdCreateInput!\n}\n\ninput SelfReferencingAWithIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingAWithIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingAWithIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingAWithIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n}\n\ninput SelfReferencingAWithIdWhereUniqueInput {\n  id: ID\n}\n\ntype SelfReferencingB {\n  removeThisId: ID!\n  a: SelfReferencingB\n  field: Int!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype SelfReferencingBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [SelfReferencingBEdge]!\n  aggregate: AggregateSelfReferencingB!\n}\n\ninput SelfReferencingBCreateInput {\n  field: Int!\n  a: SelfReferencingBCreateOneInput\n}\n\ninput SelfReferencingBCreateOneInput {\n  create: SelfReferencingBCreateInput\n  connect: SelfReferencingBWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype SelfReferencingBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: SelfReferencingB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum SelfReferencingBOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n  field_ASC\n  field_DESC\n}\n\ntype SelfReferencingBPreviousValues {\n  removeThisId: ID!\n  field: Int!\n}\n\ntype SelfReferencingBSubscriptionPayload {\n  mutation: MutationType!\n  node: SelfReferencingB\n  updatedFields: [String!]\n  previousValues: SelfReferencingBPreviousValues\n}\n\ninput SelfReferencingBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SelfReferencingBWhereInput\n}\n\ninput SelfReferencingBUpdateDataInput {\n  field: Int\n  a: SelfReferencingBUpdateOneInput\n}\n\ninput SelfReferencingBUpdateInput {\n  field: Int\n  a: SelfReferencingBUpdateOneInput\n}\n\ninput SelfReferencingBUpdateManyMutationInput {\n  field: Int\n}\n\ninput SelfReferencingBUpdateOneInput {\n  create: SelfReferencingBCreateInput\n  connect: SelfReferencingBWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: SelfReferencingBUpdateDataInput\n  upsert: SelfReferencingBUpsertNestedInput\n}\n\ninput SelfReferencingBUpsertNestedInput {\n  update: SelfReferencingBUpdateDataInput!\n  create: SelfReferencingBCreateInput!\n}\n\ninput SelfReferencingBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingBWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n}\n\ninput SelfReferencingBWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype SelfReferencingBWithId implements Node {\n  id: ID!\n  a: SelfReferencingBWithId\n  field: Int!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype SelfReferencingBWithIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [SelfReferencingBWithIdEdge]!\n  aggregate: AggregateSelfReferencingBWithId!\n}\n\ninput SelfReferencingBWithIdCreateInput {\n  field: Int!\n  a: SelfReferencingBWithIdCreateOneInput\n}\n\ninput SelfReferencingBWithIdCreateManyInput {\n  create: [SelfReferencingBWithIdCreateInput!]\n  connect: [SelfReferencingBWithIdWhereUniqueInput!]\n}\n\ninput SelfReferencingBWithIdCreateOneInput {\n  create: SelfReferencingBWithIdCreateInput\n  connect: SelfReferencingBWithIdWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype SelfReferencingBWithIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: SelfReferencingBWithId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum SelfReferencingBWithIdOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype SelfReferencingBWithIdPreviousValues {\n  id: ID!\n  field: Int!\n}\n\ninput SelfReferencingBWithIdScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingBWithIdScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingBWithIdScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingBWithIdScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n}\n\ntype SelfReferencingBWithIdSubscriptionPayload {\n  mutation: MutationType!\n  node: SelfReferencingBWithId\n  updatedFields: [String!]\n  previousValues: SelfReferencingBWithIdPreviousValues\n}\n\ninput SelfReferencingBWithIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingBWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingBWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingBWithIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SelfReferencingBWithIdWhereInput\n}\n\ninput SelfReferencingBWithIdUpdateDataInput {\n  field: Int\n  a: SelfReferencingBWithIdUpdateOneInput\n}\n\ninput SelfReferencingBWithIdUpdateInput {\n  field: Int\n  a: SelfReferencingBWithIdUpdateOneInput\n}\n\ninput SelfReferencingBWithIdUpdateManyDataInput {\n  field: Int\n}\n\ninput SelfReferencingBWithIdUpdateManyInput {\n  create: [SelfReferencingBWithIdCreateInput!]\n  connect: [SelfReferencingBWithIdWhereUniqueInput!]\n  disconnect: [SelfReferencingBWithIdWhereUniqueInput!]\n  delete: [SelfReferencingBWithIdWhereUniqueInput!]\n  update: [SelfReferencingBWithIdUpdateWithWhereUniqueNestedInput!]\n  updateMany: [SelfReferencingBWithIdUpdateManyWithWhereNestedInput!]\n  deleteMany: [SelfReferencingBWithIdScalarWhereInput!]\n  upsert: [SelfReferencingBWithIdUpsertWithWhereUniqueNestedInput!]\n}\n\ninput SelfReferencingBWithIdUpdateManyMutationInput {\n  field: Int\n}\n\ninput SelfReferencingBWithIdUpdateManyWithWhereNestedInput {\n  where: SelfReferencingBWithIdScalarWhereInput!\n  data: SelfReferencingBWithIdUpdateManyDataInput!\n}\n\ninput SelfReferencingBWithIdUpdateOneInput {\n  create: SelfReferencingBWithIdCreateInput\n  connect: SelfReferencingBWithIdWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: SelfReferencingBWithIdUpdateDataInput\n  upsert: SelfReferencingBWithIdUpsertNestedInput\n}\n\ninput SelfReferencingBWithIdUpdateWithWhereUniqueNestedInput {\n  where: SelfReferencingBWithIdWhereUniqueInput!\n  data: SelfReferencingBWithIdUpdateDataInput!\n}\n\ninput SelfReferencingBWithIdUpsertNestedInput {\n  update: SelfReferencingBWithIdUpdateDataInput!\n  create: SelfReferencingBWithIdCreateInput!\n}\n\ninput SelfReferencingBWithIdUpsertWithWhereUniqueNestedInput {\n  where: SelfReferencingBWithIdWhereUniqueInput!\n  update: SelfReferencingBWithIdUpdateDataInput!\n  create: SelfReferencingBWithIdCreateInput!\n}\n\ninput SelfReferencingBWithIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingBWithIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingBWithIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingBWithIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n}\n\ninput SelfReferencingBWithIdWhereUniqueInput {\n  id: ID\n}\n\ntype SelfReferencingC {\n  removeThisId: ID!\n  a(where: SelfReferencingCWhereInput, orderBy: SelfReferencingCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SelfReferencingC!]\n  field: Int!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype SelfReferencingCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [SelfReferencingCEdge]!\n  aggregate: AggregateSelfReferencingC!\n}\n\ninput SelfReferencingCCreateInput {\n  field: Int!\n  a: SelfReferencingCCreateManyInput\n}\n\ninput SelfReferencingCCreateManyInput {\n  create: [SelfReferencingCCreateInput!]\n  connect: [SelfReferencingCWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype SelfReferencingCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: SelfReferencingC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum SelfReferencingCOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n  field_ASC\n  field_DESC\n}\n\ntype SelfReferencingCPreviousValues {\n  removeThisId: ID!\n  field: Int!\n}\n\ninput SelfReferencingCScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingCScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingCScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingCScalarWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n}\n\ntype SelfReferencingCSubscriptionPayload {\n  mutation: MutationType!\n  node: SelfReferencingC\n  updatedFields: [String!]\n  previousValues: SelfReferencingCPreviousValues\n}\n\ninput SelfReferencingCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SelfReferencingCWhereInput\n}\n\ninput SelfReferencingCUpdateDataInput {\n  field: Int\n  a: SelfReferencingCUpdateManyInput\n}\n\ninput SelfReferencingCUpdateInput {\n  field: Int\n  a: SelfReferencingCUpdateManyInput\n}\n\ninput SelfReferencingCUpdateManyDataInput {\n  field: Int\n}\n\ninput SelfReferencingCUpdateManyInput {\n  create: [SelfReferencingCCreateInput!]\n  connect: [SelfReferencingCWhereUniqueInput!]\n  disconnect: [SelfReferencingCWhereUniqueInput!]\n  delete: [SelfReferencingCWhereUniqueInput!]\n  update: [SelfReferencingCUpdateWithWhereUniqueNestedInput!]\n  updateMany: [SelfReferencingCUpdateManyWithWhereNestedInput!]\n  deleteMany: [SelfReferencingCScalarWhereInput!]\n  upsert: [SelfReferencingCUpsertWithWhereUniqueNestedInput!]\n}\n\ninput SelfReferencingCUpdateManyMutationInput {\n  field: Int\n}\n\ninput SelfReferencingCUpdateManyWithWhereNestedInput {\n  where: SelfReferencingCScalarWhereInput!\n  data: SelfReferencingCUpdateManyDataInput!\n}\n\ninput SelfReferencingCUpdateWithWhereUniqueNestedInput {\n  where: SelfReferencingCWhereUniqueInput!\n  data: SelfReferencingCUpdateDataInput!\n}\n\ninput SelfReferencingCUpsertWithWhereUniqueNestedInput {\n  where: SelfReferencingCWhereUniqueInput!\n  update: SelfReferencingCUpdateDataInput!\n  create: SelfReferencingCCreateInput!\n}\n\ninput SelfReferencingCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingCWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n}\n\ninput SelfReferencingCWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype SelfReferencingCWithId implements Node {\n  id: ID!\n  a(where: SelfReferencingBWithIdWhereInput, orderBy: SelfReferencingBWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SelfReferencingBWithId!]\n  field: Int!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype SelfReferencingCWithIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [SelfReferencingCWithIdEdge]!\n  aggregate: AggregateSelfReferencingCWithId!\n}\n\ninput SelfReferencingCWithIdCreateInput {\n  field: Int!\n  a: SelfReferencingBWithIdCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype SelfReferencingCWithIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: SelfReferencingCWithId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum SelfReferencingCWithIdOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n}\n\ntype SelfReferencingCWithIdPreviousValues {\n  id: ID!\n  field: Int!\n}\n\ntype SelfReferencingCWithIdSubscriptionPayload {\n  mutation: MutationType!\n  node: SelfReferencingCWithId\n  updatedFields: [String!]\n  previousValues: SelfReferencingCWithIdPreviousValues\n}\n\ninput SelfReferencingCWithIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingCWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingCWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingCWithIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SelfReferencingCWithIdWhereInput\n}\n\ninput SelfReferencingCWithIdUpdateInput {\n  field: Int\n  a: SelfReferencingBWithIdUpdateManyInput\n}\n\ninput SelfReferencingCWithIdUpdateManyMutationInput {\n  field: Int\n}\n\ninput SelfReferencingCWithIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingCWithIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingCWithIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingCWithIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n}\n\ninput SelfReferencingCWithIdWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  selfReferencingCWithId(where: SelfReferencingCWithIdSubscriptionWhereInput): SelfReferencingCWithIdSubscriptionPayload\n  selfReferencingA(where: SelfReferencingASubscriptionWhereInput): SelfReferencingASubscriptionPayload\n  selfReferencingB(where: SelfReferencingBSubscriptionWhereInput): SelfReferencingBSubscriptionPayload\n  selfReferencingC(where: SelfReferencingCSubscriptionWhereInput): SelfReferencingCSubscriptionPayload\n  selfReferencingAWithId(where: SelfReferencingAWithIdSubscriptionWhereInput): SelfReferencingAWithIdSubscriptionPayload\n  selfReferencingBWithId(where: SelfReferencingBWithIdSubscriptionWhereInput): SelfReferencingBWithIdSubscriptionPayload\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 41,
      "containsCycle": true,
      "numDefinitions": 113
    },
    {
      "name": "document.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/scalars/document.graphql",
      "sha": "44544ba17c9478553c7a223961a5dc2089e8a798",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/scalars/document.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/44544ba17c9478553c7a223961a5dc2089e8a798",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/scalars/document.graphql",
      "content": "type AggregateLotsOfRequiredScalars {\n  count: Int!\n}\n\ntype AggregateLotsOfRequiredScalarsWithID {\n  count: Int!\n}\n\ntype AggregateLotsOfScalarLists {\n  count: Int!\n}\n\ntype AggregateLotsOfScalarListsWithID {\n  count: Int!\n}\n\ntype AggregateLotsOfScalars {\n  count: Int!\n}\n\ntype AggregateLotsOfScalarsWithID {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\nscalar DateTime\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype LotsOfRequiredScalars implements Node {\n  id: ID!\n  int: Int!\n  string: String!\n  float: Float!\n  dateTime: DateTime!\n  json: Json!\n  boolean: Boolean!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LotsOfRequiredScalarsConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LotsOfRequiredScalarsEdge]!\n  aggregate: AggregateLotsOfRequiredScalars!\n}\n\ninput LotsOfRequiredScalarsCreateInput {\n  int: Int!\n  string: String!\n  float: Float!\n  dateTime: DateTime!\n  json: Json!\n  boolean: Boolean!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LotsOfRequiredScalarsEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: LotsOfRequiredScalars!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LotsOfRequiredScalarsOrderByInput {\n  id_ASC\n  id_DESC\n  int_ASC\n  int_DESC\n  string_ASC\n  string_DESC\n  float_ASC\n  float_DESC\n  dateTime_ASC\n  dateTime_DESC\n  json_ASC\n  json_DESC\n  boolean_ASC\n  boolean_DESC\n}\n\ntype LotsOfRequiredScalarsPreviousValues {\n  id: ID!\n  int: Int!\n  string: String!\n  float: Float!\n  dateTime: DateTime!\n  json: Json!\n  boolean: Boolean!\n}\n\ntype LotsOfRequiredScalarsSubscriptionPayload {\n  mutation: MutationType!\n  node: LotsOfRequiredScalars\n  updatedFields: [String!]\n  previousValues: LotsOfRequiredScalarsPreviousValues\n}\n\ninput LotsOfRequiredScalarsSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfRequiredScalarsSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfRequiredScalarsSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfRequiredScalarsSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LotsOfRequiredScalarsWhereInput\n}\n\ninput LotsOfRequiredScalarsUpdateInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ninput LotsOfRequiredScalarsUpdateManyMutationInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ninput LotsOfRequiredScalarsWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfRequiredScalarsWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfRequiredScalarsWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfRequiredScalarsWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  int: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  int_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  int_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  int_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  int_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  int_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  int_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  int_gte: Int\n  string: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  string_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  string_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  string_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  string_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  string_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  string_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  string_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  string_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  string_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  string_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  string_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  string_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  string_not_ends_with: String\n  float: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  float_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  float_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  float_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  float_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  float_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  float_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  float_gte: Float\n  dateTime: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  dateTime_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  dateTime_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  dateTime_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  dateTime_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  dateTime_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  dateTime_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  dateTime_gte: DateTime\n  boolean: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  boolean_not: Boolean\n}\n\ninput LotsOfRequiredScalarsWhereUniqueInput {\n  id: ID\n}\n\ntype LotsOfRequiredScalarsWithID implements Node {\n  id: ID!\n  int: Int!\n  string: String!\n  float: Float!\n  dateTime: DateTime!\n  json: Json!\n  boolean: Boolean!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LotsOfRequiredScalarsWithIDConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LotsOfRequiredScalarsWithIDEdge]!\n  aggregate: AggregateLotsOfRequiredScalarsWithID!\n}\n\ninput LotsOfRequiredScalarsWithIDCreateInput {\n  int: Int!\n  string: String!\n  float: Float!\n  dateTime: DateTime!\n  json: Json!\n  boolean: Boolean!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LotsOfRequiredScalarsWithIDEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: LotsOfRequiredScalarsWithID!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LotsOfRequiredScalarsWithIDOrderByInput {\n  id_ASC\n  id_DESC\n  int_ASC\n  int_DESC\n  string_ASC\n  string_DESC\n  float_ASC\n  float_DESC\n  dateTime_ASC\n  dateTime_DESC\n  json_ASC\n  json_DESC\n  boolean_ASC\n  boolean_DESC\n}\n\ntype LotsOfRequiredScalarsWithIDPreviousValues {\n  id: ID!\n  int: Int!\n  string: String!\n  float: Float!\n  dateTime: DateTime!\n  json: Json!\n  boolean: Boolean!\n}\n\ntype LotsOfRequiredScalarsWithIDSubscriptionPayload {\n  mutation: MutationType!\n  node: LotsOfRequiredScalarsWithID\n  updatedFields: [String!]\n  previousValues: LotsOfRequiredScalarsWithIDPreviousValues\n}\n\ninput LotsOfRequiredScalarsWithIDSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfRequiredScalarsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfRequiredScalarsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfRequiredScalarsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LotsOfRequiredScalarsWithIDWhereInput\n}\n\ninput LotsOfRequiredScalarsWithIDUpdateInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ninput LotsOfRequiredScalarsWithIDUpdateManyMutationInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ninput LotsOfRequiredScalarsWithIDWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfRequiredScalarsWithIDWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfRequiredScalarsWithIDWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfRequiredScalarsWithIDWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  int: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  int_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  int_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  int_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  int_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  int_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  int_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  int_gte: Int\n  string: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  string_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  string_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  string_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  string_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  string_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  string_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  string_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  string_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  string_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  string_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  string_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  string_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  string_not_ends_with: String\n  float: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  float_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  float_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  float_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  float_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  float_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  float_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  float_gte: Float\n  dateTime: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  dateTime_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  dateTime_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  dateTime_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  dateTime_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  dateTime_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  dateTime_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  dateTime_gte: DateTime\n  boolean: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  boolean_not: Boolean\n}\n\ninput LotsOfRequiredScalarsWithIDWhereUniqueInput {\n  id: ID\n}\n\ntype LotsOfScalarLists implements Node {\n  id: ID!\n  int: [Int!]!\n  string: [String!]!\n  float: [Float!]!\n  dateTime: [DateTime!]!\n  json: [Json!]!\n  boolean: [Boolean!]!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LotsOfScalarListsConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LotsOfScalarListsEdge]!\n  aggregate: AggregateLotsOfScalarLists!\n}\n\ninput LotsOfScalarListsCreatebooleanInput {\n  set: [Boolean!]\n}\n\ninput LotsOfScalarListsCreatedateTimeInput {\n  set: [DateTime!]\n}\n\ninput LotsOfScalarListsCreatefloatInput {\n  set: [Float!]\n}\n\ninput LotsOfScalarListsCreateInput {\n  int: LotsOfScalarListsCreateintInput\n  string: LotsOfScalarListsCreatestringInput\n  float: LotsOfScalarListsCreatefloatInput\n  dateTime: LotsOfScalarListsCreatedateTimeInput\n  json: LotsOfScalarListsCreatejsonInput\n  boolean: LotsOfScalarListsCreatebooleanInput\n}\n\ninput LotsOfScalarListsCreateintInput {\n  set: [Int!]\n}\n\ninput LotsOfScalarListsCreatejsonInput {\n  set: [Json!]\n}\n\ninput LotsOfScalarListsCreatestringInput {\n  set: [String!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LotsOfScalarListsEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: LotsOfScalarLists!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LotsOfScalarListsOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype LotsOfScalarListsPreviousValues {\n  id: ID!\n  int: [Int!]!\n  string: [String!]!\n  float: [Float!]!\n  dateTime: [DateTime!]!\n  json: [Json!]!\n  boolean: [Boolean!]!\n}\n\ntype LotsOfScalarListsSubscriptionPayload {\n  mutation: MutationType!\n  node: LotsOfScalarLists\n  updatedFields: [String!]\n  previousValues: LotsOfScalarListsPreviousValues\n}\n\ninput LotsOfScalarListsSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfScalarListsSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfScalarListsSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfScalarListsSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LotsOfScalarListsWhereInput\n}\n\ninput LotsOfScalarListsUpdatebooleanInput {\n  set: [Boolean!]\n}\n\ninput LotsOfScalarListsUpdatedateTimeInput {\n  set: [DateTime!]\n}\n\ninput LotsOfScalarListsUpdatefloatInput {\n  set: [Float!]\n}\n\ninput LotsOfScalarListsUpdateInput {\n  int: LotsOfScalarListsUpdateintInput\n  string: LotsOfScalarListsUpdatestringInput\n  float: LotsOfScalarListsUpdatefloatInput\n  dateTime: LotsOfScalarListsUpdatedateTimeInput\n  json: LotsOfScalarListsUpdatejsonInput\n  boolean: LotsOfScalarListsUpdatebooleanInput\n}\n\ninput LotsOfScalarListsUpdateintInput {\n  set: [Int!]\n}\n\ninput LotsOfScalarListsUpdatejsonInput {\n  set: [Json!]\n}\n\ninput LotsOfScalarListsUpdateManyMutationInput {\n  int: LotsOfScalarListsUpdateintInput\n  string: LotsOfScalarListsUpdatestringInput\n  float: LotsOfScalarListsUpdatefloatInput\n  dateTime: LotsOfScalarListsUpdatedateTimeInput\n  json: LotsOfScalarListsUpdatejsonInput\n  boolean: LotsOfScalarListsUpdatebooleanInput\n}\n\ninput LotsOfScalarListsUpdatestringInput {\n  set: [String!]\n}\n\ninput LotsOfScalarListsWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfScalarListsWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfScalarListsWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfScalarListsWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput LotsOfScalarListsWhereUniqueInput {\n  id: ID\n}\n\ntype LotsOfScalarListsWithID implements Node {\n  id: ID!\n  int: [Int!]!\n  string: [String!]!\n  float: [Float!]!\n  dateTime: [DateTime!]!\n  json: [Json!]!\n  boolean: [Boolean!]!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LotsOfScalarListsWithIDConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LotsOfScalarListsWithIDEdge]!\n  aggregate: AggregateLotsOfScalarListsWithID!\n}\n\ninput LotsOfScalarListsWithIDCreatebooleanInput {\n  set: [Boolean!]\n}\n\ninput LotsOfScalarListsWithIDCreatedateTimeInput {\n  set: [DateTime!]\n}\n\ninput LotsOfScalarListsWithIDCreatefloatInput {\n  set: [Float!]\n}\n\ninput LotsOfScalarListsWithIDCreateInput {\n  int: LotsOfScalarListsWithIDCreateintInput\n  string: LotsOfScalarListsWithIDCreatestringInput\n  float: LotsOfScalarListsWithIDCreatefloatInput\n  dateTime: LotsOfScalarListsWithIDCreatedateTimeInput\n  json: LotsOfScalarListsWithIDCreatejsonInput\n  boolean: LotsOfScalarListsWithIDCreatebooleanInput\n}\n\ninput LotsOfScalarListsWithIDCreateintInput {\n  set: [Int!]\n}\n\ninput LotsOfScalarListsWithIDCreatejsonInput {\n  set: [Json!]\n}\n\ninput LotsOfScalarListsWithIDCreatestringInput {\n  set: [String!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LotsOfScalarListsWithIDEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: LotsOfScalarListsWithID!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LotsOfScalarListsWithIDOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype LotsOfScalarListsWithIDPreviousValues {\n  id: ID!\n  int: [Int!]!\n  string: [String!]!\n  float: [Float!]!\n  dateTime: [DateTime!]!\n  json: [Json!]!\n  boolean: [Boolean!]!\n}\n\ntype LotsOfScalarListsWithIDSubscriptionPayload {\n  mutation: MutationType!\n  node: LotsOfScalarListsWithID\n  updatedFields: [String!]\n  previousValues: LotsOfScalarListsWithIDPreviousValues\n}\n\ninput LotsOfScalarListsWithIDSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfScalarListsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfScalarListsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfScalarListsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LotsOfScalarListsWithIDWhereInput\n}\n\ninput LotsOfScalarListsWithIDUpdatebooleanInput {\n  set: [Boolean!]\n}\n\ninput LotsOfScalarListsWithIDUpdatedateTimeInput {\n  set: [DateTime!]\n}\n\ninput LotsOfScalarListsWithIDUpdatefloatInput {\n  set: [Float!]\n}\n\ninput LotsOfScalarListsWithIDUpdateInput {\n  int: LotsOfScalarListsWithIDUpdateintInput\n  string: LotsOfScalarListsWithIDUpdatestringInput\n  float: LotsOfScalarListsWithIDUpdatefloatInput\n  dateTime: LotsOfScalarListsWithIDUpdatedateTimeInput\n  json: LotsOfScalarListsWithIDUpdatejsonInput\n  boolean: LotsOfScalarListsWithIDUpdatebooleanInput\n}\n\ninput LotsOfScalarListsWithIDUpdateintInput {\n  set: [Int!]\n}\n\ninput LotsOfScalarListsWithIDUpdatejsonInput {\n  set: [Json!]\n}\n\ninput LotsOfScalarListsWithIDUpdateManyMutationInput {\n  int: LotsOfScalarListsWithIDUpdateintInput\n  string: LotsOfScalarListsWithIDUpdatestringInput\n  float: LotsOfScalarListsWithIDUpdatefloatInput\n  dateTime: LotsOfScalarListsWithIDUpdatedateTimeInput\n  json: LotsOfScalarListsWithIDUpdatejsonInput\n  boolean: LotsOfScalarListsWithIDUpdatebooleanInput\n}\n\ninput LotsOfScalarListsWithIDUpdatestringInput {\n  set: [String!]\n}\n\ninput LotsOfScalarListsWithIDWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfScalarListsWithIDWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfScalarListsWithIDWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfScalarListsWithIDWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput LotsOfScalarListsWithIDWhereUniqueInput {\n  id: ID\n}\n\ntype LotsOfScalars implements Node {\n  id: ID!\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LotsOfScalarsConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LotsOfScalarsEdge]!\n  aggregate: AggregateLotsOfScalars!\n}\n\ninput LotsOfScalarsCreateInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LotsOfScalarsEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: LotsOfScalars!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LotsOfScalarsOrderByInput {\n  id_ASC\n  id_DESC\n  int_ASC\n  int_DESC\n  string_ASC\n  string_DESC\n  float_ASC\n  float_DESC\n  dateTime_ASC\n  dateTime_DESC\n  json_ASC\n  json_DESC\n  boolean_ASC\n  boolean_DESC\n}\n\ntype LotsOfScalarsPreviousValues {\n  id: ID!\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ntype LotsOfScalarsSubscriptionPayload {\n  mutation: MutationType!\n  node: LotsOfScalars\n  updatedFields: [String!]\n  previousValues: LotsOfScalarsPreviousValues\n}\n\ninput LotsOfScalarsSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfScalarsSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfScalarsSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfScalarsSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LotsOfScalarsWhereInput\n}\n\ninput LotsOfScalarsUpdateInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ninput LotsOfScalarsUpdateManyMutationInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ninput LotsOfScalarsWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfScalarsWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfScalarsWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfScalarsWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  int: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  int_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  int_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  int_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  int_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  int_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  int_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  int_gte: Int\n  string: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  string_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  string_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  string_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  string_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  string_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  string_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  string_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  string_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  string_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  string_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  string_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  string_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  string_not_ends_with: String\n  float: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  float_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  float_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  float_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  float_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  float_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  float_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  float_gte: Float\n  dateTime: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  dateTime_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  dateTime_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  dateTime_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  dateTime_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  dateTime_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  dateTime_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  dateTime_gte: DateTime\n  boolean: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  boolean_not: Boolean\n}\n\ninput LotsOfScalarsWhereUniqueInput {\n  id: ID\n}\n\ntype LotsOfScalarsWithID implements Node {\n  id: ID!\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LotsOfScalarsWithIDConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LotsOfScalarsWithIDEdge]!\n  aggregate: AggregateLotsOfScalarsWithID!\n}\n\ninput LotsOfScalarsWithIDCreateInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LotsOfScalarsWithIDEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: LotsOfScalarsWithID!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LotsOfScalarsWithIDOrderByInput {\n  id_ASC\n  id_DESC\n  int_ASC\n  int_DESC\n  string_ASC\n  string_DESC\n  float_ASC\n  float_DESC\n  dateTime_ASC\n  dateTime_DESC\n  json_ASC\n  json_DESC\n  boolean_ASC\n  boolean_DESC\n}\n\ntype LotsOfScalarsWithIDPreviousValues {\n  id: ID!\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ntype LotsOfScalarsWithIDSubscriptionPayload {\n  mutation: MutationType!\n  node: LotsOfScalarsWithID\n  updatedFields: [String!]\n  previousValues: LotsOfScalarsWithIDPreviousValues\n}\n\ninput LotsOfScalarsWithIDSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfScalarsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfScalarsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfScalarsWithIDSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LotsOfScalarsWithIDWhereInput\n}\n\ninput LotsOfScalarsWithIDUpdateInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ninput LotsOfScalarsWithIDUpdateManyMutationInput {\n  int: Int\n  string: String\n  float: Float\n  dateTime: DateTime\n  json: Json\n  boolean: Boolean\n}\n\ninput LotsOfScalarsWithIDWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LotsOfScalarsWithIDWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LotsOfScalarsWithIDWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LotsOfScalarsWithIDWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  int: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  int_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  int_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  int_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  int_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  int_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  int_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  int_gte: Int\n  string: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  string_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  string_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  string_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  string_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  string_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  string_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  string_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  string_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  string_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  string_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  string_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  string_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  string_not_ends_with: String\n  float: Float\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  float_not: Float\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  float_in: [Float!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  float_not_in: [Float!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  float_lt: Float\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  float_lte: Float\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  float_gt: Float\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  float_gte: Float\n  dateTime: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  dateTime_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  dateTime_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  dateTime_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  dateTime_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  dateTime_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  dateTime_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  dateTime_gte: DateTime\n  boolean: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  boolean_not: Boolean\n}\n\ninput LotsOfScalarsWithIDWhereUniqueInput {\n  id: ID\n}\n\ntype Mutation {\n  createLotsOfScalars(data: LotsOfScalarsCreateInput!): LotsOfScalars!\n  createLotsOfRequiredScalars(data: LotsOfRequiredScalarsCreateInput!): LotsOfRequiredScalars!\n  createLotsOfScalarLists(data: LotsOfScalarListsCreateInput!): LotsOfScalarLists!\n  createLotsOfScalarsWithID(data: LotsOfScalarsWithIDCreateInput!): LotsOfScalarsWithID!\n  createLotsOfRequiredScalarsWithID(data: LotsOfRequiredScalarsWithIDCreateInput!): LotsOfRequiredScalarsWithID!\n  createLotsOfScalarListsWithID(data: LotsOfScalarListsWithIDCreateInput!): LotsOfScalarListsWithID!\n  updateLotsOfScalars(data: LotsOfScalarsUpdateInput!, where: LotsOfScalarsWhereUniqueInput!): LotsOfScalars\n  updateLotsOfRequiredScalars(data: LotsOfRequiredScalarsUpdateInput!, where: LotsOfRequiredScalarsWhereUniqueInput!): LotsOfRequiredScalars\n  updateLotsOfScalarLists(data: LotsOfScalarListsUpdateInput!, where: LotsOfScalarListsWhereUniqueInput!): LotsOfScalarLists\n  updateLotsOfScalarsWithID(data: LotsOfScalarsWithIDUpdateInput!, where: LotsOfScalarsWithIDWhereUniqueInput!): LotsOfScalarsWithID\n  updateLotsOfRequiredScalarsWithID(data: LotsOfRequiredScalarsWithIDUpdateInput!, where: LotsOfRequiredScalarsWithIDWhereUniqueInput!): LotsOfRequiredScalarsWithID\n  updateLotsOfScalarListsWithID(data: LotsOfScalarListsWithIDUpdateInput!, where: LotsOfScalarListsWithIDWhereUniqueInput!): LotsOfScalarListsWithID\n  deleteLotsOfScalars(where: LotsOfScalarsWhereUniqueInput!): LotsOfScalars\n  deleteLotsOfRequiredScalars(where: LotsOfRequiredScalarsWhereUniqueInput!): LotsOfRequiredScalars\n  deleteLotsOfScalarLists(where: LotsOfScalarListsWhereUniqueInput!): LotsOfScalarLists\n  deleteLotsOfScalarsWithID(where: LotsOfScalarsWithIDWhereUniqueInput!): LotsOfScalarsWithID\n  deleteLotsOfRequiredScalarsWithID(where: LotsOfRequiredScalarsWithIDWhereUniqueInput!): LotsOfRequiredScalarsWithID\n  deleteLotsOfScalarListsWithID(where: LotsOfScalarListsWithIDWhereUniqueInput!): LotsOfScalarListsWithID\n  upsertLotsOfScalars(where: LotsOfScalarsWhereUniqueInput!, create: LotsOfScalarsCreateInput!, update: LotsOfScalarsUpdateInput!): LotsOfScalars!\n  upsertLotsOfRequiredScalars(where: LotsOfRequiredScalarsWhereUniqueInput!, create: LotsOfRequiredScalarsCreateInput!, update: LotsOfRequiredScalarsUpdateInput!): LotsOfRequiredScalars!\n  upsertLotsOfScalarLists(where: LotsOfScalarListsWhereUniqueInput!, create: LotsOfScalarListsCreateInput!, update: LotsOfScalarListsUpdateInput!): LotsOfScalarLists!\n  upsertLotsOfScalarsWithID(where: LotsOfScalarsWithIDWhereUniqueInput!, create: LotsOfScalarsWithIDCreateInput!, update: LotsOfScalarsWithIDUpdateInput!): LotsOfScalarsWithID!\n  upsertLotsOfRequiredScalarsWithID(where: LotsOfRequiredScalarsWithIDWhereUniqueInput!, create: LotsOfRequiredScalarsWithIDCreateInput!, update: LotsOfRequiredScalarsWithIDUpdateInput!): LotsOfRequiredScalarsWithID!\n  upsertLotsOfScalarListsWithID(where: LotsOfScalarListsWithIDWhereUniqueInput!, create: LotsOfScalarListsWithIDCreateInput!, update: LotsOfScalarListsWithIDUpdateInput!): LotsOfScalarListsWithID!\n  updateManyLotsOfScalarses(data: LotsOfScalarsUpdateManyMutationInput!, where: LotsOfScalarsWhereInput): BatchPayload!\n  updateManyLotsOfRequiredScalarses(data: LotsOfRequiredScalarsUpdateManyMutationInput!, where: LotsOfRequiredScalarsWhereInput): BatchPayload!\n  updateManyLotsOfScalarListses(data: LotsOfScalarListsUpdateManyMutationInput!, where: LotsOfScalarListsWhereInput): BatchPayload!\n  updateManyLotsOfScalarsWithIDs(data: LotsOfScalarsWithIDUpdateManyMutationInput!, where: LotsOfScalarsWithIDWhereInput): BatchPayload!\n  updateManyLotsOfRequiredScalarsWithIDs(data: LotsOfRequiredScalarsWithIDUpdateManyMutationInput!, where: LotsOfRequiredScalarsWithIDWhereInput): BatchPayload!\n  updateManyLotsOfScalarListsWithIDs(data: LotsOfScalarListsWithIDUpdateManyMutationInput!, where: LotsOfScalarListsWithIDWhereInput): BatchPayload!\n  deleteManyLotsOfScalarses(where: LotsOfScalarsWhereInput): BatchPayload!\n  deleteManyLotsOfRequiredScalarses(where: LotsOfRequiredScalarsWhereInput): BatchPayload!\n  deleteManyLotsOfScalarListses(where: LotsOfScalarListsWhereInput): BatchPayload!\n  deleteManyLotsOfScalarsWithIDs(where: LotsOfScalarsWithIDWhereInput): BatchPayload!\n  deleteManyLotsOfRequiredScalarsWithIDs(where: LotsOfRequiredScalarsWithIDWhereInput): BatchPayload!\n  deleteManyLotsOfScalarListsWithIDs(where: LotsOfScalarListsWithIDWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  lotsOfScalarses(where: LotsOfScalarsWhereInput, orderBy: LotsOfScalarsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LotsOfScalars]!\n  lotsOfRequiredScalarses(where: LotsOfRequiredScalarsWhereInput, orderBy: LotsOfRequiredScalarsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LotsOfRequiredScalars]!\n  lotsOfScalarListses(where: LotsOfScalarListsWhereInput, orderBy: LotsOfScalarListsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LotsOfScalarLists]!\n  lotsOfScalarsWithIDs(where: LotsOfScalarsWithIDWhereInput, orderBy: LotsOfScalarsWithIDOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LotsOfScalarsWithID]!\n  lotsOfRequiredScalarsWithIDs(where: LotsOfRequiredScalarsWithIDWhereInput, orderBy: LotsOfRequiredScalarsWithIDOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LotsOfRequiredScalarsWithID]!\n  lotsOfScalarListsWithIDs(where: LotsOfScalarListsWithIDWhereInput, orderBy: LotsOfScalarListsWithIDOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LotsOfScalarListsWithID]!\n  lotsOfScalars(where: LotsOfScalarsWhereUniqueInput!): LotsOfScalars\n  lotsOfRequiredScalars(where: LotsOfRequiredScalarsWhereUniqueInput!): LotsOfRequiredScalars\n  lotsOfScalarLists(where: LotsOfScalarListsWhereUniqueInput!): LotsOfScalarLists\n  lotsOfScalarsWithID(where: LotsOfScalarsWithIDWhereUniqueInput!): LotsOfScalarsWithID\n  lotsOfRequiredScalarsWithID(where: LotsOfRequiredScalarsWithIDWhereUniqueInput!): LotsOfRequiredScalarsWithID\n  lotsOfScalarListsWithID(where: LotsOfScalarListsWithIDWhereUniqueInput!): LotsOfScalarListsWithID\n  lotsOfScalarsesConnection(where: LotsOfScalarsWhereInput, orderBy: LotsOfScalarsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LotsOfScalarsConnection!\n  lotsOfRequiredScalarsesConnection(where: LotsOfRequiredScalarsWhereInput, orderBy: LotsOfRequiredScalarsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LotsOfRequiredScalarsConnection!\n  lotsOfScalarListsesConnection(where: LotsOfScalarListsWhereInput, orderBy: LotsOfScalarListsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LotsOfScalarListsConnection!\n  lotsOfScalarsWithIDsConnection(where: LotsOfScalarsWithIDWhereInput, orderBy: LotsOfScalarsWithIDOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LotsOfScalarsWithIDConnection!\n  lotsOfRequiredScalarsWithIDsConnection(where: LotsOfRequiredScalarsWithIDWhereInput, orderBy: LotsOfRequiredScalarsWithIDOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LotsOfRequiredScalarsWithIDConnection!\n  lotsOfScalarListsWithIDsConnection(where: LotsOfScalarListsWithIDWhereInput, orderBy: LotsOfScalarListsWithIDOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LotsOfScalarListsWithIDConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  lotsOfScalars(where: LotsOfScalarsSubscriptionWhereInput): LotsOfScalarsSubscriptionPayload\n  lotsOfRequiredScalars(where: LotsOfRequiredScalarsSubscriptionWhereInput): LotsOfRequiredScalarsSubscriptionPayload\n  lotsOfScalarLists(where: LotsOfScalarListsSubscriptionWhereInput): LotsOfScalarListsSubscriptionPayload\n  lotsOfScalarsWithID(where: LotsOfScalarsWithIDSubscriptionWhereInput): LotsOfScalarsWithIDSubscriptionPayload\n  lotsOfRequiredScalarsWithID(where: LotsOfRequiredScalarsWithIDSubscriptionWhereInput): LotsOfRequiredScalarsWithIDSubscriptionPayload\n  lotsOfScalarListsWithID(where: LotsOfScalarListsWithIDSubscriptionWhereInput): LotsOfScalarListsWithIDSubscriptionPayload\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 112
    },
    {
      "name": "basic.graphql",
      "path": "client/src/codegen/fixtures/basic.graphql",
      "sha": "b40550eec4325576e70a36b44159cd9f92a8f537",
      "url": "https://api.github.com/repositories/162263047/contents/client/src/codegen/fixtures/basic.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/b40550eec4325576e70a36b44159cd9f92a8f537",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/client/src/codegen/fixtures/basic.graphql",
      "content": "type Query {\n  id: ID!\n  custom_required: Number!\n  custom_nullable: Number\n  custom_array_nullable: [Number]\n  custom_array_required: [Number]!\n  custom_with_arg(id: Int!): Number!\n  custom_with_custom_arg(id: Number!): Number!\n  scalar_required: Boolean!\n  scalar_nullable: Boolean\n  scalar_array_nullable: [Boolean]\n  scalar_array_required: [Boolean]!\n  scalar_with_arg(id: Int!): Boolean!\n  scalar_with_custom_arg(id: Number!): Boolean!\n  # commented_field: Boolean!\n}\n\ntype Number {\n  id: ID\n  value: Float\n}",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 2
    },
    {
      "name": "document.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/simple/document.graphql",
      "sha": "68bf2a1c1f7284ddcef77c82f7535743a95bda58",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/simple/document.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/68bf2a1c1f7284ddcef77c82f7535743a95bda58",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/simple/document.graphql",
      "content": "type AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  user(where: UserWhereUniqueInput!): User\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  name: String\n}\n\ninput UserUpdateManyMutationInput {\n  name: String\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 21
    },
    {
      "name": "relational.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/simple/relational.graphql",
      "sha": "8e968bed5d40b5c944c4fd4fcd87fa6f2ba93591",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/simple/relational.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/8e968bed5d40b5c944c4fd4fcd87fa6f2ba93591",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/simple/relational.graphql",
      "content": "type AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  user(where: UserWhereUniqueInput!): User\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  name: String\n}\n\ninput UserUpdateManyMutationInput {\n  name: String\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 22
    },
    {
      "name": "relational.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/relations/relational.graphql",
      "sha": "9651d4665e5be668cbf02f6e9bd33ed19de18011",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/relations/relational.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/9651d4665e5be668cbf02f6e9bd33ed19de18011",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/relations/relational.graphql",
      "content": "type AggregateBillingInfo {\n  count: Int!\n}\n\ntype AggregateBillingInfoWithoutConnection {\n  count: Int!\n}\n\ntype AggregateOptionalDetails {\n  count: Int!\n}\n\ntype AggregateOptionalDetailsWithoutConnection {\n  count: Int!\n}\n\ntype AggregatePost {\n  count: Int!\n}\n\ntype AggregatePostWithoutConnection {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\ntype BillingInfo implements Node {\n  id: ID!\n  account: String!\n  user: User!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BillingInfoConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BillingInfoEdge]!\n  aggregate: AggregateBillingInfo!\n}\n\ninput BillingInfoCreateInput {\n  account: String!\n  user: UserCreateOneWithoutBillingInfoInput!\n}\n\ninput BillingInfoCreateOneWithoutUserInput {\n  create: BillingInfoCreateWithoutUserInput\n  connect: BillingInfoWhereUniqueInput\n}\n\ninput BillingInfoCreateWithoutUserInput {\n  account: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BillingInfoEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BillingInfo!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BillingInfoOrderByInput {\n  id_ASC\n  id_DESC\n  account_ASC\n  account_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BillingInfoPreviousValues {\n  id: ID!\n  account: String!\n}\n\ntype BillingInfoSubscriptionPayload {\n  mutation: MutationType!\n  node: BillingInfo\n  updatedFields: [String!]\n  previousValues: BillingInfoPreviousValues\n}\n\ninput BillingInfoSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BillingInfoSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BillingInfoSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BillingInfoSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BillingInfoWhereInput\n}\n\ninput BillingInfoUpdateInput {\n  account: String\n  user: UserUpdateOneRequiredWithoutBillingInfoInput\n}\n\ninput BillingInfoUpdateManyMutationInput {\n  account: String\n}\n\ninput BillingInfoUpdateOneRequiredWithoutUserInput {\n  create: BillingInfoCreateWithoutUserInput\n  connect: BillingInfoWhereUniqueInput\n  update: BillingInfoUpdateWithoutUserDataInput\n  upsert: BillingInfoUpsertWithoutUserInput\n}\n\ninput BillingInfoUpdateWithoutUserDataInput {\n  account: String\n}\n\ninput BillingInfoUpsertWithoutUserInput {\n  update: BillingInfoUpdateWithoutUserDataInput!\n  create: BillingInfoCreateWithoutUserInput!\n}\n\ninput BillingInfoWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BillingInfoWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BillingInfoWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BillingInfoWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  account: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  account_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  account_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  account_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  account_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  account_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  account_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  account_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  account_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  account_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  account_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  account_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  account_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  account_not_ends_with: String\n  user: UserWhereInput\n}\n\ninput BillingInfoWhereUniqueInput {\n  id: ID\n}\n\ntype BillingInfoWithoutConnection {\n  account: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BillingInfoWithoutConnectionConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BillingInfoWithoutConnectionEdge]!\n  aggregate: AggregateBillingInfoWithoutConnection!\n}\n\ninput BillingInfoWithoutConnectionCreateInput {\n  account: String!\n}\n\ninput BillingInfoWithoutConnectionCreateOneInput {\n  create: BillingInfoWithoutConnectionCreateInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BillingInfoWithoutConnectionEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BillingInfoWithoutConnection!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BillingInfoWithoutConnectionOrderByInput {\n  account_ASC\n  account_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BillingInfoWithoutConnectionPreviousValues {\n  account: String!\n}\n\ntype BillingInfoWithoutConnectionSubscriptionPayload {\n  mutation: MutationType!\n  node: BillingInfoWithoutConnection\n  updatedFields: [String!]\n  previousValues: BillingInfoWithoutConnectionPreviousValues\n}\n\ninput BillingInfoWithoutConnectionSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BillingInfoWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BillingInfoWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BillingInfoWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BillingInfoWithoutConnectionWhereInput\n}\n\ninput BillingInfoWithoutConnectionUpdateDataInput {\n  account: String\n}\n\ninput BillingInfoWithoutConnectionUpdateManyMutationInput {\n  account: String\n}\n\ninput BillingInfoWithoutConnectionUpdateOneRequiredInput {\n  create: BillingInfoWithoutConnectionCreateInput\n  update: BillingInfoWithoutConnectionUpdateDataInput\n  upsert: BillingInfoWithoutConnectionUpsertNestedInput\n}\n\ninput BillingInfoWithoutConnectionUpsertNestedInput {\n  update: BillingInfoWithoutConnectionUpdateDataInput!\n  create: BillingInfoWithoutConnectionCreateInput!\n}\n\ninput BillingInfoWithoutConnectionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BillingInfoWithoutConnectionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BillingInfoWithoutConnectionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BillingInfoWithoutConnectionWhereInput!]\n  account: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  account_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  account_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  account_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  account_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  account_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  account_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  account_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  account_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  account_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  account_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  account_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  account_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  account_not_ends_with: String\n}\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  createPost(data: PostCreateInput!): Post!\n  createBillingInfo(data: BillingInfoCreateInput!): BillingInfo!\n  createOptionalDetails(data: OptionalDetailsCreateInput!): OptionalDetails!\n  createOptionalDetailsWithoutConnection(data: OptionalDetailsWithoutConnectionCreateInput!): OptionalDetailsWithoutConnection!\n  createPostWithoutConnection(data: PostWithoutConnectionCreateInput!): PostWithoutConnection!\n  createBillingInfoWithoutConnection(data: BillingInfoWithoutConnectionCreateInput!): BillingInfoWithoutConnection!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  updateBillingInfo(data: BillingInfoUpdateInput!, where: BillingInfoWhereUniqueInput!): BillingInfo\n  updatePostWithoutConnection(data: PostWithoutConnectionUpdateInput!, where: PostWithoutConnectionWhereUniqueInput!): PostWithoutConnection\n  deleteUser(where: UserWhereUniqueInput!): User\n  deletePost(where: PostWhereUniqueInput!): Post\n  deleteBillingInfo(where: BillingInfoWhereUniqueInput!): BillingInfo\n  deletePostWithoutConnection(where: PostWithoutConnectionWhereUniqueInput!): PostWithoutConnection\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  upsertBillingInfo(where: BillingInfoWhereUniqueInput!, create: BillingInfoCreateInput!, update: BillingInfoUpdateInput!): BillingInfo!\n  upsertPostWithoutConnection(where: PostWithoutConnectionWhereUniqueInput!, create: PostWithoutConnectionCreateInput!, update: PostWithoutConnectionUpdateInput!): PostWithoutConnection!\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  updateManyPosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!\n  updateManyBillingInfoes(data: BillingInfoUpdateManyMutationInput!, where: BillingInfoWhereInput): BatchPayload!\n  updateManyOptionalDetailses(data: OptionalDetailsUpdateManyMutationInput!, where: OptionalDetailsWhereInput): BatchPayload!\n  updateManyOptionalDetailsWithoutConnections(data: OptionalDetailsWithoutConnectionUpdateManyMutationInput!, where: OptionalDetailsWithoutConnectionWhereInput): BatchPayload!\n  updateManyPostWithoutConnections(data: PostWithoutConnectionUpdateManyMutationInput!, where: PostWithoutConnectionWhereInput): BatchPayload!\n  updateManyBillingInfoWithoutConnections(data: BillingInfoWithoutConnectionUpdateManyMutationInput!, where: BillingInfoWithoutConnectionWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyPosts(where: PostWhereInput): BatchPayload!\n  deleteManyBillingInfoes(where: BillingInfoWhereInput): BatchPayload!\n  deleteManyOptionalDetailses(where: OptionalDetailsWhereInput): BatchPayload!\n  deleteManyOptionalDetailsWithoutConnections(where: OptionalDetailsWithoutConnectionWhereInput): BatchPayload!\n  deleteManyPostWithoutConnections(where: PostWithoutConnectionWhereInput): BatchPayload!\n  deleteManyBillingInfoWithoutConnections(where: BillingInfoWithoutConnectionWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\ntype OptionalDetails {\n  text: String!\n  user: User!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OptionalDetailsConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OptionalDetailsEdge]!\n  aggregate: AggregateOptionalDetails!\n}\n\ninput OptionalDetailsCreateInput {\n  text: String!\n  user: UserCreateOneWithoutOptionalDetailsInput!\n}\n\ninput OptionalDetailsCreateOneWithoutUserInput {\n  create: OptionalDetailsCreateWithoutUserInput\n}\n\ninput OptionalDetailsCreateWithoutUserInput {\n  text: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OptionalDetailsEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OptionalDetails!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OptionalDetailsOrderByInput {\n  text_ASC\n  text_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype OptionalDetailsPreviousValues {\n  text: String!\n}\n\ntype OptionalDetailsSubscriptionPayload {\n  mutation: MutationType!\n  node: OptionalDetails\n  updatedFields: [String!]\n  previousValues: OptionalDetailsPreviousValues\n}\n\ninput OptionalDetailsSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OptionalDetailsSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OptionalDetailsSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OptionalDetailsSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OptionalDetailsWhereInput\n}\n\ninput OptionalDetailsUpdateManyMutationInput {\n  text: String\n}\n\ninput OptionalDetailsUpdateOneWithoutUserInput {\n  create: OptionalDetailsCreateWithoutUserInput\n  disconnect: Boolean\n  delete: Boolean\n  update: OptionalDetailsUpdateWithoutUserDataInput\n  upsert: OptionalDetailsUpsertWithoutUserInput\n}\n\ninput OptionalDetailsUpdateWithoutUserDataInput {\n  text: String\n}\n\ninput OptionalDetailsUpsertWithoutUserInput {\n  update: OptionalDetailsUpdateWithoutUserDataInput!\n  create: OptionalDetailsCreateWithoutUserInput!\n}\n\ninput OptionalDetailsWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OptionalDetailsWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OptionalDetailsWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OptionalDetailsWhereInput!]\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n  user: UserWhereInput\n}\n\ntype OptionalDetailsWithoutConnection {\n  text: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OptionalDetailsWithoutConnectionConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OptionalDetailsWithoutConnectionEdge]!\n  aggregate: AggregateOptionalDetailsWithoutConnection!\n}\n\ninput OptionalDetailsWithoutConnectionCreateInput {\n  text: String!\n}\n\ninput OptionalDetailsWithoutConnectionCreateOneInput {\n  create: OptionalDetailsWithoutConnectionCreateInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OptionalDetailsWithoutConnectionEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OptionalDetailsWithoutConnection!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OptionalDetailsWithoutConnectionOrderByInput {\n  text_ASC\n  text_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype OptionalDetailsWithoutConnectionPreviousValues {\n  text: String!\n}\n\ntype OptionalDetailsWithoutConnectionSubscriptionPayload {\n  mutation: MutationType!\n  node: OptionalDetailsWithoutConnection\n  updatedFields: [String!]\n  previousValues: OptionalDetailsWithoutConnectionPreviousValues\n}\n\ninput OptionalDetailsWithoutConnectionSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OptionalDetailsWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OptionalDetailsWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OptionalDetailsWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OptionalDetailsWithoutConnectionWhereInput\n}\n\ninput OptionalDetailsWithoutConnectionUpdateDataInput {\n  text: String\n}\n\ninput OptionalDetailsWithoutConnectionUpdateManyMutationInput {\n  text: String\n}\n\ninput OptionalDetailsWithoutConnectionUpdateOneInput {\n  create: OptionalDetailsWithoutConnectionCreateInput\n  disconnect: Boolean\n  delete: Boolean\n  update: OptionalDetailsWithoutConnectionUpdateDataInput\n  upsert: OptionalDetailsWithoutConnectionUpsertNestedInput\n}\n\ninput OptionalDetailsWithoutConnectionUpsertNestedInput {\n  update: OptionalDetailsWithoutConnectionUpdateDataInput!\n  create: OptionalDetailsWithoutConnectionCreateInput!\n}\n\ninput OptionalDetailsWithoutConnectionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OptionalDetailsWithoutConnectionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OptionalDetailsWithoutConnectionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OptionalDetailsWithoutConnectionWhereInput!]\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Post implements Node {\n  id: ID!\n  text: String!\n  count: Int!\n  user: User!\n  likes(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PostConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  text: String!\n  count: Int!\n  user: UserCreateOneWithoutPostsInput!\n  likes: UserCreateManyWithoutLikesInput\n}\n\ninput PostCreateManyWithoutLikesInput {\n  create: [PostCreateWithoutLikesInput!]\n  connect: [PostWhereUniqueInput!]\n}\n\ninput PostCreateManyWithoutUserInput {\n  create: [PostCreateWithoutUserInput!]\n  connect: [PostWhereUniqueInput!]\n}\n\ninput PostCreateWithoutLikesInput {\n  text: String!\n  count: Int!\n  user: UserCreateOneWithoutPostsInput!\n}\n\ninput PostCreateWithoutUserInput {\n  text: String!\n  count: Int!\n  likes: UserCreateManyWithoutLikesInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PostEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Post!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  text_ASC\n  text_DESC\n  count_ASC\n  count_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  text: String!\n  count: Int!\n}\n\ninput PostScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PostScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n  count: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  count_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  count_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  count_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  count_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  count_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  count_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  count_gte: Int\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PostSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n}\n\ninput PostUpdateInput {\n  text: String\n  count: Int\n  user: UserUpdateOneRequiredWithoutPostsInput\n  likes: UserUpdateManyWithoutLikesInput\n}\n\ninput PostUpdateManyDataInput {\n  text: String\n  count: Int\n}\n\ninput PostUpdateManyMutationInput {\n  text: String\n  count: Int\n}\n\ninput PostUpdateManyWithoutLikesInput {\n  create: [PostCreateWithoutLikesInput!]\n  connect: [PostWhereUniqueInput!]\n  disconnect: [PostWhereUniqueInput!]\n  delete: [PostWhereUniqueInput!]\n  update: [PostUpdateWithWhereUniqueWithoutLikesInput!]\n  updateMany: [PostUpdateManyWithWhereNestedInput!]\n  deleteMany: [PostScalarWhereInput!]\n  upsert: [PostUpsertWithWhereUniqueWithoutLikesInput!]\n}\n\ninput PostUpdateManyWithoutUserInput {\n  create: [PostCreateWithoutUserInput!]\n  connect: [PostWhereUniqueInput!]\n  disconnect: [PostWhereUniqueInput!]\n  delete: [PostWhereUniqueInput!]\n  update: [PostUpdateWithWhereUniqueWithoutUserInput!]\n  updateMany: [PostUpdateManyWithWhereNestedInput!]\n  deleteMany: [PostScalarWhereInput!]\n  upsert: [PostUpsertWithWhereUniqueWithoutUserInput!]\n}\n\ninput PostUpdateManyWithWhereNestedInput {\n  where: PostScalarWhereInput!\n  data: PostUpdateManyDataInput!\n}\n\ninput PostUpdateWithoutLikesDataInput {\n  text: String\n  count: Int\n  user: UserUpdateOneRequiredWithoutPostsInput\n}\n\ninput PostUpdateWithoutUserDataInput {\n  text: String\n  count: Int\n  likes: UserUpdateManyWithoutLikesInput\n}\n\ninput PostUpdateWithWhereUniqueWithoutLikesInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutLikesDataInput!\n}\n\ninput PostUpdateWithWhereUniqueWithoutUserInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutUserDataInput!\n}\n\ninput PostUpsertWithWhereUniqueWithoutLikesInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutLikesDataInput!\n  create: PostCreateWithoutLikesInput!\n}\n\ninput PostUpsertWithWhereUniqueWithoutUserInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutUserDataInput!\n  create: PostCreateWithoutUserInput!\n}\n\ninput PostWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PostWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n  count: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  count_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  count_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  count_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  count_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  count_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  count_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  count_gte: Int\n  user: UserWhereInput\n  likes_every: UserWhereInput\n  likes_some: UserWhereInput\n  likes_none: UserWhereInput\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype PostWithoutConnection implements Node {\n  id: ID!\n  text: String!\n  count: Int!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PostWithoutConnectionConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PostWithoutConnectionEdge]!\n  aggregate: AggregatePostWithoutConnection!\n}\n\ninput PostWithoutConnectionCreateInput {\n  text: String!\n  count: Int!\n}\n\ninput PostWithoutConnectionCreateManyInput {\n  create: [PostWithoutConnectionCreateInput!]\n  connect: [PostWithoutConnectionWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PostWithoutConnectionEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: PostWithoutConnection!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PostWithoutConnectionOrderByInput {\n  id_ASC\n  id_DESC\n  text_ASC\n  text_DESC\n  count_ASC\n  count_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PostWithoutConnectionPreviousValues {\n  id: ID!\n  text: String!\n  count: Int!\n}\n\ninput PostWithoutConnectionScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostWithoutConnectionScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostWithoutConnectionScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PostWithoutConnectionScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n  count: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  count_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  count_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  count_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  count_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  count_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  count_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  count_gte: Int\n}\n\ntype PostWithoutConnectionSubscriptionPayload {\n  mutation: MutationType!\n  node: PostWithoutConnection\n  updatedFields: [String!]\n  previousValues: PostWithoutConnectionPreviousValues\n}\n\ninput PostWithoutConnectionSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PostWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PostWithoutConnectionWhereInput\n}\n\ninput PostWithoutConnectionUpdateDataInput {\n  text: String\n  count: Int\n}\n\ninput PostWithoutConnectionUpdateInput {\n  text: String\n  count: Int\n}\n\ninput PostWithoutConnectionUpdateManyDataInput {\n  text: String\n  count: Int\n}\n\ninput PostWithoutConnectionUpdateManyInput {\n  create: [PostWithoutConnectionCreateInput!]\n  connect: [PostWithoutConnectionWhereUniqueInput!]\n  disconnect: [PostWithoutConnectionWhereUniqueInput!]\n  delete: [PostWithoutConnectionWhereUniqueInput!]\n  update: [PostWithoutConnectionUpdateWithWhereUniqueNestedInput!]\n  updateMany: [PostWithoutConnectionUpdateManyWithWhereNestedInput!]\n  deleteMany: [PostWithoutConnectionScalarWhereInput!]\n  upsert: [PostWithoutConnectionUpsertWithWhereUniqueNestedInput!]\n}\n\ninput PostWithoutConnectionUpdateManyMutationInput {\n  text: String\n  count: Int\n}\n\ninput PostWithoutConnectionUpdateManyWithWhereNestedInput {\n  where: PostWithoutConnectionScalarWhereInput!\n  data: PostWithoutConnectionUpdateManyDataInput!\n}\n\ninput PostWithoutConnectionUpdateWithWhereUniqueNestedInput {\n  where: PostWithoutConnectionWhereUniqueInput!\n  data: PostWithoutConnectionUpdateDataInput!\n}\n\ninput PostWithoutConnectionUpsertWithWhereUniqueNestedInput {\n  where: PostWithoutConnectionWhereUniqueInput!\n  update: PostWithoutConnectionUpdateDataInput!\n  create: PostWithoutConnectionCreateInput!\n}\n\ninput PostWithoutConnectionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostWithoutConnectionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostWithoutConnectionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PostWithoutConnectionWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n  count: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  count_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  count_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  count_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  count_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  count_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  count_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  count_gte: Int\n}\n\ninput PostWithoutConnectionWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  billingInfoes(where: BillingInfoWhereInput, orderBy: BillingInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BillingInfo]!\n  optionalDetailses(where: OptionalDetailsWhereInput, orderBy: OptionalDetailsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OptionalDetails]!\n  optionalDetailsWithoutConnections(where: OptionalDetailsWithoutConnectionWhereInput, orderBy: OptionalDetailsWithoutConnectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OptionalDetailsWithoutConnection]!\n  postWithoutConnections(where: PostWithoutConnectionWhereInput, orderBy: PostWithoutConnectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PostWithoutConnection]!\n  billingInfoWithoutConnections(where: BillingInfoWithoutConnectionWhereInput, orderBy: BillingInfoWithoutConnectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BillingInfoWithoutConnection]!\n  user(where: UserWhereUniqueInput!): User\n  post(where: PostWhereUniqueInput!): Post\n  billingInfo(where: BillingInfoWhereUniqueInput!): BillingInfo\n  postWithoutConnection(where: PostWithoutConnectionWhereUniqueInput!): PostWithoutConnection\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n  billingInfoesConnection(where: BillingInfoWhereInput, orderBy: BillingInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BillingInfoConnection!\n  optionalDetailsesConnection(where: OptionalDetailsWhereInput, orderBy: OptionalDetailsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OptionalDetailsConnection!\n  optionalDetailsWithoutConnectionsConnection(where: OptionalDetailsWithoutConnectionWhereInput, orderBy: OptionalDetailsWithoutConnectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OptionalDetailsWithoutConnectionConnection!\n  postWithoutConnectionsConnection(where: PostWithoutConnectionWhereInput, orderBy: PostWithoutConnectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostWithoutConnectionConnection!\n  billingInfoWithoutConnectionsConnection(where: BillingInfoWithoutConnectionWhereInput, orderBy: BillingInfoWithoutConnectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BillingInfoWithoutConnectionConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n  billingInfo(where: BillingInfoSubscriptionWhereInput): BillingInfoSubscriptionPayload\n  optionalDetails(where: OptionalDetailsSubscriptionWhereInput): OptionalDetailsSubscriptionPayload\n  optionalDetailsWithoutConnection(where: OptionalDetailsWithoutConnectionSubscriptionWhereInput): OptionalDetailsWithoutConnectionSubscriptionPayload\n  postWithoutConnection(where: PostWithoutConnectionSubscriptionWhereInput): PostWithoutConnectionSubscriptionPayload\n  billingInfoWithoutConnection(where: BillingInfoWithoutConnectionSubscriptionWhereInput): BillingInfoWithoutConnectionSubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]\n  postsWithoutConnection(where: PostWithoutConnectionWhereInput, orderBy: PostWithoutConnectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PostWithoutConnection!]\n  billingInfo: BillingInfo!\n  billingInfoWithoutConnection: BillingInfoWithoutConnection!\n  likes(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]\n  optionalDetails: OptionalDetails\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnection\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n  posts: PostCreateManyWithoutUserInput\n  postsWithoutConnection: PostWithoutConnectionCreateManyInput\n  billingInfo: BillingInfoCreateOneWithoutUserInput!\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionCreateOneInput!\n  likes: PostCreateManyWithoutLikesInput\n  optionalDetails: OptionalDetailsCreateOneWithoutUserInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionCreateOneInput\n}\n\ninput UserCreateManyWithoutLikesInput {\n  create: [UserCreateWithoutLikesInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateOneWithoutBillingInfoInput {\n  create: UserCreateWithoutBillingInfoInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutOptionalDetailsInput {\n  create: UserCreateWithoutOptionalDetailsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutBillingInfoInput {\n  name: String!\n  posts: PostCreateManyWithoutUserInput\n  postsWithoutConnection: PostWithoutConnectionCreateManyInput\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionCreateOneInput!\n  likes: PostCreateManyWithoutLikesInput\n  optionalDetails: OptionalDetailsCreateOneWithoutUserInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionCreateOneInput\n}\n\ninput UserCreateWithoutLikesInput {\n  name: String!\n  posts: PostCreateManyWithoutUserInput\n  postsWithoutConnection: PostWithoutConnectionCreateManyInput\n  billingInfo: BillingInfoCreateOneWithoutUserInput!\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionCreateOneInput!\n  optionalDetails: OptionalDetailsCreateOneWithoutUserInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionCreateOneInput\n}\n\ninput UserCreateWithoutOptionalDetailsInput {\n  name: String!\n  posts: PostCreateManyWithoutUserInput\n  postsWithoutConnection: PostWithoutConnectionCreateManyInput\n  billingInfo: BillingInfoCreateOneWithoutUserInput!\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionCreateOneInput!\n  likes: PostCreateManyWithoutLikesInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionCreateOneInput\n}\n\ninput UserCreateWithoutPostsInput {\n  name: String!\n  postsWithoutConnection: PostWithoutConnectionCreateManyInput\n  billingInfo: BillingInfoCreateOneWithoutUserInput!\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionCreateOneInput!\n  likes: PostCreateManyWithoutLikesInput\n  optionalDetails: OptionalDetailsCreateOneWithoutUserInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n}\n\ninput UserScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  name: String\n  posts: PostUpdateManyWithoutUserInput\n  postsWithoutConnection: PostWithoutConnectionUpdateManyInput\n  billingInfo: BillingInfoUpdateOneRequiredWithoutUserInput\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionUpdateOneRequiredInput\n  likes: PostUpdateManyWithoutLikesInput\n  optionalDetails: OptionalDetailsUpdateOneWithoutUserInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionUpdateOneInput\n}\n\ninput UserUpdateManyDataInput {\n  name: String\n}\n\ninput UserUpdateManyMutationInput {\n  name: String\n}\n\ninput UserUpdateManyWithoutLikesInput {\n  create: [UserCreateWithoutLikesInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  delete: [UserWhereUniqueInput!]\n  update: [UserUpdateWithWhereUniqueWithoutLikesInput!]\n  updateMany: [UserUpdateManyWithWhereNestedInput!]\n  deleteMany: [UserScalarWhereInput!]\n  upsert: [UserUpsertWithWhereUniqueWithoutLikesInput!]\n}\n\ninput UserUpdateManyWithWhereNestedInput {\n  where: UserScalarWhereInput!\n  data: UserUpdateManyDataInput!\n}\n\ninput UserUpdateOneRequiredWithoutBillingInfoInput {\n  create: UserCreateWithoutBillingInfoInput\n  connect: UserWhereUniqueInput\n  update: UserUpdateWithoutBillingInfoDataInput\n  upsert: UserUpsertWithoutBillingInfoInput\n}\n\ninput UserUpdateOneRequiredWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n  update: UserUpdateWithoutPostsDataInput\n  upsert: UserUpsertWithoutPostsInput\n}\n\ninput UserUpdateWithoutBillingInfoDataInput {\n  name: String\n  posts: PostUpdateManyWithoutUserInput\n  postsWithoutConnection: PostWithoutConnectionUpdateManyInput\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionUpdateOneRequiredInput\n  likes: PostUpdateManyWithoutLikesInput\n  optionalDetails: OptionalDetailsUpdateOneWithoutUserInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionUpdateOneInput\n}\n\ninput UserUpdateWithoutLikesDataInput {\n  name: String\n  posts: PostUpdateManyWithoutUserInput\n  postsWithoutConnection: PostWithoutConnectionUpdateManyInput\n  billingInfo: BillingInfoUpdateOneRequiredWithoutUserInput\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionUpdateOneRequiredInput\n  optionalDetails: OptionalDetailsUpdateOneWithoutUserInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionUpdateOneInput\n}\n\ninput UserUpdateWithoutPostsDataInput {\n  name: String\n  postsWithoutConnection: PostWithoutConnectionUpdateManyInput\n  billingInfo: BillingInfoUpdateOneRequiredWithoutUserInput\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionUpdateOneRequiredInput\n  likes: PostUpdateManyWithoutLikesInput\n  optionalDetails: OptionalDetailsUpdateOneWithoutUserInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionUpdateOneInput\n}\n\ninput UserUpdateWithWhereUniqueWithoutLikesInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutLikesDataInput!\n}\n\ninput UserUpsertWithoutBillingInfoInput {\n  update: UserUpdateWithoutBillingInfoDataInput!\n  create: UserCreateWithoutBillingInfoInput!\n}\n\ninput UserUpsertWithoutPostsInput {\n  update: UserUpdateWithoutPostsDataInput!\n  create: UserCreateWithoutPostsInput!\n}\n\ninput UserUpsertWithWhereUniqueWithoutLikesInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutLikesDataInput!\n  create: UserCreateWithoutLikesInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  posts_every: PostWhereInput\n  posts_some: PostWhereInput\n  posts_none: PostWhereInput\n  postsWithoutConnection_every: PostWithoutConnectionWhereInput\n  postsWithoutConnection_some: PostWithoutConnectionWhereInput\n  postsWithoutConnection_none: PostWithoutConnectionWhereInput\n  billingInfo: BillingInfoWhereInput\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionWhereInput\n  likes_every: PostWhereInput\n  likes_some: PostWhereInput\n  likes_none: PostWhereInput\n  optionalDetails: OptionalDetailsWhereInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 156
    },
    {
      "name": "relational.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/selfReferencing/relational.graphql",
      "sha": "9e142ba71908606b61ff43811a3180ed5d3c845e",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/selfReferencing/relational.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/9e142ba71908606b61ff43811a3180ed5d3c845e",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/selfReferencing/relational.graphql",
      "content": "type AggregateMultiSelfReferencingB {\n  count: Int!\n}\n\ntype AggregateMultiSelfReferencingBWithId {\n  count: Int!\n}\n\ntype AggregateMultiSelfReferencingC {\n  count: Int!\n}\n\ntype AggregateMultiSelfReferencingCWithId {\n  count: Int!\n}\n\ntype AggregateSelfReferencingA {\n  count: Int!\n}\n\ntype AggregateSelfReferencingAWithId {\n  count: Int!\n}\n\ntype AggregateSelfReferencingB {\n  count: Int!\n}\n\ntype AggregateSelfReferencingBWithId {\n  count: Int!\n}\n\ntype AggregateSelfReferencingC {\n  count: Int!\n}\n\ntype AggregateSelfReferencingCWithId {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype MultiSelfReferencingB {\n  a: MultiSelfReferencingB\n  b: MultiSelfReferencingB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype MultiSelfReferencingBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [MultiSelfReferencingBEdge]!\n  aggregate: AggregateMultiSelfReferencingB!\n}\n\ninput MultiSelfReferencingBCreateInput {\n  a: MultiSelfReferencingBCreateOneWithoutBInput\n  b: MultiSelfReferencingBCreateOneWithoutAInput\n}\n\ninput MultiSelfReferencingBCreateOneWithoutAInput {\n  create: MultiSelfReferencingBCreateWithoutAInput\n}\n\ninput MultiSelfReferencingBCreateOneWithoutBInput {\n  create: MultiSelfReferencingBCreateWithoutBInput\n}\n\ninput MultiSelfReferencingBCreateWithoutAInput {\n  b: MultiSelfReferencingBCreateOneWithoutAInput\n}\n\ninput MultiSelfReferencingBCreateWithoutBInput {\n  a: MultiSelfReferencingBCreateOneWithoutBInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype MultiSelfReferencingBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: MultiSelfReferencingB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum MultiSelfReferencingBOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype MultiSelfReferencingBSubscriptionPayload {\n  mutation: MutationType!\n  node: MultiSelfReferencingB\n  updatedFields: [String!]\n}\n\ninput MultiSelfReferencingBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MultiSelfReferencingBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MultiSelfReferencingBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MultiSelfReferencingBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: MultiSelfReferencingBWhereInput\n}\n\ninput MultiSelfReferencingBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MultiSelfReferencingBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MultiSelfReferencingBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MultiSelfReferencingBWhereInput!]\n  a: MultiSelfReferencingBWhereInput\n  b: MultiSelfReferencingBWhereInput\n}\n\ntype MultiSelfReferencingBWithId implements Node {\n  id: ID!\n  a: MultiSelfReferencingBWithId\n  b: MultiSelfReferencingBWithId\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype MultiSelfReferencingBWithIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [MultiSelfReferencingBWithIdEdge]!\n  aggregate: AggregateMultiSelfReferencingBWithId!\n}\n\ninput MultiSelfReferencingBWithIdCreateInput {\n  a: MultiSelfReferencingBWithIdCreateOneWithoutBInput\n  b: MultiSelfReferencingBWithIdCreateOneWithoutAInput\n}\n\ninput MultiSelfReferencingBWithIdCreateOneWithoutAInput {\n  create: MultiSelfReferencingBWithIdCreateWithoutAInput\n  connect: MultiSelfReferencingBWithIdWhereUniqueInput\n}\n\ninput MultiSelfReferencingBWithIdCreateOneWithoutBInput {\n  create: MultiSelfReferencingBWithIdCreateWithoutBInput\n  connect: MultiSelfReferencingBWithIdWhereUniqueInput\n}\n\ninput MultiSelfReferencingBWithIdCreateWithoutAInput {\n  b: MultiSelfReferencingBWithIdCreateOneWithoutAInput\n}\n\ninput MultiSelfReferencingBWithIdCreateWithoutBInput {\n  a: MultiSelfReferencingBWithIdCreateOneWithoutBInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype MultiSelfReferencingBWithIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: MultiSelfReferencingBWithId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum MultiSelfReferencingBWithIdOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype MultiSelfReferencingBWithIdPreviousValues {\n  id: ID!\n}\n\ntype MultiSelfReferencingBWithIdSubscriptionPayload {\n  mutation: MutationType!\n  node: MultiSelfReferencingBWithId\n  updatedFields: [String!]\n  previousValues: MultiSelfReferencingBWithIdPreviousValues\n}\n\ninput MultiSelfReferencingBWithIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MultiSelfReferencingBWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MultiSelfReferencingBWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MultiSelfReferencingBWithIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: MultiSelfReferencingBWithIdWhereInput\n}\n\ninput MultiSelfReferencingBWithIdUpdateInput {\n  a: MultiSelfReferencingBWithIdUpdateOneWithoutBInput\n  b: MultiSelfReferencingBWithIdUpdateOneWithoutAInput\n}\n\ninput MultiSelfReferencingBWithIdUpdateOneWithoutAInput {\n  create: MultiSelfReferencingBWithIdCreateWithoutAInput\n  connect: MultiSelfReferencingBWithIdWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: MultiSelfReferencingBWithIdUpdateWithoutADataInput\n  upsert: MultiSelfReferencingBWithIdUpsertWithoutAInput\n}\n\ninput MultiSelfReferencingBWithIdUpdateOneWithoutBInput {\n  create: MultiSelfReferencingBWithIdCreateWithoutBInput\n  connect: MultiSelfReferencingBWithIdWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: MultiSelfReferencingBWithIdUpdateWithoutBDataInput\n  upsert: MultiSelfReferencingBWithIdUpsertWithoutBInput\n}\n\ninput MultiSelfReferencingBWithIdUpdateWithoutADataInput {\n  b: MultiSelfReferencingBWithIdUpdateOneWithoutAInput\n}\n\ninput MultiSelfReferencingBWithIdUpdateWithoutBDataInput {\n  a: MultiSelfReferencingBWithIdUpdateOneWithoutBInput\n}\n\ninput MultiSelfReferencingBWithIdUpsertWithoutAInput {\n  update: MultiSelfReferencingBWithIdUpdateWithoutADataInput!\n  create: MultiSelfReferencingBWithIdCreateWithoutAInput!\n}\n\ninput MultiSelfReferencingBWithIdUpsertWithoutBInput {\n  update: MultiSelfReferencingBWithIdUpdateWithoutBDataInput!\n  create: MultiSelfReferencingBWithIdCreateWithoutBInput!\n}\n\ninput MultiSelfReferencingBWithIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MultiSelfReferencingBWithIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MultiSelfReferencingBWithIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MultiSelfReferencingBWithIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  a: MultiSelfReferencingBWithIdWhereInput\n  b: MultiSelfReferencingBWithIdWhereInput\n}\n\ninput MultiSelfReferencingBWithIdWhereUniqueInput {\n  id: ID\n}\n\ntype MultiSelfReferencingC {\n  a(where: MultiSelfReferencingCWhereInput, orderBy: MultiSelfReferencingCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MultiSelfReferencingC!]\n  b(where: MultiSelfReferencingCWhereInput, orderBy: MultiSelfReferencingCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MultiSelfReferencingC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype MultiSelfReferencingCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [MultiSelfReferencingCEdge]!\n  aggregate: AggregateMultiSelfReferencingC!\n}\n\ninput MultiSelfReferencingCCreateInput {\n  a: MultiSelfReferencingCCreateManyWithoutBInput\n  b: MultiSelfReferencingCCreateManyWithoutAInput\n}\n\ninput MultiSelfReferencingCCreateManyWithoutAInput {\n  create: [MultiSelfReferencingCCreateWithoutAInput!]\n}\n\ninput MultiSelfReferencingCCreateManyWithoutBInput {\n  create: [MultiSelfReferencingCCreateWithoutBInput!]\n}\n\ninput MultiSelfReferencingCCreateWithoutAInput {\n  b: MultiSelfReferencingCCreateManyWithoutAInput\n}\n\ninput MultiSelfReferencingCCreateWithoutBInput {\n  a: MultiSelfReferencingCCreateManyWithoutBInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype MultiSelfReferencingCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: MultiSelfReferencingC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum MultiSelfReferencingCOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype MultiSelfReferencingCSubscriptionPayload {\n  mutation: MutationType!\n  node: MultiSelfReferencingC\n  updatedFields: [String!]\n}\n\ninput MultiSelfReferencingCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MultiSelfReferencingCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MultiSelfReferencingCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MultiSelfReferencingCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: MultiSelfReferencingCWhereInput\n}\n\ninput MultiSelfReferencingCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MultiSelfReferencingCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MultiSelfReferencingCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MultiSelfReferencingCWhereInput!]\n  a_every: MultiSelfReferencingCWhereInput\n  a_some: MultiSelfReferencingCWhereInput\n  a_none: MultiSelfReferencingCWhereInput\n  b_every: MultiSelfReferencingCWhereInput\n  b_some: MultiSelfReferencingCWhereInput\n  b_none: MultiSelfReferencingCWhereInput\n}\n\ntype MultiSelfReferencingCWithId implements Node {\n  id: ID!\n  a(where: MultiSelfReferencingCWithIdWhereInput, orderBy: MultiSelfReferencingCWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MultiSelfReferencingCWithId!]\n  b(where: MultiSelfReferencingCWithIdWhereInput, orderBy: MultiSelfReferencingCWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MultiSelfReferencingCWithId!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype MultiSelfReferencingCWithIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [MultiSelfReferencingCWithIdEdge]!\n  aggregate: AggregateMultiSelfReferencingCWithId!\n}\n\ninput MultiSelfReferencingCWithIdCreateInput {\n  a: MultiSelfReferencingCWithIdCreateManyWithoutBInput\n  b: MultiSelfReferencingCWithIdCreateManyWithoutAInput\n}\n\ninput MultiSelfReferencingCWithIdCreateManyWithoutAInput {\n  create: [MultiSelfReferencingCWithIdCreateWithoutAInput!]\n  connect: [MultiSelfReferencingCWithIdWhereUniqueInput!]\n}\n\ninput MultiSelfReferencingCWithIdCreateManyWithoutBInput {\n  create: [MultiSelfReferencingCWithIdCreateWithoutBInput!]\n  connect: [MultiSelfReferencingCWithIdWhereUniqueInput!]\n}\n\ninput MultiSelfReferencingCWithIdCreateWithoutAInput {\n  b: MultiSelfReferencingCWithIdCreateManyWithoutAInput\n}\n\ninput MultiSelfReferencingCWithIdCreateWithoutBInput {\n  a: MultiSelfReferencingCWithIdCreateManyWithoutBInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype MultiSelfReferencingCWithIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: MultiSelfReferencingCWithId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum MultiSelfReferencingCWithIdOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype MultiSelfReferencingCWithIdPreviousValues {\n  id: ID!\n}\n\ninput MultiSelfReferencingCWithIdScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MultiSelfReferencingCWithIdScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MultiSelfReferencingCWithIdScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MultiSelfReferencingCWithIdScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ntype MultiSelfReferencingCWithIdSubscriptionPayload {\n  mutation: MutationType!\n  node: MultiSelfReferencingCWithId\n  updatedFields: [String!]\n  previousValues: MultiSelfReferencingCWithIdPreviousValues\n}\n\ninput MultiSelfReferencingCWithIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MultiSelfReferencingCWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MultiSelfReferencingCWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MultiSelfReferencingCWithIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: MultiSelfReferencingCWithIdWhereInput\n}\n\ninput MultiSelfReferencingCWithIdUpdateInput {\n  a: MultiSelfReferencingCWithIdUpdateManyWithoutBInput\n  b: MultiSelfReferencingCWithIdUpdateManyWithoutAInput\n}\n\ninput MultiSelfReferencingCWithIdUpdateManyWithoutAInput {\n  create: [MultiSelfReferencingCWithIdCreateWithoutAInput!]\n  connect: [MultiSelfReferencingCWithIdWhereUniqueInput!]\n  disconnect: [MultiSelfReferencingCWithIdWhereUniqueInput!]\n  delete: [MultiSelfReferencingCWithIdWhereUniqueInput!]\n  update: [MultiSelfReferencingCWithIdUpdateWithWhereUniqueWithoutAInput!]\n  deleteMany: [MultiSelfReferencingCWithIdScalarWhereInput!]\n  upsert: [MultiSelfReferencingCWithIdUpsertWithWhereUniqueWithoutAInput!]\n}\n\ninput MultiSelfReferencingCWithIdUpdateManyWithoutBInput {\n  create: [MultiSelfReferencingCWithIdCreateWithoutBInput!]\n  connect: [MultiSelfReferencingCWithIdWhereUniqueInput!]\n  disconnect: [MultiSelfReferencingCWithIdWhereUniqueInput!]\n  delete: [MultiSelfReferencingCWithIdWhereUniqueInput!]\n  update: [MultiSelfReferencingCWithIdUpdateWithWhereUniqueWithoutBInput!]\n  deleteMany: [MultiSelfReferencingCWithIdScalarWhereInput!]\n  upsert: [MultiSelfReferencingCWithIdUpsertWithWhereUniqueWithoutBInput!]\n}\n\ninput MultiSelfReferencingCWithIdUpdateWithoutADataInput {\n  b: MultiSelfReferencingCWithIdUpdateManyWithoutAInput\n}\n\ninput MultiSelfReferencingCWithIdUpdateWithoutBDataInput {\n  a: MultiSelfReferencingCWithIdUpdateManyWithoutBInput\n}\n\ninput MultiSelfReferencingCWithIdUpdateWithWhereUniqueWithoutAInput {\n  where: MultiSelfReferencingCWithIdWhereUniqueInput!\n  data: MultiSelfReferencingCWithIdUpdateWithoutADataInput!\n}\n\ninput MultiSelfReferencingCWithIdUpdateWithWhereUniqueWithoutBInput {\n  where: MultiSelfReferencingCWithIdWhereUniqueInput!\n  data: MultiSelfReferencingCWithIdUpdateWithoutBDataInput!\n}\n\ninput MultiSelfReferencingCWithIdUpsertWithWhereUniqueWithoutAInput {\n  where: MultiSelfReferencingCWithIdWhereUniqueInput!\n  update: MultiSelfReferencingCWithIdUpdateWithoutADataInput!\n  create: MultiSelfReferencingCWithIdCreateWithoutAInput!\n}\n\ninput MultiSelfReferencingCWithIdUpsertWithWhereUniqueWithoutBInput {\n  where: MultiSelfReferencingCWithIdWhereUniqueInput!\n  update: MultiSelfReferencingCWithIdUpdateWithoutBDataInput!\n  create: MultiSelfReferencingCWithIdCreateWithoutBInput!\n}\n\ninput MultiSelfReferencingCWithIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MultiSelfReferencingCWithIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MultiSelfReferencingCWithIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MultiSelfReferencingCWithIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  a_every: MultiSelfReferencingCWithIdWhereInput\n  a_some: MultiSelfReferencingCWithIdWhereInput\n  a_none: MultiSelfReferencingCWithIdWhereInput\n  b_every: MultiSelfReferencingCWithIdWhereInput\n  b_some: MultiSelfReferencingCWithIdWhereInput\n  b_none: MultiSelfReferencingCWithIdWhereInput\n}\n\ninput MultiSelfReferencingCWithIdWhereUniqueInput {\n  id: ID\n}\n\ntype Mutation {\n  createSelfReferencingCWithId(data: SelfReferencingCWithIdCreateInput!): SelfReferencingCWithId!\n  createSelfReferencingA(data: SelfReferencingACreateInput!): SelfReferencingA!\n  createMultiSelfReferencingCWithId(data: MultiSelfReferencingCWithIdCreateInput!): MultiSelfReferencingCWithId!\n  createMultiSelfReferencingBWithId(data: MultiSelfReferencingBWithIdCreateInput!): MultiSelfReferencingBWithId!\n  createMultiSelfReferencingC(data: MultiSelfReferencingCCreateInput!): MultiSelfReferencingC!\n  createMultiSelfReferencingB(data: MultiSelfReferencingBCreateInput!): MultiSelfReferencingB!\n  createSelfReferencingB(data: SelfReferencingBCreateInput!): SelfReferencingB!\n  createSelfReferencingBWithId(data: SelfReferencingBWithIdCreateInput!): SelfReferencingBWithId!\n  createSelfReferencingAWithId(data: SelfReferencingAWithIdCreateInput!): SelfReferencingAWithId!\n  createSelfReferencingC(data: SelfReferencingCCreateInput!): SelfReferencingC!\n  updateSelfReferencingCWithId(data: SelfReferencingCWithIdUpdateInput!, where: SelfReferencingCWithIdWhereUniqueInput!): SelfReferencingCWithId\n  updateSelfReferencingA(data: SelfReferencingAUpdateInput!, where: SelfReferencingAWhereUniqueInput!): SelfReferencingA\n  updateMultiSelfReferencingCWithId(data: MultiSelfReferencingCWithIdUpdateInput!, where: MultiSelfReferencingCWithIdWhereUniqueInput!): MultiSelfReferencingCWithId\n  updateMultiSelfReferencingBWithId(data: MultiSelfReferencingBWithIdUpdateInput!, where: MultiSelfReferencingBWithIdWhereUniqueInput!): MultiSelfReferencingBWithId\n  updateSelfReferencingB(data: SelfReferencingBUpdateInput!, where: SelfReferencingBWhereUniqueInput!): SelfReferencingB\n  updateSelfReferencingBWithId(data: SelfReferencingBWithIdUpdateInput!, where: SelfReferencingBWithIdWhereUniqueInput!): SelfReferencingBWithId\n  updateSelfReferencingAWithId(data: SelfReferencingAWithIdUpdateInput!, where: SelfReferencingAWithIdWhereUniqueInput!): SelfReferencingAWithId\n  updateSelfReferencingC(data: SelfReferencingCUpdateInput!, where: SelfReferencingCWhereUniqueInput!): SelfReferencingC\n  deleteSelfReferencingCWithId(where: SelfReferencingCWithIdWhereUniqueInput!): SelfReferencingCWithId\n  deleteSelfReferencingA(where: SelfReferencingAWhereUniqueInput!): SelfReferencingA\n  deleteMultiSelfReferencingCWithId(where: MultiSelfReferencingCWithIdWhereUniqueInput!): MultiSelfReferencingCWithId\n  deleteMultiSelfReferencingBWithId(where: MultiSelfReferencingBWithIdWhereUniqueInput!): MultiSelfReferencingBWithId\n  deleteSelfReferencingB(where: SelfReferencingBWhereUniqueInput!): SelfReferencingB\n  deleteSelfReferencingBWithId(where: SelfReferencingBWithIdWhereUniqueInput!): SelfReferencingBWithId\n  deleteSelfReferencingAWithId(where: SelfReferencingAWithIdWhereUniqueInput!): SelfReferencingAWithId\n  deleteSelfReferencingC(where: SelfReferencingCWhereUniqueInput!): SelfReferencingC\n  upsertSelfReferencingCWithId(where: SelfReferencingCWithIdWhereUniqueInput!, create: SelfReferencingCWithIdCreateInput!, update: SelfReferencingCWithIdUpdateInput!): SelfReferencingCWithId!\n  upsertSelfReferencingA(where: SelfReferencingAWhereUniqueInput!, create: SelfReferencingACreateInput!, update: SelfReferencingAUpdateInput!): SelfReferencingA!\n  upsertMultiSelfReferencingCWithId(where: MultiSelfReferencingCWithIdWhereUniqueInput!, create: MultiSelfReferencingCWithIdCreateInput!, update: MultiSelfReferencingCWithIdUpdateInput!): MultiSelfReferencingCWithId!\n  upsertMultiSelfReferencingBWithId(where: MultiSelfReferencingBWithIdWhereUniqueInput!, create: MultiSelfReferencingBWithIdCreateInput!, update: MultiSelfReferencingBWithIdUpdateInput!): MultiSelfReferencingBWithId!\n  upsertSelfReferencingB(where: SelfReferencingBWhereUniqueInput!, create: SelfReferencingBCreateInput!, update: SelfReferencingBUpdateInput!): SelfReferencingB!\n  upsertSelfReferencingBWithId(where: SelfReferencingBWithIdWhereUniqueInput!, create: SelfReferencingBWithIdCreateInput!, update: SelfReferencingBWithIdUpdateInput!): SelfReferencingBWithId!\n  upsertSelfReferencingAWithId(where: SelfReferencingAWithIdWhereUniqueInput!, create: SelfReferencingAWithIdCreateInput!, update: SelfReferencingAWithIdUpdateInput!): SelfReferencingAWithId!\n  upsertSelfReferencingC(where: SelfReferencingCWhereUniqueInput!, create: SelfReferencingCCreateInput!, update: SelfReferencingCUpdateInput!): SelfReferencingC!\n  updateManySelfReferencingCWithIds(data: SelfReferencingCWithIdUpdateManyMutationInput!, where: SelfReferencingCWithIdWhereInput): BatchPayload!\n  updateManySelfReferencingAs(data: SelfReferencingAUpdateManyMutationInput!, where: SelfReferencingAWhereInput): BatchPayload!\n  updateManySelfReferencingBs(data: SelfReferencingBUpdateManyMutationInput!, where: SelfReferencingBWhereInput): BatchPayload!\n  updateManySelfReferencingBWithIds(data: SelfReferencingBWithIdUpdateManyMutationInput!, where: SelfReferencingBWithIdWhereInput): BatchPayload!\n  updateManySelfReferencingAWithIds(data: SelfReferencingAWithIdUpdateManyMutationInput!, where: SelfReferencingAWithIdWhereInput): BatchPayload!\n  updateManySelfReferencingCs(data: SelfReferencingCUpdateManyMutationInput!, where: SelfReferencingCWhereInput): BatchPayload!\n  deleteManySelfReferencingCWithIds(where: SelfReferencingCWithIdWhereInput): BatchPayload!\n  deleteManySelfReferencingAs(where: SelfReferencingAWhereInput): BatchPayload!\n  deleteManyMultiSelfReferencingCWithIds(where: MultiSelfReferencingCWithIdWhereInput): BatchPayload!\n  deleteManyMultiSelfReferencingBWithIds(where: MultiSelfReferencingBWithIdWhereInput): BatchPayload!\n  deleteManyMultiSelfReferencingCs(where: MultiSelfReferencingCWhereInput): BatchPayload!\n  deleteManyMultiSelfReferencingBs(where: MultiSelfReferencingBWhereInput): BatchPayload!\n  deleteManySelfReferencingBs(where: SelfReferencingBWhereInput): BatchPayload!\n  deleteManySelfReferencingBWithIds(where: SelfReferencingBWithIdWhereInput): BatchPayload!\n  deleteManySelfReferencingAWithIds(where: SelfReferencingAWithIdWhereInput): BatchPayload!\n  deleteManySelfReferencingCs(where: SelfReferencingCWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  selfReferencingCWithIds(where: SelfReferencingCWithIdWhereInput, orderBy: SelfReferencingCWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SelfReferencingCWithId]!\n  selfReferencingAs(where: SelfReferencingAWhereInput, orderBy: SelfReferencingAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SelfReferencingA]!\n  multiSelfReferencingCWithIds(where: MultiSelfReferencingCWithIdWhereInput, orderBy: MultiSelfReferencingCWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MultiSelfReferencingCWithId]!\n  multiSelfReferencingBWithIds(where: MultiSelfReferencingBWithIdWhereInput, orderBy: MultiSelfReferencingBWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MultiSelfReferencingBWithId]!\n  multiSelfReferencingCs(where: MultiSelfReferencingCWhereInput, orderBy: MultiSelfReferencingCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MultiSelfReferencingC]!\n  multiSelfReferencingBs(where: MultiSelfReferencingBWhereInput, orderBy: MultiSelfReferencingBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MultiSelfReferencingB]!\n  selfReferencingBs(where: SelfReferencingBWhereInput, orderBy: SelfReferencingBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SelfReferencingB]!\n  selfReferencingBWithIds(where: SelfReferencingBWithIdWhereInput, orderBy: SelfReferencingBWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SelfReferencingBWithId]!\n  selfReferencingAWithIds(where: SelfReferencingAWithIdWhereInput, orderBy: SelfReferencingAWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SelfReferencingAWithId]!\n  selfReferencingCs(where: SelfReferencingCWhereInput, orderBy: SelfReferencingCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SelfReferencingC]!\n  selfReferencingCWithId(where: SelfReferencingCWithIdWhereUniqueInput!): SelfReferencingCWithId\n  selfReferencingA(where: SelfReferencingAWhereUniqueInput!): SelfReferencingA\n  multiSelfReferencingCWithId(where: MultiSelfReferencingCWithIdWhereUniqueInput!): MultiSelfReferencingCWithId\n  multiSelfReferencingBWithId(where: MultiSelfReferencingBWithIdWhereUniqueInput!): MultiSelfReferencingBWithId\n  selfReferencingB(where: SelfReferencingBWhereUniqueInput!): SelfReferencingB\n  selfReferencingBWithId(where: SelfReferencingBWithIdWhereUniqueInput!): SelfReferencingBWithId\n  selfReferencingAWithId(where: SelfReferencingAWithIdWhereUniqueInput!): SelfReferencingAWithId\n  selfReferencingC(where: SelfReferencingCWhereUniqueInput!): SelfReferencingC\n  selfReferencingCWithIdsConnection(where: SelfReferencingCWithIdWhereInput, orderBy: SelfReferencingCWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SelfReferencingCWithIdConnection!\n  selfReferencingAsConnection(where: SelfReferencingAWhereInput, orderBy: SelfReferencingAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SelfReferencingAConnection!\n  multiSelfReferencingCWithIdsConnection(where: MultiSelfReferencingCWithIdWhereInput, orderBy: MultiSelfReferencingCWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MultiSelfReferencingCWithIdConnection!\n  multiSelfReferencingBWithIdsConnection(where: MultiSelfReferencingBWithIdWhereInput, orderBy: MultiSelfReferencingBWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MultiSelfReferencingBWithIdConnection!\n  multiSelfReferencingCsConnection(where: MultiSelfReferencingCWhereInput, orderBy: MultiSelfReferencingCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MultiSelfReferencingCConnection!\n  multiSelfReferencingBsConnection(where: MultiSelfReferencingBWhereInput, orderBy: MultiSelfReferencingBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MultiSelfReferencingBConnection!\n  selfReferencingBsConnection(where: SelfReferencingBWhereInput, orderBy: SelfReferencingBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SelfReferencingBConnection!\n  selfReferencingBWithIdsConnection(where: SelfReferencingBWithIdWhereInput, orderBy: SelfReferencingBWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SelfReferencingBWithIdConnection!\n  selfReferencingAWithIdsConnection(where: SelfReferencingAWithIdWhereInput, orderBy: SelfReferencingAWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SelfReferencingAWithIdConnection!\n  selfReferencingCsConnection(where: SelfReferencingCWhereInput, orderBy: SelfReferencingCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SelfReferencingCConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype SelfReferencingA implements Node {\n  id: ID!\n  a: SelfReferencingAWithId!\n  field: Int!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype SelfReferencingAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [SelfReferencingAEdge]!\n  aggregate: AggregateSelfReferencingA!\n}\n\ninput SelfReferencingACreateInput {\n  field: Int!\n  a: SelfReferencingAWithIdCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype SelfReferencingAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: SelfReferencingA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum SelfReferencingAOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype SelfReferencingAPreviousValues {\n  id: ID!\n  field: Int!\n}\n\ntype SelfReferencingASubscriptionPayload {\n  mutation: MutationType!\n  node: SelfReferencingA\n  updatedFields: [String!]\n  previousValues: SelfReferencingAPreviousValues\n}\n\ninput SelfReferencingASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SelfReferencingAWhereInput\n}\n\ninput SelfReferencingAUpdateInput {\n  field: Int\n  a: SelfReferencingAWithIdUpdateOneRequiredInput\n}\n\ninput SelfReferencingAUpdateManyMutationInput {\n  field: Int\n}\n\ninput SelfReferencingAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingAWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n  a: SelfReferencingAWithIdWhereInput\n}\n\ninput SelfReferencingAWhereUniqueInput {\n  id: ID\n}\n\ntype SelfReferencingAWithId implements Node {\n  id: ID!\n  a: SelfReferencingAWithId!\n  field: Int!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype SelfReferencingAWithIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [SelfReferencingAWithIdEdge]!\n  aggregate: AggregateSelfReferencingAWithId!\n}\n\ninput SelfReferencingAWithIdCreateInput {\n  field: Int!\n  a: SelfReferencingAWithIdCreateOneInput!\n}\n\ninput SelfReferencingAWithIdCreateOneInput {\n  create: SelfReferencingAWithIdCreateInput\n  connect: SelfReferencingAWithIdWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype SelfReferencingAWithIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: SelfReferencingAWithId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum SelfReferencingAWithIdOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype SelfReferencingAWithIdPreviousValues {\n  id: ID!\n  field: Int!\n}\n\ntype SelfReferencingAWithIdSubscriptionPayload {\n  mutation: MutationType!\n  node: SelfReferencingAWithId\n  updatedFields: [String!]\n  previousValues: SelfReferencingAWithIdPreviousValues\n}\n\ninput SelfReferencingAWithIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingAWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingAWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingAWithIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SelfReferencingAWithIdWhereInput\n}\n\ninput SelfReferencingAWithIdUpdateDataInput {\n  field: Int\n  a: SelfReferencingAWithIdUpdateOneRequiredInput\n}\n\ninput SelfReferencingAWithIdUpdateInput {\n  field: Int\n  a: SelfReferencingAWithIdUpdateOneRequiredInput\n}\n\ninput SelfReferencingAWithIdUpdateManyMutationInput {\n  field: Int\n}\n\ninput SelfReferencingAWithIdUpdateOneRequiredInput {\n  create: SelfReferencingAWithIdCreateInput\n  connect: SelfReferencingAWithIdWhereUniqueInput\n  update: SelfReferencingAWithIdUpdateDataInput\n  upsert: SelfReferencingAWithIdUpsertNestedInput\n}\n\ninput SelfReferencingAWithIdUpsertNestedInput {\n  update: SelfReferencingAWithIdUpdateDataInput!\n  create: SelfReferencingAWithIdCreateInput!\n}\n\ninput SelfReferencingAWithIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingAWithIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingAWithIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingAWithIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n  a: SelfReferencingAWithIdWhereInput\n}\n\ninput SelfReferencingAWithIdWhereUniqueInput {\n  id: ID\n}\n\ntype SelfReferencingB implements Node {\n  id: ID!\n  a: SelfReferencingB\n  field: Int!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype SelfReferencingBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [SelfReferencingBEdge]!\n  aggregate: AggregateSelfReferencingB!\n}\n\ninput SelfReferencingBCreateInput {\n  field: Int!\n  a: SelfReferencingBCreateOneInput\n}\n\ninput SelfReferencingBCreateOneInput {\n  create: SelfReferencingBCreateInput\n  connect: SelfReferencingBWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype SelfReferencingBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: SelfReferencingB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum SelfReferencingBOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype SelfReferencingBPreviousValues {\n  id: ID!\n  field: Int!\n}\n\ntype SelfReferencingBSubscriptionPayload {\n  mutation: MutationType!\n  node: SelfReferencingB\n  updatedFields: [String!]\n  previousValues: SelfReferencingBPreviousValues\n}\n\ninput SelfReferencingBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SelfReferencingBWhereInput\n}\n\ninput SelfReferencingBUpdateDataInput {\n  field: Int\n  a: SelfReferencingBUpdateOneInput\n}\n\ninput SelfReferencingBUpdateInput {\n  field: Int\n  a: SelfReferencingBUpdateOneInput\n}\n\ninput SelfReferencingBUpdateManyMutationInput {\n  field: Int\n}\n\ninput SelfReferencingBUpdateOneInput {\n  create: SelfReferencingBCreateInput\n  connect: SelfReferencingBWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: SelfReferencingBUpdateDataInput\n  upsert: SelfReferencingBUpsertNestedInput\n}\n\ninput SelfReferencingBUpsertNestedInput {\n  update: SelfReferencingBUpdateDataInput!\n  create: SelfReferencingBCreateInput!\n}\n\ninput SelfReferencingBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingBWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n  a: SelfReferencingBWhereInput\n}\n\ninput SelfReferencingBWhereUniqueInput {\n  id: ID\n}\n\ntype SelfReferencingBWithId implements Node {\n  id: ID!\n  a: SelfReferencingBWithId\n  field: Int!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype SelfReferencingBWithIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [SelfReferencingBWithIdEdge]!\n  aggregate: AggregateSelfReferencingBWithId!\n}\n\ninput SelfReferencingBWithIdCreateInput {\n  field: Int!\n  a: SelfReferencingBWithIdCreateOneInput\n}\n\ninput SelfReferencingBWithIdCreateManyInput {\n  create: [SelfReferencingBWithIdCreateInput!]\n  connect: [SelfReferencingBWithIdWhereUniqueInput!]\n}\n\ninput SelfReferencingBWithIdCreateOneInput {\n  create: SelfReferencingBWithIdCreateInput\n  connect: SelfReferencingBWithIdWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype SelfReferencingBWithIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: SelfReferencingBWithId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum SelfReferencingBWithIdOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype SelfReferencingBWithIdPreviousValues {\n  id: ID!\n  field: Int!\n}\n\ninput SelfReferencingBWithIdScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingBWithIdScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingBWithIdScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingBWithIdScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n}\n\ntype SelfReferencingBWithIdSubscriptionPayload {\n  mutation: MutationType!\n  node: SelfReferencingBWithId\n  updatedFields: [String!]\n  previousValues: SelfReferencingBWithIdPreviousValues\n}\n\ninput SelfReferencingBWithIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingBWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingBWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingBWithIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SelfReferencingBWithIdWhereInput\n}\n\ninput SelfReferencingBWithIdUpdateDataInput {\n  field: Int\n  a: SelfReferencingBWithIdUpdateOneInput\n}\n\ninput SelfReferencingBWithIdUpdateInput {\n  field: Int\n  a: SelfReferencingBWithIdUpdateOneInput\n}\n\ninput SelfReferencingBWithIdUpdateManyDataInput {\n  field: Int\n}\n\ninput SelfReferencingBWithIdUpdateManyInput {\n  create: [SelfReferencingBWithIdCreateInput!]\n  connect: [SelfReferencingBWithIdWhereUniqueInput!]\n  disconnect: [SelfReferencingBWithIdWhereUniqueInput!]\n  delete: [SelfReferencingBWithIdWhereUniqueInput!]\n  update: [SelfReferencingBWithIdUpdateWithWhereUniqueNestedInput!]\n  updateMany: [SelfReferencingBWithIdUpdateManyWithWhereNestedInput!]\n  deleteMany: [SelfReferencingBWithIdScalarWhereInput!]\n  upsert: [SelfReferencingBWithIdUpsertWithWhereUniqueNestedInput!]\n}\n\ninput SelfReferencingBWithIdUpdateManyMutationInput {\n  field: Int\n}\n\ninput SelfReferencingBWithIdUpdateManyWithWhereNestedInput {\n  where: SelfReferencingBWithIdScalarWhereInput!\n  data: SelfReferencingBWithIdUpdateManyDataInput!\n}\n\ninput SelfReferencingBWithIdUpdateOneInput {\n  create: SelfReferencingBWithIdCreateInput\n  connect: SelfReferencingBWithIdWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: SelfReferencingBWithIdUpdateDataInput\n  upsert: SelfReferencingBWithIdUpsertNestedInput\n}\n\ninput SelfReferencingBWithIdUpdateWithWhereUniqueNestedInput {\n  where: SelfReferencingBWithIdWhereUniqueInput!\n  data: SelfReferencingBWithIdUpdateDataInput!\n}\n\ninput SelfReferencingBWithIdUpsertNestedInput {\n  update: SelfReferencingBWithIdUpdateDataInput!\n  create: SelfReferencingBWithIdCreateInput!\n}\n\ninput SelfReferencingBWithIdUpsertWithWhereUniqueNestedInput {\n  where: SelfReferencingBWithIdWhereUniqueInput!\n  update: SelfReferencingBWithIdUpdateDataInput!\n  create: SelfReferencingBWithIdCreateInput!\n}\n\ninput SelfReferencingBWithIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingBWithIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingBWithIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingBWithIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n  a: SelfReferencingBWithIdWhereInput\n}\n\ninput SelfReferencingBWithIdWhereUniqueInput {\n  id: ID\n}\n\ntype SelfReferencingC implements Node {\n  id: ID!\n  a(where: SelfReferencingCWhereInput, orderBy: SelfReferencingCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SelfReferencingC!]\n  field: Int!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype SelfReferencingCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [SelfReferencingCEdge]!\n  aggregate: AggregateSelfReferencingC!\n}\n\ninput SelfReferencingCCreateInput {\n  field: Int!\n  a: SelfReferencingCCreateManyInput\n}\n\ninput SelfReferencingCCreateManyInput {\n  create: [SelfReferencingCCreateInput!]\n  connect: [SelfReferencingCWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype SelfReferencingCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: SelfReferencingC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum SelfReferencingCOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype SelfReferencingCPreviousValues {\n  id: ID!\n  field: Int!\n}\n\ninput SelfReferencingCScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingCScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingCScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingCScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n}\n\ntype SelfReferencingCSubscriptionPayload {\n  mutation: MutationType!\n  node: SelfReferencingC\n  updatedFields: [String!]\n  previousValues: SelfReferencingCPreviousValues\n}\n\ninput SelfReferencingCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SelfReferencingCWhereInput\n}\n\ninput SelfReferencingCUpdateDataInput {\n  field: Int\n  a: SelfReferencingCUpdateManyInput\n}\n\ninput SelfReferencingCUpdateInput {\n  field: Int\n  a: SelfReferencingCUpdateManyInput\n}\n\ninput SelfReferencingCUpdateManyDataInput {\n  field: Int\n}\n\ninput SelfReferencingCUpdateManyInput {\n  create: [SelfReferencingCCreateInput!]\n  connect: [SelfReferencingCWhereUniqueInput!]\n  disconnect: [SelfReferencingCWhereUniqueInput!]\n  delete: [SelfReferencingCWhereUniqueInput!]\n  update: [SelfReferencingCUpdateWithWhereUniqueNestedInput!]\n  updateMany: [SelfReferencingCUpdateManyWithWhereNestedInput!]\n  deleteMany: [SelfReferencingCScalarWhereInput!]\n  upsert: [SelfReferencingCUpsertWithWhereUniqueNestedInput!]\n}\n\ninput SelfReferencingCUpdateManyMutationInput {\n  field: Int\n}\n\ninput SelfReferencingCUpdateManyWithWhereNestedInput {\n  where: SelfReferencingCScalarWhereInput!\n  data: SelfReferencingCUpdateManyDataInput!\n}\n\ninput SelfReferencingCUpdateWithWhereUniqueNestedInput {\n  where: SelfReferencingCWhereUniqueInput!\n  data: SelfReferencingCUpdateDataInput!\n}\n\ninput SelfReferencingCUpsertWithWhereUniqueNestedInput {\n  where: SelfReferencingCWhereUniqueInput!\n  update: SelfReferencingCUpdateDataInput!\n  create: SelfReferencingCCreateInput!\n}\n\ninput SelfReferencingCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingCWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n  a_every: SelfReferencingCWhereInput\n  a_some: SelfReferencingCWhereInput\n  a_none: SelfReferencingCWhereInput\n}\n\ninput SelfReferencingCWhereUniqueInput {\n  id: ID\n}\n\ntype SelfReferencingCWithId implements Node {\n  id: ID!\n  a(where: SelfReferencingBWithIdWhereInput, orderBy: SelfReferencingBWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SelfReferencingBWithId!]\n  field: Int!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype SelfReferencingCWithIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [SelfReferencingCWithIdEdge]!\n  aggregate: AggregateSelfReferencingCWithId!\n}\n\ninput SelfReferencingCWithIdCreateInput {\n  field: Int!\n  a: SelfReferencingBWithIdCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype SelfReferencingCWithIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: SelfReferencingCWithId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum SelfReferencingCWithIdOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype SelfReferencingCWithIdPreviousValues {\n  id: ID!\n  field: Int!\n}\n\ntype SelfReferencingCWithIdSubscriptionPayload {\n  mutation: MutationType!\n  node: SelfReferencingCWithId\n  updatedFields: [String!]\n  previousValues: SelfReferencingCWithIdPreviousValues\n}\n\ninput SelfReferencingCWithIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingCWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingCWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingCWithIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SelfReferencingCWithIdWhereInput\n}\n\ninput SelfReferencingCWithIdUpdateInput {\n  field: Int\n  a: SelfReferencingBWithIdUpdateManyInput\n}\n\ninput SelfReferencingCWithIdUpdateManyMutationInput {\n  field: Int\n}\n\ninput SelfReferencingCWithIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SelfReferencingCWithIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SelfReferencingCWithIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [SelfReferencingCWithIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: Int\n  a_every: SelfReferencingBWithIdWhereInput\n  a_some: SelfReferencingBWithIdWhereInput\n  a_none: SelfReferencingBWithIdWhereInput\n}\n\ninput SelfReferencingCWithIdWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  selfReferencingCWithId(where: SelfReferencingCWithIdSubscriptionWhereInput): SelfReferencingCWithIdSubscriptionPayload\n  selfReferencingA(where: SelfReferencingASubscriptionWhereInput): SelfReferencingASubscriptionPayload\n  multiSelfReferencingCWithId(where: MultiSelfReferencingCWithIdSubscriptionWhereInput): MultiSelfReferencingCWithIdSubscriptionPayload\n  multiSelfReferencingBWithId(where: MultiSelfReferencingBWithIdSubscriptionWhereInput): MultiSelfReferencingBWithIdSubscriptionPayload\n  multiSelfReferencingC(where: MultiSelfReferencingCSubscriptionWhereInput): MultiSelfReferencingCSubscriptionPayload\n  multiSelfReferencingB(where: MultiSelfReferencingBSubscriptionWhereInput): MultiSelfReferencingBSubscriptionPayload\n  selfReferencingB(where: SelfReferencingBSubscriptionWhereInput): SelfReferencingBSubscriptionPayload\n  selfReferencingBWithId(where: SelfReferencingBWithIdSubscriptionWhereInput): SelfReferencingBWithIdSubscriptionPayload\n  selfReferencingAWithId(where: SelfReferencingAWithIdSubscriptionWhereInput): SelfReferencingAWithIdSubscriptionPayload\n  selfReferencingC(where: SelfReferencingCSubscriptionWhereInput): SelfReferencingCSubscriptionPayload\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 187
    },
    {
      "name": "document.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/relations/document.graphql",
      "sha": "78f45a11e759f9159493ca8343ecfde363d1968e",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/relations/document.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/78f45a11e759f9159493ca8343ecfde363d1968e",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/relations/document.graphql",
      "content": "type AggregateBillingInfo {\n  count: Int!\n}\n\ntype AggregateBillingInfoWithoutConnection {\n  count: Int!\n}\n\ntype AggregateOptionalDetails {\n  count: Int!\n}\n\ntype AggregateOptionalDetailsWithoutConnection {\n  count: Int!\n}\n\ntype AggregatePost {\n  count: Int!\n}\n\ntype AggregatePostWithoutConnection {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\ntype BillingInfo implements Node {\n  id: ID!\n  account: String!\n  user: User!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BillingInfoConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BillingInfoEdge]!\n  aggregate: AggregateBillingInfo!\n}\n\ninput BillingInfoCreateInput {\n  account: String!\n  user: UserCreateOneWithoutBillingInfoInput!\n}\n\ninput BillingInfoCreateOneWithoutUserInput {\n  create: BillingInfoCreateWithoutUserInput\n  connect: BillingInfoWhereUniqueInput\n}\n\ninput BillingInfoCreateWithoutUserInput {\n  account: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BillingInfoEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BillingInfo!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BillingInfoOrderByInput {\n  id_ASC\n  id_DESC\n  account_ASC\n  account_DESC\n}\n\ntype BillingInfoPreviousValues {\n  id: ID!\n  account: String!\n}\n\ntype BillingInfoSubscriptionPayload {\n  mutation: MutationType!\n  node: BillingInfo\n  updatedFields: [String!]\n  previousValues: BillingInfoPreviousValues\n}\n\ninput BillingInfoSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BillingInfoSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BillingInfoSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BillingInfoSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BillingInfoWhereInput\n}\n\ninput BillingInfoUpdateInput {\n  account: String\n  user: UserUpdateOneRequiredWithoutBillingInfoInput\n}\n\ninput BillingInfoUpdateManyMutationInput {\n  account: String\n}\n\ninput BillingInfoUpdateOneRequiredWithoutUserInput {\n  create: BillingInfoCreateWithoutUserInput\n  connect: BillingInfoWhereUniqueInput\n  update: BillingInfoUpdateWithoutUserDataInput\n  upsert: BillingInfoUpsertWithoutUserInput\n}\n\ninput BillingInfoUpdateWithoutUserDataInput {\n  account: String\n}\n\ninput BillingInfoUpsertWithoutUserInput {\n  update: BillingInfoUpdateWithoutUserDataInput!\n  create: BillingInfoCreateWithoutUserInput!\n}\n\ninput BillingInfoWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BillingInfoWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BillingInfoWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BillingInfoWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  account: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  account_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  account_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  account_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  account_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  account_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  account_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  account_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  account_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  account_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  account_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  account_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  account_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  account_not_ends_with: String\n}\n\ninput BillingInfoWhereUniqueInput {\n  id: ID\n}\n\ntype BillingInfoWithoutConnection {\n  removeThisId: ID!\n  account: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BillingInfoWithoutConnectionConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BillingInfoWithoutConnectionEdge]!\n  aggregate: AggregateBillingInfoWithoutConnection!\n}\n\ninput BillingInfoWithoutConnectionCreateInput {\n  account: String!\n}\n\ninput BillingInfoWithoutConnectionCreateOneInput {\n  create: BillingInfoWithoutConnectionCreateInput\n  connect: BillingInfoWithoutConnectionWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BillingInfoWithoutConnectionEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BillingInfoWithoutConnection!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BillingInfoWithoutConnectionOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n  account_ASC\n  account_DESC\n}\n\ntype BillingInfoWithoutConnectionPreviousValues {\n  removeThisId: ID!\n  account: String!\n}\n\ntype BillingInfoWithoutConnectionSubscriptionPayload {\n  mutation: MutationType!\n  node: BillingInfoWithoutConnection\n  updatedFields: [String!]\n  previousValues: BillingInfoWithoutConnectionPreviousValues\n}\n\ninput BillingInfoWithoutConnectionSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BillingInfoWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BillingInfoWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BillingInfoWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BillingInfoWithoutConnectionWhereInput\n}\n\ninput BillingInfoWithoutConnectionUpdateDataInput {\n  account: String\n}\n\ninput BillingInfoWithoutConnectionUpdateInput {\n  account: String\n}\n\ninput BillingInfoWithoutConnectionUpdateManyMutationInput {\n  account: String\n}\n\ninput BillingInfoWithoutConnectionUpdateOneRequiredInput {\n  create: BillingInfoWithoutConnectionCreateInput\n  connect: BillingInfoWithoutConnectionWhereUniqueInput\n  update: BillingInfoWithoutConnectionUpdateDataInput\n  upsert: BillingInfoWithoutConnectionUpsertNestedInput\n}\n\ninput BillingInfoWithoutConnectionUpsertNestedInput {\n  update: BillingInfoWithoutConnectionUpdateDataInput!\n  create: BillingInfoWithoutConnectionCreateInput!\n}\n\ninput BillingInfoWithoutConnectionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BillingInfoWithoutConnectionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BillingInfoWithoutConnectionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BillingInfoWithoutConnectionWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  account: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  account_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  account_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  account_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  account_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  account_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  account_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  account_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  account_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  account_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  account_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  account_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  account_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  account_not_ends_with: String\n}\n\ninput BillingInfoWithoutConnectionWhereUniqueInput {\n  removeThisId: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  createPost(data: PostCreateInput!): Post!\n  createBillingInfo(data: BillingInfoCreateInput!): BillingInfo!\n  createOptionalDetails(data: OptionalDetailsCreateInput!): OptionalDetails!\n  createOptionalDetailsWithoutConnection(data: OptionalDetailsWithoutConnectionCreateInput!): OptionalDetailsWithoutConnection!\n  createBillingInfoWithoutConnection(data: BillingInfoWithoutConnectionCreateInput!): BillingInfoWithoutConnection!\n  createPostWithoutConnection(data: PostWithoutConnectionCreateInput!): PostWithoutConnection!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  updateBillingInfo(data: BillingInfoUpdateInput!, where: BillingInfoWhereUniqueInput!): BillingInfo\n  updateOptionalDetails(data: OptionalDetailsUpdateInput!, where: OptionalDetailsWhereUniqueInput!): OptionalDetails\n  updateOptionalDetailsWithoutConnection(data: OptionalDetailsWithoutConnectionUpdateInput!, where: OptionalDetailsWithoutConnectionWhereUniqueInput!): OptionalDetailsWithoutConnection\n  updateBillingInfoWithoutConnection(data: BillingInfoWithoutConnectionUpdateInput!, where: BillingInfoWithoutConnectionWhereUniqueInput!): BillingInfoWithoutConnection\n  updatePostWithoutConnection(data: PostWithoutConnectionUpdateInput!, where: PostWithoutConnectionWhereUniqueInput!): PostWithoutConnection\n  deleteUser(where: UserWhereUniqueInput!): User\n  deletePost(where: PostWhereUniqueInput!): Post\n  deleteBillingInfo(where: BillingInfoWhereUniqueInput!): BillingInfo\n  deleteOptionalDetails(where: OptionalDetailsWhereUniqueInput!): OptionalDetails\n  deleteOptionalDetailsWithoutConnection(where: OptionalDetailsWithoutConnectionWhereUniqueInput!): OptionalDetailsWithoutConnection\n  deleteBillingInfoWithoutConnection(where: BillingInfoWithoutConnectionWhereUniqueInput!): BillingInfoWithoutConnection\n  deletePostWithoutConnection(where: PostWithoutConnectionWhereUniqueInput!): PostWithoutConnection\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  upsertBillingInfo(where: BillingInfoWhereUniqueInput!, create: BillingInfoCreateInput!, update: BillingInfoUpdateInput!): BillingInfo!\n  upsertOptionalDetails(where: OptionalDetailsWhereUniqueInput!, create: OptionalDetailsCreateInput!, update: OptionalDetailsUpdateInput!): OptionalDetails!\n  upsertOptionalDetailsWithoutConnection(where: OptionalDetailsWithoutConnectionWhereUniqueInput!, create: OptionalDetailsWithoutConnectionCreateInput!, update: OptionalDetailsWithoutConnectionUpdateInput!): OptionalDetailsWithoutConnection!\n  upsertBillingInfoWithoutConnection(where: BillingInfoWithoutConnectionWhereUniqueInput!, create: BillingInfoWithoutConnectionCreateInput!, update: BillingInfoWithoutConnectionUpdateInput!): BillingInfoWithoutConnection!\n  upsertPostWithoutConnection(where: PostWithoutConnectionWhereUniqueInput!, create: PostWithoutConnectionCreateInput!, update: PostWithoutConnectionUpdateInput!): PostWithoutConnection!\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  updateManyPosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!\n  updateManyBillingInfoes(data: BillingInfoUpdateManyMutationInput!, where: BillingInfoWhereInput): BatchPayload!\n  updateManyOptionalDetailses(data: OptionalDetailsUpdateManyMutationInput!, where: OptionalDetailsWhereInput): BatchPayload!\n  updateManyOptionalDetailsWithoutConnections(data: OptionalDetailsWithoutConnectionUpdateManyMutationInput!, where: OptionalDetailsWithoutConnectionWhereInput): BatchPayload!\n  updateManyBillingInfoWithoutConnections(data: BillingInfoWithoutConnectionUpdateManyMutationInput!, where: BillingInfoWithoutConnectionWhereInput): BatchPayload!\n  updateManyPostWithoutConnections(data: PostWithoutConnectionUpdateManyMutationInput!, where: PostWithoutConnectionWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyPosts(where: PostWhereInput): BatchPayload!\n  deleteManyBillingInfoes(where: BillingInfoWhereInput): BatchPayload!\n  deleteManyOptionalDetailses(where: OptionalDetailsWhereInput): BatchPayload!\n  deleteManyOptionalDetailsWithoutConnections(where: OptionalDetailsWithoutConnectionWhereInput): BatchPayload!\n  deleteManyBillingInfoWithoutConnections(where: BillingInfoWithoutConnectionWhereInput): BatchPayload!\n  deleteManyPostWithoutConnections(where: PostWithoutConnectionWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\ntype OptionalDetails {\n  removeThisId: ID!\n  text: String!\n  user: User!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OptionalDetailsConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OptionalDetailsEdge]!\n  aggregate: AggregateOptionalDetails!\n}\n\ninput OptionalDetailsCreateInput {\n  text: String!\n  user: UserCreateOneWithoutOptionalDetailsInput!\n}\n\ninput OptionalDetailsCreateOneWithoutUserInput {\n  create: OptionalDetailsCreateWithoutUserInput\n  connect: OptionalDetailsWhereUniqueInput\n}\n\ninput OptionalDetailsCreateWithoutUserInput {\n  text: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OptionalDetailsEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OptionalDetails!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OptionalDetailsOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n  text_ASC\n  text_DESC\n}\n\ntype OptionalDetailsPreviousValues {\n  removeThisId: ID!\n  text: String!\n}\n\ntype OptionalDetailsSubscriptionPayload {\n  mutation: MutationType!\n  node: OptionalDetails\n  updatedFields: [String!]\n  previousValues: OptionalDetailsPreviousValues\n}\n\ninput OptionalDetailsSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OptionalDetailsSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OptionalDetailsSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OptionalDetailsSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OptionalDetailsWhereInput\n}\n\ninput OptionalDetailsUpdateInput {\n  text: String\n  user: UserUpdateOneRequiredWithoutOptionalDetailsInput\n}\n\ninput OptionalDetailsUpdateManyMutationInput {\n  text: String\n}\n\ninput OptionalDetailsUpdateOneWithoutUserInput {\n  create: OptionalDetailsCreateWithoutUserInput\n  connect: OptionalDetailsWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: OptionalDetailsUpdateWithoutUserDataInput\n  upsert: OptionalDetailsUpsertWithoutUserInput\n}\n\ninput OptionalDetailsUpdateWithoutUserDataInput {\n  text: String\n}\n\ninput OptionalDetailsUpsertWithoutUserInput {\n  update: OptionalDetailsUpdateWithoutUserDataInput!\n  create: OptionalDetailsCreateWithoutUserInput!\n}\n\ninput OptionalDetailsWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OptionalDetailsWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OptionalDetailsWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OptionalDetailsWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n}\n\ninput OptionalDetailsWhereUniqueInput {\n  removeThisId: ID\n}\n\ntype OptionalDetailsWithoutConnection {\n  removeThisId: ID!\n  text: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OptionalDetailsWithoutConnectionConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OptionalDetailsWithoutConnectionEdge]!\n  aggregate: AggregateOptionalDetailsWithoutConnection!\n}\n\ninput OptionalDetailsWithoutConnectionCreateInput {\n  text: String!\n}\n\ninput OptionalDetailsWithoutConnectionCreateOneInput {\n  create: OptionalDetailsWithoutConnectionCreateInput\n  connect: OptionalDetailsWithoutConnectionWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OptionalDetailsWithoutConnectionEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: OptionalDetailsWithoutConnection!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OptionalDetailsWithoutConnectionOrderByInput {\n  removeThisId_ASC\n  removeThisId_DESC\n  text_ASC\n  text_DESC\n}\n\ntype OptionalDetailsWithoutConnectionPreviousValues {\n  removeThisId: ID!\n  text: String!\n}\n\ntype OptionalDetailsWithoutConnectionSubscriptionPayload {\n  mutation: MutationType!\n  node: OptionalDetailsWithoutConnection\n  updatedFields: [String!]\n  previousValues: OptionalDetailsWithoutConnectionPreviousValues\n}\n\ninput OptionalDetailsWithoutConnectionSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OptionalDetailsWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OptionalDetailsWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OptionalDetailsWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OptionalDetailsWithoutConnectionWhereInput\n}\n\ninput OptionalDetailsWithoutConnectionUpdateDataInput {\n  text: String\n}\n\ninput OptionalDetailsWithoutConnectionUpdateInput {\n  text: String\n}\n\ninput OptionalDetailsWithoutConnectionUpdateManyMutationInput {\n  text: String\n}\n\ninput OptionalDetailsWithoutConnectionUpdateOneInput {\n  create: OptionalDetailsWithoutConnectionCreateInput\n  connect: OptionalDetailsWithoutConnectionWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: OptionalDetailsWithoutConnectionUpdateDataInput\n  upsert: OptionalDetailsWithoutConnectionUpsertNestedInput\n}\n\ninput OptionalDetailsWithoutConnectionUpsertNestedInput {\n  update: OptionalDetailsWithoutConnectionUpdateDataInput!\n  create: OptionalDetailsWithoutConnectionCreateInput!\n}\n\ninput OptionalDetailsWithoutConnectionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OptionalDetailsWithoutConnectionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OptionalDetailsWithoutConnectionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OptionalDetailsWithoutConnectionWhereInput!]\n  removeThisId: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  removeThisId_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  removeThisId_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  removeThisId_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  removeThisId_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  removeThisId_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  removeThisId_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  removeThisId_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  removeThisId_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  removeThisId_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  removeThisId_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  removeThisId_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  removeThisId_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  removeThisId_not_ends_with: ID\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n}\n\ninput OptionalDetailsWithoutConnectionWhereUniqueInput {\n  removeThisId: ID\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Post implements Node {\n  id: ID!\n  text: String!\n  count: Int!\n  user: User!\n  likes(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PostConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  text: String!\n  count: Int!\n  user: UserCreateOneWithoutPostsInput!\n  likes: UserCreateManyWithoutLikesInput\n}\n\ninput PostCreateManyWithoutLikesInput {\n  create: [PostCreateWithoutLikesInput!]\n  connect: [PostWhereUniqueInput!]\n}\n\ninput PostCreateManyWithoutUserInput {\n  create: [PostCreateWithoutUserInput!]\n  connect: [PostWhereUniqueInput!]\n}\n\ninput PostCreateWithoutLikesInput {\n  text: String!\n  count: Int!\n  user: UserCreateOneWithoutPostsInput!\n}\n\ninput PostCreateWithoutUserInput {\n  text: String!\n  count: Int!\n  likes: UserCreateManyWithoutLikesInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PostEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Post!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  text_ASC\n  text_DESC\n  count_ASC\n  count_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  text: String!\n  count: Int!\n}\n\ninput PostScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PostScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n  count: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  count_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  count_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  count_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  count_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  count_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  count_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  count_gte: Int\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PostSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n}\n\ninput PostUpdateInput {\n  text: String\n  count: Int\n  user: UserUpdateOneRequiredWithoutPostsInput\n  likes: UserUpdateManyWithoutLikesInput\n}\n\ninput PostUpdateManyDataInput {\n  text: String\n  count: Int\n}\n\ninput PostUpdateManyMutationInput {\n  text: String\n  count: Int\n}\n\ninput PostUpdateManyWithoutLikesInput {\n  create: [PostCreateWithoutLikesInput!]\n  connect: [PostWhereUniqueInput!]\n  disconnect: [PostWhereUniqueInput!]\n  delete: [PostWhereUniqueInput!]\n  update: [PostUpdateWithWhereUniqueWithoutLikesInput!]\n  updateMany: [PostUpdateManyWithWhereNestedInput!]\n  deleteMany: [PostScalarWhereInput!]\n  upsert: [PostUpsertWithWhereUniqueWithoutLikesInput!]\n}\n\ninput PostUpdateManyWithoutUserInput {\n  create: [PostCreateWithoutUserInput!]\n  connect: [PostWhereUniqueInput!]\n  disconnect: [PostWhereUniqueInput!]\n  delete: [PostWhereUniqueInput!]\n  update: [PostUpdateWithWhereUniqueWithoutUserInput!]\n  updateMany: [PostUpdateManyWithWhereNestedInput!]\n  deleteMany: [PostScalarWhereInput!]\n  upsert: [PostUpsertWithWhereUniqueWithoutUserInput!]\n}\n\ninput PostUpdateManyWithWhereNestedInput {\n  where: PostScalarWhereInput!\n  data: PostUpdateManyDataInput!\n}\n\ninput PostUpdateWithoutLikesDataInput {\n  text: String\n  count: Int\n  user: UserUpdateOneRequiredWithoutPostsInput\n}\n\ninput PostUpdateWithoutUserDataInput {\n  text: String\n  count: Int\n  likes: UserUpdateManyWithoutLikesInput\n}\n\ninput PostUpdateWithWhereUniqueWithoutLikesInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutLikesDataInput!\n}\n\ninput PostUpdateWithWhereUniqueWithoutUserInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutUserDataInput!\n}\n\ninput PostUpsertWithWhereUniqueWithoutLikesInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutLikesDataInput!\n  create: PostCreateWithoutLikesInput!\n}\n\ninput PostUpsertWithWhereUniqueWithoutUserInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutUserDataInput!\n  create: PostCreateWithoutUserInput!\n}\n\ninput PostWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PostWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n  count: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  count_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  count_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  count_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  count_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  count_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  count_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  count_gte: Int\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype PostWithoutConnection implements Node {\n  id: ID!\n  text: String!\n  count: Int!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PostWithoutConnectionConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PostWithoutConnectionEdge]!\n  aggregate: AggregatePostWithoutConnection!\n}\n\ninput PostWithoutConnectionCreateInput {\n  text: String!\n  count: Int!\n}\n\ninput PostWithoutConnectionCreateManyInput {\n  create: [PostWithoutConnectionCreateInput!]\n  connect: [PostWithoutConnectionWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PostWithoutConnectionEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: PostWithoutConnection!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PostWithoutConnectionOrderByInput {\n  id_ASC\n  id_DESC\n  text_ASC\n  text_DESC\n  count_ASC\n  count_DESC\n}\n\ntype PostWithoutConnectionPreviousValues {\n  id: ID!\n  text: String!\n  count: Int!\n}\n\ninput PostWithoutConnectionScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostWithoutConnectionScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostWithoutConnectionScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PostWithoutConnectionScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n  count: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  count_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  count_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  count_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  count_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  count_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  count_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  count_gte: Int\n}\n\ntype PostWithoutConnectionSubscriptionPayload {\n  mutation: MutationType!\n  node: PostWithoutConnection\n  updatedFields: [String!]\n  previousValues: PostWithoutConnectionPreviousValues\n}\n\ninput PostWithoutConnectionSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PostWithoutConnectionSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PostWithoutConnectionWhereInput\n}\n\ninput PostWithoutConnectionUpdateDataInput {\n  text: String\n  count: Int\n}\n\ninput PostWithoutConnectionUpdateInput {\n  text: String\n  count: Int\n}\n\ninput PostWithoutConnectionUpdateManyDataInput {\n  text: String\n  count: Int\n}\n\ninput PostWithoutConnectionUpdateManyInput {\n  create: [PostWithoutConnectionCreateInput!]\n  connect: [PostWithoutConnectionWhereUniqueInput!]\n  disconnect: [PostWithoutConnectionWhereUniqueInput!]\n  delete: [PostWithoutConnectionWhereUniqueInput!]\n  update: [PostWithoutConnectionUpdateWithWhereUniqueNestedInput!]\n  updateMany: [PostWithoutConnectionUpdateManyWithWhereNestedInput!]\n  deleteMany: [PostWithoutConnectionScalarWhereInput!]\n  upsert: [PostWithoutConnectionUpsertWithWhereUniqueNestedInput!]\n}\n\ninput PostWithoutConnectionUpdateManyMutationInput {\n  text: String\n  count: Int\n}\n\ninput PostWithoutConnectionUpdateManyWithWhereNestedInput {\n  where: PostWithoutConnectionScalarWhereInput!\n  data: PostWithoutConnectionUpdateManyDataInput!\n}\n\ninput PostWithoutConnectionUpdateWithWhereUniqueNestedInput {\n  where: PostWithoutConnectionWhereUniqueInput!\n  data: PostWithoutConnectionUpdateDataInput!\n}\n\ninput PostWithoutConnectionUpsertWithWhereUniqueNestedInput {\n  where: PostWithoutConnectionWhereUniqueInput!\n  update: PostWithoutConnectionUpdateDataInput!\n  create: PostWithoutConnectionCreateInput!\n}\n\ninput PostWithoutConnectionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostWithoutConnectionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostWithoutConnectionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [PostWithoutConnectionWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n  count: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  count_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  count_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  count_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  count_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  count_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  count_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  count_gte: Int\n}\n\ninput PostWithoutConnectionWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  billingInfoes(where: BillingInfoWhereInput, orderBy: BillingInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BillingInfo]!\n  optionalDetailses(where: OptionalDetailsWhereInput, orderBy: OptionalDetailsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OptionalDetails]!\n  optionalDetailsWithoutConnections(where: OptionalDetailsWithoutConnectionWhereInput, orderBy: OptionalDetailsWithoutConnectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OptionalDetailsWithoutConnection]!\n  billingInfoWithoutConnections(where: BillingInfoWithoutConnectionWhereInput, orderBy: BillingInfoWithoutConnectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BillingInfoWithoutConnection]!\n  postWithoutConnections(where: PostWithoutConnectionWhereInput, orderBy: PostWithoutConnectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PostWithoutConnection]!\n  user(where: UserWhereUniqueInput!): User\n  post(where: PostWhereUniqueInput!): Post\n  billingInfo(where: BillingInfoWhereUniqueInput!): BillingInfo\n  optionalDetails(where: OptionalDetailsWhereUniqueInput!): OptionalDetails\n  optionalDetailsWithoutConnection(where: OptionalDetailsWithoutConnectionWhereUniqueInput!): OptionalDetailsWithoutConnection\n  billingInfoWithoutConnection(where: BillingInfoWithoutConnectionWhereUniqueInput!): BillingInfoWithoutConnection\n  postWithoutConnection(where: PostWithoutConnectionWhereUniqueInput!): PostWithoutConnection\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n  billingInfoesConnection(where: BillingInfoWhereInput, orderBy: BillingInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BillingInfoConnection!\n  optionalDetailsesConnection(where: OptionalDetailsWhereInput, orderBy: OptionalDetailsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OptionalDetailsConnection!\n  optionalDetailsWithoutConnectionsConnection(where: OptionalDetailsWithoutConnectionWhereInput, orderBy: OptionalDetailsWithoutConnectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OptionalDetailsWithoutConnectionConnection!\n  billingInfoWithoutConnectionsConnection(where: BillingInfoWithoutConnectionWhereInput, orderBy: BillingInfoWithoutConnectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BillingInfoWithoutConnectionConnection!\n  postWithoutConnectionsConnection(where: PostWithoutConnectionWhereInput, orderBy: PostWithoutConnectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostWithoutConnectionConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n  billingInfo(where: BillingInfoSubscriptionWhereInput): BillingInfoSubscriptionPayload\n  optionalDetails(where: OptionalDetailsSubscriptionWhereInput): OptionalDetailsSubscriptionPayload\n  optionalDetailsWithoutConnection(where: OptionalDetailsWithoutConnectionSubscriptionWhereInput): OptionalDetailsWithoutConnectionSubscriptionPayload\n  billingInfoWithoutConnection(where: BillingInfoWithoutConnectionSubscriptionWhereInput): BillingInfoWithoutConnectionSubscriptionPayload\n  postWithoutConnection(where: PostWithoutConnectionSubscriptionWhereInput): PostWithoutConnectionSubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]\n  postsWithoutConnection(where: PostWithoutConnectionWhereInput, orderBy: PostWithoutConnectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PostWithoutConnection!]\n  billingInfo: BillingInfo!\n  billingInfoWithoutConnection: BillingInfoWithoutConnection!\n  likes(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]\n  optionalDetails: OptionalDetails\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnection\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n  posts: PostCreateManyWithoutUserInput\n  postsWithoutConnection: PostWithoutConnectionCreateManyInput\n  billingInfo: BillingInfoCreateOneWithoutUserInput!\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionCreateOneInput!\n  likes: PostCreateManyWithoutLikesInput\n  optionalDetails: OptionalDetailsCreateOneWithoutUserInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionCreateOneInput\n}\n\ninput UserCreateManyWithoutLikesInput {\n  create: [UserCreateWithoutLikesInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateOneWithoutBillingInfoInput {\n  create: UserCreateWithoutBillingInfoInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutOptionalDetailsInput {\n  create: UserCreateWithoutOptionalDetailsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutBillingInfoInput {\n  name: String!\n  posts: PostCreateManyWithoutUserInput\n  postsWithoutConnection: PostWithoutConnectionCreateManyInput\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionCreateOneInput!\n  likes: PostCreateManyWithoutLikesInput\n  optionalDetails: OptionalDetailsCreateOneWithoutUserInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionCreateOneInput\n}\n\ninput UserCreateWithoutLikesInput {\n  name: String!\n  posts: PostCreateManyWithoutUserInput\n  postsWithoutConnection: PostWithoutConnectionCreateManyInput\n  billingInfo: BillingInfoCreateOneWithoutUserInput!\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionCreateOneInput!\n  optionalDetails: OptionalDetailsCreateOneWithoutUserInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionCreateOneInput\n}\n\ninput UserCreateWithoutOptionalDetailsInput {\n  name: String!\n  posts: PostCreateManyWithoutUserInput\n  postsWithoutConnection: PostWithoutConnectionCreateManyInput\n  billingInfo: BillingInfoCreateOneWithoutUserInput!\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionCreateOneInput!\n  likes: PostCreateManyWithoutLikesInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionCreateOneInput\n}\n\ninput UserCreateWithoutPostsInput {\n  name: String!\n  postsWithoutConnection: PostWithoutConnectionCreateManyInput\n  billingInfo: BillingInfoCreateOneWithoutUserInput!\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionCreateOneInput!\n  likes: PostCreateManyWithoutLikesInput\n  optionalDetails: OptionalDetailsCreateOneWithoutUserInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n}\n\ninput UserScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  name: String\n  posts: PostUpdateManyWithoutUserInput\n  postsWithoutConnection: PostWithoutConnectionUpdateManyInput\n  billingInfo: BillingInfoUpdateOneRequiredWithoutUserInput\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionUpdateOneRequiredInput\n  likes: PostUpdateManyWithoutLikesInput\n  optionalDetails: OptionalDetailsUpdateOneWithoutUserInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionUpdateOneInput\n}\n\ninput UserUpdateManyDataInput {\n  name: String\n}\n\ninput UserUpdateManyMutationInput {\n  name: String\n}\n\ninput UserUpdateManyWithoutLikesInput {\n  create: [UserCreateWithoutLikesInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  delete: [UserWhereUniqueInput!]\n  update: [UserUpdateWithWhereUniqueWithoutLikesInput!]\n  updateMany: [UserUpdateManyWithWhereNestedInput!]\n  deleteMany: [UserScalarWhereInput!]\n  upsert: [UserUpsertWithWhereUniqueWithoutLikesInput!]\n}\n\ninput UserUpdateManyWithWhereNestedInput {\n  where: UserScalarWhereInput!\n  data: UserUpdateManyDataInput!\n}\n\ninput UserUpdateOneRequiredWithoutBillingInfoInput {\n  create: UserCreateWithoutBillingInfoInput\n  connect: UserWhereUniqueInput\n  update: UserUpdateWithoutBillingInfoDataInput\n  upsert: UserUpsertWithoutBillingInfoInput\n}\n\ninput UserUpdateOneRequiredWithoutOptionalDetailsInput {\n  create: UserCreateWithoutOptionalDetailsInput\n  connect: UserWhereUniqueInput\n  update: UserUpdateWithoutOptionalDetailsDataInput\n  upsert: UserUpsertWithoutOptionalDetailsInput\n}\n\ninput UserUpdateOneRequiredWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n  update: UserUpdateWithoutPostsDataInput\n  upsert: UserUpsertWithoutPostsInput\n}\n\ninput UserUpdateWithoutBillingInfoDataInput {\n  name: String\n  posts: PostUpdateManyWithoutUserInput\n  postsWithoutConnection: PostWithoutConnectionUpdateManyInput\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionUpdateOneRequiredInput\n  likes: PostUpdateManyWithoutLikesInput\n  optionalDetails: OptionalDetailsUpdateOneWithoutUserInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionUpdateOneInput\n}\n\ninput UserUpdateWithoutLikesDataInput {\n  name: String\n  posts: PostUpdateManyWithoutUserInput\n  postsWithoutConnection: PostWithoutConnectionUpdateManyInput\n  billingInfo: BillingInfoUpdateOneRequiredWithoutUserInput\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionUpdateOneRequiredInput\n  optionalDetails: OptionalDetailsUpdateOneWithoutUserInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionUpdateOneInput\n}\n\ninput UserUpdateWithoutOptionalDetailsDataInput {\n  name: String\n  posts: PostUpdateManyWithoutUserInput\n  postsWithoutConnection: PostWithoutConnectionUpdateManyInput\n  billingInfo: BillingInfoUpdateOneRequiredWithoutUserInput\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionUpdateOneRequiredInput\n  likes: PostUpdateManyWithoutLikesInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionUpdateOneInput\n}\n\ninput UserUpdateWithoutPostsDataInput {\n  name: String\n  postsWithoutConnection: PostWithoutConnectionUpdateManyInput\n  billingInfo: BillingInfoUpdateOneRequiredWithoutUserInput\n  billingInfoWithoutConnection: BillingInfoWithoutConnectionUpdateOneRequiredInput\n  likes: PostUpdateManyWithoutLikesInput\n  optionalDetails: OptionalDetailsUpdateOneWithoutUserInput\n  optionalDetailsWithoutConnection: OptionalDetailsWithoutConnectionUpdateOneInput\n}\n\ninput UserUpdateWithWhereUniqueWithoutLikesInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutLikesDataInput!\n}\n\ninput UserUpsertWithoutBillingInfoInput {\n  update: UserUpdateWithoutBillingInfoDataInput!\n  create: UserCreateWithoutBillingInfoInput!\n}\n\ninput UserUpsertWithoutOptionalDetailsInput {\n  update: UserUpdateWithoutOptionalDetailsDataInput!\n  create: UserCreateWithoutOptionalDetailsInput!\n}\n\ninput UserUpsertWithoutPostsInput {\n  update: UserUpdateWithoutPostsDataInput!\n  create: UserCreateWithoutPostsInput!\n}\n\ninput UserUpsertWithWhereUniqueWithoutLikesInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutLikesDataInput!\n  create: UserCreateWithoutLikesInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 47,
      "containsCycle": true,
      "numDefinitions": 164
    },
    {
      "name": "relational.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/twoSidedConnection/relational.graphql",
      "sha": "87efbffba2102da085d7223e1ab2e2586fbcecd3",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/twoSidedConnection/relational.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/87efbffba2102da085d7223e1ab2e2586fbcecd3",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/twoSidedConnection/relational.graphql",
      "content": "type AggregateAWithA {\n  count: Int!\n}\n\ntype AggregateAWithB {\n  count: Int!\n}\n\ntype AggregateAWithC {\n  count: Int!\n}\n\ntype AggregateAWithIdWithA {\n  count: Int!\n}\n\ntype AggregateAWithIdWithB {\n  count: Int!\n}\n\ntype AggregateAWithIdWithC {\n  count: Int!\n}\n\ntype AggregateAWithoutIdWithA {\n  count: Int!\n}\n\ntype AggregateAWithoutIdWithB {\n  count: Int!\n}\n\ntype AggregateAWithoutIdWithC {\n  count: Int!\n}\n\ntype AggregateBWithA {\n  count: Int!\n}\n\ntype AggregateBWithB {\n  count: Int!\n}\n\ntype AggregateBWithC {\n  count: Int!\n}\n\ntype AggregateBWithIdWithA {\n  count: Int!\n}\n\ntype AggregateBWithIdWithB {\n  count: Int!\n}\n\ntype AggregateBWithIdWithC {\n  count: Int!\n}\n\ntype AggregateBWithoutIdWithA {\n  count: Int!\n}\n\ntype AggregateBWithoutIdWithB {\n  count: Int!\n}\n\ntype AggregateBWithoutIdWithC {\n  count: Int!\n}\n\ntype AggregateCWithA {\n  count: Int!\n}\n\ntype AggregateCWithB {\n  count: Int!\n}\n\ntype AggregateCWithC {\n  count: Int!\n}\n\ntype AggregateCWithIdWithA {\n  count: Int!\n}\n\ntype AggregateCWithIdWithB {\n  count: Int!\n}\n\ntype AggregateCWithIdWithC {\n  count: Int!\n}\n\ntype AggregateCWithoutIdWithA {\n  count: Int!\n}\n\ntype AggregateCWithoutIdWithB {\n  count: Int!\n}\n\ntype AggregateCWithoutIdWithC {\n  count: Int!\n}\n\ntype AWithA {\n  x: AWithIdWithA!\n  y: AWithoutIdWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithAEdge]!\n  aggregate: AggregateAWithA!\n}\n\ninput AWithACreateInput {\n  x: AWithIdWithACreateOneWithoutXInput!\n  y: AWithoutIdWithACreateOneWithoutXInput!\n}\n\ninput AWithACreateOneWithoutXInput {\n  create: AWithACreateWithoutXInput\n}\n\ninput AWithACreateOneWithoutYInput {\n  create: AWithACreateWithoutYInput\n}\n\ninput AWithACreateWithoutXInput {\n  y: AWithoutIdWithACreateOneWithoutXInput!\n}\n\ninput AWithACreateWithoutYInput {\n  x: AWithIdWithACreateOneWithoutXInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithAOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AWithASubscriptionPayload {\n  mutation: MutationType!\n  node: AWithA\n  updatedFields: [String!]\n}\n\ninput AWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithAWhereInput\n}\n\ninput AWithAUpdateOneRequiredWithoutXInput {\n  create: AWithACreateWithoutXInput\n  update: AWithAUpdateWithoutXDataInput\n  upsert: AWithAUpsertWithoutXInput\n}\n\ninput AWithAUpdateWithoutXDataInput {\n  y: AWithoutIdWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithAUpsertWithoutXInput {\n  update: AWithAUpdateWithoutXDataInput!\n  create: AWithACreateWithoutXInput!\n}\n\ninput AWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithAWhereInput!]\n  x: AWithIdWithAWhereInput\n  y: AWithoutIdWithAWhereInput\n}\n\ntype AWithB {\n  x: BWithIdWithA!\n  y: BWithoutIdWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithBEdge]!\n  aggregate: AggregateAWithB!\n}\n\ninput AWithBCreateInput {\n  x: BWithIdWithACreateOneWithoutXInput!\n  y: BWithoutIdWithACreateOneWithoutXInput!\n}\n\ninput AWithBCreateOneWithoutXInput {\n  create: AWithBCreateWithoutXInput\n}\n\ninput AWithBCreateOneWithoutYInput {\n  create: AWithBCreateWithoutYInput\n}\n\ninput AWithBCreateWithoutXInput {\n  y: BWithoutIdWithACreateOneWithoutXInput!\n}\n\ninput AWithBCreateWithoutYInput {\n  x: BWithIdWithACreateOneWithoutXInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithBOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: AWithB\n  updatedFields: [String!]\n}\n\ninput AWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithBWhereInput\n}\n\ninput AWithBUpdateOneWithoutXInput {\n  create: AWithBCreateWithoutXInput\n  disconnect: Boolean\n  delete: Boolean\n  update: AWithBUpdateWithoutXDataInput\n  upsert: AWithBUpsertWithoutXInput\n}\n\ninput AWithBUpdateWithoutXDataInput {\n  y: BWithoutIdWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithBUpsertWithoutXInput {\n  update: AWithBUpdateWithoutXDataInput!\n  create: AWithBCreateWithoutXInput!\n}\n\ninput AWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithBWhereInput!]\n  x: BWithIdWithAWhereInput\n  y: BWithoutIdWithAWhereInput\n}\n\ntype AWithC {\n  x: CWithIdWithA!\n  y: CWithoutIdWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithCEdge]!\n  aggregate: AggregateAWithC!\n}\n\ninput AWithCCreateInput {\n  x: CWithIdWithACreateOneWithoutXInput!\n  y: CWithoutIdWithACreateOneWithoutXInput!\n}\n\ninput AWithCCreateManyWithoutXInput {\n  create: [AWithCCreateWithoutXInput!]\n}\n\ninput AWithCCreateManyWithoutYInput {\n  create: [AWithCCreateWithoutYInput!]\n}\n\ninput AWithCCreateWithoutXInput {\n  y: CWithoutIdWithACreateOneWithoutXInput!\n}\n\ninput AWithCCreateWithoutYInput {\n  x: CWithIdWithACreateOneWithoutXInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithCOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: AWithC\n  updatedFields: [String!]\n}\n\ninput AWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithCWhereInput\n}\n\ninput AWithCUpdateManyWithoutXInput {\n  create: [AWithCCreateWithoutXInput!]\n}\n\ninput AWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithCWhereInput!]\n  x: CWithIdWithAWhereInput\n  y: CWithoutIdWithAWhereInput\n}\n\ntype AWithIdWithA implements Node {\n  id: ID!\n  field: String!\n  x: AWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithIdWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithIdWithAEdge]!\n  aggregate: AggregateAWithIdWithA!\n}\n\ninput AWithIdWithACreateInput {\n  field: String!\n  x: AWithACreateOneWithoutXInput!\n}\n\ninput AWithIdWithACreateOneWithoutXInput {\n  create: AWithIdWithACreateWithoutXInput\n  connect: AWithIdWithAWhereUniqueInput\n}\n\ninput AWithIdWithACreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithIdWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithIdWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithIdWithAOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AWithIdWithAPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype AWithIdWithASubscriptionPayload {\n  mutation: MutationType!\n  node: AWithIdWithA\n  updatedFields: [String!]\n  previousValues: AWithIdWithAPreviousValues\n}\n\ninput AWithIdWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithIdWithAWhereInput\n}\n\ninput AWithIdWithAUpdateInput {\n  field: String\n  x: AWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithIdWithAUpdateManyMutationInput {\n  field: String\n}\n\ninput AWithIdWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWithAWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x: AWithAWhereInput\n}\n\ninput AWithIdWithAWhereUniqueInput {\n  id: ID\n}\n\ntype AWithIdWithB implements Node {\n  id: ID!\n  field: String!\n  x: BWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithIdWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithIdWithBEdge]!\n  aggregate: AggregateAWithIdWithB!\n}\n\ninput AWithIdWithBCreateInput {\n  field: String!\n  x: BWithACreateOneWithoutXInput!\n}\n\ninput AWithIdWithBCreateOneWithoutXInput {\n  create: AWithIdWithBCreateWithoutXInput\n  connect: AWithIdWithBWhereUniqueInput\n}\n\ninput AWithIdWithBCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithIdWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithIdWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithIdWithBOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AWithIdWithBPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype AWithIdWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: AWithIdWithB\n  updatedFields: [String!]\n  previousValues: AWithIdWithBPreviousValues\n}\n\ninput AWithIdWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithIdWithBWhereInput\n}\n\ninput AWithIdWithBUpdateInput {\n  field: String\n  x: BWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithIdWithBUpdateManyMutationInput {\n  field: String\n}\n\ninput AWithIdWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWithBWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x: BWithAWhereInput\n}\n\ninput AWithIdWithBWhereUniqueInput {\n  id: ID\n}\n\ntype AWithIdWithC implements Node {\n  id: ID!\n  field: String!\n  x: CWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithIdWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithIdWithCEdge]!\n  aggregate: AggregateAWithIdWithC!\n}\n\ninput AWithIdWithCCreateInput {\n  field: String!\n  x: CWithACreateOneWithoutXInput!\n}\n\ninput AWithIdWithCCreateManyWithoutXInput {\n  create: [AWithIdWithCCreateWithoutXInput!]\n  connect: [AWithIdWithCWhereUniqueInput!]\n}\n\ninput AWithIdWithCCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithIdWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithIdWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithIdWithCOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AWithIdWithCPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype AWithIdWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: AWithIdWithC\n  updatedFields: [String!]\n  previousValues: AWithIdWithCPreviousValues\n}\n\ninput AWithIdWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithIdWithCWhereInput\n}\n\ninput AWithIdWithCUpdateInput {\n  field: String\n  x: CWithAUpdateOneRequiredWithoutXInput\n}\n\ninput AWithIdWithCUpdateManyMutationInput {\n  field: String\n}\n\ninput AWithIdWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithIdWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithIdWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithIdWithCWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x: CWithAWhereInput\n}\n\ninput AWithIdWithCWhereUniqueInput {\n  id: ID\n}\n\ntype AWithoutIdWithA {\n  field: String!\n  x: AWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithoutIdWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithoutIdWithAEdge]!\n  aggregate: AggregateAWithoutIdWithA!\n}\n\ninput AWithoutIdWithACreateInput {\n  field: String!\n  x: AWithACreateOneWithoutYInput!\n}\n\ninput AWithoutIdWithACreateOneWithoutXInput {\n  create: AWithoutIdWithACreateWithoutXInput\n}\n\ninput AWithoutIdWithACreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithoutIdWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithoutIdWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithoutIdWithAOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AWithoutIdWithAPreviousValues {\n  field: String!\n}\n\ntype AWithoutIdWithASubscriptionPayload {\n  mutation: MutationType!\n  node: AWithoutIdWithA\n  updatedFields: [String!]\n  previousValues: AWithoutIdWithAPreviousValues\n}\n\ninput AWithoutIdWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithoutIdWithAWhereInput\n}\n\ninput AWithoutIdWithAUpdateManyMutationInput {\n  field: String\n}\n\ninput AWithoutIdWithAUpdateOneRequiredWithoutXInput {\n  create: AWithoutIdWithACreateWithoutXInput\n  update: AWithoutIdWithAUpdateWithoutXDataInput\n  upsert: AWithoutIdWithAUpsertWithoutXInput\n}\n\ninput AWithoutIdWithAUpdateWithoutXDataInput {\n  field: String\n}\n\ninput AWithoutIdWithAUpsertWithoutXInput {\n  update: AWithoutIdWithAUpdateWithoutXDataInput!\n  create: AWithoutIdWithACreateWithoutXInput!\n}\n\ninput AWithoutIdWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithoutIdWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithoutIdWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithoutIdWithAWhereInput!]\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x: AWithAWhereInput\n}\n\ntype AWithoutIdWithB {\n  field: String!\n  x: BWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithoutIdWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithoutIdWithBEdge]!\n  aggregate: AggregateAWithoutIdWithB!\n}\n\ninput AWithoutIdWithBCreateInput {\n  field: String!\n  x: BWithACreateOneWithoutYInput!\n}\n\ninput AWithoutIdWithBCreateOneWithoutXInput {\n  create: AWithoutIdWithBCreateWithoutXInput\n}\n\ninput AWithoutIdWithBCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithoutIdWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithoutIdWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithoutIdWithBOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AWithoutIdWithBPreviousValues {\n  field: String!\n}\n\ntype AWithoutIdWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: AWithoutIdWithB\n  updatedFields: [String!]\n  previousValues: AWithoutIdWithBPreviousValues\n}\n\ninput AWithoutIdWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithoutIdWithBWhereInput\n}\n\ninput AWithoutIdWithBUpdateManyMutationInput {\n  field: String\n}\n\ninput AWithoutIdWithBUpdateOneWithoutXInput {\n  create: AWithoutIdWithBCreateWithoutXInput\n  disconnect: Boolean\n  delete: Boolean\n  update: AWithoutIdWithBUpdateWithoutXDataInput\n  upsert: AWithoutIdWithBUpsertWithoutXInput\n}\n\ninput AWithoutIdWithBUpdateWithoutXDataInput {\n  field: String\n}\n\ninput AWithoutIdWithBUpsertWithoutXInput {\n  update: AWithoutIdWithBUpdateWithoutXDataInput!\n  create: AWithoutIdWithBCreateWithoutXInput!\n}\n\ninput AWithoutIdWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithoutIdWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithoutIdWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithoutIdWithBWhereInput!]\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x: BWithAWhereInput\n}\n\ntype AWithoutIdWithC {\n  field: String!\n  x: CWithA!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AWithoutIdWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AWithoutIdWithCEdge]!\n  aggregate: AggregateAWithoutIdWithC!\n}\n\ninput AWithoutIdWithCCreateInput {\n  field: String!\n  x: CWithACreateOneWithoutYInput!\n}\n\ninput AWithoutIdWithCCreateManyWithoutXInput {\n  create: [AWithoutIdWithCCreateWithoutXInput!]\n}\n\ninput AWithoutIdWithCCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AWithoutIdWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: AWithoutIdWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum AWithoutIdWithCOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AWithoutIdWithCPreviousValues {\n  field: String!\n}\n\ninput AWithoutIdWithCScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithoutIdWithCScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithoutIdWithCScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithoutIdWithCScalarWhereInput!]\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ntype AWithoutIdWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: AWithoutIdWithC\n  updatedFields: [String!]\n  previousValues: AWithoutIdWithCPreviousValues\n}\n\ninput AWithoutIdWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWithoutIdWithCWhereInput\n}\n\ninput AWithoutIdWithCUpdateManyDataInput {\n  field: String\n}\n\ninput AWithoutIdWithCUpdateManyMutationInput {\n  field: String\n}\n\ninput AWithoutIdWithCUpdateManyWithoutXInput {\n  create: [AWithoutIdWithCCreateWithoutXInput!]\n  updateMany: [AWithoutIdWithCUpdateManyWithWhereNestedInput!]\n  deleteMany: [AWithoutIdWithCScalarWhereInput!]\n}\n\ninput AWithoutIdWithCUpdateManyWithWhereNestedInput {\n  where: AWithoutIdWithCScalarWhereInput!\n  data: AWithoutIdWithCUpdateManyDataInput!\n}\n\ninput AWithoutIdWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWithoutIdWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWithoutIdWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWithoutIdWithCWhereInput!]\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x: CWithAWhereInput\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\ntype BWithA {\n  x: AWithIdWithB\n  y: AWithoutIdWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithAEdge]!\n  aggregate: AggregateBWithA!\n}\n\ninput BWithACreateInput {\n  x: AWithIdWithBCreateOneWithoutXInput\n  y: AWithoutIdWithBCreateOneWithoutXInput\n}\n\ninput BWithACreateOneWithoutXInput {\n  create: BWithACreateWithoutXInput\n}\n\ninput BWithACreateOneWithoutYInput {\n  create: BWithACreateWithoutYInput\n}\n\ninput BWithACreateWithoutXInput {\n  y: AWithoutIdWithBCreateOneWithoutXInput\n}\n\ninput BWithACreateWithoutYInput {\n  x: AWithIdWithBCreateOneWithoutXInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithAOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BWithASubscriptionPayload {\n  mutation: MutationType!\n  node: BWithA\n  updatedFields: [String!]\n}\n\ninput BWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithAWhereInput\n}\n\ninput BWithAUpdateOneRequiredWithoutXInput {\n  create: BWithACreateWithoutXInput\n  update: BWithAUpdateWithoutXDataInput\n  upsert: BWithAUpsertWithoutXInput\n}\n\ninput BWithAUpdateWithoutXDataInput {\n  y: AWithoutIdWithBUpdateOneWithoutXInput\n}\n\ninput BWithAUpsertWithoutXInput {\n  update: BWithAUpdateWithoutXDataInput!\n  create: BWithACreateWithoutXInput!\n}\n\ninput BWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithAWhereInput!]\n  x: AWithIdWithBWhereInput\n  y: AWithoutIdWithBWhereInput\n}\n\ntype BWithB {\n  x: BWithIdWithB\n  y: BWithoutIdWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithBEdge]!\n  aggregate: AggregateBWithB!\n}\n\ninput BWithBCreateInput {\n  x: BWithIdWithBCreateOneWithoutXInput\n  y: BWithoutIdWithBCreateOneWithoutXInput\n}\n\ninput BWithBCreateOneWithoutXInput {\n  create: BWithBCreateWithoutXInput\n}\n\ninput BWithBCreateOneWithoutYInput {\n  create: BWithBCreateWithoutYInput\n}\n\ninput BWithBCreateWithoutXInput {\n  y: BWithoutIdWithBCreateOneWithoutXInput\n}\n\ninput BWithBCreateWithoutYInput {\n  x: BWithIdWithBCreateOneWithoutXInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithBOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: BWithB\n  updatedFields: [String!]\n}\n\ninput BWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithBWhereInput\n}\n\ninput BWithBUpdateOneWithoutXInput {\n  create: BWithBCreateWithoutXInput\n  disconnect: Boolean\n  delete: Boolean\n  update: BWithBUpdateWithoutXDataInput\n  upsert: BWithBUpsertWithoutXInput\n}\n\ninput BWithBUpdateWithoutXDataInput {\n  y: BWithoutIdWithBUpdateOneWithoutXInput\n}\n\ninput BWithBUpsertWithoutXInput {\n  update: BWithBUpdateWithoutXDataInput!\n  create: BWithBCreateWithoutXInput!\n}\n\ninput BWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithBWhereInput!]\n  x: BWithIdWithBWhereInput\n  y: BWithoutIdWithBWhereInput\n}\n\ntype BWithC {\n  x: CWithIdWithB\n  y: CWithoutIdWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithCEdge]!\n  aggregate: AggregateBWithC!\n}\n\ninput BWithCCreateInput {\n  x: CWithIdWithBCreateOneWithoutXInput\n  y: CWithoutIdWithBCreateOneWithoutXInput\n}\n\ninput BWithCCreateManyWithoutXInput {\n  create: [BWithCCreateWithoutXInput!]\n}\n\ninput BWithCCreateManyWithoutYInput {\n  create: [BWithCCreateWithoutYInput!]\n}\n\ninput BWithCCreateWithoutXInput {\n  y: CWithoutIdWithBCreateOneWithoutXInput\n}\n\ninput BWithCCreateWithoutYInput {\n  x: CWithIdWithBCreateOneWithoutXInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithCOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: BWithC\n  updatedFields: [String!]\n}\n\ninput BWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithCWhereInput\n}\n\ninput BWithCUpdateManyWithoutXInput {\n  create: [BWithCCreateWithoutXInput!]\n}\n\ninput BWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithCWhereInput!]\n  x: CWithIdWithBWhereInput\n  y: CWithoutIdWithBWhereInput\n}\n\ntype BWithIdWithA implements Node {\n  id: ID!\n  field: String!\n  x: AWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithIdWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithIdWithAEdge]!\n  aggregate: AggregateBWithIdWithA!\n}\n\ninput BWithIdWithACreateInput {\n  field: String!\n  x: AWithBCreateOneWithoutXInput\n}\n\ninput BWithIdWithACreateOneWithoutXInput {\n  create: BWithIdWithACreateWithoutXInput\n  connect: BWithIdWithAWhereUniqueInput\n}\n\ninput BWithIdWithACreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithIdWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithIdWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithIdWithAOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BWithIdWithAPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype BWithIdWithASubscriptionPayload {\n  mutation: MutationType!\n  node: BWithIdWithA\n  updatedFields: [String!]\n  previousValues: BWithIdWithAPreviousValues\n}\n\ninput BWithIdWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithIdWithAWhereInput\n}\n\ninput BWithIdWithAUpdateInput {\n  field: String\n  x: AWithBUpdateOneWithoutXInput\n}\n\ninput BWithIdWithAUpdateManyMutationInput {\n  field: String\n}\n\ninput BWithIdWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithIdWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithIdWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithIdWithAWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x: AWithBWhereInput\n}\n\ninput BWithIdWithAWhereUniqueInput {\n  id: ID\n}\n\ntype BWithIdWithB implements Node {\n  id: ID!\n  field: String!\n  x: BWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithIdWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithIdWithBEdge]!\n  aggregate: AggregateBWithIdWithB!\n}\n\ninput BWithIdWithBCreateInput {\n  field: String!\n  x: BWithBCreateOneWithoutXInput\n}\n\ninput BWithIdWithBCreateOneWithoutXInput {\n  create: BWithIdWithBCreateWithoutXInput\n  connect: BWithIdWithBWhereUniqueInput\n}\n\ninput BWithIdWithBCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithIdWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithIdWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithIdWithBOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BWithIdWithBPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype BWithIdWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: BWithIdWithB\n  updatedFields: [String!]\n  previousValues: BWithIdWithBPreviousValues\n}\n\ninput BWithIdWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithIdWithBWhereInput\n}\n\ninput BWithIdWithBUpdateInput {\n  field: String\n  x: BWithBUpdateOneWithoutXInput\n}\n\ninput BWithIdWithBUpdateManyMutationInput {\n  field: String\n}\n\ninput BWithIdWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithIdWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithIdWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithIdWithBWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x: BWithBWhereInput\n}\n\ninput BWithIdWithBWhereUniqueInput {\n  id: ID\n}\n\ntype BWithIdWithC implements Node {\n  id: ID!\n  field: String!\n  x: CWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithIdWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithIdWithCEdge]!\n  aggregate: AggregateBWithIdWithC!\n}\n\ninput BWithIdWithCCreateInput {\n  field: String!\n  x: CWithBCreateOneWithoutXInput\n}\n\ninput BWithIdWithCCreateManyWithoutXInput {\n  create: [BWithIdWithCCreateWithoutXInput!]\n  connect: [BWithIdWithCWhereUniqueInput!]\n}\n\ninput BWithIdWithCCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithIdWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithIdWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithIdWithCOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BWithIdWithCPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype BWithIdWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: BWithIdWithC\n  updatedFields: [String!]\n  previousValues: BWithIdWithCPreviousValues\n}\n\ninput BWithIdWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithIdWithCWhereInput\n}\n\ninput BWithIdWithCUpdateInput {\n  field: String\n  x: CWithBUpdateOneWithoutXInput\n}\n\ninput BWithIdWithCUpdateManyMutationInput {\n  field: String\n}\n\ninput BWithIdWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithIdWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithIdWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithIdWithCWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x: CWithBWhereInput\n}\n\ninput BWithIdWithCWhereUniqueInput {\n  id: ID\n}\n\ntype BWithoutIdWithA {\n  field: String!\n  x: AWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithoutIdWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithoutIdWithAEdge]!\n  aggregate: AggregateBWithoutIdWithA!\n}\n\ninput BWithoutIdWithACreateInput {\n  field: String!\n  x: AWithBCreateOneWithoutYInput\n}\n\ninput BWithoutIdWithACreateOneWithoutXInput {\n  create: BWithoutIdWithACreateWithoutXInput\n}\n\ninput BWithoutIdWithACreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithoutIdWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithoutIdWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithoutIdWithAOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BWithoutIdWithAPreviousValues {\n  field: String!\n}\n\ntype BWithoutIdWithASubscriptionPayload {\n  mutation: MutationType!\n  node: BWithoutIdWithA\n  updatedFields: [String!]\n  previousValues: BWithoutIdWithAPreviousValues\n}\n\ninput BWithoutIdWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithoutIdWithAWhereInput\n}\n\ninput BWithoutIdWithAUpdateManyMutationInput {\n  field: String\n}\n\ninput BWithoutIdWithAUpdateOneRequiredWithoutXInput {\n  create: BWithoutIdWithACreateWithoutXInput\n  update: BWithoutIdWithAUpdateWithoutXDataInput\n  upsert: BWithoutIdWithAUpsertWithoutXInput\n}\n\ninput BWithoutIdWithAUpdateWithoutXDataInput {\n  field: String\n}\n\ninput BWithoutIdWithAUpsertWithoutXInput {\n  update: BWithoutIdWithAUpdateWithoutXDataInput!\n  create: BWithoutIdWithACreateWithoutXInput!\n}\n\ninput BWithoutIdWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithoutIdWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithoutIdWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithoutIdWithAWhereInput!]\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x: AWithBWhereInput\n}\n\ntype BWithoutIdWithB {\n  field: String!\n  x: BWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithoutIdWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithoutIdWithBEdge]!\n  aggregate: AggregateBWithoutIdWithB!\n}\n\ninput BWithoutIdWithBCreateInput {\n  field: String!\n  x: BWithBCreateOneWithoutYInput\n}\n\ninput BWithoutIdWithBCreateOneWithoutXInput {\n  create: BWithoutIdWithBCreateWithoutXInput\n}\n\ninput BWithoutIdWithBCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithoutIdWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithoutIdWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithoutIdWithBOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BWithoutIdWithBPreviousValues {\n  field: String!\n}\n\ntype BWithoutIdWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: BWithoutIdWithB\n  updatedFields: [String!]\n  previousValues: BWithoutIdWithBPreviousValues\n}\n\ninput BWithoutIdWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithoutIdWithBWhereInput\n}\n\ninput BWithoutIdWithBUpdateManyMutationInput {\n  field: String\n}\n\ninput BWithoutIdWithBUpdateOneWithoutXInput {\n  create: BWithoutIdWithBCreateWithoutXInput\n  disconnect: Boolean\n  delete: Boolean\n  update: BWithoutIdWithBUpdateWithoutXDataInput\n  upsert: BWithoutIdWithBUpsertWithoutXInput\n}\n\ninput BWithoutIdWithBUpdateWithoutXDataInput {\n  field: String\n}\n\ninput BWithoutIdWithBUpsertWithoutXInput {\n  update: BWithoutIdWithBUpdateWithoutXDataInput!\n  create: BWithoutIdWithBCreateWithoutXInput!\n}\n\ninput BWithoutIdWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithoutIdWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithoutIdWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithoutIdWithBWhereInput!]\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x: BWithBWhereInput\n}\n\ntype BWithoutIdWithC {\n  field: String!\n  x: CWithB\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BWithoutIdWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BWithoutIdWithCEdge]!\n  aggregate: AggregateBWithoutIdWithC!\n}\n\ninput BWithoutIdWithCCreateInput {\n  field: String!\n  x: CWithBCreateOneWithoutYInput\n}\n\ninput BWithoutIdWithCCreateManyWithoutXInput {\n  create: [BWithoutIdWithCCreateWithoutXInput!]\n}\n\ninput BWithoutIdWithCCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BWithoutIdWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: BWithoutIdWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BWithoutIdWithCOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BWithoutIdWithCPreviousValues {\n  field: String!\n}\n\ninput BWithoutIdWithCScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithoutIdWithCScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithoutIdWithCScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithoutIdWithCScalarWhereInput!]\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ntype BWithoutIdWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: BWithoutIdWithC\n  updatedFields: [String!]\n  previousValues: BWithoutIdWithCPreviousValues\n}\n\ninput BWithoutIdWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWithoutIdWithCWhereInput\n}\n\ninput BWithoutIdWithCUpdateManyDataInput {\n  field: String\n}\n\ninput BWithoutIdWithCUpdateManyMutationInput {\n  field: String\n}\n\ninput BWithoutIdWithCUpdateManyWithoutXInput {\n  create: [BWithoutIdWithCCreateWithoutXInput!]\n  updateMany: [BWithoutIdWithCUpdateManyWithWhereNestedInput!]\n  deleteMany: [BWithoutIdWithCScalarWhereInput!]\n}\n\ninput BWithoutIdWithCUpdateManyWithWhereNestedInput {\n  where: BWithoutIdWithCScalarWhereInput!\n  data: BWithoutIdWithCUpdateManyDataInput!\n}\n\ninput BWithoutIdWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWithoutIdWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWithoutIdWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWithoutIdWithCWhereInput!]\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x: CWithBWhereInput\n}\n\ntype CWithA {\n  x(where: AWithIdWithCWhereInput, orderBy: AWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithIdWithC!]\n  y(where: AWithoutIdWithCWhereInput, orderBy: AWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithoutIdWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithAEdge]!\n  aggregate: AggregateCWithA!\n}\n\ninput CWithACreateInput {\n  x: AWithIdWithCCreateManyWithoutXInput\n  y: AWithoutIdWithCCreateManyWithoutXInput\n}\n\ninput CWithACreateOneWithoutXInput {\n  create: CWithACreateWithoutXInput\n}\n\ninput CWithACreateOneWithoutYInput {\n  create: CWithACreateWithoutYInput\n}\n\ninput CWithACreateWithoutXInput {\n  y: AWithoutIdWithCCreateManyWithoutXInput\n}\n\ninput CWithACreateWithoutYInput {\n  x: AWithIdWithCCreateManyWithoutXInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithAOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CWithASubscriptionPayload {\n  mutation: MutationType!\n  node: CWithA\n  updatedFields: [String!]\n}\n\ninput CWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithAWhereInput\n}\n\ninput CWithAUpdateOneRequiredWithoutXInput {\n  create: CWithACreateWithoutXInput\n  update: CWithAUpdateWithoutXDataInput\n  upsert: CWithAUpsertWithoutXInput\n}\n\ninput CWithAUpdateWithoutXDataInput {\n  y: AWithoutIdWithCUpdateManyWithoutXInput\n}\n\ninput CWithAUpsertWithoutXInput {\n  update: CWithAUpdateWithoutXDataInput!\n  create: CWithACreateWithoutXInput!\n}\n\ninput CWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithAWhereInput!]\n  x_every: AWithIdWithCWhereInput\n  x_some: AWithIdWithCWhereInput\n  x_none: AWithIdWithCWhereInput\n  y_every: AWithoutIdWithCWhereInput\n  y_some: AWithoutIdWithCWhereInput\n  y_none: AWithoutIdWithCWhereInput\n}\n\ntype CWithB {\n  x(where: BWithIdWithCWhereInput, orderBy: BWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithIdWithC!]\n  y(where: BWithoutIdWithCWhereInput, orderBy: BWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithoutIdWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithBEdge]!\n  aggregate: AggregateCWithB!\n}\n\ninput CWithBCreateInput {\n  x: BWithIdWithCCreateManyWithoutXInput\n  y: BWithoutIdWithCCreateManyWithoutXInput\n}\n\ninput CWithBCreateOneWithoutXInput {\n  create: CWithBCreateWithoutXInput\n}\n\ninput CWithBCreateOneWithoutYInput {\n  create: CWithBCreateWithoutYInput\n}\n\ninput CWithBCreateWithoutXInput {\n  y: BWithoutIdWithCCreateManyWithoutXInput\n}\n\ninput CWithBCreateWithoutYInput {\n  x: BWithIdWithCCreateManyWithoutXInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithBOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: CWithB\n  updatedFields: [String!]\n}\n\ninput CWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithBWhereInput\n}\n\ninput CWithBUpdateOneWithoutXInput {\n  create: CWithBCreateWithoutXInput\n  disconnect: Boolean\n  delete: Boolean\n  update: CWithBUpdateWithoutXDataInput\n  upsert: CWithBUpsertWithoutXInput\n}\n\ninput CWithBUpdateWithoutXDataInput {\n  y: BWithoutIdWithCUpdateManyWithoutXInput\n}\n\ninput CWithBUpsertWithoutXInput {\n  update: CWithBUpdateWithoutXDataInput!\n  create: CWithBCreateWithoutXInput!\n}\n\ninput CWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithBWhereInput!]\n  x_every: BWithIdWithCWhereInput\n  x_some: BWithIdWithCWhereInput\n  x_none: BWithIdWithCWhereInput\n  y_every: BWithoutIdWithCWhereInput\n  y_some: BWithoutIdWithCWhereInput\n  y_none: BWithoutIdWithCWhereInput\n}\n\ntype CWithC {\n  x(where: CWithIdWithCWhereInput, orderBy: CWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithIdWithC!]\n  y(where: CWithoutIdWithCWhereInput, orderBy: CWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithoutIdWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithCEdge]!\n  aggregate: AggregateCWithC!\n}\n\ninput CWithCCreateInput {\n  x: CWithIdWithCCreateManyWithoutXInput\n  y: CWithoutIdWithCCreateManyWithoutXInput\n}\n\ninput CWithCCreateManyWithoutXInput {\n  create: [CWithCCreateWithoutXInput!]\n}\n\ninput CWithCCreateManyWithoutYInput {\n  create: [CWithCCreateWithoutYInput!]\n}\n\ninput CWithCCreateWithoutXInput {\n  y: CWithoutIdWithCCreateManyWithoutXInput\n}\n\ninput CWithCCreateWithoutYInput {\n  x: CWithIdWithCCreateManyWithoutXInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithCOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: CWithC\n  updatedFields: [String!]\n}\n\ninput CWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithCWhereInput\n}\n\ninput CWithCUpdateManyWithoutXInput {\n  create: [CWithCCreateWithoutXInput!]\n}\n\ninput CWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithCWhereInput!]\n  x_every: CWithIdWithCWhereInput\n  x_some: CWithIdWithCWhereInput\n  x_none: CWithIdWithCWhereInput\n  y_every: CWithoutIdWithCWhereInput\n  y_some: CWithoutIdWithCWhereInput\n  y_none: CWithoutIdWithCWhereInput\n}\n\ntype CWithIdWithA implements Node {\n  id: ID!\n  field: String!\n  x(where: AWithCWhereInput, orderBy: AWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithIdWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithIdWithAEdge]!\n  aggregate: AggregateCWithIdWithA!\n}\n\ninput CWithIdWithACreateInput {\n  field: String!\n  x: AWithCCreateManyWithoutXInput\n}\n\ninput CWithIdWithACreateOneWithoutXInput {\n  create: CWithIdWithACreateWithoutXInput\n  connect: CWithIdWithAWhereUniqueInput\n}\n\ninput CWithIdWithACreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithIdWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithIdWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithIdWithAOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CWithIdWithAPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype CWithIdWithASubscriptionPayload {\n  mutation: MutationType!\n  node: CWithIdWithA\n  updatedFields: [String!]\n  previousValues: CWithIdWithAPreviousValues\n}\n\ninput CWithIdWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithIdWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithIdWithAWhereInput\n}\n\ninput CWithIdWithAUpdateInput {\n  field: String\n  x: AWithCUpdateManyWithoutXInput\n}\n\ninput CWithIdWithAUpdateManyMutationInput {\n  field: String\n}\n\ninput CWithIdWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithIdWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithIdWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithIdWithAWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x_every: AWithCWhereInput\n  x_some: AWithCWhereInput\n  x_none: AWithCWhereInput\n}\n\ninput CWithIdWithAWhereUniqueInput {\n  id: ID\n}\n\ntype CWithIdWithB implements Node {\n  id: ID!\n  field: String!\n  x(where: BWithCWhereInput, orderBy: BWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithIdWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithIdWithBEdge]!\n  aggregate: AggregateCWithIdWithB!\n}\n\ninput CWithIdWithBCreateInput {\n  field: String!\n  x: BWithCCreateManyWithoutXInput\n}\n\ninput CWithIdWithBCreateOneWithoutXInput {\n  create: CWithIdWithBCreateWithoutXInput\n  connect: CWithIdWithBWhereUniqueInput\n}\n\ninput CWithIdWithBCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithIdWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithIdWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithIdWithBOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CWithIdWithBPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype CWithIdWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: CWithIdWithB\n  updatedFields: [String!]\n  previousValues: CWithIdWithBPreviousValues\n}\n\ninput CWithIdWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithIdWithBWhereInput\n}\n\ninput CWithIdWithBUpdateInput {\n  field: String\n  x: BWithCUpdateManyWithoutXInput\n}\n\ninput CWithIdWithBUpdateManyMutationInput {\n  field: String\n}\n\ninput CWithIdWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithIdWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithIdWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithIdWithBWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x_every: BWithCWhereInput\n  x_some: BWithCWhereInput\n  x_none: BWithCWhereInput\n}\n\ninput CWithIdWithBWhereUniqueInput {\n  id: ID\n}\n\ntype CWithIdWithC implements Node {\n  id: ID!\n  field: String!\n  x(where: CWithCWhereInput, orderBy: CWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithIdWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithIdWithCEdge]!\n  aggregate: AggregateCWithIdWithC!\n}\n\ninput CWithIdWithCCreateInput {\n  field: String!\n  x: CWithCCreateManyWithoutXInput\n}\n\ninput CWithIdWithCCreateManyWithoutXInput {\n  create: [CWithIdWithCCreateWithoutXInput!]\n  connect: [CWithIdWithCWhereUniqueInput!]\n}\n\ninput CWithIdWithCCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithIdWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithIdWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithIdWithCOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CWithIdWithCPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype CWithIdWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: CWithIdWithC\n  updatedFields: [String!]\n  previousValues: CWithIdWithCPreviousValues\n}\n\ninput CWithIdWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithIdWithCWhereInput\n}\n\ninput CWithIdWithCUpdateInput {\n  field: String\n  x: CWithCUpdateManyWithoutXInput\n}\n\ninput CWithIdWithCUpdateManyMutationInput {\n  field: String\n}\n\ninput CWithIdWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithIdWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithIdWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithIdWithCWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x_every: CWithCWhereInput\n  x_some: CWithCWhereInput\n  x_none: CWithCWhereInput\n}\n\ninput CWithIdWithCWhereUniqueInput {\n  id: ID\n}\n\ntype CWithoutIdWithA {\n  field: String!\n  x(where: AWithCWhereInput, orderBy: AWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithoutIdWithAConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithoutIdWithAEdge]!\n  aggregate: AggregateCWithoutIdWithA!\n}\n\ninput CWithoutIdWithACreateInput {\n  field: String!\n  x: AWithCCreateManyWithoutYInput\n}\n\ninput CWithoutIdWithACreateOneWithoutXInput {\n  create: CWithoutIdWithACreateWithoutXInput\n}\n\ninput CWithoutIdWithACreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithoutIdWithAEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithoutIdWithA!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithoutIdWithAOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CWithoutIdWithAPreviousValues {\n  field: String!\n}\n\ntype CWithoutIdWithASubscriptionPayload {\n  mutation: MutationType!\n  node: CWithoutIdWithA\n  updatedFields: [String!]\n  previousValues: CWithoutIdWithAPreviousValues\n}\n\ninput CWithoutIdWithASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithoutIdWithASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithoutIdWithAWhereInput\n}\n\ninput CWithoutIdWithAUpdateManyMutationInput {\n  field: String\n}\n\ninput CWithoutIdWithAWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithoutIdWithAWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithoutIdWithAWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithoutIdWithAWhereInput!]\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x_every: AWithCWhereInput\n  x_some: AWithCWhereInput\n  x_none: AWithCWhereInput\n}\n\ntype CWithoutIdWithB {\n  field: String!\n  x(where: BWithCWhereInput, orderBy: BWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithoutIdWithBConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithoutIdWithBEdge]!\n  aggregate: AggregateCWithoutIdWithB!\n}\n\ninput CWithoutIdWithBCreateInput {\n  field: String!\n  x: BWithCCreateManyWithoutYInput\n}\n\ninput CWithoutIdWithBCreateOneWithoutXInput {\n  create: CWithoutIdWithBCreateWithoutXInput\n}\n\ninput CWithoutIdWithBCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithoutIdWithBEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithoutIdWithB!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithoutIdWithBOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CWithoutIdWithBPreviousValues {\n  field: String!\n}\n\ntype CWithoutIdWithBSubscriptionPayload {\n  mutation: MutationType!\n  node: CWithoutIdWithB\n  updatedFields: [String!]\n  previousValues: CWithoutIdWithBPreviousValues\n}\n\ninput CWithoutIdWithBSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithoutIdWithBSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithoutIdWithBWhereInput\n}\n\ninput CWithoutIdWithBUpdateManyMutationInput {\n  field: String\n}\n\ninput CWithoutIdWithBWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithoutIdWithBWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithoutIdWithBWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithoutIdWithBWhereInput!]\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x_every: BWithCWhereInput\n  x_some: BWithCWhereInput\n  x_none: BWithCWhereInput\n}\n\ntype CWithoutIdWithC {\n  field: String!\n  x(where: CWithCWhereInput, orderBy: CWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithC!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CWithoutIdWithCConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CWithoutIdWithCEdge]!\n  aggregate: AggregateCWithoutIdWithC!\n}\n\ninput CWithoutIdWithCCreateInput {\n  field: String!\n  x: CWithCCreateManyWithoutYInput\n}\n\ninput CWithoutIdWithCCreateManyWithoutXInput {\n  create: [CWithoutIdWithCCreateWithoutXInput!]\n}\n\ninput CWithoutIdWithCCreateWithoutXInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CWithoutIdWithCEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: CWithoutIdWithC!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CWithoutIdWithCOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CWithoutIdWithCPreviousValues {\n  field: String!\n}\n\ntype CWithoutIdWithCSubscriptionPayload {\n  mutation: MutationType!\n  node: CWithoutIdWithC\n  updatedFields: [String!]\n  previousValues: CWithoutIdWithCPreviousValues\n}\n\ninput CWithoutIdWithCSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithoutIdWithCSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWithoutIdWithCWhereInput\n}\n\ninput CWithoutIdWithCUpdateManyMutationInput {\n  field: String\n}\n\ninput CWithoutIdWithCWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWithoutIdWithCWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWithoutIdWithCWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWithoutIdWithCWhereInput!]\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n  x_every: CWithCWhereInput\n  x_some: CWithCWhereInput\n  x_none: CWithCWhereInput\n}\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createAWithIdWithA(data: AWithIdWithACreateInput!): AWithIdWithA!\n  createAWithoutIdWithA(data: AWithoutIdWithACreateInput!): AWithoutIdWithA!\n  createBWithIdWithA(data: BWithIdWithACreateInput!): BWithIdWithA!\n  createBWithoutIdWithA(data: BWithoutIdWithACreateInput!): BWithoutIdWithA!\n  createCWithIdWithA(data: CWithIdWithACreateInput!): CWithIdWithA!\n  createCWithoutIdWithA(data: CWithoutIdWithACreateInput!): CWithoutIdWithA!\n  createAWithIdWithB(data: AWithIdWithBCreateInput!): AWithIdWithB!\n  createAWithoutIdWithB(data: AWithoutIdWithBCreateInput!): AWithoutIdWithB!\n  createBWithIdWithB(data: BWithIdWithBCreateInput!): BWithIdWithB!\n  createBWithoutIdWithB(data: BWithoutIdWithBCreateInput!): BWithoutIdWithB!\n  createCWithIdWithB(data: CWithIdWithBCreateInput!): CWithIdWithB!\n  createCWithoutIdWithB(data: CWithoutIdWithBCreateInput!): CWithoutIdWithB!\n  createAWithIdWithC(data: AWithIdWithCCreateInput!): AWithIdWithC!\n  createAWithoutIdWithC(data: AWithoutIdWithCCreateInput!): AWithoutIdWithC!\n  createBWithIdWithC(data: BWithIdWithCCreateInput!): BWithIdWithC!\n  createBWithoutIdWithC(data: BWithoutIdWithCCreateInput!): BWithoutIdWithC!\n  createCWithIdWithC(data: CWithIdWithCCreateInput!): CWithIdWithC!\n  createCWithoutIdWithC(data: CWithoutIdWithCCreateInput!): CWithoutIdWithC!\n  createAWithA(data: AWithACreateInput!): AWithA!\n  createAWithB(data: AWithBCreateInput!): AWithB!\n  createAWithC(data: AWithCCreateInput!): AWithC!\n  createBWithA(data: BWithACreateInput!): BWithA!\n  createBWithB(data: BWithBCreateInput!): BWithB!\n  createBWithC(data: BWithCCreateInput!): BWithC!\n  createCWithA(data: CWithACreateInput!): CWithA!\n  createCWithB(data: CWithBCreateInput!): CWithB!\n  createCWithC(data: CWithCCreateInput!): CWithC!\n  updateAWithIdWithA(data: AWithIdWithAUpdateInput!, where: AWithIdWithAWhereUniqueInput!): AWithIdWithA\n  updateBWithIdWithA(data: BWithIdWithAUpdateInput!, where: BWithIdWithAWhereUniqueInput!): BWithIdWithA\n  updateCWithIdWithA(data: CWithIdWithAUpdateInput!, where: CWithIdWithAWhereUniqueInput!): CWithIdWithA\n  updateAWithIdWithB(data: AWithIdWithBUpdateInput!, where: AWithIdWithBWhereUniqueInput!): AWithIdWithB\n  updateBWithIdWithB(data: BWithIdWithBUpdateInput!, where: BWithIdWithBWhereUniqueInput!): BWithIdWithB\n  updateCWithIdWithB(data: CWithIdWithBUpdateInput!, where: CWithIdWithBWhereUniqueInput!): CWithIdWithB\n  updateAWithIdWithC(data: AWithIdWithCUpdateInput!, where: AWithIdWithCWhereUniqueInput!): AWithIdWithC\n  updateBWithIdWithC(data: BWithIdWithCUpdateInput!, where: BWithIdWithCWhereUniqueInput!): BWithIdWithC\n  updateCWithIdWithC(data: CWithIdWithCUpdateInput!, where: CWithIdWithCWhereUniqueInput!): CWithIdWithC\n  deleteAWithIdWithA(where: AWithIdWithAWhereUniqueInput!): AWithIdWithA\n  deleteBWithIdWithA(where: BWithIdWithAWhereUniqueInput!): BWithIdWithA\n  deleteCWithIdWithA(where: CWithIdWithAWhereUniqueInput!): CWithIdWithA\n  deleteAWithIdWithB(where: AWithIdWithBWhereUniqueInput!): AWithIdWithB\n  deleteBWithIdWithB(where: BWithIdWithBWhereUniqueInput!): BWithIdWithB\n  deleteCWithIdWithB(where: CWithIdWithBWhereUniqueInput!): CWithIdWithB\n  deleteAWithIdWithC(where: AWithIdWithCWhereUniqueInput!): AWithIdWithC\n  deleteBWithIdWithC(where: BWithIdWithCWhereUniqueInput!): BWithIdWithC\n  deleteCWithIdWithC(where: CWithIdWithCWhereUniqueInput!): CWithIdWithC\n  upsertAWithIdWithA(where: AWithIdWithAWhereUniqueInput!, create: AWithIdWithACreateInput!, update: AWithIdWithAUpdateInput!): AWithIdWithA!\n  upsertBWithIdWithA(where: BWithIdWithAWhereUniqueInput!, create: BWithIdWithACreateInput!, update: BWithIdWithAUpdateInput!): BWithIdWithA!\n  upsertCWithIdWithA(where: CWithIdWithAWhereUniqueInput!, create: CWithIdWithACreateInput!, update: CWithIdWithAUpdateInput!): CWithIdWithA!\n  upsertAWithIdWithB(where: AWithIdWithBWhereUniqueInput!, create: AWithIdWithBCreateInput!, update: AWithIdWithBUpdateInput!): AWithIdWithB!\n  upsertBWithIdWithB(where: BWithIdWithBWhereUniqueInput!, create: BWithIdWithBCreateInput!, update: BWithIdWithBUpdateInput!): BWithIdWithB!\n  upsertCWithIdWithB(where: CWithIdWithBWhereUniqueInput!, create: CWithIdWithBCreateInput!, update: CWithIdWithBUpdateInput!): CWithIdWithB!\n  upsertAWithIdWithC(where: AWithIdWithCWhereUniqueInput!, create: AWithIdWithCCreateInput!, update: AWithIdWithCUpdateInput!): AWithIdWithC!\n  upsertBWithIdWithC(where: BWithIdWithCWhereUniqueInput!, create: BWithIdWithCCreateInput!, update: BWithIdWithCUpdateInput!): BWithIdWithC!\n  upsertCWithIdWithC(where: CWithIdWithCWhereUniqueInput!, create: CWithIdWithCCreateInput!, update: CWithIdWithCUpdateInput!): CWithIdWithC!\n  updateManyAWithIdWithAs(data: AWithIdWithAUpdateManyMutationInput!, where: AWithIdWithAWhereInput): BatchPayload!\n  updateManyAWithoutIdWithAs(data: AWithoutIdWithAUpdateManyMutationInput!, where: AWithoutIdWithAWhereInput): BatchPayload!\n  updateManyBWithIdWithAs(data: BWithIdWithAUpdateManyMutationInput!, where: BWithIdWithAWhereInput): BatchPayload!\n  updateManyBWithoutIdWithAs(data: BWithoutIdWithAUpdateManyMutationInput!, where: BWithoutIdWithAWhereInput): BatchPayload!\n  updateManyCWithIdWithAs(data: CWithIdWithAUpdateManyMutationInput!, where: CWithIdWithAWhereInput): BatchPayload!\n  updateManyCWithoutIdWithAs(data: CWithoutIdWithAUpdateManyMutationInput!, where: CWithoutIdWithAWhereInput): BatchPayload!\n  updateManyAWithIdWithBs(data: AWithIdWithBUpdateManyMutationInput!, where: AWithIdWithBWhereInput): BatchPayload!\n  updateManyAWithoutIdWithBs(data: AWithoutIdWithBUpdateManyMutationInput!, where: AWithoutIdWithBWhereInput): BatchPayload!\n  updateManyBWithIdWithBs(data: BWithIdWithBUpdateManyMutationInput!, where: BWithIdWithBWhereInput): BatchPayload!\n  updateManyBWithoutIdWithBs(data: BWithoutIdWithBUpdateManyMutationInput!, where: BWithoutIdWithBWhereInput): BatchPayload!\n  updateManyCWithIdWithBs(data: CWithIdWithBUpdateManyMutationInput!, where: CWithIdWithBWhereInput): BatchPayload!\n  updateManyCWithoutIdWithBs(data: CWithoutIdWithBUpdateManyMutationInput!, where: CWithoutIdWithBWhereInput): BatchPayload!\n  updateManyAWithIdWithCs(data: AWithIdWithCUpdateManyMutationInput!, where: AWithIdWithCWhereInput): BatchPayload!\n  updateManyAWithoutIdWithCs(data: AWithoutIdWithCUpdateManyMutationInput!, where: AWithoutIdWithCWhereInput): BatchPayload!\n  updateManyBWithIdWithCs(data: BWithIdWithCUpdateManyMutationInput!, where: BWithIdWithCWhereInput): BatchPayload!\n  updateManyBWithoutIdWithCs(data: BWithoutIdWithCUpdateManyMutationInput!, where: BWithoutIdWithCWhereInput): BatchPayload!\n  updateManyCWithIdWithCs(data: CWithIdWithCUpdateManyMutationInput!, where: CWithIdWithCWhereInput): BatchPayload!\n  updateManyCWithoutIdWithCs(data: CWithoutIdWithCUpdateManyMutationInput!, where: CWithoutIdWithCWhereInput): BatchPayload!\n  deleteManyAWithIdWithAs(where: AWithIdWithAWhereInput): BatchPayload!\n  deleteManyAWithoutIdWithAs(where: AWithoutIdWithAWhereInput): BatchPayload!\n  deleteManyBWithIdWithAs(where: BWithIdWithAWhereInput): BatchPayload!\n  deleteManyBWithoutIdWithAs(where: BWithoutIdWithAWhereInput): BatchPayload!\n  deleteManyCWithIdWithAs(where: CWithIdWithAWhereInput): BatchPayload!\n  deleteManyCWithoutIdWithAs(where: CWithoutIdWithAWhereInput): BatchPayload!\n  deleteManyAWithIdWithBs(where: AWithIdWithBWhereInput): BatchPayload!\n  deleteManyAWithoutIdWithBs(where: AWithoutIdWithBWhereInput): BatchPayload!\n  deleteManyBWithIdWithBs(where: BWithIdWithBWhereInput): BatchPayload!\n  deleteManyBWithoutIdWithBs(where: BWithoutIdWithBWhereInput): BatchPayload!\n  deleteManyCWithIdWithBs(where: CWithIdWithBWhereInput): BatchPayload!\n  deleteManyCWithoutIdWithBs(where: CWithoutIdWithBWhereInput): BatchPayload!\n  deleteManyAWithIdWithCs(where: AWithIdWithCWhereInput): BatchPayload!\n  deleteManyAWithoutIdWithCs(where: AWithoutIdWithCWhereInput): BatchPayload!\n  deleteManyBWithIdWithCs(where: BWithIdWithCWhereInput): BatchPayload!\n  deleteManyBWithoutIdWithCs(where: BWithoutIdWithCWhereInput): BatchPayload!\n  deleteManyCWithIdWithCs(where: CWithIdWithCWhereInput): BatchPayload!\n  deleteManyCWithoutIdWithCs(where: CWithoutIdWithCWhereInput): BatchPayload!\n  deleteManyAWithAs(where: AWithAWhereInput): BatchPayload!\n  deleteManyAWithBs(where: AWithBWhereInput): BatchPayload!\n  deleteManyAWithCs(where: AWithCWhereInput): BatchPayload!\n  deleteManyBWithAs(where: BWithAWhereInput): BatchPayload!\n  deleteManyBWithBs(where: BWithBWhereInput): BatchPayload!\n  deleteManyBWithCs(where: BWithCWhereInput): BatchPayload!\n  deleteManyCWithAs(where: CWithAWhereInput): BatchPayload!\n  deleteManyCWithBs(where: CWithBWhereInput): BatchPayload!\n  deleteManyCWithCs(where: CWithCWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  aWithIdWithAs(where: AWithIdWithAWhereInput, orderBy: AWithIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithIdWithA]!\n  aWithoutIdWithAs(where: AWithoutIdWithAWhereInput, orderBy: AWithoutIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithoutIdWithA]!\n  bWithIdWithAs(where: BWithIdWithAWhereInput, orderBy: BWithIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithIdWithA]!\n  bWithoutIdWithAs(where: BWithoutIdWithAWhereInput, orderBy: BWithoutIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithoutIdWithA]!\n  cWithIdWithAs(where: CWithIdWithAWhereInput, orderBy: CWithIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithIdWithA]!\n  cWithoutIdWithAs(where: CWithoutIdWithAWhereInput, orderBy: CWithoutIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithoutIdWithA]!\n  aWithIdWithBs(where: AWithIdWithBWhereInput, orderBy: AWithIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithIdWithB]!\n  aWithoutIdWithBs(where: AWithoutIdWithBWhereInput, orderBy: AWithoutIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithoutIdWithB]!\n  bWithIdWithBs(where: BWithIdWithBWhereInput, orderBy: BWithIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithIdWithB]!\n  bWithoutIdWithBs(where: BWithoutIdWithBWhereInput, orderBy: BWithoutIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithoutIdWithB]!\n  cWithIdWithBs(where: CWithIdWithBWhereInput, orderBy: CWithIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithIdWithB]!\n  cWithoutIdWithBs(where: CWithoutIdWithBWhereInput, orderBy: CWithoutIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithoutIdWithB]!\n  aWithIdWithCs(where: AWithIdWithCWhereInput, orderBy: AWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithIdWithC]!\n  aWithoutIdWithCs(where: AWithoutIdWithCWhereInput, orderBy: AWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithoutIdWithC]!\n  bWithIdWithCs(where: BWithIdWithCWhereInput, orderBy: BWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithIdWithC]!\n  bWithoutIdWithCs(where: BWithoutIdWithCWhereInput, orderBy: BWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithoutIdWithC]!\n  cWithIdWithCs(where: CWithIdWithCWhereInput, orderBy: CWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithIdWithC]!\n  cWithoutIdWithCs(where: CWithoutIdWithCWhereInput, orderBy: CWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithoutIdWithC]!\n  aWithAs(where: AWithAWhereInput, orderBy: AWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithA]!\n  aWithBs(where: AWithBWhereInput, orderBy: AWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithB]!\n  aWithCs(where: AWithCWhereInput, orderBy: AWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AWithC]!\n  bWithAs(where: BWithAWhereInput, orderBy: BWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithA]!\n  bWithBs(where: BWithBWhereInput, orderBy: BWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithB]!\n  bWithCs(where: BWithCWhereInput, orderBy: BWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BWithC]!\n  cWithAs(where: CWithAWhereInput, orderBy: CWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithA]!\n  cWithBs(where: CWithBWhereInput, orderBy: CWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithB]!\n  cWithCs(where: CWithCWhereInput, orderBy: CWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CWithC]!\n  aWithIdWithA(where: AWithIdWithAWhereUniqueInput!): AWithIdWithA\n  bWithIdWithA(where: BWithIdWithAWhereUniqueInput!): BWithIdWithA\n  cWithIdWithA(where: CWithIdWithAWhereUniqueInput!): CWithIdWithA\n  aWithIdWithB(where: AWithIdWithBWhereUniqueInput!): AWithIdWithB\n  bWithIdWithB(where: BWithIdWithBWhereUniqueInput!): BWithIdWithB\n  cWithIdWithB(where: CWithIdWithBWhereUniqueInput!): CWithIdWithB\n  aWithIdWithC(where: AWithIdWithCWhereUniqueInput!): AWithIdWithC\n  bWithIdWithC(where: BWithIdWithCWhereUniqueInput!): BWithIdWithC\n  cWithIdWithC(where: CWithIdWithCWhereUniqueInput!): CWithIdWithC\n  aWithIdWithAsConnection(where: AWithIdWithAWhereInput, orderBy: AWithIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithIdWithAConnection!\n  aWithoutIdWithAsConnection(where: AWithoutIdWithAWhereInput, orderBy: AWithoutIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithoutIdWithAConnection!\n  bWithIdWithAsConnection(where: BWithIdWithAWhereInput, orderBy: BWithIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithIdWithAConnection!\n  bWithoutIdWithAsConnection(where: BWithoutIdWithAWhereInput, orderBy: BWithoutIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithoutIdWithAConnection!\n  cWithIdWithAsConnection(where: CWithIdWithAWhereInput, orderBy: CWithIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithIdWithAConnection!\n  cWithoutIdWithAsConnection(where: CWithoutIdWithAWhereInput, orderBy: CWithoutIdWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithoutIdWithAConnection!\n  aWithIdWithBsConnection(where: AWithIdWithBWhereInput, orderBy: AWithIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithIdWithBConnection!\n  aWithoutIdWithBsConnection(where: AWithoutIdWithBWhereInput, orderBy: AWithoutIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithoutIdWithBConnection!\n  bWithIdWithBsConnection(where: BWithIdWithBWhereInput, orderBy: BWithIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithIdWithBConnection!\n  bWithoutIdWithBsConnection(where: BWithoutIdWithBWhereInput, orderBy: BWithoutIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithoutIdWithBConnection!\n  cWithIdWithBsConnection(where: CWithIdWithBWhereInput, orderBy: CWithIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithIdWithBConnection!\n  cWithoutIdWithBsConnection(where: CWithoutIdWithBWhereInput, orderBy: CWithoutIdWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithoutIdWithBConnection!\n  aWithIdWithCsConnection(where: AWithIdWithCWhereInput, orderBy: AWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithIdWithCConnection!\n  aWithoutIdWithCsConnection(where: AWithoutIdWithCWhereInput, orderBy: AWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithoutIdWithCConnection!\n  bWithIdWithCsConnection(where: BWithIdWithCWhereInput, orderBy: BWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithIdWithCConnection!\n  bWithoutIdWithCsConnection(where: BWithoutIdWithCWhereInput, orderBy: BWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithoutIdWithCConnection!\n  cWithIdWithCsConnection(where: CWithIdWithCWhereInput, orderBy: CWithIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithIdWithCConnection!\n  cWithoutIdWithCsConnection(where: CWithoutIdWithCWhereInput, orderBy: CWithoutIdWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithoutIdWithCConnection!\n  aWithAsConnection(where: AWithAWhereInput, orderBy: AWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithAConnection!\n  aWithBsConnection(where: AWithBWhereInput, orderBy: AWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithBConnection!\n  aWithCsConnection(where: AWithCWhereInput, orderBy: AWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AWithCConnection!\n  bWithAsConnection(where: BWithAWhereInput, orderBy: BWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithAConnection!\n  bWithBsConnection(where: BWithBWhereInput, orderBy: BWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithBConnection!\n  bWithCsConnection(where: BWithCWhereInput, orderBy: BWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BWithCConnection!\n  cWithAsConnection(where: CWithAWhereInput, orderBy: CWithAOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithAConnection!\n  cWithBsConnection(where: CWithBWhereInput, orderBy: CWithBOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithBConnection!\n  cWithCsConnection(where: CWithCWhereInput, orderBy: CWithCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CWithCConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  aWithIdWithA(where: AWithIdWithASubscriptionWhereInput): AWithIdWithASubscriptionPayload\n  aWithoutIdWithA(where: AWithoutIdWithASubscriptionWhereInput): AWithoutIdWithASubscriptionPayload\n  bWithIdWithA(where: BWithIdWithASubscriptionWhereInput): BWithIdWithASubscriptionPayload\n  bWithoutIdWithA(where: BWithoutIdWithASubscriptionWhereInput): BWithoutIdWithASubscriptionPayload\n  cWithIdWithA(where: CWithIdWithASubscriptionWhereInput): CWithIdWithASubscriptionPayload\n  cWithoutIdWithA(where: CWithoutIdWithASubscriptionWhereInput): CWithoutIdWithASubscriptionPayload\n  aWithIdWithB(where: AWithIdWithBSubscriptionWhereInput): AWithIdWithBSubscriptionPayload\n  aWithoutIdWithB(where: AWithoutIdWithBSubscriptionWhereInput): AWithoutIdWithBSubscriptionPayload\n  bWithIdWithB(where: BWithIdWithBSubscriptionWhereInput): BWithIdWithBSubscriptionPayload\n  bWithoutIdWithB(where: BWithoutIdWithBSubscriptionWhereInput): BWithoutIdWithBSubscriptionPayload\n  cWithIdWithB(where: CWithIdWithBSubscriptionWhereInput): CWithIdWithBSubscriptionPayload\n  cWithoutIdWithB(where: CWithoutIdWithBSubscriptionWhereInput): CWithoutIdWithBSubscriptionPayload\n  aWithIdWithC(where: AWithIdWithCSubscriptionWhereInput): AWithIdWithCSubscriptionPayload\n  aWithoutIdWithC(where: AWithoutIdWithCSubscriptionWhereInput): AWithoutIdWithCSubscriptionPayload\n  bWithIdWithC(where: BWithIdWithCSubscriptionWhereInput): BWithIdWithCSubscriptionPayload\n  bWithoutIdWithC(where: BWithoutIdWithCSubscriptionWhereInput): BWithoutIdWithCSubscriptionPayload\n  cWithIdWithC(where: CWithIdWithCSubscriptionWhereInput): CWithIdWithCSubscriptionPayload\n  cWithoutIdWithC(where: CWithoutIdWithCSubscriptionWhereInput): CWithoutIdWithCSubscriptionPayload\n  aWithA(where: AWithASubscriptionWhereInput): AWithASubscriptionPayload\n  aWithB(where: AWithBSubscriptionWhereInput): AWithBSubscriptionPayload\n  aWithC(where: AWithCSubscriptionWhereInput): AWithCSubscriptionPayload\n  bWithA(where: BWithASubscriptionWhereInput): BWithASubscriptionPayload\n  bWithB(where: BWithBSubscriptionWhereInput): BWithBSubscriptionPayload\n  bWithC(where: BWithCSubscriptionWhereInput): BWithCSubscriptionPayload\n  cWithA(where: CWithASubscriptionWhereInput): CWithASubscriptionPayload\n  cWithB(where: CWithBSubscriptionWhereInput): CWithBSubscriptionPayload\n  cWithC(where: CWithCSubscriptionWhereInput): CWithCSubscriptionPayload\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 419
    },
    {
      "name": "relational.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/withAndWithoutId/relational.graphql",
      "sha": "6f2415a1b3ea17aeb9080fe91f3fd97d143da8cf",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/withAndWithoutId/relational.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/6f2415a1b3ea17aeb9080fe91f3fd97d143da8cf",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/withAndWithoutId/relational.graphql",
      "content": "type AggregateTypeWithId {\n  count: Int!\n}\n\ntype AggregateTypeWithoutId {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createTypeWithId(data: TypeWithIdCreateInput!): TypeWithId!\n  createTypeWithoutId(data: TypeWithoutIdCreateInput!): TypeWithoutId!\n  updateTypeWithId(data: TypeWithIdUpdateInput!, where: TypeWithIdWhereUniqueInput!): TypeWithId\n  deleteTypeWithId(where: TypeWithIdWhereUniqueInput!): TypeWithId\n  upsertTypeWithId(where: TypeWithIdWhereUniqueInput!, create: TypeWithIdCreateInput!, update: TypeWithIdUpdateInput!): TypeWithId!\n  updateManyTypeWithIds(data: TypeWithIdUpdateManyMutationInput!, where: TypeWithIdWhereInput): BatchPayload!\n  updateManyTypeWithoutIds(data: TypeWithoutIdUpdateManyMutationInput!, where: TypeWithoutIdWhereInput): BatchPayload!\n  deleteManyTypeWithIds(where: TypeWithIdWhereInput): BatchPayload!\n  deleteManyTypeWithoutIds(where: TypeWithoutIdWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  typeWithIds(where: TypeWithIdWhereInput, orderBy: TypeWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TypeWithId]!\n  typeWithoutIds(where: TypeWithoutIdWhereInput, orderBy: TypeWithoutIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TypeWithoutId]!\n  typeWithId(where: TypeWithIdWhereUniqueInput!): TypeWithId\n  typeWithIdsConnection(where: TypeWithIdWhereInput, orderBy: TypeWithIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TypeWithIdConnection!\n  typeWithoutIdsConnection(where: TypeWithoutIdWhereInput, orderBy: TypeWithoutIdOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TypeWithoutIdConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  typeWithId(where: TypeWithIdSubscriptionWhereInput): TypeWithIdSubscriptionPayload\n  typeWithoutId(where: TypeWithoutIdSubscriptionWhereInput): TypeWithoutIdSubscriptionPayload\n}\n\ntype TypeWithId implements Node {\n  id: ID!\n  field: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype TypeWithIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [TypeWithIdEdge]!\n  aggregate: AggregateTypeWithId!\n}\n\ninput TypeWithIdCreateInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype TypeWithIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: TypeWithId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum TypeWithIdOrderByInput {\n  id_ASC\n  id_DESC\n  field_ASC\n  field_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TypeWithIdPreviousValues {\n  id: ID!\n  field: String!\n}\n\ntype TypeWithIdSubscriptionPayload {\n  mutation: MutationType!\n  node: TypeWithId\n  updatedFields: [String!]\n  previousValues: TypeWithIdPreviousValues\n}\n\ninput TypeWithIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TypeWithIdWhereInput\n}\n\ninput TypeWithIdUpdateInput {\n  field: String\n}\n\ninput TypeWithIdUpdateManyMutationInput {\n  field: String\n}\n\ninput TypeWithIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithIdWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\ninput TypeWithIdWhereUniqueInput {\n  id: ID\n}\n\ntype TypeWithoutId {\n  field: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype TypeWithoutIdConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [TypeWithoutIdEdge]!\n  aggregate: AggregateTypeWithoutId!\n}\n\ninput TypeWithoutIdCreateInput {\n  field: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype TypeWithoutIdEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: TypeWithoutId!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum TypeWithoutIdOrderByInput {\n  field_ASC\n  field_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TypeWithoutIdPreviousValues {\n  field: String!\n}\n\ntype TypeWithoutIdSubscriptionPayload {\n  mutation: MutationType!\n  node: TypeWithoutId\n  updatedFields: [String!]\n  previousValues: TypeWithoutIdPreviousValues\n}\n\ninput TypeWithoutIdSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithoutIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithoutIdSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithoutIdSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TypeWithoutIdWhereInput\n}\n\ninput TypeWithoutIdUpdateManyMutationInput {\n  field: String\n}\n\ninput TypeWithoutIdWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TypeWithoutIdWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TypeWithoutIdWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TypeWithoutIdWhereInput!]\n  field: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  field_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  field_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  field_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  field_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  field_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  field_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  field_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  field_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  field_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  field_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  field_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  field_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  field_not_ends_with: String\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 33
    },
    {
      "name": "relational.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/relationNames/relational.graphql",
      "sha": "287b2aceb78375a38d36c5ebe9a3ea1ac2cc7316",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/relationNames/relational.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/287b2aceb78375a38d36c5ebe9a3ea1ac2cc7316",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/relationNames/relational.graphql",
      "content": "type A {\n  toB: B!\n  toB2: B!\n  toC: C\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype AConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [AEdge]!\n  aggregate: AggregateA!\n}\n\ninput ACreateInput {\n  toB: BCreateOneWithoutToAInput!\n  toB2: BCreateOneWithoutToA2Input!\n  toC: CCreateOneWithoutToAInput\n}\n\ninput ACreateManyWithoutToCInput {\n  create: [ACreateWithoutToCInput!]\n}\n\ninput ACreateOneWithoutToB2Input {\n  create: ACreateWithoutToB2Input\n}\n\ninput ACreateOneWithoutToBInput {\n  create: ACreateWithoutToBInput\n}\n\ninput ACreateWithoutToB2Input {\n  toB: BCreateOneWithoutToAInput!\n  toC: CCreateOneWithoutToAInput\n}\n\ninput ACreateWithoutToBInput {\n  toB2: BCreateOneWithoutToA2Input!\n  toC: CCreateOneWithoutToAInput\n}\n\ninput ACreateWithoutToCInput {\n  toB: BCreateOneWithoutToAInput!\n  toB2: BCreateOneWithoutToA2Input!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype AEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: A!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\ntype AggregateA {\n  count: Int!\n}\n\ntype AggregateB {\n  count: Int!\n}\n\ntype AggregateC {\n  count: Int!\n}\n\nenum AOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ASubscriptionPayload {\n  mutation: MutationType!\n  node: A\n  updatedFields: [String!]\n}\n\ninput ASubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ASubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [ASubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AWhereInput\n}\n\ninput AWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [AWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [AWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [AWhereInput!]\n  toB: BWhereInput\n  toB2: BWhereInput\n  toC: CWhereInput\n}\n\ntype B {\n  toA: A!\n  toA2: A!\n  toC: C!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BEdge]!\n  aggregate: AggregateB!\n}\n\ninput BCreateInput {\n  toA: ACreateOneWithoutToBInput!\n  toA2: ACreateOneWithoutToB2Input!\n  toC: CCreateOneWithoutToBInput!\n}\n\ninput BCreateManyWithoutToCInput {\n  create: [BCreateWithoutToCInput!]\n}\n\ninput BCreateOneWithoutToA2Input {\n  create: BCreateWithoutToA2Input\n}\n\ninput BCreateOneWithoutToAInput {\n  create: BCreateWithoutToAInput\n}\n\ninput BCreateWithoutToA2Input {\n  toA: ACreateOneWithoutToBInput!\n  toC: CCreateOneWithoutToBInput!\n}\n\ninput BCreateWithoutToAInput {\n  toA2: ACreateOneWithoutToB2Input!\n  toC: CCreateOneWithoutToBInput!\n}\n\ninput BCreateWithoutToCInput {\n  toA: ACreateOneWithoutToBInput!\n  toA2: ACreateOneWithoutToB2Input!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: B!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BSubscriptionPayload {\n  mutation: MutationType!\n  node: B\n  updatedFields: [String!]\n}\n\ninput BSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BWhereInput\n}\n\ninput BWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [BWhereInput!]\n  toA: AWhereInput\n  toA2: AWhereInput\n  toC: CWhereInput\n}\n\ntype C {\n  toB(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B!]\n  toA(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CEdge]!\n  aggregate: AggregateC!\n}\n\ninput CCreateInput {\n  toB: BCreateManyWithoutToCInput\n  toA: ACreateManyWithoutToCInput\n}\n\ninput CCreateOneWithoutToAInput {\n  create: CCreateWithoutToAInput\n}\n\ninput CCreateOneWithoutToBInput {\n  create: CCreateWithoutToBInput\n}\n\ninput CCreateWithoutToAInput {\n  toB: BCreateManyWithoutToCInput\n}\n\ninput CCreateWithoutToBInput {\n  toA: ACreateManyWithoutToCInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: C!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum COrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CSubscriptionPayload {\n  mutation: MutationType!\n  node: C\n  updatedFields: [String!]\n}\n\ninput CSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CWhereInput\n}\n\ninput CWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [CWhereInput!]\n  toB_every: BWhereInput\n  toB_some: BWhereInput\n  toB_none: BWhereInput\n  toA_every: AWhereInput\n  toA_some: AWhereInput\n  toA_none: AWhereInput\n}\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createA(data: ACreateInput!): A!\n  createB(data: BCreateInput!): B!\n  createC(data: CCreateInput!): C!\n  deleteManyAs(where: AWhereInput): BatchPayload!\n  deleteManyBs(where: BWhereInput): BatchPayload!\n  deleteManyCs(where: CWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  as(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [A]!\n  bs(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [B]!\n  cs(where: CWhereInput, orderBy: COrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [C]!\n  asConnection(where: AWhereInput, orderBy: AOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AConnection!\n  bsConnection(where: BWhereInput, orderBy: BOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BConnection!\n  csConnection(where: CWhereInput, orderBy: COrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  a(where: ASubscriptionWhereInput): ASubscriptionPayload\n  b(where: BSubscriptionWhereInput): BSubscriptionPayload\n  c(where: CSubscriptionWhereInput): CSubscriptionPayload\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 52
    },
    {
      "name": "document.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/prisma-3143/document.graphql",
      "sha": "ba96e25944fbc1d761072ab7f92339b2607b4794",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/prisma-3143/document.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/ba96e25944fbc1d761072ab7f92339b2607b4794",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/prisma-3143/document.graphql",
      "content": "type AggregateStory {\n  count: Int!\n}\n\ntype AggregateUserSpace {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUserSpace(data: UserSpaceCreateInput!): UserSpace!\n  createStory: Story!\n  updateUserSpace(data: UserSpaceUpdateInput!, where: UserSpaceWhereUniqueInput!): UserSpace\n  deleteUserSpace(where: UserSpaceWhereUniqueInput!): UserSpace\n  deleteStory(where: StoryWhereUniqueInput!): Story\n  upsertUserSpace(where: UserSpaceWhereUniqueInput!, create: UserSpaceCreateInput!, update: UserSpaceUpdateInput!): UserSpace!\n  deleteManyUserSpaces(where: UserSpaceWhereInput): BatchPayload!\n  deleteManyStories(where: StoryWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  userSpaces(where: UserSpaceWhereInput, orderBy: UserSpaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserSpace]!\n  stories(where: StoryWhereInput, orderBy: StoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Story]!\n  userSpace(where: UserSpaceWhereUniqueInput!): UserSpace\n  story(where: StoryWhereUniqueInput!): Story\n  userSpacesConnection(where: UserSpaceWhereInput, orderBy: UserSpaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserSpaceConnection!\n  storiesConnection(where: StoryWhereInput, orderBy: StoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StoryConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Story implements Node {\n  id: ID!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype StoryConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [StoryEdge]!\n  aggregate: AggregateStory!\n}\n\ninput StoryCreateManyInput {\n  connect: [StoryWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype StoryEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Story!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum StoryOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype StoryPreviousValues {\n  id: ID!\n}\n\ninput StoryScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [StoryScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [StoryScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [StoryScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ntype StorySubscriptionPayload {\n  mutation: MutationType!\n  node: Story\n  updatedFields: [String!]\n  previousValues: StoryPreviousValues\n}\n\ninput StorySubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [StorySubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [StorySubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [StorySubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: StoryWhereInput\n}\n\ninput StoryUpdateManyInput {\n  connect: [StoryWhereUniqueInput!]\n  disconnect: [StoryWhereUniqueInput!]\n  delete: [StoryWhereUniqueInput!]\n  deleteMany: [StoryScalarWhereInput!]\n}\n\ninput StoryWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [StoryWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [StoryWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [StoryWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput StoryWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  userSpace(where: UserSpaceSubscriptionWhereInput): UserSpaceSubscriptionPayload\n  story(where: StorySubscriptionWhereInput): StorySubscriptionPayload\n}\n\ntype UserSpace implements Node {\n  id: ID!\n  stories(where: StoryWhereInput, orderBy: StoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Story!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserSpaceConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserSpaceEdge]!\n  aggregate: AggregateUserSpace!\n}\n\ninput UserSpaceCreateInput {\n  stories: StoryCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserSpaceEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: UserSpace!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserSpaceOrderByInput {\n  id_ASC\n  id_DESC\n}\n\ntype UserSpacePreviousValues {\n  id: ID!\n}\n\ntype UserSpaceSubscriptionPayload {\n  mutation: MutationType!\n  node: UserSpace\n  updatedFields: [String!]\n  previousValues: UserSpacePreviousValues\n}\n\ninput UserSpaceSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSpaceSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSpaceSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserSpaceSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserSpaceWhereInput\n}\n\ninput UserSpaceUpdateInput {\n  stories: StoryUpdateManyInput\n}\n\ninput UserSpaceWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSpaceWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSpaceWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserSpaceWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput UserSpaceWhereUniqueInput {\n  id: ID\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 17,
      "containsCycle": false,
      "polynomialLevel": 2,
      "numDefinitions": 33
    },
    {
      "name": "relational.graphql",
      "path": "cli/packages/prisma-generate-schema/__tests__/blackbox/cases/prisma-3143/relational.graphql",
      "sha": "489f28ddc06c860a7c385cac3832346372becd8e",
      "url": "https://api.github.com/repositories/162263047/contents/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/prisma-3143/relational.graphql?ref=47868aead18762e836d9dea5eb1b45023be2d15c",
      "git_url": "https://api.github.com/repositories/162263047/git/blobs/489f28ddc06c860a7c385cac3832346372becd8e",
      "html_url": "https://github.com/risenforward/itspixie/blob/47868aead18762e836d9dea5eb1b45023be2d15c/cli/packages/prisma-generate-schema/__tests__/blackbox/cases/prisma-3143/relational.graphql",
      "content": "type AggregateStory {\n  count: Int!\n}\n\ntype AggregateUserSpace {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nRaw JSON value\n\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUserSpace(data: UserSpaceCreateInput!): UserSpace!\n  createStory: Story!\n  updateUserSpace(data: UserSpaceUpdateInput!, where: UserSpaceWhereUniqueInput!): UserSpace\n  deleteUserSpace(where: UserSpaceWhereUniqueInput!): UserSpace\n  deleteStory(where: StoryWhereUniqueInput!): Story\n  upsertUserSpace(where: UserSpaceWhereUniqueInput!, create: UserSpaceCreateInput!, update: UserSpaceUpdateInput!): UserSpace!\n  deleteManyUserSpaces(where: UserSpaceWhereInput): BatchPayload!\n  deleteManyStories(where: StoryWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  userSpaces(where: UserSpaceWhereInput, orderBy: UserSpaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserSpace]!\n  stories(where: StoryWhereInput, orderBy: StoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Story]!\n  userSpace(where: UserSpaceWhereUniqueInput!): UserSpace\n  story(where: StoryWhereUniqueInput!): Story\n  userSpacesConnection(where: UserSpaceWhereInput, orderBy: UserSpaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserSpaceConnection!\n  storiesConnection(where: StoryWhereInput, orderBy: StoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StoryConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Story implements Node {\n  id: ID!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype StoryConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [StoryEdge]!\n  aggregate: AggregateStory!\n}\n\ninput StoryCreateManyInput {\n  connect: [StoryWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype StoryEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Story!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum StoryOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype StoryPreviousValues {\n  id: ID!\n}\n\ninput StoryScalarWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [StoryScalarWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [StoryScalarWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [StoryScalarWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ntype StorySubscriptionPayload {\n  mutation: MutationType!\n  node: Story\n  updatedFields: [String!]\n  previousValues: StoryPreviousValues\n}\n\ninput StorySubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [StorySubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [StorySubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [StorySubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: StoryWhereInput\n}\n\ninput StoryUpdateManyInput {\n  connect: [StoryWhereUniqueInput!]\n  disconnect: [StoryWhereUniqueInput!]\n  delete: [StoryWhereUniqueInput!]\n  deleteMany: [StoryScalarWhereInput!]\n}\n\ninput StoryWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [StoryWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [StoryWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [StoryWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n}\n\ninput StoryWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  userSpace(where: UserSpaceSubscriptionWhereInput): UserSpaceSubscriptionPayload\n  story(where: StorySubscriptionWhereInput): StorySubscriptionPayload\n}\n\ntype UserSpace implements Node {\n  id: ID!\n  stories(where: StoryWhereInput, orderBy: StoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Story!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserSpaceConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserSpaceEdge]!\n  aggregate: AggregateUserSpace!\n}\n\ninput UserSpaceCreateInput {\n  stories: StoryCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserSpaceEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: UserSpace!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserSpaceOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserSpacePreviousValues {\n  id: ID!\n}\n\ntype UserSpaceSubscriptionPayload {\n  mutation: MutationType!\n  node: UserSpace\n  updatedFields: [String!]\n  previousValues: UserSpacePreviousValues\n}\n\ninput UserSpaceSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSpaceSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSpaceSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserSpaceSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserSpaceWhereInput\n}\n\ninput UserSpaceUpdateInput {\n  stories: StoryUpdateManyInput\n}\n\ninput UserSpaceWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSpaceWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSpaceWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserSpaceWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  stories_every: StoryWhereInput\n  stories_some: StoryWhereInput\n  stories_none: StoryWhereInput\n}\n\ninput UserSpaceWhereUniqueInput {\n  id: ID\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 17,
      "containsCycle": false,
      "polynomialLevel": 2,
      "numDefinitions": 34
    }
  ],
  "metrics": {
    "created_at": "2018-12-18T09:25:54Z",
    "updated_at": "2019-03-08T15:10:52Z",
    "pushed_at": "2019-02-20T08:26:47Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "apache-2.0",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}