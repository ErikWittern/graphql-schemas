{
  "repo_name": "-Hands-on-Application-Building-with-GraphQL",
  "repo_full_name": "packtpublishing/-hands-on-application-building-with-graphql",
  "repo_owner": "PacktPublishing",
  "repo_description": "Code Repository for Hands-on Application Building with GraphQL, Published by Packt",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "Section6/server/src/generated/prisma.graphql",
      "sha": "711b91f7bc61fd7b50f381a08a90b21e2b14c082",
      "url": "https://api.github.com/repositories/137739229/contents/Section6/server/src/generated/prisma.graphql?ref=b0c5228455fbee1d142317d69211983b85c9624e",
      "git_url": "https://api.github.com/repositories/137739229/git/blobs/711b91f7bc61fd7b50f381a08a90b21e2b14c082",
      "html_url": "https://github.com/PacktPublishing/-Hands-on-Application-Building-with-GraphQL/blob/b0c5228455fbee1d142317d69211983b85c9624e/Section6/server/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Board implements Node {\n  id: ID!\n  lists(where: ListWhereInput, orderBy: ListOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [List!]\n  name: String!\n  updatedBy(where: UserWhereInput): User\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype Card implements Node {\n  id: ID!\n  name: String!\n  description: String\n  updatedBy(where: UserWhereInput): User\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype List implements Node {\n  cards(where: CardWhereInput, orderBy: CardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Card!]\n  id: ID!\n  name: String!\n  updatedBy(where: UserWhereInput): User\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype User implements Node {\n  id: ID!\n  email: String!\n  password: String!\n  name: String!\n  avatarUrl: String\n  boards(where: BoardWhereInput, orderBy: BoardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Board!]\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateBoard {\n  count: Int!\n}\n\ntype AggregateCard {\n  count: Int!\n}\n\ntype AggregateList {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BoardConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BoardEdge]!\n  aggregate: AggregateBoard!\n}\n\ninput BoardCreateInput {\n  name: String!\n  lists: ListCreateManyInput\n  updatedBy: UserCreateOneWithoutBoardsInput\n}\n\ninput BoardCreateManyWithoutUpdatedByInput {\n  create: [BoardCreateWithoutUpdatedByInput!]\n  connect: [BoardWhereUniqueInput!]\n}\n\ninput BoardCreateWithoutUpdatedByInput {\n  name: String!\n  lists: ListCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BoardEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Board!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BoardOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype BoardPreviousValues {\n  id: ID!\n  name: String!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype BoardSubscriptionPayload {\n  mutation: MutationType!\n  node: Board\n  updatedFields: [String!]\n  previousValues: BoardPreviousValues\n}\n\ninput BoardSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BoardSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BoardSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BoardWhereInput\n}\n\ninput BoardUpdateInput {\n  name: String\n  lists: ListUpdateManyInput\n  updatedBy: UserUpdateOneWithoutBoardsInput\n}\n\ninput BoardUpdateManyWithoutUpdatedByInput {\n  create: [BoardCreateWithoutUpdatedByInput!]\n  connect: [BoardWhereUniqueInput!]\n  disconnect: [BoardWhereUniqueInput!]\n  delete: [BoardWhereUniqueInput!]\n  update: [BoardUpdateWithWhereUniqueWithoutUpdatedByInput!]\n  upsert: [BoardUpsertWithWhereUniqueWithoutUpdatedByInput!]\n}\n\ninput BoardUpdateWithoutUpdatedByDataInput {\n  name: String\n  lists: ListUpdateManyInput\n}\n\ninput BoardUpdateWithWhereUniqueWithoutUpdatedByInput {\n  where: BoardWhereUniqueInput!\n  data: BoardUpdateWithoutUpdatedByDataInput!\n}\n\ninput BoardUpsertWithWhereUniqueWithoutUpdatedByInput {\n  where: BoardWhereUniqueInput!\n  update: BoardUpdateWithoutUpdatedByDataInput!\n  create: BoardCreateWithoutUpdatedByInput!\n}\n\ninput BoardWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BoardWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BoardWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  lists_every: ListWhereInput\n  lists_some: ListWhereInput\n  lists_none: ListWhereInput\n  updatedBy: UserWhereInput\n}\n\ninput BoardWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CardConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CardEdge]!\n  aggregate: AggregateCard!\n}\n\ninput CardCreateInput {\n  name: String!\n  description: String\n  updatedBy: UserCreateOneInput\n}\n\ninput CardCreateManyInput {\n  create: [CardCreateInput!]\n  connect: [CardWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CardEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Card!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CardOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  description_ASC\n  description_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype CardPreviousValues {\n  id: ID!\n  name: String!\n  description: String\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype CardSubscriptionPayload {\n  mutation: MutationType!\n  node: Card\n  updatedFields: [String!]\n  previousValues: CardPreviousValues\n}\n\ninput CardSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CardSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CardSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CardWhereInput\n}\n\ninput CardUpdateDataInput {\n  name: String\n  description: String\n  updatedBy: UserUpdateOneInput\n}\n\ninput CardUpdateInput {\n  name: String\n  description: String\n  updatedBy: UserUpdateOneInput\n}\n\ninput CardUpdateManyInput {\n  create: [CardCreateInput!]\n  connect: [CardWhereUniqueInput!]\n  disconnect: [CardWhereUniqueInput!]\n  delete: [CardWhereUniqueInput!]\n  update: [CardUpdateWithWhereUniqueNestedInput!]\n  upsert: [CardUpsertWithWhereUniqueNestedInput!]\n}\n\ninput CardUpdateWithWhereUniqueNestedInput {\n  where: CardWhereUniqueInput!\n  data: CardUpdateDataInput!\n}\n\ninput CardUpsertWithWhereUniqueNestedInput {\n  where: CardWhereUniqueInput!\n  update: CardUpdateDataInput!\n  create: CardCreateInput!\n}\n\ninput CardWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CardWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CardWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  updatedBy: UserWhereInput\n}\n\ninput CardWhereUniqueInput {\n  id: ID\n}\n\nscalar DateTime\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype ListConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [ListEdge]!\n  aggregate: AggregateList!\n}\n\ninput ListCreateInput {\n  name: String!\n  cards: CardCreateManyInput\n  updatedBy: UserCreateOneInput\n}\n\ninput ListCreateManyInput {\n  create: [ListCreateInput!]\n  connect: [ListWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype ListEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: List!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum ListOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype ListPreviousValues {\n  id: ID!\n  name: String!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype ListSubscriptionPayload {\n  mutation: MutationType!\n  node: List\n  updatedFields: [String!]\n  previousValues: ListPreviousValues\n}\n\ninput ListSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ListSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ListSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ListWhereInput\n}\n\ninput ListUpdateDataInput {\n  name: String\n  cards: CardUpdateManyInput\n  updatedBy: UserUpdateOneInput\n}\n\ninput ListUpdateInput {\n  name: String\n  cards: CardUpdateManyInput\n  updatedBy: UserUpdateOneInput\n}\n\ninput ListUpdateManyInput {\n  create: [ListCreateInput!]\n  connect: [ListWhereUniqueInput!]\n  disconnect: [ListWhereUniqueInput!]\n  delete: [ListWhereUniqueInput!]\n  update: [ListUpdateWithWhereUniqueNestedInput!]\n  upsert: [ListUpsertWithWhereUniqueNestedInput!]\n}\n\ninput ListUpdateWithWhereUniqueNestedInput {\n  where: ListWhereUniqueInput!\n  data: ListUpdateDataInput!\n}\n\ninput ListUpsertWithWhereUniqueNestedInput {\n  where: ListWhereUniqueInput!\n  update: ListUpdateDataInput!\n  create: ListCreateInput!\n}\n\ninput ListWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ListWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ListWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  cards_every: CardWhereInput\n  cards_some: CardWhereInput\n  cards_none: CardWhereInput\n  updatedBy: UserWhereInput\n}\n\ninput ListWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createBoard(data: BoardCreateInput!): Board!\n  createList(data: ListCreateInput!): List!\n  createCard(data: CardCreateInput!): Card!\n  createUser(data: UserCreateInput!): User!\n  updateBoard(data: BoardUpdateInput!, where: BoardWhereUniqueInput!): Board\n  updateList(data: ListUpdateInput!, where: ListWhereUniqueInput!): List\n  updateCard(data: CardUpdateInput!, where: CardWhereUniqueInput!): Card\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteBoard(where: BoardWhereUniqueInput!): Board\n  deleteList(where: ListWhereUniqueInput!): List\n  deleteCard(where: CardWhereUniqueInput!): Card\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertBoard(where: BoardWhereUniqueInput!, create: BoardCreateInput!, update: BoardUpdateInput!): Board!\n  upsertList(where: ListWhereUniqueInput!, create: ListCreateInput!, update: ListUpdateInput!): List!\n  upsertCard(where: CardWhereUniqueInput!, create: CardCreateInput!, update: CardUpdateInput!): Card!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyBoards(data: BoardUpdateInput!, where: BoardWhereInput!): BatchPayload!\n  updateManyLists(data: ListUpdateInput!, where: ListWhereInput!): BatchPayload!\n  updateManyCards(data: CardUpdateInput!, where: CardWhereInput!): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!\n  deleteManyBoards(where: BoardWhereInput!): BatchPayload!\n  deleteManyLists(where: ListWhereInput!): BatchPayload!\n  deleteManyCards(where: CardWhereInput!): BatchPayload!\n  deleteManyUsers(where: UserWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  boards(where: BoardWhereInput, orderBy: BoardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Board]!\n  lists(where: ListWhereInput, orderBy: ListOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [List]!\n  cards(where: CardWhereInput, orderBy: CardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Card]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  board(where: BoardWhereUniqueInput!): Board\n  list(where: ListWhereUniqueInput!): List\n  card(where: CardWhereUniqueInput!): Card\n  user(where: UserWhereUniqueInput!): User\n  boardsConnection(where: BoardWhereInput, orderBy: BoardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BoardConnection!\n  listsConnection(where: ListWhereInput, orderBy: ListOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ListConnection!\n  cardsConnection(where: CardWhereInput, orderBy: CardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CardConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!): Node\n}\n\ntype Subscription {\n  board(where: BoardSubscriptionWhereInput): BoardSubscriptionPayload\n  list(where: ListSubscriptionWhereInput): ListSubscriptionPayload\n  card(where: CardSubscriptionWhereInput): CardSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  password: String!\n  name: String!\n  avatarUrl: String\n  boards: BoardCreateManyWithoutUpdatedByInput\n}\n\ninput UserCreateOneInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutBoardsInput {\n  create: UserCreateWithoutBoardsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutBoardsInput {\n  email: String!\n  password: String!\n  name: String!\n  avatarUrl: String\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  name_ASC\n  name_DESC\n  avatarUrl_ASC\n  avatarUrl_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  password: String!\n  name: String!\n  avatarUrl: String\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateDataInput {\n  email: String\n  password: String\n  name: String\n  avatarUrl: String\n  boards: BoardUpdateManyWithoutUpdatedByInput\n}\n\ninput UserUpdateInput {\n  email: String\n  password: String\n  name: String\n  avatarUrl: String\n  boards: BoardUpdateManyWithoutUpdatedByInput\n}\n\ninput UserUpdateOneInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateDataInput\n  upsert: UserUpsertNestedInput\n}\n\ninput UserUpdateOneWithoutBoardsInput {\n  create: UserCreateWithoutBoardsInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutBoardsDataInput\n  upsert: UserUpsertWithoutBoardsInput\n}\n\ninput UserUpdateWithoutBoardsDataInput {\n  email: String\n  password: String\n  name: String\n  avatarUrl: String\n}\n\ninput UserUpsertNestedInput {\n  update: UserUpdateDataInput!\n  create: UserCreateInput!\n}\n\ninput UserUpsertWithoutBoardsInput {\n  update: UserUpdateWithoutBoardsDataInput!\n  create: UserCreateWithoutBoardsInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  password: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  password_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  password_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  password_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  password_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  password_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  password_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  password_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  password_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  password_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  password_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  password_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  password_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  password_not_ends_with: String\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  avatarUrl: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  avatarUrl_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  avatarUrl_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  avatarUrl_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  avatarUrl_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  avatarUrl_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  avatarUrl_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  avatarUrl_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  avatarUrl_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  avatarUrl_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  avatarUrl_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  avatarUrl_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  avatarUrl_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  avatarUrl_not_ends_with: String\n  boards_every: BoardWhereInput\n  boards_some: BoardWhereInput\n  boards_none: BoardWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 29,
      "containsCycle": true,
      "numDefinitions": 82
    },
    {
      "name": "prisma.graphql",
      "path": "Section7/server/src/generated/prisma.graphql",
      "sha": "711b91f7bc61fd7b50f381a08a90b21e2b14c082",
      "url": "https://api.github.com/repositories/137739229/contents/Section7/server/src/generated/prisma.graphql?ref=b0c5228455fbee1d142317d69211983b85c9624e",
      "git_url": "https://api.github.com/repositories/137739229/git/blobs/711b91f7bc61fd7b50f381a08a90b21e2b14c082",
      "html_url": "https://github.com/PacktPublishing/-Hands-on-Application-Building-with-GraphQL/blob/b0c5228455fbee1d142317d69211983b85c9624e/Section7/server/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Board implements Node {\n  id: ID!\n  lists(where: ListWhereInput, orderBy: ListOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [List!]\n  name: String!\n  updatedBy(where: UserWhereInput): User\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype Card implements Node {\n  id: ID!\n  name: String!\n  description: String\n  updatedBy(where: UserWhereInput): User\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype List implements Node {\n  cards(where: CardWhereInput, orderBy: CardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Card!]\n  id: ID!\n  name: String!\n  updatedBy(where: UserWhereInput): User\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype User implements Node {\n  id: ID!\n  email: String!\n  password: String!\n  name: String!\n  avatarUrl: String\n  boards(where: BoardWhereInput, orderBy: BoardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Board!]\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateBoard {\n  count: Int!\n}\n\ntype AggregateCard {\n  count: Int!\n}\n\ntype AggregateList {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BoardConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BoardEdge]!\n  aggregate: AggregateBoard!\n}\n\ninput BoardCreateInput {\n  name: String!\n  lists: ListCreateManyInput\n  updatedBy: UserCreateOneWithoutBoardsInput\n}\n\ninput BoardCreateManyWithoutUpdatedByInput {\n  create: [BoardCreateWithoutUpdatedByInput!]\n  connect: [BoardWhereUniqueInput!]\n}\n\ninput BoardCreateWithoutUpdatedByInput {\n  name: String!\n  lists: ListCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BoardEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Board!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BoardOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype BoardPreviousValues {\n  id: ID!\n  name: String!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype BoardSubscriptionPayload {\n  mutation: MutationType!\n  node: Board\n  updatedFields: [String!]\n  previousValues: BoardPreviousValues\n}\n\ninput BoardSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BoardSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BoardSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BoardWhereInput\n}\n\ninput BoardUpdateInput {\n  name: String\n  lists: ListUpdateManyInput\n  updatedBy: UserUpdateOneWithoutBoardsInput\n}\n\ninput BoardUpdateManyWithoutUpdatedByInput {\n  create: [BoardCreateWithoutUpdatedByInput!]\n  connect: [BoardWhereUniqueInput!]\n  disconnect: [BoardWhereUniqueInput!]\n  delete: [BoardWhereUniqueInput!]\n  update: [BoardUpdateWithWhereUniqueWithoutUpdatedByInput!]\n  upsert: [BoardUpsertWithWhereUniqueWithoutUpdatedByInput!]\n}\n\ninput BoardUpdateWithoutUpdatedByDataInput {\n  name: String\n  lists: ListUpdateManyInput\n}\n\ninput BoardUpdateWithWhereUniqueWithoutUpdatedByInput {\n  where: BoardWhereUniqueInput!\n  data: BoardUpdateWithoutUpdatedByDataInput!\n}\n\ninput BoardUpsertWithWhereUniqueWithoutUpdatedByInput {\n  where: BoardWhereUniqueInput!\n  update: BoardUpdateWithoutUpdatedByDataInput!\n  create: BoardCreateWithoutUpdatedByInput!\n}\n\ninput BoardWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BoardWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BoardWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  lists_every: ListWhereInput\n  lists_some: ListWhereInput\n  lists_none: ListWhereInput\n  updatedBy: UserWhereInput\n}\n\ninput BoardWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CardConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CardEdge]!\n  aggregate: AggregateCard!\n}\n\ninput CardCreateInput {\n  name: String!\n  description: String\n  updatedBy: UserCreateOneInput\n}\n\ninput CardCreateManyInput {\n  create: [CardCreateInput!]\n  connect: [CardWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CardEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Card!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CardOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  description_ASC\n  description_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype CardPreviousValues {\n  id: ID!\n  name: String!\n  description: String\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype CardSubscriptionPayload {\n  mutation: MutationType!\n  node: Card\n  updatedFields: [String!]\n  previousValues: CardPreviousValues\n}\n\ninput CardSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CardSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CardSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CardWhereInput\n}\n\ninput CardUpdateDataInput {\n  name: String\n  description: String\n  updatedBy: UserUpdateOneInput\n}\n\ninput CardUpdateInput {\n  name: String\n  description: String\n  updatedBy: UserUpdateOneInput\n}\n\ninput CardUpdateManyInput {\n  create: [CardCreateInput!]\n  connect: [CardWhereUniqueInput!]\n  disconnect: [CardWhereUniqueInput!]\n  delete: [CardWhereUniqueInput!]\n  update: [CardUpdateWithWhereUniqueNestedInput!]\n  upsert: [CardUpsertWithWhereUniqueNestedInput!]\n}\n\ninput CardUpdateWithWhereUniqueNestedInput {\n  where: CardWhereUniqueInput!\n  data: CardUpdateDataInput!\n}\n\ninput CardUpsertWithWhereUniqueNestedInput {\n  where: CardWhereUniqueInput!\n  update: CardUpdateDataInput!\n  create: CardCreateInput!\n}\n\ninput CardWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CardWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CardWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  updatedBy: UserWhereInput\n}\n\ninput CardWhereUniqueInput {\n  id: ID\n}\n\nscalar DateTime\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype ListConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [ListEdge]!\n  aggregate: AggregateList!\n}\n\ninput ListCreateInput {\n  name: String!\n  cards: CardCreateManyInput\n  updatedBy: UserCreateOneInput\n}\n\ninput ListCreateManyInput {\n  create: [ListCreateInput!]\n  connect: [ListWhereUniqueInput!]\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype ListEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: List!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum ListOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype ListPreviousValues {\n  id: ID!\n  name: String!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype ListSubscriptionPayload {\n  mutation: MutationType!\n  node: List\n  updatedFields: [String!]\n  previousValues: ListPreviousValues\n}\n\ninput ListSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ListSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ListSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ListWhereInput\n}\n\ninput ListUpdateDataInput {\n  name: String\n  cards: CardUpdateManyInput\n  updatedBy: UserUpdateOneInput\n}\n\ninput ListUpdateInput {\n  name: String\n  cards: CardUpdateManyInput\n  updatedBy: UserUpdateOneInput\n}\n\ninput ListUpdateManyInput {\n  create: [ListCreateInput!]\n  connect: [ListWhereUniqueInput!]\n  disconnect: [ListWhereUniqueInput!]\n  delete: [ListWhereUniqueInput!]\n  update: [ListUpdateWithWhereUniqueNestedInput!]\n  upsert: [ListUpsertWithWhereUniqueNestedInput!]\n}\n\ninput ListUpdateWithWhereUniqueNestedInput {\n  where: ListWhereUniqueInput!\n  data: ListUpdateDataInput!\n}\n\ninput ListUpsertWithWhereUniqueNestedInput {\n  where: ListWhereUniqueInput!\n  update: ListUpdateDataInput!\n  create: ListCreateInput!\n}\n\ninput ListWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [ListWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [ListWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  cards_every: CardWhereInput\n  cards_some: CardWhereInput\n  cards_none: CardWhereInput\n  updatedBy: UserWhereInput\n}\n\ninput ListWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createBoard(data: BoardCreateInput!): Board!\n  createList(data: ListCreateInput!): List!\n  createCard(data: CardCreateInput!): Card!\n  createUser(data: UserCreateInput!): User!\n  updateBoard(data: BoardUpdateInput!, where: BoardWhereUniqueInput!): Board\n  updateList(data: ListUpdateInput!, where: ListWhereUniqueInput!): List\n  updateCard(data: CardUpdateInput!, where: CardWhereUniqueInput!): Card\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteBoard(where: BoardWhereUniqueInput!): Board\n  deleteList(where: ListWhereUniqueInput!): List\n  deleteCard(where: CardWhereUniqueInput!): Card\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertBoard(where: BoardWhereUniqueInput!, create: BoardCreateInput!, update: BoardUpdateInput!): Board!\n  upsertList(where: ListWhereUniqueInput!, create: ListCreateInput!, update: ListUpdateInput!): List!\n  upsertCard(where: CardWhereUniqueInput!, create: CardCreateInput!, update: CardUpdateInput!): Card!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyBoards(data: BoardUpdateInput!, where: BoardWhereInput!): BatchPayload!\n  updateManyLists(data: ListUpdateInput!, where: ListWhereInput!): BatchPayload!\n  updateManyCards(data: CardUpdateInput!, where: CardWhereInput!): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!\n  deleteManyBoards(where: BoardWhereInput!): BatchPayload!\n  deleteManyLists(where: ListWhereInput!): BatchPayload!\n  deleteManyCards(where: CardWhereInput!): BatchPayload!\n  deleteManyUsers(where: UserWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  boards(where: BoardWhereInput, orderBy: BoardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Board]!\n  lists(where: ListWhereInput, orderBy: ListOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [List]!\n  cards(where: CardWhereInput, orderBy: CardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Card]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  board(where: BoardWhereUniqueInput!): Board\n  list(where: ListWhereUniqueInput!): List\n  card(where: CardWhereUniqueInput!): Card\n  user(where: UserWhereUniqueInput!): User\n  boardsConnection(where: BoardWhereInput, orderBy: BoardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BoardConnection!\n  listsConnection(where: ListWhereInput, orderBy: ListOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ListConnection!\n  cardsConnection(where: CardWhereInput, orderBy: CardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CardConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!): Node\n}\n\ntype Subscription {\n  board(where: BoardSubscriptionWhereInput): BoardSubscriptionPayload\n  list(where: ListSubscriptionWhereInput): ListSubscriptionPayload\n  card(where: CardSubscriptionWhereInput): CardSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  password: String!\n  name: String!\n  avatarUrl: String\n  boards: BoardCreateManyWithoutUpdatedByInput\n}\n\ninput UserCreateOneInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutBoardsInput {\n  create: UserCreateWithoutBoardsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutBoardsInput {\n  email: String!\n  password: String!\n  name: String!\n  avatarUrl: String\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  name_ASC\n  name_DESC\n  avatarUrl_ASC\n  avatarUrl_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  password: String!\n  name: String!\n  avatarUrl: String\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateDataInput {\n  email: String\n  password: String\n  name: String\n  avatarUrl: String\n  boards: BoardUpdateManyWithoutUpdatedByInput\n}\n\ninput UserUpdateInput {\n  email: String\n  password: String\n  name: String\n  avatarUrl: String\n  boards: BoardUpdateManyWithoutUpdatedByInput\n}\n\ninput UserUpdateOneInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateDataInput\n  upsert: UserUpsertNestedInput\n}\n\ninput UserUpdateOneWithoutBoardsInput {\n  create: UserCreateWithoutBoardsInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutBoardsDataInput\n  upsert: UserUpsertWithoutBoardsInput\n}\n\ninput UserUpdateWithoutBoardsDataInput {\n  email: String\n  password: String\n  name: String\n  avatarUrl: String\n}\n\ninput UserUpsertNestedInput {\n  update: UserUpdateDataInput!\n  create: UserCreateInput!\n}\n\ninput UserUpsertWithoutBoardsInput {\n  update: UserUpdateWithoutBoardsDataInput!\n  create: UserCreateWithoutBoardsInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  password: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  password_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  password_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  password_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  password_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  password_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  password_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  password_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  password_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  password_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  password_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  password_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  password_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  password_not_ends_with: String\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  avatarUrl: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  avatarUrl_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  avatarUrl_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  avatarUrl_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  avatarUrl_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  avatarUrl_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  avatarUrl_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  avatarUrl_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  avatarUrl_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  avatarUrl_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  avatarUrl_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  avatarUrl_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  avatarUrl_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  avatarUrl_not_ends_with: String\n  boards_every: BoardWhereInput\n  boards_some: BoardWhereInput\n  boards_none: BoardWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 82
    }
  ],
  "metrics": {
    "created_at": "2018-06-18T10:37:56Z",
    "updated_at": "2019-05-26T14:33:50Z",
    "pushed_at": "2019-05-26T14:33:48Z",
    "issues": 0,
    "watchers": 6,
    "fork_count": 8,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 2,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 2,
    "releases": 0,
    "stargazers": 10
  }
}