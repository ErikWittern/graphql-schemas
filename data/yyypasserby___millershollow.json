{
  "repo_name": "millershollow",
  "repo_full_name": "yyypasserby/millershollow",
  "repo_owner": "yyypasserby",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "mobileapp/schema.graphql",
      "sha": "c3e58dd654900f0ab2c1706455548224fd02a7aa",
      "url": "https://api.github.com/repositories/147968345/contents/mobileapp/schema.graphql?ref=a3682acee1006983d81c95adec61bbf467b86ec8",
      "git_url": "https://api.github.com/repositories/147968345/git/blobs/c3e58dd654900f0ab2c1706455548224fd02a7aa",
      "html_url": "https://github.com/yyypasserby/millershollow/blob/a3682acee1006983d81c95adec61bbf467b86ec8/mobileapp/schema.graphql",
      "content": "type AddToRoleGamesPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  rolesRole: Role\n  gameGame: Game\n  rolesRoleEdge: RoleEdge\n  gameGameEdge: GameEdge\n}\n\ninput AddToRoleGamesRoleInput {\n  gameGameId: ID!\n  rolesRoleId: ID!\n  clientMutationId: String!\n}\n\ntype AddToUserRolesPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  userUser: User\n  rolesRole: Role\n  userUserEdge: UserEdge\n  rolesRoleEdge: RoleEdge\n}\n\ninput AddToUserRolesUserInput {\n  rolesRoleId: ID!\n  userUserId: ID!\n  clientMutationId: String!\n}\n\ninput CreateGame {\n  day: Int!\n  isPublic: Boolean!\n  name: String!\n  password: String!\n  state: Int!\n  rolesIds: [ID!]\n  roles: [GamerolesRole!]\n}\n\ninput CreateGameInput {\n  day: Int!\n  isPublic: Boolean!\n  name: String!\n  password: String!\n  state: Int!\n  rolesIds: [ID!]\n  roles: [GamerolesRole!]\n  clientMutationId: String!\n}\n\ntype CreateGamePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  game: Game\n  edge: GameEdge\n}\n\ninput CreateRole {\n  roleName: String!\n  state: Int!\n  gameId: ID\n  game: RolegameGame\n  userId: ID\n  user: RoleuserUser\n}\n\ninput CreateRoleInput {\n  roleName: String!\n  state: Int!\n  gameId: ID\n  game: RolegameGame\n  userId: ID\n  user: RoleuserUser\n  clientMutationId: String!\n}\n\ntype CreateRolePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  role: Role\n  edge: RoleEdge\n  game: Game\n  user: User\n}\n\ninput CreateUser {\n  name: String!\n  rolesIds: [ID!]\n  roles: [UserrolesRole!]\n}\n\n# If authentication was successful the payload contains the user and a token. If unsuccessful this payload is null.\ntype CreateUserPayload {\n  user: User\n  clientMutationId: String\n  viewer: Viewer!\n}\n\nscalar DateTime\n\ninput DeleteGameInput {\n  id: ID!\n  clientMutationId: String!\n}\n\ntype DeleteGamePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  game: Game\n  edge: GameEdge\n  deletedId: ID\n}\n\ninput DeleteRoleInput {\n  id: ID!\n  clientMutationId: String!\n}\n\ntype DeleteRolePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  role: Role\n  edge: RoleEdge\n  game: Game\n  user: User\n  deletedId: ID\n}\n\ninput DeleteUserInput {\n  id: ID!\n  clientMutationId: String!\n}\n\ntype DeleteUserPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  user: User\n  edge: UserEdge\n  deletedId: ID\n}\n\ntype Game implements Node {\n  createdAt: DateTime!\n  day: Int!\n  id: ID!\n  isPublic: Boolean!\n  name: String!\n  password: String!\n  roles(filter: RoleFilter, orderBy: RoleOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): RoleConnection\n  state: Int!\n  updatedAt: DateTime!\n}\n\n# A connection to a list of items.\ntype GameConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [GameEdge]\n\n  # Count of filtered result set without considering pagination arguments\n  count: Int!\n}\n\n# An edge in a connection.\ntype GameEdge {\n  # The item at the end of the edge.\n  node: Game!\n\n  # A cursor for use in pagination.\n  cursor: String!\n}\n\ninput GameFilter {\n  # Logical AND on all given filters.\n  AND: [GameFilter!]\n\n  # Logical OR on all given filters.\n  OR: [GameFilter!]\n  createdAt: DateTime\n\n  # All values that are not equal to given value.\n  createdAt_not: DateTime\n\n  # All values that are contained in given list.\n  createdAt_in: [DateTime!]\n\n  # All values that are not contained in given list.\n  createdAt_not_in: [DateTime!]\n\n  # All values less than the given value.\n  createdAt_lt: DateTime\n\n  # All values less than or equal the given value.\n  createdAt_lte: DateTime\n\n  # All values greater than the given value.\n  createdAt_gt: DateTime\n\n  # All values greater than or equal the given value.\n  createdAt_gte: DateTime\n  day: Int\n\n  # All values that are not equal to given value.\n  day_not: Int\n\n  # All values that are contained in given list.\n  day_in: [Int!]\n\n  # All values that are not contained in given list.\n  day_not_in: [Int!]\n\n  # All values less than the given value.\n  day_lt: Int\n\n  # All values less than or equal the given value.\n  day_lte: Int\n\n  # All values greater than the given value.\n  day_gt: Int\n\n  # All values greater than or equal the given value.\n  day_gte: Int\n  id: ID\n\n  # All values that are not equal to given value.\n  id_not: ID\n\n  # All values that are contained in given list.\n  id_in: [ID!]\n\n  # All values that are not contained in given list.\n  id_not_in: [ID!]\n\n  # All values less than the given value.\n  id_lt: ID\n\n  # All values less than or equal the given value.\n  id_lte: ID\n\n  # All values greater than the given value.\n  id_gt: ID\n\n  # All values greater than or equal the given value.\n  id_gte: ID\n\n  # All values containing the given string.\n  id_contains: ID\n\n  # All values not containing the given string.\n  id_not_contains: ID\n\n  # All values starting with the given string.\n  id_starts_with: ID\n\n  # All values not starting with the given string.\n  id_not_starts_with: ID\n\n  # All values ending with the given string.\n  id_ends_with: ID\n\n  # All values not ending with the given string.\n  id_not_ends_with: ID\n  isPublic: Boolean\n\n  # All values that are not equal to given value.\n  isPublic_not: Boolean\n  name: String\n\n  # All values that are not equal to given value.\n  name_not: String\n\n  # All values that are contained in given list.\n  name_in: [String!]\n\n  # All values that are not contained in given list.\n  name_not_in: [String!]\n\n  # All values less than the given value.\n  name_lt: String\n\n  # All values less than or equal the given value.\n  name_lte: String\n\n  # All values greater than the given value.\n  name_gt: String\n\n  # All values greater than or equal the given value.\n  name_gte: String\n\n  # All values containing the given string.\n  name_contains: String\n\n  # All values not containing the given string.\n  name_not_contains: String\n\n  # All values starting with the given string.\n  name_starts_with: String\n\n  # All values not starting with the given string.\n  name_not_starts_with: String\n\n  # All values ending with the given string.\n  name_ends_with: String\n\n  # All values not ending with the given string.\n  name_not_ends_with: String\n  password: String\n\n  # All values that are not equal to given value.\n  password_not: String\n\n  # All values that are contained in given list.\n  password_in: [String!]\n\n  # All values that are not contained in given list.\n  password_not_in: [String!]\n\n  # All values less than the given value.\n  password_lt: String\n\n  # All values less than or equal the given value.\n  password_lte: String\n\n  # All values greater than the given value.\n  password_gt: String\n\n  # All values greater than or equal the given value.\n  password_gte: String\n\n  # All values containing the given string.\n  password_contains: String\n\n  # All values not containing the given string.\n  password_not_contains: String\n\n  # All values starting with the given string.\n  password_starts_with: String\n\n  # All values not starting with the given string.\n  password_not_starts_with: String\n\n  # All values ending with the given string.\n  password_ends_with: String\n\n  # All values not ending with the given string.\n  password_not_ends_with: String\n  state: Int\n\n  # All values that are not equal to given value.\n  state_not: Int\n\n  # All values that are contained in given list.\n  state_in: [Int!]\n\n  # All values that are not contained in given list.\n  state_not_in: [Int!]\n\n  # All values less than the given value.\n  state_lt: Int\n\n  # All values less than or equal the given value.\n  state_lte: Int\n\n  # All values greater than the given value.\n  state_gt: Int\n\n  # All values greater than or equal the given value.\n  state_gte: Int\n  updatedAt: DateTime\n\n  # All values that are not equal to given value.\n  updatedAt_not: DateTime\n\n  # All values that are contained in given list.\n  updatedAt_in: [DateTime!]\n\n  # All values that are not contained in given list.\n  updatedAt_not_in: [DateTime!]\n\n  # All values less than the given value.\n  updatedAt_lt: DateTime\n\n  # All values less than or equal the given value.\n  updatedAt_lte: DateTime\n\n  # All values greater than the given value.\n  updatedAt_gt: DateTime\n\n  # All values greater than or equal the given value.\n  updatedAt_gte: DateTime\n  roles_every: RoleFilter\n  roles_some: RoleFilter\n  roles_none: RoleFilter\n}\n\nenum GameOrderBy {\n  createdAt_ASC\n  createdAt_DESC\n  day_ASC\n  day_DESC\n  id_ASC\n  id_DESC\n  isPublic_ASC\n  isPublic_DESC\n  name_ASC\n  name_DESC\n  password_ASC\n  password_DESC\n  state_ASC\n  state_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ninput GamerolesRole {\n  roleName: String!\n  state: Int!\n  userId: ID\n  user: RoleuserUser\n}\n\n# HelloPayload\ntype HelloPayload {\n  message: String!\n}\n\ninput InvokeFunctionInput {\n  name: String!\n  input: String!\n  clientMutationId: String\n}\n\ntype InvokeFunctionPayload {\n  result: String!\n  clientMutationId: String\n}\n\ntype Mutation {\n  createGame(input: CreateGameInput!): CreateGamePayload\n  createRole(input: CreateRoleInput!): CreateRolePayload\n  updateGame(input: UpdateGameInput!): UpdateGamePayload\n  updateRole(input: UpdateRoleInput!): UpdateRolePayload\n  updateUser(input: UpdateUserInput!): UpdateUserPayload\n  updateOrCreateGame(input: UpdateOrCreateGameInput!): UpdateOrCreateGamePayload\n  updateOrCreateRole(input: UpdateOrCreateRoleInput!): UpdateOrCreateRolePayload\n  updateOrCreateUser(input: UpdateOrCreateUserInput!): UpdateOrCreateUserPayload\n  deleteGame(input: DeleteGameInput!): DeleteGamePayload\n  deleteRole(input: DeleteRoleInput!): DeleteRolePayload\n  deleteUser(input: DeleteUserInput!): DeleteUserPayload\n  addToRoleGames(input: AddToRoleGamesRoleInput!): AddToRoleGamesPayload\n  addToUserRoles(input: AddToUserRolesUserInput!): AddToUserRolesPayload\n  createUser(input: SignupUserInput!): CreateUserPayload!\n  invokeFunction(input: InvokeFunctionInput!): InvokeFunctionPayload\n}\n\n# An object with an ID\ninterface Node {\n  # The id of the object.\n  id: ID!\n}\n\n# Information about pagination in a connection.\ntype PageInfo {\n  # When paginating forwards, are there more items?\n  hasNextPage: Boolean!\n\n  # When paginating backwards, are there more items?\n  hasPreviousPage: Boolean!\n\n  # When paginating backwards, the cursor to continue.\n  startCursor: String\n\n  # When paginating forwards, the cursor to continue.\n  endCursor: String\n}\n\ntype Query {\n  viewer: Viewer!\n\n  # Fetches an object given its ID\n  node(\n    # The ID of an object\n    id: ID!\n  ): Node\n}\n\ntype Role implements Node {\n  createdAt: DateTime!\n  game(filter: GameFilter): Game!\n  id: ID!\n  roleName: String!\n  state: Int!\n  updatedAt: DateTime!\n  user(filter: UserFilter): User!\n}\n\n# A connection to a list of items.\ntype RoleConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [RoleEdge]\n\n  # Count of filtered result set without considering pagination arguments\n  count: Int!\n}\n\n# An edge in a connection.\ntype RoleEdge {\n  # The item at the end of the edge.\n  node: Role!\n\n  # A cursor for use in pagination.\n  cursor: String!\n}\n\ninput RoleFilter {\n  # Logical AND on all given filters.\n  AND: [RoleFilter!]\n\n  # Logical OR on all given filters.\n  OR: [RoleFilter!]\n  createdAt: DateTime\n\n  # All values that are not equal to given value.\n  createdAt_not: DateTime\n\n  # All values that are contained in given list.\n  createdAt_in: [DateTime!]\n\n  # All values that are not contained in given list.\n  createdAt_not_in: [DateTime!]\n\n  # All values less than the given value.\n  createdAt_lt: DateTime\n\n  # All values less than or equal the given value.\n  createdAt_lte: DateTime\n\n  # All values greater than the given value.\n  createdAt_gt: DateTime\n\n  # All values greater than or equal the given value.\n  createdAt_gte: DateTime\n  id: ID\n\n  # All values that are not equal to given value.\n  id_not: ID\n\n  # All values that are contained in given list.\n  id_in: [ID!]\n\n  # All values that are not contained in given list.\n  id_not_in: [ID!]\n\n  # All values less than the given value.\n  id_lt: ID\n\n  # All values less than or equal the given value.\n  id_lte: ID\n\n  # All values greater than the given value.\n  id_gt: ID\n\n  # All values greater than or equal the given value.\n  id_gte: ID\n\n  # All values containing the given string.\n  id_contains: ID\n\n  # All values not containing the given string.\n  id_not_contains: ID\n\n  # All values starting with the given string.\n  id_starts_with: ID\n\n  # All values not starting with the given string.\n  id_not_starts_with: ID\n\n  # All values ending with the given string.\n  id_ends_with: ID\n\n  # All values not ending with the given string.\n  id_not_ends_with: ID\n  roleName: String\n\n  # All values that are not equal to given value.\n  roleName_not: String\n\n  # All values that are contained in given list.\n  roleName_in: [String!]\n\n  # All values that are not contained in given list.\n  roleName_not_in: [String!]\n\n  # All values less than the given value.\n  roleName_lt: String\n\n  # All values less than or equal the given value.\n  roleName_lte: String\n\n  # All values greater than the given value.\n  roleName_gt: String\n\n  # All values greater than or equal the given value.\n  roleName_gte: String\n\n  # All values containing the given string.\n  roleName_contains: String\n\n  # All values not containing the given string.\n  roleName_not_contains: String\n\n  # All values starting with the given string.\n  roleName_starts_with: String\n\n  # All values not starting with the given string.\n  roleName_not_starts_with: String\n\n  # All values ending with the given string.\n  roleName_ends_with: String\n\n  # All values not ending with the given string.\n  roleName_not_ends_with: String\n  state: Int\n\n  # All values that are not equal to given value.\n  state_not: Int\n\n  # All values that are contained in given list.\n  state_in: [Int!]\n\n  # All values that are not contained in given list.\n  state_not_in: [Int!]\n\n  # All values less than the given value.\n  state_lt: Int\n\n  # All values less than or equal the given value.\n  state_lte: Int\n\n  # All values greater than the given value.\n  state_gt: Int\n\n  # All values greater than or equal the given value.\n  state_gte: Int\n  updatedAt: DateTime\n\n  # All values that are not equal to given value.\n  updatedAt_not: DateTime\n\n  # All values that are contained in given list.\n  updatedAt_in: [DateTime!]\n\n  # All values that are not contained in given list.\n  updatedAt_not_in: [DateTime!]\n\n  # All values less than the given value.\n  updatedAt_lt: DateTime\n\n  # All values less than or equal the given value.\n  updatedAt_lte: DateTime\n\n  # All values greater than the given value.\n  updatedAt_gt: DateTime\n\n  # All values greater than or equal the given value.\n  updatedAt_gte: DateTime\n  game: GameFilter\n  user: UserFilter\n}\n\ninput RolegameGame {\n  day: Int!\n  isPublic: Boolean!\n  name: String!\n  password: String!\n  state: Int!\n  rolesIds: [ID!]\n  roles: [GamerolesRole!]\n}\n\nenum RoleOrderBy {\n  createdAt_ASC\n  createdAt_DESC\n  id_ASC\n  id_DESC\n  roleName_ASC\n  roleName_DESC\n  state_ASC\n  state_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ninput RoleuserUser {\n  name: String!\n  rolesIds: [ID!]\n  roles: [UserrolesRole!]\n}\n\ninput SignupUserInput {\n  name: String!\n  rolesIds: [ID!]\n  roles: [UserrolesRole!]\n  clientMutationId: String!\n}\n\ninput UpdateGame {\n  day: Int\n  id: ID!\n  isPublic: Boolean\n  name: String\n  password: String\n  state: Int\n  rolesIds: [ID!]\n  roles: [GamerolesRole!]\n}\n\ninput UpdateGameInput {\n  day: Int\n  id: ID!\n  isPublic: Boolean\n  name: String\n  password: String\n  state: Int\n  rolesIds: [ID!]\n  roles: [GamerolesRole!]\n  clientMutationId: String!\n}\n\ntype UpdateGamePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  game: Game\n  edge: GameEdge\n}\n\ninput UpdateOrCreateGameInput {\n  update: UpdateGame!\n  create: CreateGame!\n  clientMutationId: String!\n}\n\ntype UpdateOrCreateGamePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  game: Game\n  edge: GameEdge\n}\n\ninput UpdateOrCreateRoleInput {\n  update: UpdateRole!\n  create: CreateRole!\n  clientMutationId: String!\n}\n\ntype UpdateOrCreateRolePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  role: Role\n  edge: RoleEdge\n  game: Game\n  user: User\n}\n\ninput UpdateOrCreateUserInput {\n  update: UpdateUser!\n  create: CreateUser!\n  clientMutationId: String!\n}\n\ntype UpdateOrCreateUserPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  user: User\n  edge: UserEdge\n}\n\ninput UpdateRole {\n  id: ID!\n  roleName: String\n  state: Int\n  gameId: ID\n  game: RolegameGame\n  userId: ID\n  user: RoleuserUser\n}\n\ninput UpdateRoleInput {\n  id: ID!\n  roleName: String\n  state: Int\n  gameId: ID\n  game: RolegameGame\n  userId: ID\n  user: RoleuserUser\n  clientMutationId: String!\n}\n\ntype UpdateRolePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  role: Role\n  edge: RoleEdge\n  game: Game\n  user: User\n}\n\ninput UpdateUser {\n  id: ID!\n  name: String\n  rolesIds: [ID!]\n  roles: [UserrolesRole!]\n}\n\ninput UpdateUserInput {\n  id: ID!\n  name: String\n  rolesIds: [ID!]\n  roles: [UserrolesRole!]\n  clientMutationId: String!\n}\n\ntype UpdateUserPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  user: User\n  edge: UserEdge\n}\n\ntype User implements Node {\n  createdAt: DateTime!\n  id: ID!\n  name: String!\n  roles(filter: RoleFilter, orderBy: RoleOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): RoleConnection\n  updatedAt: DateTime!\n}\n\n# A connection to a list of items.\ntype UserConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [UserEdge]\n\n  # Count of filtered result set without considering pagination arguments\n  count: Int!\n}\n\n# An edge in a connection.\ntype UserEdge {\n  # The item at the end of the edge.\n  node: User!\n\n  # A cursor for use in pagination.\n  cursor: String!\n}\n\ninput UserFilter {\n  # Logical AND on all given filters.\n  AND: [UserFilter!]\n\n  # Logical OR on all given filters.\n  OR: [UserFilter!]\n  createdAt: DateTime\n\n  # All values that are not equal to given value.\n  createdAt_not: DateTime\n\n  # All values that are contained in given list.\n  createdAt_in: [DateTime!]\n\n  # All values that are not contained in given list.\n  createdAt_not_in: [DateTime!]\n\n  # All values less than the given value.\n  createdAt_lt: DateTime\n\n  # All values less than or equal the given value.\n  createdAt_lte: DateTime\n\n  # All values greater than the given value.\n  createdAt_gt: DateTime\n\n  # All values greater than or equal the given value.\n  createdAt_gte: DateTime\n  id: ID\n\n  # All values that are not equal to given value.\n  id_not: ID\n\n  # All values that are contained in given list.\n  id_in: [ID!]\n\n  # All values that are not contained in given list.\n  id_not_in: [ID!]\n\n  # All values less than the given value.\n  id_lt: ID\n\n  # All values less than or equal the given value.\n  id_lte: ID\n\n  # All values greater than the given value.\n  id_gt: ID\n\n  # All values greater than or equal the given value.\n  id_gte: ID\n\n  # All values containing the given string.\n  id_contains: ID\n\n  # All values not containing the given string.\n  id_not_contains: ID\n\n  # All values starting with the given string.\n  id_starts_with: ID\n\n  # All values not starting with the given string.\n  id_not_starts_with: ID\n\n  # All values ending with the given string.\n  id_ends_with: ID\n\n  # All values not ending with the given string.\n  id_not_ends_with: ID\n  name: String\n\n  # All values that are not equal to given value.\n  name_not: String\n\n  # All values that are contained in given list.\n  name_in: [String!]\n\n  # All values that are not contained in given list.\n  name_not_in: [String!]\n\n  # All values less than the given value.\n  name_lt: String\n\n  # All values less than or equal the given value.\n  name_lte: String\n\n  # All values greater than the given value.\n  name_gt: String\n\n  # All values greater than or equal the given value.\n  name_gte: String\n\n  # All values containing the given string.\n  name_contains: String\n\n  # All values not containing the given string.\n  name_not_contains: String\n\n  # All values starting with the given string.\n  name_starts_with: String\n\n  # All values not starting with the given string.\n  name_not_starts_with: String\n\n  # All values ending with the given string.\n  name_ends_with: String\n\n  # All values not ending with the given string.\n  name_not_ends_with: String\n  updatedAt: DateTime\n\n  # All values that are not equal to given value.\n  updatedAt_not: DateTime\n\n  # All values that are contained in given list.\n  updatedAt_in: [DateTime!]\n\n  # All values that are not contained in given list.\n  updatedAt_not_in: [DateTime!]\n\n  # All values less than the given value.\n  updatedAt_lt: DateTime\n\n  # All values less than or equal the given value.\n  updatedAt_lte: DateTime\n\n  # All values greater than the given value.\n  updatedAt_gt: DateTime\n\n  # All values greater than or equal the given value.\n  updatedAt_gte: DateTime\n  roles_every: RoleFilter\n  roles_some: RoleFilter\n  roles_none: RoleFilter\n}\n\nenum UserOrderBy {\n  createdAt_ASC\n  createdAt_DESC\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ninput UserrolesRole {\n  roleName: String!\n  state: Int!\n  gameId: ID\n  game: RolegameGame\n}\n\n# This is the famous Relay viewer object\ntype Viewer {\n  allGames(filter: GameFilter, orderBy: GameOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): GameConnection!\n  allRoles(filter: RoleFilter, orderBy: RoleOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): RoleConnection!\n  allUsers(filter: UserFilter, orderBy: UserOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  user: User\n  Game(id: ID): Game\n  Role(id: ID): Role\n  User(id: ID): User\n\n  # hello\n  hello(name: String): HelloPayload\n  id: ID!\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 29,
      "containsCycle": true,
      "numDefinitions": 62
    }
  ],
  "metrics": {
    "created_at": "2018-09-08T20:40:54Z",
    "updated_at": "2018-09-22T06:51:11Z",
    "pushed_at": "2018-09-22T06:51:09Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}