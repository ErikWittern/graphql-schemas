{
  "repo_name": "potato-store",
  "repo_full_name": "tutturen/potato-store",
  "repo_owner": "tutturen",
  "repo_description": "An e-commerce system made in TDT4242 Adv. Software Development",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "types.graphql",
      "path": "docs/types.graphql",
      "sha": "f169558eb18d0eb6f6e605ac1c7f03d9af77fb53",
      "url": "https://api.github.com/repositories/121377199/contents/docs/types.graphql?ref=16e3fc9f0bfd4cd803cdb9e37625e41c756f4aa7",
      "git_url": "https://api.github.com/repositories/121377199/git/blobs/f169558eb18d0eb6f6e605ac1c7f03d9af77fb53",
      "html_url": "https://github.com/tutturen/potato-store/blob/16e3fc9f0bfd4cd803cdb9e37625e41c756f4aa7/docs/types.graphql",
      "content": "type Query {\n  allProducts(filter: FilterInput): [Product!]!\n  allCategories: [Category!]!\n  category(categoryName: String): Category\n  cart(products: [CartItem!]!): Cart\n  user: User\n  createAccount(firstName: String!, lastName: String!, username: String!): LoginResult\n}\n\ntype Mutation {\n  createAccount(username: String!, password: String!): LoginResult!\n  login(username: String!, password: String!): LoginResult!\n  buy(products: [CartItem!]!): Receipt!\n}\n\ninput FilterInput {\n  text: String\n  minPrice: Int\n  maxPrice: Int\n  category: [ID]\n  onSale: Boolean\n  organic: Boolean\n}\n\ntype Receipt {\n  cart: Cart\n  success: Boolean!\n}\n\ntype Cart {\n  products: [Product!]!\n  totalBeforeDiscount: Float!\n  totalDiscount: Float!\n  total: Float!\n}\n\ninput CartItemInput {\n    product: ID!\n    quantity: Int!\n}\n\ntype CartItem {\n    product: Product!\n    quantity: Int!\n    unitPrice: Float!\n    originalPrice: Float!\n}\n\ntype Order {\n  products: [Product!]!\n  totalBeforeDiscount: Float!\n  totalDiscount: Float!\n  total: Float!\n  user: User\n}\n\ntype Category {\n  id: ID\n  name: String\n  products: [Product!]!\n}\n\ntype Product {\n  id: ID!\n  name: String!\n  subtitle: String\n  image: String\n  price: Float\n  unitPrice: Float\n  unit: String\n  category: Category\n  organic: Boolean!\n  percentSale: PercentSale\n  packageDeal: PackageDeal\n}\n\ntype PercentSale {\n  product: Product!\n  cut: Int\n}\n\ntype PackageDeal {\n  product: [Product!]!\n  paidQuantity: Int!\n  minimumQuantity: Int!\n}\n",
      "containsQueryType": true,
      "merged": {
        "mergedContent": "# https://github.com/tutturen/potato-store/blob/16e3fc9f0bfd4cd803cdb9e37625e41c756f4aa7/docs/types.graphql:\ntype Query {\n  allProducts(filter: FilterInput): [Product!]!\n  allCategories: [Category!]!\n  category(categoryName: String): Category\n  cart(products: [CartItem!]!): Cart\n  user: User\n  createAccount(firstName: String!, lastName: String!, username: String!): LoginResult\n}\n\ntype Mutation {\n  createAccount(username: String!, password: String!): LoginResult!\n  login(username: String!, password: String!): LoginResult!\n  buy(products: [CartItem!]!): Receipt!\n}\n\ninput FilterInput {\n  text: String\n  minPrice: Int\n  maxPrice: Int\n  category: [ID]\n  onSale: Boolean\n  organic: Boolean\n}\n\ntype Receipt {\n  cart: Cart\n  success: Boolean!\n}\n\ntype Cart {\n  products: [Product!]!\n  totalBeforeDiscount: Float!\n  totalDiscount: Float!\n  total: Float!\n}\n\ninput CartItemInput {\n    product: ID!\n    quantity: Int!\n}\n\ntype CartItem {\n    product: Product!\n    quantity: Int!\n    unitPrice: Float!\n    originalPrice: Float!\n}\n\ntype Order {\n  products: [Product!]!\n  totalBeforeDiscount: Float!\n  totalDiscount: Float!\n  total: Float!\n  user: User\n}\n\ntype Category {\n  id: ID\n  name: String\n  products: [Product!]!\n}\n\ntype Product {\n  id: ID!\n  name: String!\n  subtitle: String\n  image: String\n  price: Float\n  unitPrice: Float\n  unit: String\n  category: Category\n  organic: Boolean!\n  percentSale: PercentSale\n  packageDeal: PackageDeal\n}\n\ntype PercentSale {\n  product: Product!\n  cut: Int\n}\n\ntype PackageDeal {\n  product: [Product!]!\n  paidQuantity: Int!\n  minimumQuantity: Int!\n}\n\n# https://github.com/tutturen/potato-store/blob/16e3fc9f0bfd4cd803cdb9e37625e41c756f4aa7/docs/user.graphql:\ntype User {\n  id: ID!\n  firstName: String!\n  lastName: String!\n  username: String!\n  email: String!\n}\n\ntype LoginResult {\n  user: User\n  success: Boolean!\n  token: String!\n}\n",
        "mergedPaths": [
          "docs/user.graphql"
        ],
        "typesDefinedByMerge": [
          "User",
          "LoginResult"
        ],
        "directivesDefinedByMerge": [],
        "validSchema": true,
        "contentDuplicate": false,
        "numObjectTypes": 12,
        "containsCycle": true,
        "numDefinitions": 14
      },
      "validSchema": false
    },
    {
      "name": "user.graphql",
      "path": "docs/user.graphql",
      "sha": "45767db4bde01ef40df49a8d4d3c7258fbc04bd5",
      "url": "https://api.github.com/repositories/121377199/contents/docs/user.graphql?ref=16e3fc9f0bfd4cd803cdb9e37625e41c756f4aa7",
      "git_url": "https://api.github.com/repositories/121377199/git/blobs/45767db4bde01ef40df49a8d4d3c7258fbc04bd5",
      "html_url": "https://github.com/tutturen/potato-store/blob/16e3fc9f0bfd4cd803cdb9e37625e41c756f4aa7/docs/user.graphql",
      "content": "type User {\n  id: ID!\n  firstName: String!\n  lastName: String!\n  username: String!\n  email: String!\n}\n\ntype LoginResult {\n  user: User\n  success: Boolean!\n  token: String!\n}\n",
      "containsQueryType": false,
      "validSchema": true,
      "contentDuplicate": false,
      "numDefinitions": 2
    }
  ],
  "metrics": {
    "created_at": "2018-02-13T11:57:20Z",
    "updated_at": "2018-04-03T14:08:07Z",
    "pushed_at": "2018-04-03T14:31:28Z",
    "issues": 22,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 48,
    "pull_requests_open": 0,
    "pull_requests_closed": 2,
    "pull_requests_merged": 46,
    "releases": 0,
    "stargazers": 0
  }
}