{
  "repo_name": "gqlgen-example",
  "repo_full_name": "tonyghita/gqlgen-example",
  "repo_owner": "tonyghita",
  "repo_description": "Example usage of github.com/vektah/gqlgen",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "graph/schema.graphql",
      "sha": "d43da04bac53c485b41e582d60155ff68d46b4b5",
      "url": "https://api.github.com/repositories/136743235/contents/graph/schema.graphql?ref=5b678a921cb746b5afae8c8296d66e07bec26ddc",
      "git_url": "https://api.github.com/repositories/136743235/git/blobs/d43da04bac53c485b41e582d60155ff68d46b4b5",
      "html_url": "https://github.com/tonyghita/gqlgen-example/blob/5b678a921cb746b5afae8c8296d66e07bec26ddc/graph/schema.graphql",
      "content": "# The Query type contains all of the API's read operations.\ntype Query {\n  # Search for a film by its title, or get all films when no parameters are provided.\n  films(title: String): [Film!]\n\n  # Search for a person by their name, or get all characters when no parameters are provided.\n  people(name: String): [Person!]\n\n  # Search for a planet by its name, or get all planets when no parameters are provided.\n  planets(name: String): [Planet!]\n\n  # Search for a species by its name, or get all species when no parameters are provided.\n  species(name: String): [Species!]\n\n  # Search for a starship by its name or model, or get all starships when no parameters are provided.\n  starships(nameOrModel: String): [Starship!]\n  \n  # Search for a vehicle by its name or model, or get all vehicles when no parameters are provided.\n  vehicles(nameOrModel: String): [Vehicle!]\n}\n\n# A Star Wars film.\ntype Film {\n  # A unique identifier.\n  id: ID!\n\n  # The episode number of this film.\n  episode: Int!\n\n  # The opening paragraphs at the beginning of this film.\n  openingCrawl: String!\n\n  # The name of this film's director.\n  directorName: String!\n\n  # A list of names of the film's producers.\n  producerNames: [String!]!\n\n  # The RFC3339 date format of the film release in the orginal creator country.\n  releaseDate: Time!\n\n  # A list of species that are in this film.\n  species: [Species!]\n\n  # A list of starships that are in this film.\n  starships: [Starship!]\n\n  # A list of vehicles that are in this film.\n  vehicles: [Vehicle!]\n\n  # A list of characters that are in this film.\n  characters: [Person!]\n\n  # A list of planets that are in this film.\n  planets: [Planet!]\n\n  # The RFC3339 date format of the time that this resource was created.\n  createdAt: Time!\n  \n  # The RFC3339 date format of the time that this resource was edited.\n  editedAt: Time\n}\n\n# A LengthUnit refers to a discrete, pre-established length or distance having a constant magnitude\n# which is used as a reference or convention to express linear dimension.\nenum LengthUnit {\n  # A millimeter is a unit of length in the metric system, equal to 1/1000 of a meter.\n  MILLIMETER\n  \n  # A centimeter is a unit of length in the metric system, equal to 1/100 of a meter.\n  CENTIMETER\n\n  # A meter is defined as the length of the path traveled by light in a vacuum in 1/299792458 seconds.\n  METER\n\n  # A kilometer is a unit of length in the metric system, equal to 1000 meters.\n  KILOMETER\n\n  # An inch is a unit of length in the imperial system equal to 1/36 of a yard.\n  INCH\n\n  # A foot is a unit of length in the imperial system equal to 1/3 of a yard.\n  FOOT\n\n  # A yard is a unit of length in the imperial system equal to exactly 0.9144 meters.\n  YARD\n  \n  # A mile is a unit of length of linear measure in the imperial system equal to 1760 yards.\n  MILE\n}\n\n# A MassUnit is a measure of a physical body.\nenum MassUnit {\n  # A gram is a unit of mass in the metric system equal to 1/1000 of a kilogram.\n  GRAM\n\n  # A kilogram is the base unit of mass in the metric system.\n  KILOGRAM\n\n  # A metric ton is unit of mass in the metric system equal to 1000 kilograms.\n  METRIC_TON\n  \n  # A pound is a unit of mass in the imperial system equal to 0.43559237 kilograms.\n  POUND\n}\n\n# A person is an individual character within the Star Wars universe.\ntype Person {\n  # A unique identifier.\n  id: ID!\n  # The name of this person.\n  name: String!\n  # The birth year of the person, using the in-universe standard of BBY of ABY.\n  # That is, Before the Battle of Yavin or After the Battle of Yavin.\n  # The Battle of Yavin is a battle that occurs at the end of Star Wars Episode IV: A New Hope.\n  birthYear: String!\n  # The eye color of this person.\n  # Value will be \"unknown\" if not known or null if the person does not have an eye.\n  eyeColor: String\n  # The gender of this person.\n  # Either \"male\", \"female\", or \"unknown\". Null if the person does not have a gender.\n  gender: String\n  # The hair color of this person.\n  # Value will be \"unknown\" if not known or null if the person does not have hair.\n  hairColor: String\n  # The height of the person in the specified unit.\n  height(unit: LengthUnit = CENTIMETER): Float!\n  # The mass of the person in the specified unit.\n  mass(unit: MassUnit = KILOGRAM): Float!\n  # The skin color of this person.\n  # Value will be \"unknown\" if not known of null if ther person does not have skin.\n  skinColor: String\n  # The planet this person was born on or inhabits.\n  homeworld: Planet\n  # A list of the films this person has been in.\n  films: [Film!]\n  # A list of species this person belongs to.\n  species: [Species!]\n  # A list of vehicles this person has piloted.\n  vehicles: [Vehicle!]\n  # The RFC3339 date format of the time this resource was created.\n  createdAt: Time!\n  # The RFC3339 date format of the time this resource was edited.\n  editedAt: Time\n}\n\n# A Planet is a large mass, planet, or planetoid in the Star Wars universe, at the time of 0 ABY.\ntype Planet {\n  # A unique identifier.\n  id: ID!\n  # The name of this planet.\n  name: String!\n  # The diameter of this planet in the provided units.\n  diameter(unit: LengthUnit = KILOMETER): Float!\n  # The number of standard hours it takes for this planet to complete a single rotation on its axis.\n  rotationPeriod: Float!\n  # The number of standard days it takes for this planet to complete a single orbit of its local star.\n  orbitalPeriod: Float!\n  # A number denoting the gravity of this planet, where 1.0 is normal or 1 standard G.\n  gravity: Float!\n  # The average population of sentient beings inhabiting this planet.\n  population: Int!\n  # A list of the climates found on this planet.\n  climates: [String!]!\n  # A list of the terrains found on this planet.\n  terrains: [String!]!\n  # The percentage 0.0-100.0 of the planet surface that is naturally occurring water or bodies of water.\n  surfaceWaterPercentage: Float!\n  # A list of notable people who live on this planet.\n  residents: [Person!]\n  # A list of films this planet has appeared in.\n  films: [Film!]\n  # The RFC3339 date format of the time that this resource was created.\n  createdAt: Time!\n  # The RFC3339 date format of the time that this resource was edited.\n  editedAt: Time\n}\n\n# A Species is a type of person or character within the Star Wars universe.\ntype Species {\n  # A unique identifier.\n  id: ID!\n  # The name of this species.\n  name: String!\n  # The classification of this species, such as \"mammal\" or \"reptile\".\n  classification: String!\n  # The designation of this species\n  designation: String!\n  # The average height of this species in the specified length unit.\n  averageHeight(unit: LengthUnit = CENTIMETER): Float!\n  # The average lifespan of this species in Earth years.\n  averageLifespan: Float!\n  # A list of common eye colors for this species.\n  # Empty if this species does not typically have eyes.\n  eyeColors: [String!]!\n  # A list of common hair colors for this species.\n  # Empty if this species does not typically have hair.\n  hairColors: [String!]!\n  # A list of common skin colors for this species.\n  # Empty if this species typically does not have skin.\n  skinColors: [String!]!\n  # The language commonly spoken by this species.\n  language: String!\n  # The planet this species originates from.\n  homeworld: Planet\n  # A list of characters that are a part of this species.\n  characters: [Person!]\n  # A list of films that this species has appeared in.\n  films: [Film!]\n  # The RFC3339 date format of the time this resource was created.\n  createdAt: Time!\n  # The RFC3339 date format of the time this resource was edited.\n  editedAt: Time\n}\n\n# A Starship is a single transport craft that has hyperdrive capability.\ntype Starship {\n  # A unique identifier.\n  id: ID!\n  # The common name of the this startship (example: \"Death Star\").\n  name: String!\n  # The model or official name of this starship (example: \"T-65 X-wing\").\n  model: String!\n  # The class of this starship, such as \"Starfighter\".\n  class: String!\n  # A list of the manufacturer names of this starship.\n  manufacturers: [String!]!\n  # The cost of this starship new, in galactic credits.\n  cost: Int!\n  # The length of this starship in the specified units.\n  length(unit: LengthUnit = METER): Float!\n  # The number of personnel needed to run or pilot this starship.\n  crewSize: Int!\n  # The number of non-essential people this starship can transport.\n  passengerCapacity: Int!\n  # The maximum speed of this starship in the atmosphere.\n  # Null if this starship is incapable of atmospheric flight.\n  maxAtmosphericSpeed: Int\n  # The class of this starship's hyperdrive.\n  hyperdriveRating: Float\n  # The maximum number of Megalights this starship can travel in a standard hour.\n  maxMegalightsPerHour: Int!\n  # The maximum amount of mass this starship can transport.\n  cargoCapacity(unit: MassUnit = KILOGRAM): Float!\n  # The maximum length of time that this starship can provide consumables for its entire crew without\n  # having to resupply.\n  consumablesDuration: String!\n  # A list of films that this starship has appeared in.\n  films: [Film!]\n  # A list of people that have piloted this starship.\n  pilots: [Person!]\n  # The RFC3339 date format of the time that this resource was created.\n  createdAt: Time!\n  # The RFC3339 date format of the time that this resource was edited.\n  editedAt: Time\n}\n\n# Time is an RFC3339 timestamp.\nscalar Time\n\n# A Vehicle is a single transport craft that does not have hyperdrive capability.\ntype Vehicle {\n  # A unique identifier.\n  id: ID!\n  # The common name of this vehicle (example: \"Sand Crawler\").\n  name: String!\n  # The model or official name of this vehicle (example: \"All-Terrain Attack Transport\").\n  model: String!\n  # The class of this vehicle (example: \"Wheeled\" or \"Repulsorcraft\").\n  class: String!\n  # A list of the manufacturers of this vehicle.\n  manufacturers: [String!]!\n  # The length of this vehicle in provided units.\n  length(unit: LengthUnit = METER): Float!\n  # The cost of this vehicle new, in galactic credits.\n  cost: Int!\n  # The number of personnel needed to run or pilot this vehicle.\n  crewSize: Int!\n  # The number of non-essential people this vehicle can transport.\n  passengerCapacity: Int!\n  # The maximum speed of this vehicle in the atmoshpere.\n  maxAtmosphericSpeed: Float!\n  # The maximum number of kilograms that this vehicle can transport.\n  cargoCapacity(unit: MassUnit = KILOGRAM): Float!\n  # The maximum length of time that this vehicle can provide consumables for its entire crew without\n  # having to resupply.\n  consumablesDuration: String!\n  # A list of films that this vehicle has appeared in.\n  films: [Film!]\n  # A list of people that have piloted this vehicle.\n  pilots: [Person!]\n  # The RFC3339 date format of the time that this resource was created.\n  createdAt: Time!\n  # The RFC3339 date format of the time that this resource was edited.\n  editedAt: Time\n}",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 7,
      "containsCycle": true,
      "numDefinitions": 10
    }
  ],
  "metrics": {
    "created_at": "2018-06-09T17:12:43Z",
    "updated_at": "2018-11-18T11:07:14Z",
    "pushed_at": "2018-06-10T16:09:05Z",
    "issues": 0,
    "watchers": 3,
    "fork_count": 1,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 1
  }
}