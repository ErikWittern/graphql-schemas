{
  "repo_name": "ad-campaign-full-stack",
  "repo_full_name": "keijohyttinen/ad-campaign-full-stack",
  "repo_owner": "keijohyttinen",
  "repo_description": "Ad Campaign Full Stack Solution with React native app and nodejs, graphql and mongoose/mongodb",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "backend/src/graphql/schema.graphql",
      "sha": "ce5a0679499b7e0ab01e9f4a21e94a1082985274",
      "url": "https://api.github.com/repositories/147831618/contents/backend/src/graphql/schema.graphql?ref=6696bb314a1fa46b4495485c6b29d5473b7139dc",
      "git_url": "https://api.github.com/repositories/147831618/git/blobs/ce5a0679499b7e0ab01e9f4a21e94a1082985274",
      "html_url": "https://github.com/keijohyttinen/ad-campaign-full-stack/blob/6696bb314a1fa46b4495485c6b29d5473b7139dc/backend/src/graphql/schema.graphql",
      "content": "schema {\n  query: Query\n}\n\ntype TargetAudience {\n    languages:[String!]\n    genders:[String!]\n    age_range:[Int!]\n    locations:[String!]\n    interests:[String!]\n}\n\ntype Creatives {\n    header:String\n    header_1:String\n    header_2:String\n    description:String!\n    url:String!\n    image:String!\n}\n\ntype Insights {\n    impressions: Int!\n    clicks: Int!\n    nanos_score: Float\n    cost_per_click: Float!\n    click_through_rate: Float!\n    advanced_kpi_1: Float!\n    advanced_kpi_2: Float\n}\n\nenum Status {\n    Delivering\n    Scheduled\n    Ended\n}\n\ntype Platform {\n    status: Status!\n    total_budget: Int!\n    remaining_budget: Int!\n    start_date: String!\n    end_date: String!\n    target_audiance: TargetAudience\n    creatives: Creatives\n    insights: Insights\n}\n\ntype Platforms {\n    facebook: Platform\n    instagram: Platform\n    google: Platform\n    adwords: Platform\n}\n\ntype Campaign {\n    id: ID\n    name: String!\n    goal: String!\n    total_budget: Int!\n    status: Status\n    platforms: Platforms\n}\n\n##Inputs - little bit reduced compared to types\n## Do not allow editing of all params but some are decided/calculated by backend\n\ninput TargetAudienceInput {\n    languages:[String!]\n    genders:[String!]\n    age_range:[Int!]\n    locations:[String!]\n    interests:[String!]\n}\n\ninput PlatformInput {\n    status: Status!\n    total_budget: Int!\n    start_date: String!\n    end_date: String!\n    target_audiance: TargetAudienceInput\n}\n\ninput PlatformsInput{\n    facebook: PlatformInput\n    instagram: PlatformInput\n    google: PlatformInput\n    adwords: PlatformInput\n}\n\ninput CampaignInput {\n    name: String!\n    goal: String!\n    total_budget: Int!\n    status: Status\n    platforms: PlatformsInput\n}\n\ntype Query {\n    campaigns(id: ID): [Campaign]\n}\n\ntype Mutation {\n    createCampaign(id: ID!, name: String!, goal: String!, total_budget: Int!): Campaign\n    updateCampaign(campaign: CampaignInput!): Campaign\n    deleteCampaign(id: ID!): Campaign\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 8,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 14
    },
    {
      "name": "schema.graphql",
      "path": "app/config/schema.graphql",
      "sha": "0b00822deda22eff86b8f2e974e3e2cecc79635c",
      "url": "https://api.github.com/repositories/147831618/contents/app/config/schema.graphql?ref=f3231998353916531ffbeb9dd4c7927b8b2fe20d",
      "git_url": "https://api.github.com/repositories/147831618/git/blobs/0b00822deda22eff86b8f2e974e3e2cecc79635c",
      "html_url": "https://github.com/keijohyttinen/ad-campaign-full-stack/blob/f3231998353916531ffbeb9dd4c7927b8b2fe20d/app/config/schema.graphql",
      "content": "schema {\n  query: Query\n}\n\ntype TargetAudience {\n    languages:[String!]\n    genders:[String!]\n    age_range:[Int!]\n    locations:[String!]\n    interests:[String!]\n}\n\ntype Creatives {\n    header:String\n    header_1:String\n    header_2:String\n    description:String!\n    url:String!\n    image:String!\n}\n\ntype Insights {\n    impressions: Int!\n    clicks: Int!\n    nanos_score: Float\n    cost_per_click: Float!\n    click_through_rate: Float!\n    advanced_kpi_1: Float!\n    advanced_kpi_2: Float\n}\n\nenum Status {\n    Delivering\n    Scheduled\n    Ended\n}\n\ntype Platform {\n    status: Status!\n    total_budget: Int!\n    remaining_budget: Int!\n    start_date: String!\n    end_date: String!\n    target_audiance: TargetAudience\n    creatives: Creatives\n    insights: Insights\n}\n\ntype Platforms {\n    facebook: Platform\n    instagram: Platform\n    google: Platform\n    adwords: Platform\n}\n\ntype Campaign {\n    id: ID\n    name: String!\n    goal: String!\n    total_budget: Int!\n    status: Status\n    platforms: Platforms\n}\n\n##Inputs - little bit reduced compared to types\n## Do not allow editing of all params but some are decided/calculated by backend \n\ninput TargetAudienceInput {\n    languages:[String!]\n    genders:[String!]\n    age_range:[Int!]\n    locations:[String!]\n    interests:[String!]\n}\n\ninput PlatformInput {\n    status: Status!\n    total_budget: Int!\n    start_date: String!\n    end_date: String!\n    target_audiance: TargetAudienceInput\n}\n\ninput PlatformsInput{\n    facebook: PlatformInput\n    instagram: PlatformInput\n    google: PlatformInput\n    adwords: PlatformInput\n}\n\ninput CampaignInput {\n    name: String!\n    goal: String!\n    total_budget: Int!\n    status: Status\n    platforms: PlatformsInput\n}\n\ntype Query {\n    campaigns(id: ID): [Campaign]\n}\n\ntype Mutation {\n    createCampaign(id: ID!, name: String!, goal: String!, total_budget: Int!): Campaign\n    updateCampaign(campaign: CampaignInput!): Campaign\n    deleteCampaign(id: ID!): Campaign\n}\n\n\n\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 14
    }
  ],
  "metrics": {
    "created_at": "2018-09-07T14:04:43Z",
    "updated_at": "2018-10-09T19:11:48Z",
    "pushed_at": "2018-10-09T19:11:46Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 1
  }
}