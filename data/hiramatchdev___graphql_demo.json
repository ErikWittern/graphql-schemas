{
  "repo_name": "graphql_demo",
  "repo_full_name": "hiramatchdev/graphql_demo",
  "repo_owner": "hiramatchdev",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "schema.graphql",
      "sha": "edbc08e79cdc8a112658365150149083a300b133",
      "url": "https://api.github.com/repositories/136790691/contents/schema.graphql?ref=a434e3e3f4d3904d3780cb852098fb2132c7dd9f",
      "git_url": "https://api.github.com/repositories/136790691/git/blobs/edbc08e79cdc8a112658365150149083a300b133",
      "html_url": "https://github.com/hiramatchdev/graphql_demo/blob/a434e3e3f4d3904d3780cb852098fb2132c7dd9f/schema.graphql",
      "content": "type Address {\n  address: String!\n  id: ID!\n  postal_code: Int!\n}\n\ninput AddressInput {\n  address: String!\n  postal_code: Int!\n}\n\n# Autogenerated input type of CreatePostMutation\ninput CreatePostMutationInput {\n  # A unique identifier for the client performing the mutation.\n  clientMutationId: String\n  subject: String!\n}\n\n# Autogenerated return type of CreatePostMutation\ntype CreatePostMutationPayload {\n  # A unique identifier for the client performing the mutation.\n  clientMutationId: String\n  post: Post\n}\n\ntype Mutation {\n  createPostMutation(input: CreatePostMutationInput!): CreatePostMutationPayload\n\n  # An example field added by the generator\n  testField: String\n  updateAddressMutation(input: UpdateAddressInput!): UpdateAddressPayload\n  updatePostMutation(input: UpdatePostMutationInput!): UpdatePostMutationPayload\n}\n\n# Information about pagination in a connection.\ntype PageInfo {\n  # When paginating forwards, the cursor to continue.\n  endCursor: String\n\n  # When paginating forwards, are there more items?\n  hasNextPage: Boolean!\n\n  # When paginating backwards, are there more items?\n  hasPreviousPage: Boolean!\n\n  # When paginating backwards, the cursor to continue.\n  startCursor: String\n}\n\ntype Post {\n  id: ID!\n  subject: String!\n}\n\n# The connection type for Post.\ntype PostConnection {\n  # A list of edges.\n  edges: [PostEdge]\n\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n}\n\n# An edge in a connection.\ntype PostEdge {\n  # A cursor for use in pagination.\n  cursor: String!\n\n  # The item at the end of the edge.\n  node: Post\n}\n\ntype Query {\n  # An example field added by the generator\n  testField: String\n\n  # You can access current_user\n  user: User!\n}\n\n# Autogenerated input type of UpdateAddress\ninput UpdateAddressInput {\n  address_input: AddressInput!\n\n  # A unique identifier for the client performing the mutation.\n  clientMutationId: String\n}\n\n# Autogenerated return type of UpdateAddress\ntype UpdateAddressPayload {\n  address: Address!\n\n  # A unique identifier for the client performing the mutation.\n  clientMutationId: String\n  user: User\n}\n\n# Autogenerated input type of UpdatePostMutation\ninput UpdatePostMutationInput {\n  # A unique identifier for the client performing the mutation.\n  clientMutationId: String\n  id: ID!\n  subject: String!\n}\n\n# Autogenerated return type of UpdatePostMutation\ntype UpdatePostMutationPayload {\n  # A unique identifier for the client performing the mutation.\n  clientMutationId: String\n  post: Post!\n}\n\ntype User {\n  # 住所\n  address: Address!\n\n  # メールアドレス\n  email: String!\n\n  # ユニークなID\n  id: ID!\n\n  # 名前\n  name: String!\n\n  # 投稿一覧\n  posts(\n    # Returns the elements in the list that come after the specified global ID.\n    after: String\n\n    # Returns the elements in the list that come before the specified global ID.\n    before: String\n\n    # Returns the first _n_ elements from the list.\n    first: Int\n\n    # Returns the last _n_ elements from the list.\n    last: Int\n  ): PostConnection!\n}",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 11,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 15
    }
  ],
  "metrics": {
    "created_at": "2018-06-10T08:07:37Z",
    "updated_at": "2018-12-22T04:09:44Z",
    "pushed_at": "2018-11-30T01:24:24Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}