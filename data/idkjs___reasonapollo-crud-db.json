{
  "repo_name": "reasonapollo-crud-db",
  "repo_full_name": "idkjs/reasonapollo-crud-db",
  "repo_owner": "idkjs",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "server/src/generated/prisma.graphql",
      "sha": "328870e85a5dd9034a729ce875702a3df5bfc922",
      "url": "https://api.github.com/repositories/130493098/contents/server/src/generated/prisma.graphql?ref=52d7d388c668388294b36de572bc51a4a4ed4781",
      "git_url": "https://api.github.com/repositories/130493098/git/blobs/328870e85a5dd9034a729ce875702a3df5bfc922",
      "html_url": "https://github.com/idkjs/reasonapollo-crud-db/blob/52d7d388c668388294b36de572bc51a4a4ed4781/server/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Post implements Node {\n  id: ID!\n  isPublished: Boolean!\n  title: String!\n  text: String!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregatePost {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createPost(data: PostCreateInput!): Post!\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  deletePost(where: PostWhereUniqueInput!): Post\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  updateManyPosts(data: PostUpdateInput!, where: PostWhereInput): BatchPayload!\n  deleteManyPosts(where: PostWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PostConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  isPublished: Boolean!\n  title: String!\n  text: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PostEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Post!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  isPublished_ASC\n  isPublished_DESC\n  title_ASC\n  title_DESC\n  text_ASC\n  text_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  isPublished: Boolean!\n  title: String!\n  text: String!\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n}\n\ninput PostUpdateInput {\n  isPublished: Boolean\n  title: String\n  text: String\n}\n\ninput PostWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  isPublished: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isPublished_not: Boolean\n  title: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  title_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  title_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  title_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  title_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  title_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  title_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  title_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  title_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  title_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  title_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  title_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  title_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  title_not_ends_with: String\n  text: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  text_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  text_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  text_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  text_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  text_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  text_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  text_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  text_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  text_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  text_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  text_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  text_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  text_not_ends_with: String\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  post(where: PostWhereUniqueInput!): Post\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!): Node\n}\n\ntype Subscription {\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 20
    }
  ],
  "metrics": {
    "created_at": "2018-04-21T16:43:35Z",
    "updated_at": "2018-09-17T09:39:31Z",
    "pushed_at": "2018-05-05T15:56:23Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 1,
    "pull_requests_open": 1,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 1
  }
}