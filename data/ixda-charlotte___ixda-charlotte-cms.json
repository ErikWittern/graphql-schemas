{
  "repo_name": "ixda-charlotte-cms",
  "repo_full_name": "ixda-charlotte/ixda-charlotte-cms",
  "repo_owner": "ixda-charlotte",
  "repo_description": "Headless CMS for the Charlotte IxDA site",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "plugins/graphql/config/generated/schema.graphql",
      "sha": "5e1b536fd43408d4557baa2eefdf2a8aea65b95c",
      "url": "https://api.github.com/repositories/184931688/contents/plugins/graphql/config/generated/schema.graphql?ref=b06451465c903eb35417244e0546bea858b1db25",
      "git_url": "https://api.github.com/repositories/184931688/git/blobs/5e1b536fd43408d4557baa2eefdf2a8aea65b95c",
      "html_url": "https://github.com/ixda-charlotte/ixda-charlotte-cms/blob/b06451465c903eb35417244e0546bea858b1db25/plugins/graphql/config/generated/schema.graphql",
      "content": "input createExecutiveInput {\n  data: ExecutiveInput\n}\n\ntype createExecutivePayload {\n  executive: Executive\n}\n\ninput createLeaderInput {\n  data: LeaderInput\n}\n\ntype createLeaderPayload {\n  leader: Leader\n}\n\ninput createPostInput {\n  data: PostInput\n}\n\ntype createPostPayload {\n  post: Post\n}\n\ninput createRoleInput {\n  data: RoleInput\n}\n\ntype createRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput createSponsorInput {\n  data: SponsorInput\n}\n\ntype createSponsorPayload {\n  sponsor: Sponsor\n}\n\ninput createTagInput {\n  data: TagInput\n}\n\ntype createTagPayload {\n  tag: Tag\n}\n\ninput createUserInput {\n  data: UserInput\n}\n\ntype createUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"\nThe `DateTime` scalar represents a date and time following the ISO 8601 standard\n\"\"\"\nscalar DateTime\n\ninput deleteExecutiveInput {\n  where: InputID\n}\n\ntype deleteExecutivePayload {\n  executive: Executive\n}\n\ninput deleteLeaderInput {\n  where: InputID\n}\n\ntype deleteLeaderPayload {\n  leader: Leader\n}\n\ninput deletePostInput {\n  where: InputID\n}\n\ntype deletePostPayload {\n  post: Post\n}\n\ninput deleteRoleInput {\n  where: InputID\n}\n\ntype deleteRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput deleteSponsorInput {\n  where: InputID\n}\n\ntype deleteSponsorPayload {\n  sponsor: Sponsor\n}\n\ninput deleteTagInput {\n  where: InputID\n}\n\ntype deleteTagPayload {\n  tag: Tag\n}\n\ninput deleteUserInput {\n  where: InputID\n}\n\ntype deleteUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"Executive Leadership Committee Member\"\"\"\ntype Executive {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  Name: String\n}\n\ntype ExecutiveAggregator {\n  count: Int\n}\n\ntype ExecutiveConnection {\n  values: [Executive]\n  groupBy: ExecutiveGroupBy\n  aggregate: ExecutiveAggregator\n}\n\ntype ExecutiveConnection_id {\n  key: ID\n  connection: ExecutiveConnection\n}\n\ntype ExecutiveConnectionCreatedAt {\n  key: DateTime\n  connection: ExecutiveConnection\n}\n\ntype ExecutiveConnectionName {\n  key: String\n  connection: ExecutiveConnection\n}\n\ntype ExecutiveConnectionUpdatedAt {\n  key: DateTime\n  connection: ExecutiveConnection\n}\n\ntype ExecutiveGroupBy {\n  _id: [ExecutiveConnection_id]\n  createdAt: [ExecutiveConnectionCreatedAt]\n  updatedAt: [ExecutiveConnectionUpdatedAt]\n  Name: [ExecutiveConnectionName]\n}\n\ninput ExecutiveInput {\n  Name: String\n}\n\ninput FileInput {\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related: [ID]\n}\n\ninput InputID {\n  id: ID!\n}\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\"\"\"\nscalar JSON\n\n\"\"\"IxDA Leadership Board\"\"\"\ntype Leader {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  Name: String\n}\n\ntype LeaderAggregator {\n  count: Int\n}\n\ntype LeaderConnection {\n  values: [Leader]\n  groupBy: LeaderGroupBy\n  aggregate: LeaderAggregator\n}\n\ntype LeaderConnection_id {\n  key: ID\n  connection: LeaderConnection\n}\n\ntype LeaderConnectionCreatedAt {\n  key: DateTime\n  connection: LeaderConnection\n}\n\ntype LeaderConnectionName {\n  key: String\n  connection: LeaderConnection\n}\n\ntype LeaderConnectionUpdatedAt {\n  key: DateTime\n  connection: LeaderConnection\n}\n\ntype LeaderGroupBy {\n  _id: [LeaderConnection_id]\n  createdAt: [LeaderConnectionCreatedAt]\n  updatedAt: [LeaderConnectionUpdatedAt]\n  Name: [LeaderConnectionName]\n}\n\ninput LeaderInput {\n  Name: String\n}\n\nunion Morph = UsersPermissionsMe | UsersPermissionsMeRole | Executive | createExecutivePayload | updateExecutivePayload | deleteExecutivePayload | ExecutiveConnection | ExecutiveAggregator | ExecutiveGroupBy | ExecutiveConnection_id | ExecutiveConnectionCreatedAt | ExecutiveConnectionUpdatedAt | ExecutiveConnectionName | Leader | createLeaderPayload | updateLeaderPayload | deleteLeaderPayload | LeaderConnection | LeaderAggregator | LeaderGroupBy | LeaderConnection_id | LeaderConnectionCreatedAt | LeaderConnectionUpdatedAt | LeaderConnectionName | Post | createPostPayload | updatePostPayload | deletePostPayload | PostConnection | PostAggregator | PostGroupBy | PostConnection_id | PostConnectionCreatedAt | PostConnectionUpdatedAt | PostConnectionTitle | PostConnectionContent | PostConnectionCover | Sponsor | createSponsorPayload | updateSponsorPayload | deleteSponsorPayload | SponsorConnection | SponsorAggregator | SponsorGroupBy | SponsorConnection_id | SponsorConnectionCreatedAt | SponsorConnectionUpdatedAt | SponsorConnectionName | Tag | createTagPayload | updateTagPayload | deleteTagPayload | TagConnection | TagAggregator | TagGroupBy | TagConnection_id | TagConnectionCreatedAt | TagConnectionUpdatedAt | TagConnectionName | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileGroupBy | UploadFileConnection_id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionHash | UploadFileConnectionSha256 | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionProvider | UploadFileConnectionPublic_id | UsersPermissionsPermission | UsersPermissionsRole | createRolePayload | updateRolePayload | deleteRolePayload | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnection_id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | UsersPermissionsUser | createUserPayload | updateUserPayload | deleteUserPayload | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnection_id | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole\n\ntype Mutation {\n  createExecutive(input: createExecutiveInput): createExecutivePayload\n  updateExecutive(input: updateExecutiveInput): updateExecutivePayload\n  deleteExecutive(input: deleteExecutiveInput): deleteExecutivePayload\n  createLeader(input: createLeaderInput): createLeaderPayload\n  updateLeader(input: updateLeaderInput): updateLeaderPayload\n  deleteLeader(input: deleteLeaderInput): deleteLeaderPayload\n  createPost(input: createPostInput): createPostPayload\n  updatePost(input: updatePostInput): updatePostPayload\n  deletePost(input: deletePostInput): deletePostPayload\n  createSponsor(input: createSponsorInput): createSponsorPayload\n  updateSponsor(input: updateSponsorInput): updateSponsorPayload\n  deleteSponsor(input: deleteSponsorInput): deleteSponsorPayload\n  createTag(input: createTagInput): createTagPayload\n  updateTag(input: updateTagInput): updateTagPayload\n  deleteTag(input: deleteTagInput): deleteTagPayload\n\n  \"\"\"Create a new role\"\"\"\n  createRole(input: createRoleInput): createRolePayload\n\n  \"\"\"Update an existing role\"\"\"\n  updateRole(input: updateRoleInput): updateRolePayload\n\n  \"\"\"Delete an existing role\"\"\"\n  deleteRole(input: deleteRoleInput): deleteRolePayload\n  createUser(input: createUserInput): createUserPayload\n  updateUser(input: updateUserInput): updateUserPayload\n  deleteUser(input: deleteUserInput): deleteUserPayload\n  upload(refId: ID, ref: String, source: String, file: Upload!): UploadFile!\n}\n\ntype Post {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String\n  content: String\n  cover: UploadFile\n  tags(sort: String, limit: Int, start: Int, where: JSON): [Tag]\n}\n\ntype PostAggregator {\n  count: Int\n}\n\ntype PostConnection {\n  values: [Post]\n  groupBy: PostGroupBy\n  aggregate: PostAggregator\n}\n\ntype PostConnection_id {\n  key: ID\n  connection: PostConnection\n}\n\ntype PostConnectionContent {\n  key: String\n  connection: PostConnection\n}\n\ntype PostConnectionCover {\n  key: ID\n  connection: PostConnection\n}\n\ntype PostConnectionCreatedAt {\n  key: DateTime\n  connection: PostConnection\n}\n\ntype PostConnectionTitle {\n  key: String\n  connection: PostConnection\n}\n\ntype PostConnectionUpdatedAt {\n  key: DateTime\n  connection: PostConnection\n}\n\ntype PostGroupBy {\n  _id: [PostConnection_id]\n  createdAt: [PostConnectionCreatedAt]\n  updatedAt: [PostConnectionUpdatedAt]\n  title: [PostConnectionTitle]\n  content: [PostConnectionContent]\n  cover: [PostConnectionCover]\n}\n\ninput PostInput {\n  title: String\n  content: String\n  cover: ID\n  tags: [ID]\n}\n\ntype Query {\n  executive(id: ID!): Executive\n  executives(sort: String, limit: Int, start: Int, where: JSON): [Executive]\n  executivesConnection(sort: String, limit: Int, start: Int, where: JSON): ExecutiveConnection\n  leader(id: ID!): Leader\n  leaders(sort: String, limit: Int, start: Int, where: JSON): [Leader]\n  leadersConnection(sort: String, limit: Int, start: Int, where: JSON): LeaderConnection\n  post(id: ID!): Post\n  posts(sort: String, limit: Int, start: Int, where: JSON): [Post]\n  postsConnection(sort: String, limit: Int, start: Int, where: JSON): PostConnection\n  sponsor(id: ID!): Sponsor\n  sponsors(sort: String, limit: Int, start: Int, where: JSON): [Sponsor]\n  sponsorsConnection(sort: String, limit: Int, start: Int, where: JSON): SponsorConnection\n  tag(id: ID!): Tag\n  tags(sort: String, limit: Int, start: Int, where: JSON): [Tag]\n  tagsConnection(sort: String, limit: Int, start: Int, where: JSON): TagConnection\n  files(sort: String, limit: Int, start: Int, where: JSON): [UploadFile]\n  filesConnection(sort: String, limit: Int, start: Int, where: JSON): UploadFileConnection\n  role(id: ID!): UsersPermissionsRole\n\n  \"\"\"\n  Retrieve all the existing roles. You can't apply filters on this query.\n  \"\"\"\n  roles(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsRole]\n  rolesConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsRoleConnection\n  user(id: ID!): UsersPermissionsUser\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n  usersConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsUserConnection\n  me: UsersPermissionsMe\n}\n\ninput RoleInput {\n  name: String!\n  description: String\n  type: String\n  permissions: [ID]\n  users: [ID]\n}\n\n\"\"\"\nIxDA Sponsors either through monetary or in-kind donations, or through participation on the executive leadership committee.\n\"\"\"\ntype Sponsor {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  Name: String\n}\n\ntype SponsorAggregator {\n  count: Int\n}\n\ntype SponsorConnection {\n  values: [Sponsor]\n  groupBy: SponsorGroupBy\n  aggregate: SponsorAggregator\n}\n\ntype SponsorConnection_id {\n  key: ID\n  connection: SponsorConnection\n}\n\ntype SponsorConnectionCreatedAt {\n  key: DateTime\n  connection: SponsorConnection\n}\n\ntype SponsorConnectionName {\n  key: String\n  connection: SponsorConnection\n}\n\ntype SponsorConnectionUpdatedAt {\n  key: DateTime\n  connection: SponsorConnection\n}\n\ntype SponsorGroupBy {\n  _id: [SponsorConnection_id]\n  createdAt: [SponsorConnectionCreatedAt]\n  updatedAt: [SponsorConnectionUpdatedAt]\n  Name: [SponsorConnectionName]\n}\n\ninput SponsorInput {\n  Name: String\n}\n\ntype Tag {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String\n  posts(sort: String, limit: Int, start: Int, where: JSON): [Post]\n}\n\ntype TagAggregator {\n  count: Int\n}\n\ntype TagConnection {\n  values: [Tag]\n  groupBy: TagGroupBy\n  aggregate: TagAggregator\n}\n\ntype TagConnection_id {\n  key: ID\n  connection: TagConnection\n}\n\ntype TagConnectionCreatedAt {\n  key: DateTime\n  connection: TagConnection\n}\n\ntype TagConnectionName {\n  key: String\n  connection: TagConnection\n}\n\ntype TagConnectionUpdatedAt {\n  key: DateTime\n  connection: TagConnection\n}\n\ntype TagGroupBy {\n  _id: [TagConnection_id]\n  createdAt: [TagConnectionCreatedAt]\n  updatedAt: [TagConnectionUpdatedAt]\n  name: [TagConnectionName]\n}\n\ninput TagInput {\n  name: String\n  posts: [ID]\n}\n\ninput updateExecutiveInput {\n  where: InputID\n  data: ExecutiveInput\n}\n\ntype updateExecutivePayload {\n  executive: Executive\n}\n\ninput updateLeaderInput {\n  where: InputID\n  data: LeaderInput\n}\n\ntype updateLeaderPayload {\n  leader: Leader\n}\n\ninput updatePostInput {\n  where: InputID\n  data: PostInput\n}\n\ntype updatePostPayload {\n  post: Post\n}\n\ninput updateRoleInput {\n  where: InputID\n  data: RoleInput\n}\n\ntype updateRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput updateSponsorInput {\n  where: InputID\n  data: SponsorInput\n}\n\ntype updateSponsorPayload {\n  sponsor: Sponsor\n}\n\ninput updateTagInput {\n  where: InputID\n  data: TagInput\n}\n\ntype updateTagPayload {\n  tag: Tag\n}\n\ninput updateUserInput {\n  where: InputID\n  data: UserInput\n}\n\ntype updateUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload\n\ntype UploadFile {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related(sort: String, limit: Int, start: Int, where: JSON): [Morph]\n}\n\ntype UploadFileAggregator {\n  count: Int\n}\n\ntype UploadFileConnection {\n  values: [UploadFile]\n  groupBy: UploadFileGroupBy\n  aggregate: UploadFileAggregator\n}\n\ntype UploadFileConnection_id {\n  key: ID\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionCreatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionExt {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionHash {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionMime {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionName {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionProvider {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionPublic_id {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSha256 {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSize {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUpdatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUrl {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileGroupBy {\n  _id: [UploadFileConnection_id]\n  createdAt: [UploadFileConnectionCreatedAt]\n  updatedAt: [UploadFileConnectionUpdatedAt]\n  name: [UploadFileConnectionName]\n  hash: [UploadFileConnectionHash]\n  sha256: [UploadFileConnectionSha256]\n  ext: [UploadFileConnectionExt]\n  mime: [UploadFileConnectionMime]\n  size: [UploadFileConnectionSize]\n  url: [UploadFileConnectionUrl]\n  provider: [UploadFileConnectionProvider]\n  public_id: [UploadFileConnectionPublic_id]\n}\n\ninput UserInput {\n  username: String!\n  email: String!\n  provider: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: ID\n}\n\ntype UsersPermissionsMe {\n  _id: ID!\n  username: String!\n  email: String!\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsMeRole\n}\n\ntype UsersPermissionsMeRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n}\n\ntype UsersPermissionsPermission {\n  _id: ID!\n  type: String!\n  controller: String!\n  action: String!\n  enabled: Boolean!\n  policy: String\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n  permissions(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsPermission]\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n}\n\ntype UsersPermissionsRoleAggregator {\n  count: Int\n}\n\ntype UsersPermissionsRoleConnection {\n  values: [UsersPermissionsRole]\n  groupBy: UsersPermissionsRoleGroupBy\n  aggregate: UsersPermissionsRoleAggregator\n}\n\ntype UsersPermissionsRoleConnection_id {\n  key: ID\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionDescription {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionName {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionType {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleGroupBy {\n  _id: [UsersPermissionsRoleConnection_id]\n  name: [UsersPermissionsRoleConnectionName]\n  description: [UsersPermissionsRoleConnectionDescription]\n  type: [UsersPermissionsRoleConnectionType]\n}\n\ntype UsersPermissionsUser {\n  _id: ID!\n  username: String!\n  email: String!\n  provider: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsUserAggregator {\n  count: Int\n}\n\ntype UsersPermissionsUserConnection {\n  values: [UsersPermissionsUser]\n  groupBy: UsersPermissionsUserGroupBy\n  aggregate: UsersPermissionsUserAggregator\n}\n\ntype UsersPermissionsUserConnection_id {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionBlocked {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionConfirmed {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionEmail {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionProvider {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionRole {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionUsername {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserGroupBy {\n  _id: [UsersPermissionsUserConnection_id]\n  username: [UsersPermissionsUserConnectionUsername]\n  email: [UsersPermissionsUserConnectionEmail]\n  provider: [UsersPermissionsUserConnectionProvider]\n  confirmed: [UsersPermissionsUserConnectionConfirmed]\n  blocked: [UsersPermissionsUserConnectionBlocked]\n  role: [UsersPermissionsUserConnectionRole]\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 103,
      "containsCycle": true,
      "numDefinitions": 137
    }
  ],
  "metrics": {
    "created_at": "2019-05-04T18:37:33Z",
    "updated_at": "2019-05-06T13:55:19Z",
    "pushed_at": "2019-05-06T13:55:18Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}