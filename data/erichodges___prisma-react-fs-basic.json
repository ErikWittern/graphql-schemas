{
  "repo_name": "prisma-react-fs-basic",
  "repo_full_name": "erichodges/prisma-react-fs-basic",
  "repo_owner": "erichodges",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "graphcool.graphql",
      "path": "server/src/generated/graphcool.graphql",
      "sha": "10f8b991920e2469638958d3fa7803ff3a248b4b",
      "url": "https://api.github.com/repositories/117887360/contents/server/src/generated/graphcool.graphql?ref=3d46937e32ce33ed8e24f4a71a23df2c503c34c8",
      "git_url": "https://api.github.com/repositories/117887360/git/blobs/10f8b991920e2469638958d3fa7803ff3a248b4b",
      "html_url": "https://github.com/erichodges/prisma-react-fs-basic/blob/3d46937e32ce33ed8e24f4a71a23df2c503c34c8/server/src/generated/graphcool.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY THE \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Post implements Node {\n  id: ID!\n  isPublished: Boolean!\n  title: String!\n  text: String!\n}\n\n\n#\n# Other Types\n#\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar Long\n\ntype Mutation {\n  createPost(data: PostCreateInput!): Post!\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  deletePost(where: PostWhereUniqueInput!): Post\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  updateManyPosts(data: PostUpdateInput!, where: PostWhereInput!): BatchPayload!\n  deleteManyPosts(where: PostWhereInput!): BatchPayload!\n  resetData: Boolean\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype PostConnection {\n  pageInfo: PageInfo!\n  edges: [PostEdge]!\n}\n\ninput PostCreateInput {\n  isPublished: Boolean!\n  title: String!\n  text: String!\n}\n\ntype PostEdge {\n  node: Post!\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  isPublished_ASC\n  isPublished_DESC\n  title_ASC\n  title_DESC\n  text_ASC\n  text_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  isPublished: Boolean!\n  title: String!\n  text: String!\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  AND: [PostSubscriptionWhereInput!]\n  OR: [PostSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n}\n\ninput PostUpdateInput {\n  isPublished: Boolean\n  title: String\n  text: String\n}\n\ninput PostWhereInput {\n  AND: [PostWhereInput!]\n  OR: [PostWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  isPublished: Boolean\n  isPublished_not: Boolean\n  title: String\n  title_not: String\n  title_in: [String!]\n  title_not_in: [String!]\n  title_lt: String\n  title_lte: String\n  title_gt: String\n  title_gte: String\n  title_contains: String\n  title_not_contains: String\n  title_starts_with: String\n  title_not_starts_with: String\n  title_ends_with: String\n  title_not_ends_with: String\n  text: String\n  text_not: String\n  text_in: [String!]\n  text_not_in: [String!]\n  text_lt: String\n  text_lte: String\n  text_gt: String\n  text_gte: String\n  text_contains: String\n  text_not_contains: String\n  text_starts_with: String\n  text_not_starts_with: String\n  text_ends_with: String\n  text_not_ends_with: String\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  post(where: PostWhereUniqueInput!): Post\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 19
    },
    {
      "name": "prisma.graphql",
      "path": "server/src/generated/prisma.graphql",
      "sha": "30cfce07a5570ee74d26f9ebdddaa282ff6f63a2",
      "url": "https://api.github.com/repositories/117887360/contents/server/src/generated/prisma.graphql?ref=3d46937e32ce33ed8e24f4a71a23df2c503c34c8",
      "git_url": "https://api.github.com/repositories/117887360/git/blobs/30cfce07a5570ee74d26f9ebdddaa282ff6f63a2",
      "html_url": "https://github.com/erichodges/prisma-react-fs-basic/blob/3d46937e32ce33ed8e24f4a71a23df2c503c34c8/server/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Post implements Node {\n  id: ID!\n  isPublished: Boolean!\n  title: String!\n  text: String!\n}\n\ntype User implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  email: String!\n  password: String!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregatePost {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar DateTime\n\nscalar Long\n\ntype Mutation {\n  createPost(data: PostCreateInput!): Post!\n  createUser(data: UserCreateInput!): User!\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deletePost(where: PostWhereUniqueInput!): Post\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyPosts(data: PostUpdateInput!, where: PostWhereInput!): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!\n  deleteManyPosts(where: PostWhereInput!): BatchPayload!\n  deleteManyUsers(where: UserWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype PostConnection {\n  pageInfo: PageInfo!\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  isPublished: Boolean!\n  title: String!\n  text: String!\n}\n\ntype PostEdge {\n  node: Post!\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  isPublished_ASC\n  isPublished_DESC\n  title_ASC\n  title_DESC\n  text_ASC\n  text_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  isPublished: Boolean!\n  title: String!\n  text: String!\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  AND: [PostSubscriptionWhereInput!]\n  OR: [PostSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n}\n\ninput PostUpdateInput {\n  isPublished: Boolean\n  title: String\n  text: String\n}\n\ninput PostWhereInput {\n  AND: [PostWhereInput!]\n  OR: [PostWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  isPublished: Boolean\n  isPublished_not: Boolean\n  title: String\n  title_not: String\n  title_in: [String!]\n  title_not_in: [String!]\n  title_lt: String\n  title_lte: String\n  title_gt: String\n  title_gte: String\n  title_contains: String\n  title_not_contains: String\n  title_starts_with: String\n  title_not_starts_with: String\n  title_ends_with: String\n  title_not_ends_with: String\n  text: String\n  text_not: String\n  text_in: [String!]\n  text_not_in: [String!]\n  text_lt: String\n  text_lte: String\n  text_gt: String\n  text_gte: String\n  text_contains: String\n  text_not_contains: String\n  text_starts_with: String\n  text_not_starts_with: String\n  text_ends_with: String\n  text_not_ends_with: String\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  post(where: PostWhereUniqueInput!): Post\n  user(where: UserWhereUniqueInput!): User\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  password: String!\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  email: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  email: String\n  password: String\n}\n\ninput UserWhereInput {\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 17,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 33
    }
  ],
  "metrics": {
    "created_at": "2018-01-17T20:12:40Z",
    "updated_at": "2018-01-17T20:16:16Z",
    "pushed_at": "2018-01-18T22:15:39Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}