{
  "repo_name": "azdanov.github.io",
  "repo_full_name": "azdanov/azdanov.github.io",
  "repo_owner": "azdanov",
  "repo_description": "Personal Website of Anton Å½danov",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "src/graphql/schema.graphql",
      "sha": "a79edf531e3c45b3670c8417ee6565c74a4c7f3f",
      "url": "https://api.github.com/repositories/97165193/contents/src/graphql/schema.graphql?ref=2cea1d05827d1a76c7745a18d37d6f615948bd9b",
      "git_url": "https://api.github.com/repositories/97165193/git/blobs/a79edf531e3c45b3670c8417ee6565c74a4c7f3f",
      "html_url": "https://github.com/azdanov/azdanov.github.io/blob/2cea1d05827d1a76c7745a18d37d6f615948bd9b/src/graphql/schema.graphql",
      "content": "# source: http://localhost:8000/___graphql\n# timestamp: Wed Apr 17 2019 12:21:30 GMT+0300 (Eastern European Summer Time)\n\n\"\"\"\nInfer fields for this type from nodes.\n\"\"\"\ndirective @infer(\n  \"\"\"\n  Don't add default resolvers to defined fields.\n  \"\"\"\n  noDefaultResolvers: Boolean!\n) on OBJECT\n\n\"\"\"\nDo not infer additional fields for this type from nodes.\n\"\"\"\ndirective @dontInfer(\n  \"\"\"\n  Don't add default resolvers to defined fields.\n  \"\"\"\n  noDefaultResolvers: Boolean!\n) on OBJECT\n\ninput BooleanQueryOperatorInput {\n  eq: Boolean\n  ne: Boolean\n  in: [Boolean]\n  nin: [Boolean]\n}\n\n\"\"\"\nA date string, such as 2007-12-03, compliant with the ISO 8601 standard for\nrepresentation of dates and times using the Gregorian calendar.\n\"\"\"\nscalar Date\n\ninput DateQueryOperatorInput {\n  eq: Date\n  ne: Date\n  gt: Date\n  gte: Date\n  lt: Date\n  lte: Date\n  in: [Date]\n  nin: [Date]\n}\n\ntype Directory implements Node {\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n  sourceInstanceName: String\n  absolutePath: String\n  relativePath: String\n  extension: String\n  size: Int\n  prettySize: String\n  modifiedTime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n  accessTime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n  changeTime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n  birthTime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n  root: String\n  dir: String\n  base: String\n  ext: String\n  name: String\n  relativeDirectory: String\n  dev: Int\n  mode: Int\n  nlink: Int\n  uid: Int\n  gid: Int\n  rdev: Int\n  blksize: Int\n  ino: Int\n  blocks: Int\n  atimeMs: Float\n  mtimeMs: Float\n  ctimeMs: Float\n  birthtimeMs: Float\n  atime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n  mtime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n  ctime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n  birthtime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n}\n\ntype DirectoryConnection {\n  totalCount: Int!\n  edges: [DirectoryEdge!]!\n  nodes: [Directory!]!\n  pageInfo: PageInfo!\n  distinct(field: DirectoryFieldsEnum!): [String!]!\n  group(\n    skip: Int\n    limit: Int\n    field: DirectoryFieldsEnum!\n  ): [DirectoryGroupConnection!]!\n}\n\ntype DirectoryEdge {\n  next: Directory\n  node: Directory!\n  previous: Directory\n}\n\nenum DirectoryFieldsEnum {\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n  sourceInstanceName\n  absolutePath\n  relativePath\n  extension\n  size\n  prettySize\n  modifiedTime\n  accessTime\n  changeTime\n  birthTime\n  root\n  dir\n  base\n  ext\n  name\n  relativeDirectory\n  dev\n  mode\n  nlink\n  uid\n  gid\n  rdev\n  blksize\n  ino\n  blocks\n  atimeMs\n  mtimeMs\n  ctimeMs\n  birthtimeMs\n  atime\n  mtime\n  ctime\n  birthtime\n}\n\ninput DirectoryFilterInput {\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n  sourceInstanceName: StringQueryOperatorInput\n  absolutePath: StringQueryOperatorInput\n  relativePath: StringQueryOperatorInput\n  extension: StringQueryOperatorInput\n  size: IntQueryOperatorInput\n  prettySize: StringQueryOperatorInput\n  modifiedTime: DateQueryOperatorInput\n  accessTime: DateQueryOperatorInput\n  changeTime: DateQueryOperatorInput\n  birthTime: DateQueryOperatorInput\n  root: StringQueryOperatorInput\n  dir: StringQueryOperatorInput\n  base: StringQueryOperatorInput\n  ext: StringQueryOperatorInput\n  name: StringQueryOperatorInput\n  relativeDirectory: StringQueryOperatorInput\n  dev: IntQueryOperatorInput\n  mode: IntQueryOperatorInput\n  nlink: IntQueryOperatorInput\n  uid: IntQueryOperatorInput\n  gid: IntQueryOperatorInput\n  rdev: IntQueryOperatorInput\n  blksize: IntQueryOperatorInput\n  ino: IntQueryOperatorInput\n  blocks: IntQueryOperatorInput\n  atimeMs: FloatQueryOperatorInput\n  mtimeMs: FloatQueryOperatorInput\n  ctimeMs: FloatQueryOperatorInput\n  birthtimeMs: FloatQueryOperatorInput\n  atime: DateQueryOperatorInput\n  mtime: DateQueryOperatorInput\n  ctime: DateQueryOperatorInput\n  birthtime: DateQueryOperatorInput\n}\n\ntype DirectoryGroupConnection {\n  totalCount: Int!\n  edges: [DirectoryEdge!]!\n  nodes: [Directory!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ninput DirectorySortInput {\n  fields: [DirectoryFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ninput DuotoneGradient {\n  highlight: String\n  shadow: String\n  opacity: Int\n}\n\nenum ExcerptFormats {\n  PLAIN\n  HTML\n}\n\ntype File implements Node {\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n  sourceInstanceName: String\n  absolutePath: String\n  relativePath: String\n  extension: String\n  size: Int\n  prettySize: String\n  modifiedTime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n  accessTime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n  changeTime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n  birthTime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n  root: String\n  dir: String\n  base: String\n  ext: String\n  name: String\n  relativeDirectory: String\n  dev: Int\n  mode: Int\n  nlink: Int\n  uid: Int\n  gid: Int\n  rdev: Int\n  blksize: Int\n  ino: Int\n  blocks: Int\n  atimeMs: Float\n  mtimeMs: Float\n  ctimeMs: Float\n  birthtimeMs: Float\n  atime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n  mtime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n  ctime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n  birthtime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n\n  \"\"\"\n  Copy file to static directory and return public url to it\n  \"\"\"\n  publicURL: String\n  childSocialJson: SocialJson\n  childMarkdownRemark: MarkdownRemark\n  childSkillsJson: SkillsJson\n  childImageSharp: ImageSharp\n}\n\ntype FileConnection {\n  totalCount: Int!\n  edges: [FileEdge!]!\n  nodes: [File!]!\n  pageInfo: PageInfo!\n  distinct(field: FileFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!\n}\n\ntype FileEdge {\n  next: File\n  node: File!\n  previous: File\n}\n\nenum FileFieldsEnum {\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n  sourceInstanceName\n  absolutePath\n  relativePath\n  extension\n  size\n  prettySize\n  modifiedTime\n  accessTime\n  changeTime\n  birthTime\n  root\n  dir\n  base\n  ext\n  name\n  relativeDirectory\n  dev\n  mode\n  nlink\n  uid\n  gid\n  rdev\n  blksize\n  ino\n  blocks\n  atimeMs\n  mtimeMs\n  ctimeMs\n  birthtimeMs\n  atime\n  mtime\n  ctime\n  birthtime\n  publicURL\n}\n\ninput FileFilterInput {\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n  sourceInstanceName: StringQueryOperatorInput\n  absolutePath: StringQueryOperatorInput\n  relativePath: StringQueryOperatorInput\n  extension: StringQueryOperatorInput\n  size: IntQueryOperatorInput\n  prettySize: StringQueryOperatorInput\n  modifiedTime: DateQueryOperatorInput\n  accessTime: DateQueryOperatorInput\n  changeTime: DateQueryOperatorInput\n  birthTime: DateQueryOperatorInput\n  root: StringQueryOperatorInput\n  dir: StringQueryOperatorInput\n  base: StringQueryOperatorInput\n  ext: StringQueryOperatorInput\n  name: StringQueryOperatorInput\n  relativeDirectory: StringQueryOperatorInput\n  dev: IntQueryOperatorInput\n  mode: IntQueryOperatorInput\n  nlink: IntQueryOperatorInput\n  uid: IntQueryOperatorInput\n  gid: IntQueryOperatorInput\n  rdev: IntQueryOperatorInput\n  blksize: IntQueryOperatorInput\n  ino: IntQueryOperatorInput\n  blocks: IntQueryOperatorInput\n  atimeMs: FloatQueryOperatorInput\n  mtimeMs: FloatQueryOperatorInput\n  ctimeMs: FloatQueryOperatorInput\n  birthtimeMs: FloatQueryOperatorInput\n  atime: DateQueryOperatorInput\n  mtime: DateQueryOperatorInput\n  ctime: DateQueryOperatorInput\n  birthtime: DateQueryOperatorInput\n  publicURL: StringQueryOperatorInput\n}\n\ntype FileGroupConnection {\n  totalCount: Int!\n  edges: [FileEdge!]!\n  nodes: [File!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ninput FileSortInput {\n  fields: [FileFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ninput FloatQueryOperatorInput {\n  eq: Float\n  ne: Float\n  gt: Float\n  gte: Float\n  lt: Float\n  lte: Float\n  in: [Float]\n  nin: [Float]\n}\n\nenum HeadingLevels {\n  h1\n  h2\n  h3\n  h4\n  h5\n  h6\n}\n\nenum ImageCropFocus {\n  CENTER\n  NORTH\n  NORTHEAST\n  EAST\n  SOUTHEAST\n  SOUTH\n  SOUTHWEST\n  WEST\n  NORTHWEST\n  ENTROPY\n  ATTENTION\n}\n\nenum ImageFit {\n  COVER\n  CONTAIN\n  FILL\n}\n\nenum ImageFormat {\n  NO_CHANGE\n  JPG\n  PNG\n  WEBP\n}\n\ntype ImageSharp implements Node {\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n  fixed(\n    width: Int\n    height: Int\n    base64Width: Int\n    jpegProgressive: Boolean = true\n    pngCompressionSpeed: Int = 4\n    grayscale: Boolean = false\n    duotone: DuotoneGradient\n    traceSVG: Potrace\n    quality: Int\n    toFormat: ImageFormat = NO_CHANGE\n    toFormatBase64: ImageFormat = NO_CHANGE\n    cropFocus: ImageCropFocus = ATTENTION\n    rotate: Int = 0\n  ): ImageSharpFixed\n  resolutions(\n    width: Int\n    height: Int\n    base64Width: Int\n    jpegProgressive: Boolean = true\n    pngCompressionSpeed: Int = 4\n    grayscale: Boolean = false\n    duotone: DuotoneGradient\n    traceSVG: Potrace\n    quality: Int\n    toFormat: ImageFormat = NO_CHANGE\n    toFormatBase64: ImageFormat = NO_CHANGE\n    cropFocus: ImageCropFocus = ATTENTION\n    rotate: Int = 0\n  ): ImageSharpResolutions\n    @deprecated(\n      reason: \"Resolutions was deprecated in Gatsby v2. It's been renamed to \\\"fixed\\\" https://example.com/write-docs-and-fix-this-example-link\"\n    )\n  fluid(\n    maxWidth: Int\n    maxHeight: Int\n    base64Width: Int\n    grayscale: Boolean = false\n    jpegProgressive: Boolean = true\n    pngCompressionSpeed: Int = 4\n    duotone: DuotoneGradient\n    traceSVG: Potrace\n    quality: Int\n    toFormat: ImageFormat = NO_CHANGE\n    toFormatBase64: ImageFormat = NO_CHANGE\n    cropFocus: ImageCropFocus = ATTENTION\n    fit: ImageFit = COVER\n    background: String = \"rgba(0,0,0,1)\"\n    rotate: Int = 0\n    sizes: String = \"\"\n\n    \"\"\"\n    A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]\n    \"\"\"\n    srcSetBreakpoints: [Int] = []\n  ): ImageSharpFluid\n  sizes(\n    maxWidth: Int\n    maxHeight: Int\n    base64Width: Int\n    grayscale: Boolean = false\n    jpegProgressive: Boolean = true\n    pngCompressionSpeed: Int = 4\n    duotone: DuotoneGradient\n    traceSVG: Potrace\n    quality: Int\n    toFormat: ImageFormat = NO_CHANGE\n    toFormatBase64: ImageFormat = NO_CHANGE\n    cropFocus: ImageCropFocus = ATTENTION\n    fit: ImageFit = COVER\n    background: String = \"rgba(0,0,0,1)\"\n    rotate: Int = 0\n    sizes: String = \"\"\n\n    \"\"\"\n    A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]\n    \"\"\"\n    srcSetBreakpoints: [Int] = []\n  ): ImageSharpSizes\n    @deprecated(\n      reason: \"Sizes was deprecated in Gatsby v2. It's been renamed to \\\"fluid\\\" https://example.com/write-docs-and-fix-this-example-link\"\n    )\n  original: ImageSharpOriginal\n  resize(\n    width: Int\n    height: Int\n    quality: Int\n    jpegProgressive: Boolean = true\n    pngCompressionLevel: Int = 9\n    pngCompressionSpeed: Int = 4\n    grayscale: Boolean = false\n    duotone: DuotoneGradient\n    base64: Boolean = false\n    traceSVG: Potrace\n    toFormat: ImageFormat = NO_CHANGE\n    cropFocus: ImageCropFocus = ATTENTION\n    rotate: Int = 0\n  ): ImageSharpResize\n}\n\ntype ImageSharpConnection {\n  totalCount: Int!\n  edges: [ImageSharpEdge!]!\n  nodes: [ImageSharp!]!\n  pageInfo: PageInfo!\n  distinct(field: ImageSharpFieldsEnum!): [String!]!\n  group(\n    skip: Int\n    limit: Int\n    field: ImageSharpFieldsEnum!\n  ): [ImageSharpGroupConnection!]!\n}\n\ntype ImageSharpEdge {\n  next: ImageSharp\n  node: ImageSharp!\n  previous: ImageSharp\n}\n\nenum ImageSharpFieldsEnum {\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n  fixed___base64\n  fixed___tracedSVG\n  fixed___aspectRatio\n  fixed___width\n  fixed___height\n  fixed___src\n  fixed___srcSet\n  fixed___srcWebp\n  fixed___srcSetWebp\n  fixed___originalName\n  resolutions___base64\n  resolutions___tracedSVG\n  resolutions___aspectRatio\n  resolutions___width\n  resolutions___height\n  resolutions___src\n  resolutions___srcSet\n  resolutions___srcWebp\n  resolutions___srcSetWebp\n  resolutions___originalName\n  fluid___base64\n  fluid___tracedSVG\n  fluid___aspectRatio\n  fluid___src\n  fluid___srcSet\n  fluid___srcWebp\n  fluid___srcSetWebp\n  fluid___sizes\n  fluid___originalImg\n  fluid___originalName\n  fluid___presentationWidth\n  fluid___presentationHeight\n  sizes___base64\n  sizes___tracedSVG\n  sizes___aspectRatio\n  sizes___src\n  sizes___srcSet\n  sizes___srcWebp\n  sizes___srcSetWebp\n  sizes___sizes\n  sizes___originalImg\n  sizes___originalName\n  sizes___presentationWidth\n  sizes___presentationHeight\n  original___width\n  original___height\n  original___src\n  resize___src\n  resize___tracedSVG\n  resize___width\n  resize___height\n  resize___aspectRatio\n  resize___originalName\n}\n\ninput ImageSharpFilterInput {\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n  fixed: ImageSharpFixedFilterInput\n  resolutions: ImageSharpResolutionsFilterInput\n  fluid: ImageSharpFluidFilterInput\n  sizes: ImageSharpSizesFilterInput\n  original: ImageSharpOriginalFilterInput\n  resize: ImageSharpResizeFilterInput\n}\n\ntype ImageSharpFixed {\n  base64: String\n  tracedSVG: String\n  aspectRatio: Float\n  width: Float\n  height: Float\n  src: String\n  srcSet: String\n  srcWebp: String\n  srcSetWebp: String\n  originalName: String\n}\n\ninput ImageSharpFixedFilterInput {\n  base64: StringQueryOperatorInput\n  tracedSVG: StringQueryOperatorInput\n  aspectRatio: FloatQueryOperatorInput\n  width: FloatQueryOperatorInput\n  height: FloatQueryOperatorInput\n  src: StringQueryOperatorInput\n  srcSet: StringQueryOperatorInput\n  srcWebp: StringQueryOperatorInput\n  srcSetWebp: StringQueryOperatorInput\n  originalName: StringQueryOperatorInput\n}\n\ntype ImageSharpFluid {\n  base64: String\n  tracedSVG: String\n  aspectRatio: Float\n  src: String\n  srcSet: String\n  srcWebp: String\n  srcSetWebp: String\n  sizes: String\n  originalImg: String\n  originalName: String\n  presentationWidth: Int\n  presentationHeight: Int\n}\n\ninput ImageSharpFluidFilterInput {\n  base64: StringQueryOperatorInput\n  tracedSVG: StringQueryOperatorInput\n  aspectRatio: FloatQueryOperatorInput\n  src: StringQueryOperatorInput\n  srcSet: StringQueryOperatorInput\n  srcWebp: StringQueryOperatorInput\n  srcSetWebp: StringQueryOperatorInput\n  sizes: StringQueryOperatorInput\n  originalImg: StringQueryOperatorInput\n  originalName: StringQueryOperatorInput\n  presentationWidth: IntQueryOperatorInput\n  presentationHeight: IntQueryOperatorInput\n}\n\ntype ImageSharpGroupConnection {\n  totalCount: Int!\n  edges: [ImageSharpEdge!]!\n  nodes: [ImageSharp!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ntype ImageSharpOriginal {\n  width: Float\n  height: Float\n  src: String\n}\n\ninput ImageSharpOriginalFilterInput {\n  width: FloatQueryOperatorInput\n  height: FloatQueryOperatorInput\n  src: StringQueryOperatorInput\n}\n\ntype ImageSharpResize {\n  src: String\n  tracedSVG: String\n  width: Int\n  height: Int\n  aspectRatio: Float\n  originalName: String\n}\n\ninput ImageSharpResizeFilterInput {\n  src: StringQueryOperatorInput\n  tracedSVG: StringQueryOperatorInput\n  width: IntQueryOperatorInput\n  height: IntQueryOperatorInput\n  aspectRatio: FloatQueryOperatorInput\n  originalName: StringQueryOperatorInput\n}\n\ntype ImageSharpResolutions {\n  base64: String\n  tracedSVG: String\n  aspectRatio: Float\n  width: Float\n  height: Float\n  src: String\n  srcSet: String\n  srcWebp: String\n  srcSetWebp: String\n  originalName: String\n}\n\ninput ImageSharpResolutionsFilterInput {\n  base64: StringQueryOperatorInput\n  tracedSVG: StringQueryOperatorInput\n  aspectRatio: FloatQueryOperatorInput\n  width: FloatQueryOperatorInput\n  height: FloatQueryOperatorInput\n  src: StringQueryOperatorInput\n  srcSet: StringQueryOperatorInput\n  srcWebp: StringQueryOperatorInput\n  srcSetWebp: StringQueryOperatorInput\n  originalName: StringQueryOperatorInput\n}\n\ntype ImageSharpSizes {\n  base64: String\n  tracedSVG: String\n  aspectRatio: Float\n  src: String\n  srcSet: String\n  srcWebp: String\n  srcSetWebp: String\n  sizes: String\n  originalImg: String\n  originalName: String\n  presentationWidth: Int\n  presentationHeight: Int\n}\n\ninput ImageSharpSizesFilterInput {\n  base64: StringQueryOperatorInput\n  tracedSVG: StringQueryOperatorInput\n  aspectRatio: FloatQueryOperatorInput\n  src: StringQueryOperatorInput\n  srcSet: StringQueryOperatorInput\n  srcWebp: StringQueryOperatorInput\n  srcSetWebp: StringQueryOperatorInput\n  sizes: StringQueryOperatorInput\n  originalImg: StringQueryOperatorInput\n  originalName: StringQueryOperatorInput\n  presentationWidth: IntQueryOperatorInput\n  presentationHeight: IntQueryOperatorInput\n}\n\ninput ImageSharpSortInput {\n  fields: [ImageSharpFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ntype Internal {\n  content: String\n  contentDigest: String!\n  description: String\n  fieldOwners: [String]\n  ignoreType: Boolean\n  mediaType: String\n  owner: String!\n  type: String!\n}\n\ninput InternalFilterInput {\n  content: StringQueryOperatorInput\n  contentDigest: StringQueryOperatorInput\n  description: StringQueryOperatorInput\n  fieldOwners: StringQueryOperatorInput\n  ignoreType: BooleanQueryOperatorInput\n  mediaType: StringQueryOperatorInput\n  owner: StringQueryOperatorInput\n  type: StringQueryOperatorInput\n}\n\ninput IntQueryOperatorInput {\n  eq: Int\n  ne: Int\n  gt: Int\n  gte: Int\n  lt: Int\n  lte: Int\n  in: [Int]\n  nin: [Int]\n}\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\"\"\"\nscalar JSON\n\ninput JSONQueryOperatorInput {\n  eq: JSON\n  ne: JSON\n  in: [JSON]\n  nin: [JSON]\n  regex: JSON\n  glob: JSON\n}\n\ntype MarkdownHeading {\n  value: String\n  depth: Int\n}\n\ninput MarkdownHeadingFilterInput {\n  value: StringQueryOperatorInput\n  depth: IntQueryOperatorInput\n}\n\ninput MarkdownHeadingFilterListInput {\n  elemMatch: MarkdownHeadingFilterInput\n}\n\ntype MarkdownRemark implements Node {\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n  frontmatter: MarkdownRemarkFrontmatter\n  excerpt(\n    pruneLength: Int = 140\n    truncate: Boolean = false\n    format: ExcerptFormats = PLAIN\n  ): String\n  rawMarkdownBody: String\n  fileAbsolutePath: String\n  fields: MarkdownRemarkFields\n  html: String\n  htmlAst: JSON\n  excerptAst(pruneLength: Int = 140, truncate: Boolean = false): JSON\n  headings(depth: HeadingLevels): [MarkdownHeading]\n  timeToRead: Int\n  tableOfContents(\n    pathToSlugField: String = \"fields.slug\"\n    maxDepth: Int\n    heading: String\n  ): String\n  wordCount: wordCount\n}\n\ntype MarkdownRemarkConnection {\n  totalCount: Int!\n  edges: [MarkdownRemarkEdge!]!\n  nodes: [MarkdownRemark!]!\n  pageInfo: PageInfo!\n  distinct(field: MarkdownRemarkFieldsEnum!): [String!]!\n  group(\n    skip: Int\n    limit: Int\n    field: MarkdownRemarkFieldsEnum!\n  ): [MarkdownRemarkGroupConnection!]!\n}\n\ntype MarkdownRemarkEdge {\n  next: MarkdownRemark\n  node: MarkdownRemark!\n  previous: MarkdownRemark\n}\n\ntype MarkdownRemarkFields {\n  path: String\n  slug: String\n}\n\nenum MarkdownRemarkFieldsEnum {\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n  frontmatter___title\n  frontmatter___date\n  frontmatter___description\n  frontmatter___tags\n  frontmatter___image___id\n  frontmatter___image___parent___id\n  frontmatter___image___parent___children\n  frontmatter___image___children\n  frontmatter___image___children___id\n  frontmatter___image___children___children\n  frontmatter___image___internal___content\n  frontmatter___image___internal___contentDigest\n  frontmatter___image___internal___description\n  frontmatter___image___internal___fieldOwners\n  frontmatter___image___internal___ignoreType\n  frontmatter___image___internal___mediaType\n  frontmatter___image___internal___owner\n  frontmatter___image___internal___type\n  frontmatter___image___sourceInstanceName\n  frontmatter___image___absolutePath\n  frontmatter___image___relativePath\n  frontmatter___image___extension\n  frontmatter___image___size\n  frontmatter___image___prettySize\n  frontmatter___image___modifiedTime\n  frontmatter___image___accessTime\n  frontmatter___image___changeTime\n  frontmatter___image___birthTime\n  frontmatter___image___root\n  frontmatter___image___dir\n  frontmatter___image___base\n  frontmatter___image___ext\n  frontmatter___image___name\n  frontmatter___image___relativeDirectory\n  frontmatter___image___dev\n  frontmatter___image___mode\n  frontmatter___image___nlink\n  frontmatter___image___uid\n  frontmatter___image___gid\n  frontmatter___image___rdev\n  frontmatter___image___blksize\n  frontmatter___image___ino\n  frontmatter___image___blocks\n  frontmatter___image___atimeMs\n  frontmatter___image___mtimeMs\n  frontmatter___image___ctimeMs\n  frontmatter___image___birthtimeMs\n  frontmatter___image___atime\n  frontmatter___image___mtime\n  frontmatter___image___ctime\n  frontmatter___image___birthtime\n  frontmatter___image___publicURL\n  excerpt\n  rawMarkdownBody\n  fileAbsolutePath\n  fields___path\n  fields___slug\n  html\n  htmlAst\n  excerptAst\n  headings\n  headings___value\n  headings___depth\n  timeToRead\n  tableOfContents\n  wordCount___paragraphs\n  wordCount___sentences\n  wordCount___words\n}\n\ninput MarkdownRemarkFieldsFilterInput {\n  path: StringQueryOperatorInput\n  slug: StringQueryOperatorInput\n}\n\ninput MarkdownRemarkFilterInput {\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n  frontmatter: MarkdownRemarkFrontmatterFilterInput\n  excerpt: StringQueryOperatorInput\n  rawMarkdownBody: StringQueryOperatorInput\n  fileAbsolutePath: StringQueryOperatorInput\n  fields: MarkdownRemarkFieldsFilterInput\n  html: StringQueryOperatorInput\n  htmlAst: JSONQueryOperatorInput\n  excerptAst: JSONQueryOperatorInput\n  headings: MarkdownHeadingFilterListInput\n  timeToRead: IntQueryOperatorInput\n  tableOfContents: StringQueryOperatorInput\n  wordCount: wordCountFilterInput\n}\n\ntype MarkdownRemarkFrontmatter {\n  title: String\n  date(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n  description: String\n  tags: [String]\n  image: File\n}\n\ninput MarkdownRemarkFrontmatterFilterInput {\n  title: StringQueryOperatorInput\n  date: DateQueryOperatorInput\n  description: StringQueryOperatorInput\n  tags: StringQueryOperatorInput\n  image: FileFilterInput\n}\n\ntype MarkdownRemarkGroupConnection {\n  totalCount: Int!\n  edges: [MarkdownRemarkEdge!]!\n  nodes: [MarkdownRemark!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ninput MarkdownRemarkSortInput {\n  fields: [MarkdownRemarkFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\n\"\"\"\nNode Interface\n\"\"\"\ninterface Node {\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n}\n\ninput NodeFilterInput {\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n}\n\ninput NodeFilterListInput {\n  elemMatch: NodeFilterInput\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n}\n\ninput Potrace {\n  turnPolicy: PotraceTurnPolicy\n  turdSize: Float\n  alphaMax: Float\n  optCurve: Boolean\n  optTolerance: Float\n  threshold: Int\n  blackOnWhite: Boolean\n  color: String\n  background: String\n}\n\nenum PotraceTurnPolicy {\n  TURNPOLICY_BLACK\n  TURNPOLICY_WHITE\n  TURNPOLICY_LEFT\n  TURNPOLICY_RIGHT\n  TURNPOLICY_MINORITY\n  TURNPOLICY_MAJORITY\n}\n\ntype Query {\n  file(\n    id: StringQueryOperatorInput\n    parent: NodeFilterInput\n    children: NodeFilterListInput\n    internal: InternalFilterInput\n    sourceInstanceName: StringQueryOperatorInput\n    absolutePath: StringQueryOperatorInput\n    relativePath: StringQueryOperatorInput\n    extension: StringQueryOperatorInput\n    size: IntQueryOperatorInput\n    prettySize: StringQueryOperatorInput\n    modifiedTime: DateQueryOperatorInput\n    accessTime: DateQueryOperatorInput\n    changeTime: DateQueryOperatorInput\n    birthTime: DateQueryOperatorInput\n    root: StringQueryOperatorInput\n    dir: StringQueryOperatorInput\n    base: StringQueryOperatorInput\n    ext: StringQueryOperatorInput\n    name: StringQueryOperatorInput\n    relativeDirectory: StringQueryOperatorInput\n    dev: IntQueryOperatorInput\n    mode: IntQueryOperatorInput\n    nlink: IntQueryOperatorInput\n    uid: IntQueryOperatorInput\n    gid: IntQueryOperatorInput\n    rdev: IntQueryOperatorInput\n    blksize: IntQueryOperatorInput\n    ino: IntQueryOperatorInput\n    blocks: IntQueryOperatorInput\n    atimeMs: FloatQueryOperatorInput\n    mtimeMs: FloatQueryOperatorInput\n    ctimeMs: FloatQueryOperatorInput\n    birthtimeMs: FloatQueryOperatorInput\n    atime: DateQueryOperatorInput\n    mtime: DateQueryOperatorInput\n    ctime: DateQueryOperatorInput\n    birthtime: DateQueryOperatorInput\n    publicURL: StringQueryOperatorInput\n  ): File\n  allFile(\n    filter: FileFilterInput\n    sort: FileSortInput\n    skip: Int\n    limit: Int\n  ): FileConnection\n  sitePage(\n    id: StringQueryOperatorInput\n    parent: NodeFilterInput\n    children: NodeFilterListInput\n    internal: InternalFilterInput\n    path: StringQueryOperatorInput\n    jsonName: StringQueryOperatorInput\n    internalComponentName: StringQueryOperatorInput\n    component: StringQueryOperatorInput\n    componentChunkName: StringQueryOperatorInput\n    isCreatedByStatefulCreatePages: BooleanQueryOperatorInput\n    context: SitePageContextFilterInput\n    pluginCreator: SitePluginFilterInput\n    pluginCreatorId: StringQueryOperatorInput\n    componentPath: StringQueryOperatorInput\n  ): SitePage\n  allSitePage(\n    filter: SitePageFilterInput\n    sort: SitePageSortInput\n    skip: Int\n    limit: Int\n  ): SitePageConnection\n  sitePlugin(\n    id: StringQueryOperatorInput\n    parent: NodeFilterInput\n    children: NodeFilterListInput\n    internal: InternalFilterInput\n    resolve: StringQueryOperatorInput\n    name: StringQueryOperatorInput\n    version: StringQueryOperatorInput\n    pluginOptions: SitePluginPluginOptionsFilterInput\n    nodeAPIs: StringQueryOperatorInput\n    browserAPIs: StringQueryOperatorInput\n    ssrAPIs: StringQueryOperatorInput\n    pluginFilepath: StringQueryOperatorInput\n    packageJson: SitePluginPackageJsonFilterInput\n  ): SitePlugin\n  allSitePlugin(\n    filter: SitePluginFilterInput\n    sort: SitePluginSortInput\n    skip: Int\n    limit: Int\n  ): SitePluginConnection\n  site(\n    id: StringQueryOperatorInput\n    parent: NodeFilterInput\n    children: NodeFilterListInput\n    internal: InternalFilterInput\n    siteMetadata: SiteSiteMetadataFilterInput\n    port: IntQueryOperatorInput\n    host: StringQueryOperatorInput\n    pathPrefix: StringQueryOperatorInput\n    polyfill: BooleanQueryOperatorInput\n    buildTime: DateQueryOperatorInput\n  ): Site\n  allSite(\n    filter: SiteFilterInput\n    sort: SiteSortInput\n    skip: Int\n    limit: Int\n  ): SiteConnection\n  directory(\n    id: StringQueryOperatorInput\n    parent: NodeFilterInput\n    children: NodeFilterListInput\n    internal: InternalFilterInput\n    sourceInstanceName: StringQueryOperatorInput\n    absolutePath: StringQueryOperatorInput\n    relativePath: StringQueryOperatorInput\n    extension: StringQueryOperatorInput\n    size: IntQueryOperatorInput\n    prettySize: StringQueryOperatorInput\n    modifiedTime: DateQueryOperatorInput\n    accessTime: DateQueryOperatorInput\n    changeTime: DateQueryOperatorInput\n    birthTime: DateQueryOperatorInput\n    root: StringQueryOperatorInput\n    dir: StringQueryOperatorInput\n    base: StringQueryOperatorInput\n    ext: StringQueryOperatorInput\n    name: StringQueryOperatorInput\n    relativeDirectory: StringQueryOperatorInput\n    dev: IntQueryOperatorInput\n    mode: IntQueryOperatorInput\n    nlink: IntQueryOperatorInput\n    uid: IntQueryOperatorInput\n    gid: IntQueryOperatorInput\n    rdev: IntQueryOperatorInput\n    blksize: IntQueryOperatorInput\n    ino: IntQueryOperatorInput\n    blocks: IntQueryOperatorInput\n    atimeMs: FloatQueryOperatorInput\n    mtimeMs: FloatQueryOperatorInput\n    ctimeMs: FloatQueryOperatorInput\n    birthtimeMs: FloatQueryOperatorInput\n    atime: DateQueryOperatorInput\n    mtime: DateQueryOperatorInput\n    ctime: DateQueryOperatorInput\n    birthtime: DateQueryOperatorInput\n  ): Directory\n  allDirectory(\n    filter: DirectoryFilterInput\n    sort: DirectorySortInput\n    skip: Int\n    limit: Int\n  ): DirectoryConnection\n  imageSharp(\n    id: StringQueryOperatorInput\n    parent: NodeFilterInput\n    children: NodeFilterListInput\n    internal: InternalFilterInput\n    fixed: ImageSharpFixedFilterInput\n    resolutions: ImageSharpResolutionsFilterInput\n    fluid: ImageSharpFluidFilterInput\n    sizes: ImageSharpSizesFilterInput\n    original: ImageSharpOriginalFilterInput\n    resize: ImageSharpResizeFilterInput\n  ): ImageSharp\n  allImageSharp(\n    filter: ImageSharpFilterInput\n    sort: ImageSharpSortInput\n    skip: Int\n    limit: Int\n  ): ImageSharpConnection\n  socialJson(\n    id: StringQueryOperatorInput\n    parent: NodeFilterInput\n    children: NodeFilterListInput\n    internal: InternalFilterInput\n    social: SocialJsonSocialFilterListInput\n  ): SocialJson\n  allSocialJson(\n    filter: SocialJsonFilterInput\n    sort: SocialJsonSortInput\n    skip: Int\n    limit: Int\n  ): SocialJsonConnection\n  skillsJson(\n    id: StringQueryOperatorInput\n    parent: NodeFilterInput\n    children: NodeFilterListInput\n    internal: InternalFilterInput\n    languages: SkillsJsonLanguagesFilterListInput\n    periphery: SkillsJsonPeripheryFilterListInput\n    frameworks: SkillsJsonFrameworksFilterListInput\n    tools: SkillsJsonToolsFilterListInput\n  ): SkillsJson\n  allSkillsJson(\n    filter: SkillsJsonFilterInput\n    sort: SkillsJsonSortInput\n    skip: Int\n    limit: Int\n  ): SkillsJsonConnection\n  markdownRemark(\n    id: StringQueryOperatorInput\n    parent: NodeFilterInput\n    children: NodeFilterListInput\n    internal: InternalFilterInput\n    frontmatter: MarkdownRemarkFrontmatterFilterInput\n    excerpt: StringQueryOperatorInput\n    rawMarkdownBody: StringQueryOperatorInput\n    fileAbsolutePath: StringQueryOperatorInput\n    fields: MarkdownRemarkFieldsFilterInput\n    html: StringQueryOperatorInput\n    htmlAst: JSONQueryOperatorInput\n    excerptAst: JSONQueryOperatorInput\n    headings: MarkdownHeadingFilterListInput\n    timeToRead: IntQueryOperatorInput\n    tableOfContents: StringQueryOperatorInput\n    wordCount: wordCountFilterInput\n  ): MarkdownRemark\n  allMarkdownRemark(\n    filter: MarkdownRemarkFilterInput\n    sort: MarkdownRemarkSortInput\n    skip: Int\n    limit: Int\n  ): MarkdownRemarkConnection\n}\n\ntype Site implements Node {\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n  siteMetadata: SiteSiteMetadata\n  port: Int\n  host: String\n  pathPrefix: String\n  polyfill: Boolean\n  buildTime(\n    \"\"\"\n    Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    documentation for different tokens.\n    \"\"\"\n    formatString: String\n\n    \"\"\"\n    Returns a string generated with Moment.js' `fromNow` function\n    \"\"\"\n    fromNow: Boolean\n\n    \"\"\"\n    Returns the difference between this date and the current time. Defaults to\n    \"miliseconds\" but you can also pass in as the measurement \"years\", \"months\",\n    \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    \"\"\"\n    difference: String\n\n    \"\"\"\n    Configures the locale Moment.js will use to format the date.\n    \"\"\"\n    locale: String\n  ): Date\n}\n\ntype SiteConnection {\n  totalCount: Int!\n  edges: [SiteEdge!]!\n  nodes: [Site!]!\n  pageInfo: PageInfo!\n  distinct(field: SiteFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!\n}\n\ntype SiteEdge {\n  next: Site\n  node: Site!\n  previous: Site\n}\n\nenum SiteFieldsEnum {\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n  siteMetadata___title\n  siteMetadata___description\n  siteMetadata___siteUrl\n  siteMetadata___logo\n  siteMetadata___titleShort\n  siteMetadata___disqus\n  siteMetadata___keywords\n  siteMetadata___author___name\n  siteMetadata___author___userTwitter\n  siteMetadata___author___url\n  siteMetadata___author___email\n  port\n  host\n  pathPrefix\n  polyfill\n  buildTime\n}\n\ninput SiteFilterInput {\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n  siteMetadata: SiteSiteMetadataFilterInput\n  port: IntQueryOperatorInput\n  host: StringQueryOperatorInput\n  pathPrefix: StringQueryOperatorInput\n  polyfill: BooleanQueryOperatorInput\n  buildTime: DateQueryOperatorInput\n}\n\ntype SiteGroupConnection {\n  totalCount: Int!\n  edges: [SiteEdge!]!\n  nodes: [Site!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ntype SitePage implements Node {\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n  path: String\n  jsonName: String\n  internalComponentName: String\n  component: String\n  componentChunkName: String\n  isCreatedByStatefulCreatePages: Boolean\n  context: SitePageContext\n  pluginCreator: SitePlugin\n  pluginCreatorId: String\n  componentPath: String\n}\n\ntype SitePageConnection {\n  totalCount: Int!\n  edges: [SitePageEdge!]!\n  nodes: [SitePage!]!\n  pageInfo: PageInfo!\n  distinct(field: SitePageFieldsEnum!): [String!]!\n  group(\n    skip: Int\n    limit: Int\n    field: SitePageFieldsEnum!\n  ): [SitePageGroupConnection!]!\n}\n\ntype SitePageContext {\n  slug: String\n}\n\ninput SitePageContextFilterInput {\n  slug: StringQueryOperatorInput\n}\n\ntype SitePageEdge {\n  next: SitePage\n  node: SitePage!\n  previous: SitePage\n}\n\nenum SitePageFieldsEnum {\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n  path\n  jsonName\n  internalComponentName\n  component\n  componentChunkName\n  isCreatedByStatefulCreatePages\n  context___slug\n  pluginCreator___id\n  pluginCreator___parent___id\n  pluginCreator___parent___parent___id\n  pluginCreator___parent___parent___children\n  pluginCreator___parent___children\n  pluginCreator___parent___children___id\n  pluginCreator___parent___children___children\n  pluginCreator___parent___internal___content\n  pluginCreator___parent___internal___contentDigest\n  pluginCreator___parent___internal___description\n  pluginCreator___parent___internal___fieldOwners\n  pluginCreator___parent___internal___ignoreType\n  pluginCreator___parent___internal___mediaType\n  pluginCreator___parent___internal___owner\n  pluginCreator___parent___internal___type\n  pluginCreator___children\n  pluginCreator___children___id\n  pluginCreator___children___parent___id\n  pluginCreator___children___parent___children\n  pluginCreator___children___children\n  pluginCreator___children___children___id\n  pluginCreator___children___children___children\n  pluginCreator___children___internal___content\n  pluginCreator___children___internal___contentDigest\n  pluginCreator___children___internal___description\n  pluginCreator___children___internal___fieldOwners\n  pluginCreator___children___internal___ignoreType\n  pluginCreator___children___internal___mediaType\n  pluginCreator___children___internal___owner\n  pluginCreator___children___internal___type\n  pluginCreator___internal___content\n  pluginCreator___internal___contentDigest\n  pluginCreator___internal___description\n  pluginCreator___internal___fieldOwners\n  pluginCreator___internal___ignoreType\n  pluginCreator___internal___mediaType\n  pluginCreator___internal___owner\n  pluginCreator___internal___type\n  pluginCreator___resolve\n  pluginCreator___name\n  pluginCreator___version\n  pluginCreator___pluginOptions___plugins\n  pluginCreator___pluginOptions___plugins___resolve\n  pluginCreator___pluginOptions___plugins___id\n  pluginCreator___pluginOptions___plugins___name\n  pluginCreator___pluginOptions___plugins___version\n  pluginCreator___pluginOptions___plugins___browserAPIs\n  pluginCreator___pluginOptions___plugins___pluginFilepath\n  pluginCreator___pluginOptions___dest\n  pluginCreator___pluginOptions___name\n  pluginCreator___pluginOptions___path\n  pluginCreator___pluginOptions___ignoreFileExtensions\n  pluginCreator___pluginOptions___width\n  pluginCreator___pluginOptions___ratio\n  pluginCreator___pluginOptions___height\n  pluginCreator___pluginOptions___related\n  pluginCreator___pluginOptions___noIframeBorder\n  pluginCreator___pluginOptions___withWebp\n  pluginCreator___pluginOptions___linkImagesToOriginal\n  pluginCreator___pluginOptions___backgroundColor\n  pluginCreator___pluginOptions___maxWidth\n  pluginCreator___pluginOptions___quality\n  pluginCreator___pluginOptions___wrapperStyle\n  pluginCreator___pluginOptions___showCaptions\n  pluginCreator___pluginOptions___pathPrefix\n  pluginCreator___pluginOptions___tracedSVG\n  pluginCreator___pluginOptions___additionalLangs\n  pluginCreator___pluginOptions___scopePrefix\n  pluginCreator___pluginOptions___languages\n  pluginCreator___pluginOptions___languages___name\n  pluginCreator___pluginOptions___fields\n  pluginCreator___pluginOptions___fields___name\n  pluginCreator___pluginOptions___fields___store\n  pluginCreator___pluginOptions___icon\n  pluginCreator___pluginOptions___short_name\n  pluginCreator___pluginOptions___start_url\n  pluginCreator___pluginOptions___background_color\n  pluginCreator___pluginOptions___theme_color\n  pluginCreator___pluginOptions___display\n  pluginCreator___pluginOptions___exclude\n  pluginCreator___pluginOptions___feeds\n  pluginCreator___pluginOptions___feeds___query\n  pluginCreator___pluginOptions___feeds___output\n  pluginCreator___pluginOptions___pathCheck\n  pluginCreator___nodeAPIs\n  pluginCreator___browserAPIs\n  pluginCreator___ssrAPIs\n  pluginCreator___pluginFilepath\n  pluginCreator___packageJson___name\n  pluginCreator___packageJson___description\n  pluginCreator___packageJson___version\n  pluginCreator___packageJson___main\n  pluginCreator___packageJson___author\n  pluginCreator___packageJson___license\n  pluginCreator___packageJson___dependencies\n  pluginCreator___packageJson___dependencies___name\n  pluginCreator___packageJson___dependencies___version\n  pluginCreator___packageJson___devDependencies\n  pluginCreator___packageJson___devDependencies___name\n  pluginCreator___packageJson___devDependencies___version\n  pluginCreator___packageJson___peerDependencies\n  pluginCreator___packageJson___peerDependencies___name\n  pluginCreator___packageJson___peerDependencies___version\n  pluginCreator___packageJson___keywords\n  pluginCreatorId\n  componentPath\n}\n\ninput SitePageFilterInput {\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n  path: StringQueryOperatorInput\n  jsonName: StringQueryOperatorInput\n  internalComponentName: StringQueryOperatorInput\n  component: StringQueryOperatorInput\n  componentChunkName: StringQueryOperatorInput\n  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput\n  context: SitePageContextFilterInput\n  pluginCreator: SitePluginFilterInput\n  pluginCreatorId: StringQueryOperatorInput\n  componentPath: StringQueryOperatorInput\n}\n\ntype SitePageGroupConnection {\n  totalCount: Int!\n  edges: [SitePageEdge!]!\n  nodes: [SitePage!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ninput SitePageSortInput {\n  fields: [SitePageFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ntype SitePlugin implements Node {\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n  resolve: String\n  name: String\n  version: String\n  pluginOptions: SitePluginPluginOptions\n  nodeAPIs: [String]\n  browserAPIs: [String]\n  ssrAPIs: [String]\n  pluginFilepath: String\n  packageJson: SitePluginPackageJson\n}\n\ntype SitePluginConnection {\n  totalCount: Int!\n  edges: [SitePluginEdge!]!\n  nodes: [SitePlugin!]!\n  pageInfo: PageInfo!\n  distinct(field: SitePluginFieldsEnum!): [String!]!\n  group(\n    skip: Int\n    limit: Int\n    field: SitePluginFieldsEnum!\n  ): [SitePluginGroupConnection!]!\n}\n\ntype SitePluginEdge {\n  next: SitePlugin\n  node: SitePlugin!\n  previous: SitePlugin\n}\n\nenum SitePluginFieldsEnum {\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n  resolve\n  name\n  version\n  pluginOptions___plugins\n  pluginOptions___plugins___resolve\n  pluginOptions___plugins___id\n  pluginOptions___plugins___name\n  pluginOptions___plugins___version\n  pluginOptions___plugins___pluginOptions___ignoreFileExtensions\n  pluginOptions___plugins___pluginOptions___width\n  pluginOptions___plugins___pluginOptions___ratio\n  pluginOptions___plugins___pluginOptions___height\n  pluginOptions___plugins___pluginOptions___related\n  pluginOptions___plugins___pluginOptions___noIframeBorder\n  pluginOptions___plugins___pluginOptions___withWebp\n  pluginOptions___plugins___pluginOptions___linkImagesToOriginal\n  pluginOptions___plugins___pluginOptions___backgroundColor\n  pluginOptions___plugins___pluginOptions___maxWidth\n  pluginOptions___plugins___pluginOptions___quality\n  pluginOptions___plugins___pluginOptions___wrapperStyle\n  pluginOptions___plugins___pluginOptions___showCaptions\n  pluginOptions___plugins___pluginOptions___pathPrefix\n  pluginOptions___plugins___pluginOptions___tracedSVG\n  pluginOptions___plugins___pluginOptions___additionalLangs\n  pluginOptions___plugins___pluginOptions___scopePrefix\n  pluginOptions___plugins___browserAPIs\n  pluginOptions___plugins___pluginFilepath\n  pluginOptions___dest\n  pluginOptions___name\n  pluginOptions___path\n  pluginOptions___ignoreFileExtensions\n  pluginOptions___width\n  pluginOptions___ratio\n  pluginOptions___height\n  pluginOptions___related\n  pluginOptions___noIframeBorder\n  pluginOptions___withWebp\n  pluginOptions___linkImagesToOriginal\n  pluginOptions___backgroundColor\n  pluginOptions___maxWidth\n  pluginOptions___quality\n  pluginOptions___wrapperStyle\n  pluginOptions___showCaptions\n  pluginOptions___pathPrefix\n  pluginOptions___tracedSVG\n  pluginOptions___additionalLangs\n  pluginOptions___scopePrefix\n  pluginOptions___languages\n  pluginOptions___languages___name\n  pluginOptions___fields\n  pluginOptions___fields___name\n  pluginOptions___fields___attributes___boost\n  pluginOptions___fields___store\n  pluginOptions___icon\n  pluginOptions___short_name\n  pluginOptions___start_url\n  pluginOptions___background_color\n  pluginOptions___theme_color\n  pluginOptions___display\n  pluginOptions___exclude\n  pluginOptions___env___production___policy\n  pluginOptions___env___branch_deploy___policy\n  pluginOptions___env___deploy_preview___policy\n  pluginOptions___feeds\n  pluginOptions___feeds___query\n  pluginOptions___feeds___output\n  pluginOptions___pathCheck\n  nodeAPIs\n  browserAPIs\n  ssrAPIs\n  pluginFilepath\n  packageJson___name\n  packageJson___description\n  packageJson___version\n  packageJson___main\n  packageJson___author\n  packageJson___license\n  packageJson___dependencies\n  packageJson___dependencies___name\n  packageJson___dependencies___version\n  packageJson___devDependencies\n  packageJson___devDependencies___name\n  packageJson___devDependencies___version\n  packageJson___peerDependencies\n  packageJson___peerDependencies___name\n  packageJson___peerDependencies___version\n  packageJson___keywords\n}\n\ninput SitePluginFilterInput {\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n  resolve: StringQueryOperatorInput\n  name: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n  pluginOptions: SitePluginPluginOptionsFilterInput\n  nodeAPIs: StringQueryOperatorInput\n  browserAPIs: StringQueryOperatorInput\n  ssrAPIs: StringQueryOperatorInput\n  pluginFilepath: StringQueryOperatorInput\n  packageJson: SitePluginPackageJsonFilterInput\n}\n\ntype SitePluginGroupConnection {\n  totalCount: Int!\n  edges: [SitePluginEdge!]!\n  nodes: [SitePlugin!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ntype SitePluginPackageJson {\n  name: String\n  description: String\n  version: String\n  main: String\n  author: String\n  license: String\n  dependencies: [SitePluginPackageJsonDependencies]\n  devDependencies: [SitePluginPackageJsonDevDependencies]\n  peerDependencies: [SitePluginPackageJsonPeerDependencies]\n  keywords: [String]\n}\n\ntype SitePluginPackageJsonDependencies {\n  name: String\n  version: String\n}\n\ninput SitePluginPackageJsonDependenciesFilterInput {\n  name: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n}\n\ninput SitePluginPackageJsonDependenciesFilterListInput {\n  elemMatch: SitePluginPackageJsonDependenciesFilterInput\n}\n\ntype SitePluginPackageJsonDevDependencies {\n  name: String\n  version: String\n}\n\ninput SitePluginPackageJsonDevDependenciesFilterInput {\n  name: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n}\n\ninput SitePluginPackageJsonDevDependenciesFilterListInput {\n  elemMatch: SitePluginPackageJsonDevDependenciesFilterInput\n}\n\ninput SitePluginPackageJsonFilterInput {\n  name: StringQueryOperatorInput\n  description: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n  main: StringQueryOperatorInput\n  author: StringQueryOperatorInput\n  license: StringQueryOperatorInput\n  dependencies: SitePluginPackageJsonDependenciesFilterListInput\n  devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput\n  peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput\n  keywords: StringQueryOperatorInput\n}\n\ntype SitePluginPackageJsonPeerDependencies {\n  name: String\n  version: String\n}\n\ninput SitePluginPackageJsonPeerDependenciesFilterInput {\n  name: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n}\n\ninput SitePluginPackageJsonPeerDependenciesFilterListInput {\n  elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput\n}\n\ntype SitePluginPluginOptions {\n  plugins: [SitePluginPluginOptionsPlugins]\n  dest: String\n  name: String\n  path: String\n  ignoreFileExtensions: [String]\n  width: Int\n  ratio: Float\n  height: Int\n  related: Boolean\n  noIframeBorder: Boolean\n  withWebp: Boolean\n  linkImagesToOriginal: Boolean\n  backgroundColor: String\n  maxWidth: Int\n  quality: Int\n  wrapperStyle: String\n  showCaptions: Boolean\n  pathPrefix: String\n  tracedSVG: Boolean\n  additionalLangs: [String]\n  scopePrefix: String\n  languages: [SitePluginPluginOptionsLanguages]\n  fields: [SitePluginPluginOptionsFields]\n  icon: String\n  short_name: String\n  start_url: String\n  background_color: String\n  theme_color: String\n  display: String\n  exclude: [String]\n  env: SitePluginPluginOptionsEnv\n  feeds: [SitePluginPluginOptionsFeeds]\n  pathCheck: Boolean\n}\n\ntype SitePluginPluginOptionsEnv {\n  production: SitePluginPluginOptionsEnvProduction\n  branch_deploy: SitePluginPluginOptionsEnvBranch_deploy\n  deploy_preview: SitePluginPluginOptionsEnvDeploy_preview\n}\n\ntype SitePluginPluginOptionsEnvBranch_deploy {\n  policy: [SitePluginPluginOptionsEnvBranch_deployPolicy]\n}\n\ninput SitePluginPluginOptionsEnvBranch_deployFilterInput {\n  policy: SitePluginPluginOptionsEnvBranch_deployPolicyFilterListInput\n}\n\ntype SitePluginPluginOptionsEnvBranch_deployPolicy {\n  userAgent: String\n  disallow: [String]\n}\n\ninput SitePluginPluginOptionsEnvBranch_deployPolicyFilterInput {\n  userAgent: StringQueryOperatorInput\n  disallow: StringQueryOperatorInput\n}\n\ninput SitePluginPluginOptionsEnvBranch_deployPolicyFilterListInput {\n  elemMatch: SitePluginPluginOptionsEnvBranch_deployPolicyFilterInput\n}\n\ntype SitePluginPluginOptionsEnvDeploy_preview {\n  policy: [SitePluginPluginOptionsEnvDeploy_previewPolicy]\n}\n\ninput SitePluginPluginOptionsEnvDeploy_previewFilterInput {\n  policy: SitePluginPluginOptionsEnvDeploy_previewPolicyFilterListInput\n}\n\ntype SitePluginPluginOptionsEnvDeploy_previewPolicy {\n  userAgent: String\n  disallow: [String]\n}\n\ninput SitePluginPluginOptionsEnvDeploy_previewPolicyFilterInput {\n  userAgent: StringQueryOperatorInput\n  disallow: StringQueryOperatorInput\n}\n\ninput SitePluginPluginOptionsEnvDeploy_previewPolicyFilterListInput {\n  elemMatch: SitePluginPluginOptionsEnvDeploy_previewPolicyFilterInput\n}\n\ninput SitePluginPluginOptionsEnvFilterInput {\n  production: SitePluginPluginOptionsEnvProductionFilterInput\n  branch_deploy: SitePluginPluginOptionsEnvBranch_deployFilterInput\n  deploy_preview: SitePluginPluginOptionsEnvDeploy_previewFilterInput\n}\n\ntype SitePluginPluginOptionsEnvProduction {\n  policy: [SitePluginPluginOptionsEnvProductionPolicy]\n}\n\ninput SitePluginPluginOptionsEnvProductionFilterInput {\n  policy: SitePluginPluginOptionsEnvProductionPolicyFilterListInput\n}\n\ntype SitePluginPluginOptionsEnvProductionPolicy {\n  userAgent: String\n}\n\ninput SitePluginPluginOptionsEnvProductionPolicyFilterInput {\n  userAgent: StringQueryOperatorInput\n}\n\ninput SitePluginPluginOptionsEnvProductionPolicyFilterListInput {\n  elemMatch: SitePluginPluginOptionsEnvProductionPolicyFilterInput\n}\n\ntype SitePluginPluginOptionsFeeds {\n  query: String\n  output: String\n}\n\ninput SitePluginPluginOptionsFeedsFilterInput {\n  query: StringQueryOperatorInput\n  output: StringQueryOperatorInput\n}\n\ninput SitePluginPluginOptionsFeedsFilterListInput {\n  elemMatch: SitePluginPluginOptionsFeedsFilterInput\n}\n\ntype SitePluginPluginOptionsFields {\n  name: String\n  attributes: SitePluginPluginOptionsFieldsAttributes\n  store: Boolean\n}\n\ntype SitePluginPluginOptionsFieldsAttributes {\n  boost: Int\n}\n\ninput SitePluginPluginOptionsFieldsAttributesFilterInput {\n  boost: IntQueryOperatorInput\n}\n\ninput SitePluginPluginOptionsFieldsFilterInput {\n  name: StringQueryOperatorInput\n  attributes: SitePluginPluginOptionsFieldsAttributesFilterInput\n  store: BooleanQueryOperatorInput\n}\n\ninput SitePluginPluginOptionsFieldsFilterListInput {\n  elemMatch: SitePluginPluginOptionsFieldsFilterInput\n}\n\ninput SitePluginPluginOptionsFilterInput {\n  plugins: SitePluginPluginOptionsPluginsFilterListInput\n  dest: StringQueryOperatorInput\n  name: StringQueryOperatorInput\n  path: StringQueryOperatorInput\n  ignoreFileExtensions: StringQueryOperatorInput\n  width: IntQueryOperatorInput\n  ratio: FloatQueryOperatorInput\n  height: IntQueryOperatorInput\n  related: BooleanQueryOperatorInput\n  noIframeBorder: BooleanQueryOperatorInput\n  withWebp: BooleanQueryOperatorInput\n  linkImagesToOriginal: BooleanQueryOperatorInput\n  backgroundColor: StringQueryOperatorInput\n  maxWidth: IntQueryOperatorInput\n  quality: IntQueryOperatorInput\n  wrapperStyle: StringQueryOperatorInput\n  showCaptions: BooleanQueryOperatorInput\n  pathPrefix: StringQueryOperatorInput\n  tracedSVG: BooleanQueryOperatorInput\n  additionalLangs: StringQueryOperatorInput\n  scopePrefix: StringQueryOperatorInput\n  languages: SitePluginPluginOptionsLanguagesFilterListInput\n  fields: SitePluginPluginOptionsFieldsFilterListInput\n  icon: StringQueryOperatorInput\n  short_name: StringQueryOperatorInput\n  start_url: StringQueryOperatorInput\n  background_color: StringQueryOperatorInput\n  theme_color: StringQueryOperatorInput\n  display: StringQueryOperatorInput\n  exclude: StringQueryOperatorInput\n  env: SitePluginPluginOptionsEnvFilterInput\n  feeds: SitePluginPluginOptionsFeedsFilterListInput\n  pathCheck: BooleanQueryOperatorInput\n}\n\ntype SitePluginPluginOptionsLanguages {\n  name: String\n}\n\ninput SitePluginPluginOptionsLanguagesFilterInput {\n  name: StringQueryOperatorInput\n}\n\ninput SitePluginPluginOptionsLanguagesFilterListInput {\n  elemMatch: SitePluginPluginOptionsLanguagesFilterInput\n}\n\ntype SitePluginPluginOptionsPlugins {\n  resolve: String\n  id: String\n  name: String\n  version: String\n  pluginOptions: SitePluginPluginOptionsPluginsPluginOptions\n  browserAPIs: [String]\n  pluginFilepath: String\n}\n\ninput SitePluginPluginOptionsPluginsFilterInput {\n  resolve: StringQueryOperatorInput\n  id: StringQueryOperatorInput\n  name: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n  pluginOptions: SitePluginPluginOptionsPluginsPluginOptionsFilterInput\n  browserAPIs: StringQueryOperatorInput\n  pluginFilepath: StringQueryOperatorInput\n}\n\ninput SitePluginPluginOptionsPluginsFilterListInput {\n  elemMatch: SitePluginPluginOptionsPluginsFilterInput\n}\n\ntype SitePluginPluginOptionsPluginsPluginOptions {\n  ignoreFileExtensions: [String]\n  width: Int\n  ratio: Float\n  height: Int\n  related: Boolean\n  noIframeBorder: Boolean\n  withWebp: Boolean\n  linkImagesToOriginal: Boolean\n  backgroundColor: String\n  maxWidth: Int\n  quality: Int\n  wrapperStyle: String\n  showCaptions: Boolean\n  pathPrefix: String\n  tracedSVG: Boolean\n  additionalLangs: [String]\n  scopePrefix: String\n}\n\ninput SitePluginPluginOptionsPluginsPluginOptionsFilterInput {\n  ignoreFileExtensions: StringQueryOperatorInput\n  width: IntQueryOperatorInput\n  ratio: FloatQueryOperatorInput\n  height: IntQueryOperatorInput\n  related: BooleanQueryOperatorInput\n  noIframeBorder: BooleanQueryOperatorInput\n  withWebp: BooleanQueryOperatorInput\n  linkImagesToOriginal: BooleanQueryOperatorInput\n  backgroundColor: StringQueryOperatorInput\n  maxWidth: IntQueryOperatorInput\n  quality: IntQueryOperatorInput\n  wrapperStyle: StringQueryOperatorInput\n  showCaptions: BooleanQueryOperatorInput\n  pathPrefix: StringQueryOperatorInput\n  tracedSVG: BooleanQueryOperatorInput\n  additionalLangs: StringQueryOperatorInput\n  scopePrefix: StringQueryOperatorInput\n}\n\ninput SitePluginSortInput {\n  fields: [SitePluginFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ntype SiteSiteMetadata {\n  title: String\n  description: String\n  siteUrl: String\n  logo: String\n  titleShort: String\n  disqus: String\n  keywords: String\n  author: SiteSiteMetadataAuthor\n}\n\ntype SiteSiteMetadataAuthor {\n  name: String\n  userTwitter: String\n  url: String\n  email: String\n}\n\ninput SiteSiteMetadataAuthorFilterInput {\n  name: StringQueryOperatorInput\n  userTwitter: StringQueryOperatorInput\n  url: StringQueryOperatorInput\n  email: StringQueryOperatorInput\n}\n\ninput SiteSiteMetadataFilterInput {\n  title: StringQueryOperatorInput\n  description: StringQueryOperatorInput\n  siteUrl: StringQueryOperatorInput\n  logo: StringQueryOperatorInput\n  titleShort: StringQueryOperatorInput\n  disqus: StringQueryOperatorInput\n  keywords: StringQueryOperatorInput\n  author: SiteSiteMetadataAuthorFilterInput\n}\n\ninput SiteSortInput {\n  fields: [SiteFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ntype SkillsJson implements Node {\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n  languages: [SkillsJsonLanguages]\n  periphery: [SkillsJsonPeriphery]\n  frameworks: [SkillsJsonFrameworks]\n  tools: [SkillsJsonTools]\n}\n\ntype SkillsJsonConnection {\n  totalCount: Int!\n  edges: [SkillsJsonEdge!]!\n  nodes: [SkillsJson!]!\n  pageInfo: PageInfo!\n  distinct(field: SkillsJsonFieldsEnum!): [String!]!\n  group(\n    skip: Int\n    limit: Int\n    field: SkillsJsonFieldsEnum!\n  ): [SkillsJsonGroupConnection!]!\n}\n\ntype SkillsJsonEdge {\n  next: SkillsJson\n  node: SkillsJson!\n  previous: SkillsJson\n}\n\nenum SkillsJsonFieldsEnum {\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n  languages\n  languages___name\n  languages___url\n  periphery\n  periphery___name\n  periphery___url\n  frameworks\n  frameworks___name\n  frameworks___url\n  tools\n  tools___name\n  tools___url\n}\n\ninput SkillsJsonFilterInput {\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n  languages: SkillsJsonLanguagesFilterListInput\n  periphery: SkillsJsonPeripheryFilterListInput\n  frameworks: SkillsJsonFrameworksFilterListInput\n  tools: SkillsJsonToolsFilterListInput\n}\n\ntype SkillsJsonFrameworks {\n  name: String\n  url: String\n}\n\ninput SkillsJsonFrameworksFilterInput {\n  name: StringQueryOperatorInput\n  url: StringQueryOperatorInput\n}\n\ninput SkillsJsonFrameworksFilterListInput {\n  elemMatch: SkillsJsonFrameworksFilterInput\n}\n\ntype SkillsJsonGroupConnection {\n  totalCount: Int!\n  edges: [SkillsJsonEdge!]!\n  nodes: [SkillsJson!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ntype SkillsJsonLanguages {\n  name: String\n  url: String\n}\n\ninput SkillsJsonLanguagesFilterInput {\n  name: StringQueryOperatorInput\n  url: StringQueryOperatorInput\n}\n\ninput SkillsJsonLanguagesFilterListInput {\n  elemMatch: SkillsJsonLanguagesFilterInput\n}\n\ntype SkillsJsonPeriphery {\n  name: String\n  url: String\n}\n\ninput SkillsJsonPeripheryFilterInput {\n  name: StringQueryOperatorInput\n  url: StringQueryOperatorInput\n}\n\ninput SkillsJsonPeripheryFilterListInput {\n  elemMatch: SkillsJsonPeripheryFilterInput\n}\n\ninput SkillsJsonSortInput {\n  fields: [SkillsJsonFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ntype SkillsJsonTools {\n  name: String\n  url: String\n}\n\ninput SkillsJsonToolsFilterInput {\n  name: StringQueryOperatorInput\n  url: StringQueryOperatorInput\n}\n\ninput SkillsJsonToolsFilterListInput {\n  elemMatch: SkillsJsonToolsFilterInput\n}\n\ntype SocialJson implements Node {\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n  social: [SocialJsonSocial]\n}\n\ntype SocialJsonConnection {\n  totalCount: Int!\n  edges: [SocialJsonEdge!]!\n  nodes: [SocialJson!]!\n  pageInfo: PageInfo!\n  distinct(field: SocialJsonFieldsEnum!): [String!]!\n  group(\n    skip: Int\n    limit: Int\n    field: SocialJsonFieldsEnum!\n  ): [SocialJsonGroupConnection!]!\n}\n\ntype SocialJsonEdge {\n  next: SocialJson\n  node: SocialJson!\n  previous: SocialJson\n}\n\nenum SocialJsonFieldsEnum {\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n  social\n  social___name\n  social___url\n  social___handle\n  social___icon\n}\n\ninput SocialJsonFilterInput {\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n  social: SocialJsonSocialFilterListInput\n}\n\ntype SocialJsonGroupConnection {\n  totalCount: Int!\n  edges: [SocialJsonEdge!]!\n  nodes: [SocialJson!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ntype SocialJsonSocial {\n  name: String\n  url: String\n  handle: String\n  icon: String\n}\n\ninput SocialJsonSocialFilterInput {\n  name: StringQueryOperatorInput\n  url: StringQueryOperatorInput\n  handle: StringQueryOperatorInput\n  icon: StringQueryOperatorInput\n}\n\ninput SocialJsonSocialFilterListInput {\n  elemMatch: SocialJsonSocialFilterInput\n}\n\ninput SocialJsonSortInput {\n  fields: [SocialJsonFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\nenum SortOrderEnum {\n  ASC\n  DESC\n}\n\ninput StringQueryOperatorInput {\n  eq: String\n  ne: String\n  in: [String]\n  nin: [String]\n  regex: String\n  glob: String\n}\n\ntype wordCount {\n  paragraphs: Int\n  sentences: Int\n  words: Int\n}\n\ninput wordCountFilterInput {\n  paragraphs: IntQueryOperatorInput\n  sentences: IntQueryOperatorInput\n  words: IntQueryOperatorInput\n}\n",
      "containsQueryType": true,
      "typesUndefined": [],
      "directivesUndefined": [
        "deprecated"
      ],
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 75,
      "containsCycle": true,
      "numDefinitions": 177
    }
  ],
  "metrics": {
    "created_at": "2017-07-13T21:09:34Z",
    "updated_at": "2019-07-18T19:14:55Z",
    "pushed_at": "2019-07-19T18:07:07Z",
    "issues": 2,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": false,
    "license": "mit",
    "pull_requests": 255,
    "pull_requests_open": 0,
    "pull_requests_closed": 75,
    "pull_requests_merged": 180,
    "releases": 370,
    "stargazers": 6
  }
}