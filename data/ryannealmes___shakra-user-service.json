{
  "repo_name": "shakra-user-service",
  "repo_full_name": "ryannealmes/shakra-user-service",
  "repo_owner": "ryannealmes",
  "repo_description": "Handles authentication and user management",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "api/generated/prisma.graphql",
      "sha": "8f447091ab55ff1ed0515b11672b03d0c35c3cb5",
      "url": "https://api.github.com/repositories/138092994/contents/api/generated/prisma.graphql?ref=01b802bab09f6189d9129cea2d4650caf00f03c3",
      "git_url": "https://api.github.com/repositories/138092994/git/blobs/8f447091ab55ff1ed0515b11672b03d0c35c3cb5",
      "html_url": "https://github.com/ryannealmes/shakra-user-service/blob/01b802bab09f6189d9129cea2d4650caf00f03c3/api/generated/prisma.graphql",
      "content": "# source: http://localhost:4467/user-service/development\n# timestamp: Wed Jun 13 2018 20:01:13 GMT-0700 (PDT)\n\ntype AggregateTeam {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  createTeam(data: TeamCreateInput!): Team!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateTeam(data: TeamUpdateInput!, where: TeamWhereUniqueInput!): Team\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteTeam(where: TeamWhereUniqueInput!): Team\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertTeam(where: TeamWhereUniqueInput!, create: TeamCreateInput!, update: TeamUpdateInput!): Team!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  updateManyTeams(data: TeamUpdateInput!, where: TeamWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyTeams(where: TeamWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  teams(where: TeamWhereInput, orderBy: TeamOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Team]!\n  user(where: UserWhereUniqueInput!): User\n  team(where: TeamWhereUniqueInput!): Team\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  teamsConnection(where: TeamWhereInput, orderBy: TeamOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TeamConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  team(where: TeamSubscriptionWhereInput): TeamSubscriptionPayload\n}\n\ntype Team implements Node {\n  id: ID!\n  name: String!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TeamConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TeamEdge]!\n  aggregate: AggregateTeam!\n}\n\ninput TeamCreateInput {\n  name: String!\n  users: UserCreateManyWithoutTeamsInput\n}\n\ninput TeamCreateManyWithoutUsersInput {\n  create: [TeamCreateWithoutUsersInput!]\n  connect: [TeamWhereUniqueInput!]\n}\n\ninput TeamCreateWithoutUsersInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TeamEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Team!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum TeamOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TeamPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype TeamSubscriptionPayload {\n  mutation: MutationType!\n  node: Team\n  updatedFields: [String!]\n  previousValues: TeamPreviousValues\n}\n\ninput TeamSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TeamSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TeamSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TeamSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TeamWhereInput\n}\n\ninput TeamUpdateInput {\n  name: String\n  users: UserUpdateManyWithoutTeamsInput\n}\n\ninput TeamUpdateManyWithoutUsersInput {\n  create: [TeamCreateWithoutUsersInput!]\n  connect: [TeamWhereUniqueInput!]\n  disconnect: [TeamWhereUniqueInput!]\n  delete: [TeamWhereUniqueInput!]\n  update: [TeamUpdateWithWhereUniqueWithoutUsersInput!]\n  upsert: [TeamUpsertWithWhereUniqueWithoutUsersInput!]\n}\n\ninput TeamUpdateWithoutUsersDataInput {\n  name: String\n}\n\ninput TeamUpdateWithWhereUniqueWithoutUsersInput {\n  where: TeamWhereUniqueInput!\n  data: TeamUpdateWithoutUsersDataInput!\n}\n\ninput TeamUpsertWithWhereUniqueWithoutUsersInput {\n  where: TeamWhereUniqueInput!\n  update: TeamUpdateWithoutUsersDataInput!\n  create: TeamCreateWithoutUsersInput!\n}\n\ninput TeamWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TeamWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TeamWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TeamWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  users_every: UserWhereInput\n  users_some: UserWhereInput\n  users_none: UserWhereInput\n}\n\ninput TeamWhereUniqueInput {\n  id: ID\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n  username: String!\n  email: String!\n  password: String!\n  teams(where: TeamWhereInput, orderBy: TeamOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Team!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n  username: String!\n  email: String!\n  password: String!\n  teams: TeamCreateManyWithoutUsersInput\n}\n\ninput UserCreateManyWithoutTeamsInput {\n  create: [UserCreateWithoutTeamsInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateWithoutTeamsInput {\n  name: String!\n  username: String!\n  email: String!\n  password: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  username_ASC\n  username_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n  username: String!\n  email: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  name: String\n  username: String\n  email: String\n  password: String\n  teams: TeamUpdateManyWithoutUsersInput\n}\n\ninput UserUpdateManyWithoutTeamsInput {\n  create: [UserCreateWithoutTeamsInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  delete: [UserWhereUniqueInput!]\n  update: [UserUpdateWithWhereUniqueWithoutTeamsInput!]\n  upsert: [UserUpsertWithWhereUniqueWithoutTeamsInput!]\n}\n\ninput UserUpdateWithoutTeamsDataInput {\n  name: String\n  username: String\n  email: String\n  password: String\n}\n\ninput UserUpdateWithWhereUniqueWithoutTeamsInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutTeamsDataInput!\n}\n\ninput UserUpsertWithWhereUniqueWithoutTeamsInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutTeamsDataInput!\n  create: UserCreateWithoutTeamsInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  username: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  username_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  username_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  username_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  username_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  username_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  username_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  username_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  username_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  username_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  username_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  username_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  username_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  username_not_ends_with: String\n  email: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  email_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  email_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  email_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  email_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  email_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  email_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  email_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  email_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  email_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  email_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  email_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  email_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  email_not_ends_with: String\n  password: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  password_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  password_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  password_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  password_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  password_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  password_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  password_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  password_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  password_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  password_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  password_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  password_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  password_not_ends_with: String\n  teams_every: TeamWhereInput\n  teams_some: TeamWhereInput\n  teams_none: TeamWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  name: String\n  username: String\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 17,
      "containsCycle": true,
      "numDefinitions": 44
    }
  ],
  "metrics": {
    "created_at": "2018-06-20T22:35:50Z",
    "updated_at": "2019-03-30T09:39:11Z",
    "pushed_at": "2018-06-22T01:31:58Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 1
  }
}