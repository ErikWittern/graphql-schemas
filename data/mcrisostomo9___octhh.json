{
  "repo_name": "octhh",
  "repo_full_name": "mcrisostomo9/octhh",
  "repo_owner": "mcrisostomo9",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "schema.graphql",
      "sha": "314e31a24ae2e20ebba044430a01ecff24cd000d",
      "url": "https://api.github.com/repositories/172812992/contents/schema.graphql?ref=b21425d7e37c411751939b63848be3c0b29f4dd5",
      "git_url": "https://api.github.com/repositories/172812992/git/blobs/314e31a24ae2e20ebba044430a01ecff24cd000d",
      "html_url": "https://github.com/mcrisostomo9/octhh/blob/b21425d7e37c411751939b63848be3c0b29f4dd5/schema.graphql",
      "content": "# This file was generated based on \".graphqlconfig\". Do not edit manually.\n\nschema {\n    query: Query\n}\n\n\"Node Interface\"\ninterface Node {\n    children: [Node!]!\n    id: ID!\n    internal: Internal!\n    parent: Node\n}\n\ntype Directory implements Node {\n    absolutePath: String\n    accessTime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    atime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    atimeMs: Float\n    base: String\n    birthTime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    birthtime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    birthtimeMs: Float\n    blksize: Int\n    blocks: Int\n    changeTime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    children: [Node!]!\n    ctime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    ctimeMs: Float\n    dev: Int\n    dir: String\n    ext: String\n    extension: String\n    gid: Int\n    id: ID!\n    ino: Float\n    internal: Internal!\n    mode: Int\n    modifiedTime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    mtime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    mtimeMs: Float\n    name: String\n    nlink: Int\n    parent: Node\n    prettySize: String\n    rdev: Int\n    relativeDirectory: String\n    relativePath: String\n    root: String\n    size: Int\n    sourceInstanceName: String\n    uid: Int\n}\n\ntype DirectoryConnection {\n    distinct(field: DirectoryFieldsEnum!): [String!]!\n    edges: [DirectoryEdge!]!\n    group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!\n    nodes: [Directory!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n}\n\ntype DirectoryEdge {\n    next: Directory\n    node: Directory!\n    previous: Directory\n}\n\ntype DirectoryGroupConnection {\n    edges: [DirectoryEdge!]!\n    field: String!\n    fieldValue: String\n    nodes: [Directory!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n}\n\ntype File implements Node {\n    absolutePath: String\n    accessTime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    atime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    atimeMs: Float\n    base: String\n    birthTime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    birthtime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    birthtimeMs: Float\n    blksize: Int\n    blocks: Int\n    changeTime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    childImageSharp: ImageSharp\n    childMarkdownRemark: MarkdownRemark\n    children: [Node!]!\n    ctime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    ctimeMs: Float\n    dev: Int\n    dir: String\n    ext: String\n    extension: String\n    gid: Int\n    id: ID!\n    ino: Float\n    internal: Internal!\n    mode: Int\n    modifiedTime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    mtime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    mtimeMs: Float\n    name: String\n    nlink: Int\n    parent: Node\n    prettySize: String\n    \"Copy file to static directory and return public url to it\"\n    publicURL: String\n    rdev: Int\n    relativeDirectory: String\n    relativePath: String\n    root: String\n    size: Int\n    sourceInstanceName: String\n    uid: Int\n}\n\ntype FileConnection {\n    distinct(field: FileFieldsEnum!): [String!]!\n    edges: [FileEdge!]!\n    group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!\n    nodes: [File!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n}\n\ntype FileEdge {\n    next: File\n    node: File!\n    previous: File\n}\n\ntype FileGroupConnection {\n    edges: [FileEdge!]!\n    field: String!\n    fieldValue: String\n    nodes: [File!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n}\n\ntype ImageSharp implements Node {\n    children: [Node!]!\n    fixed(cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, quality: Int = 50, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, traceSVG: Potrace, width: Int): ImageSharpFixed\n    fluid(\n        cropFocus: ImageCropFocus = ATTENTION,\n        duotone: DuotoneGradient,\n        grayscale: Boolean = false,\n        jpegProgressive: Boolean = true,\n        maxHeight: Int,\n        maxWidth: Int,\n        pngCompressionSpeed: Int = 4,\n        quality: Int = 50,\n        rotate: Int = 0,\n        sizes: String = \"\",\n        #A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]\n        srcSetBreakpoints: [Int] = [],\n        toFormat: ImageFormat = NO_CHANGE,\n        traceSVG: Potrace\n    ): ImageSharpFluid\n    id: ID!\n    internal: Internal!\n    original: ImageSharpOriginal\n    parent: Node\n    resize(base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, quality: Int = 50, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, traceSVG: Potrace, width: Int): ImageSharpResize\n    resolutions(cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, quality: Int = 50, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, traceSVG: Potrace, width: Int): ImageSharpResolutions @deprecated(reason : \"Resolutions was deprecated in Gatsby v2. It's been renamed to \\\"fixed\\\" https:\\/\\/example.com\\/write-docs-and-fix-this-example-link\")\n    sizes(\n        cropFocus: ImageCropFocus = ATTENTION,\n        duotone: DuotoneGradient,\n        grayscale: Boolean = false,\n        jpegProgressive: Boolean = true,\n        maxHeight: Int,\n        maxWidth: Int,\n        pngCompressionSpeed: Int = 4,\n        quality: Int = 50,\n        rotate: Int = 0,\n        sizes: String = \"\",\n        #A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]\n        srcSetBreakpoints: [Int] = [],\n        toFormat: ImageFormat = NO_CHANGE,\n        traceSVG: Potrace\n    ): ImageSharpSizes @deprecated(reason : \"Sizes was deprecated in Gatsby v2. It's been renamed to \\\"fluid\\\" https:\\/\\/example.com\\/write-docs-and-fix-this-example-link\")\n}\n\ntype ImageSharpConnection {\n    distinct(field: ImageSharpFieldsEnum!): [String!]!\n    edges: [ImageSharpEdge!]!\n    group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!\n    nodes: [ImageSharp!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n}\n\ntype ImageSharpEdge {\n    next: ImageSharp\n    node: ImageSharp!\n    previous: ImageSharp\n}\n\ntype ImageSharpFixed {\n    aspectRatio: Float\n    base64: String\n    height: Float\n    originalName: String\n    src: String\n    srcSet: String\n    srcSetWebp: String\n    srcWebp: String\n    tracedSVG: String\n    width: Float\n}\n\ntype ImageSharpFluid {\n    aspectRatio: Float\n    base64: String\n    originalImg: String\n    originalName: String\n    presentationHeight: Int\n    presentationWidth: Int\n    sizes: String\n    src: String\n    srcSet: String\n    srcSetWebp: String\n    srcWebp: String\n    tracedSVG: String\n}\n\ntype ImageSharpGroupConnection {\n    edges: [ImageSharpEdge!]!\n    field: String!\n    fieldValue: String\n    nodes: [ImageSharp!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n}\n\ntype ImageSharpOriginal {\n    height: Float\n    src: String\n    width: Float\n}\n\ntype ImageSharpResize {\n    aspectRatio: Float\n    height: Int\n    originalName: String\n    src: String\n    tracedSVG: String\n    width: Int\n}\n\ntype ImageSharpResolutions {\n    aspectRatio: Float\n    base64: String\n    height: Float\n    originalName: String\n    src: String\n    srcSet: String\n    srcSetWebp: String\n    srcWebp: String\n    tracedSVG: String\n    width: Float\n}\n\ntype ImageSharpSizes {\n    aspectRatio: Float\n    base64: String\n    originalImg: String\n    originalName: String\n    presentationHeight: Int\n    presentationWidth: Int\n    sizes: String\n    src: String\n    srcSet: String\n    srcSetWebp: String\n    srcWebp: String\n    tracedSVG: String\n}\n\ntype Internal {\n    content: String\n    contentDigest: String!\n    description: String\n    fieldOwners: [String]\n    ignoreType: Boolean\n    mediaType: String\n    owner: String!\n    type: String!\n}\n\ntype MarkdownHeading {\n    depth: Int\n    value: String\n}\n\ntype MarkdownRemark implements Node {\n    children: [Node!]!\n    excerpt(format: ExcerptFormats = PLAIN, pruneLength: Int = 140, truncate: Boolean = false): String\n    fields: MarkdownRemarkFields\n    fileAbsolutePath: String\n    frontmatter: MarkdownRemarkFrontmatter\n    headings(depth: HeadingLevels): [MarkdownHeading]\n    html: String\n    htmlAst: JSON\n    id: ID!\n    internal: Internal!\n    parent: Node\n    rawMarkdownBody: String\n    tableOfContents(heading: String, maxDepth: Int, pathToSlugField: String = \"fields.slug\"): String\n    timeToRead: Int\n    wordCount: wordCount\n}\n\ntype MarkdownRemarkConnection {\n    distinct(field: MarkdownRemarkFieldsEnum!): [String!]!\n    edges: [MarkdownRemarkEdge!]!\n    group(field: MarkdownRemarkFieldsEnum!, limit: Int, skip: Int): [MarkdownRemarkGroupConnection!]!\n    nodes: [MarkdownRemark!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n}\n\ntype MarkdownRemarkEdge {\n    next: MarkdownRemark\n    node: MarkdownRemark!\n    previous: MarkdownRemark\n}\n\ntype MarkdownRemarkFields {\n    slug: String\n}\n\ntype MarkdownRemarkFrontmatter {\n    aboutSectionExtended: String\n    agendaSection: MarkdownRemarkFrontmatterAgendaSection\n    boardOfDirectorsSection: [MarkdownRemarkFrontmatterBoardOfDirectorsSection]\n    date(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    googleDriveLink: String\n    heroSection: MarkdownRemarkFrontmatterHeroSection\n    image: File\n    locationSection: MarkdownRemarkFrontmatterLocationSection\n    nextEventSection: MarkdownRemarkFrontmatterNextEventSection\n    panelistSection: MarkdownRemarkFrontmatterPanelistSection\n    sponsorsSection: [MarkdownRemarkFrontmatterSponsorsSection]\n    templateKey: String\n    title: String\n}\n\ntype MarkdownRemarkFrontmatterAgendaSection {\n    active: Boolean\n    agendaItems: [MarkdownRemarkFrontmatterAgendaSectionAgendaItems]\n}\n\ntype MarkdownRemarkFrontmatterAgendaSectionAgendaItems {\n    agendaDescription: String\n    timeRange: String\n    title: String\n}\n\ntype MarkdownRemarkFrontmatterBoardOfDirectorsSection {\n    name: String\n    position: String\n}\n\ntype MarkdownRemarkFrontmatterHeroSection {\n    description: String\n    heroImage: File\n    title: String\n}\n\ntype MarkdownRemarkFrontmatterLocationSection {\n    coordinates: MarkdownRemarkFrontmatterLocationSectionCoordinates\n    date: String\n    eventTimeRange: String\n    parkingBlurb: String\n    rsvpLink: String\n    venueAddress: String\n    venueName: String\n}\n\ntype MarkdownRemarkFrontmatterLocationSectionCoordinates {\n    latitude: String\n    longitude: String\n}\n\ntype MarkdownRemarkFrontmatterNextEventSection {\n    date: String\n    locationAddress: String\n    locationName: String\n    rsvpLink: String\n    title: String\n}\n\ntype MarkdownRemarkFrontmatterPanelistSection {\n    active: Boolean\n    panelistItems: [MarkdownRemarkFrontmatterPanelistSectionPanelistItems]\n}\n\ntype MarkdownRemarkFrontmatterPanelistSectionPanelistItems {\n    biography: String\n    image: File\n    name: String\n    position: String\n}\n\ntype MarkdownRemarkFrontmatterSponsorsSection {\n    logo: File\n    sponsor: String\n    website: String\n}\n\ntype MarkdownRemarkGroupConnection {\n    edges: [MarkdownRemarkEdge!]!\n    field: String!\n    fieldValue: String\n    nodes: [MarkdownRemark!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n}\n\ntype PageInfo {\n    currentPage: Int!\n    hasNextPage: Boolean!\n    hasPreviousPage: Boolean!\n    itemCount: Int!\n    pageCount: Int!\n    perPage: Int\n}\n\ntype Query {\n    allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection\n    allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection\n    allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection\n    allMarkdownRemark(filter: MarkdownRemarkFilterInput, limit: Int, skip: Int, sort: MarkdownRemarkSortInput): MarkdownRemarkConnection\n    allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection\n    allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection\n    allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection\n    directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory\n    file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File\n    imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput, resolutions: ImageSharpResolutionsFilterInput, sizes: ImageSharpSizesFilterInput): ImageSharp\n    markdownRemark(children: NodeFilterListInput, excerpt: StringQueryOperatorInput, fields: MarkdownRemarkFieldsFilterInput, fileAbsolutePath: StringQueryOperatorInput, frontmatter: MarkdownRemarkFrontmatterFilterInput, headings: MarkdownHeadingFilterListInput, html: StringQueryOperatorInput, htmlAst: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, rawMarkdownBody: StringQueryOperatorInput, tableOfContents: StringQueryOperatorInput, timeToRead: IntQueryOperatorInput, wordCount: wordCountFilterInput): MarkdownRemark\n    site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput): Site\n    sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, componentPath: StringQueryOperatorInput, context: SitePageContextFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, jsonName: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput): SitePage\n    sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin\n}\n\ntype Site implements Node {\n    buildTime(\n        #Returns the difference between this date and the current time. Defaults to \\\"miliseconds\\\" but you can also pass in as the measurement \\\"years\\\", \\\"months\\\", \\\"weeks\\\", \\\"days\\\", \\\"hours\\\", \\\"minutes\\\", and \\\"seconds\\\".\n        difference: String,\n        #Format the date using Moment.js' date tokens, e.g. `date(formatString: \\\"YYYY MMMM DD\\\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.\n        formatString: String,\n        #Returns a string generated with Moment.js' `fromNow` function\n        fromNow: Boolean,\n        #Configures the locale Moment.js will use to format the date.\n        locale: String\n    ): Date\n    children: [Node!]!\n    host: String\n    id: ID!\n    internal: Internal!\n    parent: Node\n    pathPrefix: String\n    polyfill: Boolean\n    port: Int\n    siteMetadata: SiteSiteMetadata\n}\n\ntype SiteConnection {\n    distinct(field: SiteFieldsEnum!): [String!]!\n    edges: [SiteEdge!]!\n    group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!\n    nodes: [Site!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n}\n\ntype SiteEdge {\n    next: Site\n    node: Site!\n    previous: Site\n}\n\ntype SiteGroupConnection {\n    edges: [SiteEdge!]!\n    field: String!\n    fieldValue: String\n    nodes: [Site!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n}\n\ntype SitePage implements Node {\n    children: [Node!]!\n    component: String\n    componentChunkName: String\n    componentPath: String\n    context: SitePageContext\n    id: ID!\n    internal: Internal!\n    internalComponentName: String\n    isCreatedByStatefulCreatePages: Boolean\n    jsonName: String\n    parent: Node\n    path: String\n    pluginCreator: SitePlugin\n    pluginCreatorId: String\n}\n\ntype SitePageConnection {\n    distinct(field: SitePageFieldsEnum!): [String!]!\n    edges: [SitePageEdge!]!\n    group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!\n    nodes: [SitePage!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n}\n\ntype SitePageContext {\n    id: String\n}\n\ntype SitePageEdge {\n    next: SitePage\n    node: SitePage!\n    previous: SitePage\n}\n\ntype SitePageGroupConnection {\n    edges: [SitePageEdge!]!\n    field: String!\n    fieldValue: String\n    nodes: [SitePage!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n}\n\ntype SitePlugin implements Node {\n    browserAPIs: [String]\n    children: [Node!]!\n    id: ID!\n    internal: Internal!\n    name: String\n    nodeAPIs: [String]\n    packageJson: SitePluginPackageJson\n    parent: Node\n    pluginFilepath: String\n    pluginOptions: SitePluginPluginOptions\n    resolve: String\n    ssrAPIs: [String]\n    version: String\n}\n\ntype SitePluginConnection {\n    distinct(field: SitePluginFieldsEnum!): [String!]!\n    edges: [SitePluginEdge!]!\n    group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!\n    nodes: [SitePlugin!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n}\n\ntype SitePluginEdge {\n    next: SitePlugin\n    node: SitePlugin!\n    previous: SitePlugin\n}\n\ntype SitePluginGroupConnection {\n    edges: [SitePluginEdge!]!\n    field: String!\n    fieldValue: String\n    nodes: [SitePlugin!]!\n    pageInfo: PageInfo!\n    totalCount: Int!\n}\n\ntype SitePluginPackageJson {\n    dependencies: [SitePluginPackageJsonDependencies]\n    description: String\n    devDependencies: [SitePluginPackageJsonDevDependencies]\n    keywords: [String]\n    license: String\n    main: String\n    name: String\n    peerDependencies: [SitePluginPackageJsonPeerDependencies]\n    version: String\n}\n\ntype SitePluginPackageJsonDependencies {\n    name: String\n    version: String\n}\n\ntype SitePluginPackageJsonDevDependencies {\n    name: String\n    version: String\n}\n\ntype SitePluginPackageJsonPeerDependencies {\n    name: String\n    version: String\n}\n\ntype SitePluginPluginOptions {\n    destinationDir: String\n    develop: Boolean\n    maxWidth: Int\n    modulePath: String\n    name: String\n    path: String\n    pathCheck: Boolean\n    plugins: [SitePluginPluginOptionsPlugins]\n    purgeOnly: [String]\n}\n\ntype SitePluginPluginOptionsPlugins {\n    browserAPIs: [String]\n    id: String\n    name: String\n    pluginFilepath: String\n    pluginOptions: SitePluginPluginOptionsPluginsPluginOptions\n    resolve: String\n    version: String\n}\n\ntype SitePluginPluginOptionsPluginsPluginOptions {\n    destinationDir: String\n    maxWidth: Int\n    name: String\n}\n\ntype SiteSiteMetadata {\n    description: String\n    title: String\n}\n\ntype wordCount {\n    paragraphs: Int\n    sentences: Int\n    words: Int\n}\n\nenum DirectoryFieldsEnum {\n    absolutePath\n    accessTime\n    atime\n    atimeMs\n    base\n    birthTime\n    birthtime\n    birthtimeMs\n    blksize\n    blocks\n    changeTime\n    children\n    children___children\n    children___children___children\n    children___children___children___children\n    children___children___children___id\n    children___children___id\n    children___children___internal___content\n    children___children___internal___contentDigest\n    children___children___internal___description\n    children___children___internal___fieldOwners\n    children___children___internal___ignoreType\n    children___children___internal___mediaType\n    children___children___internal___owner\n    children___children___internal___type\n    children___children___parent___children\n    children___children___parent___id\n    children___id\n    children___internal___content\n    children___internal___contentDigest\n    children___internal___description\n    children___internal___fieldOwners\n    children___internal___ignoreType\n    children___internal___mediaType\n    children___internal___owner\n    children___internal___type\n    children___parent___children\n    children___parent___children___children\n    children___parent___children___id\n    children___parent___id\n    children___parent___internal___content\n    children___parent___internal___contentDigest\n    children___parent___internal___description\n    children___parent___internal___fieldOwners\n    children___parent___internal___ignoreType\n    children___parent___internal___mediaType\n    children___parent___internal___owner\n    children___parent___internal___type\n    children___parent___parent___children\n    children___parent___parent___id\n    ctime\n    ctimeMs\n    dev\n    dir\n    ext\n    extension\n    gid\n    id\n    ino\n    internal___content\n    internal___contentDigest\n    internal___description\n    internal___fieldOwners\n    internal___ignoreType\n    internal___mediaType\n    internal___owner\n    internal___type\n    mode\n    modifiedTime\n    mtime\n    mtimeMs\n    name\n    nlink\n    parent___children\n    parent___children___children\n    parent___children___children___children\n    parent___children___children___id\n    parent___children___id\n    parent___children___internal___content\n    parent___children___internal___contentDigest\n    parent___children___internal___description\n    parent___children___internal___fieldOwners\n    parent___children___internal___ignoreType\n    parent___children___internal___mediaType\n    parent___children___internal___owner\n    parent___children___internal___type\n    parent___children___parent___children\n    parent___children___parent___id\n    parent___id\n    parent___internal___content\n    parent___internal___contentDigest\n    parent___internal___description\n    parent___internal___fieldOwners\n    parent___internal___ignoreType\n    parent___internal___mediaType\n    parent___internal___owner\n    parent___internal___type\n    parent___parent___children\n    parent___parent___children___children\n    parent___parent___children___id\n    parent___parent___id\n    parent___parent___internal___content\n    parent___parent___internal___contentDigest\n    parent___parent___internal___description\n    parent___parent___internal___fieldOwners\n    parent___parent___internal___ignoreType\n    parent___parent___internal___mediaType\n    parent___parent___internal___owner\n    parent___parent___internal___type\n    parent___parent___parent___children\n    parent___parent___parent___id\n    prettySize\n    rdev\n    relativeDirectory\n    relativePath\n    root\n    size\n    sourceInstanceName\n    uid\n}\n\nenum ExcerptFormats {\n    HTML\n    PLAIN\n}\n\nenum FileFieldsEnum {\n    absolutePath\n    accessTime\n    atime\n    atimeMs\n    base\n    birthTime\n    birthtime\n    birthtimeMs\n    blksize\n    blocks\n    changeTime\n    children\n    children___children\n    children___children___children\n    children___children___children___children\n    children___children___children___id\n    children___children___id\n    children___children___internal___content\n    children___children___internal___contentDigest\n    children___children___internal___description\n    children___children___internal___fieldOwners\n    children___children___internal___ignoreType\n    children___children___internal___mediaType\n    children___children___internal___owner\n    children___children___internal___type\n    children___children___parent___children\n    children___children___parent___id\n    children___id\n    children___internal___content\n    children___internal___contentDigest\n    children___internal___description\n    children___internal___fieldOwners\n    children___internal___ignoreType\n    children___internal___mediaType\n    children___internal___owner\n    children___internal___type\n    children___parent___children\n    children___parent___children___children\n    children___parent___children___id\n    children___parent___id\n    children___parent___internal___content\n    children___parent___internal___contentDigest\n    children___parent___internal___description\n    children___parent___internal___fieldOwners\n    children___parent___internal___ignoreType\n    children___parent___internal___mediaType\n    children___parent___internal___owner\n    children___parent___internal___type\n    children___parent___parent___children\n    children___parent___parent___id\n    ctime\n    ctimeMs\n    dev\n    dir\n    ext\n    extension\n    gid\n    id\n    ino\n    internal___content\n    internal___contentDigest\n    internal___description\n    internal___fieldOwners\n    internal___ignoreType\n    internal___mediaType\n    internal___owner\n    internal___type\n    mode\n    modifiedTime\n    mtime\n    mtimeMs\n    name\n    nlink\n    parent___children\n    parent___children___children\n    parent___children___children___children\n    parent___children___children___id\n    parent___children___id\n    parent___children___internal___content\n    parent___children___internal___contentDigest\n    parent___children___internal___description\n    parent___children___internal___fieldOwners\n    parent___children___internal___ignoreType\n    parent___children___internal___mediaType\n    parent___children___internal___owner\n    parent___children___internal___type\n    parent___children___parent___children\n    parent___children___parent___id\n    parent___id\n    parent___internal___content\n    parent___internal___contentDigest\n    parent___internal___description\n    parent___internal___fieldOwners\n    parent___internal___ignoreType\n    parent___internal___mediaType\n    parent___internal___owner\n    parent___internal___type\n    parent___parent___children\n    parent___parent___children___children\n    parent___parent___children___id\n    parent___parent___id\n    parent___parent___internal___content\n    parent___parent___internal___contentDigest\n    parent___parent___internal___description\n    parent___parent___internal___fieldOwners\n    parent___parent___internal___ignoreType\n    parent___parent___internal___mediaType\n    parent___parent___internal___owner\n    parent___parent___internal___type\n    parent___parent___parent___children\n    parent___parent___parent___id\n    prettySize\n    publicURL\n    rdev\n    relativeDirectory\n    relativePath\n    root\n    size\n    sourceInstanceName\n    uid\n}\n\nenum HeadingLevels {\n    h1\n    h2\n    h3\n    h4\n    h5\n    h6\n}\n\nenum ImageCropFocus {\n    ATTENTION\n    CENTER\n    EAST\n    ENTROPY\n    NORTH\n    NORTHEAST\n    NORTHWEST\n    SOUTH\n    SOUTHEAST\n    SOUTHWEST\n    WEST\n}\n\nenum ImageFormat {\n    JPG\n    NO_CHANGE\n    PNG\n    WEBP\n}\n\nenum ImageSharpFieldsEnum {\n    children\n    children___children\n    children___children___children\n    children___children___children___children\n    children___children___children___id\n    children___children___id\n    children___children___internal___content\n    children___children___internal___contentDigest\n    children___children___internal___description\n    children___children___internal___fieldOwners\n    children___children___internal___ignoreType\n    children___children___internal___mediaType\n    children___children___internal___owner\n    children___children___internal___type\n    children___children___parent___children\n    children___children___parent___id\n    children___id\n    children___internal___content\n    children___internal___contentDigest\n    children___internal___description\n    children___internal___fieldOwners\n    children___internal___ignoreType\n    children___internal___mediaType\n    children___internal___owner\n    children___internal___type\n    children___parent___children\n    children___parent___children___children\n    children___parent___children___id\n    children___parent___id\n    children___parent___internal___content\n    children___parent___internal___contentDigest\n    children___parent___internal___description\n    children___parent___internal___fieldOwners\n    children___parent___internal___ignoreType\n    children___parent___internal___mediaType\n    children___parent___internal___owner\n    children___parent___internal___type\n    children___parent___parent___children\n    children___parent___parent___id\n    fixed___aspectRatio\n    fixed___base64\n    fixed___height\n    fixed___originalName\n    fixed___src\n    fixed___srcSet\n    fixed___srcSetWebp\n    fixed___srcWebp\n    fixed___tracedSVG\n    fixed___width\n    fluid___aspectRatio\n    fluid___base64\n    fluid___originalImg\n    fluid___originalName\n    fluid___presentationHeight\n    fluid___presentationWidth\n    fluid___sizes\n    fluid___src\n    fluid___srcSet\n    fluid___srcSetWebp\n    fluid___srcWebp\n    fluid___tracedSVG\n    id\n    internal___content\n    internal___contentDigest\n    internal___description\n    internal___fieldOwners\n    internal___ignoreType\n    internal___mediaType\n    internal___owner\n    internal___type\n    original___height\n    original___src\n    original___width\n    parent___children\n    parent___children___children\n    parent___children___children___children\n    parent___children___children___id\n    parent___children___id\n    parent___children___internal___content\n    parent___children___internal___contentDigest\n    parent___children___internal___description\n    parent___children___internal___fieldOwners\n    parent___children___internal___ignoreType\n    parent___children___internal___mediaType\n    parent___children___internal___owner\n    parent___children___internal___type\n    parent___children___parent___children\n    parent___children___parent___id\n    parent___id\n    parent___internal___content\n    parent___internal___contentDigest\n    parent___internal___description\n    parent___internal___fieldOwners\n    parent___internal___ignoreType\n    parent___internal___mediaType\n    parent___internal___owner\n    parent___internal___type\n    parent___parent___children\n    parent___parent___children___children\n    parent___parent___children___id\n    parent___parent___id\n    parent___parent___internal___content\n    parent___parent___internal___contentDigest\n    parent___parent___internal___description\n    parent___parent___internal___fieldOwners\n    parent___parent___internal___ignoreType\n    parent___parent___internal___mediaType\n    parent___parent___internal___owner\n    parent___parent___internal___type\n    parent___parent___parent___children\n    parent___parent___parent___id\n    resize___aspectRatio\n    resize___height\n    resize___originalName\n    resize___src\n    resize___tracedSVG\n    resize___width\n    resolutions___aspectRatio\n    resolutions___base64\n    resolutions___height\n    resolutions___originalName\n    resolutions___src\n    resolutions___srcSet\n    resolutions___srcSetWebp\n    resolutions___srcWebp\n    resolutions___tracedSVG\n    resolutions___width\n    sizes___aspectRatio\n    sizes___base64\n    sizes___originalImg\n    sizes___originalName\n    sizes___presentationHeight\n    sizes___presentationWidth\n    sizes___sizes\n    sizes___src\n    sizes___srcSet\n    sizes___srcSetWebp\n    sizes___srcWebp\n    sizes___tracedSVG\n}\n\nenum MarkdownRemarkFieldsEnum {\n    children\n    children___children\n    children___children___children\n    children___children___children___children\n    children___children___children___id\n    children___children___id\n    children___children___internal___content\n    children___children___internal___contentDigest\n    children___children___internal___description\n    children___children___internal___fieldOwners\n    children___children___internal___ignoreType\n    children___children___internal___mediaType\n    children___children___internal___owner\n    children___children___internal___type\n    children___children___parent___children\n    children___children___parent___id\n    children___id\n    children___internal___content\n    children___internal___contentDigest\n    children___internal___description\n    children___internal___fieldOwners\n    children___internal___ignoreType\n    children___internal___mediaType\n    children___internal___owner\n    children___internal___type\n    children___parent___children\n    children___parent___children___children\n    children___parent___children___id\n    children___parent___id\n    children___parent___internal___content\n    children___parent___internal___contentDigest\n    children___parent___internal___description\n    children___parent___internal___fieldOwners\n    children___parent___internal___ignoreType\n    children___parent___internal___mediaType\n    children___parent___internal___owner\n    children___parent___internal___type\n    children___parent___parent___children\n    children___parent___parent___id\n    excerpt\n    fields___slug\n    fileAbsolutePath\n    frontmatter___aboutSectionExtended\n    frontmatter___agendaSection___active\n    frontmatter___agendaSection___agendaItems\n    frontmatter___agendaSection___agendaItems___agendaDescription\n    frontmatter___agendaSection___agendaItems___timeRange\n    frontmatter___agendaSection___agendaItems___title\n    frontmatter___boardOfDirectorsSection\n    frontmatter___boardOfDirectorsSection___name\n    frontmatter___boardOfDirectorsSection___position\n    frontmatter___date\n    frontmatter___googleDriveLink\n    frontmatter___heroSection___description\n    frontmatter___heroSection___heroImage___absolutePath\n    frontmatter___heroSection___heroImage___accessTime\n    frontmatter___heroSection___heroImage___atime\n    frontmatter___heroSection___heroImage___atimeMs\n    frontmatter___heroSection___heroImage___base\n    frontmatter___heroSection___heroImage___birthTime\n    frontmatter___heroSection___heroImage___birthtime\n    frontmatter___heroSection___heroImage___birthtimeMs\n    frontmatter___heroSection___heroImage___blksize\n    frontmatter___heroSection___heroImage___blocks\n    frontmatter___heroSection___heroImage___changeTime\n    frontmatter___heroSection___heroImage___children\n    frontmatter___heroSection___heroImage___ctime\n    frontmatter___heroSection___heroImage___ctimeMs\n    frontmatter___heroSection___heroImage___dev\n    frontmatter___heroSection___heroImage___dir\n    frontmatter___heroSection___heroImage___ext\n    frontmatter___heroSection___heroImage___extension\n    frontmatter___heroSection___heroImage___gid\n    frontmatter___heroSection___heroImage___id\n    frontmatter___heroSection___heroImage___ino\n    frontmatter___heroSection___heroImage___mode\n    frontmatter___heroSection___heroImage___modifiedTime\n    frontmatter___heroSection___heroImage___mtime\n    frontmatter___heroSection___heroImage___mtimeMs\n    frontmatter___heroSection___heroImage___name\n    frontmatter___heroSection___heroImage___nlink\n    frontmatter___heroSection___heroImage___prettySize\n    frontmatter___heroSection___heroImage___publicURL\n    frontmatter___heroSection___heroImage___rdev\n    frontmatter___heroSection___heroImage___relativeDirectory\n    frontmatter___heroSection___heroImage___relativePath\n    frontmatter___heroSection___heroImage___root\n    frontmatter___heroSection___heroImage___size\n    frontmatter___heroSection___heroImage___sourceInstanceName\n    frontmatter___heroSection___heroImage___uid\n    frontmatter___heroSection___title\n    frontmatter___image___absolutePath\n    frontmatter___image___accessTime\n    frontmatter___image___atime\n    frontmatter___image___atimeMs\n    frontmatter___image___base\n    frontmatter___image___birthTime\n    frontmatter___image___birthtime\n    frontmatter___image___birthtimeMs\n    frontmatter___image___blksize\n    frontmatter___image___blocks\n    frontmatter___image___changeTime\n    frontmatter___image___children\n    frontmatter___image___children___children\n    frontmatter___image___children___id\n    frontmatter___image___ctime\n    frontmatter___image___ctimeMs\n    frontmatter___image___dev\n    frontmatter___image___dir\n    frontmatter___image___ext\n    frontmatter___image___extension\n    frontmatter___image___gid\n    frontmatter___image___id\n    frontmatter___image___ino\n    frontmatter___image___internal___content\n    frontmatter___image___internal___contentDigest\n    frontmatter___image___internal___description\n    frontmatter___image___internal___fieldOwners\n    frontmatter___image___internal___ignoreType\n    frontmatter___image___internal___mediaType\n    frontmatter___image___internal___owner\n    frontmatter___image___internal___type\n    frontmatter___image___mode\n    frontmatter___image___modifiedTime\n    frontmatter___image___mtime\n    frontmatter___image___mtimeMs\n    frontmatter___image___name\n    frontmatter___image___nlink\n    frontmatter___image___parent___children\n    frontmatter___image___parent___id\n    frontmatter___image___prettySize\n    frontmatter___image___publicURL\n    frontmatter___image___rdev\n    frontmatter___image___relativeDirectory\n    frontmatter___image___relativePath\n    frontmatter___image___root\n    frontmatter___image___size\n    frontmatter___image___sourceInstanceName\n    frontmatter___image___uid\n    frontmatter___locationSection___coordinates___latitude\n    frontmatter___locationSection___coordinates___longitude\n    frontmatter___locationSection___date\n    frontmatter___locationSection___eventTimeRange\n    frontmatter___locationSection___parkingBlurb\n    frontmatter___locationSection___rsvpLink\n    frontmatter___locationSection___venueAddress\n    frontmatter___locationSection___venueName\n    frontmatter___nextEventSection___date\n    frontmatter___nextEventSection___locationAddress\n    frontmatter___nextEventSection___locationName\n    frontmatter___nextEventSection___rsvpLink\n    frontmatter___nextEventSection___title\n    frontmatter___panelistSection___active\n    frontmatter___panelistSection___panelistItems\n    frontmatter___panelistSection___panelistItems___biography\n    frontmatter___panelistSection___panelistItems___name\n    frontmatter___panelistSection___panelistItems___position\n    frontmatter___sponsorsSection\n    frontmatter___sponsorsSection___logo___absolutePath\n    frontmatter___sponsorsSection___logo___accessTime\n    frontmatter___sponsorsSection___logo___atime\n    frontmatter___sponsorsSection___logo___atimeMs\n    frontmatter___sponsorsSection___logo___base\n    frontmatter___sponsorsSection___logo___birthTime\n    frontmatter___sponsorsSection___logo___birthtime\n    frontmatter___sponsorsSection___logo___birthtimeMs\n    frontmatter___sponsorsSection___logo___blksize\n    frontmatter___sponsorsSection___logo___blocks\n    frontmatter___sponsorsSection___logo___changeTime\n    frontmatter___sponsorsSection___logo___children\n    frontmatter___sponsorsSection___logo___ctime\n    frontmatter___sponsorsSection___logo___ctimeMs\n    frontmatter___sponsorsSection___logo___dev\n    frontmatter___sponsorsSection___logo___dir\n    frontmatter___sponsorsSection___logo___ext\n    frontmatter___sponsorsSection___logo___extension\n    frontmatter___sponsorsSection___logo___gid\n    frontmatter___sponsorsSection___logo___id\n    frontmatter___sponsorsSection___logo___ino\n    frontmatter___sponsorsSection___logo___mode\n    frontmatter___sponsorsSection___logo___modifiedTime\n    frontmatter___sponsorsSection___logo___mtime\n    frontmatter___sponsorsSection___logo___mtimeMs\n    frontmatter___sponsorsSection___logo___name\n    frontmatter___sponsorsSection___logo___nlink\n    frontmatter___sponsorsSection___logo___prettySize\n    frontmatter___sponsorsSection___logo___publicURL\n    frontmatter___sponsorsSection___logo___rdev\n    frontmatter___sponsorsSection___logo___relativeDirectory\n    frontmatter___sponsorsSection___logo___relativePath\n    frontmatter___sponsorsSection___logo___root\n    frontmatter___sponsorsSection___logo___size\n    frontmatter___sponsorsSection___logo___sourceInstanceName\n    frontmatter___sponsorsSection___logo___uid\n    frontmatter___sponsorsSection___sponsor\n    frontmatter___sponsorsSection___website\n    frontmatter___templateKey\n    frontmatter___title\n    headings\n    headings___depth\n    headings___value\n    html\n    htmlAst\n    id\n    internal___content\n    internal___contentDigest\n    internal___description\n    internal___fieldOwners\n    internal___ignoreType\n    internal___mediaType\n    internal___owner\n    internal___type\n    parent___children\n    parent___children___children\n    parent___children___children___children\n    parent___children___children___id\n    parent___children___id\n    parent___children___internal___content\n    parent___children___internal___contentDigest\n    parent___children___internal___description\n    parent___children___internal___fieldOwners\n    parent___children___internal___ignoreType\n    parent___children___internal___mediaType\n    parent___children___internal___owner\n    parent___children___internal___type\n    parent___children___parent___children\n    parent___children___parent___id\n    parent___id\n    parent___internal___content\n    parent___internal___contentDigest\n    parent___internal___description\n    parent___internal___fieldOwners\n    parent___internal___ignoreType\n    parent___internal___mediaType\n    parent___internal___owner\n    parent___internal___type\n    parent___parent___children\n    parent___parent___children___children\n    parent___parent___children___id\n    parent___parent___id\n    parent___parent___internal___content\n    parent___parent___internal___contentDigest\n    parent___parent___internal___description\n    parent___parent___internal___fieldOwners\n    parent___parent___internal___ignoreType\n    parent___parent___internal___mediaType\n    parent___parent___internal___owner\n    parent___parent___internal___type\n    parent___parent___parent___children\n    parent___parent___parent___id\n    rawMarkdownBody\n    tableOfContents\n    timeToRead\n    wordCount___paragraphs\n    wordCount___sentences\n    wordCount___words\n}\n\nenum PotraceTurnPolicy {\n    TURNPOLICY_BLACK\n    TURNPOLICY_LEFT\n    TURNPOLICY_MAJORITY\n    TURNPOLICY_MINORITY\n    TURNPOLICY_RIGHT\n    TURNPOLICY_WHITE\n}\n\nenum SiteFieldsEnum {\n    buildTime\n    children\n    children___children\n    children___children___children\n    children___children___children___children\n    children___children___children___id\n    children___children___id\n    children___children___internal___content\n    children___children___internal___contentDigest\n    children___children___internal___description\n    children___children___internal___fieldOwners\n    children___children___internal___ignoreType\n    children___children___internal___mediaType\n    children___children___internal___owner\n    children___children___internal___type\n    children___children___parent___children\n    children___children___parent___id\n    children___id\n    children___internal___content\n    children___internal___contentDigest\n    children___internal___description\n    children___internal___fieldOwners\n    children___internal___ignoreType\n    children___internal___mediaType\n    children___internal___owner\n    children___internal___type\n    children___parent___children\n    children___parent___children___children\n    children___parent___children___id\n    children___parent___id\n    children___parent___internal___content\n    children___parent___internal___contentDigest\n    children___parent___internal___description\n    children___parent___internal___fieldOwners\n    children___parent___internal___ignoreType\n    children___parent___internal___mediaType\n    children___parent___internal___owner\n    children___parent___internal___type\n    children___parent___parent___children\n    children___parent___parent___id\n    host\n    id\n    internal___content\n    internal___contentDigest\n    internal___description\n    internal___fieldOwners\n    internal___ignoreType\n    internal___mediaType\n    internal___owner\n    internal___type\n    parent___children\n    parent___children___children\n    parent___children___children___children\n    parent___children___children___id\n    parent___children___id\n    parent___children___internal___content\n    parent___children___internal___contentDigest\n    parent___children___internal___description\n    parent___children___internal___fieldOwners\n    parent___children___internal___ignoreType\n    parent___children___internal___mediaType\n    parent___children___internal___owner\n    parent___children___internal___type\n    parent___children___parent___children\n    parent___children___parent___id\n    parent___id\n    parent___internal___content\n    parent___internal___contentDigest\n    parent___internal___description\n    parent___internal___fieldOwners\n    parent___internal___ignoreType\n    parent___internal___mediaType\n    parent___internal___owner\n    parent___internal___type\n    parent___parent___children\n    parent___parent___children___children\n    parent___parent___children___id\n    parent___parent___id\n    parent___parent___internal___content\n    parent___parent___internal___contentDigest\n    parent___parent___internal___description\n    parent___parent___internal___fieldOwners\n    parent___parent___internal___ignoreType\n    parent___parent___internal___mediaType\n    parent___parent___internal___owner\n    parent___parent___internal___type\n    parent___parent___parent___children\n    parent___parent___parent___id\n    pathPrefix\n    polyfill\n    port\n    siteMetadata___description\n    siteMetadata___title\n}\n\nenum SitePageFieldsEnum {\n    children\n    children___children\n    children___children___children\n    children___children___children___children\n    children___children___children___id\n    children___children___id\n    children___children___internal___content\n    children___children___internal___contentDigest\n    children___children___internal___description\n    children___children___internal___fieldOwners\n    children___children___internal___ignoreType\n    children___children___internal___mediaType\n    children___children___internal___owner\n    children___children___internal___type\n    children___children___parent___children\n    children___children___parent___id\n    children___id\n    children___internal___content\n    children___internal___contentDigest\n    children___internal___description\n    children___internal___fieldOwners\n    children___internal___ignoreType\n    children___internal___mediaType\n    children___internal___owner\n    children___internal___type\n    children___parent___children\n    children___parent___children___children\n    children___parent___children___id\n    children___parent___id\n    children___parent___internal___content\n    children___parent___internal___contentDigest\n    children___parent___internal___description\n    children___parent___internal___fieldOwners\n    children___parent___internal___ignoreType\n    children___parent___internal___mediaType\n    children___parent___internal___owner\n    children___parent___internal___type\n    children___parent___parent___children\n    children___parent___parent___id\n    component\n    componentChunkName\n    componentPath\n    context___id\n    id\n    internalComponentName\n    internal___content\n    internal___contentDigest\n    internal___description\n    internal___fieldOwners\n    internal___ignoreType\n    internal___mediaType\n    internal___owner\n    internal___type\n    isCreatedByStatefulCreatePages\n    jsonName\n    parent___children\n    parent___children___children\n    parent___children___children___children\n    parent___children___children___id\n    parent___children___id\n    parent___children___internal___content\n    parent___children___internal___contentDigest\n    parent___children___internal___description\n    parent___children___internal___fieldOwners\n    parent___children___internal___ignoreType\n    parent___children___internal___mediaType\n    parent___children___internal___owner\n    parent___children___internal___type\n    parent___children___parent___children\n    parent___children___parent___id\n    parent___id\n    parent___internal___content\n    parent___internal___contentDigest\n    parent___internal___description\n    parent___internal___fieldOwners\n    parent___internal___ignoreType\n    parent___internal___mediaType\n    parent___internal___owner\n    parent___internal___type\n    parent___parent___children\n    parent___parent___children___children\n    parent___parent___children___id\n    parent___parent___id\n    parent___parent___internal___content\n    parent___parent___internal___contentDigest\n    parent___parent___internal___description\n    parent___parent___internal___fieldOwners\n    parent___parent___internal___ignoreType\n    parent___parent___internal___mediaType\n    parent___parent___internal___owner\n    parent___parent___internal___type\n    parent___parent___parent___children\n    parent___parent___parent___id\n    path\n    pluginCreatorId\n    pluginCreator___browserAPIs\n    pluginCreator___children\n    pluginCreator___children___children\n    pluginCreator___children___children___children\n    pluginCreator___children___children___id\n    pluginCreator___children___id\n    pluginCreator___children___internal___content\n    pluginCreator___children___internal___contentDigest\n    pluginCreator___children___internal___description\n    pluginCreator___children___internal___fieldOwners\n    pluginCreator___children___internal___ignoreType\n    pluginCreator___children___internal___mediaType\n    pluginCreator___children___internal___owner\n    pluginCreator___children___internal___type\n    pluginCreator___children___parent___children\n    pluginCreator___children___parent___id\n    pluginCreator___id\n    pluginCreator___internal___content\n    pluginCreator___internal___contentDigest\n    pluginCreator___internal___description\n    pluginCreator___internal___fieldOwners\n    pluginCreator___internal___ignoreType\n    pluginCreator___internal___mediaType\n    pluginCreator___internal___owner\n    pluginCreator___internal___type\n    pluginCreator___name\n    pluginCreator___nodeAPIs\n    pluginCreator___packageJson___dependencies\n    pluginCreator___packageJson___dependencies___name\n    pluginCreator___packageJson___dependencies___version\n    pluginCreator___packageJson___description\n    pluginCreator___packageJson___devDependencies\n    pluginCreator___packageJson___devDependencies___name\n    pluginCreator___packageJson___devDependencies___version\n    pluginCreator___packageJson___keywords\n    pluginCreator___packageJson___license\n    pluginCreator___packageJson___main\n    pluginCreator___packageJson___name\n    pluginCreator___packageJson___peerDependencies\n    pluginCreator___packageJson___peerDependencies___name\n    pluginCreator___packageJson___peerDependencies___version\n    pluginCreator___packageJson___version\n    pluginCreator___parent___children\n    pluginCreator___parent___children___children\n    pluginCreator___parent___children___id\n    pluginCreator___parent___id\n    pluginCreator___parent___internal___content\n    pluginCreator___parent___internal___contentDigest\n    pluginCreator___parent___internal___description\n    pluginCreator___parent___internal___fieldOwners\n    pluginCreator___parent___internal___ignoreType\n    pluginCreator___parent___internal___mediaType\n    pluginCreator___parent___internal___owner\n    pluginCreator___parent___internal___type\n    pluginCreator___parent___parent___children\n    pluginCreator___parent___parent___id\n    pluginCreator___pluginFilepath\n    pluginCreator___pluginOptions___destinationDir\n    pluginCreator___pluginOptions___develop\n    pluginCreator___pluginOptions___maxWidth\n    pluginCreator___pluginOptions___modulePath\n    pluginCreator___pluginOptions___name\n    pluginCreator___pluginOptions___path\n    pluginCreator___pluginOptions___pathCheck\n    pluginCreator___pluginOptions___plugins\n    pluginCreator___pluginOptions___plugins___browserAPIs\n    pluginCreator___pluginOptions___plugins___id\n    pluginCreator___pluginOptions___plugins___name\n    pluginCreator___pluginOptions___plugins___pluginFilepath\n    pluginCreator___pluginOptions___plugins___resolve\n    pluginCreator___pluginOptions___plugins___version\n    pluginCreator___pluginOptions___purgeOnly\n    pluginCreator___resolve\n    pluginCreator___ssrAPIs\n    pluginCreator___version\n}\n\nenum SitePluginFieldsEnum {\n    browserAPIs\n    children\n    children___children\n    children___children___children\n    children___children___children___children\n    children___children___children___id\n    children___children___id\n    children___children___internal___content\n    children___children___internal___contentDigest\n    children___children___internal___description\n    children___children___internal___fieldOwners\n    children___children___internal___ignoreType\n    children___children___internal___mediaType\n    children___children___internal___owner\n    children___children___internal___type\n    children___children___parent___children\n    children___children___parent___id\n    children___id\n    children___internal___content\n    children___internal___contentDigest\n    children___internal___description\n    children___internal___fieldOwners\n    children___internal___ignoreType\n    children___internal___mediaType\n    children___internal___owner\n    children___internal___type\n    children___parent___children\n    children___parent___children___children\n    children___parent___children___id\n    children___parent___id\n    children___parent___internal___content\n    children___parent___internal___contentDigest\n    children___parent___internal___description\n    children___parent___internal___fieldOwners\n    children___parent___internal___ignoreType\n    children___parent___internal___mediaType\n    children___parent___internal___owner\n    children___parent___internal___type\n    children___parent___parent___children\n    children___parent___parent___id\n    id\n    internal___content\n    internal___contentDigest\n    internal___description\n    internal___fieldOwners\n    internal___ignoreType\n    internal___mediaType\n    internal___owner\n    internal___type\n    name\n    nodeAPIs\n    packageJson___dependencies\n    packageJson___dependencies___name\n    packageJson___dependencies___version\n    packageJson___description\n    packageJson___devDependencies\n    packageJson___devDependencies___name\n    packageJson___devDependencies___version\n    packageJson___keywords\n    packageJson___license\n    packageJson___main\n    packageJson___name\n    packageJson___peerDependencies\n    packageJson___peerDependencies___name\n    packageJson___peerDependencies___version\n    packageJson___version\n    parent___children\n    parent___children___children\n    parent___children___children___children\n    parent___children___children___id\n    parent___children___id\n    parent___children___internal___content\n    parent___children___internal___contentDigest\n    parent___children___internal___description\n    parent___children___internal___fieldOwners\n    parent___children___internal___ignoreType\n    parent___children___internal___mediaType\n    parent___children___internal___owner\n    parent___children___internal___type\n    parent___children___parent___children\n    parent___children___parent___id\n    parent___id\n    parent___internal___content\n    parent___internal___contentDigest\n    parent___internal___description\n    parent___internal___fieldOwners\n    parent___internal___ignoreType\n    parent___internal___mediaType\n    parent___internal___owner\n    parent___internal___type\n    parent___parent___children\n    parent___parent___children___children\n    parent___parent___children___id\n    parent___parent___id\n    parent___parent___internal___content\n    parent___parent___internal___contentDigest\n    parent___parent___internal___description\n    parent___parent___internal___fieldOwners\n    parent___parent___internal___ignoreType\n    parent___parent___internal___mediaType\n    parent___parent___internal___owner\n    parent___parent___internal___type\n    parent___parent___parent___children\n    parent___parent___parent___id\n    pluginFilepath\n    pluginOptions___destinationDir\n    pluginOptions___develop\n    pluginOptions___maxWidth\n    pluginOptions___modulePath\n    pluginOptions___name\n    pluginOptions___path\n    pluginOptions___pathCheck\n    pluginOptions___plugins\n    pluginOptions___plugins___browserAPIs\n    pluginOptions___plugins___id\n    pluginOptions___plugins___name\n    pluginOptions___plugins___pluginFilepath\n    pluginOptions___plugins___pluginOptions___destinationDir\n    pluginOptions___plugins___pluginOptions___maxWidth\n    pluginOptions___plugins___pluginOptions___name\n    pluginOptions___plugins___resolve\n    pluginOptions___plugins___version\n    pluginOptions___purgeOnly\n    resolve\n    ssrAPIs\n    version\n}\n\nenum SortOrderEnum {\n    ASC\n    DESC\n}\n\ninput BooleanQueryOperatorInput {\n    eq: Boolean\n    in: [Boolean]\n    ne: Boolean\n    nin: [Boolean]\n}\n\ninput DateQueryOperatorInput {\n    eq: Date\n    gt: Date\n    gte: Date\n    in: [Date]\n    lt: Date\n    lte: Date\n    ne: Date\n    nin: [Date]\n}\n\ninput DirectoryFilterInput {\n    absolutePath: StringQueryOperatorInput\n    accessTime: DateQueryOperatorInput\n    atime: DateQueryOperatorInput\n    atimeMs: FloatQueryOperatorInput\n    base: StringQueryOperatorInput\n    birthTime: DateQueryOperatorInput\n    birthtime: DateQueryOperatorInput\n    birthtimeMs: FloatQueryOperatorInput\n    blksize: IntQueryOperatorInput\n    blocks: IntQueryOperatorInput\n    changeTime: DateQueryOperatorInput\n    children: NodeFilterListInput\n    ctime: DateQueryOperatorInput\n    ctimeMs: FloatQueryOperatorInput\n    dev: IntQueryOperatorInput\n    dir: StringQueryOperatorInput\n    ext: StringQueryOperatorInput\n    extension: StringQueryOperatorInput\n    gid: IntQueryOperatorInput\n    id: StringQueryOperatorInput\n    ino: FloatQueryOperatorInput\n    internal: InternalFilterInput\n    mode: IntQueryOperatorInput\n    modifiedTime: DateQueryOperatorInput\n    mtime: DateQueryOperatorInput\n    mtimeMs: FloatQueryOperatorInput\n    name: StringQueryOperatorInput\n    nlink: IntQueryOperatorInput\n    parent: NodeFilterInput\n    prettySize: StringQueryOperatorInput\n    rdev: IntQueryOperatorInput\n    relativeDirectory: StringQueryOperatorInput\n    relativePath: StringQueryOperatorInput\n    root: StringQueryOperatorInput\n    size: IntQueryOperatorInput\n    sourceInstanceName: StringQueryOperatorInput\n    uid: IntQueryOperatorInput\n}\n\ninput DirectorySortInput {\n    fields: [DirectoryFieldsEnum]\n    order: [SortOrderEnum] = [ASC]\n}\n\ninput DuotoneGradient {\n    highlight: String\n    opacity: Int\n    shadow: String\n}\n\ninput FileFilterInput {\n    absolutePath: StringQueryOperatorInput\n    accessTime: DateQueryOperatorInput\n    atime: DateQueryOperatorInput\n    atimeMs: FloatQueryOperatorInput\n    base: StringQueryOperatorInput\n    birthTime: DateQueryOperatorInput\n    birthtime: DateQueryOperatorInput\n    birthtimeMs: FloatQueryOperatorInput\n    blksize: IntQueryOperatorInput\n    blocks: IntQueryOperatorInput\n    changeTime: DateQueryOperatorInput\n    children: NodeFilterListInput\n    ctime: DateQueryOperatorInput\n    ctimeMs: FloatQueryOperatorInput\n    dev: IntQueryOperatorInput\n    dir: StringQueryOperatorInput\n    ext: StringQueryOperatorInput\n    extension: StringQueryOperatorInput\n    gid: IntQueryOperatorInput\n    id: StringQueryOperatorInput\n    ino: FloatQueryOperatorInput\n    internal: InternalFilterInput\n    mode: IntQueryOperatorInput\n    modifiedTime: DateQueryOperatorInput\n    mtime: DateQueryOperatorInput\n    mtimeMs: FloatQueryOperatorInput\n    name: StringQueryOperatorInput\n    nlink: IntQueryOperatorInput\n    parent: NodeFilterInput\n    prettySize: StringQueryOperatorInput\n    publicURL: StringQueryOperatorInput\n    rdev: IntQueryOperatorInput\n    relativeDirectory: StringQueryOperatorInput\n    relativePath: StringQueryOperatorInput\n    root: StringQueryOperatorInput\n    size: IntQueryOperatorInput\n    sourceInstanceName: StringQueryOperatorInput\n    uid: IntQueryOperatorInput\n}\n\ninput FileSortInput {\n    fields: [FileFieldsEnum]\n    order: [SortOrderEnum] = [ASC]\n}\n\ninput FloatQueryOperatorInput {\n    eq: Float\n    gt: Float\n    gte: Float\n    in: [Float]\n    lt: Float\n    lte: Float\n    ne: Float\n    nin: [Float]\n}\n\ninput ImageSharpFilterInput {\n    children: NodeFilterListInput\n    fixed: ImageSharpFixedFilterInput\n    fluid: ImageSharpFluidFilterInput\n    id: StringQueryOperatorInput\n    internal: InternalFilterInput\n    original: ImageSharpOriginalFilterInput\n    parent: NodeFilterInput\n    resize: ImageSharpResizeFilterInput\n    resolutions: ImageSharpResolutionsFilterInput\n    sizes: ImageSharpSizesFilterInput\n}\n\ninput ImageSharpFixedFilterInput {\n    aspectRatio: FloatQueryOperatorInput\n    base64: StringQueryOperatorInput\n    height: FloatQueryOperatorInput\n    originalName: StringQueryOperatorInput\n    src: StringQueryOperatorInput\n    srcSet: StringQueryOperatorInput\n    srcSetWebp: StringQueryOperatorInput\n    srcWebp: StringQueryOperatorInput\n    tracedSVG: StringQueryOperatorInput\n    width: FloatQueryOperatorInput\n}\n\ninput ImageSharpFluidFilterInput {\n    aspectRatio: FloatQueryOperatorInput\n    base64: StringQueryOperatorInput\n    originalImg: StringQueryOperatorInput\n    originalName: StringQueryOperatorInput\n    presentationHeight: IntQueryOperatorInput\n    presentationWidth: IntQueryOperatorInput\n    sizes: StringQueryOperatorInput\n    src: StringQueryOperatorInput\n    srcSet: StringQueryOperatorInput\n    srcSetWebp: StringQueryOperatorInput\n    srcWebp: StringQueryOperatorInput\n    tracedSVG: StringQueryOperatorInput\n}\n\ninput ImageSharpOriginalFilterInput {\n    height: FloatQueryOperatorInput\n    src: StringQueryOperatorInput\n    width: FloatQueryOperatorInput\n}\n\ninput ImageSharpResizeFilterInput {\n    aspectRatio: FloatQueryOperatorInput\n    height: IntQueryOperatorInput\n    originalName: StringQueryOperatorInput\n    src: StringQueryOperatorInput\n    tracedSVG: StringQueryOperatorInput\n    width: IntQueryOperatorInput\n}\n\ninput ImageSharpResolutionsFilterInput {\n    aspectRatio: FloatQueryOperatorInput\n    base64: StringQueryOperatorInput\n    height: FloatQueryOperatorInput\n    originalName: StringQueryOperatorInput\n    src: StringQueryOperatorInput\n    srcSet: StringQueryOperatorInput\n    srcSetWebp: StringQueryOperatorInput\n    srcWebp: StringQueryOperatorInput\n    tracedSVG: StringQueryOperatorInput\n    width: FloatQueryOperatorInput\n}\n\ninput ImageSharpSizesFilterInput {\n    aspectRatio: FloatQueryOperatorInput\n    base64: StringQueryOperatorInput\n    originalImg: StringQueryOperatorInput\n    originalName: StringQueryOperatorInput\n    presentationHeight: IntQueryOperatorInput\n    presentationWidth: IntQueryOperatorInput\n    sizes: StringQueryOperatorInput\n    src: StringQueryOperatorInput\n    srcSet: StringQueryOperatorInput\n    srcSetWebp: StringQueryOperatorInput\n    srcWebp: StringQueryOperatorInput\n    tracedSVG: StringQueryOperatorInput\n}\n\ninput ImageSharpSortInput {\n    fields: [ImageSharpFieldsEnum]\n    order: [SortOrderEnum] = [ASC]\n}\n\ninput IntQueryOperatorInput {\n    eq: Int\n    gt: Int\n    gte: Int\n    in: [Int]\n    lt: Int\n    lte: Int\n    ne: Int\n    nin: [Int]\n}\n\ninput InternalFilterInput {\n    content: StringQueryOperatorInput\n    contentDigest: StringQueryOperatorInput\n    description: StringQueryOperatorInput\n    fieldOwners: StringQueryOperatorInput\n    ignoreType: BooleanQueryOperatorInput\n    mediaType: StringQueryOperatorInput\n    owner: StringQueryOperatorInput\n    type: StringQueryOperatorInput\n}\n\ninput JSONQueryOperatorInput {\n    eq: JSON\n    glob: JSON\n    in: [JSON]\n    ne: JSON\n    nin: [JSON]\n    regex: JSON\n}\n\ninput MarkdownHeadingFilterInput {\n    depth: IntQueryOperatorInput\n    value: StringQueryOperatorInput\n}\n\ninput MarkdownHeadingFilterListInput {\n    elemMatch: MarkdownHeadingFilterInput\n}\n\ninput MarkdownRemarkFieldsFilterInput {\n    slug: StringQueryOperatorInput\n}\n\ninput MarkdownRemarkFilterInput {\n    children: NodeFilterListInput\n    excerpt: StringQueryOperatorInput\n    fields: MarkdownRemarkFieldsFilterInput\n    fileAbsolutePath: StringQueryOperatorInput\n    frontmatter: MarkdownRemarkFrontmatterFilterInput\n    headings: MarkdownHeadingFilterListInput\n    html: StringQueryOperatorInput\n    htmlAst: JSONQueryOperatorInput\n    id: StringQueryOperatorInput\n    internal: InternalFilterInput\n    parent: NodeFilterInput\n    rawMarkdownBody: StringQueryOperatorInput\n    tableOfContents: StringQueryOperatorInput\n    timeToRead: IntQueryOperatorInput\n    wordCount: wordCountFilterInput\n}\n\ninput MarkdownRemarkFrontmatterAgendaSectionAgendaItemsFilterInput {\n    agendaDescription: StringQueryOperatorInput\n    timeRange: StringQueryOperatorInput\n    title: StringQueryOperatorInput\n}\n\ninput MarkdownRemarkFrontmatterAgendaSectionAgendaItemsFilterListInput {\n    elemMatch: MarkdownRemarkFrontmatterAgendaSectionAgendaItemsFilterInput\n}\n\ninput MarkdownRemarkFrontmatterAgendaSectionFilterInput {\n    active: BooleanQueryOperatorInput\n    agendaItems: MarkdownRemarkFrontmatterAgendaSectionAgendaItemsFilterListInput\n}\n\ninput MarkdownRemarkFrontmatterBoardOfDirectorsSectionFilterInput {\n    name: StringQueryOperatorInput\n    position: StringQueryOperatorInput\n}\n\ninput MarkdownRemarkFrontmatterBoardOfDirectorsSectionFilterListInput {\n    elemMatch: MarkdownRemarkFrontmatterBoardOfDirectorsSectionFilterInput\n}\n\ninput MarkdownRemarkFrontmatterFilterInput {\n    aboutSectionExtended: StringQueryOperatorInput\n    agendaSection: MarkdownRemarkFrontmatterAgendaSectionFilterInput\n    boardOfDirectorsSection: MarkdownRemarkFrontmatterBoardOfDirectorsSectionFilterListInput\n    date: DateQueryOperatorInput\n    googleDriveLink: StringQueryOperatorInput\n    heroSection: MarkdownRemarkFrontmatterHeroSectionFilterInput\n    image: FileFilterInput\n    locationSection: MarkdownRemarkFrontmatterLocationSectionFilterInput\n    nextEventSection: MarkdownRemarkFrontmatterNextEventSectionFilterInput\n    panelistSection: MarkdownRemarkFrontmatterPanelistSectionFilterInput\n    sponsorsSection: MarkdownRemarkFrontmatterSponsorsSectionFilterListInput\n    templateKey: StringQueryOperatorInput\n    title: StringQueryOperatorInput\n}\n\ninput MarkdownRemarkFrontmatterHeroSectionFilterInput {\n    description: StringQueryOperatorInput\n    heroImage: FileFilterInput\n    title: StringQueryOperatorInput\n}\n\ninput MarkdownRemarkFrontmatterLocationSectionCoordinatesFilterInput {\n    latitude: StringQueryOperatorInput\n    longitude: StringQueryOperatorInput\n}\n\ninput MarkdownRemarkFrontmatterLocationSectionFilterInput {\n    coordinates: MarkdownRemarkFrontmatterLocationSectionCoordinatesFilterInput\n    date: StringQueryOperatorInput\n    eventTimeRange: StringQueryOperatorInput\n    parkingBlurb: StringQueryOperatorInput\n    rsvpLink: StringQueryOperatorInput\n    venueAddress: StringQueryOperatorInput\n    venueName: StringQueryOperatorInput\n}\n\ninput MarkdownRemarkFrontmatterNextEventSectionFilterInput {\n    date: StringQueryOperatorInput\n    locationAddress: StringQueryOperatorInput\n    locationName: StringQueryOperatorInput\n    rsvpLink: StringQueryOperatorInput\n    title: StringQueryOperatorInput\n}\n\ninput MarkdownRemarkFrontmatterPanelistSectionFilterInput {\n    active: BooleanQueryOperatorInput\n    panelistItems: MarkdownRemarkFrontmatterPanelistSectionPanelistItemsFilterListInput\n}\n\ninput MarkdownRemarkFrontmatterPanelistSectionPanelistItemsFilterInput {\n    biography: StringQueryOperatorInput\n    image: FileFilterInput\n    name: StringQueryOperatorInput\n    position: StringQueryOperatorInput\n}\n\ninput MarkdownRemarkFrontmatterPanelistSectionPanelistItemsFilterListInput {\n    elemMatch: MarkdownRemarkFrontmatterPanelistSectionPanelistItemsFilterInput\n}\n\ninput MarkdownRemarkFrontmatterSponsorsSectionFilterInput {\n    logo: FileFilterInput\n    sponsor: StringQueryOperatorInput\n    website: StringQueryOperatorInput\n}\n\ninput MarkdownRemarkFrontmatterSponsorsSectionFilterListInput {\n    elemMatch: MarkdownRemarkFrontmatterSponsorsSectionFilterInput\n}\n\ninput MarkdownRemarkSortInput {\n    fields: [MarkdownRemarkFieldsEnum]\n    order: [SortOrderEnum] = [ASC]\n}\n\ninput NodeFilterInput {\n    children: NodeFilterListInput\n    id: StringQueryOperatorInput\n    internal: InternalFilterInput\n    parent: NodeFilterInput\n}\n\ninput NodeFilterListInput {\n    elemMatch: NodeFilterInput\n}\n\ninput Potrace {\n    alphaMax: Float\n    background: String\n    blackOnWhite: Boolean\n    color: String\n    optCurve: Boolean\n    optTolerance: Float\n    threshold: Int\n    turdSize: Float\n    turnPolicy: PotraceTurnPolicy\n}\n\ninput SiteFilterInput {\n    buildTime: DateQueryOperatorInput\n    children: NodeFilterListInput\n    host: StringQueryOperatorInput\n    id: StringQueryOperatorInput\n    internal: InternalFilterInput\n    parent: NodeFilterInput\n    pathPrefix: StringQueryOperatorInput\n    polyfill: BooleanQueryOperatorInput\n    port: IntQueryOperatorInput\n    siteMetadata: SiteSiteMetadataFilterInput\n}\n\ninput SitePageContextFilterInput {\n    id: StringQueryOperatorInput\n}\n\ninput SitePageFilterInput {\n    children: NodeFilterListInput\n    component: StringQueryOperatorInput\n    componentChunkName: StringQueryOperatorInput\n    componentPath: StringQueryOperatorInput\n    context: SitePageContextFilterInput\n    id: StringQueryOperatorInput\n    internal: InternalFilterInput\n    internalComponentName: StringQueryOperatorInput\n    isCreatedByStatefulCreatePages: BooleanQueryOperatorInput\n    jsonName: StringQueryOperatorInput\n    parent: NodeFilterInput\n    path: StringQueryOperatorInput\n    pluginCreator: SitePluginFilterInput\n    pluginCreatorId: StringQueryOperatorInput\n}\n\ninput SitePageSortInput {\n    fields: [SitePageFieldsEnum]\n    order: [SortOrderEnum] = [ASC]\n}\n\ninput SitePluginFilterInput {\n    browserAPIs: StringQueryOperatorInput\n    children: NodeFilterListInput\n    id: StringQueryOperatorInput\n    internal: InternalFilterInput\n    name: StringQueryOperatorInput\n    nodeAPIs: StringQueryOperatorInput\n    packageJson: SitePluginPackageJsonFilterInput\n    parent: NodeFilterInput\n    pluginFilepath: StringQueryOperatorInput\n    pluginOptions: SitePluginPluginOptionsFilterInput\n    resolve: StringQueryOperatorInput\n    ssrAPIs: StringQueryOperatorInput\n    version: StringQueryOperatorInput\n}\n\ninput SitePluginPackageJsonDependenciesFilterInput {\n    name: StringQueryOperatorInput\n    version: StringQueryOperatorInput\n}\n\ninput SitePluginPackageJsonDependenciesFilterListInput {\n    elemMatch: SitePluginPackageJsonDependenciesFilterInput\n}\n\ninput SitePluginPackageJsonDevDependenciesFilterInput {\n    name: StringQueryOperatorInput\n    version: StringQueryOperatorInput\n}\n\ninput SitePluginPackageJsonDevDependenciesFilterListInput {\n    elemMatch: SitePluginPackageJsonDevDependenciesFilterInput\n}\n\ninput SitePluginPackageJsonFilterInput {\n    dependencies: SitePluginPackageJsonDependenciesFilterListInput\n    description: StringQueryOperatorInput\n    devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput\n    keywords: StringQueryOperatorInput\n    license: StringQueryOperatorInput\n    main: StringQueryOperatorInput\n    name: StringQueryOperatorInput\n    peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput\n    version: StringQueryOperatorInput\n}\n\ninput SitePluginPackageJsonPeerDependenciesFilterInput {\n    name: StringQueryOperatorInput\n    version: StringQueryOperatorInput\n}\n\ninput SitePluginPackageJsonPeerDependenciesFilterListInput {\n    elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput\n}\n\ninput SitePluginPluginOptionsFilterInput {\n    destinationDir: StringQueryOperatorInput\n    develop: BooleanQueryOperatorInput\n    maxWidth: IntQueryOperatorInput\n    modulePath: StringQueryOperatorInput\n    name: StringQueryOperatorInput\n    path: StringQueryOperatorInput\n    pathCheck: BooleanQueryOperatorInput\n    plugins: SitePluginPluginOptionsPluginsFilterListInput\n    purgeOnly: StringQueryOperatorInput\n}\n\ninput SitePluginPluginOptionsPluginsFilterInput {\n    browserAPIs: StringQueryOperatorInput\n    id: StringQueryOperatorInput\n    name: StringQueryOperatorInput\n    pluginFilepath: StringQueryOperatorInput\n    pluginOptions: SitePluginPluginOptionsPluginsPluginOptionsFilterInput\n    resolve: StringQueryOperatorInput\n    version: StringQueryOperatorInput\n}\n\ninput SitePluginPluginOptionsPluginsFilterListInput {\n    elemMatch: SitePluginPluginOptionsPluginsFilterInput\n}\n\ninput SitePluginPluginOptionsPluginsPluginOptionsFilterInput {\n    destinationDir: StringQueryOperatorInput\n    maxWidth: IntQueryOperatorInput\n    name: StringQueryOperatorInput\n}\n\ninput SitePluginSortInput {\n    fields: [SitePluginFieldsEnum]\n    order: [SortOrderEnum] = [ASC]\n}\n\ninput SiteSiteMetadataFilterInput {\n    description: StringQueryOperatorInput\n    title: StringQueryOperatorInput\n}\n\ninput SiteSortInput {\n    fields: [SiteFieldsEnum]\n    order: [SortOrderEnum] = [ASC]\n}\n\ninput StringQueryOperatorInput {\n    eq: String\n    glob: String\n    in: [String]\n    ne: String\n    nin: [String]\n    regex: String\n}\n\ninput wordCountFilterInput {\n    paragraphs: IntQueryOperatorInput\n    sentences: IntQueryOperatorInput\n    words: IntQueryOperatorInput\n}\n\n\n\"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar.\"\nscalar Date\n\n\"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\"\nscalar JSON",
      "containsQueryType": true,
      "typesUndefined": [],
      "directivesUndefined": [
        "deprecated"
      ],
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 60,
      "containsCycle": true,
      "numDefinitions": 140
    }
  ],
  "metrics": {
    "created_at": "2019-02-27T00:31:26Z",
    "updated_at": "2019-05-14T22:33:10Z",
    "pushed_at": "2019-05-14T22:33:08Z",
    "issues": 10,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}