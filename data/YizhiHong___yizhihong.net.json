{
  "repo_name": "yizhihong.net",
  "repo_full_name": "yizhihong/yizhihong.net",
  "repo_owner": "YizhiHong",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "client/CMS/plugins/graphql/config/generated/schema.graphql",
      "sha": "0a3b050fab3f999b5b35f632e9a1592b820d1035",
      "url": "https://api.github.com/repositories/170425052/contents/client/CMS/plugins/graphql/config/generated/schema.graphql?ref=a4b6ff53fd71cf60c16a1daff8ebfc669c455071",
      "git_url": "https://api.github.com/repositories/170425052/git/blobs/0a3b050fab3f999b5b35f632e9a1592b820d1035",
      "html_url": "https://github.com/YizhiHong/yizhihong.net/blob/a4b6ff53fd71cf60c16a1daff8ebfc669c455071/client/CMS/plugins/graphql/config/generated/schema.graphql",
      "content": "\"\"\"The contact form from our client site\"\"\"\ntype Contact {\n  _id: ID!\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  email: String\n  name: String\n  content: String\n  date: DateTime\n}\n\ntype ContactAggregator {\n  count: Int\n  totalCount: Int\n}\n\ntype ContactConnection {\n  values: [Contact]\n  groupBy: ContactGroupBy\n  aggregate: ContactAggregator\n}\n\ntype ContactConnection_id {\n  key: ID\n  connection: ContactConnection\n}\n\ntype ContactConnectionContent {\n  key: String\n  connection: ContactConnection\n}\n\ntype ContactConnectionCreatedAt {\n  key: DateTime\n  connection: ContactConnection\n}\n\ntype ContactConnectionDate {\n  key: DateTime\n  connection: ContactConnection\n}\n\ntype ContactConnectionEmail {\n  key: String\n  connection: ContactConnection\n}\n\ntype ContactConnectionId {\n  key: ID\n  connection: ContactConnection\n}\n\ntype ContactConnectionName {\n  key: String\n  connection: ContactConnection\n}\n\ntype ContactConnectionUpdatedAt {\n  key: DateTime\n  connection: ContactConnection\n}\n\ntype ContactGroupBy {\n  _id: [ContactConnection_id]\n  id: [ContactConnectionId]\n  createdAt: [ContactConnectionCreatedAt]\n  updatedAt: [ContactConnectionUpdatedAt]\n  email: [ContactConnectionEmail]\n  name: [ContactConnectionName]\n  content: [ContactConnectionContent]\n  date: [ContactConnectionDate]\n}\n\ninput ContactInput {\n  email: String\n  name: String\n  content: String\n  date: DateTime\n}\n\ninput createContactInput {\n  data: ContactInput\n}\n\ntype createContactPayload {\n  contact: Contact\n}\n\ninput createExperiencesInput {\n  data: ExperiencesInput\n}\n\ntype createExperiencesPayload {\n  experience: Experiences\n}\n\ninput createIntroductionInput {\n  data: IntroductionInput\n}\n\ntype createIntroductionPayload {\n  introduction: Introduction\n}\n\ninput createProjectsInput {\n  data: ProjectsInput\n}\n\ntype createProjectsPayload {\n  project: Projects\n}\n\ninput createRoleInput {\n  data: RoleInput\n}\n\ntype createRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput createTechniquesInput {\n  data: TechniquesInput\n}\n\ntype createTechniquesPayload {\n  technique: Techniques\n}\n\ninput createUserInput {\n  data: UserInput\n}\n\ntype createUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"\nThe `DateTime` scalar represents a date and time following the ISO 8601 standard\n\"\"\"\nscalar DateTime\n\ninput deleteContactInput {\n  where: InputID\n}\n\ntype deleteContactPayload {\n  contact: Contact\n}\n\ninput deleteExperiencesInput {\n  where: InputID\n}\n\ntype deleteExperiencesPayload {\n  experience: Experiences\n}\n\ninput deleteIntroductionInput {\n  where: InputID\n}\n\ntype deleteIntroductionPayload {\n  introduction: Introduction\n}\n\ninput deleteProjectsInput {\n  where: InputID\n}\n\ntype deleteProjectsPayload {\n  project: Projects\n}\n\ninput deleteRoleInput {\n  where: InputID\n}\n\ntype deleteRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput deleteTechniquesInput {\n  where: InputID\n}\n\ntype deleteTechniquesPayload {\n  technique: Techniques\n}\n\ninput deleteUserInput {\n  where: InputID\n}\n\ntype deleteUserPayload {\n  user: UsersPermissionsUser\n}\n\ninput editContactInput {\n  email: String\n  name: String\n  content: String\n  date: DateTime\n}\n\ninput editExperiencesInput {\n  name: String\n  location: String\n  title: String\n  startDate: DateTime\n  endDate: DateTime\n  currentWork: Boolean\n  details: JSON\n  projects: [ID]\n  type: ENUM_EXPERIENCES_TYPE\n}\n\ninput editFileInput {\n  name: String\n  hash: String\n  sha256: String\n  ext: String\n  mime: String\n  size: String\n  url: String\n  provider: String\n  public_id: String\n  related: [ID]\n}\n\ninput editIntroductionInput {\n  intro: String\n}\n\ninput editProjectsInput {\n  name: String\n  decs: String\n  link: String\n  date: DateTime\n  techniques: [ID]\n  details: JSON\n  location: String\n  experiences: [ID]\n}\n\ninput editRoleInput {\n  name: String\n  description: String\n  type: String\n  permissions: [ID]\n  users: [ID]\n}\n\ninput editTechniquesInput {\n  name: String\n  img: String\n  projs: [ID]\n}\n\ninput editUserInput {\n  username: String\n  email: String\n  provider: String\n  password: String\n  resetPasswordToken: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: ID\n}\n\nenum ENUM_EXPERIENCES_TYPE {\n  Education\n  Experience\n  Others\n}\n\n\"\"\"My Experiences\"\"\"\ntype Experiences {\n  _id: ID!\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  location: String!\n  title: String\n  startDate: DateTime!\n  endDate: DateTime\n  currentWork: Boolean!\n  details: JSON\n  type: ENUM_EXPERIENCES_TYPE!\n  projects(sort: String, limit: Int, start: Int, where: JSON): [Projects]\n}\n\ntype ExperiencesAggregator {\n  count: Int\n  totalCount: Int\n}\n\ntype ExperiencesConnection {\n  values: [Experiences]\n  groupBy: ExperiencesGroupBy\n  aggregate: ExperiencesAggregator\n}\n\ntype ExperiencesConnection_id {\n  key: ID\n  connection: ExperiencesConnection\n}\n\ntype ExperiencesConnectionCreatedAt {\n  key: DateTime\n  connection: ExperiencesConnection\n}\n\ntype ExperiencesConnectionCurrentWork {\n  key: Boolean\n  connection: ExperiencesConnection\n}\n\ntype ExperiencesConnectionDetails {\n  key: JSON\n  connection: ExperiencesConnection\n}\n\ntype ExperiencesConnectionEndDate {\n  key: DateTime\n  connection: ExperiencesConnection\n}\n\ntype ExperiencesConnectionId {\n  key: ID\n  connection: ExperiencesConnection\n}\n\ntype ExperiencesConnectionLocation {\n  key: String\n  connection: ExperiencesConnection\n}\n\ntype ExperiencesConnectionName {\n  key: String\n  connection: ExperiencesConnection\n}\n\ntype ExperiencesConnectionStartDate {\n  key: DateTime\n  connection: ExperiencesConnection\n}\n\ntype ExperiencesConnectionTitle {\n  key: String\n  connection: ExperiencesConnection\n}\n\ntype ExperiencesConnectionType {\n  key: String\n  connection: ExperiencesConnection\n}\n\ntype ExperiencesConnectionUpdatedAt {\n  key: DateTime\n  connection: ExperiencesConnection\n}\n\ntype ExperiencesGroupBy {\n  _id: [ExperiencesConnection_id]\n  id: [ExperiencesConnectionId]\n  createdAt: [ExperiencesConnectionCreatedAt]\n  updatedAt: [ExperiencesConnectionUpdatedAt]\n  name: [ExperiencesConnectionName]\n  location: [ExperiencesConnectionLocation]\n  title: [ExperiencesConnectionTitle]\n  startDate: [ExperiencesConnectionStartDate]\n  endDate: [ExperiencesConnectionEndDate]\n  currentWork: [ExperiencesConnectionCurrentWork]\n  details: [ExperiencesConnectionDetails]\n  type: [ExperiencesConnectionType]\n}\n\ninput ExperiencesInput {\n  name: String!\n  location: String!\n  title: String\n  startDate: DateTime!\n  endDate: DateTime\n  currentWork: Boolean!\n  details: JSON\n  projects: [ID]\n  type: ENUM_EXPERIENCES_TYPE!\n}\n\ninput FileInput {\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related: [ID]\n}\n\ninput InputID {\n  id: ID!\n}\n\ntype Introduction {\n  _id: ID!\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  intro: String\n}\n\ntype IntroductionAggregator {\n  count: Int\n  totalCount: Int\n}\n\ntype IntroductionConnection {\n  values: [Introduction]\n  groupBy: IntroductionGroupBy\n  aggregate: IntroductionAggregator\n}\n\ntype IntroductionConnection_id {\n  key: ID\n  connection: IntroductionConnection\n}\n\ntype IntroductionConnectionCreatedAt {\n  key: DateTime\n  connection: IntroductionConnection\n}\n\ntype IntroductionConnectionId {\n  key: ID\n  connection: IntroductionConnection\n}\n\ntype IntroductionConnectionIntro {\n  key: String\n  connection: IntroductionConnection\n}\n\ntype IntroductionConnectionUpdatedAt {\n  key: DateTime\n  connection: IntroductionConnection\n}\n\ntype IntroductionGroupBy {\n  _id: [IntroductionConnection_id]\n  id: [IntroductionConnectionId]\n  createdAt: [IntroductionConnectionCreatedAt]\n  updatedAt: [IntroductionConnectionUpdatedAt]\n  intro: [IntroductionConnectionIntro]\n}\n\ninput IntroductionInput {\n  intro: String\n}\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\"\"\"\nscalar JSON\n\n\"\"\"The `Long` scalar type represents 52-bit integers\"\"\"\nscalar Long\n\nunion Morph = UsersPermissionsMe | UsersPermissionsMeRole | Contact | createContactPayload | updateContactPayload | deleteContactPayload | ContactConnection | ContactAggregator | ContactGroupBy | ContactConnection_id | ContactConnectionId | ContactConnectionCreatedAt | ContactConnectionUpdatedAt | ContactConnectionEmail | ContactConnectionName | ContactConnectionContent | ContactConnectionDate | Experiences | createExperiencesPayload | updateExperiencesPayload | deleteExperiencesPayload | ExperiencesConnection | ExperiencesAggregator | ExperiencesGroupBy | ExperiencesConnection_id | ExperiencesConnectionId | ExperiencesConnectionCreatedAt | ExperiencesConnectionUpdatedAt | ExperiencesConnectionName | ExperiencesConnectionLocation | ExperiencesConnectionTitle | ExperiencesConnectionStartDate | ExperiencesConnectionEndDate | ExperiencesConnectionCurrentWork | ExperiencesConnectionDetails | ExperiencesConnectionType | Introduction | createIntroductionPayload | updateIntroductionPayload | deleteIntroductionPayload | IntroductionConnection | IntroductionAggregator | IntroductionGroupBy | IntroductionConnection_id | IntroductionConnectionId | IntroductionConnectionCreatedAt | IntroductionConnectionUpdatedAt | IntroductionConnectionIntro | Techniques | createTechniquesPayload | updateTechniquesPayload | deleteTechniquesPayload | TechniquesConnection | TechniquesAggregator | TechniquesGroupBy | TechniquesConnection_id | TechniquesConnectionId | TechniquesConnectionCreatedAt | TechniquesConnectionUpdatedAt | TechniquesConnectionName | TechniquesConnectionImg | Projects | createProjectsPayload | updateProjectsPayload | deleteProjectsPayload | ProjectsConnection | ProjectsAggregator | ProjectsGroupBy | ProjectsConnection_id | ProjectsConnectionId | ProjectsConnectionCreatedAt | ProjectsConnectionUpdatedAt | ProjectsConnectionName | ProjectsConnectionDecs | ProjectsConnectionLink | ProjectsConnectionDate | ProjectsConnectionDetails | ProjectsConnectionLocation | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileGroupBy | UploadFileConnection_id | UploadFileConnectionId | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionHash | UploadFileConnectionSha256 | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionProvider | UploadFileConnectionPublic_id | UsersPermissionsPermission | UsersPermissionsRole | createRolePayload | updateRolePayload | deleteRolePayload | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnection_id | UsersPermissionsRoleConnectionId | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | UsersPermissionsUser | createUserPayload | updateUserPayload | deleteUserPayload | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnection_id | UsersPermissionsUserConnectionId | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole\n\ntype Mutation {\n  createContact(input: createContactInput): createContactPayload\n  updateContact(input: updateContactInput): updateContactPayload\n  deleteContact(input: deleteContactInput): deleteContactPayload\n  createExperiences(input: createExperiencesInput): createExperiencesPayload\n  updateExperiences(input: updateExperiencesInput): updateExperiencesPayload\n  deleteExperiences(input: deleteExperiencesInput): deleteExperiencesPayload\n  createIntroduction(input: createIntroductionInput): createIntroductionPayload\n  updateIntroduction(input: updateIntroductionInput): updateIntroductionPayload\n  deleteIntroduction(input: deleteIntroductionInput): deleteIntroductionPayload\n  createTechniques(input: createTechniquesInput): createTechniquesPayload\n  updateTechniques(input: updateTechniquesInput): updateTechniquesPayload\n  deleteTechniques(input: deleteTechniquesInput): deleteTechniquesPayload\n  createProjects(input: createProjectsInput): createProjectsPayload\n  updateProjects(input: updateProjectsInput): updateProjectsPayload\n  deleteProjects(input: deleteProjectsInput): deleteProjectsPayload\n\n  \"\"\"Create a new role\"\"\"\n  createRole(input: createRoleInput): createRolePayload\n\n  \"\"\"Update an existing role\"\"\"\n  updateRole(input: updateRoleInput): updateRolePayload\n\n  \"\"\"Delete an existing role\"\"\"\n  deleteRole(input: deleteRoleInput): deleteRolePayload\n\n  \"\"\"Create a new user\"\"\"\n  createUser(input: createUserInput): createUserPayload\n\n  \"\"\"Update an existing user\"\"\"\n  updateUser(input: updateUserInput): updateUserPayload\n\n  \"\"\"Delete an existing user\"\"\"\n  deleteUser(input: deleteUserInput): deleteUserPayload\n  upload(refId: ID, ref: String, source: String, file: Upload!): UploadFile!\n}\n\ntype Projects {\n  _id: ID!\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String\n  decs: String\n  link: String\n  date: DateTime\n  details: JSON\n  location: String\n  techniques(sort: String, limit: Int, start: Int, where: JSON): [Techniques]\n  experiences(sort: String, limit: Int, start: Int, where: JSON): [Experiences]\n}\n\ntype ProjectsAggregator {\n  count: Int\n  totalCount: Int\n}\n\ntype ProjectsConnection {\n  values: [Projects]\n  groupBy: ProjectsGroupBy\n  aggregate: ProjectsAggregator\n}\n\ntype ProjectsConnection_id {\n  key: ID\n  connection: ProjectsConnection\n}\n\ntype ProjectsConnectionCreatedAt {\n  key: DateTime\n  connection: ProjectsConnection\n}\n\ntype ProjectsConnectionDate {\n  key: DateTime\n  connection: ProjectsConnection\n}\n\ntype ProjectsConnectionDecs {\n  key: String\n  connection: ProjectsConnection\n}\n\ntype ProjectsConnectionDetails {\n  key: JSON\n  connection: ProjectsConnection\n}\n\ntype ProjectsConnectionId {\n  key: ID\n  connection: ProjectsConnection\n}\n\ntype ProjectsConnectionLink {\n  key: String\n  connection: ProjectsConnection\n}\n\ntype ProjectsConnectionLocation {\n  key: String\n  connection: ProjectsConnection\n}\n\ntype ProjectsConnectionName {\n  key: String\n  connection: ProjectsConnection\n}\n\ntype ProjectsConnectionUpdatedAt {\n  key: DateTime\n  connection: ProjectsConnection\n}\n\ntype ProjectsGroupBy {\n  _id: [ProjectsConnection_id]\n  id: [ProjectsConnectionId]\n  createdAt: [ProjectsConnectionCreatedAt]\n  updatedAt: [ProjectsConnectionUpdatedAt]\n  name: [ProjectsConnectionName]\n  decs: [ProjectsConnectionDecs]\n  link: [ProjectsConnectionLink]\n  date: [ProjectsConnectionDate]\n  details: [ProjectsConnectionDetails]\n  location: [ProjectsConnectionLocation]\n}\n\ninput ProjectsInput {\n  name: String\n  decs: String\n  link: String\n  date: DateTime\n  techniques: [ID]\n  details: JSON\n  location: String\n  experiences: [ID]\n}\n\ntype Query {\n  contact(id: ID!): Contact\n  contacts(sort: String, limit: Int, start: Int, where: JSON): [Contact]\n  contactsConnection(sort: String, limit: Int, start: Int, where: JSON): ContactConnection\n  experience(id: ID!): Experiences\n  experiences(sort: String, limit: Int, start: Int, where: JSON): [Experiences]\n  experiencesConnection(sort: String, limit: Int, start: Int, where: JSON): ExperiencesConnection\n  introduction(id: ID!): Introduction\n  introductions(sort: String, limit: Int, start: Int, where: JSON): [Introduction]\n  introductionsConnection(sort: String, limit: Int, start: Int, where: JSON): IntroductionConnection\n  technique(id: ID!): Techniques\n  techniques(sort: String, limit: Int, start: Int, where: JSON): [Techniques]\n  techniquesConnection(sort: String, limit: Int, start: Int, where: JSON): TechniquesConnection\n  project(id: ID!): Projects\n  projects(sort: String, limit: Int, start: Int, where: JSON): [Projects]\n  projectsConnection(sort: String, limit: Int, start: Int, where: JSON): ProjectsConnection\n  files(sort: String, limit: Int, start: Int, where: JSON): [UploadFile]\n  filesConnection(sort: String, limit: Int, start: Int, where: JSON): UploadFileConnection\n  role(id: ID!): UsersPermissionsRole\n\n  \"\"\"\n  Retrieve all the existing roles. You can't apply filters on this query.\n  \"\"\"\n  roles(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsRole]\n  rolesConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsRoleConnection\n  user(id: ID!): UsersPermissionsUser\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n  usersConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsUserConnection\n  me: UsersPermissionsMe\n}\n\ninput RoleInput {\n  name: String!\n  description: String\n  type: String\n  permissions: [ID]\n  users: [ID]\n}\n\ntype Techniques {\n  _id: ID!\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String\n  img: String\n  projs(sort: String, limit: Int, start: Int, where: JSON): [Projects]\n}\n\ntype TechniquesAggregator {\n  count: Int\n  totalCount: Int\n}\n\ntype TechniquesConnection {\n  values: [Techniques]\n  groupBy: TechniquesGroupBy\n  aggregate: TechniquesAggregator\n}\n\ntype TechniquesConnection_id {\n  key: ID\n  connection: TechniquesConnection\n}\n\ntype TechniquesConnectionCreatedAt {\n  key: DateTime\n  connection: TechniquesConnection\n}\n\ntype TechniquesConnectionId {\n  key: ID\n  connection: TechniquesConnection\n}\n\ntype TechniquesConnectionImg {\n  key: String\n  connection: TechniquesConnection\n}\n\ntype TechniquesConnectionName {\n  key: String\n  connection: TechniquesConnection\n}\n\ntype TechniquesConnectionUpdatedAt {\n  key: DateTime\n  connection: TechniquesConnection\n}\n\ntype TechniquesGroupBy {\n  _id: [TechniquesConnection_id]\n  id: [TechniquesConnectionId]\n  createdAt: [TechniquesConnectionCreatedAt]\n  updatedAt: [TechniquesConnectionUpdatedAt]\n  name: [TechniquesConnectionName]\n  img: [TechniquesConnectionImg]\n}\n\ninput TechniquesInput {\n  name: String\n  img: String\n  projs: [ID]\n}\n\ninput updateContactInput {\n  where: InputID\n  data: editContactInput\n}\n\ntype updateContactPayload {\n  contact: Contact\n}\n\ninput updateExperiencesInput {\n  where: InputID\n  data: editExperiencesInput\n}\n\ntype updateExperiencesPayload {\n  experience: Experiences\n}\n\ninput updateIntroductionInput {\n  where: InputID\n  data: editIntroductionInput\n}\n\ntype updateIntroductionPayload {\n  introduction: Introduction\n}\n\ninput updateProjectsInput {\n  where: InputID\n  data: editProjectsInput\n}\n\ntype updateProjectsPayload {\n  project: Projects\n}\n\ninput updateRoleInput {\n  where: InputID\n  data: editRoleInput\n}\n\ntype updateRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput updateTechniquesInput {\n  where: InputID\n  data: editTechniquesInput\n}\n\ntype updateTechniquesPayload {\n  technique: Techniques\n}\n\ninput updateUserInput {\n  where: InputID\n  data: editUserInput\n}\n\ntype updateUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload\n\ntype UploadFile {\n  _id: ID!\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related(sort: String, limit: Int, start: Int, where: JSON): [Morph]\n}\n\ntype UploadFileAggregator {\n  count: Int\n  totalCount: Int\n}\n\ntype UploadFileConnection {\n  values: [UploadFile]\n  groupBy: UploadFileGroupBy\n  aggregate: UploadFileAggregator\n}\n\ntype UploadFileConnection_id {\n  key: ID\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionCreatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionExt {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionHash {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionId {\n  key: ID\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionMime {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionName {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionProvider {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionPublic_id {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSha256 {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSize {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUpdatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUrl {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileGroupBy {\n  _id: [UploadFileConnection_id]\n  id: [UploadFileConnectionId]\n  createdAt: [UploadFileConnectionCreatedAt]\n  updatedAt: [UploadFileConnectionUpdatedAt]\n  name: [UploadFileConnectionName]\n  hash: [UploadFileConnectionHash]\n  sha256: [UploadFileConnectionSha256]\n  ext: [UploadFileConnectionExt]\n  mime: [UploadFileConnectionMime]\n  size: [UploadFileConnectionSize]\n  url: [UploadFileConnectionUrl]\n  provider: [UploadFileConnectionProvider]\n  public_id: [UploadFileConnectionPublic_id]\n}\n\ninput UserInput {\n  username: String!\n  email: String!\n  provider: String\n  password: String\n  resetPasswordToken: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: ID\n}\n\ntype UsersPermissionsMe {\n  _id: ID!\n  username: String!\n  email: String!\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsMeRole\n}\n\ntype UsersPermissionsMeRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n}\n\ntype UsersPermissionsPermission {\n  _id: ID!\n  id: ID!\n  type: String!\n  controller: String!\n  action: String!\n  enabled: Boolean!\n  policy: String\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsRole {\n  _id: ID!\n  id: ID!\n  name: String!\n  description: String\n  type: String\n  permissions(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsPermission]\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n}\n\ntype UsersPermissionsRoleAggregator {\n  count: Int\n  totalCount: Int\n}\n\ntype UsersPermissionsRoleConnection {\n  values: [UsersPermissionsRole]\n  groupBy: UsersPermissionsRoleGroupBy\n  aggregate: UsersPermissionsRoleAggregator\n}\n\ntype UsersPermissionsRoleConnection_id {\n  key: ID\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionDescription {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionId {\n  key: ID\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionName {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionType {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleGroupBy {\n  _id: [UsersPermissionsRoleConnection_id]\n  id: [UsersPermissionsRoleConnectionId]\n  name: [UsersPermissionsRoleConnectionName]\n  description: [UsersPermissionsRoleConnectionDescription]\n  type: [UsersPermissionsRoleConnectionType]\n}\n\ntype UsersPermissionsUser {\n  _id: ID!\n  id: ID!\n  username: String!\n  email: String!\n  provider: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsUserAggregator {\n  count: Int\n  totalCount: Int\n}\n\ntype UsersPermissionsUserConnection {\n  values: [UsersPermissionsUser]\n  groupBy: UsersPermissionsUserGroupBy\n  aggregate: UsersPermissionsUserAggregator\n}\n\ntype UsersPermissionsUserConnection_id {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionBlocked {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionConfirmed {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionEmail {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionId {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionProvider {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionRole {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionUsername {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserGroupBy {\n  _id: [UsersPermissionsUserConnection_id]\n  id: [UsersPermissionsUserConnectionId]\n  username: [UsersPermissionsUserConnectionUsername]\n  email: [UsersPermissionsUserConnectionEmail]\n  provider: [UsersPermissionsUserConnectionProvider]\n  confirmed: [UsersPermissionsUserConnectionConfirmed]\n  blocked: [UsersPermissionsUserConnectionBlocked]\n  role: [UsersPermissionsUserConnectionRole]\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 125,
      "containsCycle": true,
      "numDefinitions": 169
    }
  ],
  "metrics": {
    "created_at": "2019-02-13T02:19:41Z",
    "updated_at": "2019-07-08T22:30:53Z",
    "pushed_at": "2019-07-08T22:30:51Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 1
  }
}