{
  "repo_name": "birotobusbenden",
  "repo_full_name": "obenlioglu/birotobusbenden",
  "repo_owner": "obenlioglu",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "server/src/generated/prisma.graphql",
      "sha": "f03e3f19a596bcf2ff6284206de271cd6607a623",
      "url": "https://api.github.com/repositories/186035052/contents/server/src/generated/prisma.graphql?ref=d7e7be9af010b29b0e45f1600a5faca3a975096e",
      "git_url": "https://api.github.com/repositories/186035052/git/blobs/f03e3f19a596bcf2ff6284206de271cd6607a623",
      "html_url": "https://github.com/obenlioglu/birotobusbenden/blob/d7e7be9af010b29b0e45f1600a5faca3a975096e/server/src/generated/prisma.graphql",
      "content": "# source: http://localhost:4466/birotobusbenden/dev\n# timestamp: Tue May 14 2019 21:13:35 GMT+0300 (GMT+03:00)\n\ntype AggregatePost {\n  count: Int!\n}\n\ntype AggregateType {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\nscalar DateTime\n\n\"\"\"Raw JSON value\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  createPost(data: PostCreateInput!): Post!\n  createType(data: TypeCreateInput!): Type!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  updateType(data: TypeUpdateInput!, where: TypeWhereUniqueInput!): Type\n  deleteUser(where: UserWhereUniqueInput!): User\n  deletePost(where: PostWhereUniqueInput!): Post\n  deleteType(where: TypeWhereUniqueInput!): Type\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  upsertType(where: TypeWhereUniqueInput!, create: TypeCreateInput!, update: TypeUpdateInput!): Type!\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  updateManyPosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!\n  updateManyTypes(data: TypeUpdateManyMutationInput!, where: TypeWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyPosts(where: PostWhereInput): BatchPayload!\n  deleteManyTypes(where: TypeWhereInput): BatchPayload!\n  executeRaw(database: PrismaDatabase, query: String!): Json!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Post implements Node {\n  id: ID!\n  user: User!\n  type: Type!\n  genderPreffer: Int\n  isActive: Boolean!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PostConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  id: ID\n  genderPreffer: Int\n  isActive: Boolean\n  user: UserCreateOneWithoutPostsInput!\n  type: TypeCreateOneWithoutPostInput!\n}\n\ninput PostCreateManyWithoutTypeInput {\n  create: [PostCreateWithoutTypeInput!]\n  connect: [PostWhereUniqueInput!]\n}\n\ninput PostCreateManyWithoutUserInput {\n  create: [PostCreateWithoutUserInput!]\n  connect: [PostWhereUniqueInput!]\n}\n\ninput PostCreateWithoutTypeInput {\n  id: ID\n  genderPreffer: Int\n  isActive: Boolean\n  user: UserCreateOneWithoutPostsInput!\n}\n\ninput PostCreateWithoutUserInput {\n  id: ID\n  genderPreffer: Int\n  isActive: Boolean\n  type: TypeCreateOneWithoutPostInput!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PostEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Post!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  genderPreffer_ASC\n  genderPreffer_DESC\n  isActive_ASC\n  isActive_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  genderPreffer: Int\n  isActive: Boolean!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ninput PostScalarWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PostScalarWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PostScalarWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PostScalarWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  genderPreffer: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  genderPreffer_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  genderPreffer_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  genderPreffer_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  genderPreffer_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  genderPreffer_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  genderPreffer_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  genderPreffer_gte: Int\n  isActive: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  isActive_not: Boolean\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PostSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PostSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PostSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n}\n\ninput PostUpdateInput {\n  genderPreffer: Int\n  isActive: Boolean\n  user: UserUpdateOneRequiredWithoutPostsInput\n  type: TypeUpdateOneRequiredWithoutPostInput\n}\n\ninput PostUpdateManyDataInput {\n  genderPreffer: Int\n  isActive: Boolean\n}\n\ninput PostUpdateManyMutationInput {\n  genderPreffer: Int\n  isActive: Boolean\n}\n\ninput PostUpdateManyWithoutTypeInput {\n  create: [PostCreateWithoutTypeInput!]\n  connect: [PostWhereUniqueInput!]\n  set: [PostWhereUniqueInput!]\n  disconnect: [PostWhereUniqueInput!]\n  delete: [PostWhereUniqueInput!]\n  update: [PostUpdateWithWhereUniqueWithoutTypeInput!]\n  updateMany: [PostUpdateManyWithWhereNestedInput!]\n  deleteMany: [PostScalarWhereInput!]\n  upsert: [PostUpsertWithWhereUniqueWithoutTypeInput!]\n}\n\ninput PostUpdateManyWithoutUserInput {\n  create: [PostCreateWithoutUserInput!]\n  connect: [PostWhereUniqueInput!]\n  set: [PostWhereUniqueInput!]\n  disconnect: [PostWhereUniqueInput!]\n  delete: [PostWhereUniqueInput!]\n  update: [PostUpdateWithWhereUniqueWithoutUserInput!]\n  updateMany: [PostUpdateManyWithWhereNestedInput!]\n  deleteMany: [PostScalarWhereInput!]\n  upsert: [PostUpsertWithWhereUniqueWithoutUserInput!]\n}\n\ninput PostUpdateManyWithWhereNestedInput {\n  where: PostScalarWhereInput!\n  data: PostUpdateManyDataInput!\n}\n\ninput PostUpdateWithoutTypeDataInput {\n  genderPreffer: Int\n  isActive: Boolean\n  user: UserUpdateOneRequiredWithoutPostsInput\n}\n\ninput PostUpdateWithoutUserDataInput {\n  genderPreffer: Int\n  isActive: Boolean\n  type: TypeUpdateOneRequiredWithoutPostInput\n}\n\ninput PostUpdateWithWhereUniqueWithoutTypeInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutTypeDataInput!\n}\n\ninput PostUpdateWithWhereUniqueWithoutUserInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutUserDataInput!\n}\n\ninput PostUpsertWithWhereUniqueWithoutTypeInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutTypeDataInput!\n  create: PostCreateWithoutTypeInput!\n}\n\ninput PostUpsertWithWhereUniqueWithoutUserInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutUserDataInput!\n  create: PostCreateWithoutUserInput!\n}\n\ninput PostWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PostWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PostWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PostWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  genderPreffer: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  genderPreffer_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  genderPreffer_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  genderPreffer_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  genderPreffer_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  genderPreffer_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  genderPreffer_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  genderPreffer_gte: Int\n  isActive: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  isActive_not: Boolean\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  user: UserWhereInput\n  type: TypeWhereInput\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\nenum PrismaDatabase {\n  default\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  types(where: TypeWhereInput, orderBy: TypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Type]!\n  user(where: UserWhereUniqueInput!): User\n  post(where: PostWhereUniqueInput!): Post\n  type(where: TypeWhereUniqueInput!): Type\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n  typesConnection(where: TypeWhereInput, orderBy: TypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TypeConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n  type(where: TypeSubscriptionWhereInput): TypeSubscriptionPayload\n}\n\ntype Type implements Node {\n  id: ID!\n  description: String!\n  isActive: Boolean!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  post(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TypeConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TypeEdge]!\n  aggregate: AggregateType!\n}\n\ninput TypeCreateInput {\n  id: ID\n  description: String!\n  isActive: Boolean\n  post: PostCreateManyWithoutTypeInput\n}\n\ninput TypeCreateOneWithoutPostInput {\n  create: TypeCreateWithoutPostInput\n  connect: TypeWhereUniqueInput\n}\n\ninput TypeCreateWithoutPostInput {\n  id: ID\n  description: String!\n  isActive: Boolean\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TypeEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Type!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum TypeOrderByInput {\n  id_ASC\n  id_DESC\n  description_ASC\n  description_DESC\n  isActive_ASC\n  isActive_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype TypePreviousValues {\n  id: ID!\n  description: String!\n  isActive: Boolean!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype TypeSubscriptionPayload {\n  mutation: MutationType!\n  node: Type\n  updatedFields: [String!]\n  previousValues: TypePreviousValues\n}\n\ninput TypeSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TypeSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TypeSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TypeSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TypeWhereInput\n}\n\ninput TypeUpdateInput {\n  description: String\n  isActive: Boolean\n  post: PostUpdateManyWithoutTypeInput\n}\n\ninput TypeUpdateManyMutationInput {\n  description: String\n  isActive: Boolean\n}\n\ninput TypeUpdateOneRequiredWithoutPostInput {\n  create: TypeCreateWithoutPostInput\n  connect: TypeWhereUniqueInput\n  update: TypeUpdateWithoutPostDataInput\n  upsert: TypeUpsertWithoutPostInput\n}\n\ninput TypeUpdateWithoutPostDataInput {\n  description: String\n  isActive: Boolean\n}\n\ninput TypeUpsertWithoutPostInput {\n  update: TypeUpdateWithoutPostDataInput!\n  create: TypeCreateWithoutPostInput!\n}\n\ninput TypeWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TypeWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TypeWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TypeWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  description: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  description_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  description_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  description_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  description_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  description_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  description_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  description_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  description_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  description_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  description_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  description_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  description_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  description_not_ends_with: String\n  isActive: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  isActive_not: Boolean\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  post_every: PostWhereInput\n  post_some: PostWhereInput\n  post_none: PostWhereInput\n}\n\ninput TypeWhereUniqueInput {\n  id: ID\n}\n\ntype User implements Node {\n  id: ID!\n  twitterUsername: String!\n  isActive: Boolean!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  id: ID\n  twitterUsername: String!\n  isActive: Boolean\n  posts: PostCreateManyWithoutUserInput\n}\n\ninput UserCreateOneWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutPostsInput {\n  id: ID\n  twitterUsername: String!\n  isActive: Boolean\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  twitterUsername_ASC\n  twitterUsername_DESC\n  isActive_ASC\n  isActive_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  twitterUsername: String!\n  isActive: Boolean!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  twitterUsername: String\n  isActive: Boolean\n  posts: PostUpdateManyWithoutUserInput\n}\n\ninput UserUpdateManyMutationInput {\n  twitterUsername: String\n  isActive: Boolean\n}\n\ninput UserUpdateOneRequiredWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n  update: UserUpdateWithoutPostsDataInput\n  upsert: UserUpsertWithoutPostsInput\n}\n\ninput UserUpdateWithoutPostsDataInput {\n  twitterUsername: String\n  isActive: Boolean\n}\n\ninput UserUpsertWithoutPostsInput {\n  update: UserUpdateWithoutPostsDataInput!\n  create: UserCreateWithoutPostsInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  twitterUsername: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  twitterUsername_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  twitterUsername_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  twitterUsername_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  twitterUsername_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  twitterUsername_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  twitterUsername_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  twitterUsername_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  twitterUsername_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  twitterUsername_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  twitterUsername_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  twitterUsername_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  twitterUsername_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  twitterUsername_not_ends_with: String\n  isActive: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  isActive_not: Boolean\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  posts_every: PostWhereInput\n  posts_some: PostWhereInput\n  posts_none: PostWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 23,
      "containsCycle": true,
      "numDefinitions": 75
    }
  ],
  "metrics": {
    "created_at": "2019-05-10T18:14:05Z",
    "updated_at": "2019-05-16T12:59:10Z",
    "pushed_at": "2019-05-16T12:58:34Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "apache-2.0",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}