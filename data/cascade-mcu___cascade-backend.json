{
  "repo_name": "cascade-backend",
  "repo_full_name": "cascade-mcu/cascade-backend",
  "repo_owner": "cascade-mcu",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "src/generated/prisma.graphql",
      "sha": "2aa94ed611425a8b3487f21a47d6bf64450a9478",
      "url": "https://api.github.com/repositories/127307766/contents/src/generated/prisma.graphql?ref=3f0a696a4e5380f64d4c2604659d12616e301ebc",
      "git_url": "https://api.github.com/repositories/127307766/git/blobs/2aa94ed611425a8b3487f21a47d6bf64450a9478",
      "html_url": "https://github.com/cascade-mcu/cascade-backend/blob/3f0a696a4e5380f64d4c2604659d12616e301ebc/src/generated/prisma.graphql",
      "content": "# source: https://eu1.prisma.sh/cascade/backend/dev\n# timestamp: Wed Apr 25 2018 17:56:14 GMT+0300 (EEST)\n\ntype AggregateDevice {\n  count: Int!\n}\n\ntype AggregateDeviceModel {\n  count: Int!\n}\n\ntype AggregateFile {\n  count: Int!\n}\n\ntype AggregateGroup {\n  count: Int!\n}\n\ntype AggregateLocation {\n  count: Int!\n}\n\ntype AggregateLog {\n  count: Int!\n}\n\ntype AggregatePlace {\n  count: Int!\n}\n\ntype AggregatePreset {\n  count: Int!\n}\n\ntype AggregateScene {\n  count: Int!\n}\n\ntype AggregateSensor {\n  count: Int!\n}\n\ntype AggregateSensorType {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype AggregateWifiLog {\n  count: Int!\n}\n\ntype AggregateWorker {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\nscalar DateTime\n\ntype Device implements Node {\n  createdAt: DateTime!\n  id: ID!\n  updatedAt: DateTime!\n  place(where: PlaceWhereInput): Place\n  sensors(where: SensorWhereInput, orderBy: SensorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Sensor!]\n  wifiLogs(where: WifiLogWhereInput, orderBy: WifiLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [WifiLog!]\n  workers(where: WorkerWhereInput, orderBy: WorkerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Worker!]\n  groups(where: GroupWhereInput, orderBy: GroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Group!]\n  user(where: UserWhereInput): User\n  name: String\n  token: String\n  deviceModel(where: DeviceModelWhereInput): DeviceModel\n  logEveryInSeconds: Int!\n  uploadEveryInSeconds: Int!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype DeviceConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [DeviceEdge]!\n  aggregate: AggregateDevice!\n}\n\ninput DeviceCreateInput {\n  name: String\n  token: String\n  logEveryInSeconds: Int\n  uploadEveryInSeconds: Int\n  place: PlaceCreateOneWithoutDevicesInput\n  sensors: SensorCreateManyWithoutDeviceInput\n  wifiLogs: WifiLogCreateManyWithoutDeviceInput\n  workers: WorkerCreateManyWithoutDeviceInput\n  groups: GroupCreateManyWithoutDevicesInput\n  user: UserCreateOneWithoutDevicesInput\n  deviceModel: DeviceModelCreateOneWithoutDevicesInput\n}\n\ninput DeviceCreateManyWithoutDeviceModelInput {\n  create: [DeviceCreateWithoutDeviceModelInput!]\n  connect: [DeviceWhereUniqueInput!]\n}\n\ninput DeviceCreateManyWithoutGroupsInput {\n  create: [DeviceCreateWithoutGroupsInput!]\n  connect: [DeviceWhereUniqueInput!]\n}\n\ninput DeviceCreateManyWithoutPlaceInput {\n  create: [DeviceCreateWithoutPlaceInput!]\n  connect: [DeviceWhereUniqueInput!]\n}\n\ninput DeviceCreateManyWithoutUserInput {\n  create: [DeviceCreateWithoutUserInput!]\n  connect: [DeviceWhereUniqueInput!]\n}\n\ninput DeviceCreateOneWithoutSensorsInput {\n  create: DeviceCreateWithoutSensorsInput\n  connect: DeviceWhereUniqueInput\n}\n\ninput DeviceCreateOneWithoutWifiLogsInput {\n  create: DeviceCreateWithoutWifiLogsInput\n  connect: DeviceWhereUniqueInput\n}\n\ninput DeviceCreateOneWithoutWorkersInput {\n  create: DeviceCreateWithoutWorkersInput\n  connect: DeviceWhereUniqueInput\n}\n\ninput DeviceCreateWithoutDeviceModelInput {\n  name: String\n  token: String\n  logEveryInSeconds: Int\n  uploadEveryInSeconds: Int\n  place: PlaceCreateOneWithoutDevicesInput\n  sensors: SensorCreateManyWithoutDeviceInput\n  wifiLogs: WifiLogCreateManyWithoutDeviceInput\n  workers: WorkerCreateManyWithoutDeviceInput\n  groups: GroupCreateManyWithoutDevicesInput\n  user: UserCreateOneWithoutDevicesInput\n}\n\ninput DeviceCreateWithoutGroupsInput {\n  name: String\n  token: String\n  logEveryInSeconds: Int\n  uploadEveryInSeconds: Int\n  place: PlaceCreateOneWithoutDevicesInput\n  sensors: SensorCreateManyWithoutDeviceInput\n  wifiLogs: WifiLogCreateManyWithoutDeviceInput\n  workers: WorkerCreateManyWithoutDeviceInput\n  user: UserCreateOneWithoutDevicesInput\n  deviceModel: DeviceModelCreateOneWithoutDevicesInput\n}\n\ninput DeviceCreateWithoutPlaceInput {\n  name: String\n  token: String\n  logEveryInSeconds: Int\n  uploadEveryInSeconds: Int\n  sensors: SensorCreateManyWithoutDeviceInput\n  wifiLogs: WifiLogCreateManyWithoutDeviceInput\n  workers: WorkerCreateManyWithoutDeviceInput\n  groups: GroupCreateManyWithoutDevicesInput\n  user: UserCreateOneWithoutDevicesInput\n  deviceModel: DeviceModelCreateOneWithoutDevicesInput\n}\n\ninput DeviceCreateWithoutSensorsInput {\n  name: String\n  token: String\n  logEveryInSeconds: Int\n  uploadEveryInSeconds: Int\n  place: PlaceCreateOneWithoutDevicesInput\n  wifiLogs: WifiLogCreateManyWithoutDeviceInput\n  workers: WorkerCreateManyWithoutDeviceInput\n  groups: GroupCreateManyWithoutDevicesInput\n  user: UserCreateOneWithoutDevicesInput\n  deviceModel: DeviceModelCreateOneWithoutDevicesInput\n}\n\ninput DeviceCreateWithoutUserInput {\n  name: String\n  token: String\n  logEveryInSeconds: Int\n  uploadEveryInSeconds: Int\n  place: PlaceCreateOneWithoutDevicesInput\n  sensors: SensorCreateManyWithoutDeviceInput\n  wifiLogs: WifiLogCreateManyWithoutDeviceInput\n  workers: WorkerCreateManyWithoutDeviceInput\n  groups: GroupCreateManyWithoutDevicesInput\n  deviceModel: DeviceModelCreateOneWithoutDevicesInput\n}\n\ninput DeviceCreateWithoutWifiLogsInput {\n  name: String\n  token: String\n  logEveryInSeconds: Int\n  uploadEveryInSeconds: Int\n  place: PlaceCreateOneWithoutDevicesInput\n  sensors: SensorCreateManyWithoutDeviceInput\n  workers: WorkerCreateManyWithoutDeviceInput\n  groups: GroupCreateManyWithoutDevicesInput\n  user: UserCreateOneWithoutDevicesInput\n  deviceModel: DeviceModelCreateOneWithoutDevicesInput\n}\n\ninput DeviceCreateWithoutWorkersInput {\n  name: String\n  token: String\n  logEveryInSeconds: Int\n  uploadEveryInSeconds: Int\n  place: PlaceCreateOneWithoutDevicesInput\n  sensors: SensorCreateManyWithoutDeviceInput\n  wifiLogs: WifiLogCreateManyWithoutDeviceInput\n  groups: GroupCreateManyWithoutDevicesInput\n  user: UserCreateOneWithoutDevicesInput\n  deviceModel: DeviceModelCreateOneWithoutDevicesInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DeviceEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Device!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\ntype DeviceModel implements Node {\n  createdAt: DateTime!\n  name: String\n  id: ID!\n  updatedAt: DateTime!\n  devices(where: DeviceWhereInput, orderBy: DeviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Device!]\n  sensorTypes(where: SensorTypeWhereInput, orderBy: SensorTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SensorType!]\n  available: Boolean!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype DeviceModelConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [DeviceModelEdge]!\n  aggregate: AggregateDeviceModel!\n}\n\ninput DeviceModelCreateInput {\n  name: String\n  available: Boolean\n  devices: DeviceCreateManyWithoutDeviceModelInput\n  sensorTypes: SensorTypeCreateManyWithoutDeviceModelsInput\n}\n\ninput DeviceModelCreateManyWithoutSensorTypesInput {\n  create: [DeviceModelCreateWithoutSensorTypesInput!]\n  connect: [DeviceModelWhereUniqueInput!]\n}\n\ninput DeviceModelCreateOneWithoutDevicesInput {\n  create: DeviceModelCreateWithoutDevicesInput\n  connect: DeviceModelWhereUniqueInput\n}\n\ninput DeviceModelCreateWithoutDevicesInput {\n  name: String\n  available: Boolean\n  sensorTypes: SensorTypeCreateManyWithoutDeviceModelsInput\n}\n\ninput DeviceModelCreateWithoutSensorTypesInput {\n  name: String\n  available: Boolean\n  devices: DeviceCreateManyWithoutDeviceModelInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DeviceModelEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: DeviceModel!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum DeviceModelOrderByInput {\n  createdAt_ASC\n  createdAt_DESC\n  name_ASC\n  name_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  available_ASC\n  available_DESC\n}\n\ntype DeviceModelPreviousValues {\n  createdAt: DateTime!\n  name: String\n  id: ID!\n  updatedAt: DateTime!\n  available: Boolean!\n}\n\ntype DeviceModelSubscriptionPayload {\n  mutation: MutationType!\n  node: DeviceModel\n  updatedFields: [String!]\n  previousValues: DeviceModelPreviousValues\n}\n\ninput DeviceModelSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DeviceModelSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DeviceModelSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: DeviceModelWhereInput\n}\n\ninput DeviceModelUpdateInput {\n  name: String\n  available: Boolean\n  devices: DeviceUpdateManyWithoutDeviceModelInput\n  sensorTypes: SensorTypeUpdateManyWithoutDeviceModelsInput\n}\n\ninput DeviceModelUpdateManyWithoutSensorTypesInput {\n  create: [DeviceModelCreateWithoutSensorTypesInput!]\n  connect: [DeviceModelWhereUniqueInput!]\n  disconnect: [DeviceModelWhereUniqueInput!]\n  delete: [DeviceModelWhereUniqueInput!]\n  update: [DeviceModelUpdateWithWhereUniqueWithoutSensorTypesInput!]\n  upsert: [DeviceModelUpsertWithWhereUniqueWithoutSensorTypesInput!]\n}\n\ninput DeviceModelUpdateOneWithoutDevicesInput {\n  create: DeviceModelCreateWithoutDevicesInput\n  connect: DeviceModelWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: DeviceModelUpdateWithoutDevicesDataInput\n  upsert: DeviceModelUpsertWithoutDevicesInput\n}\n\ninput DeviceModelUpdateWithoutDevicesDataInput {\n  name: String\n  available: Boolean\n  sensorTypes: SensorTypeUpdateManyWithoutDeviceModelsInput\n}\n\ninput DeviceModelUpdateWithoutSensorTypesDataInput {\n  name: String\n  available: Boolean\n  devices: DeviceUpdateManyWithoutDeviceModelInput\n}\n\ninput DeviceModelUpdateWithWhereUniqueWithoutSensorTypesInput {\n  where: DeviceModelWhereUniqueInput!\n  data: DeviceModelUpdateWithoutSensorTypesDataInput!\n}\n\ninput DeviceModelUpsertWithoutDevicesInput {\n  update: DeviceModelUpdateWithoutDevicesDataInput!\n  create: DeviceModelCreateWithoutDevicesInput!\n}\n\ninput DeviceModelUpsertWithWhereUniqueWithoutSensorTypesInput {\n  where: DeviceModelWhereUniqueInput!\n  update: DeviceModelUpdateWithoutSensorTypesDataInput!\n  create: DeviceModelCreateWithoutSensorTypesInput!\n}\n\ninput DeviceModelWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DeviceModelWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DeviceModelWhereInput!]\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  available: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  available_not: Boolean\n  devices_every: DeviceWhereInput\n  devices_some: DeviceWhereInput\n  devices_none: DeviceWhereInput\n  sensorTypes_every: SensorTypeWhereInput\n  sensorTypes_some: SensorTypeWhereInput\n  sensorTypes_none: SensorTypeWhereInput\n}\n\ninput DeviceModelWhereUniqueInput {\n  id: ID\n}\n\nenum DeviceOrderByInput {\n  createdAt_ASC\n  createdAt_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  name_ASC\n  name_DESC\n  token_ASC\n  token_DESC\n  logEveryInSeconds_ASC\n  logEveryInSeconds_DESC\n  uploadEveryInSeconds_ASC\n  uploadEveryInSeconds_DESC\n}\n\ntype DevicePreviousValues {\n  createdAt: DateTime!\n  id: ID!\n  updatedAt: DateTime!\n  name: String\n  token: String\n  logEveryInSeconds: Int!\n  uploadEveryInSeconds: Int!\n}\n\ntype DeviceSubscriptionPayload {\n  mutation: MutationType!\n  node: Device\n  updatedFields: [String!]\n  previousValues: DevicePreviousValues\n}\n\ninput DeviceSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DeviceSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DeviceSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: DeviceWhereInput\n}\n\ninput DeviceUpdateInput {\n  name: String\n  token: String\n  logEveryInSeconds: Int\n  uploadEveryInSeconds: Int\n  place: PlaceUpdateOneWithoutDevicesInput\n  sensors: SensorUpdateManyWithoutDeviceInput\n  wifiLogs: WifiLogUpdateManyWithoutDeviceInput\n  workers: WorkerUpdateManyWithoutDeviceInput\n  groups: GroupUpdateManyWithoutDevicesInput\n  user: UserUpdateOneWithoutDevicesInput\n  deviceModel: DeviceModelUpdateOneWithoutDevicesInput\n}\n\ninput DeviceUpdateManyWithoutDeviceModelInput {\n  create: [DeviceCreateWithoutDeviceModelInput!]\n  connect: [DeviceWhereUniqueInput!]\n  disconnect: [DeviceWhereUniqueInput!]\n  delete: [DeviceWhereUniqueInput!]\n  update: [DeviceUpdateWithWhereUniqueWithoutDeviceModelInput!]\n  upsert: [DeviceUpsertWithWhereUniqueWithoutDeviceModelInput!]\n}\n\ninput DeviceUpdateManyWithoutGroupsInput {\n  create: [DeviceCreateWithoutGroupsInput!]\n  connect: [DeviceWhereUniqueInput!]\n  disconnect: [DeviceWhereUniqueInput!]\n  delete: [DeviceWhereUniqueInput!]\n  update: [DeviceUpdateWithWhereUniqueWithoutGroupsInput!]\n  upsert: [DeviceUpsertWithWhereUniqueWithoutGroupsInput!]\n}\n\ninput DeviceUpdateManyWithoutPlaceInput {\n  create: [DeviceCreateWithoutPlaceInput!]\n  connect: [DeviceWhereUniqueInput!]\n  disconnect: [DeviceWhereUniqueInput!]\n  delete: [DeviceWhereUniqueInput!]\n  update: [DeviceUpdateWithWhereUniqueWithoutPlaceInput!]\n  upsert: [DeviceUpsertWithWhereUniqueWithoutPlaceInput!]\n}\n\ninput DeviceUpdateManyWithoutUserInput {\n  create: [DeviceCreateWithoutUserInput!]\n  connect: [DeviceWhereUniqueInput!]\n  disconnect: [DeviceWhereUniqueInput!]\n  delete: [DeviceWhereUniqueInput!]\n  update: [DeviceUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [DeviceUpsertWithWhereUniqueWithoutUserInput!]\n}\n\ninput DeviceUpdateOneWithoutSensorsInput {\n  create: DeviceCreateWithoutSensorsInput\n  connect: DeviceWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: DeviceUpdateWithoutSensorsDataInput\n  upsert: DeviceUpsertWithoutSensorsInput\n}\n\ninput DeviceUpdateOneWithoutWifiLogsInput {\n  create: DeviceCreateWithoutWifiLogsInput\n  connect: DeviceWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: DeviceUpdateWithoutWifiLogsDataInput\n  upsert: DeviceUpsertWithoutWifiLogsInput\n}\n\ninput DeviceUpdateOneWithoutWorkersInput {\n  create: DeviceCreateWithoutWorkersInput\n  connect: DeviceWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: DeviceUpdateWithoutWorkersDataInput\n  upsert: DeviceUpsertWithoutWorkersInput\n}\n\ninput DeviceUpdateWithoutDeviceModelDataInput {\n  name: String\n  token: String\n  logEveryInSeconds: Int\n  uploadEveryInSeconds: Int\n  place: PlaceUpdateOneWithoutDevicesInput\n  sensors: SensorUpdateManyWithoutDeviceInput\n  wifiLogs: WifiLogUpdateManyWithoutDeviceInput\n  workers: WorkerUpdateManyWithoutDeviceInput\n  groups: GroupUpdateManyWithoutDevicesInput\n  user: UserUpdateOneWithoutDevicesInput\n}\n\ninput DeviceUpdateWithoutGroupsDataInput {\n  name: String\n  token: String\n  logEveryInSeconds: Int\n  uploadEveryInSeconds: Int\n  place: PlaceUpdateOneWithoutDevicesInput\n  sensors: SensorUpdateManyWithoutDeviceInput\n  wifiLogs: WifiLogUpdateManyWithoutDeviceInput\n  workers: WorkerUpdateManyWithoutDeviceInput\n  user: UserUpdateOneWithoutDevicesInput\n  deviceModel: DeviceModelUpdateOneWithoutDevicesInput\n}\n\ninput DeviceUpdateWithoutPlaceDataInput {\n  name: String\n  token: String\n  logEveryInSeconds: Int\n  uploadEveryInSeconds: Int\n  sensors: SensorUpdateManyWithoutDeviceInput\n  wifiLogs: WifiLogUpdateManyWithoutDeviceInput\n  workers: WorkerUpdateManyWithoutDeviceInput\n  groups: GroupUpdateManyWithoutDevicesInput\n  user: UserUpdateOneWithoutDevicesInput\n  deviceModel: DeviceModelUpdateOneWithoutDevicesInput\n}\n\ninput DeviceUpdateWithoutSensorsDataInput {\n  name: String\n  token: String\n  logEveryInSeconds: Int\n  uploadEveryInSeconds: Int\n  place: PlaceUpdateOneWithoutDevicesInput\n  wifiLogs: WifiLogUpdateManyWithoutDeviceInput\n  workers: WorkerUpdateManyWithoutDeviceInput\n  groups: GroupUpdateManyWithoutDevicesInput\n  user: UserUpdateOneWithoutDevicesInput\n  deviceModel: DeviceModelUpdateOneWithoutDevicesInput\n}\n\ninput DeviceUpdateWithoutUserDataInput {\n  name: String\n  token: String\n  logEveryInSeconds: Int\n  uploadEveryInSeconds: Int\n  place: PlaceUpdateOneWithoutDevicesInput\n  sensors: SensorUpdateManyWithoutDeviceInput\n  wifiLogs: WifiLogUpdateManyWithoutDeviceInput\n  workers: WorkerUpdateManyWithoutDeviceInput\n  groups: GroupUpdateManyWithoutDevicesInput\n  deviceModel: DeviceModelUpdateOneWithoutDevicesInput\n}\n\ninput DeviceUpdateWithoutWifiLogsDataInput {\n  name: String\n  token: String\n  logEveryInSeconds: Int\n  uploadEveryInSeconds: Int\n  place: PlaceUpdateOneWithoutDevicesInput\n  sensors: SensorUpdateManyWithoutDeviceInput\n  workers: WorkerUpdateManyWithoutDeviceInput\n  groups: GroupUpdateManyWithoutDevicesInput\n  user: UserUpdateOneWithoutDevicesInput\n  deviceModel: DeviceModelUpdateOneWithoutDevicesInput\n}\n\ninput DeviceUpdateWithoutWorkersDataInput {\n  name: String\n  token: String\n  logEveryInSeconds: Int\n  uploadEveryInSeconds: Int\n  place: PlaceUpdateOneWithoutDevicesInput\n  sensors: SensorUpdateManyWithoutDeviceInput\n  wifiLogs: WifiLogUpdateManyWithoutDeviceInput\n  groups: GroupUpdateManyWithoutDevicesInput\n  user: UserUpdateOneWithoutDevicesInput\n  deviceModel: DeviceModelUpdateOneWithoutDevicesInput\n}\n\ninput DeviceUpdateWithWhereUniqueWithoutDeviceModelInput {\n  where: DeviceWhereUniqueInput!\n  data: DeviceUpdateWithoutDeviceModelDataInput!\n}\n\ninput DeviceUpdateWithWhereUniqueWithoutGroupsInput {\n  where: DeviceWhereUniqueInput!\n  data: DeviceUpdateWithoutGroupsDataInput!\n}\n\ninput DeviceUpdateWithWhereUniqueWithoutPlaceInput {\n  where: DeviceWhereUniqueInput!\n  data: DeviceUpdateWithoutPlaceDataInput!\n}\n\ninput DeviceUpdateWithWhereUniqueWithoutUserInput {\n  where: DeviceWhereUniqueInput!\n  data: DeviceUpdateWithoutUserDataInput!\n}\n\ninput DeviceUpsertWithoutSensorsInput {\n  update: DeviceUpdateWithoutSensorsDataInput!\n  create: DeviceCreateWithoutSensorsInput!\n}\n\ninput DeviceUpsertWithoutWifiLogsInput {\n  update: DeviceUpdateWithoutWifiLogsDataInput!\n  create: DeviceCreateWithoutWifiLogsInput!\n}\n\ninput DeviceUpsertWithoutWorkersInput {\n  update: DeviceUpdateWithoutWorkersDataInput!\n  create: DeviceCreateWithoutWorkersInput!\n}\n\ninput DeviceUpsertWithWhereUniqueWithoutDeviceModelInput {\n  where: DeviceWhereUniqueInput!\n  update: DeviceUpdateWithoutDeviceModelDataInput!\n  create: DeviceCreateWithoutDeviceModelInput!\n}\n\ninput DeviceUpsertWithWhereUniqueWithoutGroupsInput {\n  where: DeviceWhereUniqueInput!\n  update: DeviceUpdateWithoutGroupsDataInput!\n  create: DeviceCreateWithoutGroupsInput!\n}\n\ninput DeviceUpsertWithWhereUniqueWithoutPlaceInput {\n  where: DeviceWhereUniqueInput!\n  update: DeviceUpdateWithoutPlaceDataInput!\n  create: DeviceCreateWithoutPlaceInput!\n}\n\ninput DeviceUpsertWithWhereUniqueWithoutUserInput {\n  where: DeviceWhereUniqueInput!\n  update: DeviceUpdateWithoutUserDataInput!\n  create: DeviceCreateWithoutUserInput!\n}\n\ninput DeviceWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DeviceWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DeviceWhereInput!]\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  token: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  token_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  token_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  token_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  token_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  token_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  token_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  token_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  token_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  token_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  token_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  token_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  token_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  token_not_ends_with: String\n  logEveryInSeconds: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  logEveryInSeconds_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  logEveryInSeconds_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  logEveryInSeconds_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  logEveryInSeconds_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  logEveryInSeconds_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  logEveryInSeconds_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  logEveryInSeconds_gte: Int\n  uploadEveryInSeconds: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  uploadEveryInSeconds_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  uploadEveryInSeconds_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  uploadEveryInSeconds_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  uploadEveryInSeconds_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  uploadEveryInSeconds_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  uploadEveryInSeconds_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  uploadEveryInSeconds_gte: Int\n  place: PlaceWhereInput\n  sensors_every: SensorWhereInput\n  sensors_some: SensorWhereInput\n  sensors_none: SensorWhereInput\n  wifiLogs_every: WifiLogWhereInput\n  wifiLogs_some: WifiLogWhereInput\n  wifiLogs_none: WifiLogWhereInput\n  workers_every: WorkerWhereInput\n  workers_some: WorkerWhereInput\n  workers_none: WorkerWhereInput\n  groups_every: GroupWhereInput\n  groups_some: GroupWhereInput\n  groups_none: GroupWhereInput\n  user: UserWhereInput\n  deviceModel: DeviceModelWhereInput\n}\n\ninput DeviceWhereUniqueInput {\n  id: ID\n}\n\ntype File implements Node {\n  contentType: String!\n  createdAt: DateTime!\n  id: ID!\n  name: String!\n  secret: String!\n  size: Int!\n  updatedAt: DateTime!\n  url: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FileConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FileEdge]!\n  aggregate: AggregateFile!\n}\n\ninput FileCreateInput {\n  contentType: String!\n  name: String!\n  secret: String!\n  size: Int!\n  url: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FileEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: File!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum FileOrderByInput {\n  contentType_ASC\n  contentType_DESC\n  createdAt_ASC\n  createdAt_DESC\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  secret_ASC\n  secret_DESC\n  size_ASC\n  size_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  url_ASC\n  url_DESC\n}\n\ntype FilePreviousValues {\n  contentType: String!\n  createdAt: DateTime!\n  id: ID!\n  name: String!\n  secret: String!\n  size: Int!\n  updatedAt: DateTime!\n  url: String!\n}\n\ntype FileSubscriptionPayload {\n  mutation: MutationType!\n  node: File\n  updatedFields: [String!]\n  previousValues: FilePreviousValues\n}\n\ninput FileSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [FileSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [FileSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FileWhereInput\n}\n\ninput FileUpdateInput {\n  contentType: String\n  name: String\n  secret: String\n  size: Int\n  url: String\n}\n\ninput FileWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [FileWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [FileWhereInput!]\n  contentType: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  contentType_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  contentType_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  contentType_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  contentType_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  contentType_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  contentType_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  contentType_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  contentType_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  contentType_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  contentType_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  contentType_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  contentType_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  contentType_not_ends_with: String\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  secret: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  secret_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  secret_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  secret_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  secret_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  secret_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  secret_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  secret_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  secret_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  secret_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  secret_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  secret_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  secret_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  secret_not_ends_with: String\n  size: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  size_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  size_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  size_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  size_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  size_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  size_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  size_gte: Int\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  url: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  url_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  url_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  url_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  url_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  url_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  url_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  url_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  url_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  url_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  url_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  url_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  url_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  url_not_ends_with: String\n}\n\ninput FileWhereUniqueInput {\n  id: ID\n}\n\ntype Group implements Node {\n  createdAt: DateTime!\n  name: String\n  devices(where: DeviceWhereInput, orderBy: DeviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Device!]\n  id: ID!\n  updatedAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype GroupConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [GroupEdge]!\n  aggregate: AggregateGroup!\n}\n\ninput GroupCreateInput {\n  name: String\n  devices: DeviceCreateManyWithoutGroupsInput\n}\n\ninput GroupCreateManyWithoutDevicesInput {\n  create: [GroupCreateWithoutDevicesInput!]\n  connect: [GroupWhereUniqueInput!]\n}\n\ninput GroupCreateWithoutDevicesInput {\n  name: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype GroupEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Group!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum GroupOrderByInput {\n  createdAt_ASC\n  createdAt_DESC\n  name_ASC\n  name_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype GroupPreviousValues {\n  createdAt: DateTime!\n  name: String\n  id: ID!\n  updatedAt: DateTime!\n}\n\ntype GroupSubscriptionPayload {\n  mutation: MutationType!\n  node: Group\n  updatedFields: [String!]\n  previousValues: GroupPreviousValues\n}\n\ninput GroupSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [GroupSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [GroupSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: GroupWhereInput\n}\n\ninput GroupUpdateInput {\n  name: String\n  devices: DeviceUpdateManyWithoutGroupsInput\n}\n\ninput GroupUpdateManyWithoutDevicesInput {\n  create: [GroupCreateWithoutDevicesInput!]\n  connect: [GroupWhereUniqueInput!]\n  disconnect: [GroupWhereUniqueInput!]\n  delete: [GroupWhereUniqueInput!]\n  update: [GroupUpdateWithWhereUniqueWithoutDevicesInput!]\n  upsert: [GroupUpsertWithWhereUniqueWithoutDevicesInput!]\n}\n\ninput GroupUpdateWithoutDevicesDataInput {\n  name: String\n}\n\ninput GroupUpdateWithWhereUniqueWithoutDevicesInput {\n  where: GroupWhereUniqueInput!\n  data: GroupUpdateWithoutDevicesDataInput!\n}\n\ninput GroupUpsertWithWhereUniqueWithoutDevicesInput {\n  where: GroupWhereUniqueInput!\n  update: GroupUpdateWithoutDevicesDataInput!\n  create: GroupCreateWithoutDevicesInput!\n}\n\ninput GroupWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [GroupWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [GroupWhereInput!]\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  devices_every: DeviceWhereInput\n  devices_some: DeviceWhereInput\n  devices_none: DeviceWhereInput\n}\n\ninput GroupWhereUniqueInput {\n  id: ID\n}\n\ntype Location implements Node {\n  name: String\n  id: ID!\n  places(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Place!]\n  defaultPlace(where: PlaceWhereInput): Place\n  updatedAt: DateTime!\n  createdAt: DateTime!\n  user(where: UserWhereInput): User\n  userDefault(where: UserWhereInput): User\n  scenes(where: SceneWhereInput, orderBy: SceneOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Scene!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LocationConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LocationEdge]!\n  aggregate: AggregateLocation!\n}\n\ninput LocationCreateInput {\n  name: String\n  places: PlaceCreateManyWithoutLocationInput\n  defaultPlace: PlaceCreateOneWithoutLocationDefaultInput\n  user: UserCreateOneWithoutLocationsInput\n  userDefault: UserCreateOneWithoutDefaultLocationInput\n  scenes: SceneCreateManyWithoutLocationInput\n}\n\ninput LocationCreateManyWithoutUserInput {\n  create: [LocationCreateWithoutUserInput!]\n  connect: [LocationWhereUniqueInput!]\n}\n\ninput LocationCreateOneWithoutDefaultPlaceInput {\n  create: LocationCreateWithoutDefaultPlaceInput\n  connect: LocationWhereUniqueInput\n}\n\ninput LocationCreateOneWithoutPlacesInput {\n  create: LocationCreateWithoutPlacesInput\n  connect: LocationWhereUniqueInput\n}\n\ninput LocationCreateOneWithoutScenesInput {\n  create: LocationCreateWithoutScenesInput\n  connect: LocationWhereUniqueInput\n}\n\ninput LocationCreateOneWithoutUserDefaultInput {\n  create: LocationCreateWithoutUserDefaultInput\n  connect: LocationWhereUniqueInput\n}\n\ninput LocationCreateWithoutDefaultPlaceInput {\n  name: String\n  places: PlaceCreateManyWithoutLocationInput\n  user: UserCreateOneWithoutLocationsInput\n  userDefault: UserCreateOneWithoutDefaultLocationInput\n  scenes: SceneCreateManyWithoutLocationInput\n}\n\ninput LocationCreateWithoutPlacesInput {\n  name: String\n  defaultPlace: PlaceCreateOneWithoutLocationDefaultInput\n  user: UserCreateOneWithoutLocationsInput\n  userDefault: UserCreateOneWithoutDefaultLocationInput\n  scenes: SceneCreateManyWithoutLocationInput\n}\n\ninput LocationCreateWithoutScenesInput {\n  name: String\n  places: PlaceCreateManyWithoutLocationInput\n  defaultPlace: PlaceCreateOneWithoutLocationDefaultInput\n  user: UserCreateOneWithoutLocationsInput\n  userDefault: UserCreateOneWithoutDefaultLocationInput\n}\n\ninput LocationCreateWithoutUserDefaultInput {\n  name: String\n  places: PlaceCreateManyWithoutLocationInput\n  defaultPlace: PlaceCreateOneWithoutLocationDefaultInput\n  user: UserCreateOneWithoutLocationsInput\n  scenes: SceneCreateManyWithoutLocationInput\n}\n\ninput LocationCreateWithoutUserInput {\n  name: String\n  places: PlaceCreateManyWithoutLocationInput\n  defaultPlace: PlaceCreateOneWithoutLocationDefaultInput\n  userDefault: UserCreateOneWithoutDefaultLocationInput\n  scenes: SceneCreateManyWithoutLocationInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LocationEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Location!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum LocationOrderByInput {\n  name_ASC\n  name_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype LocationPreviousValues {\n  name: String\n  id: ID!\n  updatedAt: DateTime!\n  createdAt: DateTime!\n}\n\ntype LocationSubscriptionPayload {\n  mutation: MutationType!\n  node: Location\n  updatedFields: [String!]\n  previousValues: LocationPreviousValues\n}\n\ninput LocationSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [LocationSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [LocationSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LocationWhereInput\n}\n\ninput LocationUpdateInput {\n  name: String\n  places: PlaceUpdateManyWithoutLocationInput\n  defaultPlace: PlaceUpdateOneWithoutLocationDefaultInput\n  user: UserUpdateOneWithoutLocationsInput\n  userDefault: UserUpdateOneWithoutDefaultLocationInput\n  scenes: SceneUpdateManyWithoutLocationInput\n}\n\ninput LocationUpdateManyWithoutUserInput {\n  create: [LocationCreateWithoutUserInput!]\n  connect: [LocationWhereUniqueInput!]\n  disconnect: [LocationWhereUniqueInput!]\n  delete: [LocationWhereUniqueInput!]\n  update: [LocationUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [LocationUpsertWithWhereUniqueWithoutUserInput!]\n}\n\ninput LocationUpdateOneWithoutDefaultPlaceInput {\n  create: LocationCreateWithoutDefaultPlaceInput\n  connect: LocationWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: LocationUpdateWithoutDefaultPlaceDataInput\n  upsert: LocationUpsertWithoutDefaultPlaceInput\n}\n\ninput LocationUpdateOneWithoutPlacesInput {\n  create: LocationCreateWithoutPlacesInput\n  connect: LocationWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: LocationUpdateWithoutPlacesDataInput\n  upsert: LocationUpsertWithoutPlacesInput\n}\n\ninput LocationUpdateOneWithoutScenesInput {\n  create: LocationCreateWithoutScenesInput\n  connect: LocationWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: LocationUpdateWithoutScenesDataInput\n  upsert: LocationUpsertWithoutScenesInput\n}\n\ninput LocationUpdateOneWithoutUserDefaultInput {\n  create: LocationCreateWithoutUserDefaultInput\n  connect: LocationWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: LocationUpdateWithoutUserDefaultDataInput\n  upsert: LocationUpsertWithoutUserDefaultInput\n}\n\ninput LocationUpdateWithoutDefaultPlaceDataInput {\n  name: String\n  places: PlaceUpdateManyWithoutLocationInput\n  user: UserUpdateOneWithoutLocationsInput\n  userDefault: UserUpdateOneWithoutDefaultLocationInput\n  scenes: SceneUpdateManyWithoutLocationInput\n}\n\ninput LocationUpdateWithoutPlacesDataInput {\n  name: String\n  defaultPlace: PlaceUpdateOneWithoutLocationDefaultInput\n  user: UserUpdateOneWithoutLocationsInput\n  userDefault: UserUpdateOneWithoutDefaultLocationInput\n  scenes: SceneUpdateManyWithoutLocationInput\n}\n\ninput LocationUpdateWithoutScenesDataInput {\n  name: String\n  places: PlaceUpdateManyWithoutLocationInput\n  defaultPlace: PlaceUpdateOneWithoutLocationDefaultInput\n  user: UserUpdateOneWithoutLocationsInput\n  userDefault: UserUpdateOneWithoutDefaultLocationInput\n}\n\ninput LocationUpdateWithoutUserDataInput {\n  name: String\n  places: PlaceUpdateManyWithoutLocationInput\n  defaultPlace: PlaceUpdateOneWithoutLocationDefaultInput\n  userDefault: UserUpdateOneWithoutDefaultLocationInput\n  scenes: SceneUpdateManyWithoutLocationInput\n}\n\ninput LocationUpdateWithoutUserDefaultDataInput {\n  name: String\n  places: PlaceUpdateManyWithoutLocationInput\n  defaultPlace: PlaceUpdateOneWithoutLocationDefaultInput\n  user: UserUpdateOneWithoutLocationsInput\n  scenes: SceneUpdateManyWithoutLocationInput\n}\n\ninput LocationUpdateWithWhereUniqueWithoutUserInput {\n  where: LocationWhereUniqueInput!\n  data: LocationUpdateWithoutUserDataInput!\n}\n\ninput LocationUpsertWithoutDefaultPlaceInput {\n  update: LocationUpdateWithoutDefaultPlaceDataInput!\n  create: LocationCreateWithoutDefaultPlaceInput!\n}\n\ninput LocationUpsertWithoutPlacesInput {\n  update: LocationUpdateWithoutPlacesDataInput!\n  create: LocationCreateWithoutPlacesInput!\n}\n\ninput LocationUpsertWithoutScenesInput {\n  update: LocationUpdateWithoutScenesDataInput!\n  create: LocationCreateWithoutScenesInput!\n}\n\ninput LocationUpsertWithoutUserDefaultInput {\n  update: LocationUpdateWithoutUserDefaultDataInput!\n  create: LocationCreateWithoutUserDefaultInput!\n}\n\ninput LocationUpsertWithWhereUniqueWithoutUserInput {\n  where: LocationWhereUniqueInput!\n  update: LocationUpdateWithoutUserDataInput!\n  create: LocationCreateWithoutUserInput!\n}\n\ninput LocationWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [LocationWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [LocationWhereInput!]\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  places_every: PlaceWhereInput\n  places_some: PlaceWhereInput\n  places_none: PlaceWhereInput\n  defaultPlace: PlaceWhereInput\n  user: UserWhereInput\n  userDefault: UserWhereInput\n  scenes_every: SceneWhereInput\n  scenes_some: SceneWhereInput\n  scenes_none: SceneWhereInput\n}\n\ninput LocationWhereUniqueInput {\n  id: ID\n}\n\ntype Log implements Node {\n  readingTime: DateTime\n  createdAt: DateTime!\n  sensor(where: SensorWhereInput): Sensor\n  id: ID!\n  updatedAt: DateTime!\n  value: Float!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LogConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LogEdge]!\n  aggregate: AggregateLog!\n}\n\ninput LogCreateInput {\n  readingTime: DateTime\n  value: Float!\n  sensor: SensorCreateOneWithoutLogsInput\n}\n\ninput LogCreateManyWithoutSensorInput {\n  create: [LogCreateWithoutSensorInput!]\n  connect: [LogWhereUniqueInput!]\n}\n\ninput LogCreateWithoutSensorInput {\n  readingTime: DateTime\n  value: Float!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LogEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Log!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum LogOrderByInput {\n  readingTime_ASC\n  readingTime_DESC\n  createdAt_ASC\n  createdAt_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  value_ASC\n  value_DESC\n}\n\ntype LogPreviousValues {\n  readingTime: DateTime\n  createdAt: DateTime!\n  id: ID!\n  updatedAt: DateTime!\n  value: Float!\n}\n\ntype LogSubscriptionPayload {\n  mutation: MutationType!\n  node: Log\n  updatedFields: [String!]\n  previousValues: LogPreviousValues\n}\n\ninput LogSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [LogSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [LogSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LogWhereInput\n}\n\ninput LogUpdateInput {\n  readingTime: DateTime\n  value: Float\n  sensor: SensorUpdateOneWithoutLogsInput\n}\n\ninput LogUpdateManyWithoutSensorInput {\n  create: [LogCreateWithoutSensorInput!]\n  connect: [LogWhereUniqueInput!]\n  disconnect: [LogWhereUniqueInput!]\n  delete: [LogWhereUniqueInput!]\n  update: [LogUpdateWithWhereUniqueWithoutSensorInput!]\n  upsert: [LogUpsertWithWhereUniqueWithoutSensorInput!]\n}\n\ninput LogUpdateWithoutSensorDataInput {\n  readingTime: DateTime\n  value: Float\n}\n\ninput LogUpdateWithWhereUniqueWithoutSensorInput {\n  where: LogWhereUniqueInput!\n  data: LogUpdateWithoutSensorDataInput!\n}\n\ninput LogUpsertWithWhereUniqueWithoutSensorInput {\n  where: LogWhereUniqueInput!\n  update: LogUpdateWithoutSensorDataInput!\n  create: LogCreateWithoutSensorInput!\n}\n\ninput LogWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [LogWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [LogWhereInput!]\n  readingTime: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  readingTime_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  readingTime_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  readingTime_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  readingTime_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  readingTime_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  readingTime_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  readingTime_gte: DateTime\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  value: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  value_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  value_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  value_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  value_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  value_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  value_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  value_gte: Float\n  sensor: SensorWhereInput\n}\n\ninput LogWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createFile(data: FileCreateInput!): File!\n  createUser(data: UserCreateInput!): User!\n  createDevice(data: DeviceCreateInput!): Device!\n  createDeviceModel(data: DeviceModelCreateInput!): DeviceModel!\n  createSensorType(data: SensorTypeCreateInput!): SensorType!\n  createPreset: Preset!\n  createGroup(data: GroupCreateInput!): Group!\n  createSensor(data: SensorCreateInput!): Sensor!\n  createWifiLog(data: WifiLogCreateInput!): WifiLog!\n  createWorker(data: WorkerCreateInput!): Worker!\n  createLog(data: LogCreateInput!): Log!\n  createScene(data: SceneCreateInput!): Scene!\n  createPlace(data: PlaceCreateInput!): Place!\n  createLocation(data: LocationCreateInput!): Location!\n  updateFile(data: FileUpdateInput!, where: FileWhereUniqueInput!): File\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateDevice(data: DeviceUpdateInput!, where: DeviceWhereUniqueInput!): Device\n  updateDeviceModel(data: DeviceModelUpdateInput!, where: DeviceModelWhereUniqueInput!): DeviceModel\n  updateSensorType(data: SensorTypeUpdateInput!, where: SensorTypeWhereUniqueInput!): SensorType\n  updateGroup(data: GroupUpdateInput!, where: GroupWhereUniqueInput!): Group\n  updateSensor(data: SensorUpdateInput!, where: SensorWhereUniqueInput!): Sensor\n  updateWifiLog(data: WifiLogUpdateInput!, where: WifiLogWhereUniqueInput!): WifiLog\n  updateWorker(data: WorkerUpdateInput!, where: WorkerWhereUniqueInput!): Worker\n  updateLog(data: LogUpdateInput!, where: LogWhereUniqueInput!): Log\n  updateScene(data: SceneUpdateInput!, where: SceneWhereUniqueInput!): Scene\n  updatePlace(data: PlaceUpdateInput!, where: PlaceWhereUniqueInput!): Place\n  updateLocation(data: LocationUpdateInput!, where: LocationWhereUniqueInput!): Location\n  deleteFile(where: FileWhereUniqueInput!): File\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteDevice(where: DeviceWhereUniqueInput!): Device\n  deleteDeviceModel(where: DeviceModelWhereUniqueInput!): DeviceModel\n  deleteSensorType(where: SensorTypeWhereUniqueInput!): SensorType\n  deletePreset(where: PresetWhereUniqueInput!): Preset\n  deleteGroup(where: GroupWhereUniqueInput!): Group\n  deleteSensor(where: SensorWhereUniqueInput!): Sensor\n  deleteWifiLog(where: WifiLogWhereUniqueInput!): WifiLog\n  deleteWorker(where: WorkerWhereUniqueInput!): Worker\n  deleteLog(where: LogWhereUniqueInput!): Log\n  deleteScene(where: SceneWhereUniqueInput!): Scene\n  deletePlace(where: PlaceWhereUniqueInput!): Place\n  deleteLocation(where: LocationWhereUniqueInput!): Location\n  upsertFile(where: FileWhereUniqueInput!, create: FileCreateInput!, update: FileUpdateInput!): File!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertDevice(where: DeviceWhereUniqueInput!, create: DeviceCreateInput!, update: DeviceUpdateInput!): Device!\n  upsertDeviceModel(where: DeviceModelWhereUniqueInput!, create: DeviceModelCreateInput!, update: DeviceModelUpdateInput!): DeviceModel!\n  upsertSensorType(where: SensorTypeWhereUniqueInput!, create: SensorTypeCreateInput!, update: SensorTypeUpdateInput!): SensorType!\n  upsertGroup(where: GroupWhereUniqueInput!, create: GroupCreateInput!, update: GroupUpdateInput!): Group!\n  upsertSensor(where: SensorWhereUniqueInput!, create: SensorCreateInput!, update: SensorUpdateInput!): Sensor!\n  upsertWifiLog(where: WifiLogWhereUniqueInput!, create: WifiLogCreateInput!, update: WifiLogUpdateInput!): WifiLog!\n  upsertWorker(where: WorkerWhereUniqueInput!, create: WorkerCreateInput!, update: WorkerUpdateInput!): Worker!\n  upsertLog(where: LogWhereUniqueInput!, create: LogCreateInput!, update: LogUpdateInput!): Log!\n  upsertScene(where: SceneWhereUniqueInput!, create: SceneCreateInput!, update: SceneUpdateInput!): Scene!\n  upsertPlace(where: PlaceWhereUniqueInput!, create: PlaceCreateInput!, update: PlaceUpdateInput!): Place!\n  upsertLocation(where: LocationWhereUniqueInput!, create: LocationCreateInput!, update: LocationUpdateInput!): Location!\n  updateManyFiles(data: FileUpdateInput!, where: FileWhereInput): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  updateManyDevices(data: DeviceUpdateInput!, where: DeviceWhereInput): BatchPayload!\n  updateManyDeviceModels(data: DeviceModelUpdateInput!, where: DeviceModelWhereInput): BatchPayload!\n  updateManySensorTypes(data: SensorTypeUpdateInput!, where: SensorTypeWhereInput): BatchPayload!\n  updateManyGroups(data: GroupUpdateInput!, where: GroupWhereInput): BatchPayload!\n  updateManySensors(data: SensorUpdateInput!, where: SensorWhereInput): BatchPayload!\n  updateManyWifiLogs(data: WifiLogUpdateInput!, where: WifiLogWhereInput): BatchPayload!\n  updateManyWorkers(data: WorkerUpdateInput!, where: WorkerWhereInput): BatchPayload!\n  updateManyLogs(data: LogUpdateInput!, where: LogWhereInput): BatchPayload!\n  updateManyScenes(data: SceneUpdateInput!, where: SceneWhereInput): BatchPayload!\n  updateManyPlaces(data: PlaceUpdateInput!, where: PlaceWhereInput): BatchPayload!\n  updateManyLocations(data: LocationUpdateInput!, where: LocationWhereInput): BatchPayload!\n  deleteManyFiles(where: FileWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyDevices(where: DeviceWhereInput): BatchPayload!\n  deleteManyDeviceModels(where: DeviceModelWhereInput): BatchPayload!\n  deleteManySensorTypes(where: SensorTypeWhereInput): BatchPayload!\n  deleteManyPresets(where: PresetWhereInput): BatchPayload!\n  deleteManyGroups(where: GroupWhereInput): BatchPayload!\n  deleteManySensors(where: SensorWhereInput): BatchPayload!\n  deleteManyWifiLogs(where: WifiLogWhereInput): BatchPayload!\n  deleteManyWorkers(where: WorkerWhereInput): BatchPayload!\n  deleteManyLogs(where: LogWhereInput): BatchPayload!\n  deleteManyScenes(where: SceneWhereInput): BatchPayload!\n  deleteManyPlaces(where: PlaceWhereInput): BatchPayload!\n  deleteManyLocations(where: LocationWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Place implements Node {\n  name: String\n  id: ID!\n  location(where: LocationWhereInput): Location\n  locationDefault(where: LocationWhereInput): Location\n  devices(where: DeviceWhereInput, orderBy: DeviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Device!]\n  updatedAt: DateTime!\n  createdAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PlaceConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PlaceEdge]!\n  aggregate: AggregatePlace!\n}\n\ninput PlaceCreateInput {\n  name: String\n  location: LocationCreateOneWithoutPlacesInput\n  locationDefault: LocationCreateOneWithoutDefaultPlaceInput\n  devices: DeviceCreateManyWithoutPlaceInput\n}\n\ninput PlaceCreateManyWithoutLocationInput {\n  create: [PlaceCreateWithoutLocationInput!]\n  connect: [PlaceWhereUniqueInput!]\n}\n\ninput PlaceCreateOneWithoutDevicesInput {\n  create: PlaceCreateWithoutDevicesInput\n  connect: PlaceWhereUniqueInput\n}\n\ninput PlaceCreateOneWithoutLocationDefaultInput {\n  create: PlaceCreateWithoutLocationDefaultInput\n  connect: PlaceWhereUniqueInput\n}\n\ninput PlaceCreateWithoutDevicesInput {\n  name: String\n  location: LocationCreateOneWithoutPlacesInput\n  locationDefault: LocationCreateOneWithoutDefaultPlaceInput\n}\n\ninput PlaceCreateWithoutLocationDefaultInput {\n  name: String\n  location: LocationCreateOneWithoutPlacesInput\n  devices: DeviceCreateManyWithoutPlaceInput\n}\n\ninput PlaceCreateWithoutLocationInput {\n  name: String\n  locationDefault: LocationCreateOneWithoutDefaultPlaceInput\n  devices: DeviceCreateManyWithoutPlaceInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PlaceEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Place!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum PlaceOrderByInput {\n  name_ASC\n  name_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PlacePreviousValues {\n  name: String\n  id: ID!\n  updatedAt: DateTime!\n  createdAt: DateTime!\n}\n\ntype PlaceSubscriptionPayload {\n  mutation: MutationType!\n  node: Place\n  updatedFields: [String!]\n  previousValues: PlacePreviousValues\n}\n\ninput PlaceSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PlaceSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PlaceSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PlaceWhereInput\n}\n\ninput PlaceUpdateInput {\n  name: String\n  location: LocationUpdateOneWithoutPlacesInput\n  locationDefault: LocationUpdateOneWithoutDefaultPlaceInput\n  devices: DeviceUpdateManyWithoutPlaceInput\n}\n\ninput PlaceUpdateManyWithoutLocationInput {\n  create: [PlaceCreateWithoutLocationInput!]\n  connect: [PlaceWhereUniqueInput!]\n  disconnect: [PlaceWhereUniqueInput!]\n  delete: [PlaceWhereUniqueInput!]\n  update: [PlaceUpdateWithWhereUniqueWithoutLocationInput!]\n  upsert: [PlaceUpsertWithWhereUniqueWithoutLocationInput!]\n}\n\ninput PlaceUpdateOneWithoutDevicesInput {\n  create: PlaceCreateWithoutDevicesInput\n  connect: PlaceWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: PlaceUpdateWithoutDevicesDataInput\n  upsert: PlaceUpsertWithoutDevicesInput\n}\n\ninput PlaceUpdateOneWithoutLocationDefaultInput {\n  create: PlaceCreateWithoutLocationDefaultInput\n  connect: PlaceWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: PlaceUpdateWithoutLocationDefaultDataInput\n  upsert: PlaceUpsertWithoutLocationDefaultInput\n}\n\ninput PlaceUpdateWithoutDevicesDataInput {\n  name: String\n  location: LocationUpdateOneWithoutPlacesInput\n  locationDefault: LocationUpdateOneWithoutDefaultPlaceInput\n}\n\ninput PlaceUpdateWithoutLocationDataInput {\n  name: String\n  locationDefault: LocationUpdateOneWithoutDefaultPlaceInput\n  devices: DeviceUpdateManyWithoutPlaceInput\n}\n\ninput PlaceUpdateWithoutLocationDefaultDataInput {\n  name: String\n  location: LocationUpdateOneWithoutPlacesInput\n  devices: DeviceUpdateManyWithoutPlaceInput\n}\n\ninput PlaceUpdateWithWhereUniqueWithoutLocationInput {\n  where: PlaceWhereUniqueInput!\n  data: PlaceUpdateWithoutLocationDataInput!\n}\n\ninput PlaceUpsertWithoutDevicesInput {\n  update: PlaceUpdateWithoutDevicesDataInput!\n  create: PlaceCreateWithoutDevicesInput!\n}\n\ninput PlaceUpsertWithoutLocationDefaultInput {\n  update: PlaceUpdateWithoutLocationDefaultDataInput!\n  create: PlaceCreateWithoutLocationDefaultInput!\n}\n\ninput PlaceUpsertWithWhereUniqueWithoutLocationInput {\n  where: PlaceWhereUniqueInput!\n  update: PlaceUpdateWithoutLocationDataInput!\n  create: PlaceCreateWithoutLocationInput!\n}\n\ninput PlaceWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PlaceWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PlaceWhereInput!]\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  location: LocationWhereInput\n  locationDefault: LocationWhereInput\n  devices_every: DeviceWhereInput\n  devices_some: DeviceWhereInput\n  devices_none: DeviceWhereInput\n}\n\ninput PlaceWhereUniqueInput {\n  id: ID\n}\n\ntype Preset implements Node {\n  createdAt: DateTime!\n  id: ID!\n  updatedAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PresetConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PresetEdge]!\n  aggregate: AggregatePreset!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PresetEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Preset!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum PresetOrderByInput {\n  createdAt_ASC\n  createdAt_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype PresetPreviousValues {\n  createdAt: DateTime!\n  id: ID!\n  updatedAt: DateTime!\n}\n\ntype PresetSubscriptionPayload {\n  mutation: MutationType!\n  node: Preset\n  updatedFields: [String!]\n  previousValues: PresetPreviousValues\n}\n\ninput PresetSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PresetSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PresetSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PresetWhereInput\n}\n\ninput PresetWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PresetWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PresetWhereInput!]\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n}\n\ninput PresetWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  files(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [File]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  devices(where: DeviceWhereInput, orderBy: DeviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Device]!\n  deviceModels(where: DeviceModelWhereInput, orderBy: DeviceModelOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DeviceModel]!\n  sensorTypes(where: SensorTypeWhereInput, orderBy: SensorTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SensorType]!\n  presets(where: PresetWhereInput, orderBy: PresetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Preset]!\n  groups(where: GroupWhereInput, orderBy: GroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Group]!\n  sensors(where: SensorWhereInput, orderBy: SensorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Sensor]!\n  wifiLogs(where: WifiLogWhereInput, orderBy: WifiLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [WifiLog]!\n  workers(where: WorkerWhereInput, orderBy: WorkerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Worker]!\n  logs(where: LogWhereInput, orderBy: LogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Log]!\n  scenes(where: SceneWhereInput, orderBy: SceneOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Scene]!\n  places(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Place]!\n  locations(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Location]!\n  file(where: FileWhereUniqueInput!): File\n  user(where: UserWhereUniqueInput!): User\n  device(where: DeviceWhereUniqueInput!): Device\n  deviceModel(where: DeviceModelWhereUniqueInput!): DeviceModel\n  sensorType(where: SensorTypeWhereUniqueInput!): SensorType\n  preset(where: PresetWhereUniqueInput!): Preset\n  group(where: GroupWhereUniqueInput!): Group\n  sensor(where: SensorWhereUniqueInput!): Sensor\n  wifiLog(where: WifiLogWhereUniqueInput!): WifiLog\n  worker(where: WorkerWhereUniqueInput!): Worker\n  log(where: LogWhereUniqueInput!): Log\n  scene(where: SceneWhereUniqueInput!): Scene\n  place(where: PlaceWhereUniqueInput!): Place\n  location(where: LocationWhereUniqueInput!): Location\n  filesConnection(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FileConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  devicesConnection(where: DeviceWhereInput, orderBy: DeviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DeviceConnection!\n  deviceModelsConnection(where: DeviceModelWhereInput, orderBy: DeviceModelOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DeviceModelConnection!\n  sensorTypesConnection(where: SensorTypeWhereInput, orderBy: SensorTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SensorTypeConnection!\n  presetsConnection(where: PresetWhereInput, orderBy: PresetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PresetConnection!\n  groupsConnection(where: GroupWhereInput, orderBy: GroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GroupConnection!\n  sensorsConnection(where: SensorWhereInput, orderBy: SensorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SensorConnection!\n  wifiLogsConnection(where: WifiLogWhereInput, orderBy: WifiLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WifiLogConnection!\n  workersConnection(where: WorkerWhereInput, orderBy: WorkerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WorkerConnection!\n  logsConnection(where: LogWhereInput, orderBy: LogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LogConnection!\n  scenesConnection(where: SceneWhereInput, orderBy: SceneOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SceneConnection!\n  placesConnection(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PlaceConnection!\n  locationsConnection(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LocationConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Scene implements Node {\n  name: String\n  id: ID!\n  location(where: LocationWhereInput): Location\n  updatedAt: DateTime!\n  createdAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype SceneConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [SceneEdge]!\n  aggregate: AggregateScene!\n}\n\ninput SceneCreateInput {\n  name: String\n  location: LocationCreateOneWithoutScenesInput\n}\n\ninput SceneCreateManyWithoutLocationInput {\n  create: [SceneCreateWithoutLocationInput!]\n  connect: [SceneWhereUniqueInput!]\n}\n\ninput SceneCreateWithoutLocationInput {\n  name: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SceneEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Scene!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum SceneOrderByInput {\n  name_ASC\n  name_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ScenePreviousValues {\n  name: String\n  id: ID!\n  updatedAt: DateTime!\n  createdAt: DateTime!\n}\n\ntype SceneSubscriptionPayload {\n  mutation: MutationType!\n  node: Scene\n  updatedFields: [String!]\n  previousValues: ScenePreviousValues\n}\n\ninput SceneSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [SceneSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [SceneSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SceneWhereInput\n}\n\ninput SceneUpdateInput {\n  name: String\n  location: LocationUpdateOneWithoutScenesInput\n}\n\ninput SceneUpdateManyWithoutLocationInput {\n  create: [SceneCreateWithoutLocationInput!]\n  connect: [SceneWhereUniqueInput!]\n  disconnect: [SceneWhereUniqueInput!]\n  delete: [SceneWhereUniqueInput!]\n  update: [SceneUpdateWithWhereUniqueWithoutLocationInput!]\n  upsert: [SceneUpsertWithWhereUniqueWithoutLocationInput!]\n}\n\ninput SceneUpdateWithoutLocationDataInput {\n  name: String\n}\n\ninput SceneUpdateWithWhereUniqueWithoutLocationInput {\n  where: SceneWhereUniqueInput!\n  data: SceneUpdateWithoutLocationDataInput!\n}\n\ninput SceneUpsertWithWhereUniqueWithoutLocationInput {\n  where: SceneWhereUniqueInput!\n  update: SceneUpdateWithoutLocationDataInput!\n  create: SceneCreateWithoutLocationInput!\n}\n\ninput SceneWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [SceneWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [SceneWhereInput!]\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  location: LocationWhereInput\n}\n\ninput SceneWhereUniqueInput {\n  id: ID\n}\n\ntype Sensor implements Node {\n  createdAt: DateTime!\n  device(where: DeviceWhereInput): Device\n  logs(where: LogWhereInput, orderBy: LogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Log!]\n  id: ID!\n  updatedAt: DateTime!\n  sensorType(where: SensorTypeWhereInput): SensorType\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype SensorConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [SensorEdge]!\n  aggregate: AggregateSensor!\n}\n\ninput SensorCreateInput {\n  device: DeviceCreateOneWithoutSensorsInput\n  logs: LogCreateManyWithoutSensorInput\n  sensorType: SensorTypeCreateOneWithoutSensorsInput\n}\n\ninput SensorCreateManyWithoutDeviceInput {\n  create: [SensorCreateWithoutDeviceInput!]\n  connect: [SensorWhereUniqueInput!]\n}\n\ninput SensorCreateManyWithoutSensorTypeInput {\n  create: [SensorCreateWithoutSensorTypeInput!]\n  connect: [SensorWhereUniqueInput!]\n}\n\ninput SensorCreateOneWithoutLogsInput {\n  create: SensorCreateWithoutLogsInput\n  connect: SensorWhereUniqueInput\n}\n\ninput SensorCreateWithoutDeviceInput {\n  logs: LogCreateManyWithoutSensorInput\n  sensorType: SensorTypeCreateOneWithoutSensorsInput\n}\n\ninput SensorCreateWithoutLogsInput {\n  device: DeviceCreateOneWithoutSensorsInput\n  sensorType: SensorTypeCreateOneWithoutSensorsInput\n}\n\ninput SensorCreateWithoutSensorTypeInput {\n  device: DeviceCreateOneWithoutSensorsInput\n  logs: LogCreateManyWithoutSensorInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SensorEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Sensor!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum SensorOrderByInput {\n  createdAt_ASC\n  createdAt_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype SensorPreviousValues {\n  createdAt: DateTime!\n  id: ID!\n  updatedAt: DateTime!\n}\n\ntype SensorSubscriptionPayload {\n  mutation: MutationType!\n  node: Sensor\n  updatedFields: [String!]\n  previousValues: SensorPreviousValues\n}\n\ninput SensorSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [SensorSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [SensorSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SensorWhereInput\n}\n\ntype SensorType implements Node {\n  createdAt: DateTime!\n  name: String\n  id: ID!\n  updatedAt: DateTime!\n  sensors(where: SensorWhereInput, orderBy: SensorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Sensor!]\n  deviceModels(where: DeviceModelWhereInput, orderBy: DeviceModelOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DeviceModel!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype SensorTypeConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [SensorTypeEdge]!\n  aggregate: AggregateSensorType!\n}\n\ninput SensorTypeCreateInput {\n  name: String\n  sensors: SensorCreateManyWithoutSensorTypeInput\n  deviceModels: DeviceModelCreateManyWithoutSensorTypesInput\n}\n\ninput SensorTypeCreateManyWithoutDeviceModelsInput {\n  create: [SensorTypeCreateWithoutDeviceModelsInput!]\n  connect: [SensorTypeWhereUniqueInput!]\n}\n\ninput SensorTypeCreateOneWithoutSensorsInput {\n  create: SensorTypeCreateWithoutSensorsInput\n  connect: SensorTypeWhereUniqueInput\n}\n\ninput SensorTypeCreateWithoutDeviceModelsInput {\n  name: String\n  sensors: SensorCreateManyWithoutSensorTypeInput\n}\n\ninput SensorTypeCreateWithoutSensorsInput {\n  name: String\n  deviceModels: DeviceModelCreateManyWithoutSensorTypesInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SensorTypeEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: SensorType!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum SensorTypeOrderByInput {\n  createdAt_ASC\n  createdAt_DESC\n  name_ASC\n  name_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype SensorTypePreviousValues {\n  createdAt: DateTime!\n  name: String\n  id: ID!\n  updatedAt: DateTime!\n}\n\ntype SensorTypeSubscriptionPayload {\n  mutation: MutationType!\n  node: SensorType\n  updatedFields: [String!]\n  previousValues: SensorTypePreviousValues\n}\n\ninput SensorTypeSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [SensorTypeSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [SensorTypeSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SensorTypeWhereInput\n}\n\ninput SensorTypeUpdateInput {\n  name: String\n  sensors: SensorUpdateManyWithoutSensorTypeInput\n  deviceModels: DeviceModelUpdateManyWithoutSensorTypesInput\n}\n\ninput SensorTypeUpdateManyWithoutDeviceModelsInput {\n  create: [SensorTypeCreateWithoutDeviceModelsInput!]\n  connect: [SensorTypeWhereUniqueInput!]\n  disconnect: [SensorTypeWhereUniqueInput!]\n  delete: [SensorTypeWhereUniqueInput!]\n  update: [SensorTypeUpdateWithWhereUniqueWithoutDeviceModelsInput!]\n  upsert: [SensorTypeUpsertWithWhereUniqueWithoutDeviceModelsInput!]\n}\n\ninput SensorTypeUpdateOneWithoutSensorsInput {\n  create: SensorTypeCreateWithoutSensorsInput\n  connect: SensorTypeWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: SensorTypeUpdateWithoutSensorsDataInput\n  upsert: SensorTypeUpsertWithoutSensorsInput\n}\n\ninput SensorTypeUpdateWithoutDeviceModelsDataInput {\n  name: String\n  sensors: SensorUpdateManyWithoutSensorTypeInput\n}\n\ninput SensorTypeUpdateWithoutSensorsDataInput {\n  name: String\n  deviceModels: DeviceModelUpdateManyWithoutSensorTypesInput\n}\n\ninput SensorTypeUpdateWithWhereUniqueWithoutDeviceModelsInput {\n  where: SensorTypeWhereUniqueInput!\n  data: SensorTypeUpdateWithoutDeviceModelsDataInput!\n}\n\ninput SensorTypeUpsertWithoutSensorsInput {\n  update: SensorTypeUpdateWithoutSensorsDataInput!\n  create: SensorTypeCreateWithoutSensorsInput!\n}\n\ninput SensorTypeUpsertWithWhereUniqueWithoutDeviceModelsInput {\n  where: SensorTypeWhereUniqueInput!\n  update: SensorTypeUpdateWithoutDeviceModelsDataInput!\n  create: SensorTypeCreateWithoutDeviceModelsInput!\n}\n\ninput SensorTypeWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [SensorTypeWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [SensorTypeWhereInput!]\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  sensors_every: SensorWhereInput\n  sensors_some: SensorWhereInput\n  sensors_none: SensorWhereInput\n  deviceModels_every: DeviceModelWhereInput\n  deviceModels_some: DeviceModelWhereInput\n  deviceModels_none: DeviceModelWhereInput\n}\n\ninput SensorTypeWhereUniqueInput {\n  id: ID\n}\n\ninput SensorUpdateInput {\n  device: DeviceUpdateOneWithoutSensorsInput\n  logs: LogUpdateManyWithoutSensorInput\n  sensorType: SensorTypeUpdateOneWithoutSensorsInput\n}\n\ninput SensorUpdateManyWithoutDeviceInput {\n  create: [SensorCreateWithoutDeviceInput!]\n  connect: [SensorWhereUniqueInput!]\n  disconnect: [SensorWhereUniqueInput!]\n  delete: [SensorWhereUniqueInput!]\n  update: [SensorUpdateWithWhereUniqueWithoutDeviceInput!]\n  upsert: [SensorUpsertWithWhereUniqueWithoutDeviceInput!]\n}\n\ninput SensorUpdateManyWithoutSensorTypeInput {\n  create: [SensorCreateWithoutSensorTypeInput!]\n  connect: [SensorWhereUniqueInput!]\n  disconnect: [SensorWhereUniqueInput!]\n  delete: [SensorWhereUniqueInput!]\n  update: [SensorUpdateWithWhereUniqueWithoutSensorTypeInput!]\n  upsert: [SensorUpsertWithWhereUniqueWithoutSensorTypeInput!]\n}\n\ninput SensorUpdateOneWithoutLogsInput {\n  create: SensorCreateWithoutLogsInput\n  connect: SensorWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: SensorUpdateWithoutLogsDataInput\n  upsert: SensorUpsertWithoutLogsInput\n}\n\ninput SensorUpdateWithoutDeviceDataInput {\n  logs: LogUpdateManyWithoutSensorInput\n  sensorType: SensorTypeUpdateOneWithoutSensorsInput\n}\n\ninput SensorUpdateWithoutLogsDataInput {\n  device: DeviceUpdateOneWithoutSensorsInput\n  sensorType: SensorTypeUpdateOneWithoutSensorsInput\n}\n\ninput SensorUpdateWithoutSensorTypeDataInput {\n  device: DeviceUpdateOneWithoutSensorsInput\n  logs: LogUpdateManyWithoutSensorInput\n}\n\ninput SensorUpdateWithWhereUniqueWithoutDeviceInput {\n  where: SensorWhereUniqueInput!\n  data: SensorUpdateWithoutDeviceDataInput!\n}\n\ninput SensorUpdateWithWhereUniqueWithoutSensorTypeInput {\n  where: SensorWhereUniqueInput!\n  data: SensorUpdateWithoutSensorTypeDataInput!\n}\n\ninput SensorUpsertWithoutLogsInput {\n  update: SensorUpdateWithoutLogsDataInput!\n  create: SensorCreateWithoutLogsInput!\n}\n\ninput SensorUpsertWithWhereUniqueWithoutDeviceInput {\n  where: SensorWhereUniqueInput!\n  update: SensorUpdateWithoutDeviceDataInput!\n  create: SensorCreateWithoutDeviceInput!\n}\n\ninput SensorUpsertWithWhereUniqueWithoutSensorTypeInput {\n  where: SensorWhereUniqueInput!\n  update: SensorUpdateWithoutSensorTypeDataInput!\n  create: SensorCreateWithoutSensorTypeInput!\n}\n\ninput SensorWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [SensorWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [SensorWhereInput!]\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  device: DeviceWhereInput\n  logs_every: LogWhereInput\n  logs_some: LogWhereInput\n  logs_none: LogWhereInput\n  sensorType: SensorTypeWhereInput\n}\n\ninput SensorWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  file(where: FileSubscriptionWhereInput): FileSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  device(where: DeviceSubscriptionWhereInput): DeviceSubscriptionPayload\n  deviceModel(where: DeviceModelSubscriptionWhereInput): DeviceModelSubscriptionPayload\n  sensorType(where: SensorTypeSubscriptionWhereInput): SensorTypeSubscriptionPayload\n  preset(where: PresetSubscriptionWhereInput): PresetSubscriptionPayload\n  group(where: GroupSubscriptionWhereInput): GroupSubscriptionPayload\n  sensor(where: SensorSubscriptionWhereInput): SensorSubscriptionPayload\n  wifiLog(where: WifiLogSubscriptionWhereInput): WifiLogSubscriptionPayload\n  worker(where: WorkerSubscriptionWhereInput): WorkerSubscriptionPayload\n  log(where: LogSubscriptionWhereInput): LogSubscriptionPayload\n  scene(where: SceneSubscriptionWhereInput): SceneSubscriptionPayload\n  place(where: PlaceSubscriptionWhereInput): PlaceSubscriptionPayload\n  location(where: LocationSubscriptionWhereInput): LocationSubscriptionPayload\n}\n\ntype User implements Node {\n  createdAt: DateTime!\n  id: ID!\n  updatedAt: DateTime!\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  devices(where: DeviceWhereInput, orderBy: DeviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Device!]\n  locations(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Location!]\n  defaultLocation(where: LocationWhereInput): Location\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  devices: DeviceCreateManyWithoutUserInput\n  locations: LocationCreateManyWithoutUserInput\n  defaultLocation: LocationCreateOneWithoutUserDefaultInput\n}\n\ninput UserCreateOneWithoutDefaultLocationInput {\n  create: UserCreateWithoutDefaultLocationInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutDevicesInput {\n  create: UserCreateWithoutDevicesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutLocationsInput {\n  create: UserCreateWithoutLocationsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutDefaultLocationInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  devices: DeviceCreateManyWithoutUserInput\n  locations: LocationCreateManyWithoutUserInput\n}\n\ninput UserCreateWithoutDevicesInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  locations: LocationCreateManyWithoutUserInput\n  defaultLocation: LocationCreateOneWithoutUserDefaultInput\n}\n\ninput UserCreateWithoutLocationsInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  devices: DeviceCreateManyWithoutUserInput\n  defaultLocation: LocationCreateOneWithoutUserDefaultInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  createdAt_ASC\n  createdAt_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  firstName_ASC\n  firstName_DESC\n  lastName_ASC\n  lastName_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n}\n\ntype UserPreviousValues {\n  createdAt: DateTime!\n  id: ID!\n  updatedAt: DateTime!\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  devices: DeviceUpdateManyWithoutUserInput\n  locations: LocationUpdateManyWithoutUserInput\n  defaultLocation: LocationUpdateOneWithoutUserDefaultInput\n}\n\ninput UserUpdateOneWithoutDefaultLocationInput {\n  create: UserCreateWithoutDefaultLocationInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutDefaultLocationDataInput\n  upsert: UserUpsertWithoutDefaultLocationInput\n}\n\ninput UserUpdateOneWithoutDevicesInput {\n  create: UserCreateWithoutDevicesInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutDevicesDataInput\n  upsert: UserUpsertWithoutDevicesInput\n}\n\ninput UserUpdateOneWithoutLocationsInput {\n  create: UserCreateWithoutLocationsInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutLocationsDataInput\n  upsert: UserUpsertWithoutLocationsInput\n}\n\ninput UserUpdateWithoutDefaultLocationDataInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  devices: DeviceUpdateManyWithoutUserInput\n  locations: LocationUpdateManyWithoutUserInput\n}\n\ninput UserUpdateWithoutDevicesDataInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  locations: LocationUpdateManyWithoutUserInput\n  defaultLocation: LocationUpdateOneWithoutUserDefaultInput\n}\n\ninput UserUpdateWithoutLocationsDataInput {\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  devices: DeviceUpdateManyWithoutUserInput\n  defaultLocation: LocationUpdateOneWithoutUserDefaultInput\n}\n\ninput UserUpsertWithoutDefaultLocationInput {\n  update: UserUpdateWithoutDefaultLocationDataInput!\n  create: UserCreateWithoutDefaultLocationInput!\n}\n\ninput UserUpsertWithoutDevicesInput {\n  update: UserUpdateWithoutDevicesDataInput!\n  create: UserCreateWithoutDevicesInput!\n}\n\ninput UserUpsertWithoutLocationsInput {\n  update: UserUpdateWithoutLocationsDataInput!\n  create: UserCreateWithoutLocationsInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  firstName: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  firstName_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  firstName_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  firstName_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  firstName_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  firstName_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  firstName_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  firstName_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  firstName_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  firstName_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  firstName_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  firstName_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  firstName_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  firstName_not_ends_with: String\n  lastName: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  lastName_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  lastName_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  lastName_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  lastName_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  lastName_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  lastName_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  lastName_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  lastName_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  lastName_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  lastName_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  lastName_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  lastName_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  lastName_not_ends_with: String\n  email: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  email_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  email_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  email_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  email_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  email_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  email_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  email_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  email_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  email_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  email_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  email_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  email_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  email_not_ends_with: String\n  password: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  password_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  password_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  password_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  password_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  password_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  password_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  password_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  password_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  password_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  password_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  password_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  password_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  password_not_ends_with: String\n  devices_every: DeviceWhereInput\n  devices_some: DeviceWhereInput\n  devices_none: DeviceWhereInput\n  locations_every: LocationWhereInput\n  locations_some: LocationWhereInput\n  locations_none: LocationWhereInput\n  defaultLocation: LocationWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n\ntype WifiLog implements Node {\n  createdAt: DateTime!\n  device(where: DeviceWhereInput): Device\n  ssid: String\n  hostname: String\n  address: String\n  netmask: String\n  gateway: String\n  mac: String\n  rssi: Float\n  id: ID!\n  updatedAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype WifiLogConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [WifiLogEdge]!\n  aggregate: AggregateWifiLog!\n}\n\ninput WifiLogCreateInput {\n  ssid: String\n  hostname: String\n  address: String\n  netmask: String\n  gateway: String\n  mac: String\n  rssi: Float\n  device: DeviceCreateOneWithoutWifiLogsInput\n}\n\ninput WifiLogCreateManyWithoutDeviceInput {\n  create: [WifiLogCreateWithoutDeviceInput!]\n  connect: [WifiLogWhereUniqueInput!]\n}\n\ninput WifiLogCreateWithoutDeviceInput {\n  ssid: String\n  hostname: String\n  address: String\n  netmask: String\n  gateway: String\n  mac: String\n  rssi: Float\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype WifiLogEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: WifiLog!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum WifiLogOrderByInput {\n  createdAt_ASC\n  createdAt_DESC\n  ssid_ASC\n  ssid_DESC\n  hostname_ASC\n  hostname_DESC\n  address_ASC\n  address_DESC\n  netmask_ASC\n  netmask_DESC\n  gateway_ASC\n  gateway_DESC\n  mac_ASC\n  mac_DESC\n  rssi_ASC\n  rssi_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype WifiLogPreviousValues {\n  createdAt: DateTime!\n  ssid: String\n  hostname: String\n  address: String\n  netmask: String\n  gateway: String\n  mac: String\n  rssi: Float\n  id: ID!\n  updatedAt: DateTime!\n}\n\ntype WifiLogSubscriptionPayload {\n  mutation: MutationType!\n  node: WifiLog\n  updatedFields: [String!]\n  previousValues: WifiLogPreviousValues\n}\n\ninput WifiLogSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [WifiLogSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [WifiLogSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: WifiLogWhereInput\n}\n\ninput WifiLogUpdateInput {\n  ssid: String\n  hostname: String\n  address: String\n  netmask: String\n  gateway: String\n  mac: String\n  rssi: Float\n  device: DeviceUpdateOneWithoutWifiLogsInput\n}\n\ninput WifiLogUpdateManyWithoutDeviceInput {\n  create: [WifiLogCreateWithoutDeviceInput!]\n  connect: [WifiLogWhereUniqueInput!]\n  disconnect: [WifiLogWhereUniqueInput!]\n  delete: [WifiLogWhereUniqueInput!]\n  update: [WifiLogUpdateWithWhereUniqueWithoutDeviceInput!]\n  upsert: [WifiLogUpsertWithWhereUniqueWithoutDeviceInput!]\n}\n\ninput WifiLogUpdateWithoutDeviceDataInput {\n  ssid: String\n  hostname: String\n  address: String\n  netmask: String\n  gateway: String\n  mac: String\n  rssi: Float\n}\n\ninput WifiLogUpdateWithWhereUniqueWithoutDeviceInput {\n  where: WifiLogWhereUniqueInput!\n  data: WifiLogUpdateWithoutDeviceDataInput!\n}\n\ninput WifiLogUpsertWithWhereUniqueWithoutDeviceInput {\n  where: WifiLogWhereUniqueInput!\n  update: WifiLogUpdateWithoutDeviceDataInput!\n  create: WifiLogCreateWithoutDeviceInput!\n}\n\ninput WifiLogWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [WifiLogWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [WifiLogWhereInput!]\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  ssid: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  ssid_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  ssid_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  ssid_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  ssid_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  ssid_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  ssid_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  ssid_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  ssid_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  ssid_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  ssid_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  ssid_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  ssid_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  ssid_not_ends_with: String\n  hostname: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  hostname_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  hostname_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  hostname_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  hostname_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  hostname_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  hostname_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  hostname_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  hostname_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  hostname_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  hostname_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  hostname_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  hostname_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  hostname_not_ends_with: String\n  address: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  address_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  address_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  address_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  address_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  address_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  address_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  address_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  address_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  address_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  address_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  address_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  address_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  address_not_ends_with: String\n  netmask: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  netmask_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  netmask_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  netmask_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  netmask_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  netmask_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  netmask_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  netmask_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  netmask_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  netmask_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  netmask_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  netmask_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  netmask_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  netmask_not_ends_with: String\n  gateway: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  gateway_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  gateway_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  gateway_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  gateway_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  gateway_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  gateway_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  gateway_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  gateway_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  gateway_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  gateway_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  gateway_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  gateway_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  gateway_not_ends_with: String\n  mac: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  mac_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  mac_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  mac_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  mac_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  mac_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  mac_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  mac_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  mac_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  mac_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  mac_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  mac_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  mac_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  mac_not_ends_with: String\n  rssi: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  rssi_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  rssi_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  rssi_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  rssi_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  rssi_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  rssi_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  rssi_gte: Float\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  device: DeviceWhereInput\n}\n\ninput WifiLogWhereUniqueInput {\n  id: ID\n}\n\ntype Worker implements Node {\n  createdAt: DateTime!\n  name: String\n  device(where: DeviceWhereInput): Device\n  id: ID!\n  updatedAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype WorkerConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [WorkerEdge]!\n  aggregate: AggregateWorker!\n}\n\ninput WorkerCreateInput {\n  name: String\n  device: DeviceCreateOneWithoutWorkersInput\n}\n\ninput WorkerCreateManyWithoutDeviceInput {\n  create: [WorkerCreateWithoutDeviceInput!]\n  connect: [WorkerWhereUniqueInput!]\n}\n\ninput WorkerCreateWithoutDeviceInput {\n  name: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype WorkerEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Worker!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum WorkerOrderByInput {\n  createdAt_ASC\n  createdAt_DESC\n  name_ASC\n  name_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype WorkerPreviousValues {\n  createdAt: DateTime!\n  name: String\n  id: ID!\n  updatedAt: DateTime!\n}\n\ntype WorkerSubscriptionPayload {\n  mutation: MutationType!\n  node: Worker\n  updatedFields: [String!]\n  previousValues: WorkerPreviousValues\n}\n\ninput WorkerSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [WorkerSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [WorkerSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: WorkerWhereInput\n}\n\ninput WorkerUpdateInput {\n  name: String\n  device: DeviceUpdateOneWithoutWorkersInput\n}\n\ninput WorkerUpdateManyWithoutDeviceInput {\n  create: [WorkerCreateWithoutDeviceInput!]\n  connect: [WorkerWhereUniqueInput!]\n  disconnect: [WorkerWhereUniqueInput!]\n  delete: [WorkerWhereUniqueInput!]\n  update: [WorkerUpdateWithWhereUniqueWithoutDeviceInput!]\n  upsert: [WorkerUpsertWithWhereUniqueWithoutDeviceInput!]\n}\n\ninput WorkerUpdateWithoutDeviceDataInput {\n  name: String\n}\n\ninput WorkerUpdateWithWhereUniqueWithoutDeviceInput {\n  where: WorkerWhereUniqueInput!\n  data: WorkerUpdateWithoutDeviceDataInput!\n}\n\ninput WorkerUpsertWithWhereUniqueWithoutDeviceInput {\n  where: WorkerWhereUniqueInput!\n  update: WorkerUpdateWithoutDeviceDataInput!\n  create: WorkerCreateWithoutDeviceInput!\n}\n\ninput WorkerWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [WorkerWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [WorkerWhereInput!]\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  device: DeviceWhereInput\n}\n\ninput WorkerWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 89,
      "containsCycle": true,
      "numDefinitions": 340
    }
  ],
  "metrics": {
    "created_at": "2018-03-29T15:02:51Z",
    "updated_at": "2018-04-25T14:56:36Z",
    "pushed_at": "2018-04-25T14:56:36Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 1
  }
}