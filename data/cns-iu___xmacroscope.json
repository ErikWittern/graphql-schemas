{
  "repo_name": "xmacroscope",
  "repo_full_name": "cns-iu/xmacroscope",
  "repo_owner": "cns-iu",
  "repo_description": "The xMacroscope provides a way for museum visitors to build and interpret visualizations that use data generated by the visitors during their exhibit experience.",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "index.graphql",
      "path": "packages/server-graphql/src/graphql/schema/queries/index.graphql",
      "sha": "13522c4f90ef2383d28528d5fff0109ac665e05d",
      "url": "https://api.github.com/repositories/120782638/contents/packages/server-graphql/src/graphql/schema/queries/index.graphql?ref=6d32f9b8f283868d244142184ef42499e50e3b75",
      "git_url": "https://api.github.com/repositories/120782638/git/blobs/13522c4f90ef2383d28528d5fff0109ac665e05d",
      "html_url": "https://github.com/cns-iu/xmacroscope/blob/6d32f9b8f283868d244142184ef42499e50e3b75/packages/server-graphql/src/graphql/schema/queries/index.graphql",
      "content": "# Define GraphQL queries\ntype Query {\n  Person(id: ID): Person\n  People(limit: Int = 20): [Person!]!\n  Runs(lastX: Int): [Run!]!\n  Messages(lastX: Int): MessageAny\n  Settings(location: String!): Setting\n}\n\n",
      "containsQueryType": true,
      "merged": {
        "mergedContent": "# https://github.com/cns-iu/xmacroscope/blob/6d32f9b8f283868d244142184ef42499e50e3b75/packages/server-graphql/src/graphql/schema/queries/index.graphql:\n# Define GraphQL queries\ntype Query {\n  Person(id: ID): Person\n  People(limit: Int = 20): [Person!]!\n  Runs(lastX: Int): [Run!]!\n  Messages(lastX: Int): MessageAny\n  Settings(location: String!): Setting\n}\n\n\n# https://github.com/cns-iu/xmacroscope/blob/6d32f9b8f283868d244142184ef42499e50e3b75/packages/server-graphql/src/graphql/schema/types/index.graphql:\n#\n# Custom scalar & enumeration types\n#\n# Define an ISO-8601 date object for use in types\nscalar Date\n\n#\n# Interfaces\n#\ninterface Message {\n  type: String\n  timestamp: String\n}\n\n#\n# Types\n#\ntype MessageAny implements Message {\n  type: String!\n  timestamp: String!\n}\n\ntype MessageRun implements Message {\n  type: String\n  timestamp: String\n  run: Run\n}\n\ntype Person {\n  id: ID!\n  icon: String\n  color: String\n  ageGroup: String\n  favoriteActivity: String\n  height: Int\n  zipCode: String\n  state: String\n  latitude: Float\n  longitude: Float\n}\n\ntype Run {\n  id: ID\n  start: Date\n  end: Date\n  personId: ID\n  person: Person\n}\n\ntype RunResult {\n  person: Person\n  started: Boolean\n  falseStart: Boolean\n  timeMillis: Int\n}\n\ntype Setting {\n  location: String\n  usState: String\n  latitude: Float\n  longitude: Float\n  preRunDelay: Int\n  postRunDelay: Int\n  startLineTimeout: Int\n  runTimeout: Int\n  attractDelay: Int\n}\n\n#\n# Inputs\n#\ninput MessageAnyInput {\n  type: String!\n  timestamp: String!\n}\n\ninput PersonInput {\n  icon: String\n  color: String\n  ageGroup: String\n  favoriteActivity: String\n  height: Int\n  zipCode: String\n  state: String\n  latitude: Float\n  longitude: Float\n}\n\ninput RunInput {\n  start: Date\n  person: PersonInput\n}\n\ninput RunStartInput {\n  id: ID\n  start: Date!\n}\n\ninput RunFinishInput {\n  id: ID!\n  finish: Date!\n}\n",
        "mergedPaths": [
          "packages/server-graphql/src/graphql/schema/types/index.graphql"
        ],
        "typesDefinedByMerge": [
          "MessageAny",
          "Person",
          "Run",
          "Setting"
        ],
        "directivesDefinedByMerge": [],
        "validSchema": true,
        "contentDuplicate": false,
        "numObjectTypes": 7,
        "containsCycle": false,
        "polynomialLevel": 1,
        "numDefinitions": 14
      },
      "validSchema": false
    },
    {
      "name": "index.graphql",
      "path": "packages/server-graphql/src/graphql/schema/types/index.graphql",
      "sha": "1a1341a7e0d31b88a7b90695258210917e18477d",
      "url": "https://api.github.com/repositories/120782638/contents/packages/server-graphql/src/graphql/schema/types/index.graphql?ref=6d32f9b8f283868d244142184ef42499e50e3b75",
      "git_url": "https://api.github.com/repositories/120782638/git/blobs/1a1341a7e0d31b88a7b90695258210917e18477d",
      "html_url": "https://github.com/cns-iu/xmacroscope/blob/6d32f9b8f283868d244142184ef42499e50e3b75/packages/server-graphql/src/graphql/schema/types/index.graphql",
      "content": "#\n# Custom scalar & enumeration types\n#\n# Define an ISO-8601 date object for use in types\nscalar Date\n\n#\n# Interfaces\n#\ninterface Message {\n  type: String\n  timestamp: String\n}\n\n#\n# Types\n#\ntype MessageAny implements Message {\n  type: String!\n  timestamp: String!\n}\n\ntype MessageRun implements Message {\n  type: String\n  timestamp: String\n  run: Run\n}\n\ntype Person {\n  id: ID!\n  icon: String\n  color: String\n  ageGroup: String\n  favoriteActivity: String\n  height: Int\n  zipCode: String\n  state: String\n  latitude: Float\n  longitude: Float\n}\n\ntype Run {\n  id: ID\n  start: Date\n  end: Date\n  personId: ID\n  person: Person\n}\n\ntype RunResult {\n  person: Person\n  started: Boolean\n  falseStart: Boolean\n  timeMillis: Int\n}\n\ntype Setting {\n  location: String\n  usState: String\n  latitude: Float\n  longitude: Float\n  preRunDelay: Int\n  postRunDelay: Int\n  startLineTimeout: Int\n  runTimeout: Int\n  attractDelay: Int\n}\n\n#\n# Inputs\n#\ninput MessageAnyInput {\n  type: String!\n  timestamp: String!\n}\n\ninput PersonInput {\n  icon: String\n  color: String\n  ageGroup: String\n  favoriteActivity: String\n  height: Int\n  zipCode: String\n  state: String\n  latitude: Float\n  longitude: Float\n}\n\ninput RunInput {\n  start: Date\n  person: PersonInput\n}\n\ninput RunStartInput {\n  id: ID\n  start: Date!\n}\n\ninput RunFinishInput {\n  id: ID!\n  finish: Date!\n}\n",
      "containsQueryType": false,
      "validSchema": true,
      "contentDuplicate": false,
      "numDefinitions": 13
    }
  ],
  "metrics": {
    "created_at": "2018-02-08T15:54:54Z",
    "updated_at": "2019-03-19T15:24:47Z",
    "pushed_at": "2019-05-30T15:01:27Z",
    "issues": 274,
    "watchers": 8,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 14,
    "pull_requests_open": 1,
    "pull_requests_closed": 0,
    "pull_requests_merged": 13,
    "releases": 0,
    "stargazers": 2
  }
}