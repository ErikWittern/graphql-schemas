{
  "repo_name": "prisma-starter",
  "repo_full_name": "servexyz/prisma-starter",
  "repo_owner": "servexyz",
  "repo_description": "⭐️ Run your Prisma.io service as a docker container",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "src/service/generated/prisma.graphql",
      "sha": "77b0677e68e475544a23d64c96ef9be37357b3b7",
      "url": "https://api.github.com/repositories/134486877/contents/src/service/generated/prisma.graphql?ref=638e04576511964f02cef39fd014fb9e670aab53",
      "git_url": "https://api.github.com/repositories/134486877/git/blobs/77b0677e68e475544a23d64c96ef9be37357b3b7",
      "html_url": "https://github.com/servexyz/prisma-starter/blob/638e04576511964f02cef39fd014fb9e670aab53/src/service/generated/prisma.graphql",
      "content": "# source: http://localhost:4466\n# timestamp: Wed Oct 03 2018 13:20:00 GMT-0700 (Pacific Daylight Time)\n\ntype AggregateFoo {\n  count: Int!\n}\n\ntype AggregateSampleJson {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\nscalar DateTime\n\ntype Foo implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String\n  secretFoo: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FooConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FooEdge]!\n  aggregate: AggregateFoo!\n}\n\ninput FooCreateInput {\n  name: String\n  secretFoo: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FooEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Foo!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum FooOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  name_ASC\n  name_DESC\n  secretFoo_ASC\n  secretFoo_DESC\n}\n\ntype FooPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String\n  secretFoo: String\n}\n\ntype FooSubscriptionPayload {\n  mutation: MutationType!\n  node: Foo\n  updatedFields: [String!]\n  previousValues: FooPreviousValues\n}\n\ninput FooSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [FooSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [FooSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [FooSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FooWhereInput\n}\n\ninput FooUpdateInput {\n  name: String\n  secretFoo: String\n}\n\ninput FooWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [FooWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [FooWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [FooWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  secretFoo: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  secretFoo_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  secretFoo_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  secretFoo_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  secretFoo_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  secretFoo_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  secretFoo_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  secretFoo_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  secretFoo_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  secretFoo_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  secretFoo_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  secretFoo_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  secretFoo_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  secretFoo_not_ends_with: String\n}\n\ninput FooWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"Raw JSON value\"\"\"\nscalar Json\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createFoo(data: FooCreateInput!): Foo!\n  createSampleJson(data: SampleJsonCreateInput!): SampleJson!\n  updateFoo(data: FooUpdateInput!, where: FooWhereUniqueInput!): Foo\n  updateSampleJson(data: SampleJsonUpdateInput!, where: SampleJsonWhereUniqueInput!): SampleJson\n  deleteFoo(where: FooWhereUniqueInput!): Foo\n  deleteSampleJson(where: SampleJsonWhereUniqueInput!): SampleJson\n  upsertFoo(where: FooWhereUniqueInput!, create: FooCreateInput!, update: FooUpdateInput!): Foo!\n  upsertSampleJson(where: SampleJsonWhereUniqueInput!, create: SampleJsonCreateInput!, update: SampleJsonUpdateInput!): SampleJson!\n  updateManyFoos(data: FooUpdateInput!, where: FooWhereInput): BatchPayload!\n  updateManySampleJsons(data: SampleJsonUpdateInput!, where: SampleJsonWhereInput): BatchPayload!\n  deleteManyFoos(where: FooWhereInput): BatchPayload!\n  deleteManySampleJsons(where: SampleJsonWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  foos(where: FooWhereInput, orderBy: FooOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Foo]!\n  sampleJsons(where: SampleJsonWhereInput, orderBy: SampleJsonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SampleJson]!\n  foo(where: FooWhereUniqueInput!): Foo\n  sampleJson(where: SampleJsonWhereUniqueInput!): SampleJson\n  foosConnection(where: FooWhereInput, orderBy: FooOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FooConnection!\n  sampleJsonsConnection(where: SampleJsonWhereInput, orderBy: SampleJsonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SampleJsonConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype SampleJson implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  json: Json\n  jsons: [Json!]!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype SampleJsonConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [SampleJsonEdge]!\n  aggregate: AggregateSampleJson!\n}\n\ninput SampleJsonCreateInput {\n  json: Json\n  jsons: SampleJsonCreatejsonsInput\n}\n\ninput SampleJsonCreatejsonsInput {\n  set: [Json!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SampleJsonEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: SampleJson!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum SampleJsonOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  json_ASC\n  json_DESC\n}\n\ntype SampleJsonPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  json: Json\n  jsons: [Json!]!\n}\n\ntype SampleJsonSubscriptionPayload {\n  mutation: MutationType!\n  node: SampleJson\n  updatedFields: [String!]\n  previousValues: SampleJsonPreviousValues\n}\n\ninput SampleJsonSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [SampleJsonSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [SampleJsonSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [SampleJsonSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SampleJsonWhereInput\n}\n\ninput SampleJsonUpdateInput {\n  json: Json\n  jsons: SampleJsonUpdatejsonsInput\n}\n\ninput SampleJsonUpdatejsonsInput {\n  set: [Json!]\n}\n\ninput SampleJsonWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [SampleJsonWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [SampleJsonWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [SampleJsonWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n}\n\ninput SampleJsonWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  foo(where: FooSubscriptionWhereInput): FooSubscriptionPayload\n  sampleJson(where: SampleJsonSubscriptionWhereInput): SampleJsonSubscriptionPayload\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 17,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 36
    },
    {
      "name": "schema.graphql",
      "path": "src/service/schema.graphql",
      "sha": "7cc2776bf1f30a837628ab9d74c371f886973537",
      "url": "https://api.github.com/repositories/134486877/contents/src/service/schema.graphql?ref=638e04576511964f02cef39fd014fb9e670aab53",
      "git_url": "https://api.github.com/repositories/134486877/git/blobs/7cc2776bf1f30a837628ab9d74c371f886973537",
      "html_url": "https://github.com/servexyz/prisma-starter/blob/638e04576511964f02cef39fd014fb9e670aab53/src/service/schema.graphql",
      "content": "#import SampleJson, Query.sampleJsons, Mutation.createSampleJson from \"./generated/prisma.graphql\"\n\nscalar Json\n\ntype Query {\n  allFoos(name: String): [Foo]!\n}\n\ntype Foo {\n  name: String\n  secretFoo: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 2,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 3
    }
  ],
  "metrics": {
    "created_at": "2018-05-22T23:32:18Z",
    "updated_at": "2019-06-12T19:39:21Z",
    "pushed_at": "2019-06-12T19:39:19Z",
    "issues": 31,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 9,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 9,
    "releases": 0,
    "stargazers": 5
  }
}