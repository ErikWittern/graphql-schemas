{
  "repo_name": "zero2-rs",
  "repo_full_name": "youssefhabri/zero2-rs",
  "repo_owner": "youssefhabri",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "assets/schema.graphql",
      "sha": "1d844eb3d56461fdd33def4d23f0fa7800718db8",
      "url": "https://api.github.com/repositories/169137427/contents/assets/schema.graphql?ref=08de5e6491f87f2805fb532e9aa182481425eb89",
      "git_url": "https://api.github.com/repositories/169137427/git/blobs/1d844eb3d56461fdd33def4d23f0fa7800718db8",
      "html_url": "https://github.com/youssefhabri/zero2-rs/blob/08de5e6491f87f2805fb532e9aa182481425eb89/assets/schema.graphql",
      "content": "# source: https://graphql.anilist.co\n# timestamp: Fri Apr 19 2019 13:33:24 GMT+0100 (Western European Summer Time)\n\n\"\"\"Notification for when a activity is liked\"\"\"\ntype ActivityLikeNotification {\n  \"\"\"The id of the Notification\"\"\"\n  id: Int!\n\n  \"\"\"The id of the user who liked to the activity\"\"\"\n  userId: Int!\n\n  \"\"\"The type of notification\"\"\"\n  type: NotificationType\n\n  \"\"\"The id of the activity which was liked\"\"\"\n  activityId: Int!\n\n  \"\"\"The notification context text\"\"\"\n  context: String\n\n  \"\"\"The time the notification was created at\"\"\"\n  createdAt: Int\n\n  \"\"\"The liked activity\"\"\"\n  activity: ActivityUnion\n\n  \"\"\"The user who liked the activity\"\"\"\n  user: User\n}\n\n\"\"\"\nNotification for when authenticated user is @ mentioned in activity or reply\n\"\"\"\ntype ActivityMentionNotification {\n  \"\"\"The id of the Notification\"\"\"\n  id: Int!\n\n  \"\"\"The id of the user who mentioned the authenticated user\"\"\"\n  userId: Int!\n\n  \"\"\"The type of notification\"\"\"\n  type: NotificationType\n\n  \"\"\"The id of the activity where mentioned\"\"\"\n  activityId: Int!\n\n  \"\"\"The notification context text\"\"\"\n  context: String\n\n  \"\"\"The time the notification was created at\"\"\"\n  createdAt: Int\n\n  \"\"\"The liked activity\"\"\"\n  activity: ActivityUnion\n\n  \"\"\"The user who mentioned the authenticated user\"\"\"\n  user: User\n}\n\n\"\"\"Notification for when a user is send an activity message\"\"\"\ntype ActivityMessageNotification {\n  \"\"\"The id of the Notification\"\"\"\n  id: Int!\n\n  \"\"\"The if of the user who send the message\"\"\"\n  userId: Int!\n\n  \"\"\"The type of notification\"\"\"\n  type: NotificationType\n\n  \"\"\"The id of the activity message\"\"\"\n  activityId: Int!\n\n  \"\"\"The notification context text\"\"\"\n  context: String\n\n  \"\"\"The time the notification was created at\"\"\"\n  createdAt: Int\n\n  \"\"\"The message activity\"\"\"\n  message: MessageActivity\n\n  \"\"\"The user who sent the message\"\"\"\n  user: User\n}\n\n\"\"\"Replay to an activity item\"\"\"\ntype ActivityReply {\n  \"\"\"The id of the reply\"\"\"\n  id: Int!\n\n  \"\"\"The id of the replies creator\"\"\"\n  userId: Int\n\n  \"\"\"The id of the parent activity\"\"\"\n  activityId: Int\n\n  \"\"\"The reply text\"\"\"\n  text(\n    \"\"\"Return the string in pre-parsed html instead of markdown\"\"\"\n    asHtml: Boolean\n  ): String\n\n  \"\"\"The time the reply was created at\"\"\"\n  createdAt: Int!\n\n  \"\"\"The user who created reply\"\"\"\n  user: User\n\n  \"\"\"The users who liked the reply\"\"\"\n  likes: [User]\n}\n\n\"\"\"Notification for when a activity reply is liked\"\"\"\ntype ActivityReplyLikeNotification {\n  \"\"\"The id of the Notification\"\"\"\n  id: Int!\n\n  \"\"\"The id of the user who liked to the activity reply\"\"\"\n  userId: Int!\n\n  \"\"\"The type of notification\"\"\"\n  type: NotificationType\n\n  \"\"\"The id of the activity where the reply which was liked\"\"\"\n  activityId: Int!\n\n  \"\"\"The notification context text\"\"\"\n  context: String\n\n  \"\"\"The time the notification was created at\"\"\"\n  createdAt: Int\n\n  \"\"\"The liked activity\"\"\"\n  activity: ActivityUnion\n\n  \"\"\"The user who liked the activity reply\"\"\"\n  user: User\n}\n\n\"\"\"\nNotification for when a user replies to the authenticated users activity\n\"\"\"\ntype ActivityReplyNotification {\n  \"\"\"The id of the Notification\"\"\"\n  id: Int!\n\n  \"\"\"The id of the user who replied to the activity\"\"\"\n  userId: Int!\n\n  \"\"\"The type of notification\"\"\"\n  type: NotificationType\n\n  \"\"\"The id of the activity which was replied too\"\"\"\n  activityId: Int!\n\n  \"\"\"The notification context text\"\"\"\n  context: String\n\n  \"\"\"The time the notification was created at\"\"\"\n  createdAt: Int\n\n  \"\"\"The liked activity\"\"\"\n  activity: ActivityUnion\n\n  \"\"\"The user who replied to the activity\"\"\"\n  user: User\n}\n\n\"\"\"\nNotification for when a user replies to activity the authenticated user has replied to\n\"\"\"\ntype ActivityReplySubscribedNotification {\n  \"\"\"The id of the Notification\"\"\"\n  id: Int!\n\n  \"\"\"The id of the user who replied to the activity\"\"\"\n  userId: Int!\n\n  \"\"\"The type of notification\"\"\"\n  type: NotificationType\n\n  \"\"\"The id of the activity which was replied too\"\"\"\n  activityId: Int!\n\n  \"\"\"The notification context text\"\"\"\n  context: String\n\n  \"\"\"The time the notification was created at\"\"\"\n  createdAt: Int\n\n  \"\"\"The liked activity\"\"\"\n  activity: ActivityUnion\n\n  \"\"\"The user who replied to the activity\"\"\"\n  user: User\n}\n\n\"\"\"Activity sort enums\"\"\"\nenum ActivitySort {\n  ID\n  ID_DESC\n}\n\n\"\"\"Activity type enum.\"\"\"\nenum ActivityType {\n  \"\"\"A text activity\"\"\"\n  TEXT\n\n  \"\"\"A anime list update activity\"\"\"\n  ANIME_LIST\n\n  \"\"\"A manga list update activity\"\"\"\n  MANGA_LIST\n\n  \"\"\"A text message activity sent to another user\"\"\"\n  MESSAGE\n\n  \"\"\"Anime & Manga list update, only used in query arguments\"\"\"\n  MEDIA_LIST\n}\n\n\"\"\"Activity union type\"\"\"\nunion ActivityUnion = TextActivity | ListActivity | MessageActivity\n\n\"\"\"Notification for when an episode of anime airs\"\"\"\ntype AiringNotification {\n  \"\"\"The id of the Notification\"\"\"\n  id: Int!\n\n  \"\"\"The type of notification\"\"\"\n  type: NotificationType\n\n  \"\"\"The id of the aired anime\"\"\"\n  animeId: Int!\n\n  \"\"\"The episode number that just aired\"\"\"\n  episode: Int!\n\n  \"\"\"The notification context text\"\"\"\n  contexts: [String]\n\n  \"\"\"The time the notification was created at\"\"\"\n  createdAt: Int\n\n  \"\"\"The associated media of the airing schedule\"\"\"\n  media: Media\n}\n\n\"\"\"Score & Watcher stats for airing anime by episode and mid-week\"\"\"\ntype AiringProgression {\n  \"\"\"\n  The episode the stats were recorded at. .5 is the mid point between 2 episodes airing dates.\n  \"\"\"\n  episode: Float\n\n  \"\"\"The average score for the media\"\"\"\n  score: Float\n\n  \"\"\"The amount of users watching the anime\"\"\"\n  watching: Int\n}\n\n\"\"\"Media Airing Schedule\"\"\"\ntype AiringSchedule {\n  \"\"\"The id of the airing schedule item\"\"\"\n  id: Int!\n\n  \"\"\"The time the episode airs at\"\"\"\n  airingAt: Int!\n\n  \"\"\"Seconds until episode starts airing\"\"\"\n  timeUntilAiring: Int!\n\n  \"\"\"The airing episode number\"\"\"\n  episode: Int!\n\n  \"\"\"The associate media id of the airing episode\"\"\"\n  mediaId: Int!\n\n  \"\"\"The associate media of the airing episode\"\"\"\n  media: Media\n}\n\ntype AiringScheduleConnection {\n  edges: [AiringScheduleEdge]\n  nodes: [AiringSchedule]\n\n  \"\"\"The pagination information\"\"\"\n  pageInfo: PageInfo\n}\n\n\"\"\"AiringSchedule connection edge\"\"\"\ntype AiringScheduleEdge {\n  node: AiringSchedule\n\n  \"\"\"The id of the connection\"\"\"\n  id: Int\n}\n\ninput AiringScheduleInput {\n  airingAt: Int\n  episode: Int\n  timeUntilAiring: Int\n}\n\n\"\"\"Airing schedule sort enums\"\"\"\nenum AiringSort {\n  ID\n  ID_DESC\n  MEDIA_ID\n  MEDIA_ID_DESC\n  TIME\n  TIME_DESC\n  EPISODE\n  EPISODE_DESC\n}\n\ninput AniChartHighlightInput {\n  mediaId: Int\n  highlight: String\n}\n\ntype AniChartUser {\n  user: User\n  settings: Json\n  highlights: Json\n}\n\n\"\"\"A character that features in an anime or manga\"\"\"\ntype Character {\n  \"\"\"The id of the character\"\"\"\n  id: Int!\n\n  \"\"\"The names of the character\"\"\"\n  name: CharacterName\n\n  \"\"\"Character images\"\"\"\n  image: CharacterImage\n\n  \"\"\"A general description of the character\"\"\"\n  description(\n    \"\"\"Return the string in pre-parsed html instead of markdown\"\"\"\n    asHtml: Boolean\n  ): String\n\n  \"\"\"\n  If the character is marked as favourite by the currently authenticated user\n  \"\"\"\n  isFavourite: Boolean!\n\n  \"\"\"The url for the character page on the AniList website\"\"\"\n  siteUrl: String\n\n  \"\"\"Media that includes the character\"\"\"\n  media(\n    sort: [MediaSort]\n    type: MediaType\n\n    \"\"\"The page\"\"\"\n    page: Int\n\n    \"\"\"The amount of entries per page, max 25\"\"\"\n    perPage: Int\n  ): MediaConnection\n\n  \"\"\"When the character's data was last updated\"\"\"\n  updatedAt: Int\n\n  \"\"\"The amount of user's who have favourited the character\"\"\"\n  favourites: Int\n}\n\ntype CharacterConnection {\n  edges: [CharacterEdge]\n  nodes: [Character]\n\n  \"\"\"The pagination information\"\"\"\n  pageInfo: PageInfo\n}\n\n\"\"\"Character connection edge\"\"\"\ntype CharacterEdge {\n  node: Character\n\n  \"\"\"The id of the connection\"\"\"\n  id: Int\n\n  \"\"\"The characters role in the media\"\"\"\n  role: CharacterRole\n\n  \"\"\"The voice actors of the character\"\"\"\n  voiceActors(language: StaffLanguage, sort: [StaffSort]): [Staff]\n\n  \"\"\"The media the character is in\"\"\"\n  media: [Media]\n\n  \"\"\"The order the character should be displayed from the users favourites\"\"\"\n  favouriteOrder: Int\n}\n\ntype CharacterImage {\n  \"\"\"The character's image of media at its largest size\"\"\"\n  large: String\n\n  \"\"\"The character's image of media at medium size\"\"\"\n  medium: String\n}\n\n\"\"\"The names of the character\"\"\"\ntype CharacterName {\n  \"\"\"The character's given name\"\"\"\n  first: String\n\n  \"\"\"The character's surname\"\"\"\n  last: String\n\n  \"\"\"The character's full name in their native language\"\"\"\n  native: String\n\n  \"\"\"Other names the character might be referred to as\"\"\"\n  alternative: [String]\n}\n\n\"\"\"The names of the character\"\"\"\ninput CharacterNameInput {\n  \"\"\"The character's given name\"\"\"\n  first: String\n\n  \"\"\"The character's surname\"\"\"\n  last: String\n\n  \"\"\"The character's full name in their native language\"\"\"\n  native: String\n\n  \"\"\"Other names the character might be referred by\"\"\"\n  alternative: [String]\n}\n\n\"\"\"The role the character plays in the media\"\"\"\nenum CharacterRole {\n  \"\"\"A primary character role in the media\"\"\"\n  MAIN\n\n  \"\"\"A supporting character role in the media\"\"\"\n  SUPPORTING\n\n  \"\"\"A background character in the media\"\"\"\n  BACKGROUND\n}\n\n\"\"\"Character sort enums\"\"\"\nenum CharacterSort {\n  ID\n  ID_DESC\n  ROLE\n  ROLE_DESC\n  SEARCH_MATCH\n  FAVOURITES\n  FAVOURITES_DESC\n}\n\n\"\"\"A submission for a character that features in an anime or manga\"\"\"\ntype CharacterSubmission {\n  \"\"\"The id of the submission\"\"\"\n  id: Int!\n\n  \"\"\"Character that the submission is referencing\"\"\"\n  character: Character\n\n  \"\"\"The character submission changes\"\"\"\n  submission: Character\n\n  \"\"\"Submitter for the submission\"\"\"\n  submitter: User\n\n  \"\"\"Status of the submission\"\"\"\n  status: SubmissionStatus\n\n  \"\"\"Inner details of submission status\"\"\"\n  notes: String\n  createdAt: Int\n}\n\ntype CharacterSubmissionConnection {\n  edges: [CharacterSubmissionEdge]\n  nodes: [CharacterSubmission]\n\n  \"\"\"The pagination information\"\"\"\n  pageInfo: PageInfo\n}\n\n\"\"\"CharacterSubmission connection edge\"\"\"\ntype CharacterSubmissionEdge {\n  node: CharacterSubmission\n\n  \"\"\"The characters role in the media\"\"\"\n  role: CharacterRole\n\n  \"\"\"The voice actors of the character\"\"\"\n  voiceActors: [Staff]\n\n  \"\"\"The submitted voice actors of the character\"\"\"\n  submittedVoiceActors: [StaffSubmission]\n}\n\n\"\"\"ISO 3166-1 alpha-2 country code\"\"\"\nscalar CountryCode\n\n\"\"\"Deleted data type\"\"\"\ntype Deleted {\n  \"\"\"If an item has been successfully deleted\"\"\"\n  deleted: Boolean\n}\n\n\"\"\"User's favourite anime, manga, characters, staff & studios\"\"\"\ntype Favourites {\n  \"\"\"Favourite anime\"\"\"\n  anime(\n    \"\"\"The page number\"\"\"\n    page: Int\n\n    \"\"\"The amount of entries per page, max 25\"\"\"\n    perPage: Int\n  ): MediaConnection\n\n  \"\"\"Favourite manga\"\"\"\n  manga(\n    \"\"\"The page number\"\"\"\n    page: Int\n\n    \"\"\"The amount of entries per page, max 25\"\"\"\n    perPage: Int\n  ): MediaConnection\n\n  \"\"\"Favourite characters\"\"\"\n  characters(\n    \"\"\"The page number\"\"\"\n    page: Int\n\n    \"\"\"The amount of entries per page, max 25\"\"\"\n    perPage: Int\n  ): CharacterConnection\n\n  \"\"\"Favourite staff\"\"\"\n  staff(\n    \"\"\"The page number\"\"\"\n    page: Int\n\n    \"\"\"The amount of entries per page, max 25\"\"\"\n    perPage: Int\n  ): StaffConnection\n\n  \"\"\"Favourite studios\"\"\"\n  studios(\n    \"\"\"The page number\"\"\"\n    page: Int\n\n    \"\"\"The amount of entries per page, max 25\"\"\"\n    perPage: Int\n  ): StudioConnection\n}\n\n\"\"\"\nNotification for when the authenticated user is followed by another user\n\"\"\"\ntype FollowingNotification {\n  \"\"\"The id of the Notification\"\"\"\n  id: Int!\n\n  \"\"\"The id of the user who followed the authenticated user\"\"\"\n  userId: Int!\n\n  \"\"\"The type of notification\"\"\"\n  type: NotificationType\n\n  \"\"\"The notification context text\"\"\"\n  context: String\n\n  \"\"\"The time the notification was created at\"\"\"\n  createdAt: Int\n\n  \"\"\"The liked activity\"\"\"\n  user: User\n}\n\n\"\"\"User's format statistics\"\"\"\ntype FormatStats {\n  format: MediaFormat\n  amount: Int\n}\n\n\"\"\"Date object that allows for incomplete date values (fuzzy)\"\"\"\ntype FuzzyDate {\n  \"\"\"Numeric Year (2017)\"\"\"\n  year: Int\n\n  \"\"\"Numeric Month (3)\"\"\"\n  month: Int\n\n  \"\"\"Numeric Day (24)\"\"\"\n  day: Int\n}\n\n\"\"\"Date object that allows for incomplete date values (fuzzy)\"\"\"\ninput FuzzyDateInput {\n  \"\"\"Numeric Year (2017)\"\"\"\n  year: Int\n\n  \"\"\"Numeric Month (3)\"\"\"\n  month: Int\n\n  \"\"\"Numeric Day (24)\"\"\"\n  day: Int\n}\n\n\"\"\"\n8 digit long date integer (YYYYMMDD). Unknown dates represented by 0. E.g. 2016: 20160000, May 1976: 19760500\n\"\"\"\nscalar FuzzyDateInt\n\n\"\"\"User's genre statistics\"\"\"\ntype GenreStats {\n  genre: String\n  amount: Int\n  meanScore: Int\n\n  \"\"\"The amount of time in minutes the genre has been watched by the user\"\"\"\n  timeWatched: Int\n}\n\n\"\"\"Page of data (Used for internal use only)\"\"\"\ntype InternalPage {\n  mediaSubmissions(\n    mediaId: Int\n    submissionId: Int\n    userId: Int\n    status: SubmissionStatus\n\n    \"\"\"Filter by the media's type\"\"\"\n    type: MediaType\n  ): [MediaSubmission]\n  characterSubmissions(\n    characterId: Int\n\n    \"\"\"Filter by the submitter of the submission\"\"\"\n    userId: Int\n\n    \"\"\"Filter by the status of the submission\"\"\"\n    status: SubmissionStatus\n  ): [CharacterSubmission]\n  staffSubmissions(\n    staffId: Int\n\n    \"\"\"Filter by the submitter of the submission\"\"\"\n    userId: Int\n\n    \"\"\"Filter by the status of the submission\"\"\"\n    status: SubmissionStatus\n  ): [StaffSubmission]\n  revisionHistory(\n    \"\"\"Filter by the user id\"\"\"\n    userId: Int\n\n    \"\"\"Filter by the media id\"\"\"\n    mediaId: Int\n\n    \"\"\"Filter by the character id\"\"\"\n    characterId: Int\n\n    \"\"\"Filter by the staff id\"\"\"\n    staffId: Int\n\n    \"\"\"Filter by the studio id\"\"\"\n    studioId: Int\n  ): [RevisionHistory]\n  reports: [Report]\n\n  \"\"\"The pagination information\"\"\"\n  pageInfo: PageInfo\n  users(\n    \"\"\"Filter by the user id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the name of the user\"\"\"\n    name: String\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [UserSort]\n  ): [User]\n  media(\n    \"\"\"Filter by the media id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the media's MyAnimeList id\"\"\"\n    idMal: Int\n\n    \"\"\"Filter by the start date of the media\"\"\"\n    startDate: FuzzyDateInt\n\n    \"\"\"Filter by the end date of the media\"\"\"\n    endDate: FuzzyDateInt\n\n    \"\"\"Filter by the season the media was released in\"\"\"\n    season: MediaSeason\n\n    \"\"\"\n    The year of the season (Winter 2017 would also include December 2016 releases). Requires season argument\n    \"\"\"\n    seasonYear: Int\n\n    \"\"\"Filter by the media's type\"\"\"\n    type: MediaType\n\n    \"\"\"Filter by the media's format\"\"\"\n    format: MediaFormat\n\n    \"\"\"Filter by the media's current release status\"\"\"\n    status: MediaStatus\n\n    \"\"\"Filter by amount of episodes the media has\"\"\"\n    episodes: Int\n\n    \"\"\"Filter by the media's episode length\"\"\"\n    duration: Int\n\n    \"\"\"Filter by the media's chapter count\"\"\"\n    chapters: Int\n\n    \"\"\"Filter by the media's volume count\"\"\"\n    volumes: Int\n\n    \"\"\"Filter by if the media's intended for 18+ adult audiences\"\"\"\n    isAdult: Boolean\n\n    \"\"\"Filter by the media's genres\"\"\"\n    genre: String\n\n    \"\"\"Filter by the media's tags\"\"\"\n    tag: String\n\n    \"\"\"Filter by the media's tags with in a tag category\"\"\"\n    tagCategory: String\n\n    \"\"\"Filter by the media on the authenticated user's lists\"\"\"\n    onList: Boolean\n\n    \"\"\"Filter media by sites with a online streaming or reading license\"\"\"\n    licensedBy: String\n\n    \"\"\"Filter by the media's average score\"\"\"\n    averageScore: Int\n\n    \"\"\"Filter by the number of users with this media on their list\"\"\"\n    popularity: Int\n\n    \"\"\"Filter by the source type of the media\"\"\"\n    source: MediaSource\n\n    \"\"\"Filter by the media's country of origin\"\"\"\n    countryOfOrigin: CountryCode\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"Filter by the media id\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by the media id\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by the media id\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"Filter by the media's MyAnimeList id\"\"\"\n    idMal_not: Int\n\n    \"\"\"Filter by the media's MyAnimeList id\"\"\"\n    idMal_in: [Int]\n\n    \"\"\"Filter by the media's MyAnimeList id\"\"\"\n    idMal_not_in: [Int]\n\n    \"\"\"Filter by the start date of the media\"\"\"\n    startDate_greater: FuzzyDateInt\n\n    \"\"\"Filter by the start date of the media\"\"\"\n    startDate_lesser: FuzzyDateInt\n\n    \"\"\"Filter by the start date of the media\"\"\"\n    startDate_like: String\n\n    \"\"\"Filter by the end date of the media\"\"\"\n    endDate_greater: FuzzyDateInt\n\n    \"\"\"Filter by the end date of the media\"\"\"\n    endDate_lesser: FuzzyDateInt\n\n    \"\"\"Filter by the end date of the media\"\"\"\n    endDate_like: String\n\n    \"\"\"Filter by the media's format\"\"\"\n    format_in: [MediaFormat]\n\n    \"\"\"Filter by the media's format\"\"\"\n    format_not: MediaFormat\n\n    \"\"\"Filter by the media's format\"\"\"\n    format_not_in: [MediaFormat]\n\n    \"\"\"Filter by the media's current release status\"\"\"\n    status_in: [MediaStatus]\n\n    \"\"\"Filter by the media's current release status\"\"\"\n    status_not: MediaStatus\n\n    \"\"\"Filter by the media's current release status\"\"\"\n    status_not_in: [MediaStatus]\n\n    \"\"\"Filter by amount of episodes the media has\"\"\"\n    episodes_greater: Int\n\n    \"\"\"Filter by amount of episodes the media has\"\"\"\n    episodes_lesser: Int\n\n    \"\"\"Filter by the media's episode length\"\"\"\n    duration_greater: Int\n\n    \"\"\"Filter by the media's episode length\"\"\"\n    duration_lesser: Int\n\n    \"\"\"Filter by the media's chapter count\"\"\"\n    chapters_greater: Int\n\n    \"\"\"Filter by the media's chapter count\"\"\"\n    chapters_lesser: Int\n\n    \"\"\"Filter by the media's volume count\"\"\"\n    volumes_greater: Int\n\n    \"\"\"Filter by the media's volume count\"\"\"\n    volumes_lesser: Int\n\n    \"\"\"Filter by the media's genres\"\"\"\n    genre_in: [String]\n\n    \"\"\"Filter by the media's genres\"\"\"\n    genre_not_in: [String]\n\n    \"\"\"Filter by the media's tags\"\"\"\n    tag_in: [String]\n\n    \"\"\"Filter by the media's tags\"\"\"\n    tag_not_in: [String]\n\n    \"\"\"Filter by the media's tags with in a tag category\"\"\"\n    tagCategory_in: [String]\n\n    \"\"\"Filter by the media's tags with in a tag category\"\"\"\n    tagCategory_not_in: [String]\n\n    \"\"\"Filter media by sites with a online streaming or reading license\"\"\"\n    licensedBy_in: [String]\n\n    \"\"\"Filter by the media's average score\"\"\"\n    averageScore_not: Int\n\n    \"\"\"Filter by the media's average score\"\"\"\n    averageScore_greater: Int\n\n    \"\"\"Filter by the media's average score\"\"\"\n    averageScore_lesser: Int\n\n    \"\"\"Filter by the number of users with this media on their list\"\"\"\n    popularity_not: Int\n\n    \"\"\"Filter by the number of users with this media on their list\"\"\"\n    popularity_greater: Int\n\n    \"\"\"Filter by the number of users with this media on their list\"\"\"\n    popularity_lesser: Int\n\n    \"\"\"Filter by the source type of the media\"\"\"\n    source_in: [MediaSource]\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [MediaSort]\n  ): [Media]\n  characters(\n    \"\"\"Filter by character id\"\"\"\n    id: Int\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"Filter by character id\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by character id\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by character id\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [CharacterSort]\n  ): [Character]\n  staff(\n    \"\"\"Filter by the staff id\"\"\"\n    id: Int\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"Filter by the staff id\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by the staff id\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by the staff id\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [StaffSort]\n  ): [Staff]\n  studios(\n    \"\"\"Filter by the studio id\"\"\"\n    id: Int\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"Filter by the studio id\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by the studio id\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by the studio id\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [StudioSort]\n  ): [Studio]\n  mediaList(\n    \"\"\"Filter by a list entry's id\"\"\"\n    id: Int\n\n    \"\"\"Filter by a user's id\"\"\"\n    userId: Int\n\n    \"\"\"Filter by a user's name\"\"\"\n    userName: String\n\n    \"\"\"Filter by the list entries media type\"\"\"\n    type: MediaType\n\n    \"\"\"Filter by the watching/reading status\"\"\"\n    status: MediaListStatus\n\n    \"\"\"Filter by the media id of the list entry\"\"\"\n    mediaId: Int\n\n    \"\"\"\n    Filter list entries to users who are being followed by the authenticated user\n    \"\"\"\n    isFollowing: Boolean\n\n    \"\"\"Filter by note words and #tags\"\"\"\n    notes: String\n\n    \"\"\"Filter by the date the user started the media\"\"\"\n    startedAt: FuzzyDateInt\n\n    \"\"\"Filter by the date the user completed the media\"\"\"\n    completedAt: FuzzyDateInt\n\n    \"\"\"\n    Limit to only entries also on the auth user's list. Requires user id or name arguments.\n    \"\"\"\n    compareWithAuthList: Boolean\n\n    \"\"\"Filter by a user's id\"\"\"\n    userId_in: [Int]\n\n    \"\"\"Filter by the watching/reading status\"\"\"\n    status_in: [MediaListStatus]\n\n    \"\"\"Filter by the watching/reading status\"\"\"\n    status_not_in: [MediaListStatus]\n\n    \"\"\"Filter by the watching/reading status\"\"\"\n    status_not: MediaListStatus\n\n    \"\"\"Filter by note words and #tags\"\"\"\n    notes_like: String\n\n    \"\"\"Filter by the date the user started the media\"\"\"\n    startedAt_greater: FuzzyDateInt\n\n    \"\"\"Filter by the date the user started the media\"\"\"\n    startedAt_lesser: FuzzyDateInt\n\n    \"\"\"Filter by the date the user started the media\"\"\"\n    startedAt_like: String\n\n    \"\"\"Filter by the date the user completed the media\"\"\"\n    completedAt_greater: FuzzyDateInt\n\n    \"\"\"Filter by the date the user completed the media\"\"\"\n    completedAt_lesser: FuzzyDateInt\n\n    \"\"\"Filter by the date the user completed the media\"\"\"\n    completedAt_like: String\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [MediaListSort]\n  ): [MediaList]\n  airingSchedules(\n    \"\"\"Filter by the id of the airing schedule item\"\"\"\n    id: Int\n\n    \"\"\"Filter by the id of associated media\"\"\"\n    mediaId: Int\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode: Int\n\n    \"\"\"Filter by the time of airing\"\"\"\n    airingAt: Int\n\n    \"\"\"Filter to episodes that haven't yet aired\"\"\"\n    notYetAired: Boolean\n\n    \"\"\"Filter by the id of the airing schedule item\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by the id of the airing schedule item\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by the id of the airing schedule item\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"Filter by the id of associated media\"\"\"\n    mediaId_not: Int\n\n    \"\"\"Filter by the id of associated media\"\"\"\n    mediaId_in: [Int]\n\n    \"\"\"Filter by the id of associated media\"\"\"\n    mediaId_not_in: [Int]\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode_not: Int\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode_in: [Int]\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode_not_in: [Int]\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode_greater: Int\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode_lesser: Int\n\n    \"\"\"Filter by the time of airing\"\"\"\n    airingAt_greater: Int\n\n    \"\"\"Filter by the time of airing\"\"\"\n    airingAt_lesser: Int\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [AiringSort]\n  ): [AiringSchedule]\n  mediaTrends(\n    \"\"\"Filter by the media id\"\"\"\n    mediaId: Int\n\n    \"\"\"Filter by date\"\"\"\n    date: Int\n\n    \"\"\"Filter by trending amount\"\"\"\n    trending: Int\n\n    \"\"\"Filter by score\"\"\"\n    averageScore: Int\n\n    \"\"\"Filter by popularity\"\"\"\n    popularity: Int\n\n    \"\"\"Filter by episode number\"\"\"\n    episode: Int\n\n    \"\"\"Filter to stats recorded while the media was releasing\"\"\"\n    releasing: Boolean\n\n    \"\"\"Filter by the media id\"\"\"\n    mediaId_not: Int\n\n    \"\"\"Filter by the media id\"\"\"\n    mediaId_in: [Int]\n\n    \"\"\"Filter by the media id\"\"\"\n    mediaId_not_in: [Int]\n\n    \"\"\"Filter by date\"\"\"\n    date_greater: Int\n\n    \"\"\"Filter by date\"\"\"\n    date_lesser: Int\n\n    \"\"\"Filter by trending amount\"\"\"\n    trending_greater: Int\n\n    \"\"\"Filter by trending amount\"\"\"\n    trending_lesser: Int\n\n    \"\"\"Filter by trending amount\"\"\"\n    trending_not: Int\n\n    \"\"\"Filter by score\"\"\"\n    averageScore_greater: Int\n\n    \"\"\"Filter by score\"\"\"\n    averageScore_lesser: Int\n\n    \"\"\"Filter by score\"\"\"\n    averageScore_not: Int\n\n    \"\"\"Filter by popularity\"\"\"\n    popularity_greater: Int\n\n    \"\"\"Filter by popularity\"\"\"\n    popularity_lesser: Int\n\n    \"\"\"Filter by popularity\"\"\"\n    popularity_not: Int\n\n    \"\"\"Filter by episode number\"\"\"\n    episode_greater: Int\n\n    \"\"\"Filter by episode number\"\"\"\n    episode_lesser: Int\n\n    \"\"\"Filter by episode number\"\"\"\n    episode_not: Int\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [MediaTrendSort]\n  ): [MediaTrend]\n  notifications(\n    \"\"\"Filter by the type of notifications\"\"\"\n    type: NotificationType\n\n    \"\"\"Reset the unread notification count to 0 on load\"\"\"\n    resetNotificationCount: Boolean\n\n    \"\"\"Filter by the type of notifications\"\"\"\n    type_in: [NotificationType]\n  ): [NotificationUnion]\n  followers(\n    \"\"\"User id of the follower/followed\"\"\"\n    userId: Int!\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [UserSort]\n  ): [User]\n  following(\n    \"\"\"User id of the follower/followed\"\"\"\n    userId: Int!\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [UserSort]\n  ): [User]\n  activities(\n    \"\"\"Filter by the activity id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the owner user id\"\"\"\n    userId: Int\n\n    \"\"\"Filter by the id of the user who sent a message\"\"\"\n    messengerId: Int\n\n    \"\"\"Filter by the associated media id of the activity\"\"\"\n    mediaId: Int\n\n    \"\"\"Filter by the type of activity\"\"\"\n    type: ActivityType\n\n    \"\"\"\n    Filter activity to users who are being followed by the authenticated user\n    \"\"\"\n    isFollowing: Boolean\n\n    \"\"\"Filter activity to only activity with replies\"\"\"\n    hasReplies: Boolean\n\n    \"\"\"Filter activity to only activity with replies or is of type text\"\"\"\n    hasRepliesOrTypeText: Boolean\n\n    \"\"\"Filter by the time the activity was created\"\"\"\n    createdAt: Int\n\n    \"\"\"Filter by the activity id\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by the activity id\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by the activity id\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"Filter by the owner user id\"\"\"\n    userId_not: Int\n\n    \"\"\"Filter by the owner user id\"\"\"\n    userId_in: [Int]\n\n    \"\"\"Filter by the owner user id\"\"\"\n    userId_not_in: [Int]\n\n    \"\"\"Filter by the id of the user who sent a message\"\"\"\n    messengerId_not: Int\n\n    \"\"\"Filter by the id of the user who sent a message\"\"\"\n    messengerId_in: [Int]\n\n    \"\"\"Filter by the id of the user who sent a message\"\"\"\n    messengerId_not_in: [Int]\n\n    \"\"\"Filter by the associated media id of the activity\"\"\"\n    mediaId_not: Int\n\n    \"\"\"Filter by the associated media id of the activity\"\"\"\n    mediaId_in: [Int]\n\n    \"\"\"Filter by the associated media id of the activity\"\"\"\n    mediaId_not_in: [Int]\n\n    \"\"\"Filter by the type of activity\"\"\"\n    type_not: ActivityType\n\n    \"\"\"Filter by the type of activity\"\"\"\n    type_in: [ActivityType]\n\n    \"\"\"Filter by the type of activity\"\"\"\n    type_not_in: [ActivityType]\n\n    \"\"\"Filter by the time the activity was created\"\"\"\n    createdAt_greater: Int\n\n    \"\"\"Filter by the time the activity was created\"\"\"\n    createdAt_lesser: Int\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [ActivitySort]\n  ): [ActivityUnion]\n  activityReplies(\n    \"\"\"Filter by the reply id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the parent id\"\"\"\n    activityId: Int\n  ): [ActivityReply]\n  threads(\n    \"\"\"Filter by the thread id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the user id of the thread's creator\"\"\"\n    userId: Int\n\n    \"\"\"Filter by the user id of the last user to comment on the thread\"\"\"\n    replyUserId: Int\n\n    \"\"\"Filter by if the currently authenticated user's subscribed threads\"\"\"\n    subscribed: Boolean\n\n    \"\"\"Filter by thread category id\"\"\"\n    categoryId: Int\n\n    \"\"\"Filter by thread media id category\"\"\"\n    mediaCategoryId: Int\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"Filter by the thread id\"\"\"\n    id_in: [Int]\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [ThreadSort]\n  ): [Thread]\n  threadComments(\n    \"\"\"Filter by the comment id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the thread id\"\"\"\n    threadId: Int\n\n    \"\"\"Filter by the user id of the comment's creator\"\"\"\n    userId: Int\n  ): [ThreadComment]\n  reviews(\n    \"\"\"Filter by Review id\"\"\"\n    id: Int\n\n    \"\"\"Filter by media id\"\"\"\n    mediaId: Int\n\n    \"\"\"Filter by media id\"\"\"\n    userId: Int\n\n    \"\"\"Filter by media type\"\"\"\n    mediaType: MediaType\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [ReviewSort]\n  ): [Review]\n}\n\nscalar Json\n\n\"\"\"Types that can be liked\"\"\"\nenum LikeableType {\n  THREAD\n  THREAD_COMMENT\n  ACTIVITY\n  ACTIVITY_REPLY\n}\n\n\"\"\"User list activity (anime & manga updates)\"\"\"\ntype ListActivity {\n  \"\"\"The id of the activity\"\"\"\n  id: Int!\n\n  \"\"\"The user id of the activity's creator\"\"\"\n  userId: Int\n\n  \"\"\"The type of activity\"\"\"\n  type: ActivityType\n\n  \"\"\"The number of activity replies\"\"\"\n  replyCount: Int!\n\n  \"\"\"The list item's textual status\"\"\"\n  status: String\n\n  \"\"\"The list progress made\"\"\"\n  progress: String\n\n  \"\"\"The url for the activity page on the AniList website\"\"\"\n  siteUrl: String\n\n  \"\"\"The time the activity was created at\"\"\"\n  createdAt: Int!\n\n  \"\"\"The owner of the activity\"\"\"\n  user: User\n\n  \"\"\"The associated media to the activity update\"\"\"\n  media: Media\n\n  \"\"\"The written replies to the activity\"\"\"\n  replies: [ActivityReply]\n\n  \"\"\"The users who liked the activity\"\"\"\n  likes: [User]\n}\n\n\"\"\"User's list score statistics\"\"\"\ntype ListScoreStats {\n  meanScore: Int\n  standardDeviation: Int\n}\n\n\"\"\"Anime or Manga\"\"\"\ntype Media {\n  \"\"\"The id of the media\"\"\"\n  id: Int!\n\n  \"\"\"The mal id of the media\"\"\"\n  idMal: Int\n\n  \"\"\"The official titles of the media in various languages\"\"\"\n  title: MediaTitle\n\n  \"\"\"The type of the media; anime or manga\"\"\"\n  type: MediaType\n\n  \"\"\"The format the media was released in\"\"\"\n  format: MediaFormat\n\n  \"\"\"The current releasing status of the media\"\"\"\n  status: MediaStatus\n\n  \"\"\"Short description of the media's story and characters\"\"\"\n  description(\n    \"\"\"Return the string in pre-parsed html instead of markdown\"\"\"\n    asHtml: Boolean\n  ): String\n\n  \"\"\"The first official release date of the media\"\"\"\n  startDate: FuzzyDate\n\n  \"\"\"The last official release date of the media\"\"\"\n  endDate: FuzzyDate\n\n  \"\"\"The year & season the media was initially released in\"\"\"\n  season: MediaSeason\n\n  \"\"\"The year & season the media was initially released in\"\"\"\n  seasonInt: Int\n\n  \"\"\"The amount of episodes the anime has when complete\"\"\"\n  episodes: Int\n\n  \"\"\"The general length of each anime episode in minutes\"\"\"\n  duration: Int\n\n  \"\"\"The amount of chapters the manga has when complete\"\"\"\n  chapters: Int\n\n  \"\"\"The amount of volumes the manga has when complete\"\"\"\n  volumes: Int\n\n  \"\"\"Where the media was created. (ISO 3166-1 alpha-2)\"\"\"\n  countryOfOrigin: CountryCode\n\n  \"\"\"If the media is officially licensed or a self-published doujin release\"\"\"\n  isLicensed: Boolean\n\n  \"\"\"Source type the media was adapted from.\"\"\"\n  source(\n    \"\"\"Provide 2 to use new version 2 of sources enum\"\"\"\n    version: Int\n  ): MediaSource\n\n  \"\"\"Official Twitter hashtags for the media\"\"\"\n  hashtag: String\n\n  \"\"\"Media trailer or advertisement\"\"\"\n  trailer: MediaTrailer\n\n  \"\"\"When the media's data was last updated\"\"\"\n  updatedAt: Int\n\n  \"\"\"The cover images of the media\"\"\"\n  coverImage: MediaCoverImage\n\n  \"\"\"The banner image of the media\"\"\"\n  bannerImage: String\n\n  \"\"\"The genres of the media\"\"\"\n  genres: [String]\n\n  \"\"\"Alternative titles of the media\"\"\"\n  synonyms: [String]\n\n  \"\"\"A weighted average score of all the user's scores of the media\"\"\"\n  averageScore: Int\n\n  \"\"\"Mean score of all the user's scores of the media\"\"\"\n  meanScore: Int\n\n  \"\"\"The number of users with the media on their list\"\"\"\n  popularity: Int\n\n  \"\"\"\n  Locked media may not be added to lists our favorited. This may be due to the entry pending for deletion or other reasons.\n  \"\"\"\n  isLocked: Boolean\n\n  \"\"\"The amount of related activity in the past hour\"\"\"\n  trending: Int\n\n  \"\"\"The amount of user's who have favourited the media\"\"\"\n  favourites: Int\n\n  \"\"\"List of tags that describes elements and themes of the media\"\"\"\n  tags: [MediaTag]\n\n  \"\"\"Other media in the same or connecting franchise\"\"\"\n  relations: MediaConnection\n\n  \"\"\"The characters in the media\"\"\"\n  characters(\n    sort: [CharacterSort]\n    role: CharacterRole\n\n    \"\"\"The page\"\"\"\n    page: Int\n\n    \"\"\"The amount of entries per page, max 25\"\"\"\n    perPage: Int\n  ): CharacterConnection\n\n  \"\"\"The staff who produced the media\"\"\"\n  staff(\n    sort: [StaffSort]\n\n    \"\"\"The page\"\"\"\n    page: Int\n\n    \"\"\"The amount of entries per page, max 25\"\"\"\n    perPage: Int\n  ): StaffConnection\n\n  \"\"\"The companies who produced the media\"\"\"\n  studios(sort: [StudioSort], isMain: Boolean): StudioConnection\n\n  \"\"\"If the media is marked as favourite by the current authenticated user\"\"\"\n  isFavourite: Boolean!\n\n  \"\"\"If the media is intended only for 18+ adult audiences\"\"\"\n  isAdult: Boolean\n\n  \"\"\"The media's next episode airing schedule\"\"\"\n  nextAiringEpisode: AiringSchedule\n\n  \"\"\"The media's entire airing schedule\"\"\"\n  airingSchedule(\n    \"\"\"Filter to episodes that have not yet aired\"\"\"\n    notYetAired: Boolean\n\n    \"\"\"The page\"\"\"\n    page: Int\n\n    \"\"\"The amount of entries per page, max 25\"\"\"\n    perPage: Int\n  ): AiringScheduleConnection\n\n  \"\"\"The media's daily trend stats\"\"\"\n  trends(\n    sort: [MediaTrendSort]\n\n    \"\"\"Filter to stats recorded while the media was releasing\"\"\"\n    releasing: Boolean\n\n    \"\"\"The page\"\"\"\n    page: Int\n\n    \"\"\"The amount of entries per page, max 25\"\"\"\n    perPage: Int\n  ): MediaTrendConnection\n\n  \"\"\"External links to another site related to the media\"\"\"\n  externalLinks: [MediaExternalLink]\n\n  \"\"\"Data and links to legal streaming episodes on external sites\"\"\"\n  streamingEpisodes: [MediaStreamingEpisode]\n\n  \"\"\"\n  The ranking of the media in a particular time span and format compared to other media\n  \"\"\"\n  rankings: [MediaRank]\n\n  \"\"\"The authenticated user's media list entry for the media\"\"\"\n  mediaListEntry: MediaList\n\n  \"\"\"User reviews of the media\"\"\"\n  reviews(\n    limit: Int\n    sort: [ReviewSort]\n\n    \"\"\"The page\"\"\"\n    page: Int\n\n    \"\"\"The amount of entries per page, max 25\"\"\"\n    perPage: Int\n  ): ReviewConnection\n  stats: MediaStats\n\n  \"\"\"The url for the media page on the AniList website\"\"\"\n  siteUrl: String\n\n  \"\"\"\n  If the media should have forum thread automatically created for it on airing episode release\n  \"\"\"\n  autoCreateForumThread: Boolean\n\n  \"\"\"Notes for site moderators\"\"\"\n  modNotes: String\n}\n\n\"\"\"Internal - Media characters separated\"\"\"\ntype MediaCharacter {\n  \"\"\"The id of the connection\"\"\"\n  id: Int\n\n  \"\"\"The characters role in the media\"\"\"\n  role: CharacterRole\n\n  \"\"\"The characters in the media voiced by the parent actor\"\"\"\n  character: Character\n\n  \"\"\"The voice actor of the character\"\"\"\n  voiceActor: Staff\n}\n\ntype MediaConnection {\n  edges: [MediaEdge]\n  nodes: [Media]\n\n  \"\"\"The pagination information\"\"\"\n  pageInfo: PageInfo\n}\n\ntype MediaCoverImage {\n  \"\"\"\n  The cover image url of the media at its largest size. If this size isn't available, large will be provided instead.\n  \"\"\"\n  extraLarge: String\n\n  \"\"\"The cover image url of the media at a large size\"\"\"\n  large: String\n\n  \"\"\"The cover image url of the media at medium size\"\"\"\n  medium: String\n\n  \"\"\"Average #hex color of cover image\"\"\"\n  color: String\n}\n\n\"\"\"Media connection edge\"\"\"\ntype MediaEdge {\n  node: Media\n\n  \"\"\"The id of the connection\"\"\"\n  id: Int\n\n  \"\"\"The type of relation to the parent model\"\"\"\n  relationType(\n    \"\"\"Provide 2 to use new version 2 of relation enum\"\"\"\n    version: Int\n  ): MediaRelation\n\n  \"\"\"\n  If the studio is the main animation studio of the media (For Studio->MediaConnection field only)\n  \"\"\"\n  isMainStudio: Boolean!\n\n  \"\"\"The characters in the media voiced by the parent actor\"\"\"\n  characters: [Character]\n\n  \"\"\"The characters role in the media\"\"\"\n  characterRole: CharacterRole\n\n  \"\"\"The role of the staff member in the production of the media\"\"\"\n  staffRole: String\n\n  \"\"\"The voice actors of the character\"\"\"\n  voiceActors(language: StaffLanguage, sort: [StaffSort]): [Staff]\n\n  \"\"\"The order the media should be displayed from the users favourites\"\"\"\n  favouriteOrder: Int\n}\n\n\"\"\"An external link to another site related to the media\"\"\"\ntype MediaExternalLink {\n  \"\"\"The id of the external link\"\"\"\n  id: Int!\n\n  \"\"\"The url of the external link\"\"\"\n  url: String!\n\n  \"\"\"The site location of the external link\"\"\"\n  site: String!\n}\n\n\"\"\"An external link to another site related to the media\"\"\"\ninput MediaExternalLinkInput {\n  \"\"\"The id of the external link\"\"\"\n  id: Int!\n\n  \"\"\"The url of the external link\"\"\"\n  url: String!\n\n  \"\"\"The site location of the external link\"\"\"\n  site: String!\n}\n\n\"\"\"The format the media was released in\"\"\"\nenum MediaFormat {\n  \"\"\"Anime broadcast on television\"\"\"\n  TV\n\n  \"\"\"Anime which are under 15 minutes in length and broadcast on television\"\"\"\n  TV_SHORT\n\n  \"\"\"Anime movies with a theatrical release\"\"\"\n  MOVIE\n\n  \"\"\"\n  Special episodes that have been included in DVD/Blu-ray releases, picture dramas, pilots, etc\n  \"\"\"\n  SPECIAL\n\n  \"\"\"\n  (Original Video Animation) Anime that have been released directly on\n  DVD/Blu-ray without originally going through a theatrical release or\n  television broadcast\n  \"\"\"\n  OVA\n\n  \"\"\"\n  (Original Net Animation) Anime that have been originally released online or are only available through streaming services.\n  \"\"\"\n  ONA\n\n  \"\"\"Short anime released as a music video\"\"\"\n  MUSIC\n\n  \"\"\"Professionally published manga with more than one chapter\"\"\"\n  MANGA\n\n  \"\"\"Written books released as a series of light novels\"\"\"\n  NOVEL\n\n  \"\"\"Manga with just one chapter\"\"\"\n  ONE_SHOT\n}\n\n\"\"\"List of anime or manga\"\"\"\ntype MediaList {\n  \"\"\"The id of the list entry\"\"\"\n  id: Int!\n\n  \"\"\"The id of the user owner of the list entry\"\"\"\n  userId: Int!\n\n  \"\"\"The id of the media\"\"\"\n  mediaId: Int!\n\n  \"\"\"The watching/reading status\"\"\"\n  status: MediaListStatus\n\n  \"\"\"The score of the entry\"\"\"\n  score(\n    \"\"\"Force the score to be returned in the provided format type.\"\"\"\n    format: ScoreFormat\n  ): Float\n\n  \"\"\"The amount of episodes/chapters consumed by the user\"\"\"\n  progress: Int\n\n  \"\"\"The amount of volumes read by the user\"\"\"\n  progressVolumes: Int\n\n  \"\"\"The amount of times the user has rewatched/read the media\"\"\"\n  repeat: Int\n\n  \"\"\"Priority of planning\"\"\"\n  priority: Int\n\n  \"\"\"If the entry should only be visible to authenticated user\"\"\"\n  private: Boolean\n\n  \"\"\"Text notes\"\"\"\n  notes: String\n\n  \"\"\"If the entry shown be hidden from non-custom lists\"\"\"\n  hiddenFromStatusLists: Boolean\n\n  \"\"\"Map of booleans for which custom lists the entry are in\"\"\"\n  customLists(\n    \"\"\"Change return structure to an array of objects\"\"\"\n    asArray: Boolean\n  ): Json\n\n  \"\"\"Map of advanced scores with name keys\"\"\"\n  advancedScores: Json\n\n  \"\"\"When the entry was started by the user\"\"\"\n  startedAt: FuzzyDate\n\n  \"\"\"When the entry was completed by the user\"\"\"\n  completedAt: FuzzyDate\n\n  \"\"\"When the entry data was last updated\"\"\"\n  updatedAt: Int\n\n  \"\"\"When the entry data was created\"\"\"\n  createdAt: Int\n  media: Media\n  user: User\n}\n\n\"\"\"List of anime or manga\"\"\"\ntype MediaListCollection {\n  \"\"\"Grouped media list entries\"\"\"\n  lists: [MediaListGroup]\n\n  \"\"\"The owner of the list\"\"\"\n  user: User\n\n  \"\"\"If there is another chunk\"\"\"\n  hasNextChunk: Boolean\n\n  \"\"\"A map of media list entry arrays grouped by status\"\"\"\n  statusLists(asArray: Boolean): [[MediaList]] @deprecated(reason: \"Not GraphQL spec compliant, use lists field instead.\")\n\n  \"\"\"A map of media list entry arrays grouped by custom lists\"\"\"\n  customLists(asArray: Boolean): [[MediaList]] @deprecated(reason: \"Not GraphQL spec compliant, use lists field instead.\")\n}\n\n\"\"\"List group of anime or manga entries\"\"\"\ntype MediaListGroup {\n  \"\"\"Media list entries\"\"\"\n  entries: [MediaList]\n  name: String\n  isCustomList: Boolean\n  isSplitCompletedList: Boolean\n  status: MediaListStatus\n}\n\n\"\"\"A user's list options\"\"\"\ntype MediaListOptions {\n  \"\"\"The score format the user is using for media lists\"\"\"\n  scoreFormat: ScoreFormat\n\n  \"\"\"The default order list rows should be displayed in\"\"\"\n  rowOrder: String\n\n  \"\"\"\n  (Site only) If the user should be using legacy css-supporting list versions\n  \"\"\"\n  useLegacyLists: Boolean\n\n  \"\"\"The user's anime list options\"\"\"\n  animeList: MediaListTypeOptions\n\n  \"\"\"The user's manga list options\"\"\"\n  mangaList: MediaListTypeOptions\n\n  \"\"\"The list theme options for both lists\"\"\"\n  sharedTheme: Json @deprecated(reason: \"This field has not yet been fully implemented and may change without warning\")\n\n  \"\"\"\n  If the shared theme should be used instead of the individual list themes\n  \"\"\"\n  sharedThemeEnabled: Boolean @deprecated(reason: \"This field has not yet been fully implemented and may change without warning\")\n}\n\n\"\"\"A user's list options for anime or manga lists\"\"\"\ninput MediaListOptionsInput {\n  \"\"\"The order each list should be displayed in\"\"\"\n  sectionOrder: [String]\n\n  \"\"\"If the completed sections of the list should be separated by format\"\"\"\n  splitCompletedSectionByFormat: Boolean\n\n  \"\"\"The names of the user's custom lists\"\"\"\n  customLists: [String]\n\n  \"\"\"The names of the user's advanced scoring sections\"\"\"\n  advancedScoring: [String]\n\n  \"\"\"If advanced scoring is enabled\"\"\"\n  advancedScoringEnabled: Boolean\n\n  \"\"\"list theme\"\"\"\n  theme: String\n}\n\n\"\"\"Media list sort enums\"\"\"\nenum MediaListSort {\n  MEDIA_ID\n  MEDIA_ID_DESC\n  SCORE\n  SCORE_DESC\n  STATUS\n  STATUS_DESC\n  PROGRESS\n  PROGRESS_DESC\n  PROGRESS_VOLUMES\n  PROGRESS_VOLUMES_DESC\n  REPEAT\n  REPEAT_DESC\n  PRIORITY\n  PRIORITY_DESC\n  STARTED_ON\n  STARTED_ON_DESC\n  FINISHED_ON\n  FINISHED_ON_DESC\n  ADDED_TIME\n  ADDED_TIME_DESC\n  UPDATED_TIME\n  UPDATED_TIME_DESC\n  MEDIA_TITLE_ROMAJI\n  MEDIA_TITLE_ROMAJI_DESC\n  MEDIA_TITLE_ENGLISH\n  MEDIA_TITLE_ENGLISH_DESC\n  MEDIA_TITLE_NATIVE\n  MEDIA_TITLE_NATIVE_DESC\n  MEDIA_POPULARITY\n  MEDIA_POPULARITY_DESC\n}\n\n\"\"\"Media list watching/reading status enum.\"\"\"\nenum MediaListStatus {\n  \"\"\"Currently watching/reading\"\"\"\n  CURRENT\n\n  \"\"\"Planning to watch/read\"\"\"\n  PLANNING\n\n  \"\"\"Finished watching/reading\"\"\"\n  COMPLETED\n\n  \"\"\"Stopped watching/reading before completing\"\"\"\n  DROPPED\n\n  \"\"\"Paused watching/reading\"\"\"\n  PAUSED\n\n  \"\"\"Re-watching/reading\"\"\"\n  REPEATING\n}\n\n\"\"\"A user's list options for anime or manga lists\"\"\"\ntype MediaListTypeOptions {\n  \"\"\"The order each list should be displayed in\"\"\"\n  sectionOrder: [String]\n\n  \"\"\"If the completed sections of the list should be separated by format\"\"\"\n  splitCompletedSectionByFormat: Boolean\n\n  \"\"\"The list theme options\"\"\"\n  theme: Json @deprecated(reason: \"This field has not yet been fully implemented and may change without warning\")\n\n  \"\"\"The names of the user's custom lists\"\"\"\n  customLists: [String]\n\n  \"\"\"The names of the user's advanced scoring sections\"\"\"\n  advancedScoring: [String]\n\n  \"\"\"If advanced scoring is enabled\"\"\"\n  advancedScoringEnabled: Boolean\n}\n\n\"\"\"\nThe ranking of a media in a particular time span and format compared to other media\n\"\"\"\ntype MediaRank {\n  \"\"\"The id of the rank\"\"\"\n  id: Int!\n\n  \"\"\"The numerical rank of the media\"\"\"\n  rank: Int!\n\n  \"\"\"The type of ranking\"\"\"\n  type: MediaRankType!\n\n  \"\"\"The format the media is ranked within\"\"\"\n  format: MediaFormat!\n\n  \"\"\"The year the media is ranked within\"\"\"\n  year: Int\n\n  \"\"\"The season the media is ranked within\"\"\"\n  season: MediaSeason\n\n  \"\"\"If the ranking is based on all time instead of a season/year\"\"\"\n  allTime: Boolean\n\n  \"\"\"String that gives context to the ranking type and time span\"\"\"\n  context: String!\n}\n\n\"\"\"The type of ranking\"\"\"\nenum MediaRankType {\n  \"\"\"Ranking is based on the media's ratings/score\"\"\"\n  RATED\n\n  \"\"\"Ranking is based on the media's popularity\"\"\"\n  POPULAR\n}\n\n\"\"\"Type of relation media has to its parent.\"\"\"\nenum MediaRelation {\n  \"\"\"An adaption of this media into a different format\"\"\"\n  ADAPTATION\n\n  \"\"\"Released before the relation\"\"\"\n  PREQUEL\n\n  \"\"\"Released after the relation\"\"\"\n  SEQUEL\n\n  \"\"\"The media a side story is from\"\"\"\n  PARENT\n\n  \"\"\"A side story of the parent media\"\"\"\n  SIDE_STORY\n\n  \"\"\"Shares at least 1 character\"\"\"\n  CHARACTER\n\n  \"\"\"A shortened and summarized version\"\"\"\n  SUMMARY\n\n  \"\"\"An alternative version of the same media\"\"\"\n  ALTERNATIVE\n\n  \"\"\"An alternative version of the media with a different primary focus\"\"\"\n  SPIN_OFF\n\n  \"\"\"Other\"\"\"\n  OTHER\n\n  \"\"\"Version 2 only. The source material the media was adapted from\"\"\"\n  SOURCE\n\n  \"\"\"Version 2 only.\"\"\"\n  COMPILATION\n\n  \"\"\"Version 2 only.\"\"\"\n  CONTAINS\n}\n\nenum MediaSeason {\n  \"\"\"Months December to February\"\"\"\n  WINTER\n\n  \"\"\"Months March to May\"\"\"\n  SPRING\n\n  \"\"\"Months June to August\"\"\"\n  SUMMER\n\n  \"\"\"Months September to November\"\"\"\n  FALL\n}\n\n\"\"\"Media sort enums\"\"\"\nenum MediaSort {\n  ID\n  ID_DESC\n  TITLE_ROMAJI\n  TITLE_ROMAJI_DESC\n  TITLE_ENGLISH\n  TITLE_ENGLISH_DESC\n  TITLE_NATIVE\n  TITLE_NATIVE_DESC\n  TYPE\n  TYPE_DESC\n  FORMAT\n  FORMAT_DESC\n  START_DATE\n  START_DATE_DESC\n  END_DATE\n  END_DATE_DESC\n  SCORE\n  SCORE_DESC\n  POPULARITY\n  POPULARITY_DESC\n  TRENDING\n  TRENDING_DESC\n  EPISODES\n  EPISODES_DESC\n  DURATION\n  DURATION_DESC\n  STATUS\n  STATUS_DESC\n  CHAPTERS\n  CHAPTERS_DESC\n  VOLUMES\n  VOLUMES_DESC\n  UPDATED_AT\n  UPDATED_AT_DESC\n  SEARCH_MATCH\n  FAVOURITES\n  FAVOURITES_DESC\n}\n\n\"\"\"Source type the media was adapted from\"\"\"\nenum MediaSource {\n  \"\"\"An original production not based of another work\"\"\"\n  ORIGINAL\n\n  \"\"\"Asian comic book\"\"\"\n  MANGA\n\n  \"\"\"Written work published in volumes\"\"\"\n  LIGHT_NOVEL\n\n  \"\"\"Video game driven primary by text and narrative\"\"\"\n  VISUAL_NOVEL\n\n  \"\"\"Video game\"\"\"\n  VIDEO_GAME\n\n  \"\"\"Other\"\"\"\n  OTHER\n\n  \"\"\"Version 2 only. Written works not published in volumes\"\"\"\n  NOVEL\n\n  \"\"\"Version 2 only. Self-published works\"\"\"\n  DOUJINSHI\n\n  \"\"\"Version 2 only. Japanese Anime\"\"\"\n  ANIME\n}\n\n\"\"\"A media's statistics\"\"\"\ntype MediaStats {\n  scoreDistribution: [ScoreDistribution]\n  statusDistribution: [StatusDistribution]\n  airingProgression: [AiringProgression] @deprecated(reason: \"Replaced by MediaTrends\")\n}\n\n\"\"\"The current releasing status of the media\"\"\"\nenum MediaStatus {\n  \"\"\"Has completed and is no longer being released\"\"\"\n  FINISHED\n\n  \"\"\"Currently releasing\"\"\"\n  RELEASING\n\n  \"\"\"To be released at a later date\"\"\"\n  NOT_YET_RELEASED\n\n  \"\"\"Ended before the work could be finished\"\"\"\n  CANCELLED\n}\n\n\"\"\"Data and links to legal streaming episodes on external sites\"\"\"\ntype MediaStreamingEpisode {\n  \"\"\"Title of the episode\"\"\"\n  title: String\n\n  \"\"\"Url of episode image thumbnail\"\"\"\n  thumbnail: String\n\n  \"\"\"The url of the episode\"\"\"\n  url: String\n\n  \"\"\"The site location of the streaming episodes\"\"\"\n  site: String\n}\n\n\"\"\"Media submission\"\"\"\ntype MediaSubmission {\n  \"\"\"The id of the submission\"\"\"\n  id: Int!\n\n  \"\"\"User submitter of the submission\"\"\"\n  submitter: User\n\n  \"\"\"Status of the submission\"\"\"\n  status: SubmissionStatus\n  submitterStats: Json\n  notes: String\n  source: String\n  changes: [String]\n  media: Media\n  submission: Media\n  characters: [MediaSubmissionComparison]\n  staff: [MediaSubmissionComparison]\n  studios: [MediaSubmissionComparison]\n  relations: [MediaEdge]\n  externalLinks: [MediaExternalLink]\n  createdAt: Int\n}\n\n\"\"\"Media submission with comparison to current data\"\"\"\ntype MediaSubmissionComparison {\n  submission: MediaSubmissionEdge\n  character: MediaCharacter\n  staff: StaffEdge\n  studio: StudioEdge\n}\n\ntype MediaSubmissionEdge {\n  \"\"\"The id of the direct submission\"\"\"\n  id: Int\n  characterRole: CharacterRole\n  staffRole: String\n  isMain: Boolean\n  character: Character\n  characterSubmission: Character\n  voiceActor: Staff\n  voiceActorSubmission: Staff\n  staff: Staff\n  staffSubmission: Staff\n  studio: Studio\n  media: Media\n}\n\n\"\"\"A tag that describes a theme or element of the media\"\"\"\ntype MediaTag {\n  \"\"\"The id of the tag\"\"\"\n  id: Int!\n\n  \"\"\"The name of the tag\"\"\"\n  name: String!\n\n  \"\"\"A general description of the tag\"\"\"\n  description: String\n\n  \"\"\"The categories of tags this tag belongs to\"\"\"\n  category: String\n\n  \"\"\"The relevance ranking of the tag out of the 100 for this media\"\"\"\n  rank: Int\n\n  \"\"\"If the tag could be a spoiler for any media\"\"\"\n  isGeneralSpoiler: Boolean\n\n  \"\"\"If the tag is a spoiler for this media\"\"\"\n  isMediaSpoiler: Boolean\n\n  \"\"\"If the tag is only for adult 18+ media\"\"\"\n  isAdult: Boolean\n}\n\n\"\"\"The official titles of the media in various languages\"\"\"\ntype MediaTitle {\n  \"\"\"The romanization of the native language title\"\"\"\n  romaji(stylised: Boolean): String\n\n  \"\"\"The official english title\"\"\"\n  english(stylised: Boolean): String\n\n  \"\"\"Official title in it's native language\"\"\"\n  native(stylised: Boolean): String\n\n  \"\"\"\n  The currently authenticated users preferred title language. Default romaji for non-authenticated\n  \"\"\"\n  userPreferred: String\n}\n\n\"\"\"The official titles of the media in various languages\"\"\"\ninput MediaTitleInput {\n  \"\"\"The romanization of the native language title\"\"\"\n  romaji: String\n\n  \"\"\"The official english title\"\"\"\n  english: String\n\n  \"\"\"Official title in it's native language\"\"\"\n  native: String\n}\n\n\"\"\"Media trailer or advertisement\"\"\"\ntype MediaTrailer {\n  \"\"\"The trailer video id\"\"\"\n  id: String\n\n  \"\"\"\n  The site the video is hosted by (Currently either youtube or dailymotion)\n  \"\"\"\n  site: String\n\n  \"\"\"The url for the thumbnail image of the video\"\"\"\n  thumbnail: String\n}\n\n\"\"\"Daily media statistics\"\"\"\ntype MediaTrend {\n  \"\"\"The id of the tag\"\"\"\n  mediaId: Int!\n\n  \"\"\"The day the data was recorded (timestamp)\"\"\"\n  date: Int!\n\n  \"\"\"The amount of media activity on the day\"\"\"\n  trending: Int!\n\n  \"\"\"A weighted average score of all the user's scores of the media\"\"\"\n  averageScore: Int\n\n  \"\"\"The number of users with the media on their list\"\"\"\n  popularity: Int\n\n  \"\"\"The number of users with watching/reading the media\"\"\"\n  inProgress: Int\n\n  \"\"\"If the media was being released at this time\"\"\"\n  releasing: Boolean!\n\n  \"\"\"The episode number of the anime released on this day\"\"\"\n  episode: Int\n\n  \"\"\"The related media\"\"\"\n  media: Media\n}\n\ntype MediaTrendConnection {\n  edges: [MediaTrendEdge]\n  nodes: [MediaTrend]\n\n  \"\"\"The pagination information\"\"\"\n  pageInfo: PageInfo\n}\n\n\"\"\"Media trend connection edge\"\"\"\ntype MediaTrendEdge {\n  node: MediaTrend\n}\n\n\"\"\"Media trend sort enums\"\"\"\nenum MediaTrendSort {\n  ID\n  ID_DESC\n  MEDIA_ID\n  MEDIA_ID_DESC\n  DATE\n  DATE_DESC\n  SCORE\n  SCORE_DESC\n  POPULARITY\n  POPULARITY_DESC\n  TRENDING\n  TRENDING_DESC\n  EPISODE\n  EPISODE_DESC\n}\n\n\"\"\"Media type enum, anime or manga.\"\"\"\nenum MediaType {\n  \"\"\"Japanese Anime\"\"\"\n  ANIME\n\n  \"\"\"Asian comic\"\"\"\n  MANGA\n}\n\n\"\"\"User message activity\"\"\"\ntype MessageActivity {\n  \"\"\"The id of the activity\"\"\"\n  id: Int!\n\n  \"\"\"The user id of the activity's recipient\"\"\"\n  recipientId: Int\n\n  \"\"\"The user id of the activity's sender\"\"\"\n  messengerId: Int\n\n  \"\"\"The type of the activity\"\"\"\n  type: ActivityType\n\n  \"\"\"The number of activity replies\"\"\"\n  replyCount: Int!\n\n  \"\"\"The message text (Markdown)\"\"\"\n  message(\n    \"\"\"Return the string in pre-parsed html instead of markdown\"\"\"\n    asHtml: Boolean\n  ): String\n\n  \"\"\"The url for the activity page on the AniList website\"\"\"\n  siteUrl: String\n\n  \"\"\"The time the activity was created at\"\"\"\n  createdAt: Int!\n\n  \"\"\"The user who the activity message was sent to\"\"\"\n  recipient: User\n\n  \"\"\"The user who sent the activity message\"\"\"\n  messenger: User\n\n  \"\"\"The written replies to the activity\"\"\"\n  replies: [ActivityReply]\n\n  \"\"\"The users who liked the activity\"\"\"\n  likes: [User]\n}\n\ntype Mutation {\n  UpdateUser(\n    \"\"\"User's about/bio text\"\"\"\n    about: String\n\n    \"\"\"User's title language\"\"\"\n    titleLanguage: UserTitleLanguage\n\n    \"\"\"If the user should see media marked as adult-only\"\"\"\n    displayAdultContent: Boolean\n\n    \"\"\"\n    If the user should get notifications when a show they are watching aires\n    \"\"\"\n    airingNotifications: Boolean\n\n    \"\"\"The user's list scoring system\"\"\"\n    scoreFormat: ScoreFormat\n\n    \"\"\"The user's default list order\"\"\"\n    rowOrder: String\n\n    \"\"\"Profile highlight color\"\"\"\n    profileColor: String\n\n    \"\"\"Profile highlight color\"\"\"\n    donatorBadge: String\n\n    \"\"\"Notification options\"\"\"\n    notificationOptions: [NotificationOptionInput]\n\n    \"\"\"The user's anime list options\"\"\"\n    animeListOptions: MediaListOptionsInput\n\n    \"\"\"The user's anime list options\"\"\"\n    mangaListOptions: MediaListOptionsInput\n  ): User\n\n  \"\"\"Create or update a media list entry\"\"\"\n  SaveMediaListEntry(\n    \"\"\"The list entry id, required for updating\"\"\"\n    id: Int\n\n    \"\"\"The id of the media the entry is of\"\"\"\n    mediaId: Int\n\n    \"\"\"The watching/reading status\"\"\"\n    status: MediaListStatus\n\n    \"\"\"The score of the media in the user's chosen scoring method\"\"\"\n    score: Float\n\n    \"\"\"The score of the media in 100 point\"\"\"\n    scoreRaw: Int\n\n    \"\"\"The amount of episodes/chapters consumed by the user\"\"\"\n    progress: Int\n\n    \"\"\"The amount of volumes read by the user\"\"\"\n    progressVolumes: Int\n\n    \"\"\"The amount of times the user has rewatched/read the media\"\"\"\n    repeat: Int\n\n    \"\"\"Priority of planning\"\"\"\n    priority: Int\n\n    \"\"\"If the entry should only be visible to authenticated user\"\"\"\n    private: Boolean\n\n    \"\"\"Text notes\"\"\"\n    notes: String\n\n    \"\"\"If the entry shown be hidden from non-custom lists\"\"\"\n    hiddenFromStatusLists: Boolean\n\n    \"\"\"Array of custom list names which should be enabled for this entry\"\"\"\n    customLists: [String]\n\n    \"\"\"Array of advanced scores\"\"\"\n    advancedScores: [Float]\n\n    \"\"\"When the entry was started by the user\"\"\"\n    startedAt: FuzzyDateInput\n\n    \"\"\"When the entry was completed by the user\"\"\"\n    completedAt: FuzzyDateInput\n  ): MediaList\n\n  \"\"\"Update multiple media list entries to the same values\"\"\"\n  UpdateMediaListEntries(\n    \"\"\"The watching/reading status\"\"\"\n    status: MediaListStatus\n\n    \"\"\"The score of the media in the user's chosen scoring method\"\"\"\n    score: Float\n\n    \"\"\"The score of the media in 100 point\"\"\"\n    scoreRaw: Int\n\n    \"\"\"The amount of episodes/chapters consumed by the user\"\"\"\n    progress: Int\n\n    \"\"\"The amount of volumes read by the user\"\"\"\n    progressVolumes: Int\n\n    \"\"\"The amount of times the user has rewatched/read the media\"\"\"\n    repeat: Int\n\n    \"\"\"Priority of planning\"\"\"\n    priority: Int\n\n    \"\"\"If the entry should only be visible to authenticated user\"\"\"\n    private: Boolean\n\n    \"\"\"Text notes\"\"\"\n    notes: String\n\n    \"\"\"If the entry shown be hidden from non-custom lists\"\"\"\n    hiddenFromStatusLists: Boolean\n\n    \"\"\"Array of advanced scores\"\"\"\n    advancedScores: [Float]\n\n    \"\"\"When the entry was started by the user\"\"\"\n    startedAt: FuzzyDateInput\n\n    \"\"\"When the entry was completed by the user\"\"\"\n    completedAt: FuzzyDateInput\n\n    \"\"\"The list entries ids to update\"\"\"\n    ids: [Int]\n  ): [MediaList]\n\n  \"\"\"Delete a media list entry\"\"\"\n  DeleteMediaListEntry(\n    \"\"\"The id of the media list entry to delete\"\"\"\n    id: Int\n  ): Deleted\n\n  \"\"\"Delete a custom list and remove the list entries from it\"\"\"\n  DeleteCustomList(\n    \"\"\"The name of the custom list to delete\"\"\"\n    customList: String\n\n    \"\"\"The media list type of the custom list\"\"\"\n    type: MediaType\n  ): Deleted\n\n  \"\"\"Create or update text activity for the currently authenticated user\"\"\"\n  SaveTextActivity(\n    \"\"\"The activity's id, required for updating\"\"\"\n    id: Int\n\n    \"\"\"The activity text\"\"\"\n    text: String\n  ): TextActivity\n\n  \"\"\"Create or update message activity for the currently authenticated user\"\"\"\n  SaveMessageActivity(\n    \"\"\"The activity id, required for updating\"\"\"\n    id: Int\n\n    \"\"\"The activity message text\"\"\"\n    message: String\n\n    \"\"\"The id of the user the message is being sent to\"\"\"\n    recipientId: Int\n  ): MessageActivity\n\n  \"\"\"Delete an activity item of the authenticated users\"\"\"\n  DeleteActivity(\n    \"\"\"The id of the activity to delete\"\"\"\n    id: Int\n  ): Deleted\n\n  \"\"\"Create or update an activity reply\"\"\"\n  SaveActivityReply(\n    \"\"\"The activity reply id, required for updating\"\"\"\n    id: Int\n\n    \"\"\"The id of the parent activity being replied to\"\"\"\n    activityId: Int\n\n    \"\"\"The reply text\"\"\"\n    text: String\n  ): ActivityReply\n\n  \"\"\"Delete an activity reply of the authenticated users\"\"\"\n  DeleteActivityReply(\n    \"\"\"The id of the reply to delete\"\"\"\n    id: Int\n  ): Deleted\n\n  \"\"\"\n  Add or remove a like from a likeable type.\n                            Returns all the users who liked the same model\n  \"\"\"\n  ToggleLike(\n    \"\"\"The id of the likeable type\"\"\"\n    id: Int\n\n    \"\"\"The type of model to be un/liked\"\"\"\n    type: LikeableType\n  ): [User]\n\n  \"\"\"Toggle the un/following of a user\"\"\"\n  ToggleFollow(\n    \"\"\"The id of the user to un/follow\"\"\"\n    userId: Int\n  ): User\n\n  \"\"\"\n  Favourite or unfavourite an anime, manga, character, staff member, or studio\n  \"\"\"\n  ToggleFavourite(\n    \"\"\"The id of the anime to un/favourite\"\"\"\n    animeId: Int\n\n    \"\"\"The id of the manga to un/favourite\"\"\"\n    mangaId: Int\n\n    \"\"\"The id of the character to un/favourite\"\"\"\n    characterId: Int\n\n    \"\"\"The id of the staff to un/favourite\"\"\"\n    staffId: Int\n\n    \"\"\"The id of the studio to un/favourite\"\"\"\n    studioId: Int\n  ): Favourites\n\n  \"\"\"Update the order favourites are displayed in\"\"\"\n  UpdateFavouriteOrder(\n    \"\"\"The id of the anime to un/favourite\"\"\"\n    animeIds: [Int]\n\n    \"\"\"The id of the manga to un/favourite\"\"\"\n    mangaIds: [Int]\n\n    \"\"\"The id of the character to un/favourite\"\"\"\n    characterIds: [Int]\n\n    \"\"\"The id of the staff to un/favourite\"\"\"\n    staffIds: [Int]\n\n    \"\"\"The id of the studio to un/favourite\"\"\"\n    studioIds: [Int]\n\n    \"\"\"List of integers which the anime should be ordered by (Asc)\"\"\"\n    animeOrder: [Int]\n\n    \"\"\"List of integers which the manga should be ordered by (Asc)\"\"\"\n    mangaOrder: [Int]\n\n    \"\"\"List of integers which the character should be ordered by (Asc)\"\"\"\n    characterOrder: [Int]\n\n    \"\"\"List of integers which the staff should be ordered by (Asc)\"\"\"\n    staffOrder: [Int]\n\n    \"\"\"List of integers which the studio should be ordered by (Asc)\"\"\"\n    studioOrder: [Int]\n  ): Favourites\n\n  \"\"\"Create or update a review\"\"\"\n  SaveReview(\n    \"\"\"The review id, required for updating\"\"\"\n    id: Int\n\n    \"\"\"The id of the media the review is of\"\"\"\n    mediaId: Int\n\n    \"\"\"The main review text. Min:2200 characters\"\"\"\n    body: String\n\n    \"\"\"A short summary/preview of the review. Min:20, Max:120 characters\"\"\"\n    summary: String\n\n    \"\"\"A short summary/preview of the review. Min:20, Max:120 characters\"\"\"\n    score: Int\n\n    \"\"\"If the review should only be visible to its creator\"\"\"\n    private: Boolean\n  ): Review\n\n  \"\"\"Delete a review\"\"\"\n  DeleteReview(\n    \"\"\"The id of the review to delete\"\"\"\n    id: Int\n  ): Deleted\n\n  \"\"\"Rate a review\"\"\"\n  RateReview(\n    \"\"\"The id of the review to rate\"\"\"\n    reviewId: Int\n\n    \"\"\"The rating to apply to the review\"\"\"\n    rating: ReviewRating\n  ): Review\n\n  \"\"\"Create or update a forum thread\"\"\"\n  SaveThread(\n    \"\"\"The thread id, required for updating\"\"\"\n    id: Int\n\n    \"\"\"The title of the thread\"\"\"\n    title: String\n\n    \"\"\"The main text body of the thread\"\"\"\n    body: String\n\n    \"\"\"Forum categories the thread should be within\"\"\"\n    categories: [Int]\n\n    \"\"\"Media related to the contents of the thread\"\"\"\n    mediaCategories: [Int]\n\n    \"\"\"If the thread should be stickied. (Mod Only)\"\"\"\n    sticky: Boolean\n\n    \"\"\"If the thread should be locked. (Mod Only)\"\"\"\n    locked: Boolean\n  ): Thread\n\n  \"\"\"Delete a thread\"\"\"\n  DeleteThread(\n    \"\"\"The id of the thread to delete\"\"\"\n    id: Int\n  ): Deleted\n\n  \"\"\"Toggle the subscription of a forum thread\"\"\"\n  ToggleThreadSubscription(\n    \"\"\"The id of the forum thread to un/subscribe\"\"\"\n    threadId: Int\n\n    \"\"\"Whether to subscribe or unsubscribe from the forum thread\"\"\"\n    subscribe: Boolean\n  ): Thread\n\n  \"\"\"Create or update a thread comment\"\"\"\n  SaveThreadComment(\n    \"\"\"The comment id, required for updating\"\"\"\n    id: Int\n\n    \"\"\"The id of thread the comment belongs to\"\"\"\n    threadId: Int\n\n    \"\"\"The id of thread comment to reply to\"\"\"\n    parentCommentId: Int\n\n    \"\"\"The comment markdown text\"\"\"\n    comment: String\n  ): ThreadComment\n\n  \"\"\"Delete a thread comment\"\"\"\n  DeleteThreadComment(\n    \"\"\"The id of the thread comment to delete\"\"\"\n    id: Int\n  ): Deleted\n  UpdateAniChartSettings(titleLanguage: String, outgoingLinkProvider: String, theme: String, sort: String): Json\n  UpdateAniChartHighlights(highlights: [AniChartHighlightInput]): Json\n}\n\n\"\"\"Notification option\"\"\"\ntype NotificationOption {\n  \"\"\"The type of notification\"\"\"\n  type: NotificationType\n\n  \"\"\"Whether this type of notification is enabled\"\"\"\n  enabled: Boolean\n}\n\n\"\"\"Notification option input\"\"\"\ninput NotificationOptionInput {\n  \"\"\"The type of notification\"\"\"\n  type: NotificationType\n\n  \"\"\"Whether this type of notification is enabled\"\"\"\n  enabled: Boolean\n}\n\n\"\"\"Notification type enum\"\"\"\nenum NotificationType {\n  \"\"\"A user has sent you message\"\"\"\n  ACTIVITY_MESSAGE\n\n  \"\"\"A user has replied to your activity\"\"\"\n  ACTIVITY_REPLY\n\n  \"\"\"A user has followed you\"\"\"\n  FOLLOWING\n\n  \"\"\"A user has mentioned you in their activity\"\"\"\n  ACTIVITY_MENTION\n\n  \"\"\"A user has mentioned you in a forum comment\"\"\"\n  THREAD_COMMENT_MENTION\n\n  \"\"\"A user has commented in one of your subscribed forum threads\"\"\"\n  THREAD_SUBSCRIBED\n\n  \"\"\"A user has replied to your forum comment\"\"\"\n  THREAD_COMMENT_REPLY\n\n  \"\"\"An anime you are currently watching has aired\"\"\"\n  AIRING\n\n  \"\"\"A user has liked your activity\"\"\"\n  ACTIVITY_LIKE\n\n  \"\"\"A user has liked your activity reply\"\"\"\n  ACTIVITY_REPLY_LIKE\n\n  \"\"\"A user has liked your forum thread\"\"\"\n  THREAD_LIKE\n\n  \"\"\"A user has liked your forum comment\"\"\"\n  THREAD_COMMENT_LIKE\n\n  \"\"\"A user has replied to activity you have also replied to\"\"\"\n  ACTIVITY_REPLY_SUBSCRIBED\n}\n\n\"\"\"Notification union type\"\"\"\nunion NotificationUnion = AiringNotification | FollowingNotification | ActivityMessageNotification | ActivityMentionNotification | ActivityReplyNotification | ActivityReplySubscribedNotification | ActivityLikeNotification | ActivityReplyLikeNotification | ThreadCommentMentionNotification | ThreadCommentReplyNotification | ThreadCommentSubscribedNotification | ThreadCommentLikeNotification | ThreadLikeNotification\n\n\"\"\"Page of data\"\"\"\ntype Page {\n  \"\"\"The pagination information\"\"\"\n  pageInfo: PageInfo\n  users(\n    \"\"\"Filter by the user id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the name of the user\"\"\"\n    name: String\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [UserSort]\n  ): [User]\n  media(\n    \"\"\"Filter by the media id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the media's MyAnimeList id\"\"\"\n    idMal: Int\n\n    \"\"\"Filter by the start date of the media\"\"\"\n    startDate: FuzzyDateInt\n\n    \"\"\"Filter by the end date of the media\"\"\"\n    endDate: FuzzyDateInt\n\n    \"\"\"Filter by the season the media was released in\"\"\"\n    season: MediaSeason\n\n    \"\"\"\n    The year of the season (Winter 2017 would also include December 2016 releases). Requires season argument\n    \"\"\"\n    seasonYear: Int\n\n    \"\"\"Filter by the media's type\"\"\"\n    type: MediaType\n\n    \"\"\"Filter by the media's format\"\"\"\n    format: MediaFormat\n\n    \"\"\"Filter by the media's current release status\"\"\"\n    status: MediaStatus\n\n    \"\"\"Filter by amount of episodes the media has\"\"\"\n    episodes: Int\n\n    \"\"\"Filter by the media's episode length\"\"\"\n    duration: Int\n\n    \"\"\"Filter by the media's chapter count\"\"\"\n    chapters: Int\n\n    \"\"\"Filter by the media's volume count\"\"\"\n    volumes: Int\n\n    \"\"\"Filter by if the media's intended for 18+ adult audiences\"\"\"\n    isAdult: Boolean\n\n    \"\"\"Filter by the media's genres\"\"\"\n    genre: String\n\n    \"\"\"Filter by the media's tags\"\"\"\n    tag: String\n\n    \"\"\"Filter by the media's tags with in a tag category\"\"\"\n    tagCategory: String\n\n    \"\"\"Filter by the media on the authenticated user's lists\"\"\"\n    onList: Boolean\n\n    \"\"\"Filter media by sites with a online streaming or reading license\"\"\"\n    licensedBy: String\n\n    \"\"\"Filter by the media's average score\"\"\"\n    averageScore: Int\n\n    \"\"\"Filter by the number of users with this media on their list\"\"\"\n    popularity: Int\n\n    \"\"\"Filter by the source type of the media\"\"\"\n    source: MediaSource\n\n    \"\"\"Filter by the media's country of origin\"\"\"\n    countryOfOrigin: CountryCode\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"Filter by the media id\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by the media id\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by the media id\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"Filter by the media's MyAnimeList id\"\"\"\n    idMal_not: Int\n\n    \"\"\"Filter by the media's MyAnimeList id\"\"\"\n    idMal_in: [Int]\n\n    \"\"\"Filter by the media's MyAnimeList id\"\"\"\n    idMal_not_in: [Int]\n\n    \"\"\"Filter by the start date of the media\"\"\"\n    startDate_greater: FuzzyDateInt\n\n    \"\"\"Filter by the start date of the media\"\"\"\n    startDate_lesser: FuzzyDateInt\n\n    \"\"\"Filter by the start date of the media\"\"\"\n    startDate_like: String\n\n    \"\"\"Filter by the end date of the media\"\"\"\n    endDate_greater: FuzzyDateInt\n\n    \"\"\"Filter by the end date of the media\"\"\"\n    endDate_lesser: FuzzyDateInt\n\n    \"\"\"Filter by the end date of the media\"\"\"\n    endDate_like: String\n\n    \"\"\"Filter by the media's format\"\"\"\n    format_in: [MediaFormat]\n\n    \"\"\"Filter by the media's format\"\"\"\n    format_not: MediaFormat\n\n    \"\"\"Filter by the media's format\"\"\"\n    format_not_in: [MediaFormat]\n\n    \"\"\"Filter by the media's current release status\"\"\"\n    status_in: [MediaStatus]\n\n    \"\"\"Filter by the media's current release status\"\"\"\n    status_not: MediaStatus\n\n    \"\"\"Filter by the media's current release status\"\"\"\n    status_not_in: [MediaStatus]\n\n    \"\"\"Filter by amount of episodes the media has\"\"\"\n    episodes_greater: Int\n\n    \"\"\"Filter by amount of episodes the media has\"\"\"\n    episodes_lesser: Int\n\n    \"\"\"Filter by the media's episode length\"\"\"\n    duration_greater: Int\n\n    \"\"\"Filter by the media's episode length\"\"\"\n    duration_lesser: Int\n\n    \"\"\"Filter by the media's chapter count\"\"\"\n    chapters_greater: Int\n\n    \"\"\"Filter by the media's chapter count\"\"\"\n    chapters_lesser: Int\n\n    \"\"\"Filter by the media's volume count\"\"\"\n    volumes_greater: Int\n\n    \"\"\"Filter by the media's volume count\"\"\"\n    volumes_lesser: Int\n\n    \"\"\"Filter by the media's genres\"\"\"\n    genre_in: [String]\n\n    \"\"\"Filter by the media's genres\"\"\"\n    genre_not_in: [String]\n\n    \"\"\"Filter by the media's tags\"\"\"\n    tag_in: [String]\n\n    \"\"\"Filter by the media's tags\"\"\"\n    tag_not_in: [String]\n\n    \"\"\"Filter by the media's tags with in a tag category\"\"\"\n    tagCategory_in: [String]\n\n    \"\"\"Filter by the media's tags with in a tag category\"\"\"\n    tagCategory_not_in: [String]\n\n    \"\"\"Filter media by sites with a online streaming or reading license\"\"\"\n    licensedBy_in: [String]\n\n    \"\"\"Filter by the media's average score\"\"\"\n    averageScore_not: Int\n\n    \"\"\"Filter by the media's average score\"\"\"\n    averageScore_greater: Int\n\n    \"\"\"Filter by the media's average score\"\"\"\n    averageScore_lesser: Int\n\n    \"\"\"Filter by the number of users with this media on their list\"\"\"\n    popularity_not: Int\n\n    \"\"\"Filter by the number of users with this media on their list\"\"\"\n    popularity_greater: Int\n\n    \"\"\"Filter by the number of users with this media on their list\"\"\"\n    popularity_lesser: Int\n\n    \"\"\"Filter by the source type of the media\"\"\"\n    source_in: [MediaSource]\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [MediaSort]\n  ): [Media]\n  characters(\n    \"\"\"Filter by character id\"\"\"\n    id: Int\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"Filter by character id\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by character id\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by character id\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [CharacterSort]\n  ): [Character]\n  staff(\n    \"\"\"Filter by the staff id\"\"\"\n    id: Int\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"Filter by the staff id\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by the staff id\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by the staff id\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [StaffSort]\n  ): [Staff]\n  studios(\n    \"\"\"Filter by the studio id\"\"\"\n    id: Int\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"Filter by the studio id\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by the studio id\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by the studio id\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [StudioSort]\n  ): [Studio]\n  mediaList(\n    \"\"\"Filter by a list entry's id\"\"\"\n    id: Int\n\n    \"\"\"Filter by a user's id\"\"\"\n    userId: Int\n\n    \"\"\"Filter by a user's name\"\"\"\n    userName: String\n\n    \"\"\"Filter by the list entries media type\"\"\"\n    type: MediaType\n\n    \"\"\"Filter by the watching/reading status\"\"\"\n    status: MediaListStatus\n\n    \"\"\"Filter by the media id of the list entry\"\"\"\n    mediaId: Int\n\n    \"\"\"\n    Filter list entries to users who are being followed by the authenticated user\n    \"\"\"\n    isFollowing: Boolean\n\n    \"\"\"Filter by note words and #tags\"\"\"\n    notes: String\n\n    \"\"\"Filter by the date the user started the media\"\"\"\n    startedAt: FuzzyDateInt\n\n    \"\"\"Filter by the date the user completed the media\"\"\"\n    completedAt: FuzzyDateInt\n\n    \"\"\"\n    Limit to only entries also on the auth user's list. Requires user id or name arguments.\n    \"\"\"\n    compareWithAuthList: Boolean\n\n    \"\"\"Filter by a user's id\"\"\"\n    userId_in: [Int]\n\n    \"\"\"Filter by the watching/reading status\"\"\"\n    status_in: [MediaListStatus]\n\n    \"\"\"Filter by the watching/reading status\"\"\"\n    status_not_in: [MediaListStatus]\n\n    \"\"\"Filter by the watching/reading status\"\"\"\n    status_not: MediaListStatus\n\n    \"\"\"Filter by note words and #tags\"\"\"\n    notes_like: String\n\n    \"\"\"Filter by the date the user started the media\"\"\"\n    startedAt_greater: FuzzyDateInt\n\n    \"\"\"Filter by the date the user started the media\"\"\"\n    startedAt_lesser: FuzzyDateInt\n\n    \"\"\"Filter by the date the user started the media\"\"\"\n    startedAt_like: String\n\n    \"\"\"Filter by the date the user completed the media\"\"\"\n    completedAt_greater: FuzzyDateInt\n\n    \"\"\"Filter by the date the user completed the media\"\"\"\n    completedAt_lesser: FuzzyDateInt\n\n    \"\"\"Filter by the date the user completed the media\"\"\"\n    completedAt_like: String\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [MediaListSort]\n  ): [MediaList]\n  airingSchedules(\n    \"\"\"Filter by the id of the airing schedule item\"\"\"\n    id: Int\n\n    \"\"\"Filter by the id of associated media\"\"\"\n    mediaId: Int\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode: Int\n\n    \"\"\"Filter by the time of airing\"\"\"\n    airingAt: Int\n\n    \"\"\"Filter to episodes that haven't yet aired\"\"\"\n    notYetAired: Boolean\n\n    \"\"\"Filter by the id of the airing schedule item\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by the id of the airing schedule item\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by the id of the airing schedule item\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"Filter by the id of associated media\"\"\"\n    mediaId_not: Int\n\n    \"\"\"Filter by the id of associated media\"\"\"\n    mediaId_in: [Int]\n\n    \"\"\"Filter by the id of associated media\"\"\"\n    mediaId_not_in: [Int]\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode_not: Int\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode_in: [Int]\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode_not_in: [Int]\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode_greater: Int\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode_lesser: Int\n\n    \"\"\"Filter by the time of airing\"\"\"\n    airingAt_greater: Int\n\n    \"\"\"Filter by the time of airing\"\"\"\n    airingAt_lesser: Int\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [AiringSort]\n  ): [AiringSchedule]\n  mediaTrends(\n    \"\"\"Filter by the media id\"\"\"\n    mediaId: Int\n\n    \"\"\"Filter by date\"\"\"\n    date: Int\n\n    \"\"\"Filter by trending amount\"\"\"\n    trending: Int\n\n    \"\"\"Filter by score\"\"\"\n    averageScore: Int\n\n    \"\"\"Filter by popularity\"\"\"\n    popularity: Int\n\n    \"\"\"Filter by episode number\"\"\"\n    episode: Int\n\n    \"\"\"Filter to stats recorded while the media was releasing\"\"\"\n    releasing: Boolean\n\n    \"\"\"Filter by the media id\"\"\"\n    mediaId_not: Int\n\n    \"\"\"Filter by the media id\"\"\"\n    mediaId_in: [Int]\n\n    \"\"\"Filter by the media id\"\"\"\n    mediaId_not_in: [Int]\n\n    \"\"\"Filter by date\"\"\"\n    date_greater: Int\n\n    \"\"\"Filter by date\"\"\"\n    date_lesser: Int\n\n    \"\"\"Filter by trending amount\"\"\"\n    trending_greater: Int\n\n    \"\"\"Filter by trending amount\"\"\"\n    trending_lesser: Int\n\n    \"\"\"Filter by trending amount\"\"\"\n    trending_not: Int\n\n    \"\"\"Filter by score\"\"\"\n    averageScore_greater: Int\n\n    \"\"\"Filter by score\"\"\"\n    averageScore_lesser: Int\n\n    \"\"\"Filter by score\"\"\"\n    averageScore_not: Int\n\n    \"\"\"Filter by popularity\"\"\"\n    popularity_greater: Int\n\n    \"\"\"Filter by popularity\"\"\"\n    popularity_lesser: Int\n\n    \"\"\"Filter by popularity\"\"\"\n    popularity_not: Int\n\n    \"\"\"Filter by episode number\"\"\"\n    episode_greater: Int\n\n    \"\"\"Filter by episode number\"\"\"\n    episode_lesser: Int\n\n    \"\"\"Filter by episode number\"\"\"\n    episode_not: Int\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [MediaTrendSort]\n  ): [MediaTrend]\n  notifications(\n    \"\"\"Filter by the type of notifications\"\"\"\n    type: NotificationType\n\n    \"\"\"Reset the unread notification count to 0 on load\"\"\"\n    resetNotificationCount: Boolean\n\n    \"\"\"Filter by the type of notifications\"\"\"\n    type_in: [NotificationType]\n  ): [NotificationUnion]\n  followers(\n    \"\"\"User id of the follower/followed\"\"\"\n    userId: Int!\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [UserSort]\n  ): [User]\n  following(\n    \"\"\"User id of the follower/followed\"\"\"\n    userId: Int!\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [UserSort]\n  ): [User]\n  activities(\n    \"\"\"Filter by the activity id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the owner user id\"\"\"\n    userId: Int\n\n    \"\"\"Filter by the id of the user who sent a message\"\"\"\n    messengerId: Int\n\n    \"\"\"Filter by the associated media id of the activity\"\"\"\n    mediaId: Int\n\n    \"\"\"Filter by the type of activity\"\"\"\n    type: ActivityType\n\n    \"\"\"\n    Filter activity to users who are being followed by the authenticated user\n    \"\"\"\n    isFollowing: Boolean\n\n    \"\"\"Filter activity to only activity with replies\"\"\"\n    hasReplies: Boolean\n\n    \"\"\"Filter activity to only activity with replies or is of type text\"\"\"\n    hasRepliesOrTypeText: Boolean\n\n    \"\"\"Filter by the time the activity was created\"\"\"\n    createdAt: Int\n\n    \"\"\"Filter by the activity id\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by the activity id\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by the activity id\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"Filter by the owner user id\"\"\"\n    userId_not: Int\n\n    \"\"\"Filter by the owner user id\"\"\"\n    userId_in: [Int]\n\n    \"\"\"Filter by the owner user id\"\"\"\n    userId_not_in: [Int]\n\n    \"\"\"Filter by the id of the user who sent a message\"\"\"\n    messengerId_not: Int\n\n    \"\"\"Filter by the id of the user who sent a message\"\"\"\n    messengerId_in: [Int]\n\n    \"\"\"Filter by the id of the user who sent a message\"\"\"\n    messengerId_not_in: [Int]\n\n    \"\"\"Filter by the associated media id of the activity\"\"\"\n    mediaId_not: Int\n\n    \"\"\"Filter by the associated media id of the activity\"\"\"\n    mediaId_in: [Int]\n\n    \"\"\"Filter by the associated media id of the activity\"\"\"\n    mediaId_not_in: [Int]\n\n    \"\"\"Filter by the type of activity\"\"\"\n    type_not: ActivityType\n\n    \"\"\"Filter by the type of activity\"\"\"\n    type_in: [ActivityType]\n\n    \"\"\"Filter by the type of activity\"\"\"\n    type_not_in: [ActivityType]\n\n    \"\"\"Filter by the time the activity was created\"\"\"\n    createdAt_greater: Int\n\n    \"\"\"Filter by the time the activity was created\"\"\"\n    createdAt_lesser: Int\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [ActivitySort]\n  ): [ActivityUnion]\n  activityReplies(\n    \"\"\"Filter by the reply id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the parent id\"\"\"\n    activityId: Int\n  ): [ActivityReply]\n  threads(\n    \"\"\"Filter by the thread id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the user id of the thread's creator\"\"\"\n    userId: Int\n\n    \"\"\"Filter by the user id of the last user to comment on the thread\"\"\"\n    replyUserId: Int\n\n    \"\"\"Filter by if the currently authenticated user's subscribed threads\"\"\"\n    subscribed: Boolean\n\n    \"\"\"Filter by thread category id\"\"\"\n    categoryId: Int\n\n    \"\"\"Filter by thread media id category\"\"\"\n    mediaCategoryId: Int\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"Filter by the thread id\"\"\"\n    id_in: [Int]\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [ThreadSort]\n  ): [Thread]\n  threadComments(\n    \"\"\"Filter by the comment id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the thread id\"\"\"\n    threadId: Int\n\n    \"\"\"Filter by the user id of the comment's creator\"\"\"\n    userId: Int\n  ): [ThreadComment]\n  reviews(\n    \"\"\"Filter by Review id\"\"\"\n    id: Int\n\n    \"\"\"Filter by media id\"\"\"\n    mediaId: Int\n\n    \"\"\"Filter by media id\"\"\"\n    userId: Int\n\n    \"\"\"Filter by media type\"\"\"\n    mediaType: MediaType\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [ReviewSort]\n  ): [Review]\n}\n\ntype PageInfo {\n  \"\"\"The total number of items\"\"\"\n  total: Int\n\n  \"\"\"The count on a page\"\"\"\n  perPage: Int\n\n  \"\"\"The current page\"\"\"\n  currentPage: Int\n\n  \"\"\"The last page\"\"\"\n  lastPage: Int\n\n  \"\"\"If there is another page\"\"\"\n  hasNextPage: Boolean\n}\n\n\"\"\"Provides the parsed markdown as html\"\"\"\ntype ParsedMarkdown {\n  \"\"\"The parsed markdown as html\"\"\"\n  html: String\n}\n\ntype Query {\n  Page(\n    \"\"\"The page number\"\"\"\n    page: Int\n\n    \"\"\"The amount of entries per page, max 50\"\"\"\n    perPage: Int\n  ): Page\n\n  \"\"\"Media query\"\"\"\n  Media(\n    \"\"\"Filter by the media id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the media's MyAnimeList id\"\"\"\n    idMal: Int\n\n    \"\"\"Filter by the start date of the media\"\"\"\n    startDate: FuzzyDateInt\n\n    \"\"\"Filter by the end date of the media\"\"\"\n    endDate: FuzzyDateInt\n\n    \"\"\"Filter by the season the media was released in\"\"\"\n    season: MediaSeason\n\n    \"\"\"\n    The year of the season (Winter 2017 would also include December 2016 releases). Requires season argument\n    \"\"\"\n    seasonYear: Int\n\n    \"\"\"Filter by the media's type\"\"\"\n    type: MediaType\n\n    \"\"\"Filter by the media's format\"\"\"\n    format: MediaFormat\n\n    \"\"\"Filter by the media's current release status\"\"\"\n    status: MediaStatus\n\n    \"\"\"Filter by amount of episodes the media has\"\"\"\n    episodes: Int\n\n    \"\"\"Filter by the media's episode length\"\"\"\n    duration: Int\n\n    \"\"\"Filter by the media's chapter count\"\"\"\n    chapters: Int\n\n    \"\"\"Filter by the media's volume count\"\"\"\n    volumes: Int\n\n    \"\"\"Filter by if the media's intended for 18+ adult audiences\"\"\"\n    isAdult: Boolean\n\n    \"\"\"Filter by the media's genres\"\"\"\n    genre: String\n\n    \"\"\"Filter by the media's tags\"\"\"\n    tag: String\n\n    \"\"\"Filter by the media's tags with in a tag category\"\"\"\n    tagCategory: String\n\n    \"\"\"Filter by the media on the authenticated user's lists\"\"\"\n    onList: Boolean\n\n    \"\"\"Filter media by sites with a online streaming or reading license\"\"\"\n    licensedBy: String\n\n    \"\"\"Filter by the media's average score\"\"\"\n    averageScore: Int\n\n    \"\"\"Filter by the number of users with this media on their list\"\"\"\n    popularity: Int\n\n    \"\"\"Filter by the source type of the media\"\"\"\n    source: MediaSource\n\n    \"\"\"Filter by the media's country of origin\"\"\"\n    countryOfOrigin: CountryCode\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"Filter by the media id\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by the media id\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by the media id\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"Filter by the media's MyAnimeList id\"\"\"\n    idMal_not: Int\n\n    \"\"\"Filter by the media's MyAnimeList id\"\"\"\n    idMal_in: [Int]\n\n    \"\"\"Filter by the media's MyAnimeList id\"\"\"\n    idMal_not_in: [Int]\n\n    \"\"\"Filter by the start date of the media\"\"\"\n    startDate_greater: FuzzyDateInt\n\n    \"\"\"Filter by the start date of the media\"\"\"\n    startDate_lesser: FuzzyDateInt\n\n    \"\"\"Filter by the start date of the media\"\"\"\n    startDate_like: String\n\n    \"\"\"Filter by the end date of the media\"\"\"\n    endDate_greater: FuzzyDateInt\n\n    \"\"\"Filter by the end date of the media\"\"\"\n    endDate_lesser: FuzzyDateInt\n\n    \"\"\"Filter by the end date of the media\"\"\"\n    endDate_like: String\n\n    \"\"\"Filter by the media's format\"\"\"\n    format_in: [MediaFormat]\n\n    \"\"\"Filter by the media's format\"\"\"\n    format_not: MediaFormat\n\n    \"\"\"Filter by the media's format\"\"\"\n    format_not_in: [MediaFormat]\n\n    \"\"\"Filter by the media's current release status\"\"\"\n    status_in: [MediaStatus]\n\n    \"\"\"Filter by the media's current release status\"\"\"\n    status_not: MediaStatus\n\n    \"\"\"Filter by the media's current release status\"\"\"\n    status_not_in: [MediaStatus]\n\n    \"\"\"Filter by amount of episodes the media has\"\"\"\n    episodes_greater: Int\n\n    \"\"\"Filter by amount of episodes the media has\"\"\"\n    episodes_lesser: Int\n\n    \"\"\"Filter by the media's episode length\"\"\"\n    duration_greater: Int\n\n    \"\"\"Filter by the media's episode length\"\"\"\n    duration_lesser: Int\n\n    \"\"\"Filter by the media's chapter count\"\"\"\n    chapters_greater: Int\n\n    \"\"\"Filter by the media's chapter count\"\"\"\n    chapters_lesser: Int\n\n    \"\"\"Filter by the media's volume count\"\"\"\n    volumes_greater: Int\n\n    \"\"\"Filter by the media's volume count\"\"\"\n    volumes_lesser: Int\n\n    \"\"\"Filter by the media's genres\"\"\"\n    genre_in: [String]\n\n    \"\"\"Filter by the media's genres\"\"\"\n    genre_not_in: [String]\n\n    \"\"\"Filter by the media's tags\"\"\"\n    tag_in: [String]\n\n    \"\"\"Filter by the media's tags\"\"\"\n    tag_not_in: [String]\n\n    \"\"\"Filter by the media's tags with in a tag category\"\"\"\n    tagCategory_in: [String]\n\n    \"\"\"Filter by the media's tags with in a tag category\"\"\"\n    tagCategory_not_in: [String]\n\n    \"\"\"Filter media by sites with a online streaming or reading license\"\"\"\n    licensedBy_in: [String]\n\n    \"\"\"Filter by the media's average score\"\"\"\n    averageScore_not: Int\n\n    \"\"\"Filter by the media's average score\"\"\"\n    averageScore_greater: Int\n\n    \"\"\"Filter by the media's average score\"\"\"\n    averageScore_lesser: Int\n\n    \"\"\"Filter by the number of users with this media on their list\"\"\"\n    popularity_not: Int\n\n    \"\"\"Filter by the number of users with this media on their list\"\"\"\n    popularity_greater: Int\n\n    \"\"\"Filter by the number of users with this media on their list\"\"\"\n    popularity_lesser: Int\n\n    \"\"\"Filter by the source type of the media\"\"\"\n    source_in: [MediaSource]\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [MediaSort]\n  ): Media\n\n  \"\"\"Media Trend query\"\"\"\n  MediaTrend(\n    \"\"\"Filter by the media id\"\"\"\n    mediaId: Int\n\n    \"\"\"Filter by date\"\"\"\n    date: Int\n\n    \"\"\"Filter by trending amount\"\"\"\n    trending: Int\n\n    \"\"\"Filter by score\"\"\"\n    averageScore: Int\n\n    \"\"\"Filter by popularity\"\"\"\n    popularity: Int\n\n    \"\"\"Filter by episode number\"\"\"\n    episode: Int\n\n    \"\"\"Filter to stats recorded while the media was releasing\"\"\"\n    releasing: Boolean\n\n    \"\"\"Filter by the media id\"\"\"\n    mediaId_not: Int\n\n    \"\"\"Filter by the media id\"\"\"\n    mediaId_in: [Int]\n\n    \"\"\"Filter by the media id\"\"\"\n    mediaId_not_in: [Int]\n\n    \"\"\"Filter by date\"\"\"\n    date_greater: Int\n\n    \"\"\"Filter by date\"\"\"\n    date_lesser: Int\n\n    \"\"\"Filter by trending amount\"\"\"\n    trending_greater: Int\n\n    \"\"\"Filter by trending amount\"\"\"\n    trending_lesser: Int\n\n    \"\"\"Filter by trending amount\"\"\"\n    trending_not: Int\n\n    \"\"\"Filter by score\"\"\"\n    averageScore_greater: Int\n\n    \"\"\"Filter by score\"\"\"\n    averageScore_lesser: Int\n\n    \"\"\"Filter by score\"\"\"\n    averageScore_not: Int\n\n    \"\"\"Filter by popularity\"\"\"\n    popularity_greater: Int\n\n    \"\"\"Filter by popularity\"\"\"\n    popularity_lesser: Int\n\n    \"\"\"Filter by popularity\"\"\"\n    popularity_not: Int\n\n    \"\"\"Filter by episode number\"\"\"\n    episode_greater: Int\n\n    \"\"\"Filter by episode number\"\"\"\n    episode_lesser: Int\n\n    \"\"\"Filter by episode number\"\"\"\n    episode_not: Int\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [MediaTrendSort]\n  ): MediaTrend\n\n  \"\"\"Airing schedule query\"\"\"\n  AiringSchedule(\n    \"\"\"Filter by the id of the airing schedule item\"\"\"\n    id: Int\n\n    \"\"\"Filter by the id of associated media\"\"\"\n    mediaId: Int\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode: Int\n\n    \"\"\"Filter by the time of airing\"\"\"\n    airingAt: Int\n\n    \"\"\"Filter to episodes that haven't yet aired\"\"\"\n    notYetAired: Boolean\n\n    \"\"\"Filter by the id of the airing schedule item\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by the id of the airing schedule item\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by the id of the airing schedule item\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"Filter by the id of associated media\"\"\"\n    mediaId_not: Int\n\n    \"\"\"Filter by the id of associated media\"\"\"\n    mediaId_in: [Int]\n\n    \"\"\"Filter by the id of associated media\"\"\"\n    mediaId_not_in: [Int]\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode_not: Int\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode_in: [Int]\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode_not_in: [Int]\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode_greater: Int\n\n    \"\"\"Filter by the airing episode number\"\"\"\n    episode_lesser: Int\n\n    \"\"\"Filter by the time of airing\"\"\"\n    airingAt_greater: Int\n\n    \"\"\"Filter by the time of airing\"\"\"\n    airingAt_lesser: Int\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [AiringSort]\n  ): AiringSchedule\n\n  \"\"\"Character query\"\"\"\n  Character(\n    \"\"\"Filter by character id\"\"\"\n    id: Int\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"Filter by character id\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by character id\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by character id\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [CharacterSort]\n  ): Character\n\n  \"\"\"Staff query\"\"\"\n  Staff(\n    \"\"\"Filter by the staff id\"\"\"\n    id: Int\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"Filter by the staff id\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by the staff id\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by the staff id\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [StaffSort]\n  ): Staff\n\n  \"\"\"Media list query\"\"\"\n  MediaList(\n    \"\"\"Filter by a list entry's id\"\"\"\n    id: Int\n\n    \"\"\"Filter by a user's id\"\"\"\n    userId: Int\n\n    \"\"\"Filter by a user's name\"\"\"\n    userName: String\n\n    \"\"\"Filter by the list entries media type\"\"\"\n    type: MediaType\n\n    \"\"\"Filter by the watching/reading status\"\"\"\n    status: MediaListStatus\n\n    \"\"\"Filter by the media id of the list entry\"\"\"\n    mediaId: Int\n\n    \"\"\"\n    Filter list entries to users who are being followed by the authenticated user\n    \"\"\"\n    isFollowing: Boolean\n\n    \"\"\"Filter by note words and #tags\"\"\"\n    notes: String\n\n    \"\"\"Filter by the date the user started the media\"\"\"\n    startedAt: FuzzyDateInt\n\n    \"\"\"Filter by the date the user completed the media\"\"\"\n    completedAt: FuzzyDateInt\n\n    \"\"\"\n    Limit to only entries also on the auth user's list. Requires user id or name arguments.\n    \"\"\"\n    compareWithAuthList: Boolean\n\n    \"\"\"Filter by a user's id\"\"\"\n    userId_in: [Int]\n\n    \"\"\"Filter by the watching/reading status\"\"\"\n    status_in: [MediaListStatus]\n\n    \"\"\"Filter by the watching/reading status\"\"\"\n    status_not_in: [MediaListStatus]\n\n    \"\"\"Filter by the watching/reading status\"\"\"\n    status_not: MediaListStatus\n\n    \"\"\"Filter by note words and #tags\"\"\"\n    notes_like: String\n\n    \"\"\"Filter by the date the user started the media\"\"\"\n    startedAt_greater: FuzzyDateInt\n\n    \"\"\"Filter by the date the user started the media\"\"\"\n    startedAt_lesser: FuzzyDateInt\n\n    \"\"\"Filter by the date the user started the media\"\"\"\n    startedAt_like: String\n\n    \"\"\"Filter by the date the user completed the media\"\"\"\n    completedAt_greater: FuzzyDateInt\n\n    \"\"\"Filter by the date the user completed the media\"\"\"\n    completedAt_lesser: FuzzyDateInt\n\n    \"\"\"Filter by the date the user completed the media\"\"\"\n    completedAt_like: String\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [MediaListSort]\n  ): MediaList\n\n  \"\"\"\n  Media list collection query, provides list pre-grouped by status & custom\n  lists. User ID and Media Type arguments required.\n  \"\"\"\n  MediaListCollection(\n    \"\"\"Filter by a user's id\"\"\"\n    userId: Int\n\n    \"\"\"Filter by a user's name\"\"\"\n    userName: String\n\n    \"\"\"Filter by the list entries media type\"\"\"\n    type: MediaType\n\n    \"\"\"Filter by the watching/reading status\"\"\"\n    status: MediaListStatus\n\n    \"\"\"Filter by note words and #tags\"\"\"\n    notes: String\n\n    \"\"\"Filter by the date the user started the media\"\"\"\n    startedAt: FuzzyDateInt\n\n    \"\"\"Filter by the date the user completed the media\"\"\"\n    completedAt: FuzzyDateInt\n\n    \"\"\"\n    Always return completed list entries in one group, overriding the user's split completed option.\n    \"\"\"\n    forceSingleCompletedList: Boolean\n\n    \"\"\"Which chunk of list entries to load\"\"\"\n    chunk: Int\n\n    \"\"\"The amount of entries per chunk, max 500\"\"\"\n    perChunk: Int\n\n    \"\"\"Filter by the watching/reading status\"\"\"\n    status_in: [MediaListStatus]\n\n    \"\"\"Filter by the watching/reading status\"\"\"\n    status_not_in: [MediaListStatus]\n\n    \"\"\"Filter by the watching/reading status\"\"\"\n    status_not: MediaListStatus\n\n    \"\"\"Filter by note words and #tags\"\"\"\n    notes_like: String\n\n    \"\"\"Filter by the date the user started the media\"\"\"\n    startedAt_greater: FuzzyDateInt\n\n    \"\"\"Filter by the date the user started the media\"\"\"\n    startedAt_lesser: FuzzyDateInt\n\n    \"\"\"Filter by the date the user started the media\"\"\"\n    startedAt_like: String\n\n    \"\"\"Filter by the date the user completed the media\"\"\"\n    completedAt_greater: FuzzyDateInt\n\n    \"\"\"Filter by the date the user completed the media\"\"\"\n    completedAt_lesser: FuzzyDateInt\n\n    \"\"\"Filter by the date the user completed the media\"\"\"\n    completedAt_like: String\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [MediaListSort]\n  ): MediaListCollection\n\n  \"\"\"Collection of all the possible media genres\"\"\"\n  GenreCollection: [String]\n\n  \"\"\"Collection of all the possible media tags\"\"\"\n  MediaTagCollection(\n    \"\"\"Mod Only\"\"\"\n    status: Int\n  ): [MediaTag]\n\n  \"\"\"User query\"\"\"\n  User(\n    \"\"\"Filter by the user id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the name of the user\"\"\"\n    name: String\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [UserSort]\n  ): User\n\n  \"\"\"Get the currently authenticated user\"\"\"\n  Viewer: User\n\n  \"\"\"Notification query\"\"\"\n  Notification(\n    \"\"\"Filter by the type of notifications\"\"\"\n    type: NotificationType\n\n    \"\"\"Reset the unread notification count to 0 on load\"\"\"\n    resetNotificationCount: Boolean\n\n    \"\"\"Filter by the type of notifications\"\"\"\n    type_in: [NotificationType]\n  ): NotificationUnion\n\n  \"\"\"Studio query\"\"\"\n  Studio(\n    \"\"\"Filter by the studio id\"\"\"\n    id: Int\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"Filter by the studio id\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by the studio id\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by the studio id\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [StudioSort]\n  ): Studio\n\n  \"\"\"Review query\"\"\"\n  Review(\n    \"\"\"Filter by Review id\"\"\"\n    id: Int\n\n    \"\"\"Filter by media id\"\"\"\n    mediaId: Int\n\n    \"\"\"Filter by media id\"\"\"\n    userId: Int\n\n    \"\"\"Filter by media type\"\"\"\n    mediaType: MediaType\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [ReviewSort]\n  ): Review\n\n  \"\"\"Activity query\"\"\"\n  Activity(\n    \"\"\"Filter by the activity id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the owner user id\"\"\"\n    userId: Int\n\n    \"\"\"Filter by the id of the user who sent a message\"\"\"\n    messengerId: Int\n\n    \"\"\"Filter by the associated media id of the activity\"\"\"\n    mediaId: Int\n\n    \"\"\"Filter by the type of activity\"\"\"\n    type: ActivityType\n\n    \"\"\"\n    Filter activity to users who are being followed by the authenticated user\n    \"\"\"\n    isFollowing: Boolean\n\n    \"\"\"Filter activity to only activity with replies\"\"\"\n    hasReplies: Boolean\n\n    \"\"\"Filter activity to only activity with replies or is of type text\"\"\"\n    hasRepliesOrTypeText: Boolean\n\n    \"\"\"Filter by the time the activity was created\"\"\"\n    createdAt: Int\n\n    \"\"\"Filter by the activity id\"\"\"\n    id_not: Int\n\n    \"\"\"Filter by the activity id\"\"\"\n    id_in: [Int]\n\n    \"\"\"Filter by the activity id\"\"\"\n    id_not_in: [Int]\n\n    \"\"\"Filter by the owner user id\"\"\"\n    userId_not: Int\n\n    \"\"\"Filter by the owner user id\"\"\"\n    userId_in: [Int]\n\n    \"\"\"Filter by the owner user id\"\"\"\n    userId_not_in: [Int]\n\n    \"\"\"Filter by the id of the user who sent a message\"\"\"\n    messengerId_not: Int\n\n    \"\"\"Filter by the id of the user who sent a message\"\"\"\n    messengerId_in: [Int]\n\n    \"\"\"Filter by the id of the user who sent a message\"\"\"\n    messengerId_not_in: [Int]\n\n    \"\"\"Filter by the associated media id of the activity\"\"\"\n    mediaId_not: Int\n\n    \"\"\"Filter by the associated media id of the activity\"\"\"\n    mediaId_in: [Int]\n\n    \"\"\"Filter by the associated media id of the activity\"\"\"\n    mediaId_not_in: [Int]\n\n    \"\"\"Filter by the type of activity\"\"\"\n    type_not: ActivityType\n\n    \"\"\"Filter by the type of activity\"\"\"\n    type_in: [ActivityType]\n\n    \"\"\"Filter by the type of activity\"\"\"\n    type_not_in: [ActivityType]\n\n    \"\"\"Filter by the time the activity was created\"\"\"\n    createdAt_greater: Int\n\n    \"\"\"Filter by the time the activity was created\"\"\"\n    createdAt_lesser: Int\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [ActivitySort]\n  ): ActivityUnion\n\n  \"\"\"Activity reply query\"\"\"\n  ActivityReply(\n    \"\"\"Filter by the reply id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the parent id\"\"\"\n    activityId: Int\n  ): ActivityReply\n\n  \"\"\"Follow query\"\"\"\n  Following(\n    \"\"\"User id of the follower/followed\"\"\"\n    userId: Int!\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [UserSort]\n  ): User\n\n  \"\"\"Follow query\"\"\"\n  Follower(\n    \"\"\"User id of the follower/followed\"\"\"\n    userId: Int!\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [UserSort]\n  ): User\n\n  \"\"\"Thread query\"\"\"\n  Thread(\n    \"\"\"Filter by the thread id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the user id of the thread's creator\"\"\"\n    userId: Int\n\n    \"\"\"Filter by the user id of the last user to comment on the thread\"\"\"\n    replyUserId: Int\n\n    \"\"\"Filter by if the currently authenticated user's subscribed threads\"\"\"\n    subscribed: Boolean\n\n    \"\"\"Filter by thread category id\"\"\"\n    categoryId: Int\n\n    \"\"\"Filter by thread media id category\"\"\"\n    mediaCategoryId: Int\n\n    \"\"\"Filter by search query\"\"\"\n    search: String\n\n    \"\"\"Filter by the thread id\"\"\"\n    id_in: [Int]\n\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [ThreadSort]\n  ): Thread\n\n  \"\"\"Comment query\"\"\"\n  ThreadComment(\n    \"\"\"Filter by the comment id\"\"\"\n    id: Int\n\n    \"\"\"Filter by the thread id\"\"\"\n    threadId: Int\n\n    \"\"\"Filter by the user id of the comment's creator\"\"\"\n    userId: Int\n  ): [ThreadComment]\n\n  \"\"\"Provide AniList markdown to be converted to html (Requires auth)\"\"\"\n  Markdown(\n    \"\"\"The markdown to be parsed to html\"\"\"\n    markdown: String!\n  ): ParsedMarkdown\n  AniChartUser: AniChartUser\n}\n\ntype Report {\n  id: Int!\n  reporter: User\n  reported: User\n  reason: String\n\n  \"\"\"When the entry data was created\"\"\"\n  createdAt: Int\n}\n\n\"\"\"A Review that features in an anime or manga\"\"\"\ntype Review {\n  \"\"\"The id of the review\"\"\"\n  id: Int!\n\n  \"\"\"The id of the review's creator\"\"\"\n  userId: Int!\n\n  \"\"\"The id of the review's media\"\"\"\n  mediaId: Int!\n\n  \"\"\"For which type of media the review is for\"\"\"\n  mediaType: MediaType\n\n  \"\"\"A short summary of the review\"\"\"\n  summary: String\n\n  \"\"\"The main review body text\"\"\"\n  body(\n    \"\"\"Return the string in pre-parsed html instead of markdown\"\"\"\n    asHtml: Boolean\n  ): String\n\n  \"\"\"The total user rating of the review\"\"\"\n  rating: Int\n\n  \"\"\"The amount of user ratings of the review\"\"\"\n  ratingAmount: Int\n\n  \"\"\"The rating of the review by currently authenticated user\"\"\"\n  userRating: ReviewRating\n\n  \"\"\"The review score of the media\"\"\"\n  score: Int\n\n  \"\"\"\n  If the review is not yet publicly published and is only viewable by creator\n  \"\"\"\n  private: Boolean\n\n  \"\"\"The url for the review page on the AniList website\"\"\"\n  siteUrl: String\n\n  \"\"\"The time of the thread creation\"\"\"\n  createdAt: Int!\n\n  \"\"\"The time of the thread last update\"\"\"\n  updatedAt: Int!\n\n  \"\"\"The creator of the review\"\"\"\n  user: User\n\n  \"\"\"The media the review is of\"\"\"\n  media: Media\n}\n\ntype ReviewConnection {\n  edges: [ReviewEdge]\n  nodes: [Review]\n\n  \"\"\"The pagination information\"\"\"\n  pageInfo: PageInfo\n}\n\n\"\"\"Review connection edge\"\"\"\ntype ReviewEdge {\n  node: Review\n}\n\n\"\"\"Review rating enums\"\"\"\nenum ReviewRating {\n  NO_VOTE\n  UP_VOTE\n  DOWN_VOTE\n}\n\n\"\"\"Review sort enums\"\"\"\nenum ReviewSort {\n  ID\n  ID_DESC\n  SCORE\n  SCORE_DESC\n  RATING\n  RATING_DESC\n  CREATED_AT\n  CREATED_AT_DESC\n  UPDATED_AT\n  UPDATED_AT_DESC\n}\n\n\"\"\"Feed of mod edit activity\"\"\"\ntype RevisionHistory {\n  \"\"\"The id of the media\"\"\"\n  id: Int!\n\n  \"\"\"The action taken on the objects\"\"\"\n  action: RevisionHistoryAction\n\n  \"\"\"A JSON object of the fields that changed\"\"\"\n  changes: Json\n\n  \"\"\"The user who made the edit to the object\"\"\"\n  user: User\n\n  \"\"\"The media the mod feed entry references\"\"\"\n  media: Media\n\n  \"\"\"The character the mod feed entry references\"\"\"\n  character: Character\n\n  \"\"\"The staff member the mod feed entry references\"\"\"\n  staff: Staff\n\n  \"\"\"The studio the mod feed entry references\"\"\"\n  studio: Studio\n\n  \"\"\"When the mod feed entry was created\"\"\"\n  createdAt: Int\n}\n\n\"\"\"Revision history actions\"\"\"\nenum RevisionHistoryAction {\n  CREATE\n  EDIT\n}\n\n\"\"\"A user's list score distribution.\"\"\"\ntype ScoreDistribution {\n  score: Int\n\n  \"\"\"The amount of list entries with this score\"\"\"\n  amount: Int\n}\n\n\"\"\"Media list scoring type\"\"\"\nenum ScoreFormat {\n  \"\"\"An integer from 0-100\"\"\"\n  POINT_100\n\n  \"\"\"A float from 0-10 with 1 decimal place\"\"\"\n  POINT_10_DECIMAL\n\n  \"\"\"An integer from 0-10\"\"\"\n  POINT_10\n\n  \"\"\"An integer from 0-5. Should be represented in Stars\"\"\"\n  POINT_5\n\n  \"\"\"\n  An integer from 0-3. Should be represented in Smileys. 0 => No Score, 1 => :(, 2 => :|, 3 => :)\n  \"\"\"\n  POINT_3\n}\n\n\"\"\"Voice actors or production staff\"\"\"\ntype Staff {\n  \"\"\"The id of the staff member\"\"\"\n  id: Int!\n\n  \"\"\"The names of the staff member\"\"\"\n  name: StaffName\n\n  \"\"\"The primary language of the staff member\"\"\"\n  language: StaffLanguage\n\n  \"\"\"The staff images\"\"\"\n  image: StaffImage\n\n  \"\"\"A general description of the staff member\"\"\"\n  description(\n    \"\"\"Return the string in pre-parsed html instead of markdown\"\"\"\n    asHtml: Boolean\n  ): String\n\n  \"\"\"\n  If the staff member is marked as favourite by the currently authenticated user\n  \"\"\"\n  isFavourite: Boolean!\n\n  \"\"\"The url for the staff page on the AniList website\"\"\"\n  siteUrl: String\n\n  \"\"\"Media where the staff member has a production role\"\"\"\n  staffMedia(\n    sort: [MediaSort]\n    type: MediaType\n\n    \"\"\"The page\"\"\"\n    page: Int\n\n    \"\"\"The amount of entries per page, max 25\"\"\"\n    perPage: Int\n  ): MediaConnection\n\n  \"\"\"Characters voiced by the actor\"\"\"\n  characters(\n    sort: [CharacterSort]\n\n    \"\"\"The page\"\"\"\n    page: Int\n\n    \"\"\"The amount of entries per page, max 25\"\"\"\n    perPage: Int\n  ): CharacterConnection\n\n  \"\"\"When the staff's data was last updated\"\"\"\n  updatedAt: Int\n\n  \"\"\"Staff member that the submission is referencing\"\"\"\n  staff: Staff\n\n  \"\"\"Submitter for the submission\"\"\"\n  submitter: User\n\n  \"\"\"Status of the submission\"\"\"\n  submissionStatus: Int\n\n  \"\"\"Inner details of submission status\"\"\"\n  submissionNotes: String\n\n  \"\"\"The amount of user's who have favourited the staff member\"\"\"\n  favourites: Int\n}\n\ntype StaffConnection {\n  edges: [StaffEdge]\n  nodes: [Staff]\n\n  \"\"\"The pagination information\"\"\"\n  pageInfo: PageInfo\n}\n\n\"\"\"Staff connection edge\"\"\"\ntype StaffEdge {\n  node: Staff\n\n  \"\"\"The id of the connection\"\"\"\n  id: Int\n\n  \"\"\"The role of the staff member in the production of the media\"\"\"\n  role: String\n\n  \"\"\"The order the staff should be displayed from the users favourites\"\"\"\n  favouriteOrder: Int\n}\n\ntype StaffImage {\n  \"\"\"The person's image of media at its largest size\"\"\"\n  large: String\n\n  \"\"\"The person's image of media at medium size\"\"\"\n  medium: String\n}\n\n\"\"\"The primary language of the voice actor\"\"\"\nenum StaffLanguage {\n  \"\"\"Japanese\"\"\"\n  JAPANESE\n\n  \"\"\"English\"\"\"\n  ENGLISH\n\n  \"\"\"Korean\"\"\"\n  KOREAN\n\n  \"\"\"Italian\"\"\"\n  ITALIAN\n\n  \"\"\"Spanish\"\"\"\n  SPANISH\n\n  \"\"\"Portuguese\"\"\"\n  PORTUGUESE\n\n  \"\"\"French\"\"\"\n  FRENCH\n\n  \"\"\"German\"\"\"\n  GERMAN\n\n  \"\"\"Hebrew\"\"\"\n  HEBREW\n\n  \"\"\"Hungarian\"\"\"\n  HUNGARIAN\n}\n\n\"\"\"The names of the staff member\"\"\"\ntype StaffName {\n  \"\"\"The person's given name\"\"\"\n  first: String\n\n  \"\"\"The person's surname\"\"\"\n  last: String\n\n  \"\"\"The person's full name in their native language\"\"\"\n  native: String\n}\n\n\"\"\"The names of the staff member\"\"\"\ninput StaffNameInput {\n  \"\"\"The person's given name\"\"\"\n  first: String\n\n  \"\"\"The person's surname\"\"\"\n  last: String\n\n  \"\"\"The person's full name in their native language\"\"\"\n  native: String\n}\n\n\"\"\"Staff sort enums\"\"\"\nenum StaffSort {\n  ID\n  ID_DESC\n  ROLE\n  ROLE_DESC\n  LANGUAGE\n  LANGUAGE_DESC\n  SEARCH_MATCH\n  FAVOURITES\n  FAVOURITES_DESC\n}\n\n\"\"\"User's staff statistics\"\"\"\ntype StaffStats {\n  staff: Staff\n  amount: Int\n  meanScore: Int\n\n  \"\"\"\n  The amount of time in minutes the staff member has been watched by the user\n  \"\"\"\n  timeWatched: Int\n}\n\n\"\"\"A submission for a staff that features in an anime or manga\"\"\"\ntype StaffSubmission {\n  \"\"\"The id of the submission\"\"\"\n  id: Int!\n\n  \"\"\"Staff that the submission is referencing\"\"\"\n  staff: Staff\n\n  \"\"\"The staff submission changes\"\"\"\n  submission: Staff\n\n  \"\"\"Submitter for the submission\"\"\"\n  submitter: User\n\n  \"\"\"Status of the submission\"\"\"\n  status: SubmissionStatus\n\n  \"\"\"Inner details of submission status\"\"\"\n  notes: String\n  createdAt: Int\n}\n\n\"\"\"\nThe distribution of the watching/reading status of media or a user's list\n\"\"\"\ntype StatusDistribution {\n  \"\"\"The day the activity took place (Unix timestamp)\"\"\"\n  status: MediaListStatus\n\n  \"\"\"The amount of entries with this status\"\"\"\n  amount: Int\n}\n\n\"\"\"Animation or production company\"\"\"\ntype Studio {\n  \"\"\"The id of the studio\"\"\"\n  id: Int!\n\n  \"\"\"The name of the studio\"\"\"\n  name: String!\n\n  \"\"\"The media the studio has worked on\"\"\"\n  media(\n    \"\"\"The order the results will be returned in\"\"\"\n    sort: [MediaSort]\n\n    \"\"\"If the studio was the primary animation studio of the media\"\"\"\n    isMain: Boolean\n\n    \"\"\"The page\"\"\"\n    page: Int\n\n    \"\"\"The amount of entries per page, max 25\"\"\"\n    perPage: Int\n  ): MediaConnection\n\n  \"\"\"The url for the studio page on the AniList website\"\"\"\n  siteUrl: String\n\n  \"\"\"\n  If the studio is marked as favourite by the currently authenticated user\n  \"\"\"\n  isFavourite: Boolean!\n\n  \"\"\"The amount of user's who have favourited the studio\"\"\"\n  favourites: Int\n}\n\ntype StudioConnection {\n  edges: [StudioEdge]\n  nodes: [Studio]\n\n  \"\"\"The pagination information\"\"\"\n  pageInfo: PageInfo\n}\n\n\"\"\"Studio connection edge\"\"\"\ntype StudioEdge {\n  node: Studio\n\n  \"\"\"The id of the connection\"\"\"\n  id: Int\n\n  \"\"\"If the studio is the main animation studio of the anime\"\"\"\n  isMain: Boolean!\n\n  \"\"\"The order the character should be displayed from the users favourites\"\"\"\n  favouriteOrder: Int\n}\n\n\"\"\"Studio sort enums\"\"\"\nenum StudioSort {\n  ID\n  ID_DESC\n  NAME\n  NAME_DESC\n  SEARCH_MATCH\n  FAVOURITES\n  FAVOURITES_DESC\n}\n\n\"\"\"User's studio statistics\"\"\"\ntype StudioStats {\n  studio: Studio\n  amount: Int\n  meanScore: Int\n\n  \"\"\"\n  The amount of time in minutes the studio's works have been watched by the user\n  \"\"\"\n  timeWatched: Int\n}\n\n\"\"\"Submission status\"\"\"\nenum SubmissionStatus {\n  PENDING\n  REJECTED\n  PARTIALLY_ACCEPTED\n  ACCEPTED\n}\n\n\"\"\"User's tag statistics\"\"\"\ntype TagStats {\n  tag: MediaTag\n  amount: Int\n  meanScore: Int\n\n  \"\"\"The amount of time in minutes the tag has been watched by the user\"\"\"\n  timeWatched: Int\n}\n\n\"\"\"User text activity\"\"\"\ntype TextActivity {\n  \"\"\"The id of the activity\"\"\"\n  id: Int!\n\n  \"\"\"The user id of the activity's creator\"\"\"\n  userId: Int\n\n  \"\"\"The type of activity\"\"\"\n  type: ActivityType\n\n  \"\"\"The number of activity replies\"\"\"\n  replyCount: Int!\n\n  \"\"\"The status text (Markdown)\"\"\"\n  text(\n    \"\"\"Return the string in pre-parsed html instead of markdown\"\"\"\n    asHtml: Boolean\n  ): String\n\n  \"\"\"The url for the activity page on the AniList website\"\"\"\n  siteUrl: String\n\n  \"\"\"The time the activity was created at\"\"\"\n  createdAt: Int!\n\n  \"\"\"The user who created the activity\"\"\"\n  user: User\n\n  \"\"\"The written replies to the activity\"\"\"\n  replies: [ActivityReply]\n\n  \"\"\"The users who liked the activity\"\"\"\n  likes: [User]\n}\n\n\"\"\"Forum Thread\"\"\"\ntype Thread {\n  \"\"\"The id of the thread\"\"\"\n  id: Int!\n\n  \"\"\"The title of the thread\"\"\"\n  title: String\n\n  \"\"\"The text body of the thread (Markdown)\"\"\"\n  body(\n    \"\"\"Return the string in pre-parsed html instead of markdown\"\"\"\n    asHtml: Boolean\n  ): String\n\n  \"\"\"The id of the thread owner user\"\"\"\n  userId: Int!\n\n  \"\"\"The id of the user who most recently commented on the thread\"\"\"\n  replyUserId: Int\n\n  \"\"\"The id of the most recent comment on the thread\"\"\"\n  replyCommentId: Int\n\n  \"\"\"The number of comments on the thread\"\"\"\n  replyCount: Int\n\n  \"\"\"The number of times users have viewed the thread\"\"\"\n  viewCount: Int\n\n  \"\"\"If the thread is locked and can receive comments\"\"\"\n  isLocked: Boolean\n\n  \"\"\"\n  If the thread is stickied and should be displayed at the top of the page\n  \"\"\"\n  isSticky: Boolean\n\n  \"\"\"If the currently authenticated user is subscribed to the thread\"\"\"\n  isSubscribed: Boolean\n\n  \"\"\"The time of the last reply\"\"\"\n  repliedAt: Int\n\n  \"\"\"The time of the thread creation\"\"\"\n  createdAt: Int!\n\n  \"\"\"The time of the thread last update\"\"\"\n  updatedAt: Int!\n\n  \"\"\"The owner of the thread\"\"\"\n  user: User\n\n  \"\"\"The user to last reply to the thread\"\"\"\n  replyUser: User\n\n  \"\"\"The users who liked the thread\"\"\"\n  likes: [User]\n\n  \"\"\"The url for the thread page on the AniList website\"\"\"\n  siteUrl: String\n\n  \"\"\"The categories of the thread\"\"\"\n  categories: [ThreadCategory]\n\n  \"\"\"The media categories of the thread\"\"\"\n  mediaCategories: [Media]\n}\n\n\"\"\"A forum thread category\"\"\"\ntype ThreadCategory {\n  \"\"\"The id of the category\"\"\"\n  id: Int!\n\n  \"\"\"The name of the category\"\"\"\n  name: String!\n}\n\n\"\"\"Forum Thread Comment\"\"\"\ntype ThreadComment {\n  \"\"\"The id of the comment\"\"\"\n  id: Int!\n\n  \"\"\"The user id of the comment's owner\"\"\"\n  userId: Int\n\n  \"\"\"The id of thread the comment belongs to\"\"\"\n  threadId: Int\n\n  \"\"\"The text content of the comment (Markdown)\"\"\"\n  comment(\n    \"\"\"Return the string in pre-parsed html instead of markdown\"\"\"\n    asHtml: Boolean\n  ): String\n\n  \"\"\"The url for the comment page on the AniList website\"\"\"\n  siteUrl: String\n\n  \"\"\"The time of the comments creation\"\"\"\n  createdAt: Int!\n\n  \"\"\"The time of the comments last update\"\"\"\n  updatedAt: Int!\n\n  \"\"\"The user who created the comment\"\"\"\n  user: User\n\n  \"\"\"The users who liked the comment\"\"\"\n  likes: [User]\n\n  \"\"\"The comment's child reply comments\"\"\"\n  childComments: Json\n}\n\n\"\"\"Notification for when a thread comment is liked\"\"\"\ntype ThreadCommentLikeNotification {\n  \"\"\"The id of the Notification\"\"\"\n  id: Int!\n\n  \"\"\"The id of the user who liked to the activity\"\"\"\n  userId: Int!\n\n  \"\"\"The type of notification\"\"\"\n  type: NotificationType\n\n  \"\"\"The id of the activity which was liked\"\"\"\n  commentId: Int!\n\n  \"\"\"The notification context text\"\"\"\n  context: String\n\n  \"\"\"The time the notification was created at\"\"\"\n  createdAt: Int\n\n  \"\"\"The thread that the relevant comment belongs to\"\"\"\n  thread: Thread\n\n  \"\"\"The thread comment that was liked\"\"\"\n  comment: ThreadComment\n\n  \"\"\"The user who liked the activity\"\"\"\n  user: User\n}\n\n\"\"\"\nNotification for when authenticated user is @ mentioned in a forum thread comment\n\"\"\"\ntype ThreadCommentMentionNotification {\n  \"\"\"The id of the Notification\"\"\"\n  id: Int!\n\n  \"\"\"The id of the user who mentioned the authenticated user\"\"\"\n  userId: Int!\n\n  \"\"\"The type of notification\"\"\"\n  type: NotificationType\n\n  \"\"\"The id of the comment where mentioned\"\"\"\n  commentId: Int!\n\n  \"\"\"The notification context text\"\"\"\n  context: String\n\n  \"\"\"The time the notification was created at\"\"\"\n  createdAt: Int\n\n  \"\"\"The thread that the relevant comment belongs to\"\"\"\n  thread: Thread\n\n  \"\"\"The thread comment that included the @ mention\"\"\"\n  comment: ThreadComment\n\n  \"\"\"The user who mentioned the authenticated user\"\"\"\n  user: User\n}\n\n\"\"\"Notification for when a user replies to your forum thread comment\"\"\"\ntype ThreadCommentReplyNotification {\n  \"\"\"The id of the Notification\"\"\"\n  id: Int!\n\n  \"\"\"The id of the user who create the comment reply\"\"\"\n  userId: Int!\n\n  \"\"\"The type of notification\"\"\"\n  type: NotificationType\n\n  \"\"\"The id of the reply comment\"\"\"\n  commentId: Int!\n\n  \"\"\"The notification context text\"\"\"\n  context: String\n\n  \"\"\"The time the notification was created at\"\"\"\n  createdAt: Int\n\n  \"\"\"The thread that the relevant comment belongs to\"\"\"\n  thread: Thread\n\n  \"\"\"The reply thread comment\"\"\"\n  comment: ThreadComment\n\n  \"\"\"The user who replied to the activity\"\"\"\n  user: User\n}\n\n\"\"\"Notification for when a user replies to a subscribed forum thread\"\"\"\ntype ThreadCommentSubscribedNotification {\n  \"\"\"The id of the Notification\"\"\"\n  id: Int!\n\n  \"\"\"The id of the user who commented on the thread\"\"\"\n  userId: Int!\n\n  \"\"\"The type of notification\"\"\"\n  type: NotificationType\n\n  \"\"\"The id of the new comment in the subscribed thread\"\"\"\n  commentId: Int!\n\n  \"\"\"The notification context text\"\"\"\n  context: String\n\n  \"\"\"The time the notification was created at\"\"\"\n  createdAt: Int\n\n  \"\"\"The thread that the relevant comment belongs to\"\"\"\n  thread: Thread\n\n  \"\"\"The reply thread comment\"\"\"\n  comment: ThreadComment\n\n  \"\"\"The user who replied to the subscribed thread\"\"\"\n  user: User\n}\n\n\"\"\"Notification for when a thread is liked\"\"\"\ntype ThreadLikeNotification {\n  \"\"\"The id of the Notification\"\"\"\n  id: Int!\n\n  \"\"\"The id of the user who liked to the activity\"\"\"\n  userId: Int!\n\n  \"\"\"The type of notification\"\"\"\n  type: NotificationType\n\n  \"\"\"The id of the thread which was liked\"\"\"\n  threadId: Int!\n\n  \"\"\"The notification context text\"\"\"\n  context: String\n\n  \"\"\"The time the notification was created at\"\"\"\n  createdAt: Int\n\n  \"\"\"The thread that the relevant comment belongs to\"\"\"\n  thread: Thread\n\n  \"\"\"The liked thread comment\"\"\"\n  comment: ThreadComment\n\n  \"\"\"The user who liked the activity\"\"\"\n  user: User\n}\n\n\"\"\"Thread sort enums\"\"\"\nenum ThreadSort {\n  ID\n  ID_DESC\n  TITLE\n  TITLE_DESC\n  CREATED_AT\n  CREATED_AT_DESC\n  UPDATED_AT\n  UPDATED_AT_DESC\n  REPLIED_AT\n  REPLIED_AT_DESC\n  REPLY_COUNT\n  REPLY_COUNT_DESC\n  VIEW_COUNT\n  VIEW_COUNT_DESC\n  IS_STICKY\n  SEARCH_MATCH\n}\n\n\"\"\"A user\"\"\"\ntype User {\n  \"\"\"The id of the user\"\"\"\n  id: Int!\n\n  \"\"\"The name of the user\"\"\"\n  name: String!\n\n  \"\"\"The bio written by user (Markdown)\"\"\"\n  about(\n    \"\"\"Return the string in pre-parsed html instead of markdown\"\"\"\n    asHtml: Boolean\n  ): String\n\n  \"\"\"The user's avatar images\"\"\"\n  avatar: UserAvatar\n\n  \"\"\"The user's banner images\"\"\"\n  bannerImage: String\n\n  \"\"\"If the authenticated user if following this user\"\"\"\n  isFollowing: Boolean\n\n  \"\"\"If the user is blocked by the authenticated user\"\"\"\n  isBlocked: Boolean\n  bans: Json\n\n  \"\"\"The user's general options\"\"\"\n  options: UserOptions\n\n  \"\"\"The user's media list options\"\"\"\n  mediaListOptions: MediaListOptions\n\n  \"\"\"The users favourites\"\"\"\n  favourites(\n    \"\"\"Deprecated. Use page arguments on each favourite field instead.\"\"\"\n    page: Int\n  ): Favourites\n\n  \"\"\"The user's statistics\"\"\"\n  stats: UserStats\n\n  \"\"\"The number of unread notifications the user has\"\"\"\n  unreadNotificationCount: Int\n\n  \"\"\"The url for the user page on the AniList website\"\"\"\n  siteUrl: String\n\n  \"\"\"The donation tier of the user\"\"\"\n  donatorTier: Int\n\n  \"\"\"Custom donation badge text\"\"\"\n  donatorBadge: String\n\n  \"\"\"If the user is a moderator or data moderator\"\"\"\n  moderatorStatus: String\n\n  \"\"\"When the user's data was last updated\"\"\"\n  updatedAt: Int\n}\n\n\"\"\"A user's activity history stats.\"\"\"\ntype UserActivityHistory {\n  \"\"\"The day the activity took place (Unix timestamp)\"\"\"\n  date: Int\n\n  \"\"\"The amount of activity on the day\"\"\"\n  amount: Int\n\n  \"\"\"The level of activity represented on a 1-10 scale\"\"\"\n  level: Int\n}\n\n\"\"\"A user's avatars\"\"\"\ntype UserAvatar {\n  \"\"\"The avatar of user at its largest size\"\"\"\n  large: String\n\n  \"\"\"The avatar of user at medium size\"\"\"\n  medium: String\n}\n\n\"\"\"A user's general options\"\"\"\ntype UserOptions {\n  \"\"\"The language the user wants to see media titles in\"\"\"\n  titleLanguage: UserTitleLanguage\n\n  \"\"\"Whether the user has enabled viewing of 18+ content\"\"\"\n  displayAdultContent: Boolean\n\n  \"\"\"\n  Whether the user receives notifications when a show they are watching aires\n  \"\"\"\n  airingNotifications: Boolean\n\n  \"\"\"Profile highlight color (blue, purple, pink, orange, red, green, gray)\"\"\"\n  profileColor: String\n\n  \"\"\"Notification options\"\"\"\n  notificationOptions: [NotificationOption]\n}\n\n\"\"\"User sort enums\"\"\"\nenum UserSort {\n  ID\n  ID_DESC\n  USERNAME\n  USERNAME_DESC\n  WATCHED_TIME\n  WATCHED_TIME_DESC\n  CHAPTERS_READ\n  CHAPTERS_READ_DESC\n  SEARCH_MATCH\n}\n\n\"\"\"A user's statistics\"\"\"\ntype UserStats {\n  \"\"\"The amount of anime the user has watched in minutes\"\"\"\n  watchedTime: Int\n\n  \"\"\"The amount of manga chapters the user has read\"\"\"\n  chaptersRead: Int\n  activityHistory: [UserActivityHistory]\n  animeStatusDistribution: [StatusDistribution]\n  mangaStatusDistribution: [StatusDistribution]\n  animeScoreDistribution: [ScoreDistribution]\n  mangaScoreDistribution: [ScoreDistribution]\n  animeListScores: ListScoreStats\n  mangaListScores: ListScoreStats\n  favouredGenresOverview: [GenreStats]\n  favouredGenres: [GenreStats]\n  favouredTags: [TagStats]\n  favouredActors: [StaffStats]\n  favouredStaff: [StaffStats]\n  favouredStudios: [StudioStats]\n  favouredYears: [YearStats]\n  favouredFormats: [FormatStats]\n}\n\n\"\"\"The language the user wants to see media titles in\"\"\"\nenum UserTitleLanguage {\n  \"\"\"The romanization of the native language title\"\"\"\n  ROMAJI\n\n  \"\"\"The official english title\"\"\"\n  ENGLISH\n\n  \"\"\"Official title in it's native language\"\"\"\n  NATIVE\n\n  \"\"\"\n  The romanization of the native language title, stylised by media creator\n  \"\"\"\n  ROMAJI_STYLISED\n\n  \"\"\"The official english title, stylised by media creator\"\"\"\n  ENGLISH_STYLISED\n\n  \"\"\"Official title in it's native language, stylised by media creator\"\"\"\n  NATIVE_STYLISED\n}\n\n\"\"\"User's year statistics\"\"\"\ntype YearStats {\n  year: Int\n  amount: Int\n  meanScore: Int\n}\n",
      "containsQueryType": true,
      "typesUndefined": [],
      "directivesUndefined": [
        "deprecated"
      ],
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 94,
      "containsCycle": true,
      "numDefinitions": 137
    }
  ],
  "metrics": {
    "created_at": "2019-02-04T19:41:56Z",
    "updated_at": "2019-07-01T16:50:28Z",
    "pushed_at": "2019-06-27T12:27:05Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 1,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 1,
    "releases": 0,
    "stargazers": 0
  }
}