{
  "repo_name": "memorable-api",
  "repo_full_name": "intivejshooligans/memorable-api",
  "repo_owner": "IntiveJsHooligans",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "src/generated/prisma.graphql",
      "sha": "b01ec975b408b7fe2f50cbe39d5b944c1e2a74ab",
      "url": "https://api.github.com/repositories/119059555/contents/src/generated/prisma.graphql?ref=7bc622c693a173c32ab7576c94b714c4139a899c",
      "git_url": "https://api.github.com/repositories/119059555/git/blobs/b01ec975b408b7fe2f50cbe39d5b944c1e2a74ab",
      "html_url": "https://github.com/IntiveJsHooligans/memorable-api/blob/7bc622c693a173c32ab7576c94b714c4139a899c/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Link implements Node {\n  id: ID!\n  description: String!\n  url: String!\n  postedBy(where: UserWhereInput): User\n  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]\n}\n\ntype Task implements Node {\n  completed: Int\n  createdBy(where: UserWhereInput): User\n  deadline: Int\n  description: String\n  endDate: DateTime\n  id: ID!\n  isPrivate: Boolean\n  originalEstimate: Int\n  priority: Int\n  remaining: Int\n  startDate: DateTime\n  status(where: TaskStatusWhereInput): TaskStatus\n  title: String!\n}\n\ntype TaskStatus implements Node {\n  id: ID!\n  name: String!\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n  email: String!\n  password: String!\n  links(where: LinkWhereInput, orderBy: LinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Link!]\n  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]\n  tasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task!]\n}\n\ntype Vote implements Node {\n  id: ID!\n  link(where: LinkWhereInput): Link!\n  user(where: UserWhereInput): User!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateLink {\n  count: Int!\n}\n\ntype AggregateTask {\n  count: Int!\n}\n\ntype AggregateTaskStatus {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype AggregateVote {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\nscalar DateTime\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LinkConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LinkEdge]!\n  aggregate: AggregateLink!\n}\n\ninput LinkCreateInput {\n  description: String!\n  url: String!\n  postedBy: UserCreateOneWithoutLinksInput\n  votes: VoteCreateManyWithoutLinkInput\n}\n\ninput LinkCreateManyWithoutPostedByInput {\n  create: [LinkCreateWithoutPostedByInput!]\n  connect: [LinkWhereUniqueInput!]\n}\n\ninput LinkCreateOneWithoutVotesInput {\n  create: LinkCreateWithoutVotesInput\n  connect: LinkWhereUniqueInput\n}\n\ninput LinkCreateWithoutPostedByInput {\n  description: String!\n  url: String!\n  votes: VoteCreateManyWithoutLinkInput\n}\n\ninput LinkCreateWithoutVotesInput {\n  description: String!\n  url: String!\n  postedBy: UserCreateOneWithoutLinksInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LinkEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Link!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LinkOrderByInput {\n  id_ASC\n  id_DESC\n  description_ASC\n  description_DESC\n  url_ASC\n  url_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype LinkPreviousValues {\n  id: ID!\n  description: String!\n  url: String!\n}\n\ntype LinkSubscriptionPayload {\n  mutation: MutationType!\n  node: Link\n  updatedFields: [String!]\n  previousValues: LinkPreviousValues\n}\n\ninput LinkSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LinkSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LinkSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LinkWhereInput\n}\n\ninput LinkUpdateInput {\n  description: String\n  url: String\n  postedBy: UserUpdateOneWithoutLinksInput\n  votes: VoteUpdateManyWithoutLinkInput\n}\n\ninput LinkUpdateManyWithoutPostedByInput {\n  create: [LinkCreateWithoutPostedByInput!]\n  connect: [LinkWhereUniqueInput!]\n  disconnect: [LinkWhereUniqueInput!]\n  delete: [LinkWhereUniqueInput!]\n  update: [LinkUpdateWithoutPostedByInput!]\n  upsert: [LinkUpsertWithoutPostedByInput!]\n}\n\ninput LinkUpdateOneWithoutVotesInput {\n  create: LinkCreateWithoutVotesInput\n  connect: LinkWhereUniqueInput\n  disconnect: LinkWhereUniqueInput\n  delete: LinkWhereUniqueInput\n  update: LinkUpdateWithoutVotesInput\n  upsert: LinkUpsertWithoutVotesInput\n}\n\ninput LinkUpdateWithoutPostedByDataInput {\n  description: String\n  url: String\n  votes: VoteUpdateManyWithoutLinkInput\n}\n\ninput LinkUpdateWithoutPostedByInput {\n  where: LinkWhereUniqueInput!\n  data: LinkUpdateWithoutPostedByDataInput!\n}\n\ninput LinkUpdateWithoutVotesDataInput {\n  description: String\n  url: String\n  postedBy: UserUpdateOneWithoutLinksInput\n}\n\ninput LinkUpdateWithoutVotesInput {\n  where: LinkWhereUniqueInput!\n  data: LinkUpdateWithoutVotesDataInput!\n}\n\ninput LinkUpsertWithoutPostedByInput {\n  where: LinkWhereUniqueInput!\n  update: LinkUpdateWithoutPostedByDataInput!\n  create: LinkCreateWithoutPostedByInput!\n}\n\ninput LinkUpsertWithoutVotesInput {\n  where: LinkWhereUniqueInput!\n  update: LinkUpdateWithoutVotesDataInput!\n  create: LinkCreateWithoutVotesInput!\n}\n\ninput LinkWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LinkWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LinkWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  url: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  url_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  url_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  url_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  url_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  url_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  url_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  url_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  url_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  url_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  url_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  url_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  url_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  url_not_ends_with: String\n  postedBy: UserWhereInput\n  votes_every: VoteWhereInput\n  votes_some: VoteWhereInput\n  votes_none: VoteWhereInput\n}\n\ninput LinkWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createVote(data: VoteCreateInput!): Vote!\n  createLink(data: LinkCreateInput!): Link!\n  createUser(data: UserCreateInput!): User!\n  createTask(data: TaskCreateInput!): Task!\n  createTaskStatus(data: TaskStatusCreateInput!): TaskStatus!\n  updateVote(data: VoteUpdateInput!, where: VoteWhereUniqueInput!): Vote\n  updateLink(data: LinkUpdateInput!, where: LinkWhereUniqueInput!): Link\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateTask(data: TaskUpdateInput!, where: TaskWhereUniqueInput!): Task\n  updateTaskStatus(data: TaskStatusUpdateInput!, where: TaskStatusWhereUniqueInput!): TaskStatus\n  deleteVote(where: VoteWhereUniqueInput!): Vote\n  deleteLink(where: LinkWhereUniqueInput!): Link\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteTask(where: TaskWhereUniqueInput!): Task\n  deleteTaskStatus(where: TaskStatusWhereUniqueInput!): TaskStatus\n  upsertVote(where: VoteWhereUniqueInput!, create: VoteCreateInput!, update: VoteUpdateInput!): Vote!\n  upsertLink(where: LinkWhereUniqueInput!, create: LinkCreateInput!, update: LinkUpdateInput!): Link!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertTask(where: TaskWhereUniqueInput!, create: TaskCreateInput!, update: TaskUpdateInput!): Task!\n  upsertTaskStatus(where: TaskStatusWhereUniqueInput!, create: TaskStatusCreateInput!, update: TaskStatusUpdateInput!): TaskStatus!\n  updateManyVotes(data: VoteUpdateInput!, where: VoteWhereInput!): BatchPayload!\n  updateManyLinks(data: LinkUpdateInput!, where: LinkWhereInput!): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!\n  updateManyTasks(data: TaskUpdateInput!, where: TaskWhereInput!): BatchPayload!\n  updateManyTaskStatuses(data: TaskStatusUpdateInput!, where: TaskStatusWhereInput!): BatchPayload!\n  deleteManyVotes(where: VoteWhereInput!): BatchPayload!\n  deleteManyLinks(where: LinkWhereInput!): BatchPayload!\n  deleteManyUsers(where: UserWhereInput!): BatchPayload!\n  deleteManyTasks(where: TaskWhereInput!): BatchPayload!\n  deleteManyTaskStatuses(where: TaskStatusWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote]!\n  links(where: LinkWhereInput, orderBy: LinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Link]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  tasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task]!\n  taskStatuses(where: TaskStatusWhereInput, orderBy: TaskStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TaskStatus]!\n  vote(where: VoteWhereUniqueInput!): Vote\n  link(where: LinkWhereUniqueInput!): Link\n  user(where: UserWhereUniqueInput!): User\n  task(where: TaskWhereUniqueInput!): Task\n  taskStatus(where: TaskStatusWhereUniqueInput!): TaskStatus\n  votesConnection(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VoteConnection!\n  linksConnection(where: LinkWhereInput, orderBy: LinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LinkConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  tasksConnection(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TaskConnection!\n  taskStatusesConnection(where: TaskStatusWhereInput, orderBy: TaskStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TaskStatusConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!): Node\n}\n\ntype Subscription {\n  vote(where: VoteSubscriptionWhereInput): VoteSubscriptionPayload\n  link(where: LinkSubscriptionWhereInput): LinkSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  task(where: TaskSubscriptionWhereInput): TaskSubscriptionPayload\n  taskStatus(where: TaskStatusSubscriptionWhereInput): TaskStatusSubscriptionPayload\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype TaskConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [TaskEdge]!\n  aggregate: AggregateTask!\n}\n\ninput TaskCreateInput {\n  completed: Int\n  deadline: Int\n  description: String\n  endDate: DateTime\n  isPrivate: Boolean\n  originalEstimate: Int\n  priority: Int\n  remaining: Int\n  startDate: DateTime\n  title: String!\n  createdBy: UserCreateOneWithoutTasksInput\n  status: TaskStatusCreateOneInput\n}\n\ninput TaskCreateManyWithoutCreatedByInput {\n  create: [TaskCreateWithoutCreatedByInput!]\n  connect: [TaskWhereUniqueInput!]\n}\n\ninput TaskCreateWithoutCreatedByInput {\n  completed: Int\n  deadline: Int\n  description: String\n  endDate: DateTime\n  isPrivate: Boolean\n  originalEstimate: Int\n  priority: Int\n  remaining: Int\n  startDate: DateTime\n  title: String!\n  status: TaskStatusCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype TaskEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Task!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum TaskOrderByInput {\n  completed_ASC\n  completed_DESC\n  deadline_ASC\n  deadline_DESC\n  description_ASC\n  description_DESC\n  endDate_ASC\n  endDate_DESC\n  id_ASC\n  id_DESC\n  isPrivate_ASC\n  isPrivate_DESC\n  originalEstimate_ASC\n  originalEstimate_DESC\n  priority_ASC\n  priority_DESC\n  remaining_ASC\n  remaining_DESC\n  startDate_ASC\n  startDate_DESC\n  title_ASC\n  title_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TaskPreviousValues {\n  completed: Int\n  deadline: Int\n  description: String\n  endDate: DateTime\n  id: ID!\n  isPrivate: Boolean\n  originalEstimate: Int\n  priority: Int\n  remaining: Int\n  startDate: DateTime\n  title: String!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype TaskStatusConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [TaskStatusEdge]!\n  aggregate: AggregateTaskStatus!\n}\n\ninput TaskStatusCreateInput {\n  name: String!\n}\n\ninput TaskStatusCreateOneInput {\n  create: TaskStatusCreateInput\n  connect: TaskStatusWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype TaskStatusEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: TaskStatus!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum TaskStatusOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TaskStatusPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype TaskStatusSubscriptionPayload {\n  mutation: MutationType!\n  node: TaskStatus\n  updatedFields: [String!]\n  previousValues: TaskStatusPreviousValues\n}\n\ninput TaskStatusSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TaskStatusSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TaskStatusSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TaskStatusWhereInput\n}\n\ninput TaskStatusUpdateDataInput {\n  name: String\n}\n\ninput TaskStatusUpdateInput {\n  name: String\n}\n\ninput TaskStatusUpdateNestedInput {\n  where: TaskStatusWhereUniqueInput!\n  data: TaskStatusUpdateDataInput!\n}\n\ninput TaskStatusUpdateOneInput {\n  create: TaskStatusCreateInput\n  connect: TaskStatusWhereUniqueInput\n  disconnect: TaskStatusWhereUniqueInput\n  delete: TaskStatusWhereUniqueInput\n  update: TaskStatusUpdateNestedInput\n  upsert: TaskStatusUpsertNestedInput\n}\n\ninput TaskStatusUpsertNestedInput {\n  where: TaskStatusWhereUniqueInput!\n  update: TaskStatusUpdateDataInput!\n  create: TaskStatusCreateInput!\n}\n\ninput TaskStatusWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TaskStatusWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TaskStatusWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n}\n\ninput TaskStatusWhereUniqueInput {\n  id: ID\n}\n\ntype TaskSubscriptionPayload {\n  mutation: MutationType!\n  node: Task\n  updatedFields: [String!]\n  previousValues: TaskPreviousValues\n}\n\ninput TaskSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TaskSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TaskSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TaskWhereInput\n}\n\ninput TaskUpdateInput {\n  completed: Int\n  deadline: Int\n  description: String\n  endDate: DateTime\n  isPrivate: Boolean\n  originalEstimate: Int\n  priority: Int\n  remaining: Int\n  startDate: DateTime\n  title: String\n  createdBy: UserUpdateOneWithoutTasksInput\n  status: TaskStatusUpdateOneInput\n}\n\ninput TaskUpdateManyWithoutCreatedByInput {\n  create: [TaskCreateWithoutCreatedByInput!]\n  connect: [TaskWhereUniqueInput!]\n  disconnect: [TaskWhereUniqueInput!]\n  delete: [TaskWhereUniqueInput!]\n  update: [TaskUpdateWithoutCreatedByInput!]\n  upsert: [TaskUpsertWithoutCreatedByInput!]\n}\n\ninput TaskUpdateWithoutCreatedByDataInput {\n  completed: Int\n  deadline: Int\n  description: String\n  endDate: DateTime\n  isPrivate: Boolean\n  originalEstimate: Int\n  priority: Int\n  remaining: Int\n  startDate: DateTime\n  title: String\n  status: TaskStatusUpdateOneInput\n}\n\ninput TaskUpdateWithoutCreatedByInput {\n  where: TaskWhereUniqueInput!\n  data: TaskUpdateWithoutCreatedByDataInput!\n}\n\ninput TaskUpsertWithoutCreatedByInput {\n  where: TaskWhereUniqueInput!\n  update: TaskUpdateWithoutCreatedByDataInput!\n  create: TaskCreateWithoutCreatedByInput!\n}\n\ninput TaskWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TaskWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TaskWhereInput!]\n  completed: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  completed_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  completed_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  completed_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  completed_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  completed_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  completed_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  completed_gte: Int\n  deadline: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  deadline_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  deadline_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  deadline_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  deadline_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  deadline_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  deadline_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  deadline_gte: Int\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  endDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  endDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  endDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  endDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  endDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  endDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  endDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  endDate_gte: DateTime\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  isPrivate: Boolean\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  isPrivate_not: Boolean\n  originalEstimate: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  originalEstimate_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  originalEstimate_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  originalEstimate_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  originalEstimate_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  originalEstimate_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  originalEstimate_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  originalEstimate_gte: Int\n  priority: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  priority_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  priority_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  priority_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  priority_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  priority_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  priority_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  priority_gte: Int\n  remaining: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  remaining_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  remaining_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  remaining_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  remaining_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  remaining_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  remaining_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  remaining_gte: Int\n  startDate: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  startDate_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  startDate_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  startDate_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  startDate_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  startDate_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  startDate_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  startDate_gte: DateTime\n  title: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  title_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  title_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  title_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  title_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  title_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  title_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  title_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  title_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  title_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  title_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  title_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  title_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  title_not_ends_with: String\n  createdBy: UserWhereInput\n  status: TaskStatusWhereInput\n}\n\ninput TaskWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n  email: String!\n  password: String!\n  links: LinkCreateManyWithoutPostedByInput\n  votes: VoteCreateManyWithoutUserInput\n  tasks: TaskCreateManyWithoutCreatedByInput\n}\n\ninput UserCreateOneWithoutLinksInput {\n  create: UserCreateWithoutLinksInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutTasksInput {\n  create: UserCreateWithoutTasksInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutVotesInput {\n  create: UserCreateWithoutVotesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutLinksInput {\n  name: String!\n  email: String!\n  password: String!\n  votes: VoteCreateManyWithoutUserInput\n  tasks: TaskCreateManyWithoutCreatedByInput\n}\n\ninput UserCreateWithoutTasksInput {\n  name: String!\n  email: String!\n  password: String!\n  links: LinkCreateManyWithoutPostedByInput\n  votes: VoteCreateManyWithoutUserInput\n}\n\ninput UserCreateWithoutVotesInput {\n  name: String!\n  email: String!\n  password: String!\n  links: LinkCreateManyWithoutPostedByInput\n  tasks: TaskCreateManyWithoutCreatedByInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n  email: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  name: String\n  email: String\n  password: String\n  links: LinkUpdateManyWithoutPostedByInput\n  votes: VoteUpdateManyWithoutUserInput\n  tasks: TaskUpdateManyWithoutCreatedByInput\n}\n\ninput UserUpdateOneWithoutLinksInput {\n  create: UserCreateWithoutLinksInput\n  connect: UserWhereUniqueInput\n  disconnect: UserWhereUniqueInput\n  delete: UserWhereUniqueInput\n  update: UserUpdateWithoutLinksInput\n  upsert: UserUpsertWithoutLinksInput\n}\n\ninput UserUpdateOneWithoutTasksInput {\n  create: UserCreateWithoutTasksInput\n  connect: UserWhereUniqueInput\n  disconnect: UserWhereUniqueInput\n  delete: UserWhereUniqueInput\n  update: UserUpdateWithoutTasksInput\n  upsert: UserUpsertWithoutTasksInput\n}\n\ninput UserUpdateOneWithoutVotesInput {\n  create: UserCreateWithoutVotesInput\n  connect: UserWhereUniqueInput\n  disconnect: UserWhereUniqueInput\n  delete: UserWhereUniqueInput\n  update: UserUpdateWithoutVotesInput\n  upsert: UserUpsertWithoutVotesInput\n}\n\ninput UserUpdateWithoutLinksDataInput {\n  name: String\n  email: String\n  password: String\n  votes: VoteUpdateManyWithoutUserInput\n  tasks: TaskUpdateManyWithoutCreatedByInput\n}\n\ninput UserUpdateWithoutLinksInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutLinksDataInput!\n}\n\ninput UserUpdateWithoutTasksDataInput {\n  name: String\n  email: String\n  password: String\n  links: LinkUpdateManyWithoutPostedByInput\n  votes: VoteUpdateManyWithoutUserInput\n}\n\ninput UserUpdateWithoutTasksInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutTasksDataInput!\n}\n\ninput UserUpdateWithoutVotesDataInput {\n  name: String\n  email: String\n  password: String\n  links: LinkUpdateManyWithoutPostedByInput\n  tasks: TaskUpdateManyWithoutCreatedByInput\n}\n\ninput UserUpdateWithoutVotesInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutVotesDataInput!\n}\n\ninput UserUpsertWithoutLinksInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutLinksDataInput!\n  create: UserCreateWithoutLinksInput!\n}\n\ninput UserUpsertWithoutTasksInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutTasksDataInput!\n  create: UserCreateWithoutTasksInput!\n}\n\ninput UserUpsertWithoutVotesInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutVotesDataInput!\n  create: UserCreateWithoutVotesInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  password: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  password_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  password_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  password_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  password_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  password_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  password_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  password_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  password_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  password_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  password_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  password_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  password_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  password_not_ends_with: String\n  links_every: LinkWhereInput\n  links_some: LinkWhereInput\n  links_none: LinkWhereInput\n  votes_every: VoteWhereInput\n  votes_some: VoteWhereInput\n  votes_none: VoteWhereInput\n  tasks_every: TaskWhereInput\n  tasks_some: TaskWhereInput\n  tasks_none: TaskWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype VoteConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [VoteEdge]!\n  aggregate: AggregateVote!\n}\n\ninput VoteCreateInput {\n  link: LinkCreateOneWithoutVotesInput!\n  user: UserCreateOneWithoutVotesInput!\n}\n\ninput VoteCreateManyWithoutLinkInput {\n  create: [VoteCreateWithoutLinkInput!]\n  connect: [VoteWhereUniqueInput!]\n}\n\ninput VoteCreateManyWithoutUserInput {\n  create: [VoteCreateWithoutUserInput!]\n  connect: [VoteWhereUniqueInput!]\n}\n\ninput VoteCreateWithoutLinkInput {\n  user: UserCreateOneWithoutVotesInput!\n}\n\ninput VoteCreateWithoutUserInput {\n  link: LinkCreateOneWithoutVotesInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype VoteEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Vote!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum VoteOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype VotePreviousValues {\n  id: ID!\n}\n\ntype VoteSubscriptionPayload {\n  mutation: MutationType!\n  node: Vote\n  updatedFields: [String!]\n  previousValues: VotePreviousValues\n}\n\ninput VoteSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [VoteSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [VoteSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: VoteWhereInput\n}\n\ninput VoteUpdateInput {\n  link: LinkUpdateOneWithoutVotesInput\n  user: UserUpdateOneWithoutVotesInput\n}\n\ninput VoteUpdateManyWithoutLinkInput {\n  create: [VoteCreateWithoutLinkInput!]\n  connect: [VoteWhereUniqueInput!]\n  disconnect: [VoteWhereUniqueInput!]\n  delete: [VoteWhereUniqueInput!]\n  update: [VoteUpdateWithoutLinkInput!]\n  upsert: [VoteUpsertWithoutLinkInput!]\n}\n\ninput VoteUpdateManyWithoutUserInput {\n  create: [VoteCreateWithoutUserInput!]\n  connect: [VoteWhereUniqueInput!]\n  disconnect: [VoteWhereUniqueInput!]\n  delete: [VoteWhereUniqueInput!]\n  update: [VoteUpdateWithoutUserInput!]\n  upsert: [VoteUpsertWithoutUserInput!]\n}\n\ninput VoteUpdateWithoutLinkDataInput {\n  user: UserUpdateOneWithoutVotesInput\n}\n\ninput VoteUpdateWithoutLinkInput {\n  where: VoteWhereUniqueInput!\n  data: VoteUpdateWithoutLinkDataInput!\n}\n\ninput VoteUpdateWithoutUserDataInput {\n  link: LinkUpdateOneWithoutVotesInput\n}\n\ninput VoteUpdateWithoutUserInput {\n  where: VoteWhereUniqueInput!\n  data: VoteUpdateWithoutUserDataInput!\n}\n\ninput VoteUpsertWithoutLinkInput {\n  where: VoteWhereUniqueInput!\n  update: VoteUpdateWithoutLinkDataInput!\n  create: VoteCreateWithoutLinkInput!\n}\n\ninput VoteUpsertWithoutUserInput {\n  where: VoteWhereUniqueInput!\n  update: VoteUpdateWithoutUserDataInput!\n  create: VoteCreateWithoutUserInput!\n}\n\ninput VoteWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [VoteWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [VoteWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  link: LinkWhereInput\n  user: UserWhereInput\n}\n\ninput VoteWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 35,
      "containsCycle": true,
      "numDefinitions": 122
    }
  ],
  "metrics": {
    "created_at": "2018-01-26T14:16:13Z",
    "updated_at": "2018-02-22T20:48:22Z",
    "pushed_at": "2018-02-24T09:40:52Z",
    "issues": 0,
    "watchers": 2,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 3,
    "pull_requests_open": 0,
    "pull_requests_closed": 1,
    "pull_requests_merged": 2,
    "releases": 0,
    "stargazers": 0
  }
}