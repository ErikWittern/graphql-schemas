{
  "repo_name": "stripe-graphql",
  "repo_full_name": "jferrettiboke/stripe-graphql",
  "repo_owner": "jferrettiboke",
  "repo_description": "ðŸ˜Ž Community-driven Stripe GraphQL API with superpowers.",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "examples/my-app/src/schema.graphql",
      "sha": "554f3f8388900801ede6c6f67fb2237f43630d52",
      "url": "https://api.github.com/repositories/149113829/contents/examples/my-app/src/schema.graphql?ref=6ac36f0ff6b5192b552fea9274a2c955309188df",
      "git_url": "https://api.github.com/repositories/149113829/git/blobs/554f3f8388900801ede6c6f67fb2237f43630d52",
      "html_url": "https://github.com/jferrettiboke/stripe-graphql/blob/6ac36f0ff6b5192b552fea9274a2c955309188df/examples/my-app/src/schema.graphql",
      "content": "### This file was autogenerated by Nexus 0.11.3\n### Do not make changes to this file directly\n\n\ntype Query {\n  hello: String!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 1
    },
    {
      "name": "schema.graphql",
      "path": "src/generated/schema.graphql",
      "sha": "10b59d921486d3b39a6e488964a1460b2d806798",
      "url": "https://api.github.com/repositories/149113829/contents/src/generated/schema.graphql?ref=3afa808b9d68056aabdc4c99acd2c5b378582b3c",
      "git_url": "https://api.github.com/repositories/149113829/git/blobs/10b59d921486d3b39a6e488964a1460b2d806798",
      "html_url": "https://github.com/jferrettiboke/stripe-graphql/blob/3afa808b9d68056aabdc4c99acd2c5b378582b3c/src/generated/schema.graphql",
      "content": "### This file was autogenerated by Nexus 0.11.6\n### Do not make changes to this file directly\n\n\ntype _Subscription implements Node {\n  customer: Customer!\n\n  \"\"\"Unique identifier for the object.\"\"\"\n  id: ID!\n\n  \"\"\"String representing the object's type.\"\"\"\n  object: String!\n}\n\ntype Account implements Node {\n  balance: Balance!\n  balanceTransactions: [BalanceTransaction!]!\n  bankAccounts: [BankAccount!]!\n  cards: [Card!]!\n  country: String!\n\n  \"\"\"Unique identifier for the object.\"\"\"\n  id: ID!\n  legal_entity: LegalEntity\n\n  \"\"\"String representing the object's type.\"\"\"\n  object: String!\n  verification: AccountVerification!\n}\n\ntype AccountVerification {\n  disabled_reason: String\n  due_by: Int\n  fields_needed: [String]\n}\n\ntype AccountVerificationFields {\n  company: VerificationFields!\n  individual: VerificationFields!\n}\n\ntype AdditionalOwner {\n  address: Address\n  dob: Dob\n  first_name: String\n  last_name: String\n  maiden_name: String\n  personal_id_number_provided: Boolean!\n}\n\ntype Address {\n  city: String\n  country: String\n  line1: String\n  line2: String\n  postal_code: String\n  state: String\n}\n\ntype Balance {\n  available: [BalanceItem!]!\n  livemode: Boolean!\n  object: String!\n  pending: [BalanceItem!]!\n}\n\ntype BalanceItem {\n  amount: Int!\n  currency: String!\n\n  \"\"\"Breakdown of balance by source types.\"\"\"\n  source_types: BalanceSourceTypes!\n}\n\ntype BalanceSourceTypes {\n  \"\"\"Amount for bank account.\"\"\"\n  bank_account: Int\n\n  \"\"\"Amount for card.\"\"\"\n  card: Int\n}\n\ntype BalanceTransaction implements Node {\n  amount: Int\n  available_on: Int\n  created: Int\n  currency: String\n  description: String\n  exchange_rate: Float\n  fee: Int\n  fee_details: [FeeDetails!]!\n\n  \"\"\"Unique identifier for the object.\"\"\"\n  id: ID!\n  net: Int\n\n  \"\"\"String representing the object's type.\"\"\"\n  object: String!\n  source: String\n  status: String\n  type: String\n}\n\ntype BankAccount implements Node {\n  account_holder_name: String\n  account_holder_type: LEGAL_ENTITY_TYPE\n  bank_name: String\n  country: String\n  currency: String\n  customer: String\n  fingerprint: String\n\n  \"\"\"Unique identifier for the object.\"\"\"\n  id: ID!\n  last4: String\n\n  \"\"\"String representing the object's type.\"\"\"\n  object: String!\n  routing_number: String\n  status: String\n}\n\ntype Card implements Node {\n  brand: String\n  country: String\n  default_for_currency: Boolean\n  exp_month: Int\n  exp_year: Int\n  funding: CARD_FUNDING_TYPE!\n\n  \"\"\"Unique identifier for the object.\"\"\"\n  id: ID!\n  last4: String\n  name: String\n\n  \"\"\"String representing the object's type.\"\"\"\n  object: String!\n}\n\nenum CARD_FUNDING_TYPE {\n  credit\n  debit\n  prepaid\n  unknown\n}\n\ntype Charge implements Node {\n  amount: Int\n  currency: String\n\n  \"\"\"Unique identifier for the object.\"\"\"\n  id: ID!\n\n  \"\"\"String representing the object's type.\"\"\"\n  object: String!\n  status: String!\n}\n\nenum COUNTRY {\n  US\n}\n\ntype CountrySpec {\n  defaultCurrency: Currency\n  id: String\n  object: String\n  verificationFields: AccountVerificationFields!\n}\n\n\"\"\"Currency custom scalar type.\"\"\"\nscalar Currency\n\nenum CURRENCY {\n  AED\n  ALL\n  AMD\n  ANG\n  AOA\n  ARS\n  AUD\n  AWG\n  AZN\n  BAM\n  BBD\n  BDT\n  BGN\n  BHD\n  BMD\n  BND\n  BOB\n  BRL\n  BSD\n  BWP\n  BYN\n  BZD\n  CAD\n  CHF\n  CLP\n  CNY\n  COP\n  CRC\n  CUP\n  CVE\n  CZK\n  DJF\n  DKK\n  DOP\n  DZD\n  EGP\n  ETB\n  EUR\n  FJD\n  FKP\n  GBP\n  GEL\n  GHS\n  GIP\n  GMD\n  GNF\n  GTQ\n  GYD\n  HKD\n  HNL\n  HRK\n  HTG\n  HUF\n  IDR\n  ILS\n  INR\n  ISK\n  JMD\n  JOD\n  JPY\n  KES\n  KGS\n  KHR\n  KMF\n  KRW\n  KWD\n  KYD\n  KZT\n  LAK\n  LBP\n  LKR\n  LYD\n  MAD\n  MDL\n  MKD\n  MMK\n  MNT\n  MOP\n  MRU\n  MUR\n  MVR\n  MWK\n  MXN\n  MYR\n  MZN\n  NAD\n  NGN\n  NIO\n  NOK\n  NPR\n  NZD\n  OMR\n  PAB\n  PEN\n  PGK\n  PHP\n  PKR\n  PLN\n  PYG\n  QAR\n  RON\n  RSD\n  RUB\n  RWF\n  SAR\n  SBD\n  SCR\n  SEK\n  SGD\n  SHP\n  SLL\n  SOS\n  STN\n  SVC\n  SZL\n  THB\n  TND\n  TOP\n  TRY\n  TTD\n  TWD\n  TZS\n  UAH\n  UGX\n  USD\n  UYU\n  UZS\n  VEF\n  VND\n  VUV\n  WST\n  XAF\n  XCD\n  XOF\n  XPF\n  YER\n  ZAR\n  ZMW\n}\n\ntype Customer implements Metadata & Node {\n  bankAccounts: [BankAccount!]!\n  cards: [Card!]!\n  charges: [Charge!]!\n\n  \"\"\"Time at which the object was created.\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"The customer's email address.\"\"\"\n  email: String\n\n  \"\"\"Unique identifier for the object.\"\"\"\n  id: ID!\n\n  \"\"\"\n  Set of key-value pairs that you can attach to an object. This can be useful\n  for storing additional information about the object in a structured format.\n  \"\"\"\n  metadata: [MetadataType!]!\n\n  \"\"\"String representing the object's type.\"\"\"\n  object: String!\n  subscriptions: [_Subscription!]!\n}\n\n\"\"\"DateTime custom scalar type.\"\"\"\nscalar DateTime\n\ntype Dob {\n  day: Int\n  month: Int\n  year: Int\n}\n\ntype FeeDetails {\n  amount: Int\n  application: String\n  currency: String\n  description: String\n  id: String\n  type: String\n}\n\ntype Invoice {\n  amount_due: Int!\n  amount_paid: Int!\n  id: ID\n  lines: [InvoiceLineItem!]!\n}\n\ntype InvoiceLineItem implements Node {\n  amount: Int!\n  currency: String!\n\n  \"\"\"Unique identifier for the object.\"\"\"\n  id: ID!\n\n  \"\"\"String representing the object's type.\"\"\"\n  object: String!\n  quantity: Int!\n}\n\nenum LEGAL_ENTITY_TYPE {\n  company\n  individual\n}\n\ntype LegalEntity {\n  additional_owners: [AdditionalOwner!]!\n  address: Address\n  dob: Dob\n  first_name: String\n  last_name: String\n  maiden_name: String\n  personal_address: Address\n  personal_id_number_provided: Boolean\n  type: LEGAL_ENTITY_TYPE\n}\n\n\"\"\"Metadata interface type.\"\"\"\ninterface Metadata {\n  \"\"\"\n  Set of key-value pairs that you can attach to an object. This can be useful\n  for storing additional information about the object in a structured format.\n  \"\"\"\n  metadata: [MetadataType!]!\n}\n\ntype MetadataType {\n  key: String!\n  value: String!\n}\n\n\"\"\"A Node is a resource with a globally unique identifier\"\"\"\ninterface Node {\n  \"\"\"Unique identifier for the object.\"\"\"\n  id: ID!\n\n  \"\"\"String representing the object's type.\"\"\"\n  object: String!\n}\n\ntype Plan implements Node {\n  amount: Int!\n  currency: String!\n  formattedAmount: String!\n\n  \"\"\"Unique identifier for the object.\"\"\"\n  id: ID!\n\n  \"\"\"String representing the object's type.\"\"\"\n  object: String!\n  product: Product!\n}\n\ntype Product implements Node {\n  \"\"\"Unique identifier for the object.\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"String representing the object's type.\"\"\"\n  object: String!\n  plans: [Plan!]!\n  type: String!\n}\n\ntype Query {\n  account(id: ID!): Account\n  accounts: [Account!]!\n  charge(id: ID!): Charge\n  charges: [Charge!]!\n  countrySpecs(country: String!): CountrySpec\n  customer(id: ID!): Customer\n  customers(endingBefore: String, limit: Int, startingAfter: String): [Customer!]!\n  invoice(id: ID!): Invoice\n  invoices: [Invoice!]!\n  plan(id: ID!): Plan\n  plans: [Plan!]!\n  platform: Account!\n  product(id: ID!): Product\n  products: [Product!]!\n  subscription(id: ID!): _Subscription\n  subscriptions: [_Subscription!]!\n  upcomingInvoice(customerId: ID!): Invoice\n}\n\ntype VerificationFields {\n  additional: [String]\n  minimum: [String]\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 25,
      "containsCycle": true,
      "numDefinitions": 33
    }
  ],
  "metrics": {
    "created_at": "2018-09-17T11:18:43Z",
    "updated_at": "2019-07-19T10:08:31Z",
    "pushed_at": "2019-07-12T20:34:38Z",
    "issues": 0,
    "watchers": 3,
    "fork_count": 1,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 11
  }
}