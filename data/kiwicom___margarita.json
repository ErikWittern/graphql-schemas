{
  "repo_name": "margarita",
  "repo_full_name": "kiwicom/margarita",
  "repo_owner": "kiwicom",
  "repo_description": "Mobile and Web application implementing Kiwi.com Tequila API ",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "schema.graphql",
      "sha": "dd3a967846de3edc46864464befe19b389c95bca",
      "url": "https://api.github.com/repositories/159488635/contents/schema.graphql?ref=b9e3d3353052f266f951f00dbf63f3f2b50c8f16",
      "git_url": "https://api.github.com/repositories/159488635/git/blobs/dd3a967846de3edc46864464befe19b389c95bca",
      "html_url": "https://github.com/kiwicom/margarita/blob/b9e3d3353052f266f951f00dbf63f3f2b50c8f16/schema.graphql",
      "content": "schema {\n  query: RootQuery\n  mutation: RootMutation\n}\n\n\"\"\"Passenger's bag type and quantity\"\"\"\ntype Bag {\n  type: BagType\n  quantity: Int\n  dimensions: String\n}\n\n\"\"\"Bag types\"\"\"\nenum BagType {\n  CABIN_BAG\n  PERSONAL_ITEM\n  CHECKED_BAGGAGE\n}\n\nenum BookingDestinationImageDimensions {\n  _1200x628\n  _1280x720\n  _220x165\n  _275x250\n  _300x165\n  _375x165\n  _600x330\n  _600x600\n  _610x251\n}\n\ninterface BookingInterface {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  status: String\n  contactDetails: ContactDetails\n  passengers: [Passenger]\n  arrival: RouteStop\n  departure: RouteStop\n  destinationImageUrl(dimensions: BookingDestinationImageDimensions = _600x600): String\n  passengerCount: Int\n\n  \"\"\"OneWay, Multicity or Return\"\"\"\n  type: BookingType @deprecated(reason: \"Use __typename instead\")\n\n  \"\"\"Total count of bags by the type\"\"\"\n  bagInfo: [Bag]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype BookingInterfaceConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [BookingInterfaceEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BookingInterfaceEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: BookingInterface\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"Booking from A to B, B to C and so on, with possible stopovers\"\"\"\ntype BookingMulticity implements BookingInterface & FromToInterface & MulticityInterface {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  status: String\n  contactDetails: ContactDetails\n  passengers: [Passenger]\n  arrival: RouteStop\n  departure: RouteStop\n  destinationImageUrl(dimensions: BookingDestinationImageDimensions = _600x600): String\n  passengerCount: Int\n\n  \"\"\"OneWay, Multicity or Return\"\"\"\n  type: BookingType @deprecated(reason: \"Use __typename instead\")\n\n  \"\"\"Total count of bags by the type\"\"\"\n  bagInfo: [Bag]\n  sectors: [Sector]\n}\n\n\"\"\"Booking from A to B with no return, but possible stopovers\"\"\"\ntype BookingOneWay implements BookingInterface & FromToInterface & OneWayInterface {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  status: String\n  contactDetails: ContactDetails\n  passengers: [Passenger]\n  arrival: RouteStop\n  departure: RouteStop\n  destinationImageUrl(dimensions: BookingDestinationImageDimensions = _600x600): String\n  passengerCount: Int\n\n  \"\"\"OneWay, Multicity or Return\"\"\"\n  type: BookingType @deprecated(reason: \"Use __typename instead\")\n\n  \"\"\"Total count of bags by the type\"\"\"\n  bagInfo: [Bag]\n  sector: Sector\n}\n\n\"\"\"Booking from A to B with return, and possible stopovers\"\"\"\ntype BookingReturn implements BookingInterface & FromToInterface & ReturnInterface {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  status: String\n  contactDetails: ContactDetails\n  passengers: [Passenger]\n  arrival: RouteStop\n  departure: RouteStop\n  destinationImageUrl(dimensions: BookingDestinationImageDimensions = _600x600): String\n  passengerCount: Int\n\n  \"\"\"OneWay, Multicity or Return\"\"\"\n  type: BookingType @deprecated(reason: \"Use __typename instead\")\n\n  \"\"\"Total count of bags by the type\"\"\"\n  bagInfo: [Bag]\n  inbound: Sector\n  outbound: Sector\n}\n\nenum BookingType {\n  BOOKING_RETURN\n  BOOKING_MULTICITY\n  BOOKING_ONE_WAY\n}\n\ntype Carrier {\n  name: String\n  code: String\n}\n\ntype ConfirmPaymentOutput {\n  \"\"\"Indicates whether the payment was successful\"\"\"\n  isSuccess: Boolean\n\n  \"\"\"The average price of the booking per passenger\"\"\"\n  price: Float\n}\n\ninput ConfirmPaymentPayload {\n  \"\"\"Token received in Search Results\"\"\"\n  bookingToken: String\n\n  \"\"\"Token received from save_booking that identifies the booking process\"\"\"\n  transactionId: String!\n}\n\n\"\"\"Bookings contact email and phone\"\"\"\ntype ContactDetails {\n  email: String\n  phone: String\n}\n\n\"\"\"GPS coordinate\"\"\"\ntype Coordinate {\n  lat: Float\n  lng: Float\n}\n\n\"\"\"\nA date string, such as 2007-12-03, compliant with the `full-date` format\noutlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for\nrepresentation of dates and times using the Gregorian calendar.\n\"\"\"\nscalar Date\n\ninput DateRange {\n  \"\"\"Start of the date range\"\"\"\n  start: Date!\n\n  \"\"\"End of the date range\"\"\"\n  end: Date\n}\n\n\"\"\"\nA date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the\n`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO\n8601 standard for representation of dates and times using the Gregorian calendar.\n\"\"\"\nscalar DateTime\n\ntype DateType {\n  local: DateTime\n  utc: DateTime\n}\n\n\"\"\"\nThis data needs to be accessed on a Trip and on BookingOneWay/Return/Multicity,\nso that we can re-use one component to show from to with correct icon\n\"\"\"\ninterface FromToInterface {\n  departure: RouteStop\n  arrival: RouteStop\n}\n\ntype GeoIP {\n  \"\"\"ISO country code\"\"\"\n  isoCountryCode: String\n\n  \"\"\"Coordinates\"\"\"\n  coordinates: Coordinate\n}\n\ntype HoldBagOption {\n  quantity: Int\n  price: Price\n  dimensions: String\n  weight: String\n}\n\n\"\"\"Number of hold bags for a passenger for a given flight\"\"\"\ninput HoldBags {\n  \"\"\"Flight ID for the bags checked\"\"\"\n  flightID: String\n\n  \"\"\"Number of first hold bags for given passenger\"\"\"\n  first: Int\n\n  \"\"\"\n  Number of second hold bags for given passenger (first has to have a value)\n  \"\"\"\n  second: Int\n\n  \"\"\"\n  Number of third hold bags for given passenger (first and second have to have a value)\n  \"\"\"\n  third: Int\n}\n\ntype HttpError {\n  code: Int!\n  message: String!\n}\n\ninput ItinerariesOneWaySearchInput {\n  \"\"\"Order of the search\"\"\"\n  order: OrderSearchInput\n\n  \"\"\"Sorting of the search\"\"\"\n  sort: SortSearchInput\n\n  \"\"\"Limit number of results to get from the search (maximum 200)\"\"\"\n  limit: Int\n\n  \"\"\"How many passengers are travelling\"\"\"\n  passengers: PassengersInput\n\n  \"\"\"Itinerary for the One Way search\"\"\"\n  itinerary: ItineraryOneWayInput!\n}\n\ninput ItinerariesReturnSearchInput {\n  \"\"\"Order of the search\"\"\"\n  order: OrderSearchInput\n\n  \"\"\"Sorting of the search\"\"\"\n  sort: SortSearchInput\n\n  \"\"\"Limit number of results to get from the search (maximum 200)\"\"\"\n  limit: Int\n\n  \"\"\"How many passengers are travelling\"\"\"\n  passengers: PassengersInput\n\n  \"\"\"Itinerary for the return search\"\"\"\n  itinerary: ItineraryReturnInput!\n}\n\ninput ItineraryCheckInput {\n  \"\"\"Token received in search results\"\"\"\n  bookingToken: String!\n\n  \"\"\"Number of checked bags for the booking\"\"\"\n  bags: Int!\n\n  \"\"\"Number of children, adults and infants travelling\"\"\"\n  passengers: PassengersInput!\n}\n\ninterface ItineraryInterface {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  price: Price\n  arrival: RouteStop\n  departure: RouteStop\n  bookingToken: String\n\n  \"\"\"All segments successfully checked\"\"\"\n  isChecked: Boolean\n\n  \"\"\"Itinerary is valid (exists and is not sold-out or cancelled)\"\"\"\n  isValid: Boolean\n  holdBagOptions: [HoldBagOption]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ItineraryInterfaceConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ItineraryInterfaceEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ItineraryInterfaceEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: ItineraryInterface\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"Itinerary from A to B with no return, but with possible stopovers\"\"\"\ntype ItineraryOneWay implements ItineraryInterface & FromToInterface & OneWayInterface {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  price: Price\n  arrival: RouteStop\n  departure: RouteStop\n  bookingToken: String\n\n  \"\"\"All segments successfully checked\"\"\"\n  isChecked: Boolean\n\n  \"\"\"Itinerary is valid (exists and is not sold-out or cancelled)\"\"\"\n  isValid: Boolean\n  holdBagOptions: [HoldBagOption]\n  sector: Sector\n}\n\ninput ItineraryOneWayInput {\n  \"\"\"Origin location of the travel\"\"\"\n  origin: LocationItineraryInput!\n\n  \"\"\"Destination location of the travel\"\"\"\n  destination: LocationItineraryInput\n\n  \"\"\"Date Range of departure\"\"\"\n  outboundDate: DateRange!\n}\n\n\"\"\"Itinerary from A to B with return trip, and with possible stopovers\"\"\"\ntype ItineraryReturn implements ItineraryInterface & FromToInterface & ReturnInterface {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  price: Price\n  arrival: RouteStop\n  departure: RouteStop\n  bookingToken: String\n\n  \"\"\"All segments successfully checked\"\"\"\n  isChecked: Boolean\n\n  \"\"\"Itinerary is valid (exists and is not sold-out or cancelled)\"\"\"\n  isValid: Boolean\n  holdBagOptions: [HoldBagOption]\n  outbound: Sector\n  inbound: Sector\n}\n\ninput ItineraryReturnInput {\n  \"\"\"Origin location of the travel\"\"\"\n  origin: LocationItineraryInput!\n\n  \"\"\"Destination location of the travel\"\"\"\n  destination: LocationItineraryInput\n\n  \"\"\"Date Range of departure\"\"\"\n  outboundDate: DateRange!\n\n  \"\"\"Date Range of flight back\"\"\"\n  inboundDate: DateRange!\n}\n\ntype Location {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  name: String\n  slug: String\n  locationId: String\n  timezone: String\n  country: LocationArea\n  city: LocationArea\n  coordinates: Coordinate\n  type: LocationType\n  countryFlagURL: String\n}\n\ntype LocationArea {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  locationId: String\n  name: String\n  slug: String\n  code: String\n  flagURL: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LocationConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LocationEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LocationEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Location\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput LocationItineraryInput {\n  \"\"\"Locations IDs for travel\"\"\"\n  ids: [String]\n}\n\ninput LocationsByTermInput {\n  term: String!\n\n  \"\"\"Desired location type output\"\"\"\n  types: [LocationType]\n}\n\nunion LocationsResult = LocationConnection | HttpError\n\nenum LocationType {\n  STATION\n  AIRPORT\n  BUS_STATION\n  CITY\n  SUBDIVISION\n  COUNTRY\n  REGION\n  CONTINENT\n  AUTONOMOUS_TERRITORY\n  SPECIAL\n}\n\n\"\"\"Used for multicity type Booking and Itinerary\"\"\"\ninterface MulticityInterface {\n  departure: RouteStop\n  arrival: RouteStop\n  sectors: [Sector]\n}\n\n\"\"\"Used for one-way type Booking and Itinerary\"\"\"\ninterface OneWayInterface {\n  departure: RouteStop\n  arrival: RouteStop\n  sector: Sector\n}\n\nenum OrderSearchInput {\n  ASC\n  DESC\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\n\"\"\"Passenger details\"\"\"\ntype Passenger {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  bags: [Bag]\n  birthday: String\n  email: String\n  phone: String\n  title: PassengerTitle\n  category: String\n  firstname: String\n  insuranceType: String\n  lastname: String\n  nationality: String\n  visaRequired: Boolean\n}\n\n\"\"\"Passenger information input\"\"\"\ninput PassengerInput {\n  birthday: String!\n  cardNumber: String!\n  email: String!\n\n  \"\"\"Number of baggage for passenger specified in each flight of the trip\"\"\"\n  holdBags: [HoldBags]!\n\n  \"\"\"Expiration date (UTC) of travel document\"\"\"\n  expiration: String!\n  phone: String!\n  title: PassengerTitle!\n  category: String!\n  firstname: String!\n  insuranceType: String\n  lastname: String!\n  nationality: String!\n}\n\ninput PassengersInput {\n  adults: Int\n  children: Int\n  infants: Int\n}\n\nenum PassengerTitle {\n  Mr\n  Ms\n}\n\ntype Price {\n  amount: Float\n  currency: String\n}\n\n\"\"\"Used for return type Booking and Itinerary\"\"\"\ninterface ReturnInterface {\n  departure: RouteStop\n  arrival: RouteStop\n  outbound: Sector\n  inbound: Sector\n}\n\ntype RootMutation {\n  \"\"\"\n  Saves a given booking. Initiates the reservation process on the backend. (POST Request)\n  \"\"\"\n  saveBooking(payload: SaveBookingPayload): SaveBookingOutput\n\n  \"\"\"Confirms the payment for a given booking. (POST Request)\"\"\"\n  confirmPayment(payload: ConfirmPaymentPayload): ConfirmPaymentOutput\n}\n\ntype RootQuery {\n  \"\"\"Find a booking by its id\"\"\"\n  bookingDetail(id: ID!): BookingInterface\n\n  \"\"\"Retrieve all your bookings.\"\"\"\n  customerBookings(after: String, first: Int, before: String, last: Int): BookingInterfaceConnection\n\n  \"\"\"Query for suggested locations based on incomplete names\"\"\"\n  locationsByTerm(input: LocationsByTermInput!, after: String, first: Int, before: String, last: Int): LocationsResult\n\n  \"\"\"Query to fetch all one way itineraries(flights, busses, trains)\"\"\"\n  searchOneWayItineraries(input: ItinerariesOneWaySearchInput!, after: String, first: Int, before: String, last: Int): ItineraryInterfaceConnection\n\n  \"\"\"Query to fetch all return itineraries(flights, busses, trains)\"\"\"\n  searchReturnItineraries(input: ItinerariesReturnSearchInput!, after: String, first: Int, before: String, last: Int): ItineraryInterfaceConnection\n\n  \"\"\"Check if itinerary is valid and bookable\"\"\"\n  checkItinerary(input: ItineraryCheckInput!): ItineraryInterface\n\n  \"\"\"\n  Geography info by an IP address, if no input provided, it will use request client IP\n  \"\"\"\n  geoIP(ip: String): GeoIP\n}\n\n\"\"\"Departure or arrival for a segment or sector\"\"\"\ntype RouteStop {\n  \"\"\"Contains utc and local time for arrival/departure of the stop\"\"\"\n  time: DateType\n\n  \"\"\"\n  This could be bus stop, trainstation, airport, anywhere the Sector or segment comes to a stop\n  \"\"\"\n  stop: Location\n}\n\ntype SaveBookingOutput {\n  \"\"\"\n  The unique ID of the transaction which then can be used to identify the booking in subsequent calls e.g confirm payment\n  \"\"\"\n  transactionId: String\n  itinerary: ItineraryInterface\n  passengers: [Passenger]\n}\n\ninput SaveBookingPayload {\n  \"\"\"Token received in Search Results\"\"\"\n  bookingToken: String!\n\n  \"\"\"Number of checked bags for the booking\"\"\"\n  bags: Int!\n\n  \"\"\"\n  Specifies the payment gateway to use for the booking. If using Zooz, set to payu\n  \"\"\"\n  paymentGateway: String\n\n  \"\"\"\n  Information about the passengers traveling such as name, nationality, etc\n  \"\"\"\n  passengers: [PassengerInput]!\n}\n\ntype Sector implements FromToInterface {\n  duration: Int\n  segments: [Segment]\n  stopoverDuration: Int\n  departure: RouteStop\n  arrival: RouteStop\n  type: BookingType\n}\n\ntype Segment {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  carrier: Carrier\n  duration: Int\n  vehicle: Vehicle\n  departure: RouteStop\n  arrival: RouteStop\n}\n\nenum SortSearchInput {\n  PRICE\n  DURATION\n  QUALITY\n  DATE\n  POPULARITY\n}\n\ntype Vehicle {\n  type: String\n  uniqueNo: String\n}\n",
      "containsQueryType": true,
      "typesUndefined": [],
      "directivesUndefined": [
        "deprecated"
      ],
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 32,
      "containsCycle": false,
      "polynomialLevel": 3,
      "numDefinitions": 62
    }
  ],
  "metrics": {
    "created_at": "2018-11-28T11:04:52Z",
    "updated_at": "2019-07-19T11:20:38Z",
    "pushed_at": "2019-07-11T06:33:23Z",
    "issues": 250,
    "watchers": 35,
    "fork_count": 7,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 666,
    "pull_requests_open": 0,
    "pull_requests_closed": 58,
    "pull_requests_merged": 608,
    "releases": 0,
    "stargazers": 122
  }
}