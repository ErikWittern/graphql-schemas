{
  "repo_name": "sal-site",
  "repo_full_name": "see-art-live/sal-site",
  "repo_owner": "SEE-ART-LIVE",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "site/backend/plugins/graphql/config/generated/schema.graphql",
      "sha": "5226d09f78173e8ae90729afaaa620999bc12b0e",
      "url": "https://api.github.com/repositories/175346593/contents/site/backend/plugins/graphql/config/generated/schema.graphql?ref=d679ff19759441a21926ac3f2ac794dac610ffd2",
      "git_url": "https://api.github.com/repositories/175346593/git/blobs/5226d09f78173e8ae90729afaaa620999bc12b0e",
      "html_url": "https://github.com/SEE-ART-LIVE/sal-site/blob/d679ff19759441a21926ac3f2ac794dac610ffd2/site/backend/plugins/graphql/config/generated/schema.graphql",
      "content": "input createEventInput {\n  data: EventInput\n}\n\ntype createEventPayload {\n  event: Event\n}\n\ninput createLocationInput {\n  data: LocationInput\n}\n\ntype createLocationPayload {\n  location: Location\n}\n\ninput createRoleInput {\n  data: RoleInput\n}\n\ntype createRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput createUserInput {\n  data: UserInput\n}\n\ntype createUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"\nThe `DateTime` scalar represents a date and time following the ISO 8601 standard\n\"\"\"\nscalar DateTime\n\ninput deleteEventInput {\n  where: InputID\n}\n\ntype deleteEventPayload {\n  event: Event\n}\n\ninput deleteLocationInput {\n  where: InputID\n}\n\ntype deleteLocationPayload {\n  location: Location\n}\n\ninput deleteRoleInput {\n  where: InputID\n}\n\ntype deleteRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput deleteUserInput {\n  where: InputID\n}\n\ntype deleteUserPayload {\n  user: UsersPermissionsUser\n}\n\ninput editEventInput {\n  Title: String\n  Image: ID\n  Date: DateTime\n  Description: String\n  location: ID\n  user: ID\n}\n\ninput editFileInput {\n  name: String\n  hash: String\n  sha256: String\n  ext: String\n  mime: String\n  size: String\n  url: String\n  provider: String\n  public_id: String\n  related: [ID]\n}\n\ninput editLocationInput {\n  Name: String\n  Description: String\n  Address: String\n  City: String\n  State: ENUM_LOCATION_STATE\n  Zipcode: Int\n  Image: ID\n  Country: ENUM_LOCATION_COUNTRY\n  event: ID\n  user: ID\n}\n\ninput editRoleInput {\n  name: String\n  description: String\n  type: String\n  permissions: [ID]\n  users: [ID]\n}\n\ninput editUserInput {\n  username: String\n  email: String\n  provider: String\n  password: String\n  resetPasswordToken: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: ID\n  location: [ID]\n  event: ID\n}\n\nenum ENUM_LOCATION_COUNTRY {\n  AF\n  AL\n  DZ\n  AS\n  AD\n  AO\n  AIG\n  AG\n  AR\n  AM\n  AW\n  AU\n  AI\n  AZ\n  BH\n  BD\n  BB\n  BY\n  BE\n  BZ\n  BJ\n  BM\n  BT\n  BO\n  BA\n  BW\n  BR\n  IO\n  VG\n  BN\n  BG\n  BF\n  MM\n  BI\n  KH\n  CM\n  CA\n  CV\n  KY\n  CF\n  IDCHAD\n  CL\n  CN\n  CO\n  KM\n  CK\n  CR\n  CI\n  HR\n  CU\n  CY\n  CZ\n  CD\n  DK\n  DJ\n  DM\n  DO\n  EC\n  EG\n  SV\n  GQ\n  ER\n  EE\n  ET\n  FK\n  FO\n  FM\n  FJ\n  FI\n  FR\n  GF\n  PF\n  GA\n  GE\n  DE\n  GH\n  GI\n  GR\n  GL\n  GD\n  GP\n  GU\n  GT\n  GN\n  GW\n  GY\n  HT\n  HN\n  HK\n  HU\n  IS\n  IN\n  ID\n  IR\n  IQ\n  IE\n  IL\n  IT\n  JM\n  JP\n  JO\n  KZ\n  KE\n  KI\n  XK\n  KW\n  KG\n  LA\n  LV\n  LB\n  LS\n  LR\n  LY\n  LI\n  LT\n  LU\n  MO\n  MK\n  MG\n  MW\n  MY\n  MV\n  ML\n  MT\n  MH\n  MQ\n  MR\n  MU\n  YT\n  MX\n  MD\n  MC\n  MN\n  ME\n  MS\n  MA\n  MZ\n  NA\n  NR\n  NP\n  NL\n  AN\n  NC\n  NZ\n  NI\n  NE\n  NG\n  NU\n  NF\n  KP\n  MP\n  NO\n  OM\n  PK\n  PW\n  PS\n  PA\n  PG\n  PY\n  PE\n  PH\n  PL\n  PT\n  PR\n  QA\n  CG\n  RE\n  RO\n  RU\n  RW\n  BL\n  SH\n  KN\n  MF\n  PM\n  VC\n  WS\n  SM\n  ST\n  SA\n  SN\n  RS\n  SC\n  SL\n  SG\n  SK\n  SI\n  SB\n  SO\n  ZA\n  KR\n  ES\n  LK\n  LC\n  SD\n  SR\n  SZ\n  SE\n  CH\n  SY\n  TW\n  TJ\n  TZ\n  TH\n  BS\n  GM\n  TL\n  TG\n  TK\n  TO\n  TT\n  TN\n  TR\n  TM\n  TC\n  TV\n  UG\n  UA\n  AE\n  GB\n  US\n  UY\n  VI\n  UZ\n  VU\n  VA\n  VE\n  VN\n  WF\n  YE\n  ZM\n  ZW\n}\n\nenum ENUM_LOCATION_STATE {\n  AL\n  AK\n  AS\n  AZ\n  AR\n  CA\n  CO\n  CT\n  DE\n  DC\n  FM\n  FL\n  GA\n  GU\n  HI\n  ID\n  IL\n  IN\n  IA\n  KS\n  KY\n  LA\n  ME\n  MH\n  MD\n  MA\n  MI\n  MN\n  MS\n  MO\n  MT\n  NE\n  NV\n  NH\n  NJ\n  NM\n  NY\n  NC\n  ND\n  MP\n  OH\n  OK\n  OR\n  PW\n  PA\n  PR\n  RI\n  SC\n  SD\n  TN\n  TX\n  UT\n  VT\n  VI\n  VA\n  WA\n  WV\n  WI\n  WY\n}\n\n\"\"\"See Art Live  Event Content Type\"\"\"\ntype Event {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  Title: String\n  Image: UploadFile\n  Date: DateTime\n  Description: String\n  location: Location\n  user: UsersPermissionsUser\n}\n\ntype EventAggregator {\n  count: Int\n}\n\ntype EventConnection {\n  values: [Event]\n  groupBy: EventGroupBy\n  aggregate: EventAggregator\n}\n\ntype EventConnection_id {\n  key: ID\n  connection: EventConnection\n}\n\ntype EventConnectionCreatedAt {\n  key: DateTime\n  connection: EventConnection\n}\n\ntype EventConnectionDate {\n  key: DateTime\n  connection: EventConnection\n}\n\ntype EventConnectionDescription {\n  key: String\n  connection: EventConnection\n}\n\ntype EventConnectionImage {\n  key: ID\n  connection: EventConnection\n}\n\ntype EventConnectionLocation {\n  key: ID\n  connection: EventConnection\n}\n\ntype EventConnectionTitle {\n  key: String\n  connection: EventConnection\n}\n\ntype EventConnectionUpdatedAt {\n  key: DateTime\n  connection: EventConnection\n}\n\ntype EventConnectionUser {\n  key: ID\n  connection: EventConnection\n}\n\ntype EventGroupBy {\n  _id: [EventConnection_id]\n  createdAt: [EventConnectionCreatedAt]\n  updatedAt: [EventConnectionUpdatedAt]\n  Title: [EventConnectionTitle]\n  Image: [EventConnectionImage]\n  Date: [EventConnectionDate]\n  Description: [EventConnectionDescription]\n  location: [EventConnectionLocation]\n  user: [EventConnectionUser]\n}\n\ninput EventInput {\n  Title: String\n  Image: ID\n  Date: DateTime\n  Description: String\n  location: ID\n  user: ID\n}\n\ninput FileInput {\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related: [ID]\n}\n\ninput InputID {\n  id: ID!\n}\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\"\"\"\nscalar JSON\n\n\"\"\"Location of Event Space\"\"\"\ntype Location {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  Name: String\n  Description: String\n  Address: String\n  City: String\n  State: ENUM_LOCATION_STATE\n  Zipcode: Int\n  Image: UploadFile\n  Country: ENUM_LOCATION_COUNTRY\n  event: Event\n  user: UsersPermissionsUser\n}\n\ntype LocationAggregator {\n  count: Int\n  sum: LocationAggregatorSum\n  avg: LocationAggregatorAvg\n  min: LocationAggregatorMin\n  max: LocationAggregatorMax\n}\n\ntype LocationAggregatorAvg {\n  Zipcode: Float\n}\n\ntype LocationAggregatorMax {\n  Zipcode: Float\n}\n\ntype LocationAggregatorMin {\n  Zipcode: Float\n}\n\ntype LocationAggregatorSum {\n  Zipcode: Float\n}\n\ntype LocationConnection {\n  values: [Location]\n  groupBy: LocationGroupBy\n  aggregate: LocationAggregator\n}\n\ntype LocationConnection_id {\n  key: ID\n  connection: LocationConnection\n}\n\ntype LocationConnectionAddress {\n  key: String\n  connection: LocationConnection\n}\n\ntype LocationConnectionCity {\n  key: String\n  connection: LocationConnection\n}\n\ntype LocationConnectionCountry {\n  key: String\n  connection: LocationConnection\n}\n\ntype LocationConnectionCreatedAt {\n  key: DateTime\n  connection: LocationConnection\n}\n\ntype LocationConnectionDescription {\n  key: String\n  connection: LocationConnection\n}\n\ntype LocationConnectionEvent {\n  key: ID\n  connection: LocationConnection\n}\n\ntype LocationConnectionImage {\n  key: ID\n  connection: LocationConnection\n}\n\ntype LocationConnectionName {\n  key: String\n  connection: LocationConnection\n}\n\ntype LocationConnectionState {\n  key: String\n  connection: LocationConnection\n}\n\ntype LocationConnectionUpdatedAt {\n  key: DateTime\n  connection: LocationConnection\n}\n\ntype LocationConnectionUser {\n  key: ID\n  connection: LocationConnection\n}\n\ntype LocationConnectionZipcode {\n  key: Int\n  connection: LocationConnection\n}\n\ntype LocationGroupBy {\n  _id: [LocationConnection_id]\n  createdAt: [LocationConnectionCreatedAt]\n  updatedAt: [LocationConnectionUpdatedAt]\n  Name: [LocationConnectionName]\n  Description: [LocationConnectionDescription]\n  Address: [LocationConnectionAddress]\n  City: [LocationConnectionCity]\n  State: [LocationConnectionState]\n  Zipcode: [LocationConnectionZipcode]\n  Image: [LocationConnectionImage]\n  Country: [LocationConnectionCountry]\n  event: [LocationConnectionEvent]\n  user: [LocationConnectionUser]\n}\n\ninput LocationInput {\n  Name: String\n  Description: String\n  Address: String\n  City: String\n  State: ENUM_LOCATION_STATE\n  Zipcode: Int\n  Image: ID\n  Country: ENUM_LOCATION_COUNTRY\n  event: ID\n  user: ID\n}\n\nunion Morph = UsersPermissionsMe | UsersPermissionsMeRole | Event | createEventPayload | updateEventPayload | deleteEventPayload | EventConnection | EventAggregator | EventGroupBy | EventConnection_id | EventConnectionCreatedAt | EventConnectionUpdatedAt | EventConnectionTitle | EventConnectionImage | EventConnectionDate | EventConnectionDescription | EventConnectionLocation | EventConnectionUser | Location | createLocationPayload | updateLocationPayload | deleteLocationPayload | LocationConnection | LocationAggregator | LocationAggregatorSum | LocationAggregatorAvg | LocationAggregatorMin | LocationAggregatorMax | LocationGroupBy | LocationConnection_id | LocationConnectionCreatedAt | LocationConnectionUpdatedAt | LocationConnectionName | LocationConnectionDescription | LocationConnectionAddress | LocationConnectionCity | LocationConnectionState | LocationConnectionZipcode | LocationConnectionImage | LocationConnectionCountry | LocationConnectionEvent | LocationConnectionUser | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileGroupBy | UploadFileConnection_id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionHash | UploadFileConnectionSha256 | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionProvider | UploadFileConnectionPublic_id | UsersPermissionsPermission | UsersPermissionsRole | createRolePayload | updateRolePayload | deleteRolePayload | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnection_id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | UsersPermissionsUser | createUserPayload | updateUserPayload | deleteUserPayload | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnection_id | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole | UsersPermissionsUserConnectionEvent\n\ntype Mutation {\n  createEvent(input: createEventInput): createEventPayload\n  updateEvent(input: updateEventInput): updateEventPayload\n  deleteEvent(input: deleteEventInput): deleteEventPayload\n  createLocation(input: createLocationInput): createLocationPayload\n  updateLocation(input: updateLocationInput): updateLocationPayload\n  deleteLocation(input: deleteLocationInput): deleteLocationPayload\n\n  \"\"\"Create a new role\"\"\"\n  createRole(input: createRoleInput): createRolePayload\n\n  \"\"\"Update an existing role\"\"\"\n  updateRole(input: updateRoleInput): updateRolePayload\n\n  \"\"\"Delete an existing role\"\"\"\n  deleteRole(input: deleteRoleInput): deleteRolePayload\n\n  \"\"\"Create a new user\"\"\"\n  createUser(input: createUserInput): createUserPayload\n\n  \"\"\"Update an existing user\"\"\"\n  updateUser(input: updateUserInput): updateUserPayload\n\n  \"\"\"Delete an existing user\"\"\"\n  deleteUser(input: deleteUserInput): deleteUserPayload\n  upload(refId: ID, ref: String, source: String, file: Upload!): UploadFile!\n}\n\ntype Query {\n  event(id: ID!): Event\n  events(sort: String, limit: Int, start: Int, where: JSON): [Event]\n  eventsConnection(sort: String, limit: Int, start: Int, where: JSON): EventConnection\n  location(id: ID!): Location\n  locations(sort: String, limit: Int, start: Int, where: JSON): [Location]\n  locationsConnection(sort: String, limit: Int, start: Int, where: JSON): LocationConnection\n  files(sort: String, limit: Int, start: Int, where: JSON): [UploadFile]\n  filesConnection(sort: String, limit: Int, start: Int, where: JSON): UploadFileConnection\n  role(id: ID!): UsersPermissionsRole\n\n  \"\"\"\n  Retrieve all the existing roles. You can't apply filters on this query.\n  \"\"\"\n  roles(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsRole]\n  rolesConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsRoleConnection\n  user(id: ID!): UsersPermissionsUser\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n  usersConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsUserConnection\n  me: UsersPermissionsMe\n}\n\ninput RoleInput {\n  name: String!\n  description: String\n  type: String\n  permissions: [ID]\n  users: [ID]\n}\n\ninput updateEventInput {\n  where: InputID\n  data: editEventInput\n}\n\ntype updateEventPayload {\n  event: Event\n}\n\ninput updateLocationInput {\n  where: InputID\n  data: editLocationInput\n}\n\ntype updateLocationPayload {\n  location: Location\n}\n\ninput updateRoleInput {\n  where: InputID\n  data: editRoleInput\n}\n\ntype updateRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput updateUserInput {\n  where: InputID\n  data: editUserInput\n}\n\ntype updateUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload\n\ntype UploadFile {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related(sort: String, limit: Int, start: Int, where: JSON): [Morph]\n}\n\ntype UploadFileAggregator {\n  count: Int\n}\n\ntype UploadFileConnection {\n  values: [UploadFile]\n  groupBy: UploadFileGroupBy\n  aggregate: UploadFileAggregator\n}\n\ntype UploadFileConnection_id {\n  key: ID\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionCreatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionExt {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionHash {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionMime {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionName {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionProvider {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionPublic_id {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSha256 {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSize {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUpdatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUrl {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileGroupBy {\n  _id: [UploadFileConnection_id]\n  createdAt: [UploadFileConnectionCreatedAt]\n  updatedAt: [UploadFileConnectionUpdatedAt]\n  name: [UploadFileConnectionName]\n  hash: [UploadFileConnectionHash]\n  sha256: [UploadFileConnectionSha256]\n  ext: [UploadFileConnectionExt]\n  mime: [UploadFileConnectionMime]\n  size: [UploadFileConnectionSize]\n  url: [UploadFileConnectionUrl]\n  provider: [UploadFileConnectionProvider]\n  public_id: [UploadFileConnectionPublic_id]\n}\n\ninput UserInput {\n  username: String!\n  email: String!\n  provider: String\n  password: String\n  resetPasswordToken: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: ID\n  location: [ID]\n  event: ID\n}\n\ntype UsersPermissionsMe {\n  _id: ID!\n  username: String!\n  email: String!\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsMeRole\n}\n\ntype UsersPermissionsMeRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n}\n\ntype UsersPermissionsPermission {\n  _id: ID!\n  type: String!\n  controller: String!\n  action: String!\n  enabled: Boolean!\n  policy: String\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n  permissions(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsPermission]\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n}\n\ntype UsersPermissionsRoleAggregator {\n  count: Int\n}\n\ntype UsersPermissionsRoleConnection {\n  values: [UsersPermissionsRole]\n  groupBy: UsersPermissionsRoleGroupBy\n  aggregate: UsersPermissionsRoleAggregator\n}\n\ntype UsersPermissionsRoleConnection_id {\n  key: ID\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionDescription {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionName {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionType {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleGroupBy {\n  _id: [UsersPermissionsRoleConnection_id]\n  name: [UsersPermissionsRoleConnectionName]\n  description: [UsersPermissionsRoleConnectionDescription]\n  type: [UsersPermissionsRoleConnectionType]\n}\n\ntype UsersPermissionsUser {\n  _id: ID!\n  username: String!\n  email: String!\n  provider: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsRole\n  event: Event\n  location(sort: String, limit: Int, start: Int, where: JSON): [Location]\n}\n\ntype UsersPermissionsUserAggregator {\n  count: Int\n}\n\ntype UsersPermissionsUserConnection {\n  values: [UsersPermissionsUser]\n  groupBy: UsersPermissionsUserGroupBy\n  aggregate: UsersPermissionsUserAggregator\n}\n\ntype UsersPermissionsUserConnection_id {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionBlocked {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionConfirmed {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionEmail {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionEvent {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionProvider {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionRole {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionUsername {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserGroupBy {\n  _id: [UsersPermissionsUserConnection_id]\n  username: [UsersPermissionsUserConnectionUsername]\n  email: [UsersPermissionsUserConnectionEmail]\n  provider: [UsersPermissionsUserConnectionProvider]\n  confirmed: [UsersPermissionsUserConnectionConfirmed]\n  blocked: [UsersPermissionsUserConnectionBlocked]\n  role: [UsersPermissionsUserConnectionRole]\n  event: [UsersPermissionsUserConnectionEvent]\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 87,
      "containsCycle": true,
      "numDefinitions": 116
    }
  ],
  "metrics": {
    "created_at": "2019-03-13T04:31:44Z",
    "updated_at": "2019-06-09T00:02:08Z",
    "pushed_at": "2019-06-09T00:02:03Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}