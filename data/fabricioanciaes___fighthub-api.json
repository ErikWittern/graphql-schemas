{
  "repo_name": "fighthub-api",
  "repo_full_name": "fabricioanciaes/fighthub-api",
  "repo_owner": "fabricioanciaes",
  "repo_description": "Inst√¢ncia do strapi para api e admin do fighthub",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "plugins/graphql/config/generated/schema.graphql",
      "sha": "2c716fa329eb833dd6b99d811b070a370d174f9d",
      "url": "https://api.github.com/repositories/164109559/contents/plugins/graphql/config/generated/schema.graphql?ref=0a8d3109c029fa85654ac21ef0caa6964c2cb732",
      "git_url": "https://api.github.com/repositories/164109559/git/blobs/2c716fa329eb833dd6b99d811b070a370d174f9d",
      "html_url": "https://github.com/fabricioanciaes/fighthub-api/blob/0a8d3109c029fa85654ac21ef0caa6964c2cb732/plugins/graphql/config/generated/schema.graphql",
      "content": "input createEventInput {\n  data: EventInput\n}\n\ntype createEventPayload {\n  event: Event\n}\n\ninput createPagesInput {\n  data: PagesInput\n}\n\ntype createPagesPayload {\n  page: Pages\n}\n\ninput createRoleInput {\n  data: RoleInput\n}\n\ntype createRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput createUserInput {\n  data: UserInput\n}\n\ntype createUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"\nThe `DateTime` scalar represents a date and time following the ISO 8601 standard\n\"\"\"\nscalar DateTime\n\ninput deleteEventInput {\n  where: InputID\n}\n\ntype deleteEventPayload {\n  event: Event\n}\n\ninput deletePagesInput {\n  where: InputID\n}\n\ntype deletePagesPayload {\n  page: Pages\n}\n\ninput deleteRoleInput {\n  where: InputID\n}\n\ntype deleteRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput deleteUserInput {\n  where: InputID\n}\n\ntype deleteUserPayload {\n  user: UsersPermissionsUser\n}\n\ninput editEventInput {\n  name: String\n  dateStart: DateTime\n  dateEnd: DateTime\n  desc: String\n  state: ENUM_EVENT_STATE\n  inscricao: String\n  links: String\n  stream: String\n  address: String\n  imgUrl: String\n  games: String\n  tipoEvento: ENUM_EVENT_TIPOEVENTO\n}\n\ninput editFileInput {\n  name: String\n  hash: String\n  sha256: String\n  ext: String\n  mime: String\n  size: String\n  url: String\n  provider: String\n  public_id: String\n  related: [ID]\n}\n\ninput editPagesInput {\n  body: String\n  title: String\n}\n\ninput editRoleInput {\n  name: String\n  description: String\n  type: String\n  permissions: [ID]\n  users: [ID]\n}\n\ninput editUserInput {\n  username: String\n  email: String\n  provider: String\n  password: String\n  resetPasswordToken: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: ID\n}\n\nenum ENUM_EVENT_STATE {\n  Online\n  AC\n  AL\n  AP\n  AM\n  BA\n  CE\n  DF\n  ES\n  GO\n  MA\n  MT\n  MS\n  MG\n  PA\n  PB\n  PR\n  PE\n  PI\n  RJ\n  RN\n  RS\n  RO\n  RR\n  SC\n  SP\n  SE\n  TO\n}\n\nenum ENUM_EVENT_TIPOEVENTO {\n  Online\n  Offline\n  Major\n}\n\n\"\"\"Eventos do fighthub. Referente a um torneio ou jogatina.\"\"\"\ntype Event {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  dateStart: DateTime!\n  dateEnd: DateTime!\n  desc: String!\n  state: ENUM_EVENT_STATE!\n  inscricao: String\n  links: String\n  stream: String\n  address: String!\n  imgUrl: String\n  games: String!\n  tipoEvento: ENUM_EVENT_TIPOEVENTO!\n}\n\ntype EventAggregator {\n  count: Int\n}\n\ntype EventConnection {\n  values: [Event]\n  groupBy: EventGroupBy\n  aggregate: EventAggregator\n}\n\ntype EventConnection_id {\n  key: ID\n  connection: EventConnection\n}\n\ntype EventConnectionAddress {\n  key: String\n  connection: EventConnection\n}\n\ntype EventConnectionCreatedAt {\n  key: DateTime\n  connection: EventConnection\n}\n\ntype EventConnectionDateEnd {\n  key: DateTime\n  connection: EventConnection\n}\n\ntype EventConnectionDateStart {\n  key: DateTime\n  connection: EventConnection\n}\n\ntype EventConnectionDesc {\n  key: String\n  connection: EventConnection\n}\n\ntype EventConnectionGames {\n  key: String\n  connection: EventConnection\n}\n\ntype EventConnectionImgUrl {\n  key: String\n  connection: EventConnection\n}\n\ntype EventConnectionInscricao {\n  key: String\n  connection: EventConnection\n}\n\ntype EventConnectionLinks {\n  key: String\n  connection: EventConnection\n}\n\ntype EventConnectionName {\n  key: String\n  connection: EventConnection\n}\n\ntype EventConnectionState {\n  key: String\n  connection: EventConnection\n}\n\ntype EventConnectionStream {\n  key: String\n  connection: EventConnection\n}\n\ntype EventConnectionTipoEvento {\n  key: String\n  connection: EventConnection\n}\n\ntype EventConnectionUpdatedAt {\n  key: DateTime\n  connection: EventConnection\n}\n\ntype EventGroupBy {\n  _id: [EventConnection_id]\n  createdAt: [EventConnectionCreatedAt]\n  updatedAt: [EventConnectionUpdatedAt]\n  name: [EventConnectionName]\n  dateStart: [EventConnectionDateStart]\n  dateEnd: [EventConnectionDateEnd]\n  desc: [EventConnectionDesc]\n  state: [EventConnectionState]\n  inscricao: [EventConnectionInscricao]\n  links: [EventConnectionLinks]\n  stream: [EventConnectionStream]\n  address: [EventConnectionAddress]\n  imgUrl: [EventConnectionImgUrl]\n  games: [EventConnectionGames]\n  tipoEvento: [EventConnectionTipoEvento]\n}\n\ninput EventInput {\n  name: String!\n  dateStart: DateTime!\n  dateEnd: DateTime!\n  desc: String!\n  state: ENUM_EVENT_STATE!\n  inscricao: String\n  links: String\n  stream: String\n  address: String!\n  imgUrl: String\n  games: String!\n  tipoEvento: ENUM_EVENT_TIPOEVENTO!\n}\n\ninput FileInput {\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related: [ID]\n}\n\ninput InputID {\n  id: ID!\n}\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\"\"\"\nscalar JSON\n\nunion Morph = UsersPermissionsMe | UsersPermissionsMeRole | Event | createEventPayload | updateEventPayload | deleteEventPayload | EventConnection | EventAggregator | EventGroupBy | EventConnection_id | EventConnectionCreatedAt | EventConnectionUpdatedAt | EventConnectionName | EventConnectionDateStart | EventConnectionDateEnd | EventConnectionDesc | EventConnectionState | EventConnectionInscricao | EventConnectionLinks | EventConnectionStream | EventConnectionAddress | EventConnectionImgUrl | EventConnectionGames | EventConnectionTipoEvento | Pages | createPagesPayload | updatePagesPayload | deletePagesPayload | PagesConnection | PagesAggregator | PagesGroupBy | PagesConnection_id | PagesConnectionCreatedAt | PagesConnectionUpdatedAt | PagesConnectionBody | PagesConnectionTitle | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileGroupBy | UploadFileConnection_id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionHash | UploadFileConnectionSha256 | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionProvider | UploadFileConnectionPublic_id | UsersPermissionsPermission | UsersPermissionsRole | createRolePayload | updateRolePayload | deleteRolePayload | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnection_id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | UsersPermissionsUser | createUserPayload | updateUserPayload | deleteUserPayload | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnection_id | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole\n\ntype Mutation {\n  createEvent(input: createEventInput): createEventPayload\n  updateEvent(input: updateEventInput): updateEventPayload\n  deleteEvent(input: deleteEventInput): deleteEventPayload\n  createPages(input: createPagesInput): createPagesPayload\n  updatePages(input: updatePagesInput): updatePagesPayload\n  deletePages(input: deletePagesInput): deletePagesPayload\n\n  \"\"\"Create a new role\"\"\"\n  createRole(input: createRoleInput): createRolePayload\n\n  \"\"\"Update an existing role\"\"\"\n  updateRole(input: updateRoleInput): updateRolePayload\n\n  \"\"\"Delete an existing role\"\"\"\n  deleteRole(input: deleteRoleInput): deleteRolePayload\n\n  \"\"\"Create a new user\"\"\"\n  createUser(input: createUserInput): createUserPayload\n\n  \"\"\"Update an existing user\"\"\"\n  updateUser(input: updateUserInput): updateUserPayload\n\n  \"\"\"Delete an existing user\"\"\"\n  deleteUser(input: deleteUserInput): deleteUserPayload\n  upload(refId: ID, ref: String, source: String, file: Upload!): UploadFile!\n}\n\ntype Pages {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  body: String!\n  title: String!\n}\n\ntype PagesAggregator {\n  count: Int\n}\n\ntype PagesConnection {\n  values: [Pages]\n  groupBy: PagesGroupBy\n  aggregate: PagesAggregator\n}\n\ntype PagesConnection_id {\n  key: ID\n  connection: PagesConnection\n}\n\ntype PagesConnectionBody {\n  key: String\n  connection: PagesConnection\n}\n\ntype PagesConnectionCreatedAt {\n  key: DateTime\n  connection: PagesConnection\n}\n\ntype PagesConnectionTitle {\n  key: String\n  connection: PagesConnection\n}\n\ntype PagesConnectionUpdatedAt {\n  key: DateTime\n  connection: PagesConnection\n}\n\ntype PagesGroupBy {\n  _id: [PagesConnection_id]\n  createdAt: [PagesConnectionCreatedAt]\n  updatedAt: [PagesConnectionUpdatedAt]\n  body: [PagesConnectionBody]\n  title: [PagesConnectionTitle]\n}\n\ninput PagesInput {\n  body: String!\n  title: String!\n}\n\ntype Query {\n  event(id: ID!): Event\n  events(sort: String, limit: Int, start: Int, where: JSON): [Event]\n  eventsConnection(sort: String, limit: Int, start: Int, where: JSON): EventConnection\n  page(id: ID!): Pages\n  pages(sort: String, limit: Int, start: Int, where: JSON): [Pages]\n  pagesConnection(sort: String, limit: Int, start: Int, where: JSON): PagesConnection\n  files(sort: String, limit: Int, start: Int, where: JSON): [UploadFile]\n  filesConnection(sort: String, limit: Int, start: Int, where: JSON): UploadFileConnection\n  role(id: ID!): UsersPermissionsRole\n\n  \"\"\"\n  Retrieve all the existing roles. You can't apply filters on this query.\n  \"\"\"\n  roles(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsRole]\n  rolesConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsRoleConnection\n  user(id: ID!): UsersPermissionsUser\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n  usersConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsUserConnection\n  me: UsersPermissionsMe\n}\n\ninput RoleInput {\n  name: String!\n  description: String\n  type: String\n  permissions: [ID]\n  users: [ID]\n}\n\ninput updateEventInput {\n  where: InputID\n  data: editEventInput\n}\n\ntype updateEventPayload {\n  event: Event\n}\n\ninput updatePagesInput {\n  where: InputID\n  data: editPagesInput\n}\n\ntype updatePagesPayload {\n  page: Pages\n}\n\ninput updateRoleInput {\n  where: InputID\n  data: editRoleInput\n}\n\ntype updateRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput updateUserInput {\n  where: InputID\n  data: editUserInput\n}\n\ntype updateUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload\n\ntype UploadFile {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related(sort: String, limit: Int, start: Int, where: JSON): [Morph]\n}\n\ntype UploadFileAggregator {\n  count: Int\n}\n\ntype UploadFileConnection {\n  values: [UploadFile]\n  groupBy: UploadFileGroupBy\n  aggregate: UploadFileAggregator\n}\n\ntype UploadFileConnection_id {\n  key: ID\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionCreatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionExt {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionHash {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionMime {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionName {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionProvider {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionPublic_id {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSha256 {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSize {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUpdatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUrl {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileGroupBy {\n  _id: [UploadFileConnection_id]\n  createdAt: [UploadFileConnectionCreatedAt]\n  updatedAt: [UploadFileConnectionUpdatedAt]\n  name: [UploadFileConnectionName]\n  hash: [UploadFileConnectionHash]\n  sha256: [UploadFileConnectionSha256]\n  ext: [UploadFileConnectionExt]\n  mime: [UploadFileConnectionMime]\n  size: [UploadFileConnectionSize]\n  url: [UploadFileConnectionUrl]\n  provider: [UploadFileConnectionProvider]\n  public_id: [UploadFileConnectionPublic_id]\n}\n\ninput UserInput {\n  username: String!\n  email: String!\n  provider: String\n  password: String\n  resetPasswordToken: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: ID\n}\n\ntype UsersPermissionsMe {\n  _id: ID!\n  username: String!\n  email: String!\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsMeRole\n}\n\ntype UsersPermissionsMeRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n}\n\ntype UsersPermissionsPermission {\n  _id: ID!\n  type: String!\n  controller: String!\n  action: String!\n  enabled: Boolean!\n  policy: String\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n  permissions(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsPermission]\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n}\n\ntype UsersPermissionsRoleAggregator {\n  count: Int\n}\n\ntype UsersPermissionsRoleConnection {\n  values: [UsersPermissionsRole]\n  groupBy: UsersPermissionsRoleGroupBy\n  aggregate: UsersPermissionsRoleAggregator\n}\n\ntype UsersPermissionsRoleConnection_id {\n  key: ID\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionDescription {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionName {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionType {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleGroupBy {\n  _id: [UsersPermissionsRoleConnection_id]\n  name: [UsersPermissionsRoleConnectionName]\n  description: [UsersPermissionsRoleConnectionDescription]\n  type: [UsersPermissionsRoleConnectionType]\n}\n\ntype UsersPermissionsUser {\n  _id: ID!\n  username: String!\n  email: String!\n  provider: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsUserAggregator {\n  count: Int\n}\n\ntype UsersPermissionsUserConnection {\n  values: [UsersPermissionsUser]\n  groupBy: UsersPermissionsUserGroupBy\n  aggregate: UsersPermissionsUserAggregator\n}\n\ntype UsersPermissionsUserConnection_id {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionBlocked {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionConfirmed {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionEmail {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionProvider {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionRole {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionUsername {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserGroupBy {\n  _id: [UsersPermissionsUserConnection_id]\n  username: [UsersPermissionsUserConnectionUsername]\n  email: [UsersPermissionsUserConnectionEmail]\n  provider: [UsersPermissionsUserConnectionProvider]\n  confirmed: [UsersPermissionsUserConnectionConfirmed]\n  blocked: [UsersPermissionsUserConnectionBlocked]\n  role: [UsersPermissionsUserConnectionRole]\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 80,
      "containsCycle": true,
      "numDefinitions": 109
    }
  ],
  "metrics": {
    "created_at": "2019-01-04T13:16:27Z",
    "updated_at": "2019-02-21T03:47:48Z",
    "pushed_at": "2019-02-21T03:47:47Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}