{
  "repo_name": "EtherBeat",
  "repo_full_name": "scorelab/etherbeat",
  "repo_owner": "scorelab",
  "repo_description": "With the growing popularity of BitCoin in the last couple of years, other blockchains have been in development for solving various problems that need distributed consensus. Ethereum blockchain is one example, that gives users to develop \"smart contracts\" that runs in the blockchain.  This gives the ability to develop decentralized applications (or dApps). Users do not need to 'trust' anything or anybody.  In addition to that, dApps are always available and will be guaranteed to be available in the future as well.  Also, it is resistant to traditional attacks such as DDoS.  This framework has given many developers to write a decentralized application without much effort, without needing distributed systems or cryptography knowledge. Many startups are actively developing applications for Ethereum such as Ethereum Name Service (ENS), Etheria or WeiFund.  Unfortunately, because the technology being used is bleeding edge it is inevitable that attacks or hacks will target these apps for monetary reasons.  Last year DAO suffered a severe attack because of its security flaws. Due to that attack, 3.6m ether was stolen from DAO's smart contract.  Also, once you publish a smart contract in Ethereum it is not possible to modify or update it as a regular web application. Thus, even developers identify a critical bug in the contract it is not possible to push a bugfix in a straightforward way.  Thus, in order to fill the gap of not having a proper 'smart contract' compatible monitoring service, we propose to build a web application that can monitor other smart contracts in Ethereum and give the capability to safeguard it's critical functions (Ether send and receive) and interact and visualize with smart contract functions in a much simpler way.  Also depending smart contracts can using our base smart contracts to gain the advantage of having 'circuit-breaker' which will pause the activity if things go wrong in an unexpected way.",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "contract.gql",
      "path": "src/models/contract.gql",
      "sha": "35c95d5f05f14114e7df8a123c57082995ecd92f",
      "url": "https://api.github.com/repositories/90452289/contents/src/models/contract.gql?ref=9da8bb31c7689195df0f3c8f06c70d2910a4f877",
      "git_url": "https://api.github.com/repositories/90452289/git/blobs/35c95d5f05f14114e7df8a123c57082995ecd92f",
      "html_url": "https://github.com/scorelab/EtherBeat/blob/9da8bb31c7689195df0f3c8f06c70d2910a4f877/src/models/contract.gql",
      "content": "type Query {\n    hello: String\n    contract (id: String!): String\n    transaction (id: String!): [Transaction]\n}\n\ntype Contract {\n    id: String\n    balance: String\n    storage: String\n    code: String\n    abiInterface: String\n    transactions: [Transaction]\n}\n\ntype Transaction {\n    hash: String\n    nonce: Float\n    blockHash: String\n    blockNumber: Int\n    transactionIndex: Int\n    from: String\n    to: String\n    value: String\n    gasPrice: Float\n    gas: Int\n    input: String\n    data: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 3
    }
  ],
  "metrics": {
    "created_at": "2017-05-06T09:30:52Z",
    "updated_at": "2019-06-26T07:18:09Z",
    "pushed_at": "2019-01-23T06:24:39Z",
    "issues": 7,
    "watchers": 24,
    "fork_count": 67,
    "has_wiki_enabled": true,
    "license": "apache-2.0",
    "pull_requests": 8,
    "pull_requests_open": 0,
    "pull_requests_closed": 1,
    "pull_requests_merged": 7,
    "releases": 0,
    "stargazers": 50
  }
}