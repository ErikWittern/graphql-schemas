{
  "repo_name": "twittercloneapi",
  "repo_full_name": "cosydney/twittercloneapi",
  "repo_owner": "cosydney",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "plugins/graphql/config/generated/schema.graphql",
      "sha": "7728006a4162b6e03501b98571fb3a36301a8507",
      "url": "https://api.github.com/repositories/176490550/contents/plugins/graphql/config/generated/schema.graphql?ref=0c20cda4166d33f94ec7f9e57a31392a5f1475b7",
      "git_url": "https://api.github.com/repositories/176490550/git/blobs/7728006a4162b6e03501b98571fb3a36301a8507",
      "html_url": "https://github.com/cosydney/twittercloneapi/blob/0c20cda4166d33f94ec7f9e57a31392a5f1475b7/plugins/graphql/config/generated/schema.graphql",
      "content": "input createPeopleInput {\n  data: PeopleInput\n}\n\ntype createPeoplePayload {\n  person: People\n}\n\ninput createPostInput {\n  data: PostInput\n}\n\ntype createPostPayload {\n  post: Post\n}\n\ninput createRoleInput {\n  data: RoleInput\n}\n\ntype createRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput createTagInput {\n  data: TagInput\n}\n\ntype createTagPayload {\n  tag: Tag\n}\n\ninput createUserInput {\n  data: UserInput\n}\n\ntype createUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"\nThe `DateTime` scalar represents a date and time following the ISO 8601 standard\n\"\"\"\nscalar DateTime\n\ninput deletePeopleInput {\n  where: InputID\n}\n\ntype deletePeoplePayload {\n  person: People\n}\n\ninput deletePostInput {\n  where: InputID\n}\n\ntype deletePostPayload {\n  post: Post\n}\n\ninput deleteRoleInput {\n  where: InputID\n}\n\ntype deleteRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput deleteTagInput {\n  where: InputID\n}\n\ntype deleteTagPayload {\n  tag: Tag\n}\n\ninput deleteUserInput {\n  where: InputID\n}\n\ntype deleteUserPayload {\n  user: UsersPermissionsUser\n}\n\ninput FileInput {\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related: [ID]\n}\n\ninput InputID {\n  id: ID!\n}\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\"\"\"\nscalar JSON\n\nunion Morph = UsersPermissionsMe | UsersPermissionsMeRole | People | createPeoplePayload | updatePeoplePayload | deletePeoplePayload | PeopleConnection | PeopleAggregator | PeopleGroupBy | PeopleConnection_id | PeopleConnectionCreatedAt | PeopleConnectionUpdatedAt | PeopleConnectionLogin | PeopleConnectionPassword | Post | createPostPayload | updatePostPayload | deletePostPayload | PostConnection | PostAggregator | PostGroupBy | PostConnection_id | PostConnectionCreatedAt | PostConnectionUpdatedAt | PostConnectionText | PostConnectionPeople | PostConnectionTime | Tag | createTagPayload | updateTagPayload | deleteTagPayload | TagConnection | TagAggregator | TagGroupBy | TagConnection_id | TagConnectionCreatedAt | TagConnectionUpdatedAt | TagConnectionName | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileGroupBy | UploadFileConnection_id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionHash | UploadFileConnectionSha256 | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionProvider | UploadFileConnectionPublic_id | UsersPermissionsPermission | UsersPermissionsRole | createRolePayload | updateRolePayload | deleteRolePayload | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnection_id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | UsersPermissionsUser | createUserPayload | updateUserPayload | deleteUserPayload | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnection_id | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole\n\ntype Mutation {\n  createPeople(input: createPeopleInput): createPeoplePayload\n  updatePeople(input: updatePeopleInput): updatePeoplePayload\n  deletePeople(input: deletePeopleInput): deletePeoplePayload\n  createPost(input: createPostInput): createPostPayload\n  updatePost(input: updatePostInput): updatePostPayload\n  deletePost(input: deletePostInput): deletePostPayload\n  createTag(input: createTagInput): createTagPayload\n  updateTag(input: updateTagInput): updateTagPayload\n  deleteTag(input: deleteTagInput): deleteTagPayload\n\n  \"\"\"Create a new role\"\"\"\n  createRole(input: createRoleInput): createRolePayload\n\n  \"\"\"Update an existing role\"\"\"\n  updateRole(input: updateRoleInput): updateRolePayload\n\n  \"\"\"Delete an existing role\"\"\"\n  deleteRole(input: deleteRoleInput): deleteRolePayload\n  createUser(input: createUserInput): createUserPayload\n  updateUser(input: updateUserInput): updateUserPayload\n  deleteUser(input: deleteUserInput): deleteUserPayload\n  upload(refId: ID, ref: String, source: String, file: Upload!): UploadFile!\n}\n\ntype People {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  login: String\n  password: String\n  posts(sort: String, limit: Int, start: Int, where: JSON): [Post]\n}\n\ntype PeopleAggregator {\n  count: Int\n}\n\ntype PeopleConnection {\n  values: [People]\n  groupBy: PeopleGroupBy\n  aggregate: PeopleAggregator\n}\n\ntype PeopleConnection_id {\n  key: ID\n  connection: PeopleConnection\n}\n\ntype PeopleConnectionCreatedAt {\n  key: DateTime\n  connection: PeopleConnection\n}\n\ntype PeopleConnectionLogin {\n  key: String\n  connection: PeopleConnection\n}\n\ntype PeopleConnectionPassword {\n  key: String\n  connection: PeopleConnection\n}\n\ntype PeopleConnectionUpdatedAt {\n  key: DateTime\n  connection: PeopleConnection\n}\n\ntype PeopleGroupBy {\n  _id: [PeopleConnection_id]\n  createdAt: [PeopleConnectionCreatedAt]\n  updatedAt: [PeopleConnectionUpdatedAt]\n  login: [PeopleConnectionLogin]\n  password: [PeopleConnectionPassword]\n}\n\ninput PeopleInput {\n  login: String\n  password: String\n  posts: [ID]\n}\n\ntype Post {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  text: String\n  people: People\n  time: DateTime\n}\n\ntype PostAggregator {\n  count: Int\n}\n\ntype PostConnection {\n  values: [Post]\n  groupBy: PostGroupBy\n  aggregate: PostAggregator\n}\n\ntype PostConnection_id {\n  key: ID\n  connection: PostConnection\n}\n\ntype PostConnectionCreatedAt {\n  key: DateTime\n  connection: PostConnection\n}\n\ntype PostConnectionPeople {\n  key: ID\n  connection: PostConnection\n}\n\ntype PostConnectionText {\n  key: String\n  connection: PostConnection\n}\n\ntype PostConnectionTime {\n  key: DateTime\n  connection: PostConnection\n}\n\ntype PostConnectionUpdatedAt {\n  key: DateTime\n  connection: PostConnection\n}\n\ntype PostGroupBy {\n  _id: [PostConnection_id]\n  createdAt: [PostConnectionCreatedAt]\n  updatedAt: [PostConnectionUpdatedAt]\n  text: [PostConnectionText]\n  people: [PostConnectionPeople]\n  time: [PostConnectionTime]\n}\n\ninput PostInput {\n  text: String\n  people: ID\n  time: DateTime\n}\n\ntype Query {\n  person(id: ID!): People\n  people(sort: String, limit: Int, start: Int, where: JSON): [People]\n  peopleConnection(sort: String, limit: Int, start: Int, where: JSON): PeopleConnection\n  post(id: ID!): Post\n  posts(sort: String, limit: Int, start: Int, where: JSON): [Post]\n  postsConnection(sort: String, limit: Int, start: Int, where: JSON): PostConnection\n  tag(id: ID!): Tag\n  tags(sort: String, limit: Int, start: Int, where: JSON): [Tag]\n  tagsConnection(sort: String, limit: Int, start: Int, where: JSON): TagConnection\n  files(sort: String, limit: Int, start: Int, where: JSON): [UploadFile]\n  filesConnection(sort: String, limit: Int, start: Int, where: JSON): UploadFileConnection\n  role(id: ID!): UsersPermissionsRole\n\n  \"\"\"\n  Retrieve all the existing roles. You can't apply filters on this query.\n  \"\"\"\n  roles(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsRole]\n  rolesConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsRoleConnection\n  user(id: ID!): UsersPermissionsUser\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n  usersConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsUserConnection\n  me: UsersPermissionsMe\n}\n\ninput RoleInput {\n  name: String!\n  description: String\n  type: String\n  permissions: [ID]\n  users: [ID]\n}\n\ntype Tag {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String\n}\n\ntype TagAggregator {\n  count: Int\n}\n\ntype TagConnection {\n  values: [Tag]\n  groupBy: TagGroupBy\n  aggregate: TagAggregator\n}\n\ntype TagConnection_id {\n  key: ID\n  connection: TagConnection\n}\n\ntype TagConnectionCreatedAt {\n  key: DateTime\n  connection: TagConnection\n}\n\ntype TagConnectionName {\n  key: String\n  connection: TagConnection\n}\n\ntype TagConnectionUpdatedAt {\n  key: DateTime\n  connection: TagConnection\n}\n\ntype TagGroupBy {\n  _id: [TagConnection_id]\n  createdAt: [TagConnectionCreatedAt]\n  updatedAt: [TagConnectionUpdatedAt]\n  name: [TagConnectionName]\n}\n\ninput TagInput {\n  name: String\n}\n\ninput updatePeopleInput {\n  where: InputID\n  data: PeopleInput\n}\n\ntype updatePeoplePayload {\n  person: People\n}\n\ninput updatePostInput {\n  where: InputID\n  data: PostInput\n}\n\ntype updatePostPayload {\n  post: Post\n}\n\ninput updateRoleInput {\n  where: InputID\n  data: RoleInput\n}\n\ntype updateRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput updateTagInput {\n  where: InputID\n  data: TagInput\n}\n\ntype updateTagPayload {\n  tag: Tag\n}\n\ninput updateUserInput {\n  where: InputID\n  data: UserInput\n}\n\ntype updateUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload\n\ntype UploadFile {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related(sort: String, limit: Int, start: Int, where: JSON): [Morph]\n}\n\ntype UploadFileAggregator {\n  count: Int\n}\n\ntype UploadFileConnection {\n  values: [UploadFile]\n  groupBy: UploadFileGroupBy\n  aggregate: UploadFileAggregator\n}\n\ntype UploadFileConnection_id {\n  key: ID\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionCreatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionExt {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionHash {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionMime {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionName {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionProvider {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionPublic_id {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSha256 {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSize {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUpdatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUrl {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileGroupBy {\n  _id: [UploadFileConnection_id]\n  createdAt: [UploadFileConnectionCreatedAt]\n  updatedAt: [UploadFileConnectionUpdatedAt]\n  name: [UploadFileConnectionName]\n  hash: [UploadFileConnectionHash]\n  sha256: [UploadFileConnectionSha256]\n  ext: [UploadFileConnectionExt]\n  mime: [UploadFileConnectionMime]\n  size: [UploadFileConnectionSize]\n  url: [UploadFileConnectionUrl]\n  provider: [UploadFileConnectionProvider]\n  public_id: [UploadFileConnectionPublic_id]\n}\n\ninput UserInput {\n  username: String!\n  email: String!\n  provider: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: ID\n}\n\ntype UsersPermissionsMe {\n  _id: ID!\n  username: String!\n  email: String!\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsMeRole\n}\n\ntype UsersPermissionsMeRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n}\n\ntype UsersPermissionsPermission {\n  _id: ID!\n  type: String!\n  controller: String!\n  action: String!\n  enabled: Boolean!\n  policy: String\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n  permissions(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsPermission]\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n}\n\ntype UsersPermissionsRoleAggregator {\n  count: Int\n}\n\ntype UsersPermissionsRoleConnection {\n  values: [UsersPermissionsRole]\n  groupBy: UsersPermissionsRoleGroupBy\n  aggregate: UsersPermissionsRoleAggregator\n}\n\ntype UsersPermissionsRoleConnection_id {\n  key: ID\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionDescription {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionName {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionType {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleGroupBy {\n  _id: [UsersPermissionsRoleConnection_id]\n  name: [UsersPermissionsRoleConnectionName]\n  description: [UsersPermissionsRoleConnectionDescription]\n  type: [UsersPermissionsRoleConnectionType]\n}\n\ntype UsersPermissionsUser {\n  _id: ID!\n  username: String!\n  email: String!\n  provider: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsUserAggregator {\n  count: Int\n}\n\ntype UsersPermissionsUserConnection {\n  values: [UsersPermissionsUser]\n  groupBy: UsersPermissionsUserGroupBy\n  aggregate: UsersPermissionsUserAggregator\n}\n\ntype UsersPermissionsUserConnection_id {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionBlocked {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionConfirmed {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionEmail {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionProvider {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionRole {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionUsername {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserGroupBy {\n  _id: [UsersPermissionsUserConnection_id]\n  username: [UsersPermissionsUserConnectionUsername]\n  email: [UsersPermissionsUserConnectionEmail]\n  provider: [UsersPermissionsUserConnectionProvider]\n  confirmed: [UsersPermissionsUserConnectionConfirmed]\n  blocked: [UsersPermissionsUserConnectionBlocked]\n  role: [UsersPermissionsUserConnectionRole]\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 82,
      "containsCycle": true,
      "numDefinitions": 108
    }
  ],
  "metrics": {
    "created_at": "2019-03-19T10:51:19Z",
    "updated_at": "2019-03-19T11:10:17Z",
    "pushed_at": "2019-03-19T11:10:16Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}