{
  "repo_name": "my-twitter-client",
  "repo_full_name": "subuta/my-twitter-client",
  "repo_owner": "subuta",
  "repo_description": "Slack-like twitter client for sub-labo.com",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "app.graphql",
      "path": "src/server/api/schema/app.graphql",
      "sha": "9e9d815a358f93f69a56be1b20cb79723e5ae85c",
      "url": "https://api.github.com/repositories/152172930/contents/src/server/api/schema/app.graphql?ref=3dc354185795a58d61e756bbbd3a0f31b9cb36c9",
      "git_url": "https://api.github.com/repositories/152172930/git/blobs/9e9d815a358f93f69a56be1b20cb79723e5ae85c",
      "html_url": "https://github.com/subuta/my-twitter-client/blob/3dc354185795a58d61e756bbbd3a0f31b9cb36c9/src/server/api/schema/app.graphql",
      "content": "# SEE: https://www.prisma.io/docs/data-model-and-migrations/data-model-knul/#a-note-on-the-application-schema\n# Inspired by https://github.com/clayallsopp/graphqlhub/blob/master/graphqlhub-schemas/src/twitter.js\n\nscalar JSON\n\n# SEE: https://developer.twitter.com/en/docs/tweets/data-dictionary/overview/user-object.html\ntype TwitterUser {\n    id: ID!\n    id_str: String\n    name: String\n    screen_name: String\n    location: String\n    url: String\n    description: String\n    derived: ProfileGeo\n    protected: Boolean\n    verified: Boolean\n    followers_count: Int\n    friends_count: Int\n    listed_count: Int\n    favourites_count: Int\n    statuses_count: Int\n    created_at: String\n    utc_offset: String\n    time_zone: String\n    geo_enabled: Boolean\n    lang: String\n    contributors_enabled: Boolean\n    profile_background_color: String\n    profile_background_image_url: String\n    profile_background_image_url_https: String\n    profile_background_tile: Boolean\n    profile_banner_url: String\n    profile_image_url: String\n    profile_banneprofile_image_url_httpsr_url: String\n    profile_link_color: String\n    profile_sidebar_border_color: String\n    profile_sidebar_fill_color: String\n    profile_text_color: String\n    profile_use_background_image: Boolean\n    default_profile: Boolean\n    default_profile_image: Boolean\n    withheld_in_countries: [String]\n    withheld_scope: String\n\n    tweets(\n        limit: Int\n    ): [Tweet]\n}\n\ntype ProfileGeo {\n    country: String\n    country_code: String\n    locality: String\n    region: String\n    sub_region: String\n    full_name: String\n    geo: Coordinates\n}\n\ntype Coordinates {\n    coordinates: [Int]\n    type: String\n}\n\ntype Polygon {\n    coordinates: [[[Int]]]\n    type: String\n}\n\ntype Place {\n    id: String\n    url: String\n    place_type: String\n    name: String\n    full_name: String\n    country_code: String\n    country: String\n    bounding_box: Polygon\n    attributes: String\n}\n\ntype Hashtag {\n    indices: [Int]\n    text: String\n}\n\ntype Media {\n    type: String\n    sizes: MediaSizes\n    indices: [Int]\n    url: String\n    media_url: String\n    display_url: String\n    id: Int\n    id_str: String\n    expanded_url: String\n    media_url_https: String\n\n    # Only shown at extended_entities media.\n    video_info: VideoInfo\n    additional_media_info: AdditionalMediaInfo\n}\n\ntype AdditionalMediaInfo {\n    title: String\n    description: String\n    embeddable: Boolean\n    monetizable: Boolean\n}\n\ntype VideoInfo {\n    aspect_ratio: [Int]\n    duration_millis: Int\n    variants: [VideoVariant]\n}\n\ntype VideoVariant {\n    bitrate: Int\n    content_type: String\n    url: String\n}\n\ntype MediaSizes {\n    thumb: MediaSize\n    large: MediaSize\n    medium: MediaSize\n    small: MediaSize\n}\n\ntype MediaSize {\n    h: Int,\n    resize: String\n    w: Int\n}\n\ntype Url {\n    indices: [Int]\n    url: String\n    display_url: String\n    expanded_url: String\n    unwound: Unwound\n\n    og: LinksAndMeta\n}\n\ntype Entities {\n    hashtags: [Hashtag]\n    media: [Media]\n    urls: [Url]\n    user_mentions: [UserMention]\n    symbols: [Symbol]\n    polls: [Poll]\n}\n\ntype Unwound {\n    url: String\n    status: Int\n    title: String\n    description: String\n}\n\ntype UserMention {\n    name: String\n    indices: [Int]\n    screen_name: String\n    id: ID\n    id_str: String\n}\n\ntype Symbol {\n    indices: [Int]\n    text: String\n}\n\ntype Poll {\n    options: [PollOption]\n    end_datetime: String\n    duration_minutes: Int\n}\n\ntype PollOption {\n    position: Int\n    text: String\n}\n\ntype MatchingRule {\n    tag: String,\n    id: ID,\n    id_str: String\n}\n\ntype CurrentUserRetweet {\n    id: ID\n    id_str: String\n}\n\n# SEE: https://developer.twitter.com/en/docs/tweets/data-dictionary/overview/tweet-object\ntype Tweet {\n    created_at: String\n    id: ID!\n    id_str: String\n    text: String\n    full_text: String\n    source: String\n    truncated: Boolean\n\n    in_reply_to_status: Tweet\n    in_reply_to_status_id: ID\n    in_reply_to_status_id_str: String\n    in_reply_to_user_id: ID\n    in_reply_to_user_id_str: String\n    in_reply_to_screen_name: String\n\n    \"\"\"\n    The user who posted this Tweet. See User data dictionary for complete list of attributes.\n    \"\"\"\n    user: TwitterUser\n\n    \"\"\"\n    Nullable. Represents the geographic location of this Tweet as reported by the user or client application. The inner coordinates array is formatted as geoJSON (longitude first, then latitude).\n    \"\"\"\n    coordinates: Coordinates\n\n    place: Place\n    quoted_status_id: ID\n    quoted_status_id_str: String\n    is_quote_status: Boolean\n    quoted_status: Tweet\n\n    retweeted_status: Tweet\n\n    quote_count: Int\n    reply_count: Int\n    retweet_count: Int\n    favorite_count: Int\n    entities: Entities\n    extended_entities: Entities\n    favorited: Boolean\n    retweeted: Boolean\n    possibly_sensitive: Boolean\n    filter_level: String\n    lang: String\n    matching_rules: [MatchingRule]\n    current_user_retweet: CurrentUserRetweet\n    scopes: JSON\n    withheld_copyright: Boolean\n    withheld_in_countries: [String]\n    withheld_scope: String\n\n    retweets(\n        limit: Int\n    ): [Tweet]\n}\n\nenum UserIdentifierType {\n    ID,\n    NAME\n}\n\nenum SearchResponseType {\n    MIXED,\n    RECENT,\n    POPULAR\n}\n\n# Twitter related api.\ntype TwitterAPI {\n    user(\n        identity: ID\n        identifier: UserIdentifierType\n    ): TwitterUser\n\n    tweet(\n        id: ID\n    ): Tweet\n\n    tweets(\n        user_id: ID!\n        limit: Int = 200\n        max_id: ID\n    ): [Tweet]\n\n    followers(\n        user_id: ID!\n        count: Int = 200\n        cursor: ID = -1\n    ): [TwitterUser]\n\n    friends(\n        user_id: ID!\n        count: Int = 200\n        cursor: ID = -1\n    ): [TwitterUser]\n\n    search(\n        q: String\n        count: Int = 200\n        result_type: SearchResponseType\n    ): [Tweet]\n}\n\n# Twitter related mutation api.\ntype TwitterMutationAPI {\n    postTweet (\n        status: String!\n    ): Tweet\n}\n\n# Iframely resnposes\n# https://iframely.com/docs/meta\ntype IframelyMeta {\n  title: String\n  description: String\n  date: String\n  canonical: String\n  shortlink: String\n  category: String\n  keywords: String\n\n  author: String\n  author_url: String\n  copyright: String\n  license: String\n  license_url: String\n  site: String\n\n  views: Int\n  likes: Int\n  comments: Int\n  duration: Int\n\n  country_name: String\n  postal_code: String\n  street_address: String\n  region: String\n  locality: String\n  latitude: String\n  longitude: String\n\n  price: String\n  currency_code: String\n  brand: String\n  product_id: String\n  availability: String\n  quantity: String\n\n  # Other fileds\n  label_1_reading_time: String\n  theme_color: String\n  amphtml: String\n  media: String\n}\n\ntype IframelyMedia {\n  width: Int\n  height: Int\n  max_width: Int\n  aspect_ratio: Float\n  scrolling: String\n}\n\ntype IframelyLink {\n  html: String\n  href: String\n  type: String\n\n  # https://iframely.com/docs/links\n  rel: [String]\n\n  media: IframelyMedia\n}\n\ntype IframelyLinks {\n  summary: [IframelyLink]\n  player: [IframelyLink]\n  app: [IframelyLink]\n  thumbnail: [IframelyLink]\n  icon: [IframelyLink]\n}\n\ntype LinksAndMeta {\n  meta: IframelyMeta!\n  links: IframelyLinks\n  rel: [String]\n  html: String\n}\n\n# Iframely related api.\ntype IFramelyAPI {\n  og(\n    url: String!\n  ): LinksAndMeta\n}\n\ntype Query {\n    twitter: TwitterAPI\n    iframely: IFramelyAPI\n}\n\ntype Mutation {\n    twitter: TwitterMutationAPI\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 32,
      "containsCycle": true,
      "numDefinitions": 35
    }
  ],
  "metrics": {
    "created_at": "2018-10-09T02:06:13Z",
    "updated_at": "2018-12-17T14:52:47Z",
    "pushed_at": "2018-12-17T14:52:45Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}