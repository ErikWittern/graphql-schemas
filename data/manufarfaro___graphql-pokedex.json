{
  "repo_name": "graphql-pokedex",
  "repo_full_name": "manufarfaro/graphql-pokedex",
  "repo_owner": "manufarfaro",
  "repo_description": "A simple (very simple) pokedex API done with graphql",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "src/generated/prisma.graphql",
      "sha": "2026aa11ac3b7d3e8bae5f2a9f177ff9c9edfe4b",
      "url": "https://api.github.com/repositories/181362273/contents/src/generated/prisma.graphql?ref=ee0043f53f1796e1f772d1b401abdfe5fdc87ef7",
      "git_url": "https://api.github.com/repositories/181362273/git/blobs/2026aa11ac3b7d3e8bae5f2a9f177ff9c9edfe4b",
      "html_url": "https://github.com/manufarfaro/graphql-pokedex/blob/ee0043f53f1796e1f772d1b401abdfe5fdc87ef7/src/generated/prisma.graphql",
      "content": "type AggregatePokemon {\n  count: Int!\n}\n\ntype AggregateType {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar DateTime\n\nscalar Long\n\ntype Mutation {\n  createPokemon(data: PokemonCreateInput!): Pokemon!\n  updatePokemon(data: PokemonUpdateInput!, where: PokemonWhereUniqueInput!): Pokemon\n  updateManyPokemons(data: PokemonUpdateManyMutationInput!, where: PokemonWhereInput): BatchPayload!\n  upsertPokemon(where: PokemonWhereUniqueInput!, create: PokemonCreateInput!, update: PokemonUpdateInput!): Pokemon!\n  deletePokemon(where: PokemonWhereUniqueInput!): Pokemon\n  deleteManyPokemons(where: PokemonWhereInput): BatchPayload!\n  createType(data: TypeCreateInput!): Type!\n  updateType(data: TypeUpdateInput!, where: TypeWhereUniqueInput!): Type\n  updateManyTypes(data: TypeUpdateManyMutationInput!, where: TypeWhereInput): BatchPayload!\n  upsertType(where: TypeWhereUniqueInput!, create: TypeCreateInput!, update: TypeUpdateInput!): Type!\n  deleteType(where: TypeWhereUniqueInput!): Type\n  deleteManyTypes(where: TypeWhereInput): BatchPayload!\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Pokemon {\n  id: ID!\n  nationalNumber: Int!\n  createdAt: DateTime!\n  name: String!\n  height: Float\n  weight: Float\n  hp: Int\n  attack: Int\n  defense: Int\n  type(where: TypeWhereInput, orderBy: TypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Type!]\n  artwork: String\n  previousEvolutions(where: PokemonWhereInput, orderBy: PokemonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Pokemon!]\n  nextEvolutions(where: PokemonWhereInput, orderBy: PokemonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Pokemon!]\n}\n\ntype PokemonConnection {\n  pageInfo: PageInfo!\n  edges: [PokemonEdge]!\n  aggregate: AggregatePokemon!\n}\n\ninput PokemonCreateInput {\n  nationalNumber: Int!\n  name: String!\n  height: Float\n  weight: Float\n  hp: Int\n  attack: Int\n  defense: Int\n  type: TypeCreateManyWithoutPokemonsInput\n  artwork: String\n  previousEvolutions: PokemonCreateManyWithoutPreviousEvolutionsInput\n  nextEvolutions: PokemonCreateManyWithoutNextEvolutionsInput\n}\n\ninput PokemonCreateManyWithoutNextEvolutionsInput {\n  create: [PokemonCreateWithoutNextEvolutionsInput!]\n  connect: [PokemonWhereUniqueInput!]\n}\n\ninput PokemonCreateManyWithoutPreviousEvolutionsInput {\n  create: [PokemonCreateWithoutPreviousEvolutionsInput!]\n  connect: [PokemonWhereUniqueInput!]\n}\n\ninput PokemonCreateManyWithoutTypeInput {\n  create: [PokemonCreateWithoutTypeInput!]\n  connect: [PokemonWhereUniqueInput!]\n}\n\ninput PokemonCreateWithoutNextEvolutionsInput {\n  nationalNumber: Int!\n  name: String!\n  height: Float\n  weight: Float\n  hp: Int\n  attack: Int\n  defense: Int\n  type: TypeCreateManyWithoutPokemonsInput\n  artwork: String\n  previousEvolutions: PokemonCreateManyWithoutPreviousEvolutionsInput\n}\n\ninput PokemonCreateWithoutPreviousEvolutionsInput {\n  nationalNumber: Int!\n  name: String!\n  height: Float\n  weight: Float\n  hp: Int\n  attack: Int\n  defense: Int\n  type: TypeCreateManyWithoutPokemonsInput\n  artwork: String\n  nextEvolutions: PokemonCreateManyWithoutNextEvolutionsInput\n}\n\ninput PokemonCreateWithoutTypeInput {\n  nationalNumber: Int!\n  name: String!\n  height: Float\n  weight: Float\n  hp: Int\n  attack: Int\n  defense: Int\n  artwork: String\n  previousEvolutions: PokemonCreateManyWithoutPreviousEvolutionsInput\n  nextEvolutions: PokemonCreateManyWithoutNextEvolutionsInput\n}\n\ntype PokemonEdge {\n  node: Pokemon!\n  cursor: String!\n}\n\nenum PokemonOrderByInput {\n  id_ASC\n  id_DESC\n  nationalNumber_ASC\n  nationalNumber_DESC\n  createdAt_ASC\n  createdAt_DESC\n  name_ASC\n  name_DESC\n  height_ASC\n  height_DESC\n  weight_ASC\n  weight_DESC\n  hp_ASC\n  hp_DESC\n  attack_ASC\n  attack_DESC\n  defense_ASC\n  defense_DESC\n  artwork_ASC\n  artwork_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype PokemonPreviousValues {\n  id: ID!\n  nationalNumber: Int!\n  createdAt: DateTime!\n  name: String!\n  height: Float\n  weight: Float\n  hp: Int\n  attack: Int\n  defense: Int\n  artwork: String\n}\n\ninput PokemonScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  nationalNumber: Int\n  nationalNumber_not: Int\n  nationalNumber_in: [Int!]\n  nationalNumber_not_in: [Int!]\n  nationalNumber_lt: Int\n  nationalNumber_lte: Int\n  nationalNumber_gt: Int\n  nationalNumber_gte: Int\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  height: Float\n  height_not: Float\n  height_in: [Float!]\n  height_not_in: [Float!]\n  height_lt: Float\n  height_lte: Float\n  height_gt: Float\n  height_gte: Float\n  weight: Float\n  weight_not: Float\n  weight_in: [Float!]\n  weight_not_in: [Float!]\n  weight_lt: Float\n  weight_lte: Float\n  weight_gt: Float\n  weight_gte: Float\n  hp: Int\n  hp_not: Int\n  hp_in: [Int!]\n  hp_not_in: [Int!]\n  hp_lt: Int\n  hp_lte: Int\n  hp_gt: Int\n  hp_gte: Int\n  attack: Int\n  attack_not: Int\n  attack_in: [Int!]\n  attack_not_in: [Int!]\n  attack_lt: Int\n  attack_lte: Int\n  attack_gt: Int\n  attack_gte: Int\n  defense: Int\n  defense_not: Int\n  defense_in: [Int!]\n  defense_not_in: [Int!]\n  defense_lt: Int\n  defense_lte: Int\n  defense_gt: Int\n  defense_gte: Int\n  artwork: String\n  artwork_not: String\n  artwork_in: [String!]\n  artwork_not_in: [String!]\n  artwork_lt: String\n  artwork_lte: String\n  artwork_gt: String\n  artwork_gte: String\n  artwork_contains: String\n  artwork_not_contains: String\n  artwork_starts_with: String\n  artwork_not_starts_with: String\n  artwork_ends_with: String\n  artwork_not_ends_with: String\n  AND: [PokemonScalarWhereInput!]\n  OR: [PokemonScalarWhereInput!]\n  NOT: [PokemonScalarWhereInput!]\n}\n\ntype PokemonSubscriptionPayload {\n  mutation: MutationType!\n  node: Pokemon\n  updatedFields: [String!]\n  previousValues: PokemonPreviousValues\n}\n\ninput PokemonSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: PokemonWhereInput\n  AND: [PokemonSubscriptionWhereInput!]\n  OR: [PokemonSubscriptionWhereInput!]\n  NOT: [PokemonSubscriptionWhereInput!]\n}\n\ninput PokemonUpdateInput {\n  nationalNumber: Int\n  name: String\n  height: Float\n  weight: Float\n  hp: Int\n  attack: Int\n  defense: Int\n  type: TypeUpdateManyWithoutPokemonsInput\n  artwork: String\n  previousEvolutions: PokemonUpdateManyWithoutPreviousEvolutionsInput\n  nextEvolutions: PokemonUpdateManyWithoutNextEvolutionsInput\n}\n\ninput PokemonUpdateManyDataInput {\n  nationalNumber: Int\n  name: String\n  height: Float\n  weight: Float\n  hp: Int\n  attack: Int\n  defense: Int\n  artwork: String\n}\n\ninput PokemonUpdateManyMutationInput {\n  nationalNumber: Int\n  name: String\n  height: Float\n  weight: Float\n  hp: Int\n  attack: Int\n  defense: Int\n  artwork: String\n}\n\ninput PokemonUpdateManyWithoutNextEvolutionsInput {\n  create: [PokemonCreateWithoutNextEvolutionsInput!]\n  delete: [PokemonWhereUniqueInput!]\n  connect: [PokemonWhereUniqueInput!]\n  set: [PokemonWhereUniqueInput!]\n  disconnect: [PokemonWhereUniqueInput!]\n  update: [PokemonUpdateWithWhereUniqueWithoutNextEvolutionsInput!]\n  upsert: [PokemonUpsertWithWhereUniqueWithoutNextEvolutionsInput!]\n  deleteMany: [PokemonScalarWhereInput!]\n  updateMany: [PokemonUpdateManyWithWhereNestedInput!]\n}\n\ninput PokemonUpdateManyWithoutPreviousEvolutionsInput {\n  create: [PokemonCreateWithoutPreviousEvolutionsInput!]\n  delete: [PokemonWhereUniqueInput!]\n  connect: [PokemonWhereUniqueInput!]\n  set: [PokemonWhereUniqueInput!]\n  disconnect: [PokemonWhereUniqueInput!]\n  update: [PokemonUpdateWithWhereUniqueWithoutPreviousEvolutionsInput!]\n  upsert: [PokemonUpsertWithWhereUniqueWithoutPreviousEvolutionsInput!]\n  deleteMany: [PokemonScalarWhereInput!]\n  updateMany: [PokemonUpdateManyWithWhereNestedInput!]\n}\n\ninput PokemonUpdateManyWithoutTypeInput {\n  create: [PokemonCreateWithoutTypeInput!]\n  delete: [PokemonWhereUniqueInput!]\n  connect: [PokemonWhereUniqueInput!]\n  set: [PokemonWhereUniqueInput!]\n  disconnect: [PokemonWhereUniqueInput!]\n  update: [PokemonUpdateWithWhereUniqueWithoutTypeInput!]\n  upsert: [PokemonUpsertWithWhereUniqueWithoutTypeInput!]\n  deleteMany: [PokemonScalarWhereInput!]\n  updateMany: [PokemonUpdateManyWithWhereNestedInput!]\n}\n\ninput PokemonUpdateManyWithWhereNestedInput {\n  where: PokemonScalarWhereInput!\n  data: PokemonUpdateManyDataInput!\n}\n\ninput PokemonUpdateWithoutNextEvolutionsDataInput {\n  nationalNumber: Int\n  name: String\n  height: Float\n  weight: Float\n  hp: Int\n  attack: Int\n  defense: Int\n  type: TypeUpdateManyWithoutPokemonsInput\n  artwork: String\n  previousEvolutions: PokemonUpdateManyWithoutPreviousEvolutionsInput\n}\n\ninput PokemonUpdateWithoutPreviousEvolutionsDataInput {\n  nationalNumber: Int\n  name: String\n  height: Float\n  weight: Float\n  hp: Int\n  attack: Int\n  defense: Int\n  type: TypeUpdateManyWithoutPokemonsInput\n  artwork: String\n  nextEvolutions: PokemonUpdateManyWithoutNextEvolutionsInput\n}\n\ninput PokemonUpdateWithoutTypeDataInput {\n  nationalNumber: Int\n  name: String\n  height: Float\n  weight: Float\n  hp: Int\n  attack: Int\n  defense: Int\n  artwork: String\n  previousEvolutions: PokemonUpdateManyWithoutPreviousEvolutionsInput\n  nextEvolutions: PokemonUpdateManyWithoutNextEvolutionsInput\n}\n\ninput PokemonUpdateWithWhereUniqueWithoutNextEvolutionsInput {\n  where: PokemonWhereUniqueInput!\n  data: PokemonUpdateWithoutNextEvolutionsDataInput!\n}\n\ninput PokemonUpdateWithWhereUniqueWithoutPreviousEvolutionsInput {\n  where: PokemonWhereUniqueInput!\n  data: PokemonUpdateWithoutPreviousEvolutionsDataInput!\n}\n\ninput PokemonUpdateWithWhereUniqueWithoutTypeInput {\n  where: PokemonWhereUniqueInput!\n  data: PokemonUpdateWithoutTypeDataInput!\n}\n\ninput PokemonUpsertWithWhereUniqueWithoutNextEvolutionsInput {\n  where: PokemonWhereUniqueInput!\n  update: PokemonUpdateWithoutNextEvolutionsDataInput!\n  create: PokemonCreateWithoutNextEvolutionsInput!\n}\n\ninput PokemonUpsertWithWhereUniqueWithoutPreviousEvolutionsInput {\n  where: PokemonWhereUniqueInput!\n  update: PokemonUpdateWithoutPreviousEvolutionsDataInput!\n  create: PokemonCreateWithoutPreviousEvolutionsInput!\n}\n\ninput PokemonUpsertWithWhereUniqueWithoutTypeInput {\n  where: PokemonWhereUniqueInput!\n  update: PokemonUpdateWithoutTypeDataInput!\n  create: PokemonCreateWithoutTypeInput!\n}\n\ninput PokemonWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  nationalNumber: Int\n  nationalNumber_not: Int\n  nationalNumber_in: [Int!]\n  nationalNumber_not_in: [Int!]\n  nationalNumber_lt: Int\n  nationalNumber_lte: Int\n  nationalNumber_gt: Int\n  nationalNumber_gte: Int\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  height: Float\n  height_not: Float\n  height_in: [Float!]\n  height_not_in: [Float!]\n  height_lt: Float\n  height_lte: Float\n  height_gt: Float\n  height_gte: Float\n  weight: Float\n  weight_not: Float\n  weight_in: [Float!]\n  weight_not_in: [Float!]\n  weight_lt: Float\n  weight_lte: Float\n  weight_gt: Float\n  weight_gte: Float\n  hp: Int\n  hp_not: Int\n  hp_in: [Int!]\n  hp_not_in: [Int!]\n  hp_lt: Int\n  hp_lte: Int\n  hp_gt: Int\n  hp_gte: Int\n  attack: Int\n  attack_not: Int\n  attack_in: [Int!]\n  attack_not_in: [Int!]\n  attack_lt: Int\n  attack_lte: Int\n  attack_gt: Int\n  attack_gte: Int\n  defense: Int\n  defense_not: Int\n  defense_in: [Int!]\n  defense_not_in: [Int!]\n  defense_lt: Int\n  defense_lte: Int\n  defense_gt: Int\n  defense_gte: Int\n  type_every: TypeWhereInput\n  type_some: TypeWhereInput\n  type_none: TypeWhereInput\n  artwork: String\n  artwork_not: String\n  artwork_in: [String!]\n  artwork_not_in: [String!]\n  artwork_lt: String\n  artwork_lte: String\n  artwork_gt: String\n  artwork_gte: String\n  artwork_contains: String\n  artwork_not_contains: String\n  artwork_starts_with: String\n  artwork_not_starts_with: String\n  artwork_ends_with: String\n  artwork_not_ends_with: String\n  previousEvolutions_every: PokemonWhereInput\n  previousEvolutions_some: PokemonWhereInput\n  previousEvolutions_none: PokemonWhereInput\n  nextEvolutions_every: PokemonWhereInput\n  nextEvolutions_some: PokemonWhereInput\n  nextEvolutions_none: PokemonWhereInput\n  AND: [PokemonWhereInput!]\n  OR: [PokemonWhereInput!]\n  NOT: [PokemonWhereInput!]\n}\n\ninput PokemonWhereUniqueInput {\n  id: ID\n  nationalNumber: Int\n  name: String\n}\n\ntype Query {\n  pokemon(where: PokemonWhereUniqueInput!): Pokemon\n  pokemons(where: PokemonWhereInput, orderBy: PokemonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Pokemon]!\n  pokemonsConnection(where: PokemonWhereInput, orderBy: PokemonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PokemonConnection!\n  type(where: TypeWhereUniqueInput!): Type\n  types(where: TypeWhereInput, orderBy: TypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Type]!\n  typesConnection(where: TypeWhereInput, orderBy: TypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TypeConnection!\n  user(where: UserWhereUniqueInput!): User\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  pokemon(where: PokemonSubscriptionWhereInput): PokemonSubscriptionPayload\n  type(where: TypeSubscriptionWhereInput): TypeSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype Type {\n  id: ID!\n  createdAt: DateTime!\n  name: String!\n  strongWith(where: TypeWhereInput, orderBy: TypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Type!]\n  weakWith(where: TypeWhereInput, orderBy: TypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Type!]\n  pokemons(where: PokemonWhereInput, orderBy: PokemonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Pokemon!]\n}\n\ntype TypeConnection {\n  pageInfo: PageInfo!\n  edges: [TypeEdge]!\n  aggregate: AggregateType!\n}\n\ninput TypeCreateInput {\n  name: String!\n  strongWith: TypeCreateManyWithoutStrongWithInput\n  weakWith: TypeCreateManyWithoutWeakWithInput\n  pokemons: PokemonCreateManyWithoutTypeInput\n}\n\ninput TypeCreateManyWithoutPokemonsInput {\n  create: [TypeCreateWithoutPokemonsInput!]\n  connect: [TypeWhereUniqueInput!]\n}\n\ninput TypeCreateManyWithoutStrongWithInput {\n  create: [TypeCreateWithoutStrongWithInput!]\n  connect: [TypeWhereUniqueInput!]\n}\n\ninput TypeCreateManyWithoutWeakWithInput {\n  create: [TypeCreateWithoutWeakWithInput!]\n  connect: [TypeWhereUniqueInput!]\n}\n\ninput TypeCreateWithoutPokemonsInput {\n  name: String!\n  strongWith: TypeCreateManyWithoutStrongWithInput\n  weakWith: TypeCreateManyWithoutWeakWithInput\n}\n\ninput TypeCreateWithoutStrongWithInput {\n  name: String!\n  weakWith: TypeCreateManyWithoutWeakWithInput\n  pokemons: PokemonCreateManyWithoutTypeInput\n}\n\ninput TypeCreateWithoutWeakWithInput {\n  name: String!\n  strongWith: TypeCreateManyWithoutStrongWithInput\n  pokemons: PokemonCreateManyWithoutTypeInput\n}\n\ntype TypeEdge {\n  node: Type!\n  cursor: String!\n}\n\nenum TypeOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype TypePreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  name: String!\n}\n\ninput TypeScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [TypeScalarWhereInput!]\n  OR: [TypeScalarWhereInput!]\n  NOT: [TypeScalarWhereInput!]\n}\n\ntype TypeSubscriptionPayload {\n  mutation: MutationType!\n  node: Type\n  updatedFields: [String!]\n  previousValues: TypePreviousValues\n}\n\ninput TypeSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: TypeWhereInput\n  AND: [TypeSubscriptionWhereInput!]\n  OR: [TypeSubscriptionWhereInput!]\n  NOT: [TypeSubscriptionWhereInput!]\n}\n\ninput TypeUpdateInput {\n  name: String\n  strongWith: TypeUpdateManyWithoutStrongWithInput\n  weakWith: TypeUpdateManyWithoutWeakWithInput\n  pokemons: PokemonUpdateManyWithoutTypeInput\n}\n\ninput TypeUpdateManyDataInput {\n  name: String\n}\n\ninput TypeUpdateManyMutationInput {\n  name: String\n}\n\ninput TypeUpdateManyWithoutPokemonsInput {\n  create: [TypeCreateWithoutPokemonsInput!]\n  delete: [TypeWhereUniqueInput!]\n  connect: [TypeWhereUniqueInput!]\n  set: [TypeWhereUniqueInput!]\n  disconnect: [TypeWhereUniqueInput!]\n  update: [TypeUpdateWithWhereUniqueWithoutPokemonsInput!]\n  upsert: [TypeUpsertWithWhereUniqueWithoutPokemonsInput!]\n  deleteMany: [TypeScalarWhereInput!]\n  updateMany: [TypeUpdateManyWithWhereNestedInput!]\n}\n\ninput TypeUpdateManyWithoutStrongWithInput {\n  create: [TypeCreateWithoutStrongWithInput!]\n  delete: [TypeWhereUniqueInput!]\n  connect: [TypeWhereUniqueInput!]\n  set: [TypeWhereUniqueInput!]\n  disconnect: [TypeWhereUniqueInput!]\n  update: [TypeUpdateWithWhereUniqueWithoutStrongWithInput!]\n  upsert: [TypeUpsertWithWhereUniqueWithoutStrongWithInput!]\n  deleteMany: [TypeScalarWhereInput!]\n  updateMany: [TypeUpdateManyWithWhereNestedInput!]\n}\n\ninput TypeUpdateManyWithoutWeakWithInput {\n  create: [TypeCreateWithoutWeakWithInput!]\n  delete: [TypeWhereUniqueInput!]\n  connect: [TypeWhereUniqueInput!]\n  set: [TypeWhereUniqueInput!]\n  disconnect: [TypeWhereUniqueInput!]\n  update: [TypeUpdateWithWhereUniqueWithoutWeakWithInput!]\n  upsert: [TypeUpsertWithWhereUniqueWithoutWeakWithInput!]\n  deleteMany: [TypeScalarWhereInput!]\n  updateMany: [TypeUpdateManyWithWhereNestedInput!]\n}\n\ninput TypeUpdateManyWithWhereNestedInput {\n  where: TypeScalarWhereInput!\n  data: TypeUpdateManyDataInput!\n}\n\ninput TypeUpdateWithoutPokemonsDataInput {\n  name: String\n  strongWith: TypeUpdateManyWithoutStrongWithInput\n  weakWith: TypeUpdateManyWithoutWeakWithInput\n}\n\ninput TypeUpdateWithoutStrongWithDataInput {\n  name: String\n  weakWith: TypeUpdateManyWithoutWeakWithInput\n  pokemons: PokemonUpdateManyWithoutTypeInput\n}\n\ninput TypeUpdateWithoutWeakWithDataInput {\n  name: String\n  strongWith: TypeUpdateManyWithoutStrongWithInput\n  pokemons: PokemonUpdateManyWithoutTypeInput\n}\n\ninput TypeUpdateWithWhereUniqueWithoutPokemonsInput {\n  where: TypeWhereUniqueInput!\n  data: TypeUpdateWithoutPokemonsDataInput!\n}\n\ninput TypeUpdateWithWhereUniqueWithoutStrongWithInput {\n  where: TypeWhereUniqueInput!\n  data: TypeUpdateWithoutStrongWithDataInput!\n}\n\ninput TypeUpdateWithWhereUniqueWithoutWeakWithInput {\n  where: TypeWhereUniqueInput!\n  data: TypeUpdateWithoutWeakWithDataInput!\n}\n\ninput TypeUpsertWithWhereUniqueWithoutPokemonsInput {\n  where: TypeWhereUniqueInput!\n  update: TypeUpdateWithoutPokemonsDataInput!\n  create: TypeCreateWithoutPokemonsInput!\n}\n\ninput TypeUpsertWithWhereUniqueWithoutStrongWithInput {\n  where: TypeWhereUniqueInput!\n  update: TypeUpdateWithoutStrongWithDataInput!\n  create: TypeCreateWithoutStrongWithInput!\n}\n\ninput TypeUpsertWithWhereUniqueWithoutWeakWithInput {\n  where: TypeWhereUniqueInput!\n  update: TypeUpdateWithoutWeakWithDataInput!\n  create: TypeCreateWithoutWeakWithInput!\n}\n\ninput TypeWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  strongWith_every: TypeWhereInput\n  strongWith_some: TypeWhereInput\n  strongWith_none: TypeWhereInput\n  weakWith_every: TypeWhereInput\n  weakWith_some: TypeWhereInput\n  weakWith_none: TypeWhereInput\n  pokemons_every: PokemonWhereInput\n  pokemons_some: PokemonWhereInput\n  pokemons_none: PokemonWhereInput\n  AND: [TypeWhereInput!]\n  OR: [TypeWhereInput!]\n  NOT: [TypeWhereInput!]\n}\n\ninput TypeWhereUniqueInput {\n  id: ID\n  name: String\n}\n\ntype User {\n  id: ID!\n  name: String!\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n}\n\ninput UserUpdateInput {\n  name: String\n}\n\ninput UserUpdateManyMutationInput {\n  name: String\n}\n\ninput UserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 23,
      "containsCycle": true,
      "numDefinitions": 90
    }
  ],
  "metrics": {
    "created_at": "2019-04-14T20:00:43Z",
    "updated_at": "2019-04-15T06:19:03Z",
    "pushed_at": "2019-04-15T06:19:02Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "bsd-3-clause",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}