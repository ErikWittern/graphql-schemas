{
  "repo_name": "graphql-server-boilerplate",
  "repo_full_name": "najens/graphql-server-boilerplate",
  "repo_owner": "najens",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "src/schema.graphql",
      "sha": "3c0974f62418e68b96c8be5304604bac7f7f2c02",
      "url": "https://api.github.com/repositories/180639362/contents/src/schema.graphql?ref=8e3552e618a2b2ffe2d98486eef5cf1b989b4c52",
      "git_url": "https://api.github.com/repositories/180639362/git/blobs/3c0974f62418e68b96c8be5304604bac7f7f2c02",
      "html_url": "https://github.com/najens/graphql-server-boilerplate/blob/8e3552e618a2b2ffe2d98486eef5cf1b989b4c52/src/schema.graphql",
      "content": "# Data Types\n# ------------------------------------------------------------------------------------\ntype Post {\n  id: ID!\n  published: Boolean!\n  title: String!\n  content: String!\n  author: User!\n}\n\ntype User {\n  id: ID!\n  email: String!\n  emailVerified: Boolean!\n  # emailVerifiedToken: String\n  firstName: String!\n  lastName: String!\n  # resetToken: String\n  resetTokenExpires: Float\n  name: String\n  posts: [Post!]!\n}\n\ntype AuthPayload {\n  token: String!\n  user: User!\n}\n\ntype SuccessMessage {\n  message: String\n}\n\n# Queries that are accepted\n# ------------------------------------------------------------------------------------\ntype Query {\n  # Posts\n  post(id: ID!): Post\n  listPosts: [Post!]!\n  listDraftPosts: [Post!]!\n\n  # Users\n  me: User\n}\n\n# Mutations that are accepted\n# ------------------------------------------------------------------------------------\ntype Mutation {\n  # Posts\n  createDraft(title: String!, content: String!): Post!\n  publish(id: ID!): Post!\n  deletePost(id: ID!): Post!\n  \n  # User\n  signup(email: String!, password: String!, firstName: String!, lastName: String!): AuthPayload!\n  login(email: String!, password: String!): AuthPayload!\n  forgotPassword(email: String!): SuccessMessage\n  resetPassword(resetToken: String!, password: String!): AuthPayload!\n  updateUser(email: String, password: String, firstName: String, lastName: String): User!\n  verifyEmail(emailVerifiedToken: String!): User!\n}\n\n# Subscriptions that are accepts\n# ------------------------------------------------------------------------------------\ntype Subscription {\n  # Posts\n  feedSubscription: Post\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 7
    }
  ],
  "metrics": {
    "created_at": "2019-04-10T18:19:52Z",
    "updated_at": "2019-04-10T18:30:13Z",
    "pushed_at": "2019-04-10T18:30:11Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}