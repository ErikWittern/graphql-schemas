{
  "repo_name": "node-prisma-react-simple-app",
  "repo_full_name": "jdguzmans/node-prisma-react-simple-app",
  "repo_owner": "jdguzmans",
  "repo_description": "Simple web application using Prisma over Postgres, NodeJS and ReactJS",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "backend/src/generated/prisma.graphql",
      "sha": "31ccdf624a3696ddfde7867f6521ca9fbb18dc5f",
      "url": "https://api.github.com/repositories/144426723/contents/backend/src/generated/prisma.graphql?ref=63662fa448c79cde10776bf4bd01ee3c34c7b5a3",
      "git_url": "https://api.github.com/repositories/144426723/git/blobs/31ccdf624a3696ddfde7867f6521ca9fbb18dc5f",
      "html_url": "https://github.com/jdguzmans/node-prisma-react-simple-app/blob/63662fa448c79cde10776bf4bd01ee3c34c7b5a3/backend/src/generated/prisma.graphql",
      "content": "# source: http://localhost:4466\n# timestamp: Wed Aug 15 2018 00:46:46 GMT-0500 (-05)\n\ntype AggregateEvent {\n  count: Int!\n}\n\ntype AggregateEventCategory {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\ntype Event implements Node {\n  id: ID!\n  category(where: EventCategoryWhereInput): EventCategory!\n  user(where: UserWhereInput): User!\n  place: String!\n  address: String!\n  startDate: Int!\n  finishDate: Int!\n  isVirtual: Boolean!\n}\n\ntype EventCategory implements Node {\n  id: ID!\n  name: String!\n  color: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype EventCategoryConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [EventCategoryEdge]!\n  aggregate: AggregateEventCategory!\n}\n\ninput EventCategoryCreateInput {\n  name: String!\n  color: String!\n}\n\ninput EventCategoryCreateOneInput {\n  create: EventCategoryCreateInput\n  connect: EventCategoryWhereUniqueInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype EventCategoryEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: EventCategory!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum EventCategoryOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  color_ASC\n  color_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype EventCategoryPreviousValues {\n  id: ID!\n  name: String!\n  color: String!\n}\n\ntype EventCategorySubscriptionPayload {\n  mutation: MutationType!\n  node: EventCategory\n  updatedFields: [String!]\n  previousValues: EventCategoryPreviousValues\n}\n\ninput EventCategorySubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [EventCategorySubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [EventCategorySubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [EventCategorySubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: EventCategoryWhereInput\n}\n\ninput EventCategoryUpdateDataInput {\n  name: String\n  color: String\n}\n\ninput EventCategoryUpdateInput {\n  name: String\n  color: String\n}\n\ninput EventCategoryUpdateOneInput {\n  create: EventCategoryCreateInput\n  connect: EventCategoryWhereUniqueInput\n  delete: Boolean\n  update: EventCategoryUpdateDataInput\n  upsert: EventCategoryUpsertNestedInput\n}\n\ninput EventCategoryUpsertNestedInput {\n  update: EventCategoryUpdateDataInput!\n  create: EventCategoryCreateInput!\n}\n\ninput EventCategoryWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [EventCategoryWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [EventCategoryWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [EventCategoryWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  color: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  color_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  color_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  color_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  color_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  color_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  color_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  color_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  color_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  color_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  color_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  color_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  color_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  color_not_ends_with: String\n}\n\ninput EventCategoryWhereUniqueInput {\n  id: ID\n  name: String\n  color: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype EventConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [EventEdge]!\n  aggregate: AggregateEvent!\n}\n\ninput EventCreateInput {\n  place: String!\n  address: String!\n  startDate: Int!\n  finishDate: Int!\n  isVirtual: Boolean!\n  category: EventCategoryCreateOneInput!\n  user: UserCreateOneWithoutEventsInput!\n}\n\ninput EventCreateManyWithoutUserInput {\n  create: [EventCreateWithoutUserInput!]\n  connect: [EventWhereUniqueInput!]\n}\n\ninput EventCreateWithoutUserInput {\n  place: String!\n  address: String!\n  startDate: Int!\n  finishDate: Int!\n  isVirtual: Boolean!\n  category: EventCategoryCreateOneInput!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype EventEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Event!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum EventOrderByInput {\n  id_ASC\n  id_DESC\n  place_ASC\n  place_DESC\n  address_ASC\n  address_DESC\n  startDate_ASC\n  startDate_DESC\n  finishDate_ASC\n  finishDate_DESC\n  isVirtual_ASC\n  isVirtual_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype EventPreviousValues {\n  id: ID!\n  place: String!\n  address: String!\n  startDate: Int!\n  finishDate: Int!\n  isVirtual: Boolean!\n}\n\ntype EventSubscriptionPayload {\n  mutation: MutationType!\n  node: Event\n  updatedFields: [String!]\n  previousValues: EventPreviousValues\n}\n\ninput EventSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [EventSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [EventSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [EventSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: EventWhereInput\n}\n\ninput EventUpdateInput {\n  place: String\n  address: String\n  startDate: Int\n  finishDate: Int\n  isVirtual: Boolean\n  category: EventCategoryUpdateOneInput\n  user: UserUpdateOneWithoutEventsInput\n}\n\ninput EventUpdateManyWithoutUserInput {\n  create: [EventCreateWithoutUserInput!]\n  connect: [EventWhereUniqueInput!]\n  disconnect: [EventWhereUniqueInput!]\n  delete: [EventWhereUniqueInput!]\n  update: [EventUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [EventUpsertWithWhereUniqueWithoutUserInput!]\n}\n\ninput EventUpdateWithoutUserDataInput {\n  place: String\n  address: String\n  startDate: Int\n  finishDate: Int\n  isVirtual: Boolean\n  category: EventCategoryUpdateOneInput\n}\n\ninput EventUpdateWithWhereUniqueWithoutUserInput {\n  where: EventWhereUniqueInput!\n  data: EventUpdateWithoutUserDataInput!\n}\n\ninput EventUpsertWithWhereUniqueWithoutUserInput {\n  where: EventWhereUniqueInput!\n  update: EventUpdateWithoutUserDataInput!\n  create: EventCreateWithoutUserInput!\n}\n\ninput EventWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [EventWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [EventWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [EventWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  place: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  place_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  place_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  place_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  place_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  place_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  place_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  place_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  place_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  place_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  place_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  place_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  place_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  place_not_ends_with: String\n  address: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  address_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  address_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  address_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  address_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  address_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  address_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  address_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  address_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  address_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  address_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  address_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  address_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  address_not_ends_with: String\n  startDate: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  startDate_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  startDate_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  startDate_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  startDate_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  startDate_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  startDate_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  startDate_gte: Int\n  finishDate: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  finishDate_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  finishDate_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  finishDate_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  finishDate_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  finishDate_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  finishDate_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  finishDate_gte: Int\n  isVirtual: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  isVirtual_not: Boolean\n  category: EventCategoryWhereInput\n  user: UserWhereInput\n}\n\ninput EventWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  createEvent(data: EventCreateInput!): Event!\n  createEventCategory(data: EventCategoryCreateInput!): EventCategory!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateEvent(data: EventUpdateInput!, where: EventWhereUniqueInput!): Event\n  updateEventCategory(data: EventCategoryUpdateInput!, where: EventCategoryWhereUniqueInput!): EventCategory\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteEvent(where: EventWhereUniqueInput!): Event\n  deleteEventCategory(where: EventCategoryWhereUniqueInput!): EventCategory\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertEvent(where: EventWhereUniqueInput!, create: EventCreateInput!, update: EventUpdateInput!): Event!\n  upsertEventCategory(where: EventCategoryWhereUniqueInput!, create: EventCategoryCreateInput!, update: EventCategoryUpdateInput!): EventCategory!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  updateManyEvents(data: EventUpdateInput!, where: EventWhereInput): BatchPayload!\n  updateManyEventCategories(data: EventCategoryUpdateInput!, where: EventCategoryWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyEvents(where: EventWhereInput): BatchPayload!\n  deleteManyEventCategories(where: EventCategoryWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event]!\n  eventCategories(where: EventCategoryWhereInput, orderBy: EventCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EventCategory]!\n  user(where: UserWhereUniqueInput!): User\n  event(where: EventWhereUniqueInput!): Event\n  eventCategory(where: EventCategoryWhereUniqueInput!): EventCategory\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  eventsConnection(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EventConnection!\n  eventCategoriesConnection(where: EventCategoryWhereInput, orderBy: EventCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EventCategoryConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  event(where: EventSubscriptionWhereInput): EventSubscriptionPayload\n  eventCategory(where: EventCategorySubscriptionWhereInput): EventCategorySubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  email: String!\n  hash: String!\n  salt: String!\n  events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  hash: String!\n  salt: String!\n  events: EventCreateManyWithoutUserInput\n}\n\ninput UserCreateOneWithoutEventsInput {\n  create: UserCreateWithoutEventsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutEventsInput {\n  email: String!\n  hash: String!\n  salt: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  hash_ASC\n  hash_DESC\n  salt_ASC\n  salt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  hash: String!\n  salt: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  email: String\n  hash: String\n  salt: String\n  events: EventUpdateManyWithoutUserInput\n}\n\ninput UserUpdateOneWithoutEventsInput {\n  create: UserCreateWithoutEventsInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutEventsDataInput\n  upsert: UserUpsertWithoutEventsInput\n}\n\ninput UserUpdateWithoutEventsDataInput {\n  email: String\n  hash: String\n  salt: String\n}\n\ninput UserUpsertWithoutEventsInput {\n  update: UserUpdateWithoutEventsDataInput!\n  create: UserCreateWithoutEventsInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  email: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  email_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  email_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  email_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  email_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  email_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  email_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  email_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  email_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  email_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  email_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  email_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  email_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  email_not_ends_with: String\n  hash: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  hash_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  hash_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  hash_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  hash_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  hash_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  hash_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  hash_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  hash_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  hash_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  hash_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  hash_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  hash_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  hash_not_ends_with: String\n  salt: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  salt_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  salt_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  salt_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  salt_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  salt_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  salt_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  salt_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  salt_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  salt_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  salt_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  salt_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  salt_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  salt_not_ends_with: String\n  events_every: EventWhereInput\n  events_some: EventWhereInput\n  events_none: EventWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 23,
      "containsCycle": true,
      "numDefinitions": 59
    }
  ],
  "metrics": {
    "created_at": "2018-08-12T00:22:59Z",
    "updated_at": "2018-08-17T04:02:33Z",
    "pushed_at": "2018-08-17T04:02:32Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}