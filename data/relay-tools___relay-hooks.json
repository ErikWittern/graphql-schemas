{
  "repo_name": "relay-hooks",
  "repo_full_name": "relay-tools/relay-hooks",
  "repo_owner": "relay-tools",
  "repo_description": "Use Relay as React hooks",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "examples/relay-example/todo/data/schema.graphql",
      "sha": "c3306a18aad827f8331b2c1f72c13bec9d089940",
      "url": "https://api.github.com/repositories/187370162/contents/examples/relay-example/todo/data/schema.graphql?ref=f6429a5749c5626005b6a2a873a610eb038b2278",
      "git_url": "https://api.github.com/repositories/187370162/git/blobs/c3306a18aad827f8331b2c1f72c13bec9d089940",
      "html_url": "https://github.com/relay-tools/relay-hooks/blob/f6429a5749c5626005b6a2a873a610eb038b2278/examples/relay-example/todo/data/schema.graphql",
      "content": "input AddTodoInput {\n  text: String!\n  userId: ID!\n  clientMutationId: String\n}\n\ntype AddTodoPayload {\n  todoEdge: TodoEdge!\n  user: User!\n  clientMutationId: String\n}\n\ninput ChangeTodoStatusInput {\n  complete: Boolean!\n  id: ID!\n  userId: ID!\n  clientMutationId: String\n}\n\ntype ChangeTodoStatusPayload {\n  todo: Todo!\n  user: User!\n  clientMutationId: String\n}\n\ninput MarkAllTodosInput {\n  complete: Boolean!\n  userId: ID!\n  clientMutationId: String\n}\n\ntype MarkAllTodosPayload {\n  changedTodos: [Todo!]\n  user: User!\n  clientMutationId: String\n}\n\ntype Mutation {\n  addTodo(input: AddTodoInput!): AddTodoPayload\n  changeTodoStatus(input: ChangeTodoStatusInput!): ChangeTodoStatusPayload\n  markAllTodos(input: MarkAllTodosInput!): MarkAllTodosPayload\n  removeCompletedTodos(input: RemoveCompletedTodosInput!): RemoveCompletedTodosPayload\n  removeTodo(input: RemoveTodoInput!): RemoveTodoPayload\n  renameTodo(input: RenameTodoInput!): RenameTodoPayload\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  user(id: String): User\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ninput RemoveCompletedTodosInput {\n  userId: ID!\n  clientMutationId: String\n}\n\ntype RemoveCompletedTodosPayload {\n  deletedTodoIds: [String!]\n  user: User!\n  clientMutationId: String\n}\n\ninput RemoveTodoInput {\n  id: ID!\n  userId: ID!\n  clientMutationId: String\n}\n\ntype RemoveTodoPayload {\n  deletedTodoId: ID!\n  user: User!\n  clientMutationId: String\n}\n\ninput RenameTodoInput {\n  id: ID!\n  text: String!\n  clientMutationId: String\n}\n\ntype RenameTodoPayload {\n  todo: Todo!\n  clientMutationId: String\n}\n\ntype Todo implements Node {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  text: String!\n  complete: Boolean!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TodoConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TodoEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TodoEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Todo\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype User implements Node {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  userId: String!\n  todos(status: String = \"any\", after: String, first: Int, before: String, last: Int): TodoConnection\n  totalCount: Int!\n  completedCount: Int!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 20
    },
    {
      "name": "schema.graphql",
      "path": "examples/relay-hook-example/todo/data/schema.graphql",
      "sha": "c3306a18aad827f8331b2c1f72c13bec9d089940",
      "url": "https://api.github.com/repositories/187370162/contents/examples/relay-hook-example/todo/data/schema.graphql?ref=17de6921638a471125d9388fd58462d4274d2fad",
      "git_url": "https://api.github.com/repositories/187370162/git/blobs/c3306a18aad827f8331b2c1f72c13bec9d089940",
      "html_url": "https://github.com/relay-tools/relay-hooks/blob/17de6921638a471125d9388fd58462d4274d2fad/examples/relay-hook-example/todo/data/schema.graphql",
      "content": "input AddTodoInput {\n  text: String!\n  userId: ID!\n  clientMutationId: String\n}\n\ntype AddTodoPayload {\n  todoEdge: TodoEdge!\n  user: User!\n  clientMutationId: String\n}\n\ninput ChangeTodoStatusInput {\n  complete: Boolean!\n  id: ID!\n  userId: ID!\n  clientMutationId: String\n}\n\ntype ChangeTodoStatusPayload {\n  todo: Todo!\n  user: User!\n  clientMutationId: String\n}\n\ninput MarkAllTodosInput {\n  complete: Boolean!\n  userId: ID!\n  clientMutationId: String\n}\n\ntype MarkAllTodosPayload {\n  changedTodos: [Todo!]\n  user: User!\n  clientMutationId: String\n}\n\ntype Mutation {\n  addTodo(input: AddTodoInput!): AddTodoPayload\n  changeTodoStatus(input: ChangeTodoStatusInput!): ChangeTodoStatusPayload\n  markAllTodos(input: MarkAllTodosInput!): MarkAllTodosPayload\n  removeCompletedTodos(input: RemoveCompletedTodosInput!): RemoveCompletedTodosPayload\n  removeTodo(input: RemoveTodoInput!): RemoveTodoPayload\n  renameTodo(input: RenameTodoInput!): RenameTodoPayload\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  user(id: String): User\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ninput RemoveCompletedTodosInput {\n  userId: ID!\n  clientMutationId: String\n}\n\ntype RemoveCompletedTodosPayload {\n  deletedTodoIds: [String!]\n  user: User!\n  clientMutationId: String\n}\n\ninput RemoveTodoInput {\n  id: ID!\n  userId: ID!\n  clientMutationId: String\n}\n\ntype RemoveTodoPayload {\n  deletedTodoId: ID!\n  user: User!\n  clientMutationId: String\n}\n\ninput RenameTodoInput {\n  id: ID!\n  text: String!\n  clientMutationId: String\n}\n\ntype RenameTodoPayload {\n  todo: Todo!\n  clientMutationId: String\n}\n\ntype Todo implements Node {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  text: String!\n  complete: Boolean!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TodoConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TodoEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TodoEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Todo\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype User implements Node {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  userId: String!\n  todos(status: String = \"any\", after: String, first: Int, before: String, last: Int): TodoConnection\n  totalCount: Int!\n  completedCount: Int!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 20
    }
  ],
  "metrics": {
    "created_at": "2019-05-18T14:51:09Z",
    "updated_at": "2019-07-19T17:37:50Z",
    "pushed_at": "2019-07-19T16:51:17Z",
    "issues": 11,
    "watchers": 12,
    "fork_count": 5,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 8,
    "pull_requests_open": 1,
    "pull_requests_closed": 0,
    "pull_requests_merged": 7,
    "releases": 7,
    "stargazers": 91
  }
}