{
  "repo_name": "graphql-authz",
  "repo_full_name": "apigee/graphql-authz",
  "repo_owner": "apigee",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "forum-without-scopes.graphql",
      "path": "tests/data/forum-without-scopes.graphql",
      "sha": "686aa17cf9295d6f04055c8f05f44e4fd81b0c3a",
      "url": "https://api.github.com/repositories/176845908/contents/tests/data/forum-without-scopes.graphql?ref=00d8e5ed661eb10e61762d9e338ca337a88d89b7",
      "git_url": "https://api.github.com/repositories/176845908/git/blobs/686aa17cf9295d6f04055c8f05f44e4fd81b0c3a",
      "html_url": "https://github.com/apigee/graphql-authz/blob/00d8e5ed661eb10e61762d9e338ca337a88d89b7/tests/data/forum-without-scopes.graphql",
      "content": "# sample schema from Apollo Server (https://www.apollographql.com/docs/graphql-tools/generate-schema.html)\n\ntype Author {\n    id: Int!\n    firstName: String\n    lastName: String\n    \"\"\"\n    the list of Posts by this author\n    \"\"\"\n    posts: [Post]\n}\n\ntype Post {\n    id: Int!\n    title: String\n    author: Author\n    votes: Int\n}\n\n# the schema allows the following query:\ntype Query {\n    posts: [Post]\n    author(id: Int!): Author\n}\n\n# this schema allows the following mutation:\ntype Mutation {\n    upvotePost (\n        postId: Int!\n    ): Post\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 4
    }
  ],
  "metrics": {
    "created_at": "2019-03-21T01:32:08Z",
    "updated_at": "2019-07-16T18:34:51Z",
    "pushed_at": "2019-03-22T22:50:40Z",
    "issues": 0,
    "watchers": 3,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "apache-2.0",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 6
  }
}