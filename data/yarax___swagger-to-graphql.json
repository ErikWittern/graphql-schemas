{
  "repo_name": "swagger-to-graphql",
  "repo_full_name": "yarax/swagger-to-graphql",
  "repo_owner": "yarax",
  "repo_description": "Swagger to GraphQL API adapter",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "simple.graphql",
      "path": "test/fixtures/simple.graphql",
      "sha": "a8e902b5c7c6404807360bc153336982f95603c7",
      "url": "https://api.github.com/repositories/70322562/contents/test/fixtures/simple.graphql?ref=98062e36528edeea430a8822b876c74168efc10a",
      "git_url": "https://api.github.com/repositories/70322562/git/blobs/a8e902b5c7c6404807360bc153336982f95603c7",
      "html_url": "https://github.com/yarax/swagger-to-graphql/blob/98062e36528edeea430a8822b876c74168efc10a/test/fixtures/simple.graphql",
      "content": "type get_mock_path_response {\n  result: String!\n}\n\ntype Query {\n  get_mock_path: get_mock_path_response!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 2,
      "containsCycle": false,
      "polynomialLevel": 0,
      "numDefinitions": 2
    },
    {
      "name": "special-parameters.graphql",
      "path": "test/fixtures/special-parameters.graphql",
      "sha": "5f7e746225b9456cbc560cb0f1743b0728b59110",
      "url": "https://api.github.com/repositories/70322562/contents/test/fixtures/special-parameters.graphql?ref=a3d3b1b98fa2926f71357c093d531b308d559f4e",
      "git_url": "https://api.github.com/repositories/70322562/git/blobs/5f7e746225b9456cbc560cb0f1743b0728b59110",
      "html_url": "https://github.com/yarax/swagger-to-graphql/blob/a3d3b1b98fa2926f71357c093d531b308d559f4e/test/fixtures/special-parameters.graphql",
      "content": "type Query {\n  get_path_dashed_path_param(dashed_request_header: String, dashed_query_param: String, dashed_path_param: String!): Response!\n}\n\ntype Response {\n  result: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 2,
      "containsCycle": false,
      "polynomialLevel": 0,
      "numDefinitions": 2
    },
    {
      "name": "petstore.graphql",
      "path": "test/fixtures/petstore.graphql",
      "sha": "4222b83143be648dfa161fd6e6cab42e3e47ad60",
      "url": "https://api.github.com/repositories/70322562/contents/test/fixtures/petstore.graphql?ref=98062e36528edeea430a8822b876c74168efc10a",
      "git_url": "https://api.github.com/repositories/70322562/git/blobs/4222b83143be648dfa161fd6e6cab42e3e47ad60",
      "html_url": "https://github.com/yarax/swagger-to-graphql/blob/98062e36528edeea430a8822b876c74168efc10a/test/fixtures/petstore.graphql",
      "content": "type Category {\n  id: String\n  name: String\n}\n\ninput CategoryInput {\n  id: String\n  name: String\n}\n\ntype getInventory_response {\n  \"\"\"default field\"\"\"\n  empty: String\n}\n\ntype Mutation {\n  addPet(body: PetInput!): String!\n  updatePet(body: PetInput!): String!\n  updatePetWithForm(petId: String!, name: String, status: String): String!\n  deletePet(api_key: String, petId: String!): String!\n  placeOrder(body: OrderInput!): Order!\n\n  \"\"\"\n  For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors\n  \"\"\"\n  deleteOrder(orderId: String!): String!\n\n  \"\"\"This can only be done by the logged in user.\"\"\"\n  createUser(body: UserInput!): String!\n  createUsersWithArrayInput(body: [UserInput!]!): String!\n  createUsersWithListInput(body: [UserInput!]!): String!\n\n  \"\"\"This can only be done by the logged in user.\"\"\"\n  updateUser(username: String!, body: UserInput!): String!\n\n  \"\"\"This can only be done by the logged in user.\"\"\"\n  deleteUser(username: String!): String!\n}\n\ntype Order {\n  id: String\n  petId: String\n  quantity: Int\n  shipDate: String\n\n  \"\"\"Order Status\"\"\"\n  status: String\n  complete: Boolean\n}\n\ninput OrderInput {\n  id: String\n  petId: String\n  quantity: Int\n  shipDate: String\n\n  \"\"\"Order Status\"\"\"\n  status: String\n  complete: Boolean\n}\n\ntype Pet {\n  id: String\n  category: Category\n  name: String!\n  photoUrls: [String!]!\n  tags: [Tag!]\n\n  \"\"\"pet status in the store\"\"\"\n  status: String\n}\n\ninput PetInput {\n  id: String\n  category: CategoryInput\n  name: String!\n  photoUrls: [String!]!\n  tags: [TagInput!]\n\n  \"\"\"pet status in the store\"\"\"\n  status: String\n}\n\ntype Query {\n  \"\"\"Multiple status values can be provided with comma separated strings\"\"\"\n  findPetsByStatus(status: [String!]!): [Pet!]!\n\n  \"\"\"\n  Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\n  \"\"\"\n  findPetsByTags(tags: [String!]!): [Pet!]!\n\n  \"\"\"Returns a single pet\"\"\"\n  getPetById(petId: String!): Pet!\n\n  \"\"\"Returns a map of status codes to quantities\"\"\"\n  getInventory: getInventory_response!\n\n  \"\"\"\n  For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions\n  \"\"\"\n  getOrderById(orderId: String!): Order!\n  loginUser(username: String!, password: String!): String!\n  logoutUser: String!\n  getUserByName(username: String!): User!\n}\n\ntype Tag {\n  id: String\n  name: String\n}\n\ninput TagInput {\n  id: String\n  name: String\n}\n\ntype User {\n  id: String\n  username: String\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  phone: String\n\n  \"\"\"User Status\"\"\"\n  userStatus: Int\n}\n\ninput UserInput {\n  id: String\n  username: String\n  firstName: String\n  lastName: String\n  email: String\n  password: String\n  phone: String\n\n  \"\"\"User Status\"\"\"\n  userStatus: Int\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 8,
      "containsCycle": false,
      "polynomialLevel": 2,
      "numDefinitions": 13
    },
    {
      "name": "deep-nested.graphql",
      "path": "test/fixtures/deep-nested.graphql",
      "sha": "ad120363c9b1d0dc6a8db27b65f8638dc29f92d2",
      "url": "https://api.github.com/repositories/70322562/contents/test/fixtures/deep-nested.graphql?ref=9fe4d28ba48cc5affd5d68a089a63826173dc610",
      "git_url": "https://api.github.com/repositories/70322562/git/blobs/ad120363c9b1d0dc6a8db27b65f8638dc29f92d2",
      "html_url": "https://github.com/yarax/swagger-to-graphql/blob/9fe4d28ba48cc5affd5d68a089a63826173dc610/test/fixtures/deep-nested.graphql",
      "content": "type DeepStructure {\n  id: String!\n  body: DeepStructure_body!\n}\n\ntype DeepStructure_body {\n  url: DeepStructure_body_url!\n  images: [String!]!\n  version: String!\n}\n\ntype DeepStructure_body_url {\n  protocol: String\n  baseURL: String\n}\n\ntype Query {\n  get_test: [DeepStructure!]!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 4,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 4
    },
    {
      "name": "circular.graphql",
      "path": "test/fixtures/circular.graphql",
      "sha": "ff2b120787e9e1137e97adc773d6ce0f42a7fc6a",
      "url": "https://api.github.com/repositories/70322562/contents/test/fixtures/circular.graphql?ref=844ee6c12e97ea374d3758c37c5c236e38613dd3",
      "git_url": "https://api.github.com/repositories/70322562/git/blobs/ff2b120787e9e1137e97adc773d6ce0f42a7fc6a",
      "html_url": "https://github.com/yarax/swagger-to-graphql/blob/844ee6c12e97ea374d3758c37c5c236e38613dd3/test/fixtures/circular.graphql",
      "content": "type Circular {\n  name: String\n  reference: Circular\n}\n\ninput CircularInput {\n  name: String\n  reference: CircularInput\n}\n\ntype Mutation {\n  \"\"\"Updates a circular structure\"\"\"\n  patch_swagger_graphql_circular(body: CircularInput): [Circular!]!\n}\n\ntype Query {\n  \"\"\"A retrieves a circular structure\"\"\"\n  get_swagger_graphql_circular: [Circular!]!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 3,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 4
    },
    {
      "name": "return-scalar.graphql",
      "path": "test/fixtures/return-scalar.graphql",
      "sha": "d5cc783df02442a176a66d851335dcc850613229",
      "url": "https://api.github.com/repositories/70322562/contents/test/fixtures/return-scalar.graphql?ref=98062e36528edeea430a8822b876c74168efc10a",
      "git_url": "https://api.github.com/repositories/70322562/git/blobs/d5cc783df02442a176a66d851335dcc850613229",
      "html_url": "https://github.com/yarax/swagger-to-graphql/blob/98062e36528edeea430a8822b876c74168efc10a/test/fixtures/return-scalar.graphql",
      "content": "type Query {\n  get_mock_path: String!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 1
    },
    {
      "name": "parameter-for-all-methods.graphql",
      "path": "test/fixtures/parameter-for-all-methods.graphql",
      "sha": "4e4fc6a39a8782269af841a26aa799014e40274b",
      "url": "https://api.github.com/repositories/70322562/contents/test/fixtures/parameter-for-all-methods.graphql?ref=98062e36528edeea430a8822b876c74168efc10a",
      "git_url": "https://api.github.com/repositories/70322562/git/blobs/4e4fc6a39a8782269af841a26aa799014e40274b",
      "html_url": "https://github.com/yarax/swagger-to-graphql/blob/98062e36528edeea430a8822b876c74168efc10a/test/fixtures/parameter-for-all-methods.graphql",
      "content": "type Query {\n  get_mock_path(id: String!): String!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 1
    }
  ],
  "metrics": {
    "created_at": "2016-10-08T10:06:22Z",
    "updated_at": "2019-07-19T13:29:26Z",
    "pushed_at": "2019-07-14T13:57:07Z",
    "issues": 78,
    "watchers": 22,
    "fork_count": 105,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 59,
    "pull_requests_open": 1,
    "pull_requests_closed": 18,
    "pull_requests_merged": 40,
    "releases": 4,
    "stargazers": 563
  }
}