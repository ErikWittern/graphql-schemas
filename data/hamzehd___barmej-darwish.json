{
  "repo_name": "barmej-darwish",
  "repo_full_name": "hamzehd/barmej-darwish",
  "repo_owner": "hamzehd",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "server/data/schema.graphql",
      "sha": "47f4cfd7f1e0c5572fb1810fd24f9114aaec383f",
      "url": "https://api.github.com/repositories/73280263/contents/server/data/schema.graphql?ref=2b5e76029596fb4427390dc39f8746be39949b64",
      "git_url": "https://api.github.com/repositories/73280263/git/blobs/47f4cfd7f1e0c5572fb1810fd24f9114aaec383f",
      "html_url": "https://github.com/hamzehd/barmej-darwish/blob/2b5e76029596fb4427390dc39f8746be39949b64/server/data/schema.graphql",
      "content": "input AddFeatureInput {\n  name: String!\n  description: String!\n  url: String!\n  clientMutationId: String\n}\n\ntype AddFeaturePayload {\n  featureEdge: FeatureEdge\n  viewer: User\n  clientMutationId: String\n}\n\ninput AddHtmlCourseInput {\n  first_block: String!\n  second_block: String!\n  third_block: String!\n  clientMutationId: String\n}\n\ntype AddHtmlCoursePayload {\n  Edge: htmlPageEdge\n  viewer: User\n  clientMutationId: String\n}\n\n# Feature integrated in our starter kit\ntype Feature implements Node {\n  # The ID of an object\n  id: ID!\n\n  # Name of the feature\n  name: String\n\n  # Description of the feature\n  description: String\n\n  # Url of the feature\n  url: String\n}\n\n# A connection to a list of items.\ntype FeatureConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [FeatureEdge]\n}\n\n# An edge in a connection.\ntype FeatureEdge {\n  # The item at the end of the edge\n  node: Feature\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\n# htmlPage and its content\ntype htmlPage implements Node {\n  # The ID of an object\n  id: ID!\n\n  # First Block of Text\n  first_block: String\n\n  # Second Block of Text\n  second_block: String\n\n  # Third Block of Text\n  third_block: String\n}\n\n# A connection to a list of items.\ntype htmlPageConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [htmlPageEdge]\n}\n\n# An edge in a connection.\ntype htmlPageEdge {\n  # The item at the end of the edge\n  node: htmlPage\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\ntype Mutation {\n  addFeature(input: AddFeatureInput!): AddFeaturePayload\n  addHtmlCourseMutation(input: AddHtmlCourseInput!): AddHtmlCoursePayload\n}\n\n# An object with an ID\ninterface Node {\n  # The id of the object.\n  id: ID!\n}\n\n# Information about pagination in a connection.\ntype PageInfo {\n  # When paginating forwards, are there more items?\n  hasNextPage: Boolean!\n\n  # When paginating backwards, are there more items?\n  hasPreviousPage: Boolean!\n\n  # When paginating backwards, the cursor to continue.\n  startCursor: String\n\n  # When paginating forwards, the cursor to continue.\n  endCursor: String\n}\n\ntype Query {\n  # Fetches an object given its ID\n  node(\n    # The ID of an object\n    id: ID!\n  ): Node\n  viewer: User\n}\n\n# A person who uses our app\ntype User implements Node {\n  # The ID of an object\n  id: ID!\n\n  # Features that I have\n  features(after: String, first: Int, before: String, last: Int): FeatureConnection\n\n  # htmlPages that I have\n  htmlPages(after: String, first: Int, before: String, last: Int): htmlPageConnection\n\n  # Users's username\n  username: String\n\n  # User's website\n  website: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 12,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 15
    }
  ],
  "metrics": {
    "created_at": "2016-11-09T11:59:05Z",
    "updated_at": "2019-05-26T15:29:37Z",
    "pushed_at": "2016-11-09T12:08:30Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 1
  }
}