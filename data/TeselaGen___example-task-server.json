{
  "repo_name": "example-task-server",
  "repo_full_name": "teselagen/example-task-server",
  "repo_owner": "TeselaGen",
  "repo_description": "Example server showing how to use the microservice task framework",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.gql",
      "path": "server/src/graphql/schema/schema.gql",
      "sha": "2c0ab0bd4b212c36d2e1aacb74d01ec82167bb51",
      "url": "https://api.github.com/repositories/158478371/contents/server/src/graphql/schema/schema.gql?ref=29b4d00386a762f0639097497077bfe4003a0770",
      "git_url": "https://api.github.com/repositories/158478371/git/blobs/2c0ab0bd4b212c36d2e1aacb74d01ec82167bb51",
      "html_url": "https://github.com/TeselaGen/example-task-server/blob/29b4d00386a762f0639097497077bfe4003a0770/server/src/graphql/schema/schema.gql",
      "content": " scalar JSON\n scalar Date\n scalar Number\n\n type typeUpdate {\n  code: String!\n  lastUpdated: Date\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n # Server generated property that indicates the last time this attribute was fetched \n  lastFetched: Date\n }\n\n type typeUpdateCursorResult {\n  results: [typeUpdate]\n  filter: JSON\n  sort: [String]\n  pageNumber: Int\n  pageSize: Int\n  totalResults: Int\n  lastFetched: Date\n  typeUpdates: [typeUpdate]\n }\n\n type createTypeUpdatePayload {\n  createdItemsCursor: typeUpdateCursorResult\n }\n\n type updateTypeUpdatePayload {\n  updatedItemsCursor: typeUpdateCursorResult\n }\n\n type updateTypeUpdatesWithQueryPayload {\n  updatedItemsCursor: typeUpdateCursorResult\n }\n\n type deleteTypeUpdatePayload {\n  deletedCount: Int\n  typeUpdates: [typeUpdate]\n }\n\n type deleteTypeUpdatesWithQueryPayload {\n  deletedCount: Int\n  typeUpdates: [typeUpdate]\n }\n\n type microserviceQueue {\n  authToken: String\n  checkInInterval: Number\n  controlToken: String\n  id: String!\n  input: JSON\n  lastCheckIn: Date\n  missedCheckInCount: Number\n  result: JSON\n  resultStatus: String\n  service: String\n  serviceUrl: String\n  startedOn: Date\n  status: String\n  taskId: String\n  trackingId: String\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n # Server generated property that indicates the last time this attribute was fetched \n  lastFetched: Date\n  microserviceIoFiles(filter: JSON, sort: [String], pageNumber: Int, pageSize: Int): [microserviceIoFile]\n # Returns a paginated cursor result of microserviceIoFiles instead of an Array \n  microserviceIoFilesCursor(filter: JSON, sort: [String], pageNumber: Int, pageSize: Int): microserviceIoFileCursorResult\n  microserviceQueueLogEntries(filter: JSON, sort: [String], pageNumber: Int, pageSize: Int): [microserviceQueueLogEntry]\n # Returns a paginated cursor result of microserviceQueueLogEntries instead of an Array \n  microserviceQueueLogEntriesCursor(filter: JSON, sort: [String], pageNumber: Int, pageSize: Int): microserviceQueueLogEntryCursorResult\n }\n\n type microserviceQueueCursorResult {\n  results: [microserviceQueue]\n  filter: JSON\n  sort: [String]\n  pageNumber: Int\n  pageSize: Int\n  totalResults: Int\n  lastFetched: Date\n  typeUpdates: [typeUpdate]\n }\n\n type createMicroserviceQueuePayload {\n  createdItemsCursor: microserviceQueueCursorResult\n }\n\n type updateMicroserviceQueuePayload {\n  updatedItemsCursor: microserviceQueueCursorResult\n }\n\n type updateMicroserviceQueuesWithQueryPayload {\n  updatedItemsCursor: microserviceQueueCursorResult\n }\n\n type deleteMicroserviceQueuePayload {\n  deletedCount: Int\n  typeUpdates: [typeUpdate]\n }\n\n type deleteMicroserviceQueuesWithQueryPayload {\n  deletedCount: Int\n  typeUpdates: [typeUpdate]\n }\n\n type microserviceQueueLogEntry {\n  channel: String\n  details: String\n  id: String!\n  level: String\n  message: String\n  metadata: JSON\n # Reference key for microserviceQueue \n  microserviceQueueId: String\n  microserviceQueue: microserviceQueue\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n # Server generated property that indicates the last time this attribute was fetched \n  lastFetched: Date\n }\n\n type microserviceQueueLogEntryCursorResult {\n  results: [microserviceQueueLogEntry]\n  filter: JSON\n  sort: [String]\n  pageNumber: Int\n  pageSize: Int\n  totalResults: Int\n  lastFetched: Date\n  typeUpdates: [typeUpdate]\n }\n\n type createMicroserviceQueueLogEntryPayload {\n  createdItemsCursor: microserviceQueueLogEntryCursorResult\n }\n\n type updateMicroserviceQueueLogEntryPayload {\n  updatedItemsCursor: microserviceQueueLogEntryCursorResult\n }\n\n type updateMicroserviceQueueLogEntriesWithQueryPayload {\n  updatedItemsCursor: microserviceQueueLogEntryCursorResult\n }\n\n type deleteMicroserviceQueueLogEntryPayload {\n  deletedCount: Int\n  typeUpdates: [typeUpdate]\n }\n\n type deleteMicroserviceQueueLogEntriesWithQueryPayload {\n  deletedCount: Int\n  typeUpdates: [typeUpdate]\n }\n\n type microserviceIoFile {\n  fileUrl: String\n  id: String!\n # Reference key for microserviceQueue \n  microserviceQueueId: String\n  microserviceQueue: microserviceQueue\n # Determines whether this is an input or output file \n  type: String\n  destinationPath: String\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n # Server generated property that indicates the last time this attribute was fetched \n  lastFetched: Date\n }\n\n type microserviceIoFileCursorResult {\n  results: [microserviceIoFile]\n  filter: JSON\n  sort: [String]\n  pageNumber: Int\n  pageSize: Int\n  totalResults: Int\n  lastFetched: Date\n  typeUpdates: [typeUpdate]\n }\n\n type createMicroserviceIoFilePayload {\n  createdItemsCursor: microserviceIoFileCursorResult\n }\n\n type updateMicroserviceIoFilePayload {\n  updatedItemsCursor: microserviceIoFileCursorResult\n }\n\n type updateMicroserviceIoFilesWithQueryPayload {\n  updatedItemsCursor: microserviceIoFileCursorResult\n }\n\n type deleteMicroserviceIoFilePayload {\n  deletedCount: Int\n  typeUpdates: [typeUpdate]\n }\n\n type deleteMicroserviceIoFilesWithQueryPayload {\n  deletedCount: Int\n  typeUpdates: [typeUpdate]\n }\n\n type user {\n  id: String!\n  username: String\n  firstName: String\n  lastName: String\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n # Server generated property that indicates the last time this attribute was fetched \n  lastFetched: Date\n }\n\n type userCursorResult {\n  results: [user]\n  filter: JSON\n  sort: [String]\n  pageNumber: Int\n  pageSize: Int\n  totalResults: Int\n  lastFetched: Date\n  typeUpdates: [typeUpdate]\n }\n\n type createUserPayload {\n  createdItemsCursor: userCursorResult\n }\n\n type updateUserPayload {\n  updatedItemsCursor: userCursorResult\n }\n\n type updateUsersWithQueryPayload {\n  updatedItemsCursor: userCursorResult\n }\n\n type deleteUserPayload {\n  deletedCount: Int\n  typeUpdates: [typeUpdate]\n }\n\n type deleteUsersWithQueryPayload {\n  deletedCount: Int\n  typeUpdates: [typeUpdate]\n }\n\n input createTypeUpdateInput {\n  code: String\n  lastUpdated: Date\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n  lastFetched: Date\n }\n\n input bulkCreatetypeUpdatesInput {\n  createItems: [createTypeUpdateInput]\n }\n\n input updateTypeUpdateInput {\n  code: String!\n  lastUpdated: Date\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n  lastFetched: Date\n }\n\n input updateTypeUpdateValuesInput {\n  lastUpdated: Date\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n  lastFetched: Date\n }\n\n input updateTypeUpdateQueryInput {\n  values: updateTypeUpdateValuesInput\n  where: JSON!\n }\n\n input updateTypeUpdatesWithQueryInput {\n  updateQueries: [updateTypeUpdateQueryInput]\n }\n\n input deleteTypeUpdateInput {\n  code: String!\n }\n\n input deleteTypeUpdatesWithQueryInput {\n  deleteQueries: [JSON]\n }\n\n input createMicroserviceQueueInput {\n  authToken: String\n  checkInInterval: Number\n  controlToken: String\n  id: String\n  input: JSON\n  lastCheckIn: Date\n  missedCheckInCount: Number\n  result: JSON\n  resultStatus: String\n  service: String\n  serviceUrl: String\n  startedOn: Date\n  status: String\n  taskId: String\n  trackingId: String\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n  lastFetched: Date\n  microserviceIoFiles: [createMicroserviceIoFileInput]\n  microserviceQueueLogEntries: [createMicroserviceQueueLogEntryInput]\n }\n\n input bulkCreatemicroserviceQueuesInput {\n  createItems: [createMicroserviceQueueInput]\n }\n\n input updateMicroserviceQueueInput {\n  authToken: String\n  checkInInterval: Number\n  controlToken: String\n  id: String!\n  input: JSON\n  lastCheckIn: Date\n  missedCheckInCount: Number\n  result: JSON\n  resultStatus: String\n  service: String\n  serviceUrl: String\n  startedOn: Date\n  status: String\n  taskId: String\n  trackingId: String\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n  lastFetched: Date\n  microserviceIoFiles: [updateMicroserviceIoFileInput]\n  microserviceQueueLogEntries: [updateMicroserviceQueueLogEntryInput]\n }\n\n input updateMicroserviceQueueValuesInput {\n  authToken: String\n  checkInInterval: Number\n  controlToken: String\n  input: JSON\n  lastCheckIn: Date\n  missedCheckInCount: Number\n  result: JSON\n  resultStatus: String\n  service: String\n  serviceUrl: String\n  startedOn: Date\n  status: String\n  taskId: String\n  trackingId: String\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n  lastFetched: Date\n }\n\n input updateMicroserviceQueueQueryInput {\n  values: updateMicroserviceQueueValuesInput\n  where: JSON!\n }\n\n input updateMicroserviceQueuesWithQueryInput {\n  updateQueries: [updateMicroserviceQueueQueryInput]\n }\n\n input deleteMicroserviceQueueInput {\n  id: String!\n  microserviceIoFiles: [deleteMicroserviceIoFileInput]\n  microserviceQueueLogEntries: [deleteMicroserviceQueueLogEntryInput]\n }\n\n input deleteMicroserviceQueuesWithQueryInput {\n  deleteQueries: [JSON]\n }\n\n input createMicroserviceQueueLogEntryInput {\n  channel: String\n  details: String\n  id: String\n  level: String\n  message: String\n  metadata: JSON\n  microserviceQueueId: String\n  microserviceQueue: createMicroserviceQueueInput\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n  lastFetched: Date\n }\n\n input bulkCreatemicroserviceQueueLogEntriesInput {\n  createItems: [createMicroserviceQueueLogEntryInput]\n }\n\n input updateMicroserviceQueueLogEntryInput {\n  channel: String\n  details: String\n  id: String!\n  level: String\n  message: String\n  metadata: JSON\n  microserviceQueueId: String\n  microserviceQueue: updateMicroserviceQueueInput\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n  lastFetched: Date\n }\n\n input updateMicroserviceQueueLogEntryValuesInput {\n  channel: String\n  details: String\n  level: String\n  message: String\n  metadata: JSON\n  microserviceQueueId: String\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n  lastFetched: Date\n }\n\n input updateMicroserviceQueueLogEntryQueryInput {\n  values: updateMicroserviceQueueLogEntryValuesInput\n  where: JSON!\n }\n\n input updateMicroserviceQueueLogEntriesWithQueryInput {\n  updateQueries: [updateMicroserviceQueueLogEntryQueryInput]\n }\n\n input deleteMicroserviceQueueLogEntryInput {\n  id: String!\n  microserviceQueue: deleteMicroserviceQueueInput\n }\n\n input deleteMicroserviceQueueLogEntriesWithQueryInput {\n  deleteQueries: [JSON]\n }\n\n input createMicroserviceIoFileInput {\n  fileUrl: String\n  id: String\n  microserviceQueueId: String\n  microserviceQueue: createMicroserviceQueueInput\n  type: String\n  destinationPath: String\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n  lastFetched: Date\n }\n\n input bulkCreatemicroserviceIoFilesInput {\n  createItems: [createMicroserviceIoFileInput]\n }\n\n input updateMicroserviceIoFileInput {\n  fileUrl: String\n  id: String!\n  microserviceQueueId: String\n  microserviceQueue: updateMicroserviceQueueInput\n  type: String\n  destinationPath: String\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n  lastFetched: Date\n }\n\n input updateMicroserviceIoFileValuesInput {\n  fileUrl: String\n  microserviceQueueId: String\n  type: String\n  destinationPath: String\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n  lastFetched: Date\n }\n\n input updateMicroserviceIoFileQueryInput {\n  values: updateMicroserviceIoFileValuesInput\n  where: JSON!\n }\n\n input updateMicroserviceIoFilesWithQueryInput {\n  updateQueries: [updateMicroserviceIoFileQueryInput]\n }\n\n input deleteMicroserviceIoFileInput {\n  id: String!\n  microserviceQueue: deleteMicroserviceQueueInput\n }\n\n input deleteMicroserviceIoFilesWithQueryInput {\n  deleteQueries: [JSON]\n }\n\n input createUserInput {\n  id: String\n  username: String\n  firstName: String\n  lastName: String\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n  lastFetched: Date\n }\n\n input bulkCreateusersInput {\n  createItems: [createUserInput]\n }\n\n input updateUserInput {\n  id: String!\n  username: String\n  firstName: String\n  lastName: String\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n  lastFetched: Date\n }\n\n input updateUserValuesInput {\n  username: String\n  firstName: String\n  lastName: String\n  createdAt: Date\n  updatedAt: Date\n  cid: String\n  lastFetched: Date\n }\n\n input updateUserQueryInput {\n  values: updateUserValuesInput\n  where: JSON!\n }\n\n input updateUsersWithQueryInput {\n  updateQueries: [updateUserQueryInput]\n }\n\n input deleteUserInput {\n  id: String!\n }\n\n input deleteUsersWithQueryInput {\n  deleteQueries: [JSON]\n }\n\n\n type Query {\n  typeUpdate(code: String!): typeUpdate\n  typeUpdates(filter: JSON, sort: [String], pageNumber: Int, pageSize: Int): typeUpdateCursorResult\n  microserviceQueue(id: String!): microserviceQueue\n  microserviceQueues(filter: JSON, sort: [String], pageNumber: Int, pageSize: Int): microserviceQueueCursorResult\n  microserviceQueueLogEntry(id: String!): microserviceQueueLogEntry\n  microserviceQueueLogEntries(filter: JSON, sort: [String], pageNumber: Int, pageSize: Int): microserviceQueueLogEntryCursorResult\n  microserviceIoFile(id: String!): microserviceIoFile\n  microserviceIoFiles(filter: JSON, sort: [String], pageNumber: Int, pageSize: Int): microserviceIoFileCursorResult\n  user(id: String!): user\n  users(filter: JSON, sort: [String], pageNumber: Int, pageSize: Int): userCursorResult\n }\n\n type Mutation {\n  createTypeUpdate(input: [createTypeUpdateInput]): createTypeUpdatePayload\n  updateTypeUpdate(input: [updateTypeUpdateInput]): updateTypeUpdatePayload\n  updateTypeUpdatesWithQuery(input: updateTypeUpdatesWithQueryInput!): updateTypeUpdatesWithQueryPayload\n  deleteTypeUpdate(input: [deleteTypeUpdateInput]): deleteTypeUpdatePayload\n  deleteTypeUpdatesWithQuery(input: deleteTypeUpdatesWithQueryInput!): deleteTypeUpdatesWithQueryPayload\n  createMicroserviceQueue(input: [createMicroserviceQueueInput]): createMicroserviceQueuePayload\n  updateMicroserviceQueue(input: [updateMicroserviceQueueInput]): updateMicroserviceQueuePayload\n  updateMicroserviceQueuesWithQuery(input: updateMicroserviceQueuesWithQueryInput!): updateMicroserviceQueuesWithQueryPayload\n  deleteMicroserviceQueue(input: [deleteMicroserviceQueueInput]): deleteMicroserviceQueuePayload\n  deleteMicroserviceQueuesWithQuery(input: deleteMicroserviceQueuesWithQueryInput!): deleteMicroserviceQueuesWithQueryPayload\n  createMicroserviceQueueLogEntry(input: [createMicroserviceQueueLogEntryInput]): createMicroserviceQueueLogEntryPayload\n  updateMicroserviceQueueLogEntry(input: [updateMicroserviceQueueLogEntryInput]): updateMicroserviceQueueLogEntryPayload\n  updateMicroserviceQueueLogEntriesWithQuery(input: updateMicroserviceQueueLogEntriesWithQueryInput!): updateMicroserviceQueueLogEntriesWithQueryPayload\n  deleteMicroserviceQueueLogEntry(input: [deleteMicroserviceQueueLogEntryInput]): deleteMicroserviceQueueLogEntryPayload\n  deleteMicroserviceQueueLogEntriesWithQuery(input: deleteMicroserviceQueueLogEntriesWithQueryInput!): deleteMicroserviceQueueLogEntriesWithQueryPayload\n  createMicroserviceIoFile(input: [createMicroserviceIoFileInput]): createMicroserviceIoFilePayload\n  updateMicroserviceIoFile(input: [updateMicroserviceIoFileInput]): updateMicroserviceIoFilePayload\n  updateMicroserviceIoFilesWithQuery(input: updateMicroserviceIoFilesWithQueryInput!): updateMicroserviceIoFilesWithQueryPayload\n  deleteMicroserviceIoFile(input: [deleteMicroserviceIoFileInput]): deleteMicroserviceIoFilePayload\n  deleteMicroserviceIoFilesWithQuery(input: deleteMicroserviceIoFilesWithQueryInput!): deleteMicroserviceIoFilesWithQueryPayload\n  createUser(input: [createUserInput]): createUserPayload\n  updateUser(input: [updateUserInput]): updateUserPayload\n  updateUsersWithQuery(input: updateUsersWithQueryInput!): updateUsersWithQueryPayload\n  deleteUser(input: [deleteUserInput]): deleteUserPayload\n  deleteUsersWithQuery(input: deleteUsersWithQueryInput!): deleteUsersWithQueryPayload\n }\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 37,
      "containsCycle": true,
      "numDefinitions": 80
    }
  ],
  "metrics": {
    "created_at": "2018-11-21T02:19:26Z",
    "updated_at": "2018-12-12T20:04:02Z",
    "pushed_at": "2018-12-12T20:04:00Z",
    "issues": 0,
    "watchers": 6,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}