{
  "repo_name": "TeamsModule",
  "repo_full_name": "superalgos/teamsmodule",
  "repo_owner": "Superalgos",
  "repo_description": "Responsible for exploring, finding, creating and managing Teams.",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "api/src/generated/prisma.graphql",
      "sha": "00145f52dda48f68d202bfb5b12264ee96a6bcec",
      "url": "https://api.github.com/repositories/146943968/contents/api/src/generated/prisma.graphql?ref=8e7f9ce056ff6425190459dc34de610ffc444eac",
      "git_url": "https://api.github.com/repositories/146943968/git/blobs/00145f52dda48f68d202bfb5b12264ee96a6bcec",
      "html_url": "https://github.com/Superalgos/TeamsModule/blob/8e7f9ce056ff6425190459dc34de610ffc444eac/api/src/generated/prisma.graphql",
      "content": "# source: http://localhost:4466\n# timestamp: Tue Nov 20 2018 09:55:31 GMT-0800 (Pacific Standard Time)\n\ntype AggregateFBStatus {\n  count: Int!\n}\n\ntype AggregateFinancialBeings {\n  count: Int!\n}\n\ntype AggregateMember {\n  count: Int!\n}\n\ntype AggregateMemberStatus {\n  count: Int!\n}\n\ntype AggregateTeam {\n  count: Int!\n}\n\ntype AggregateTeamMembers {\n  count: Int!\n}\n\ntype AggregateTeamMemberStatus {\n  count: Int!\n}\n\ntype AggregateTeamProfile {\n  count: Int!\n}\n\ntype AggregateTeamStatus {\n  count: Int!\n}\n\ntype AggregateWallet {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\nscalar DateTime\n\nenum FBKind {\n  TRADER\n  INDICATOR\n  EXTRACTOR\n  PLOTTER\n  Trader\n  Trading\n  Indicator\n  Sensor\n  Plotter\n}\n\ntype FBStatus implements Node {\n  id: ID!\n  status: Status\n  reason: String\n  createdAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FBStatusConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FBStatusEdge]!\n  aggregate: AggregateFBStatus!\n}\n\ninput FBStatusCreateInput {\n  status: Status\n  reason: String\n}\n\ninput FBStatusCreateManyInput {\n  create: [FBStatusCreateInput!]\n  connect: [FBStatusWhereUniqueInput!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FBStatusEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: FBStatus!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum FBStatusOrderByInput {\n  id_ASC\n  id_DESC\n  status_ASC\n  status_DESC\n  reason_ASC\n  reason_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype FBStatusPreviousValues {\n  id: ID!\n  status: Status\n  reason: String\n  createdAt: DateTime!\n}\n\ntype FBStatusSubscriptionPayload {\n  mutation: MutationType!\n  node: FBStatus\n  updatedFields: [String!]\n  previousValues: FBStatusPreviousValues\n}\n\ninput FBStatusSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [FBStatusSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [FBStatusSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [FBStatusSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FBStatusWhereInput\n}\n\ninput FBStatusUpdateDataInput {\n  status: Status\n  reason: String\n}\n\ninput FBStatusUpdateInput {\n  status: Status\n  reason: String\n}\n\ninput FBStatusUpdateManyInput {\n  create: [FBStatusCreateInput!]\n  connect: [FBStatusWhereUniqueInput!]\n  disconnect: [FBStatusWhereUniqueInput!]\n  delete: [FBStatusWhereUniqueInput!]\n  update: [FBStatusUpdateWithWhereUniqueNestedInput!]\n  upsert: [FBStatusUpsertWithWhereUniqueNestedInput!]\n}\n\ninput FBStatusUpdateManyMutationInput {\n  status: Status\n  reason: String\n}\n\ninput FBStatusUpdateWithWhereUniqueNestedInput {\n  where: FBStatusWhereUniqueInput!\n  data: FBStatusUpdateDataInput!\n}\n\ninput FBStatusUpsertWithWhereUniqueNestedInput {\n  where: FBStatusWhereUniqueInput!\n  update: FBStatusUpdateDataInput!\n  create: FBStatusCreateInput!\n}\n\ninput FBStatusWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [FBStatusWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [FBStatusWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [FBStatusWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  status: Status\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  status_not: Status\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  status_in: [Status!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  status_not_in: [Status!]\n  reason: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  reason_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  reason_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  reason_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  reason_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  reason_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  reason_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  reason_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  reason_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  reason_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  reason_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  reason_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  reason_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  reason_not_ends_with: String\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n}\n\ninput FBStatusWhereUniqueInput {\n  id: ID\n}\n\nenum FBType {\n  BOT\n  NET\n  ADVANCED\n}\n\ntype FinancialBeings implements Node {\n  id: ID!\n  type: FBType\n  kind: FBKind\n  name: String!\n  slug: String!\n  avatar: String\n  team: Team\n  status(where: FBStatusWhereInput, orderBy: FBStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FBStatus!]\n  updatedAt: DateTime!\n  createdAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FinancialBeingsConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FinancialBeingsEdge]!\n  aggregate: AggregateFinancialBeings!\n}\n\ninput FinancialBeingsCreateInput {\n  type: FBType\n  kind: FBKind\n  name: String!\n  slug: String!\n  avatar: String\n  team: TeamCreateOneWithoutFbInput\n  status: FBStatusCreateManyInput\n}\n\ninput FinancialBeingsCreateManyWithoutTeamInput {\n  create: [FinancialBeingsCreateWithoutTeamInput!]\n  connect: [FinancialBeingsWhereUniqueInput!]\n}\n\ninput FinancialBeingsCreateWithoutTeamInput {\n  type: FBType\n  kind: FBKind\n  name: String!\n  slug: String!\n  avatar: String\n  status: FBStatusCreateManyInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FinancialBeingsEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: FinancialBeings!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum FinancialBeingsOrderByInput {\n  id_ASC\n  id_DESC\n  type_ASC\n  type_DESC\n  kind_ASC\n  kind_DESC\n  name_ASC\n  name_DESC\n  slug_ASC\n  slug_DESC\n  avatar_ASC\n  avatar_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype FinancialBeingsPreviousValues {\n  id: ID!\n  type: FBType\n  kind: FBKind\n  name: String!\n  slug: String!\n  avatar: String\n  updatedAt: DateTime!\n  createdAt: DateTime!\n}\n\ntype FinancialBeingsSubscriptionPayload {\n  mutation: MutationType!\n  node: FinancialBeings\n  updatedFields: [String!]\n  previousValues: FinancialBeingsPreviousValues\n}\n\ninput FinancialBeingsSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [FinancialBeingsSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [FinancialBeingsSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [FinancialBeingsSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FinancialBeingsWhereInput\n}\n\ninput FinancialBeingsUpdateInput {\n  type: FBType\n  kind: FBKind\n  name: String\n  slug: String\n  avatar: String\n  team: TeamUpdateOneWithoutFbInput\n  status: FBStatusUpdateManyInput\n}\n\ninput FinancialBeingsUpdateManyMutationInput {\n  type: FBType\n  kind: FBKind\n  name: String\n  slug: String\n  avatar: String\n}\n\ninput FinancialBeingsUpdateManyWithoutTeamInput {\n  create: [FinancialBeingsCreateWithoutTeamInput!]\n  connect: [FinancialBeingsWhereUniqueInput!]\n  disconnect: [FinancialBeingsWhereUniqueInput!]\n  delete: [FinancialBeingsWhereUniqueInput!]\n  update: [FinancialBeingsUpdateWithWhereUniqueWithoutTeamInput!]\n  upsert: [FinancialBeingsUpsertWithWhereUniqueWithoutTeamInput!]\n}\n\ninput FinancialBeingsUpdateWithoutTeamDataInput {\n  type: FBType\n  kind: FBKind\n  name: String\n  slug: String\n  avatar: String\n  status: FBStatusUpdateManyInput\n}\n\ninput FinancialBeingsUpdateWithWhereUniqueWithoutTeamInput {\n  where: FinancialBeingsWhereUniqueInput!\n  data: FinancialBeingsUpdateWithoutTeamDataInput!\n}\n\ninput FinancialBeingsUpsertWithWhereUniqueWithoutTeamInput {\n  where: FinancialBeingsWhereUniqueInput!\n  update: FinancialBeingsUpdateWithoutTeamDataInput!\n  create: FinancialBeingsCreateWithoutTeamInput!\n}\n\ninput FinancialBeingsWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [FinancialBeingsWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [FinancialBeingsWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [FinancialBeingsWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  type: FBType\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  type_not: FBType\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  type_in: [FBType!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  type_not_in: [FBType!]\n  kind: FBKind\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  kind_not: FBKind\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  kind_in: [FBKind!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  kind_not_in: [FBKind!]\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  slug: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  slug_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  slug_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  slug_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  slug_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  slug_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  slug_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  slug_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  slug_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  slug_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  slug_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  slug_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  slug_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  slug_not_ends_with: String\n  avatar: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  avatar_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  avatar_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  avatar_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  avatar_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  avatar_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  avatar_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  avatar_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  avatar_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  avatar_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  avatar_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  avatar_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  avatar_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  avatar_not_ends_with: String\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  team: TeamWhereInput\n  status_every: FBStatusWhereInput\n  status_some: FBStatusWhereInput\n  status_none: FBStatusWhereInput\n}\n\ninput FinancialBeingsWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Member implements Node {\n  id: ID!\n  alias: String\n  teams(where: TeamMembersWhereInput, orderBy: TeamMembersOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TeamMembers!]\n  authId: String!\n  visible: Boolean!\n  status(where: MemberStatusWhereInput, orderBy: MemberStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MemberStatus!]\n  createdAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype MemberConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [MemberEdge]!\n  aggregate: AggregateMember!\n}\n\ninput MemberCreateInput {\n  alias: String\n  authId: String!\n  visible: Boolean\n  teams: TeamMembersCreateManyWithoutMemberInput\n  status: MemberStatusCreateManyInput\n}\n\ninput MemberCreateOneWithoutTeamsInput {\n  create: MemberCreateWithoutTeamsInput\n  connect: MemberWhereUniqueInput\n}\n\ninput MemberCreateWithoutTeamsInput {\n  alias: String\n  authId: String!\n  visible: Boolean\n  status: MemberStatusCreateManyInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype MemberEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Member!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum MemberOrderByInput {\n  id_ASC\n  id_DESC\n  alias_ASC\n  alias_DESC\n  authId_ASC\n  authId_DESC\n  visible_ASC\n  visible_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype MemberPreviousValues {\n  id: ID!\n  alias: String\n  authId: String!\n  visible: Boolean!\n  createdAt: DateTime!\n}\n\ntype MemberStatus implements Node {\n  id: ID!\n  status: Status\n  reason: String\n  createdAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype MemberStatusConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [MemberStatusEdge]!\n  aggregate: AggregateMemberStatus!\n}\n\ninput MemberStatusCreateInput {\n  status: Status\n  reason: String\n}\n\ninput MemberStatusCreateManyInput {\n  create: [MemberStatusCreateInput!]\n  connect: [MemberStatusWhereUniqueInput!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype MemberStatusEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: MemberStatus!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum MemberStatusOrderByInput {\n  id_ASC\n  id_DESC\n  status_ASC\n  status_DESC\n  reason_ASC\n  reason_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype MemberStatusPreviousValues {\n  id: ID!\n  status: Status\n  reason: String\n  createdAt: DateTime!\n}\n\ntype MemberStatusSubscriptionPayload {\n  mutation: MutationType!\n  node: MemberStatus\n  updatedFields: [String!]\n  previousValues: MemberStatusPreviousValues\n}\n\ninput MemberStatusSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [MemberStatusSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [MemberStatusSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [MemberStatusSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: MemberStatusWhereInput\n}\n\ninput MemberStatusUpdateDataInput {\n  status: Status\n  reason: String\n}\n\ninput MemberStatusUpdateInput {\n  status: Status\n  reason: String\n}\n\ninput MemberStatusUpdateManyInput {\n  create: [MemberStatusCreateInput!]\n  connect: [MemberStatusWhereUniqueInput!]\n  disconnect: [MemberStatusWhereUniqueInput!]\n  delete: [MemberStatusWhereUniqueInput!]\n  update: [MemberStatusUpdateWithWhereUniqueNestedInput!]\n  upsert: [MemberStatusUpsertWithWhereUniqueNestedInput!]\n}\n\ninput MemberStatusUpdateManyMutationInput {\n  status: Status\n  reason: String\n}\n\ninput MemberStatusUpdateWithWhereUniqueNestedInput {\n  where: MemberStatusWhereUniqueInput!\n  data: MemberStatusUpdateDataInput!\n}\n\ninput MemberStatusUpsertWithWhereUniqueNestedInput {\n  where: MemberStatusWhereUniqueInput!\n  update: MemberStatusUpdateDataInput!\n  create: MemberStatusCreateInput!\n}\n\ninput MemberStatusWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [MemberStatusWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [MemberStatusWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [MemberStatusWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  status: Status\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  status_not: Status\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  status_in: [Status!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  status_not_in: [Status!]\n  reason: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  reason_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  reason_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  reason_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  reason_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  reason_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  reason_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  reason_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  reason_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  reason_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  reason_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  reason_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  reason_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  reason_not_ends_with: String\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n}\n\ninput MemberStatusWhereUniqueInput {\n  id: ID\n}\n\ntype MemberSubscriptionPayload {\n  mutation: MutationType!\n  node: Member\n  updatedFields: [String!]\n  previousValues: MemberPreviousValues\n}\n\ninput MemberSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [MemberSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [MemberSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [MemberSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: MemberWhereInput\n}\n\ninput MemberUpdateInput {\n  alias: String\n  authId: String\n  visible: Boolean\n  teams: TeamMembersUpdateManyWithoutMemberInput\n  status: MemberStatusUpdateManyInput\n}\n\ninput MemberUpdateManyMutationInput {\n  alias: String\n  authId: String\n  visible: Boolean\n}\n\ninput MemberUpdateOneWithoutTeamsInput {\n  create: MemberCreateWithoutTeamsInput\n  connect: MemberWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: MemberUpdateWithoutTeamsDataInput\n  upsert: MemberUpsertWithoutTeamsInput\n}\n\ninput MemberUpdateWithoutTeamsDataInput {\n  alias: String\n  authId: String\n  visible: Boolean\n  status: MemberStatusUpdateManyInput\n}\n\ninput MemberUpsertWithoutTeamsInput {\n  update: MemberUpdateWithoutTeamsDataInput!\n  create: MemberCreateWithoutTeamsInput!\n}\n\ninput MemberWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [MemberWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [MemberWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [MemberWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  alias: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  alias_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  alias_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  alias_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  alias_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  alias_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  alias_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  alias_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  alias_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  alias_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  alias_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  alias_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  alias_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  alias_not_ends_with: String\n  authId: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  authId_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  authId_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  authId_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  authId_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  authId_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  authId_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  authId_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  authId_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  authId_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  authId_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  authId_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  authId_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  authId_not_ends_with: String\n  visible: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  visible_not: Boolean\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  teams_every: TeamMembersWhereInput\n  teams_some: TeamMembersWhereInput\n  teams_none: TeamMembersWhereInput\n  status_every: MemberStatusWhereInput\n  status_some: MemberStatusWhereInput\n  status_none: MemberStatusWhereInput\n}\n\ninput MemberWhereUniqueInput {\n  id: ID\n  authId: String\n}\n\ntype Mutation {\n  createTeam(data: TeamCreateInput!): Team!\n  createTeamMembers(data: TeamMembersCreateInput!): TeamMembers!\n  createMember(data: MemberCreateInput!): Member!\n  createFinancialBeings(data: FinancialBeingsCreateInput!): FinancialBeings!\n  createTeamProfile(data: TeamProfileCreateInput!): TeamProfile!\n  createWallet(data: WalletCreateInput!): Wallet!\n  createMemberStatus(data: MemberStatusCreateInput!): MemberStatus!\n  createFBStatus(data: FBStatusCreateInput!): FBStatus!\n  createTeamMemberStatus(data: TeamMemberStatusCreateInput!): TeamMemberStatus!\n  createTeamStatus(data: TeamStatusCreateInput!): TeamStatus!\n  updateTeam(data: TeamUpdateInput!, where: TeamWhereUniqueInput!): Team\n  updateTeamMembers(data: TeamMembersUpdateInput!, where: TeamMembersWhereUniqueInput!): TeamMembers\n  updateMember(data: MemberUpdateInput!, where: MemberWhereUniqueInput!): Member\n  updateFinancialBeings(data: FinancialBeingsUpdateInput!, where: FinancialBeingsWhereUniqueInput!): FinancialBeings\n  updateTeamProfile(data: TeamProfileUpdateInput!, where: TeamProfileWhereUniqueInput!): TeamProfile\n  updateWallet(data: WalletUpdateInput!, where: WalletWhereUniqueInput!): Wallet\n  updateMemberStatus(data: MemberStatusUpdateInput!, where: MemberStatusWhereUniqueInput!): MemberStatus\n  updateFBStatus(data: FBStatusUpdateInput!, where: FBStatusWhereUniqueInput!): FBStatus\n  updateTeamMemberStatus(data: TeamMemberStatusUpdateInput!, where: TeamMemberStatusWhereUniqueInput!): TeamMemberStatus\n  updateTeamStatus(data: TeamStatusUpdateInput!, where: TeamStatusWhereUniqueInput!): TeamStatus\n  deleteTeam(where: TeamWhereUniqueInput!): Team\n  deleteTeamMembers(where: TeamMembersWhereUniqueInput!): TeamMembers\n  deleteMember(where: MemberWhereUniqueInput!): Member\n  deleteFinancialBeings(where: FinancialBeingsWhereUniqueInput!): FinancialBeings\n  deleteTeamProfile(where: TeamProfileWhereUniqueInput!): TeamProfile\n  deleteWallet(where: WalletWhereUniqueInput!): Wallet\n  deleteMemberStatus(where: MemberStatusWhereUniqueInput!): MemberStatus\n  deleteFBStatus(where: FBStatusWhereUniqueInput!): FBStatus\n  deleteTeamMemberStatus(where: TeamMemberStatusWhereUniqueInput!): TeamMemberStatus\n  deleteTeamStatus(where: TeamStatusWhereUniqueInput!): TeamStatus\n  upsertTeam(where: TeamWhereUniqueInput!, create: TeamCreateInput!, update: TeamUpdateInput!): Team!\n  upsertTeamMembers(where: TeamMembersWhereUniqueInput!, create: TeamMembersCreateInput!, update: TeamMembersUpdateInput!): TeamMembers!\n  upsertMember(where: MemberWhereUniqueInput!, create: MemberCreateInput!, update: MemberUpdateInput!): Member!\n  upsertFinancialBeings(where: FinancialBeingsWhereUniqueInput!, create: FinancialBeingsCreateInput!, update: FinancialBeingsUpdateInput!): FinancialBeings!\n  upsertTeamProfile(where: TeamProfileWhereUniqueInput!, create: TeamProfileCreateInput!, update: TeamProfileUpdateInput!): TeamProfile!\n  upsertWallet(where: WalletWhereUniqueInput!, create: WalletCreateInput!, update: WalletUpdateInput!): Wallet!\n  upsertMemberStatus(where: MemberStatusWhereUniqueInput!, create: MemberStatusCreateInput!, update: MemberStatusUpdateInput!): MemberStatus!\n  upsertFBStatus(where: FBStatusWhereUniqueInput!, create: FBStatusCreateInput!, update: FBStatusUpdateInput!): FBStatus!\n  upsertTeamMemberStatus(where: TeamMemberStatusWhereUniqueInput!, create: TeamMemberStatusCreateInput!, update: TeamMemberStatusUpdateInput!): TeamMemberStatus!\n  upsertTeamStatus(where: TeamStatusWhereUniqueInput!, create: TeamStatusCreateInput!, update: TeamStatusUpdateInput!): TeamStatus!\n  updateManyTeams(data: TeamUpdateManyMutationInput!, where: TeamWhereInput): BatchPayload!\n  updateManyTeamMemberses(data: TeamMembersUpdateManyMutationInput!, where: TeamMembersWhereInput): BatchPayload!\n  updateManyMembers(data: MemberUpdateManyMutationInput!, where: MemberWhereInput): BatchPayload!\n  updateManyFinancialBeingses(data: FinancialBeingsUpdateManyMutationInput!, where: FinancialBeingsWhereInput): BatchPayload!\n  updateManyTeamProfiles(data: TeamProfileUpdateManyMutationInput!, where: TeamProfileWhereInput): BatchPayload!\n  updateManyWallets(data: WalletUpdateManyMutationInput!, where: WalletWhereInput): BatchPayload!\n  updateManyMemberStatuses(data: MemberStatusUpdateManyMutationInput!, where: MemberStatusWhereInput): BatchPayload!\n  updateManyFBStatuses(data: FBStatusUpdateManyMutationInput!, where: FBStatusWhereInput): BatchPayload!\n  updateManyTeamMemberStatuses(data: TeamMemberStatusUpdateManyMutationInput!, where: TeamMemberStatusWhereInput): BatchPayload!\n  updateManyTeamStatuses(data: TeamStatusUpdateManyMutationInput!, where: TeamStatusWhereInput): BatchPayload!\n  deleteManyTeams(where: TeamWhereInput): BatchPayload!\n  deleteManyTeamMemberses(where: TeamMembersWhereInput): BatchPayload!\n  deleteManyMembers(where: MemberWhereInput): BatchPayload!\n  deleteManyFinancialBeingses(where: FinancialBeingsWhereInput): BatchPayload!\n  deleteManyTeamProfiles(where: TeamProfileWhereInput): BatchPayload!\n  deleteManyWallets(where: WalletWhereInput): BatchPayload!\n  deleteManyMemberStatuses(where: MemberStatusWhereInput): BatchPayload!\n  deleteManyFBStatuses(where: FBStatusWhereInput): BatchPayload!\n  deleteManyTeamMemberStatuses(where: TeamMemberStatusWhereInput): BatchPayload!\n  deleteManyTeamStatuses(where: TeamStatusWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  teams(where: TeamWhereInput, orderBy: TeamOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Team]!\n  teamMemberses(where: TeamMembersWhereInput, orderBy: TeamMembersOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TeamMembers]!\n  members(where: MemberWhereInput, orderBy: MemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Member]!\n  financialBeingses(where: FinancialBeingsWhereInput, orderBy: FinancialBeingsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialBeings]!\n  teamProfiles(where: TeamProfileWhereInput, orderBy: TeamProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TeamProfile]!\n  wallets(where: WalletWhereInput, orderBy: WalletOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Wallet]!\n  memberStatuses(where: MemberStatusWhereInput, orderBy: MemberStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MemberStatus]!\n  fBStatuses(where: FBStatusWhereInput, orderBy: FBStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FBStatus]!\n  teamMemberStatuses(where: TeamMemberStatusWhereInput, orderBy: TeamMemberStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TeamMemberStatus]!\n  teamStatuses(where: TeamStatusWhereInput, orderBy: TeamStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TeamStatus]!\n  team(where: TeamWhereUniqueInput!): Team\n  teamMembers(where: TeamMembersWhereUniqueInput!): TeamMembers\n  member(where: MemberWhereUniqueInput!): Member\n  financialBeings(where: FinancialBeingsWhereUniqueInput!): FinancialBeings\n  teamProfile(where: TeamProfileWhereUniqueInput!): TeamProfile\n  wallet(where: WalletWhereUniqueInput!): Wallet\n  memberStatus(where: MemberStatusWhereUniqueInput!): MemberStatus\n  fBStatus(where: FBStatusWhereUniqueInput!): FBStatus\n  teamMemberStatus(where: TeamMemberStatusWhereUniqueInput!): TeamMemberStatus\n  teamStatus(where: TeamStatusWhereUniqueInput!): TeamStatus\n  teamsConnection(where: TeamWhereInput, orderBy: TeamOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TeamConnection!\n  teamMembersesConnection(where: TeamMembersWhereInput, orderBy: TeamMembersOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TeamMembersConnection!\n  membersConnection(where: MemberWhereInput, orderBy: MemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MemberConnection!\n  financialBeingsesConnection(where: FinancialBeingsWhereInput, orderBy: FinancialBeingsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FinancialBeingsConnection!\n  teamProfilesConnection(where: TeamProfileWhereInput, orderBy: TeamProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TeamProfileConnection!\n  walletsConnection(where: WalletWhereInput, orderBy: WalletOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WalletConnection!\n  memberStatusesConnection(where: MemberStatusWhereInput, orderBy: MemberStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MemberStatusConnection!\n  fBStatusesConnection(where: FBStatusWhereInput, orderBy: FBStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FBStatusConnection!\n  teamMemberStatusesConnection(where: TeamMemberStatusWhereInput, orderBy: TeamMemberStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TeamMemberStatusConnection!\n  teamStatusesConnection(where: TeamStatusWhereInput, orderBy: TeamStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TeamStatusConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\nenum Role {\n  OWNER\n  ADMIN\n  MEMBER\n}\n\nenum Status {\n  ACTIVE\n  INACTIVE\n  APPLIED\n  INVITED\n  REMOVED\n}\n\ntype Subscription {\n  team(where: TeamSubscriptionWhereInput): TeamSubscriptionPayload\n  teamMembers(where: TeamMembersSubscriptionWhereInput): TeamMembersSubscriptionPayload\n  member(where: MemberSubscriptionWhereInput): MemberSubscriptionPayload\n  financialBeings(where: FinancialBeingsSubscriptionWhereInput): FinancialBeingsSubscriptionPayload\n  teamProfile(where: TeamProfileSubscriptionWhereInput): TeamProfileSubscriptionPayload\n  wallet(where: WalletSubscriptionWhereInput): WalletSubscriptionPayload\n  memberStatus(where: MemberStatusSubscriptionWhereInput): MemberStatusSubscriptionPayload\n  fBStatus(where: FBStatusSubscriptionWhereInput): FBStatusSubscriptionPayload\n  teamMemberStatus(where: TeamMemberStatusSubscriptionWhereInput): TeamMemberStatusSubscriptionPayload\n  teamStatus(where: TeamStatusSubscriptionWhereInput): TeamStatusSubscriptionPayload\n}\n\ntype Team implements Node {\n  id: ID!\n  name: String!\n  slug: String!\n  profile: TeamProfile\n  members(where: TeamMembersWhereInput, orderBy: TeamMembersOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TeamMembers!]\n  owner: String!\n  wallet: Wallet\n  fb(where: FinancialBeingsWhereInput, orderBy: FinancialBeingsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FinancialBeings!]\n  status(where: TeamStatusWhereInput, orderBy: TeamStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TeamStatus!]\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TeamConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TeamEdge]!\n  aggregate: AggregateTeam!\n}\n\ninput TeamCreateInput {\n  name: String!\n  slug: String!\n  owner: String!\n  profile: TeamProfileCreateOneInput\n  members: TeamMembersCreateManyWithoutTeamInput\n  wallet: WalletCreateOneInput\n  fb: FinancialBeingsCreateManyWithoutTeamInput\n  status: TeamStatusCreateManyInput\n}\n\ninput TeamCreateOneWithoutFbInput {\n  create: TeamCreateWithoutFbInput\n  connect: TeamWhereUniqueInput\n}\n\ninput TeamCreateOneWithoutMembersInput {\n  create: TeamCreateWithoutMembersInput\n  connect: TeamWhereUniqueInput\n}\n\ninput TeamCreateWithoutFbInput {\n  name: String!\n  slug: String!\n  owner: String!\n  profile: TeamProfileCreateOneInput\n  members: TeamMembersCreateManyWithoutTeamInput\n  wallet: WalletCreateOneInput\n  status: TeamStatusCreateManyInput\n}\n\ninput TeamCreateWithoutMembersInput {\n  name: String!\n  slug: String!\n  owner: String!\n  profile: TeamProfileCreateOneInput\n  wallet: WalletCreateOneInput\n  fb: FinancialBeingsCreateManyWithoutTeamInput\n  status: TeamStatusCreateManyInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TeamEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Team!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\ntype TeamMembers implements Node {\n  id: ID!\n  member: Member\n  team: Team\n  role: Role\n  status(where: TeamMemberStatusWhereInput, orderBy: TeamMemberStatusOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TeamMemberStatus!]\n  email: String\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TeamMembersConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TeamMembersEdge]!\n  aggregate: AggregateTeamMembers!\n}\n\ninput TeamMembersCreateInput {\n  role: Role\n  email: String\n  member: MemberCreateOneWithoutTeamsInput\n  team: TeamCreateOneWithoutMembersInput\n  status: TeamMemberStatusCreateManyInput\n}\n\ninput TeamMembersCreateManyWithoutMemberInput {\n  create: [TeamMembersCreateWithoutMemberInput!]\n  connect: [TeamMembersWhereUniqueInput!]\n}\n\ninput TeamMembersCreateManyWithoutTeamInput {\n  create: [TeamMembersCreateWithoutTeamInput!]\n  connect: [TeamMembersWhereUniqueInput!]\n}\n\ninput TeamMembersCreateWithoutMemberInput {\n  role: Role\n  email: String\n  team: TeamCreateOneWithoutMembersInput\n  status: TeamMemberStatusCreateManyInput\n}\n\ninput TeamMembersCreateWithoutTeamInput {\n  role: Role\n  email: String\n  member: MemberCreateOneWithoutTeamsInput\n  status: TeamMemberStatusCreateManyInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TeamMembersEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: TeamMembers!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum TeamMembersOrderByInput {\n  id_ASC\n  id_DESC\n  role_ASC\n  role_DESC\n  email_ASC\n  email_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype TeamMembersPreviousValues {\n  id: ID!\n  role: Role\n  email: String\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype TeamMembersSubscriptionPayload {\n  mutation: MutationType!\n  node: TeamMembers\n  updatedFields: [String!]\n  previousValues: TeamMembersPreviousValues\n}\n\ninput TeamMembersSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TeamMembersSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TeamMembersSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TeamMembersSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TeamMembersWhereInput\n}\n\ntype TeamMemberStatus implements Node {\n  id: ID!\n  status: Status\n  reason: String\n  createdAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TeamMemberStatusConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TeamMemberStatusEdge]!\n  aggregate: AggregateTeamMemberStatus!\n}\n\ninput TeamMemberStatusCreateInput {\n  status: Status\n  reason: String\n}\n\ninput TeamMemberStatusCreateManyInput {\n  create: [TeamMemberStatusCreateInput!]\n  connect: [TeamMemberStatusWhereUniqueInput!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TeamMemberStatusEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: TeamMemberStatus!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum TeamMemberStatusOrderByInput {\n  id_ASC\n  id_DESC\n  status_ASC\n  status_DESC\n  reason_ASC\n  reason_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype TeamMemberStatusPreviousValues {\n  id: ID!\n  status: Status\n  reason: String\n  createdAt: DateTime!\n}\n\ntype TeamMemberStatusSubscriptionPayload {\n  mutation: MutationType!\n  node: TeamMemberStatus\n  updatedFields: [String!]\n  previousValues: TeamMemberStatusPreviousValues\n}\n\ninput TeamMemberStatusSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TeamMemberStatusSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TeamMemberStatusSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TeamMemberStatusSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TeamMemberStatusWhereInput\n}\n\ninput TeamMemberStatusUpdateDataInput {\n  status: Status\n  reason: String\n}\n\ninput TeamMemberStatusUpdateInput {\n  status: Status\n  reason: String\n}\n\ninput TeamMemberStatusUpdateManyInput {\n  create: [TeamMemberStatusCreateInput!]\n  connect: [TeamMemberStatusWhereUniqueInput!]\n  disconnect: [TeamMemberStatusWhereUniqueInput!]\n  delete: [TeamMemberStatusWhereUniqueInput!]\n  update: [TeamMemberStatusUpdateWithWhereUniqueNestedInput!]\n  upsert: [TeamMemberStatusUpsertWithWhereUniqueNestedInput!]\n}\n\ninput TeamMemberStatusUpdateManyMutationInput {\n  status: Status\n  reason: String\n}\n\ninput TeamMemberStatusUpdateWithWhereUniqueNestedInput {\n  where: TeamMemberStatusWhereUniqueInput!\n  data: TeamMemberStatusUpdateDataInput!\n}\n\ninput TeamMemberStatusUpsertWithWhereUniqueNestedInput {\n  where: TeamMemberStatusWhereUniqueInput!\n  update: TeamMemberStatusUpdateDataInput!\n  create: TeamMemberStatusCreateInput!\n}\n\ninput TeamMemberStatusWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TeamMemberStatusWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TeamMemberStatusWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TeamMemberStatusWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  status: Status\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  status_not: Status\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  status_in: [Status!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  status_not_in: [Status!]\n  reason: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  reason_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  reason_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  reason_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  reason_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  reason_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  reason_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  reason_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  reason_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  reason_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  reason_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  reason_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  reason_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  reason_not_ends_with: String\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n}\n\ninput TeamMemberStatusWhereUniqueInput {\n  id: ID\n}\n\ninput TeamMembersUpdateInput {\n  role: Role\n  email: String\n  member: MemberUpdateOneWithoutTeamsInput\n  team: TeamUpdateOneWithoutMembersInput\n  status: TeamMemberStatusUpdateManyInput\n}\n\ninput TeamMembersUpdateManyMutationInput {\n  role: Role\n  email: String\n}\n\ninput TeamMembersUpdateManyWithoutMemberInput {\n  create: [TeamMembersCreateWithoutMemberInput!]\n  connect: [TeamMembersWhereUniqueInput!]\n  disconnect: [TeamMembersWhereUniqueInput!]\n  delete: [TeamMembersWhereUniqueInput!]\n  update: [TeamMembersUpdateWithWhereUniqueWithoutMemberInput!]\n  upsert: [TeamMembersUpsertWithWhereUniqueWithoutMemberInput!]\n}\n\ninput TeamMembersUpdateManyWithoutTeamInput {\n  create: [TeamMembersCreateWithoutTeamInput!]\n  connect: [TeamMembersWhereUniqueInput!]\n  disconnect: [TeamMembersWhereUniqueInput!]\n  delete: [TeamMembersWhereUniqueInput!]\n  update: [TeamMembersUpdateWithWhereUniqueWithoutTeamInput!]\n  upsert: [TeamMembersUpsertWithWhereUniqueWithoutTeamInput!]\n}\n\ninput TeamMembersUpdateWithoutMemberDataInput {\n  role: Role\n  email: String\n  team: TeamUpdateOneWithoutMembersInput\n  status: TeamMemberStatusUpdateManyInput\n}\n\ninput TeamMembersUpdateWithoutTeamDataInput {\n  role: Role\n  email: String\n  member: MemberUpdateOneWithoutTeamsInput\n  status: TeamMemberStatusUpdateManyInput\n}\n\ninput TeamMembersUpdateWithWhereUniqueWithoutMemberInput {\n  where: TeamMembersWhereUniqueInput!\n  data: TeamMembersUpdateWithoutMemberDataInput!\n}\n\ninput TeamMembersUpdateWithWhereUniqueWithoutTeamInput {\n  where: TeamMembersWhereUniqueInput!\n  data: TeamMembersUpdateWithoutTeamDataInput!\n}\n\ninput TeamMembersUpsertWithWhereUniqueWithoutMemberInput {\n  where: TeamMembersWhereUniqueInput!\n  update: TeamMembersUpdateWithoutMemberDataInput!\n  create: TeamMembersCreateWithoutMemberInput!\n}\n\ninput TeamMembersUpsertWithWhereUniqueWithoutTeamInput {\n  where: TeamMembersWhereUniqueInput!\n  update: TeamMembersUpdateWithoutTeamDataInput!\n  create: TeamMembersCreateWithoutTeamInput!\n}\n\ninput TeamMembersWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TeamMembersWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TeamMembersWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TeamMembersWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  role: Role\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  role_not: Role\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  role_in: [Role!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  role_not_in: [Role!]\n  email: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  email_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  email_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  email_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  email_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  email_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  email_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  email_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  email_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  email_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  email_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  email_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  email_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  email_not_ends_with: String\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  member: MemberWhereInput\n  team: TeamWhereInput\n  status_every: TeamMemberStatusWhereInput\n  status_some: TeamMemberStatusWhereInput\n  status_none: TeamMemberStatusWhereInput\n}\n\ninput TeamMembersWhereUniqueInput {\n  id: ID\n  email: String\n}\n\nenum TeamOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  slug_ASC\n  slug_DESC\n  owner_ASC\n  owner_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype TeamPreviousValues {\n  id: ID!\n  name: String!\n  slug: String!\n  owner: String!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype TeamProfile implements Node {\n  id: ID!\n  description: String\n  motto: String\n  avatar: String\n  banner: String\n  updatedAt: DateTime!\n  createdAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TeamProfileConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TeamProfileEdge]!\n  aggregate: AggregateTeamProfile!\n}\n\ninput TeamProfileCreateInput {\n  description: String\n  motto: String\n  avatar: String\n  banner: String\n}\n\ninput TeamProfileCreateOneInput {\n  create: TeamProfileCreateInput\n  connect: TeamProfileWhereUniqueInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TeamProfileEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: TeamProfile!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum TeamProfileOrderByInput {\n  id_ASC\n  id_DESC\n  description_ASC\n  description_DESC\n  motto_ASC\n  motto_DESC\n  avatar_ASC\n  avatar_DESC\n  banner_ASC\n  banner_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TeamProfilePreviousValues {\n  id: ID!\n  description: String\n  motto: String\n  avatar: String\n  banner: String\n  updatedAt: DateTime!\n  createdAt: DateTime!\n}\n\ntype TeamProfileSubscriptionPayload {\n  mutation: MutationType!\n  node: TeamProfile\n  updatedFields: [String!]\n  previousValues: TeamProfilePreviousValues\n}\n\ninput TeamProfileSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TeamProfileSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TeamProfileSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TeamProfileSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TeamProfileWhereInput\n}\n\ninput TeamProfileUpdateDataInput {\n  description: String\n  motto: String\n  avatar: String\n  banner: String\n}\n\ninput TeamProfileUpdateInput {\n  description: String\n  motto: String\n  avatar: String\n  banner: String\n}\n\ninput TeamProfileUpdateManyMutationInput {\n  description: String\n  motto: String\n  avatar: String\n  banner: String\n}\n\ninput TeamProfileUpdateOneInput {\n  create: TeamProfileCreateInput\n  connect: TeamProfileWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: TeamProfileUpdateDataInput\n  upsert: TeamProfileUpsertNestedInput\n}\n\ninput TeamProfileUpsertNestedInput {\n  update: TeamProfileUpdateDataInput!\n  create: TeamProfileCreateInput!\n}\n\ninput TeamProfileWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TeamProfileWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TeamProfileWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TeamProfileWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  description: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  description_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  description_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  description_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  description_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  description_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  description_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  description_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  description_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  description_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  description_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  description_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  description_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  description_not_ends_with: String\n  motto: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  motto_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  motto_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  motto_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  motto_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  motto_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  motto_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  motto_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  motto_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  motto_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  motto_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  motto_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  motto_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  motto_not_ends_with: String\n  avatar: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  avatar_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  avatar_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  avatar_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  avatar_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  avatar_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  avatar_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  avatar_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  avatar_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  avatar_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  avatar_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  avatar_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  avatar_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  avatar_not_ends_with: String\n  banner: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  banner_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  banner_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  banner_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  banner_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  banner_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  banner_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  banner_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  banner_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  banner_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  banner_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  banner_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  banner_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  banner_not_ends_with: String\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n}\n\ninput TeamProfileWhereUniqueInput {\n  id: ID\n}\n\ntype TeamStatus implements Node {\n  id: ID!\n  status: Status\n  reason: String\n  createdAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TeamStatusConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TeamStatusEdge]!\n  aggregate: AggregateTeamStatus!\n}\n\ninput TeamStatusCreateInput {\n  status: Status\n  reason: String\n}\n\ninput TeamStatusCreateManyInput {\n  create: [TeamStatusCreateInput!]\n  connect: [TeamStatusWhereUniqueInput!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TeamStatusEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: TeamStatus!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum TeamStatusOrderByInput {\n  id_ASC\n  id_DESC\n  status_ASC\n  status_DESC\n  reason_ASC\n  reason_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype TeamStatusPreviousValues {\n  id: ID!\n  status: Status\n  reason: String\n  createdAt: DateTime!\n}\n\ntype TeamStatusSubscriptionPayload {\n  mutation: MutationType!\n  node: TeamStatus\n  updatedFields: [String!]\n  previousValues: TeamStatusPreviousValues\n}\n\ninput TeamStatusSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TeamStatusSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TeamStatusSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TeamStatusSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TeamStatusWhereInput\n}\n\ninput TeamStatusUpdateDataInput {\n  status: Status\n  reason: String\n}\n\ninput TeamStatusUpdateInput {\n  status: Status\n  reason: String\n}\n\ninput TeamStatusUpdateManyInput {\n  create: [TeamStatusCreateInput!]\n  connect: [TeamStatusWhereUniqueInput!]\n  disconnect: [TeamStatusWhereUniqueInput!]\n  delete: [TeamStatusWhereUniqueInput!]\n  update: [TeamStatusUpdateWithWhereUniqueNestedInput!]\n  upsert: [TeamStatusUpsertWithWhereUniqueNestedInput!]\n}\n\ninput TeamStatusUpdateManyMutationInput {\n  status: Status\n  reason: String\n}\n\ninput TeamStatusUpdateWithWhereUniqueNestedInput {\n  where: TeamStatusWhereUniqueInput!\n  data: TeamStatusUpdateDataInput!\n}\n\ninput TeamStatusUpsertWithWhereUniqueNestedInput {\n  where: TeamStatusWhereUniqueInput!\n  update: TeamStatusUpdateDataInput!\n  create: TeamStatusCreateInput!\n}\n\ninput TeamStatusWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TeamStatusWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TeamStatusWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TeamStatusWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  status: Status\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  status_not: Status\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  status_in: [Status!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  status_not_in: [Status!]\n  reason: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  reason_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  reason_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  reason_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  reason_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  reason_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  reason_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  reason_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  reason_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  reason_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  reason_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  reason_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  reason_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  reason_not_ends_with: String\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n}\n\ninput TeamStatusWhereUniqueInput {\n  id: ID\n}\n\ntype TeamSubscriptionPayload {\n  mutation: MutationType!\n  node: Team\n  updatedFields: [String!]\n  previousValues: TeamPreviousValues\n}\n\ninput TeamSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TeamSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TeamSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TeamSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TeamWhereInput\n}\n\ninput TeamUpdateInput {\n  name: String\n  slug: String\n  owner: String\n  profile: TeamProfileUpdateOneInput\n  members: TeamMembersUpdateManyWithoutTeamInput\n  wallet: WalletUpdateOneInput\n  fb: FinancialBeingsUpdateManyWithoutTeamInput\n  status: TeamStatusUpdateManyInput\n}\n\ninput TeamUpdateManyMutationInput {\n  name: String\n  slug: String\n  owner: String\n}\n\ninput TeamUpdateOneWithoutFbInput {\n  create: TeamCreateWithoutFbInput\n  connect: TeamWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: TeamUpdateWithoutFbDataInput\n  upsert: TeamUpsertWithoutFbInput\n}\n\ninput TeamUpdateOneWithoutMembersInput {\n  create: TeamCreateWithoutMembersInput\n  connect: TeamWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: TeamUpdateWithoutMembersDataInput\n  upsert: TeamUpsertWithoutMembersInput\n}\n\ninput TeamUpdateWithoutFbDataInput {\n  name: String\n  slug: String\n  owner: String\n  profile: TeamProfileUpdateOneInput\n  members: TeamMembersUpdateManyWithoutTeamInput\n  wallet: WalletUpdateOneInput\n  status: TeamStatusUpdateManyInput\n}\n\ninput TeamUpdateWithoutMembersDataInput {\n  name: String\n  slug: String\n  owner: String\n  profile: TeamProfileUpdateOneInput\n  wallet: WalletUpdateOneInput\n  fb: FinancialBeingsUpdateManyWithoutTeamInput\n  status: TeamStatusUpdateManyInput\n}\n\ninput TeamUpsertWithoutFbInput {\n  update: TeamUpdateWithoutFbDataInput!\n  create: TeamCreateWithoutFbInput!\n}\n\ninput TeamUpsertWithoutMembersInput {\n  update: TeamUpdateWithoutMembersDataInput!\n  create: TeamCreateWithoutMembersInput!\n}\n\ninput TeamWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TeamWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TeamWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TeamWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  slug: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  slug_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  slug_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  slug_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  slug_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  slug_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  slug_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  slug_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  slug_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  slug_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  slug_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  slug_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  slug_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  slug_not_ends_with: String\n  owner: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  owner_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  owner_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  owner_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  owner_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  owner_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  owner_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  owner_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  owner_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  owner_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  owner_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  owner_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  owner_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  owner_not_ends_with: String\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  profile: TeamProfileWhereInput\n  members_every: TeamMembersWhereInput\n  members_some: TeamMembersWhereInput\n  members_none: TeamMembersWhereInput\n  wallet: WalletWhereInput\n  fb_every: FinancialBeingsWhereInput\n  fb_some: FinancialBeingsWhereInput\n  fb_none: FinancialBeingsWhereInput\n  status_every: TeamStatusWhereInput\n  status_some: TeamStatusWhereInput\n  status_none: TeamStatusWhereInput\n}\n\ninput TeamWhereUniqueInput {\n  id: ID\n  name: String\n  slug: String\n}\n\ntype Wallet implements Node {\n  id: ID!\n  balance: Float\n  updatedAt: DateTime!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype WalletConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [WalletEdge]!\n  aggregate: AggregateWallet!\n}\n\ninput WalletCreateInput {\n  balance: Float\n}\n\ninput WalletCreateOneInput {\n  create: WalletCreateInput\n  connect: WalletWhereUniqueInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype WalletEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Wallet!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum WalletOrderByInput {\n  id_ASC\n  id_DESC\n  balance_ASC\n  balance_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype WalletPreviousValues {\n  id: ID!\n  balance: Float\n  updatedAt: DateTime!\n}\n\ntype WalletSubscriptionPayload {\n  mutation: MutationType!\n  node: Wallet\n  updatedFields: [String!]\n  previousValues: WalletPreviousValues\n}\n\ninput WalletSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [WalletSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [WalletSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [WalletSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: WalletWhereInput\n}\n\ninput WalletUpdateDataInput {\n  balance: Float\n}\n\ninput WalletUpdateInput {\n  balance: Float\n}\n\ninput WalletUpdateManyMutationInput {\n  balance: Float\n}\n\ninput WalletUpdateOneInput {\n  create: WalletCreateInput\n  connect: WalletWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: WalletUpdateDataInput\n  upsert: WalletUpsertNestedInput\n}\n\ninput WalletUpsertNestedInput {\n  update: WalletUpdateDataInput!\n  create: WalletCreateInput!\n}\n\ninput WalletWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [WalletWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [WalletWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [WalletWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  balance: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  balance_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  balance_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  balance_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  balance_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  balance_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  balance_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  balance_gte: Float\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n}\n\ninput WalletWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 65,
      "containsCycle": true,
      "numDefinitions": 204
    }
  ],
  "metrics": {
    "created_at": "2018-08-31T21:30:50Z",
    "updated_at": "2019-07-17T11:51:52Z",
    "pushed_at": "2019-07-17T11:51:51Z",
    "issues": 59,
    "watchers": 3,
    "fork_count": 6,
    "has_wiki_enabled": true,
    "license": "apache-2.0",
    "pull_requests": 51,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 51,
    "releases": 0,
    "stargazers": 1
  }
}