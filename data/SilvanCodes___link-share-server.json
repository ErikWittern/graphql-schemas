{
  "repo_name": "link-share-server",
  "repo_full_name": "silvancodes/link-share-server",
  "repo_owner": "SilvanCodes",
  "repo_description": "Server for connecting link-share-web-ext and link-share-mobile-app",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "src/generated/prisma.graphql",
      "sha": "768671184d5f7633015fbcf7da38e8f7cbc1bbcc",
      "url": "https://api.github.com/repositories/147093488/contents/src/generated/prisma.graphql?ref=b567f979327e50e0b8865dda84f6e1ee690c8195",
      "git_url": "https://api.github.com/repositories/147093488/git/blobs/768671184d5f7633015fbcf7da38e8f7cbc1bbcc",
      "html_url": "https://github.com/SilvanCodes/link-share-server/blob/b567f979327e50e0b8865dda84f6e1ee690c8195/src/generated/prisma.graphql",
      "content": "# source: http://localhost:4466\n# timestamp: Sat Sep 01 2018 22:03:45 GMT+0200 (CEST)\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype AggregateWebsite {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\nscalar DateTime\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createWebsite(data: WebsiteCreateInput!): Website!\n  createUser(data: UserCreateInput!): User!\n  updateWebsite(data: WebsiteUpdateInput!, where: WebsiteWhereUniqueInput!): Website\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteWebsite(where: WebsiteWhereUniqueInput!): Website\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertWebsite(where: WebsiteWhereUniqueInput!, create: WebsiteCreateInput!, update: WebsiteUpdateInput!): Website!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyWebsites(data: WebsiteUpdateInput!, where: WebsiteWhereInput): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  deleteManyWebsites(where: WebsiteWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  websites(where: WebsiteWhereInput, orderBy: WebsiteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Website]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  website(where: WebsiteWhereUniqueInput!): Website\n  user(where: UserWhereUniqueInput!): User\n  websitesConnection(where: WebsiteWhereInput, orderBy: WebsiteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WebsiteConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  website(where: WebsiteSubscriptionWhereInput): WebsiteSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n  email: String!\n  password: String!\n  websites(where: WebsiteWhereInput, orderBy: WebsiteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Website!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n  email: String!\n  password: String!\n  websites: WebsiteCreateManyWithoutBelongsToInput\n}\n\ninput UserCreateOneWithoutWebsitesInput {\n  create: UserCreateWithoutWebsitesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutWebsitesInput {\n  name: String!\n  email: String!\n  password: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n  email: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  name: String\n  email: String\n  password: String\n  websites: WebsiteUpdateManyWithoutBelongsToInput\n}\n\ninput UserUpdateOneWithoutWebsitesInput {\n  create: UserCreateWithoutWebsitesInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutWebsitesDataInput\n  upsert: UserUpsertWithoutWebsitesInput\n}\n\ninput UserUpdateWithoutWebsitesDataInput {\n  name: String\n  email: String\n  password: String\n}\n\ninput UserUpsertWithoutWebsitesInput {\n  update: UserUpdateWithoutWebsitesDataInput!\n  create: UserCreateWithoutWebsitesInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  email: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  email_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  email_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  email_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  email_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  email_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  email_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  email_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  email_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  email_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  email_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  email_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  email_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  email_not_ends_with: String\n  password: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  password_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  password_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  password_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  password_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  password_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  password_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  password_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  password_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  password_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  password_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  password_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  password_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  password_not_ends_with: String\n  websites_every: WebsiteWhereInput\n  websites_some: WebsiteWhereInput\n  websites_none: WebsiteWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n\ntype Website implements Node {\n  id: ID!\n  createdAt: DateTime!\n  url: String!\n  belongsTo(where: UserWhereInput): User\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype WebsiteConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [WebsiteEdge]!\n  aggregate: AggregateWebsite!\n}\n\ninput WebsiteCreateInput {\n  url: String!\n  belongsTo: UserCreateOneWithoutWebsitesInput\n}\n\ninput WebsiteCreateManyWithoutBelongsToInput {\n  create: [WebsiteCreateWithoutBelongsToInput!]\n  connect: [WebsiteWhereUniqueInput!]\n}\n\ninput WebsiteCreateWithoutBelongsToInput {\n  url: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype WebsiteEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Website!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum WebsiteOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  url_ASC\n  url_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype WebsitePreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  url: String!\n}\n\ntype WebsiteSubscriptionPayload {\n  mutation: MutationType!\n  node: Website\n  updatedFields: [String!]\n  previousValues: WebsitePreviousValues\n}\n\ninput WebsiteSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [WebsiteSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [WebsiteSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [WebsiteSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: WebsiteWhereInput\n}\n\ninput WebsiteUpdateInput {\n  url: String\n  belongsTo: UserUpdateOneWithoutWebsitesInput\n}\n\ninput WebsiteUpdateManyWithoutBelongsToInput {\n  create: [WebsiteCreateWithoutBelongsToInput!]\n  connect: [WebsiteWhereUniqueInput!]\n  disconnect: [WebsiteWhereUniqueInput!]\n  delete: [WebsiteWhereUniqueInput!]\n  update: [WebsiteUpdateWithWhereUniqueWithoutBelongsToInput!]\n  upsert: [WebsiteUpsertWithWhereUniqueWithoutBelongsToInput!]\n}\n\ninput WebsiteUpdateWithoutBelongsToDataInput {\n  url: String\n}\n\ninput WebsiteUpdateWithWhereUniqueWithoutBelongsToInput {\n  where: WebsiteWhereUniqueInput!\n  data: WebsiteUpdateWithoutBelongsToDataInput!\n}\n\ninput WebsiteUpsertWithWhereUniqueWithoutBelongsToInput {\n  where: WebsiteWhereUniqueInput!\n  update: WebsiteUpdateWithoutBelongsToDataInput!\n  create: WebsiteCreateWithoutBelongsToInput!\n}\n\ninput WebsiteWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [WebsiteWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [WebsiteWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [WebsiteWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  url: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  url_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  url_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  url_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  url_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  url_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  url_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  url_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  url_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  url_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  url_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  url_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  url_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  url_not_ends_with: String\n  belongsTo: UserWhereInput\n}\n\ninput WebsiteWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 17,
      "containsCycle": true,
      "numDefinitions": 44
    }
  ],
  "metrics": {
    "created_at": "2018-09-02T14:41:13Z",
    "updated_at": "2018-09-02T15:09:16Z",
    "pushed_at": "2018-09-02T15:09:14Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 1,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 1,
    "releases": 0,
    "stargazers": 0
  }
}