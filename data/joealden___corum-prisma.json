{
  "repo_name": "corum-prisma",
  "repo_full_name": "joealden/corum-prisma",
  "repo_owner": "joealden",
  "repo_description": "An implementation of Corum's API using Prisma and graphql-yoga.",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "src/generated/prisma.graphql",
      "sha": "5f558fa2a7f4df211eaa4aa3f3d0ec3b9b4743d1",
      "url": "https://api.github.com/repositories/121021300/contents/src/generated/prisma.graphql?ref=7a971e9c7c576e0643645fe7b92d2c98a1262bc8",
      "git_url": "https://api.github.com/repositories/121021300/git/blobs/5f558fa2a7f4df211eaa4aa3f3d0ec3b9b4743d1",
      "html_url": "https://github.com/joealden/corum-prisma/blob/7a971e9c7c576e0643645fe7b92d2c98a1262bc8/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Comment implements Node {\n  id: ID!\n  post(where: PostWhereInput): Post!\n  author: String!\n  content: String!\n}\n\ntype Favorite implements Node {\n  id: ID!\n  user(where: UserWhereInput): User!\n  subforum(where: SubforumWhereInput): Subforum!\n}\n\ntype Post implements Node {\n  id: ID!\n  subforum(where: SubforumWhereInput): Subforum!\n  title: String!\n  author(where: UserWhereInput): User!\n  content: String!\n  voteCount: Int\n  createdAt: DateTime!\n  comments(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment!]\n  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]\n}\n\ntype Subforum implements Node {\n  id: ID!\n  url: String!\n  name: String!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]\n  favorites(where: FavoriteWhereInput, orderBy: FavoriteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Favorite!]\n}\n\ntype User implements Node {\n  id: ID!\n  username: String!\n  email: String!\n  password: String!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]\n  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]\n  favorites(where: FavoriteWhereInput, orderBy: FavoriteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Favorite!]\n}\n\ntype Vote implements Node {\n  id: ID!\n  post(where: PostWhereInput): Post!\n  user(where: UserWhereInput): User!\n  vote: VoteType!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateComment {\n  count: Int!\n}\n\ntype AggregateFavorite {\n  count: Int!\n}\n\ntype AggregatePost {\n  count: Int!\n}\n\ntype AggregateSubforum {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype AggregateVote {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype CommentConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CommentEdge]!\n  aggregate: AggregateComment!\n}\n\ninput CommentCreateInput {\n  author: String!\n  content: String!\n  post: PostCreateOneWithoutCommentsInput!\n}\n\ninput CommentCreateManyWithoutPostInput {\n  create: [CommentCreateWithoutPostInput!]\n  connect: [CommentWhereUniqueInput!]\n}\n\ninput CommentCreateWithoutPostInput {\n  author: String!\n  content: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CommentEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Comment!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum CommentOrderByInput {\n  id_ASC\n  id_DESC\n  author_ASC\n  author_DESC\n  content_ASC\n  content_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CommentPreviousValues {\n  id: ID!\n  author: String!\n  content: String!\n}\n\ntype CommentSubscriptionPayload {\n  mutation: MutationType!\n  node: Comment\n  updatedFields: [String!]\n  previousValues: CommentPreviousValues\n}\n\ninput CommentSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CommentSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CommentSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CommentWhereInput\n}\n\ninput CommentUpdateInput {\n  author: String\n  content: String\n  post: PostUpdateOneWithoutCommentsInput\n}\n\ninput CommentUpdateManyWithoutPostInput {\n  create: [CommentCreateWithoutPostInput!]\n  connect: [CommentWhereUniqueInput!]\n  disconnect: [CommentWhereUniqueInput!]\n  delete: [CommentWhereUniqueInput!]\n  update: [CommentUpdateWithoutPostInput!]\n  upsert: [CommentUpsertWithoutPostInput!]\n}\n\ninput CommentUpdateWithoutPostDataInput {\n  author: String\n  content: String\n}\n\ninput CommentUpdateWithoutPostInput {\n  where: CommentWhereUniqueInput!\n  data: CommentUpdateWithoutPostDataInput!\n}\n\ninput CommentUpsertWithoutPostInput {\n  where: CommentWhereUniqueInput!\n  update: CommentUpdateWithoutPostDataInput!\n  create: CommentCreateWithoutPostInput!\n}\n\ninput CommentWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [CommentWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [CommentWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  author: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  author_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  author_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  author_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  author_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  author_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  author_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  author_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  author_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  author_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  author_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  author_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  author_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  author_not_ends_with: String\n  content: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  content_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  content_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  content_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  content_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  content_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  content_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  content_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  content_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  content_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  content_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  content_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  content_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  content_not_ends_with: String\n  post: PostWhereInput\n}\n\ninput CommentWhereUniqueInput {\n  id: ID\n}\n\nscalar DateTime\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype FavoriteConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [FavoriteEdge]!\n  aggregate: AggregateFavorite!\n}\n\ninput FavoriteCreateInput {\n  user: UserCreateOneWithoutFavoritesInput!\n  subforum: SubforumCreateOneWithoutFavoritesInput!\n}\n\ninput FavoriteCreateManyWithoutSubforumInput {\n  create: [FavoriteCreateWithoutSubforumInput!]\n  connect: [FavoriteWhereUniqueInput!]\n}\n\ninput FavoriteCreateManyWithoutUserInput {\n  create: [FavoriteCreateWithoutUserInput!]\n  connect: [FavoriteWhereUniqueInput!]\n}\n\ninput FavoriteCreateWithoutSubforumInput {\n  user: UserCreateOneWithoutFavoritesInput!\n}\n\ninput FavoriteCreateWithoutUserInput {\n  subforum: SubforumCreateOneWithoutFavoritesInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype FavoriteEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Favorite!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum FavoriteOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype FavoritePreviousValues {\n  id: ID!\n}\n\ntype FavoriteSubscriptionPayload {\n  mutation: MutationType!\n  node: Favorite\n  updatedFields: [String!]\n  previousValues: FavoritePreviousValues\n}\n\ninput FavoriteSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FavoriteSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FavoriteSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FavoriteWhereInput\n}\n\ninput FavoriteUpdateInput {\n  user: UserUpdateOneWithoutFavoritesInput\n  subforum: SubforumUpdateOneWithoutFavoritesInput\n}\n\ninput FavoriteUpdateManyWithoutSubforumInput {\n  create: [FavoriteCreateWithoutSubforumInput!]\n  connect: [FavoriteWhereUniqueInput!]\n  disconnect: [FavoriteWhereUniqueInput!]\n  delete: [FavoriteWhereUniqueInput!]\n  update: [FavoriteUpdateWithoutSubforumInput!]\n  upsert: [FavoriteUpsertWithoutSubforumInput!]\n}\n\ninput FavoriteUpdateManyWithoutUserInput {\n  create: [FavoriteCreateWithoutUserInput!]\n  connect: [FavoriteWhereUniqueInput!]\n  disconnect: [FavoriteWhereUniqueInput!]\n  delete: [FavoriteWhereUniqueInput!]\n  update: [FavoriteUpdateWithoutUserInput!]\n  upsert: [FavoriteUpsertWithoutUserInput!]\n}\n\ninput FavoriteUpdateWithoutSubforumDataInput {\n  user: UserUpdateOneWithoutFavoritesInput\n}\n\ninput FavoriteUpdateWithoutSubforumInput {\n  where: FavoriteWhereUniqueInput!\n  data: FavoriteUpdateWithoutSubforumDataInput!\n}\n\ninput FavoriteUpdateWithoutUserDataInput {\n  subforum: SubforumUpdateOneWithoutFavoritesInput\n}\n\ninput FavoriteUpdateWithoutUserInput {\n  where: FavoriteWhereUniqueInput!\n  data: FavoriteUpdateWithoutUserDataInput!\n}\n\ninput FavoriteUpsertWithoutSubforumInput {\n  where: FavoriteWhereUniqueInput!\n  update: FavoriteUpdateWithoutSubforumDataInput!\n  create: FavoriteCreateWithoutSubforumInput!\n}\n\ninput FavoriteUpsertWithoutUserInput {\n  where: FavoriteWhereUniqueInput!\n  update: FavoriteUpdateWithoutUserDataInput!\n  create: FavoriteCreateWithoutUserInput!\n}\n\ninput FavoriteWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [FavoriteWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [FavoriteWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  user: UserWhereInput\n  subforum: SubforumWhereInput\n}\n\ninput FavoriteWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  createSubforum(data: SubforumCreateInput!): Subforum!\n  createFavorite(data: FavoriteCreateInput!): Favorite!\n  createPost(data: PostCreateInput!): Post!\n  createComment(data: CommentCreateInput!): Comment!\n  createVote(data: VoteCreateInput!): Vote!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateSubforum(data: SubforumUpdateInput!, where: SubforumWhereUniqueInput!): Subforum\n  updateFavorite(data: FavoriteUpdateInput!, where: FavoriteWhereUniqueInput!): Favorite\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  updateComment(data: CommentUpdateInput!, where: CommentWhereUniqueInput!): Comment\n  updateVote(data: VoteUpdateInput!, where: VoteWhereUniqueInput!): Vote\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteSubforum(where: SubforumWhereUniqueInput!): Subforum\n  deleteFavorite(where: FavoriteWhereUniqueInput!): Favorite\n  deletePost(where: PostWhereUniqueInput!): Post\n  deleteComment(where: CommentWhereUniqueInput!): Comment\n  deleteVote(where: VoteWhereUniqueInput!): Vote\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertSubforum(where: SubforumWhereUniqueInput!, create: SubforumCreateInput!, update: SubforumUpdateInput!): Subforum!\n  upsertFavorite(where: FavoriteWhereUniqueInput!, create: FavoriteCreateInput!, update: FavoriteUpdateInput!): Favorite!\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  upsertComment(where: CommentWhereUniqueInput!, create: CommentCreateInput!, update: CommentUpdateInput!): Comment!\n  upsertVote(where: VoteWhereUniqueInput!, create: VoteCreateInput!, update: VoteUpdateInput!): Vote!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!\n  updateManySubforums(data: SubforumUpdateInput!, where: SubforumWhereInput!): BatchPayload!\n  updateManyFavorites(data: FavoriteUpdateInput!, where: FavoriteWhereInput!): BatchPayload!\n  updateManyPosts(data: PostUpdateInput!, where: PostWhereInput!): BatchPayload!\n  updateManyComments(data: CommentUpdateInput!, where: CommentWhereInput!): BatchPayload!\n  updateManyVotes(data: VoteUpdateInput!, where: VoteWhereInput!): BatchPayload!\n  deleteManyUsers(where: UserWhereInput!): BatchPayload!\n  deleteManySubforums(where: SubforumWhereInput!): BatchPayload!\n  deleteManyFavorites(where: FavoriteWhereInput!): BatchPayload!\n  deleteManyPosts(where: PostWhereInput!): BatchPayload!\n  deleteManyComments(where: CommentWhereInput!): BatchPayload!\n  deleteManyVotes(where: VoteWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype PostConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  title: String!\n  content: String!\n  voteCount: Int\n  subforum: SubforumCreateOneWithoutPostsInput!\n  author: UserCreateOneWithoutPostsInput!\n  comments: CommentCreateManyWithoutPostInput\n  votes: VoteCreateManyWithoutPostInput\n}\n\ninput PostCreateManyWithoutAuthorInput {\n  create: [PostCreateWithoutAuthorInput!]\n  connect: [PostWhereUniqueInput!]\n}\n\ninput PostCreateManyWithoutSubforumInput {\n  create: [PostCreateWithoutSubforumInput!]\n  connect: [PostWhereUniqueInput!]\n}\n\ninput PostCreateOneWithoutCommentsInput {\n  create: PostCreateWithoutCommentsInput\n  connect: PostWhereUniqueInput\n}\n\ninput PostCreateOneWithoutVotesInput {\n  create: PostCreateWithoutVotesInput\n  connect: PostWhereUniqueInput\n}\n\ninput PostCreateWithoutAuthorInput {\n  title: String!\n  content: String!\n  voteCount: Int\n  subforum: SubforumCreateOneWithoutPostsInput!\n  comments: CommentCreateManyWithoutPostInput\n  votes: VoteCreateManyWithoutPostInput\n}\n\ninput PostCreateWithoutCommentsInput {\n  title: String!\n  content: String!\n  voteCount: Int\n  subforum: SubforumCreateOneWithoutPostsInput!\n  author: UserCreateOneWithoutPostsInput!\n  votes: VoteCreateManyWithoutPostInput\n}\n\ninput PostCreateWithoutSubforumInput {\n  title: String!\n  content: String!\n  voteCount: Int\n  author: UserCreateOneWithoutPostsInput!\n  comments: CommentCreateManyWithoutPostInput\n  votes: VoteCreateManyWithoutPostInput\n}\n\ninput PostCreateWithoutVotesInput {\n  title: String!\n  content: String!\n  voteCount: Int\n  subforum: SubforumCreateOneWithoutPostsInput!\n  author: UserCreateOneWithoutPostsInput!\n  comments: CommentCreateManyWithoutPostInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PostEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Post!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  title_ASC\n  title_DESC\n  content_ASC\n  content_DESC\n  voteCount_ASC\n  voteCount_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  title: String!\n  content: String!\n  voteCount: Int\n  createdAt: DateTime!\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n}\n\ninput PostUpdateInput {\n  title: String\n  content: String\n  voteCount: Int\n  subforum: SubforumUpdateOneWithoutPostsInput\n  author: UserUpdateOneWithoutPostsInput\n  comments: CommentUpdateManyWithoutPostInput\n  votes: VoteUpdateManyWithoutPostInput\n}\n\ninput PostUpdateManyWithoutAuthorInput {\n  create: [PostCreateWithoutAuthorInput!]\n  connect: [PostWhereUniqueInput!]\n  disconnect: [PostWhereUniqueInput!]\n  delete: [PostWhereUniqueInput!]\n  update: [PostUpdateWithoutAuthorInput!]\n  upsert: [PostUpsertWithoutAuthorInput!]\n}\n\ninput PostUpdateManyWithoutSubforumInput {\n  create: [PostCreateWithoutSubforumInput!]\n  connect: [PostWhereUniqueInput!]\n  disconnect: [PostWhereUniqueInput!]\n  delete: [PostWhereUniqueInput!]\n  update: [PostUpdateWithoutSubforumInput!]\n  upsert: [PostUpsertWithoutSubforumInput!]\n}\n\ninput PostUpdateOneWithoutCommentsInput {\n  create: PostCreateWithoutCommentsInput\n  connect: PostWhereUniqueInput\n  disconnect: PostWhereUniqueInput\n  delete: PostWhereUniqueInput\n  update: PostUpdateWithoutCommentsInput\n  upsert: PostUpsertWithoutCommentsInput\n}\n\ninput PostUpdateOneWithoutVotesInput {\n  create: PostCreateWithoutVotesInput\n  connect: PostWhereUniqueInput\n  disconnect: PostWhereUniqueInput\n  delete: PostWhereUniqueInput\n  update: PostUpdateWithoutVotesInput\n  upsert: PostUpsertWithoutVotesInput\n}\n\ninput PostUpdateWithoutAuthorDataInput {\n  title: String\n  content: String\n  voteCount: Int\n  subforum: SubforumUpdateOneWithoutPostsInput\n  comments: CommentUpdateManyWithoutPostInput\n  votes: VoteUpdateManyWithoutPostInput\n}\n\ninput PostUpdateWithoutAuthorInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutAuthorDataInput!\n}\n\ninput PostUpdateWithoutCommentsDataInput {\n  title: String\n  content: String\n  voteCount: Int\n  subforum: SubforumUpdateOneWithoutPostsInput\n  author: UserUpdateOneWithoutPostsInput\n  votes: VoteUpdateManyWithoutPostInput\n}\n\ninput PostUpdateWithoutCommentsInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutCommentsDataInput!\n}\n\ninput PostUpdateWithoutSubforumDataInput {\n  title: String\n  content: String\n  voteCount: Int\n  author: UserUpdateOneWithoutPostsInput\n  comments: CommentUpdateManyWithoutPostInput\n  votes: VoteUpdateManyWithoutPostInput\n}\n\ninput PostUpdateWithoutSubforumInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutSubforumDataInput!\n}\n\ninput PostUpdateWithoutVotesDataInput {\n  title: String\n  content: String\n  voteCount: Int\n  subforum: SubforumUpdateOneWithoutPostsInput\n  author: UserUpdateOneWithoutPostsInput\n  comments: CommentUpdateManyWithoutPostInput\n}\n\ninput PostUpdateWithoutVotesInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutVotesDataInput!\n}\n\ninput PostUpsertWithoutAuthorInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutAuthorDataInput!\n  create: PostCreateWithoutAuthorInput!\n}\n\ninput PostUpsertWithoutCommentsInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutCommentsDataInput!\n  create: PostCreateWithoutCommentsInput!\n}\n\ninput PostUpsertWithoutSubforumInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutSubforumDataInput!\n  create: PostCreateWithoutSubforumInput!\n}\n\ninput PostUpsertWithoutVotesInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutVotesDataInput!\n  create: PostCreateWithoutVotesInput!\n}\n\ninput PostWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [PostWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [PostWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  title: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  title_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  title_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  title_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  title_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  title_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  title_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  title_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  title_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  title_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  title_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  title_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  title_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  title_not_ends_with: String\n  content: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  content_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  content_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  content_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  content_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  content_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  content_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  content_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  content_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  content_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  content_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  content_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  content_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  content_not_ends_with: String\n  voteCount: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  voteCount_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  voteCount_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  voteCount_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  voteCount_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  voteCount_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  voteCount_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  voteCount_gte: Int\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  subforum: SubforumWhereInput\n  author: UserWhereInput\n  comments_every: CommentWhereInput\n  comments_some: CommentWhereInput\n  comments_none: CommentWhereInput\n  votes_every: VoteWhereInput\n  votes_some: VoteWhereInput\n  votes_none: VoteWhereInput\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  subforums(where: SubforumWhereInput, orderBy: SubforumOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Subforum]!\n  favorites(where: FavoriteWhereInput, orderBy: FavoriteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Favorite]!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  comments(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment]!\n  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote]!\n  user(where: UserWhereUniqueInput!): User\n  subforum(where: SubforumWhereUniqueInput!): Subforum\n  favorite(where: FavoriteWhereUniqueInput!): Favorite\n  post(where: PostWhereUniqueInput!): Post\n  comment(where: CommentWhereUniqueInput!): Comment\n  vote(where: VoteWhereUniqueInput!): Vote\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  subforumsConnection(where: SubforumWhereInput, orderBy: SubforumOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SubforumConnection!\n  favoritesConnection(where: FavoriteWhereInput, orderBy: FavoriteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FavoriteConnection!\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n  commentsConnection(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CommentConnection!\n  votesConnection(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VoteConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!): Node\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype SubforumConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [SubforumEdge]!\n  aggregate: AggregateSubforum!\n}\n\ninput SubforumCreateInput {\n  url: String!\n  name: String!\n  posts: PostCreateManyWithoutSubforumInput\n  favorites: FavoriteCreateManyWithoutSubforumInput\n}\n\ninput SubforumCreateOneWithoutFavoritesInput {\n  create: SubforumCreateWithoutFavoritesInput\n  connect: SubforumWhereUniqueInput\n}\n\ninput SubforumCreateOneWithoutPostsInput {\n  create: SubforumCreateWithoutPostsInput\n  connect: SubforumWhereUniqueInput\n}\n\ninput SubforumCreateWithoutFavoritesInput {\n  url: String!\n  name: String!\n  posts: PostCreateManyWithoutSubforumInput\n}\n\ninput SubforumCreateWithoutPostsInput {\n  url: String!\n  name: String!\n  favorites: FavoriteCreateManyWithoutSubforumInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype SubforumEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Subforum!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum SubforumOrderByInput {\n  id_ASC\n  id_DESC\n  url_ASC\n  url_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype SubforumPreviousValues {\n  id: ID!\n  url: String!\n  name: String!\n}\n\ntype SubforumSubscriptionPayload {\n  mutation: MutationType!\n  node: Subforum\n  updatedFields: [String!]\n  previousValues: SubforumPreviousValues\n}\n\ninput SubforumSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SubforumSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SubforumSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SubforumWhereInput\n}\n\ninput SubforumUpdateInput {\n  url: String\n  name: String\n  posts: PostUpdateManyWithoutSubforumInput\n  favorites: FavoriteUpdateManyWithoutSubforumInput\n}\n\ninput SubforumUpdateOneWithoutFavoritesInput {\n  create: SubforumCreateWithoutFavoritesInput\n  connect: SubforumWhereUniqueInput\n  disconnect: SubforumWhereUniqueInput\n  delete: SubforumWhereUniqueInput\n  update: SubforumUpdateWithoutFavoritesInput\n  upsert: SubforumUpsertWithoutFavoritesInput\n}\n\ninput SubforumUpdateOneWithoutPostsInput {\n  create: SubforumCreateWithoutPostsInput\n  connect: SubforumWhereUniqueInput\n  disconnect: SubforumWhereUniqueInput\n  delete: SubforumWhereUniqueInput\n  update: SubforumUpdateWithoutPostsInput\n  upsert: SubforumUpsertWithoutPostsInput\n}\n\ninput SubforumUpdateWithoutFavoritesDataInput {\n  url: String\n  name: String\n  posts: PostUpdateManyWithoutSubforumInput\n}\n\ninput SubforumUpdateWithoutFavoritesInput {\n  where: SubforumWhereUniqueInput!\n  data: SubforumUpdateWithoutFavoritesDataInput!\n}\n\ninput SubforumUpdateWithoutPostsDataInput {\n  url: String\n  name: String\n  favorites: FavoriteUpdateManyWithoutSubforumInput\n}\n\ninput SubforumUpdateWithoutPostsInput {\n  where: SubforumWhereUniqueInput!\n  data: SubforumUpdateWithoutPostsDataInput!\n}\n\ninput SubforumUpsertWithoutFavoritesInput {\n  where: SubforumWhereUniqueInput!\n  update: SubforumUpdateWithoutFavoritesDataInput!\n  create: SubforumCreateWithoutFavoritesInput!\n}\n\ninput SubforumUpsertWithoutPostsInput {\n  where: SubforumWhereUniqueInput!\n  update: SubforumUpdateWithoutPostsDataInput!\n  create: SubforumCreateWithoutPostsInput!\n}\n\ninput SubforumWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [SubforumWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [SubforumWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  url: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  url_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  url_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  url_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  url_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  url_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  url_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  url_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  url_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  url_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  url_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  url_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  url_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  url_not_ends_with: String\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  posts_every: PostWhereInput\n  posts_some: PostWhereInput\n  posts_none: PostWhereInput\n  favorites_every: FavoriteWhereInput\n  favorites_some: FavoriteWhereInput\n  favorites_none: FavoriteWhereInput\n}\n\ninput SubforumWhereUniqueInput {\n  id: ID\n  url: String\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  subforum(where: SubforumSubscriptionWhereInput): SubforumSubscriptionPayload\n  favorite(where: FavoriteSubscriptionWhereInput): FavoriteSubscriptionPayload\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n  comment(where: CommentSubscriptionWhereInput): CommentSubscriptionPayload\n  vote(where: VoteSubscriptionWhereInput): VoteSubscriptionPayload\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  username: String!\n  email: String!\n  password: String!\n  posts: PostCreateManyWithoutAuthorInput\n  votes: VoteCreateManyWithoutUserInput\n  favorites: FavoriteCreateManyWithoutUserInput\n}\n\ninput UserCreateOneWithoutFavoritesInput {\n  create: UserCreateWithoutFavoritesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutVotesInput {\n  create: UserCreateWithoutVotesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutFavoritesInput {\n  username: String!\n  email: String!\n  password: String!\n  posts: PostCreateManyWithoutAuthorInput\n  votes: VoteCreateManyWithoutUserInput\n}\n\ninput UserCreateWithoutPostsInput {\n  username: String!\n  email: String!\n  password: String!\n  votes: VoteCreateManyWithoutUserInput\n  favorites: FavoriteCreateManyWithoutUserInput\n}\n\ninput UserCreateWithoutVotesInput {\n  username: String!\n  email: String!\n  password: String!\n  posts: PostCreateManyWithoutAuthorInput\n  favorites: FavoriteCreateManyWithoutUserInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  username_ASC\n  username_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  username: String!\n  email: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  username: String\n  email: String\n  password: String\n  posts: PostUpdateManyWithoutAuthorInput\n  votes: VoteUpdateManyWithoutUserInput\n  favorites: FavoriteUpdateManyWithoutUserInput\n}\n\ninput UserUpdateOneWithoutFavoritesInput {\n  create: UserCreateWithoutFavoritesInput\n  connect: UserWhereUniqueInput\n  disconnect: UserWhereUniqueInput\n  delete: UserWhereUniqueInput\n  update: UserUpdateWithoutFavoritesInput\n  upsert: UserUpsertWithoutFavoritesInput\n}\n\ninput UserUpdateOneWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n  disconnect: UserWhereUniqueInput\n  delete: UserWhereUniqueInput\n  update: UserUpdateWithoutPostsInput\n  upsert: UserUpsertWithoutPostsInput\n}\n\ninput UserUpdateOneWithoutVotesInput {\n  create: UserCreateWithoutVotesInput\n  connect: UserWhereUniqueInput\n  disconnect: UserWhereUniqueInput\n  delete: UserWhereUniqueInput\n  update: UserUpdateWithoutVotesInput\n  upsert: UserUpsertWithoutVotesInput\n}\n\ninput UserUpdateWithoutFavoritesDataInput {\n  username: String\n  email: String\n  password: String\n  posts: PostUpdateManyWithoutAuthorInput\n  votes: VoteUpdateManyWithoutUserInput\n}\n\ninput UserUpdateWithoutFavoritesInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutFavoritesDataInput!\n}\n\ninput UserUpdateWithoutPostsDataInput {\n  username: String\n  email: String\n  password: String\n  votes: VoteUpdateManyWithoutUserInput\n  favorites: FavoriteUpdateManyWithoutUserInput\n}\n\ninput UserUpdateWithoutPostsInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutPostsDataInput!\n}\n\ninput UserUpdateWithoutVotesDataInput {\n  username: String\n  email: String\n  password: String\n  posts: PostUpdateManyWithoutAuthorInput\n  favorites: FavoriteUpdateManyWithoutUserInput\n}\n\ninput UserUpdateWithoutVotesInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutVotesDataInput!\n}\n\ninput UserUpsertWithoutFavoritesInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutFavoritesDataInput!\n  create: UserCreateWithoutFavoritesInput!\n}\n\ninput UserUpsertWithoutPostsInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutPostsDataInput!\n  create: UserCreateWithoutPostsInput!\n}\n\ninput UserUpsertWithoutVotesInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutVotesDataInput!\n  create: UserCreateWithoutVotesInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  username: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  username_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  username_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  username_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  username_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  username_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  username_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  username_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  username_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  username_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  username_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  username_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  username_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  username_not_ends_with: String\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  password: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  password_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  password_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  password_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  password_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  password_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  password_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  password_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  password_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  password_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  password_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  password_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  password_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  password_not_ends_with: String\n  posts_every: PostWhereInput\n  posts_some: PostWhereInput\n  posts_none: PostWhereInput\n  votes_every: VoteWhereInput\n  votes_some: VoteWhereInput\n  votes_none: VoteWhereInput\n  favorites_every: FavoriteWhereInput\n  favorites_some: FavoriteWhereInput\n  favorites_none: FavoriteWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  username: String\n  email: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype VoteConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [VoteEdge]!\n  aggregate: AggregateVote!\n}\n\ninput VoteCreateInput {\n  vote: VoteType!\n  post: PostCreateOneWithoutVotesInput!\n  user: UserCreateOneWithoutVotesInput!\n}\n\ninput VoteCreateManyWithoutPostInput {\n  create: [VoteCreateWithoutPostInput!]\n  connect: [VoteWhereUniqueInput!]\n}\n\ninput VoteCreateManyWithoutUserInput {\n  create: [VoteCreateWithoutUserInput!]\n  connect: [VoteWhereUniqueInput!]\n}\n\ninput VoteCreateWithoutPostInput {\n  vote: VoteType!\n  user: UserCreateOneWithoutVotesInput!\n}\n\ninput VoteCreateWithoutUserInput {\n  vote: VoteType!\n  post: PostCreateOneWithoutVotesInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype VoteEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Vote!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum VoteOrderByInput {\n  id_ASC\n  id_DESC\n  vote_ASC\n  vote_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype VotePreviousValues {\n  id: ID!\n  vote: VoteType!\n}\n\ntype VoteSubscriptionPayload {\n  mutation: MutationType!\n  node: Vote\n  updatedFields: [String!]\n  previousValues: VotePreviousValues\n}\n\ninput VoteSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [VoteSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [VoteSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: VoteWhereInput\n}\n\nenum VoteType {\n  VOTE_UP\n  VOTE_DOWN\n}\n\ninput VoteUpdateInput {\n  vote: VoteType\n  post: PostUpdateOneWithoutVotesInput\n  user: UserUpdateOneWithoutVotesInput\n}\n\ninput VoteUpdateManyWithoutPostInput {\n  create: [VoteCreateWithoutPostInput!]\n  connect: [VoteWhereUniqueInput!]\n  disconnect: [VoteWhereUniqueInput!]\n  delete: [VoteWhereUniqueInput!]\n  update: [VoteUpdateWithoutPostInput!]\n  upsert: [VoteUpsertWithoutPostInput!]\n}\n\ninput VoteUpdateManyWithoutUserInput {\n  create: [VoteCreateWithoutUserInput!]\n  connect: [VoteWhereUniqueInput!]\n  disconnect: [VoteWhereUniqueInput!]\n  delete: [VoteWhereUniqueInput!]\n  update: [VoteUpdateWithoutUserInput!]\n  upsert: [VoteUpsertWithoutUserInput!]\n}\n\ninput VoteUpdateWithoutPostDataInput {\n  vote: VoteType\n  user: UserUpdateOneWithoutVotesInput\n}\n\ninput VoteUpdateWithoutPostInput {\n  where: VoteWhereUniqueInput!\n  data: VoteUpdateWithoutPostDataInput!\n}\n\ninput VoteUpdateWithoutUserDataInput {\n  vote: VoteType\n  post: PostUpdateOneWithoutVotesInput\n}\n\ninput VoteUpdateWithoutUserInput {\n  where: VoteWhereUniqueInput!\n  data: VoteUpdateWithoutUserDataInput!\n}\n\ninput VoteUpsertWithoutPostInput {\n  where: VoteWhereUniqueInput!\n  update: VoteUpdateWithoutPostDataInput!\n  create: VoteCreateWithoutPostInput!\n}\n\ninput VoteUpsertWithoutUserInput {\n  where: VoteWhereUniqueInput!\n  update: VoteUpdateWithoutUserDataInput!\n  create: VoteCreateWithoutUserInput!\n}\n\ninput VoteWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [VoteWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [VoteWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  vote: VoteType\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  vote_not: VoteType\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  vote_in: [VoteType!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  vote_not_in: [VoteType!]\n  post: PostWhereInput\n  user: UserWhereInput\n}\n\ninput VoteWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 41,
      "containsCycle": true,
      "numDefinitions": 166
    }
  ],
  "metrics": {
    "created_at": "2018-02-10T14:16:17Z",
    "updated_at": "2018-07-22T23:09:05Z",
    "pushed_at": "2018-02-28T23:58:14Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}