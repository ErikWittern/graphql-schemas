{
  "repo_name": "resume",
  "repo_full_name": "kadharmfn/resume",
  "repo_owner": "kadharmfn",
  "repo_description": "Professional Developer Resume Template built using Node JS, React , Graphql and Relay Modern",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "data/schema.graphql",
      "sha": "054dcd3f82189ec69a6b86f04eea4894bc4cd725",
      "url": "https://api.github.com/repositories/121337046/contents/data/schema.graphql?ref=a30ca8daef9f51659508fd743b1f0b065c54890c",
      "git_url": "https://api.github.com/repositories/121337046/git/blobs/054dcd3f82189ec69a6b86f04eea4894bc4cd725",
      "html_url": "https://github.com/kadharmfn/resume/blob/a30ca8daef9f51659508fd743b1f0b065c54890c/data/schema.graphql",
      "content": "type Query {\n  hello: String\n  user: User\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype EducationConnection {\n  pageInfo: PageInfo!\n  edges: [EducationEdge]\n}\n\ntype ExperienceConnection {\n  pageInfo: PageInfo!\n  edges: [ExperienceEdge]\n}\n\ntype Education implements Node {\n  id: ID!\n  collegeName: String\n  address: String\n  course: String\n  yearOfCompletion: Int\n}\n\ntype EducationEdge {\n  node: Education\n  cursor: String!\n}\n\ntype Experience implements Node {\n  id: ID!\n  clientName: String\n  clientAddress: String\n  duration: String\n  role: String\n  projects(after: String, first: Int, before: String, last: Int): ProjectConnection\n}\n\ntype ExperienceEdge {\n  node: Experience\n  cursor: String!\n}\n\ntype ProjectConnection {\n  pageInfo: PageInfo!\n  edges: [ProjectEdge]\n}\n\ntype ProjectEdge {\n  node: Project\n  cursor: String!\n}\n\ntype Project implements Node {\n  id: ID!\n  name: String\n  responsibilities: [String]\n  skillsAndTools: String\n}\n\ntype User implements Node {\n    id: ID!\n    name: String\n    phone: String\n    email: String\n    jobTitle: String\n    address: Address\n    professionalExp: ProfessionalExp\n    experience(after: String, first: Int, before: String, last: Int): ExperienceConnection\n    education(after: String, first: Int, before: String, last: Int): EducationConnection\n}\n\ntype Address {\n  street1: String\n  street2: String\n  city: String\n  state: String\n  pinCode: Int\n}\n\ntype ProfessionalExp {\n  title: String\n  experiences: [String]\n}",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 14,
      "containsCycle": false,
      "polynomialLevel": 2,
      "numDefinitions": 15
    }
  ],
  "metrics": {
    "created_at": "2018-02-13T04:05:54Z",
    "updated_at": "2018-02-13T04:09:12Z",
    "pushed_at": "2018-02-22T00:49:38Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 4,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 4,
    "releases": 0,
    "stargazers": 0
  }
}