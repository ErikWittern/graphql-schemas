{
  "repo_name": "graphql-playground",
  "repo_full_name": "prisma/graphql-playground",
  "repo_owner": "prisma",
  "repo_description": "ðŸŽ®  GraphQL IDE for better development workflows (GraphQL Subscriptions, interactive docs & collaboration)",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "instagram-full.graphql",
      "path": "packages/graphql-playground-react/public/instagram-full.graphql",
      "sha": "c2e9345d64ebeb240d0bc8f7ca45dc085633c96c",
      "url": "https://api.github.com/repositories/80016159/contents/packages/graphql-playground-react/public/instagram-full.graphql?ref=5b019b862f2a82396b0cccb2020e17dcb6215e7a",
      "git_url": "https://api.github.com/repositories/80016159/git/blobs/c2e9345d64ebeb240d0bc8f7ca45dc085633c96c",
      "html_url": "https://github.com/prisma/graphql-playground/blob/5b019b862f2a82396b0cccb2020e17dcb6215e7a/packages/graphql-playground-react/public/instagram-full.graphql",
      "content": "# The `BigDecimal` scalar type represents signed fractional values with arbitrary precision.\nscalar BigDecimal\n\n# The `BigInt` scalar type represents non-fractional signed whole numeric values. BigInt can represent arbitrary big values.\nscalar BigInt\n\ninput CreateFile {\n  name: String!\n}\n\ninput CreateFileInput {\n  name: String!\n  clientMutationId: String!\n}\n\ntype CreateFilePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  file: File\n  edge: FileEdge\n}\n\ninput CreatePost {\n  description: String!\n  imageUrl: String!\n}\n\ninput CreatePostInput {\n  description: String!\n  imageUrl: String!\n  clientMutationId: String!\n}\n\ntype CreatePostPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  post: Post\n  edge: PostEdge\n}\n\n# If authentication was successful the payload contains the user and a token. If unsuccessful this payload is null.\ntype CreateUserPayload {\n  user: User\n  clientMutationId: String\n  viewer: Viewer!\n}\n\nscalar DateTime\n\ninput DeleteFileInput {\n  id: ID!\n  clientMutationId: String!\n}\n\ntype DeleteFilePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  file: File\n  edge: FileEdge\n  deletedId: ID\n}\n\ninput DeletePostInput {\n  id: ID!\n  clientMutationId: String!\n}\n\ntype DeletePostPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  post: Post\n  edge: PostEdge\n  deletedId: ID\n}\n\ninput DeleteUserInput {\n  id: ID!\n  clientMutationId: String!\n}\n\ntype DeleteUserPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  user: User\n  edge: UserEdge\n  deletedId: ID\n}\n\ntype File implements Node {\n  contentType: String!\n  createdAt: DateTime!\n  id: ID!\n  name: String!\n  secret: String!\n  size: Int!\n  updatedAt: DateTime!\n  url: String!\n}\n\n# A connection to a list of items.\ntype FileConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [FileEdge]\n\n  # Count of filtered result set without considering pagination arguments\n  count: Int!\n}\n\n# An edge in a connection.\ntype FileEdge {\n  # The item at the end of the edge.\n  node: File!\n\n  # A cursor for use in pagination.\n  cursor: String!\n}\n\ninput FileFilter {\n  AND: [FileFilter!]\n  OR: [FileFilter!]\n  contentType: String\n  contentType_not: String\n  contentType_in: [String!]\n  contentType_not_in: [String!]\n  contentType_lt: String\n  contentType_lte: String\n  contentType_gt: String\n  contentType_gte: String\n  contentType_contains: String\n  contentType_not_contains: String\n  contentType_starts_with: String\n  contentType_not_starts_with: String\n  contentType_ends_with: String\n  contentType_not_ends_with: String\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  secret: String\n  secret_not: String\n  secret_in: [String!]\n  secret_not_in: [String!]\n  secret_lt: String\n  secret_lte: String\n  secret_gt: String\n  secret_gte: String\n  secret_contains: String\n  secret_not_contains: String\n  secret_starts_with: String\n  secret_not_starts_with: String\n  secret_ends_with: String\n  secret_not_ends_with: String\n  size: Int\n  size_not: Int\n  size_in: [Int!]\n  size_not_in: [Int!]\n  size_lt: Int\n  size_lte: Int\n  size_gt: Int\n  size_gte: Int\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  url: String\n  url_not: String\n  url_in: [String!]\n  url_not_in: [String!]\n  url_lt: String\n  url_lte: String\n  url_gt: String\n  url_gte: String\n  url_contains: String\n  url_not_contains: String\n  url_starts_with: String\n  url_not_starts_with: String\n  url_ends_with: String\n  url_not_ends_with: String\n}\n\nenum FileOrderBy {\n  contentType_ASC\n  contentType_DESC\n  createdAt_ASC\n  createdAt_DESC\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  secret_ASC\n  secret_DESC\n  size_ASC\n  size_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  url_ASC\n  url_DESC\n}\n\n# The `Long` scalar type represents non-fractional signed whole numeric values.\n# Long can represent values between -(2^63) and 2^63 - 1.\nscalar Long\n\ntype Mutation {\n  createFile(input: CreateFileInput!): CreateFilePayload\n  createPost(input: CreatePostInput!): CreatePostPayload\n  updateFile(input: UpdateFileInput!): UpdateFilePayload\n  updatePost(input: UpdatePostInput!): UpdatePostPayload\n  updateUser(input: UpdateUserInput!): UpdateUserPayload\n  updateOrCreateFile(input: UpdateOrCreateFileInput!): UpdateOrCreateFilePayload\n  updateOrCreatePost(input: UpdateOrCreatePostInput!): UpdateOrCreatePostPayload\n  updateOrCreateUser(input: UpdateOrCreateUserInput!): UpdateOrCreateUserPayload\n  deleteFile(input: DeleteFileInput!): DeleteFilePayload\n  deletePost(input: DeletePostInput!): DeletePostPayload\n  deleteUser(input: DeleteUserInput!): DeleteUserPayload\n  createUser(input: SignupUserInput!): CreateUserPayload!\n}\n\n# An object with an ID\ninterface Node {\n  # The id of the object.\n  id: ID!\n}\n\n# Information about pagination in a connection.\ntype PageInfo {\n  # When paginating forwards, are there more items?\n  hasNextPage: Boolean\n\n  # When paginating backwards, are there more items?\n  hasPreviousPage: Boolean\n\n  # When paginating backwards, the cursor to continue.\n  startCursor: String\n\n  # When paginating forwards, the cursor to continue.\n  endCursor: String\n}\n\ntype Post implements Node {\n  createdAt: DateTime!\n  description: String!\n  id: ID!\n  imageUrl: String!\n  updatedAt: DateTime!\n}\n\n# A connection to a list of items.\ntype PostConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo\n\n  # A list of edges.\n  edges: [PostEdge]\n\n  # Count of filtered result set without considering pagination arguments\n  count: Int!\n}\n\n# An edge in a connection.\ntype PostEdge {\n  # The item at the end of the edge.\n  node: Post\n\n  # A cursor for use in pagination.\n  cursor: String\n}\n\ninput PostFilter {\n  AND: [PostFilter!]\n  OR: [PostFilter!]\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  imageUrl: String\n  imageUrl_not: String\n  imageUrl_in: [String!]\n  imageUrl_not_in: [String!]\n  imageUrl_lt: String\n  imageUrl_lte: String\n  imageUrl_gt: String\n  imageUrl_gte: String\n  imageUrl_contains: String\n  imageUrl_not_contains: String\n  imageUrl_starts_with: String\n  imageUrl_not_starts_with: String\n  imageUrl_ends_with: String\n  imageUrl_not_ends_with: String\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n}\n\nenum PostOrderBy {\n  createdAt_ASC\n  createdAt_DESC\n  description_ASC\n  description_DESC\n  id_ASC\n  id_DESC\n  imageUrl_ASC\n  imageUrl_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype Query {\n  viewer: Viewer!\n\n  # Fetches an object given its ID\n  node(\n    # The ID of an object\n    id: ID!\n  ): Node\n}\n\ninput SignupUserInput {\n  clientMutationId: String!\n}\n\ninput UpdateFile {\n  id: ID!\n  name: String\n}\n\ninput UpdateFileInput {\n  id: ID!\n  name: String\n  clientMutationId: String!\n}\n\ntype UpdateFilePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  file: File\n  edge: FileEdge\n}\n\ninput UpdateOrCreateFileInput {\n  update: UpdateFile!\n  create: CreateFile!\n  clientMutationId: String!\n}\n\ntype UpdateOrCreateFilePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  file: File\n  edge: FileEdge\n}\n\ninput UpdateOrCreatePostInput {\n  update: UpdatePost!\n  create: CreatePost!\n  clientMutationId: String!\n}\n\ntype UpdateOrCreatePostPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  post: Post\n  edge: PostEdge\n}\n\ninput UpdateOrCreateUserInput {\n  update: UpdateUser!\n  clientMutationId: String!\n}\n\ntype UpdateOrCreateUserPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  user: User\n  edge: UserEdge\n}\n\ninput UpdatePost {\n  description: String\n  id: ID!\n  imageUrl: String\n}\n\ninput UpdatePostInput {\n  description: String\n  id: ID!\n  imageUrl: String\n  clientMutationId: String!\n}\n\ntype UpdatePostPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  post: Post\n  edge: PostEdge\n}\n\ninput UpdateUser {\n  id: ID!\n}\n\ninput UpdateUserInput {\n  id: ID!\n  clientMutationId: String!\n}\n\ntype UpdateUserPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  user: User\n  edge: UserEdge\n}\n\ntype User implements Node {\n  createdAt: DateTime!\n  id: ID!\n  updatedAt: DateTime!\n}\n\n# A connection to a list of items.\ntype UserConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [UserEdge]\n\n  # Count of filtered result set without considering pagination arguments\n  count: Int!\n}\n\n# An edge in a connection.\ntype UserEdge {\n  # The item at the end of the edge.\n  node: User!\n\n  # A cursor for use in pagination.\n  cursor: String!\n}\n\ninput UserFilter {\n  AND: [UserFilter!]\n  OR: [UserFilter!]\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n}\n\nenum UserOrderBy {\n  createdAt_ASC\n  createdAt_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\n# This is the famous Relay viewer object\ntype Viewer {\n  allFiles(filter: FileFilter, orderBy: FileOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): FileConnection!\n  allPosts(filter: PostFilter, orderBy: PostOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection\n  allUsers(filter: UserFilter, orderBy: UserOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  user: User\n  File(id: ID, secret: String, url: String): File\n  Post(id: ID): Post\n  User(id: ID): User\n  id: ID!\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 53
    },
    {
      "name": "hn-relay-full.graphql",
      "path": "packages/graphql-playground-react/public/hn-relay-full.graphql",
      "sha": "16c8bbb66acffc6cdaf28c16723b5f174cc6309a",
      "url": "https://api.github.com/repositories/80016159/contents/packages/graphql-playground-react/public/hn-relay-full.graphql?ref=5b019b862f2a82396b0cccb2020e17dcb6215e7a",
      "git_url": "https://api.github.com/repositories/80016159/git/blobs/16c8bbb66acffc6cdaf28c16723b5f174cc6309a",
      "html_url": "https://github.com/prisma/graphql-playground/blob/5b019b862f2a82396b0cccb2020e17dcb6215e7a/packages/graphql-playground-react/public/hn-relay-full.graphql",
      "content": "input AUTH_PROVIDER_EMAIL {\n  email: String!\n  password: String!\n}\n\ninput AddToUsersLinksLinkInput {\n  postedByUserId: ID!\n  linksLinkId: ID!\n  clientMutationId: String!\n}\n\ntype AddToUsersLinksPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  linksLink: Link\n  postedByUser: User\n  linksLinkEdge: LinkEdge\n  postedByUserEdge: UserEdge\n}\n\ntype AddToUsersVotesPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  userUser: User\n  votesVote: Vote\n  userUserEdge: UserEdge\n  votesVoteEdge: VoteEdge\n}\n\ninput AddToUsersVotesUserInput {\n  votesVoteId: ID!\n  userUserId: ID!\n  clientMutationId: String!\n}\n\ninput AddToVotesOnLinkLinkInput {\n  votesVoteId: ID!\n  linkLinkId: ID!\n  clientMutationId: String!\n}\n\ntype AddToVotesOnLinkPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  linkLink: Link\n  votesVote: Vote\n  linkLinkEdge: LinkEdge\n  votesVoteEdge: VoteEdge\n}\n\ninput AuthProviderSignupData {\n  email: AUTH_PROVIDER_EMAIL\n}\n\n# The `BigDecimal` scalar type represents signed fractional values with arbitrary precision.\nscalar BigDecimal\n\n# The `BigInt` scalar type represents non-fractional signed whole numeric values. BigInt can represent arbitrary big values.\nscalar BigInt\n\ninput CreateFile {\n  name: String!\n}\n\ninput CreateFileInput {\n  name: String!\n  clientMutationId: String!\n}\n\ntype CreateFilePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  file: File\n  edge: FileEdge\n}\n\ninput CreateLink {\n  description: String!\n  url: String!\n  postedById: ID\n  votesIds: [ID!]\n  votes: [LinkvotesVote!]\n}\n\ninput CreateLinkInput {\n  description: String!\n  url: String!\n  postedById: ID\n  votesIds: [ID!]\n  votes: [LinkvotesVote!]\n  clientMutationId: String!\n}\n\ntype CreateLinkPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  link: Link\n  edge: LinkEdge\n  postedBy: User\n}\n\ninput CreateUser {\n  name: String!\n  linksIds: [ID!]\n  links: [UserlinksLink!]\n  votesIds: [ID!]\n  votes: [UservotesVote!]\n}\n\n# If authentication was successful the payload contains the user and a token. If unsuccessful this payload is null.\ntype CreateUserPayload {\n  user: User\n  clientMutationId: String\n  viewer: Viewer!\n}\n\ninput CreateVote {\n  linkId: ID\n  link: VotelinkLink\n  userId: ID\n}\n\ninput CreateVoteInput {\n  linkId: ID\n  link: VotelinkLink\n  userId: ID\n  clientMutationId: String!\n}\n\ntype CreateVotePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  vote: Vote\n  edge: VoteEdge\n  link: Link\n  user: User\n}\n\nscalar DateTime\n\ninput DeleteFileInput {\n  id: ID!\n  clientMutationId: String!\n}\n\ntype DeleteFilePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  file: File\n  edge: FileEdge\n  deletedId: ID\n}\n\ninput DeleteLinkInput {\n  id: ID!\n  clientMutationId: String!\n}\n\ntype DeleteLinkPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  link: Link\n  edge: LinkEdge\n  postedBy: User\n  deletedId: ID\n}\n\ninput DeleteUserInput {\n  id: ID!\n  clientMutationId: String!\n}\n\ntype DeleteUserPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  user: User\n  edge: UserEdge\n  deletedId: ID\n}\n\ninput DeleteVoteInput {\n  id: ID!\n  clientMutationId: String!\n}\n\ntype DeleteVotePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  vote: Vote\n  edge: VoteEdge\n  link: Link\n  user: User\n  deletedId: ID\n}\n\ntype File implements Node {\n  contentType: String!\n  createdAt: DateTime!\n  id: ID!\n  name: String!\n  secret: String!\n  size: Int!\n  updatedAt: DateTime!\n  url: String!\n}\n\n# A connection to a list of items.\ntype FileConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [FileEdge]\n\n  # Count of filtered result set without considering pagination arguments\n  count: Int!\n}\n\n# An edge in a connection.\ntype FileEdge {\n  # The item at the end of the edge.\n  node: File!\n\n  # A cursor for use in pagination.\n  cursor: String!\n}\n\ninput FileFilter {\n  AND: [FileFilter!]\n  OR: [FileFilter!]\n  contentType: String\n  contentType_not: String\n  contentType_in: [String!]\n  contentType_not_in: [String!]\n  contentType_lt: String\n  contentType_lte: String\n  contentType_gt: String\n  contentType_gte: String\n  contentType_contains: String\n  contentType_not_contains: String\n  contentType_starts_with: String\n  contentType_not_starts_with: String\n  contentType_ends_with: String\n  contentType_not_ends_with: String\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  secret: String\n  secret_not: String\n  secret_in: [String!]\n  secret_not_in: [String!]\n  secret_lt: String\n  secret_lte: String\n  secret_gt: String\n  secret_gte: String\n  secret_contains: String\n  secret_not_contains: String\n  secret_starts_with: String\n  secret_not_starts_with: String\n  secret_ends_with: String\n  secret_not_ends_with: String\n  size: Int\n  size_not: Int\n  size_in: [Int!]\n  size_not_in: [Int!]\n  size_lt: Int\n  size_lte: Int\n  size_gt: Int\n  size_gte: Int\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  url: String\n  url_not: String\n  url_in: [String!]\n  url_not_in: [String!]\n  url_lt: String\n  url_lte: String\n  url_gt: String\n  url_gte: String\n  url_contains: String\n  url_not_contains: String\n  url_starts_with: String\n  url_not_starts_with: String\n  url_ends_with: String\n  url_not_ends_with: String\n}\n\nenum FileOrderBy {\n  contentType_ASC\n  contentType_DESC\n  createdAt_ASC\n  createdAt_DESC\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  secret_ASC\n  secret_DESC\n  size_ASC\n  size_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  url_ASC\n  url_DESC\n}\n\ntype Link implements Node {\n  createdAt: DateTime!\n  description: String!\n  id: ID!\n  postedBy(filter: UserFilter): User\n  updatedAt: DateTime!\n  url: String!\n  votes(filter: VoteFilter, orderBy: VoteOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): VoteConnection\n  _votesMeta: _QueryMeta!\n}\n\n# Meta information about the query.\ntype _QueryMeta {\n  count: Int!\n}\n\n\n\n# A connection to a list of items.\ntype LinkConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo\n\n  # A list of edges.\n  edges: [LinkEdge]\n\n  # Count of filtered result set without considering pagination arguments\n  count: Int!\n}\n\n# An edge in a connection.\ntype LinkEdge {\n  # The item at the end of the edge.\n  node: Link\n\n  # A cursor for use in pagination.\n  cursor: String\n}\n\ninput LinkFilter {\n  AND: [LinkFilter!]\n  OR: [LinkFilter!]\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  url: String\n  url_not: String\n  url_in: [String!]\n  url_not_in: [String!]\n  url_lt: String\n  url_lte: String\n  url_gt: String\n  url_gte: String\n  url_contains: String\n  url_not_contains: String\n  url_starts_with: String\n  url_not_starts_with: String\n  url_ends_with: String\n  url_not_ends_with: String\n  postedBy: UserFilter\n  votes_every: VoteFilter\n  votes_some: VoteFilter\n  votes_none: VoteFilter\n}\n\nenum LinkOrderBy {\n  createdAt_ASC\n  createdAt_DESC\n  description_ASC\n  description_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  url_ASC\n  url_DESC\n}\n\ninput LinkvotesVote {\n  userId: ID\n}\n\n# The `Long` scalar type represents non-fractional signed whole numeric values.\n# Long can represent values between -(2^63) and 2^63 - 1.\nscalar Long\n\ntype Mutation {\n  createFile(input: CreateFileInput!): CreateFilePayload\n  createLink(input: CreateLinkInput!): CreateLinkPayload\n  createVote(input: CreateVoteInput!): CreateVotePayload\n  updateFile(input: UpdateFileInput!): UpdateFilePayload\n  updateLink(input: UpdateLinkInput!): UpdateLinkPayload\n  updateUser(input: UpdateUserInput!): UpdateUserPayload\n  updateVote(input: UpdateVoteInput!): UpdateVotePayload\n  updateOrCreateFile(input: UpdateOrCreateFileInput!): UpdateOrCreateFilePayload\n  updateOrCreateLink(input: UpdateOrCreateLinkInput!): UpdateOrCreateLinkPayload\n  updateOrCreateUser(input: UpdateOrCreateUserInput!): UpdateOrCreateUserPayload\n  updateOrCreateVote(input: UpdateOrCreateVoteInput!): UpdateOrCreateVotePayload\n  deleteFile(input: DeleteFileInput!): DeleteFilePayload\n  deleteLink(input: DeleteLinkInput!): DeleteLinkPayload\n  deleteUser(input: DeleteUserInput!): DeleteUserPayload\n  deleteVote(input: DeleteVoteInput!): DeleteVotePayload\n  addToUsersLinks(input: AddToUsersLinksLinkInput!): AddToUsersLinksPayload\n  addToUsersVotes(input: AddToUsersVotesUserInput!): AddToUsersVotesPayload\n  addToVotesOnLink(input: AddToVotesOnLinkLinkInput!): AddToVotesOnLinkPayload\n  removeFromUsersLinks(input: RemoveFromUsersLinksLinkInput!): RemoveFromUsersLinksPayload\n  createUser(input: SignupUserInput!): CreateUserPayload!\n  signinUser(input: SigninUserInput!): SigninPayload!\n  createUser(input: SignupUserInput!): CreateUserPayload!\n}\n\n# If authentication was successful the payload contains the user and a token. If unsuccessful this payload is null.\ntype SigninPayload {\n  token: String\n  user: User\n  clientMutationId: String\n  viewer: Viewer!\n}\n\ninput SigninUserInput {\n  email: AUTH_PROVIDER_EMAIL\n  clientMutationId: String!\n}\n\ninput SignupUserInput {\n  name: String!\n  linksIds: [ID!]\n  links: [UserlinksLink!]\n  votesIds: [ID!]\n  votes: [UservotesVote!]\n  clientMutationId: String!\n  authProvider: AuthProviderSignupData!\n}\n\n# An object with an ID\ninterface Node {\n  # The id of the object.\n  id: ID!\n}\n\n# Information about pagination in a connection.\ntype PageInfo {\n  # When paginating forwards, are there more items?\n  hasNextPage: Boolean\n\n  # When paginating backwards, are there more items?\n  hasPreviousPage: Boolean\n\n  # When paginating backwards, the cursor to continue.\n  startCursor: String\n\n  # When paginating forwards, the cursor to continue.\n  endCursor: String\n}\n\ntype Query {\n  viewer: Viewer!\n\n  # Fetches an object given its ID\n  node(\n    # The ID of an object\n    id: ID!\n  ): Node\n}\n\ninput RemoveFromUsersLinksLinkInput {\n  postedByUserId: ID!\n  linksLinkId: ID!\n  clientMutationId: String!\n}\n\ntype RemoveFromUsersLinksPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  linksLink: Link\n  postedByUser: User\n  linksLinkEdge: LinkEdge\n  postedByUserEdge: UserEdge\n}\n\ninput UpdateFile {\n  id: ID!\n  name: String\n}\n\ninput UpdateFileInput {\n  id: ID!\n  name: String\n  clientMutationId: String!\n}\n\ntype UpdateFilePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  file: File\n  edge: FileEdge\n}\n\ninput UpdateLink {\n  description: String\n  id: ID!\n  url: String\n  postedById: ID\n  votesIds: [ID!]\n  votes: [LinkvotesVote!]\n}\n\ninput UpdateLinkInput {\n  description: String\n  id: ID!\n  url: String\n  postedById: ID\n  votesIds: [ID!]\n  votes: [LinkvotesVote!]\n  clientMutationId: String!\n}\n\ntype UpdateLinkPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  link: Link\n  edge: LinkEdge\n  postedBy: User\n}\n\ninput UpdateOrCreateFileInput {\n  update: UpdateFile!\n  create: CreateFile!\n  clientMutationId: String!\n}\n\ntype UpdateOrCreateFilePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  file: File\n  edge: FileEdge\n}\n\ninput UpdateOrCreateLinkInput {\n  update: UpdateLink!\n  create: CreateLink!\n  clientMutationId: String!\n}\n\ntype UpdateOrCreateLinkPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  link: Link\n  edge: LinkEdge\n  postedBy: User\n}\n\ninput UpdateOrCreateUserInput {\n  update: UpdateUser!\n  create: CreateUser!\n  clientMutationId: String!\n}\n\ntype UpdateOrCreateUserPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  user: User\n  edge: UserEdge\n}\n\ninput UpdateOrCreateVoteInput {\n  update: UpdateVote!\n  create: CreateVote!\n  clientMutationId: String!\n}\n\ntype UpdateOrCreateVotePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  vote: Vote\n  edge: VoteEdge\n  link: Link\n  user: User\n}\n\ninput UpdateUser {\n  id: ID!\n  name: String\n  linksIds: [ID!]\n  links: [UserlinksLink!]\n  votesIds: [ID!]\n  votes: [UservotesVote!]\n}\n\ninput UpdateUserInput {\n  id: ID!\n  name: String\n  linksIds: [ID!]\n  links: [UserlinksLink!]\n  votesIds: [ID!]\n  votes: [UservotesVote!]\n  clientMutationId: String!\n}\n\ntype UpdateUserPayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  user: User\n  edge: UserEdge\n}\n\ninput UpdateVote {\n  id: ID!\n  linkId: ID\n  link: VotelinkLink\n  userId: ID\n}\n\ninput UpdateVoteInput {\n  id: ID!\n  linkId: ID\n  link: VotelinkLink\n  userId: ID\n  clientMutationId: String!\n}\n\ntype UpdateVotePayload {\n  viewer: Viewer!\n  clientMutationId: String!\n  vote: Vote\n  edge: VoteEdge\n  link: Link\n  user: User\n}\n\ntype User implements Node {\n  createdAt: DateTime!\n  id: ID!\n  links(filter: LinkFilter, orderBy: LinkOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): LinkConnection\n  name: String!\n  updatedAt: DateTime!\n  votes(filter: VoteFilter, orderBy: VoteOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): VoteConnection\n}\n\n# A connection to a list of items.\ntype UserConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [UserEdge]\n\n  # Count of filtered result set without considering pagination arguments\n  count: Int!\n}\n\n# An edge in a connection.\ntype UserEdge {\n  # The item at the end of the edge.\n  node: User!\n\n  # A cursor for use in pagination.\n  cursor: String!\n}\n\ninput UserFilter {\n  AND: [UserFilter!]\n  OR: [UserFilter!]\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  links_every: LinkFilter\n  links_some: LinkFilter\n  links_none: LinkFilter\n  votes_every: VoteFilter\n  votes_some: VoteFilter\n  votes_none: VoteFilter\n}\n\nenum UserOrderBy {\n  createdAt_ASC\n  createdAt_DESC\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ninput UserlinksLink {\n  description: String!\n  url: String!\n  votesIds: [ID!]\n  votes: [UserlinksLinkvotesVote!]\n}\n\ninput UserlinksLinkvotesVote {\n  userId: ID\n}\n\ninput UservotesVote {\n  linkId: ID\n  link: UservotesVotelinkLink\n}\n\ninput UservotesVotelinkLink {\n  description: String!\n  url: String!\n  postedById: ID\n  votesIds: [ID!]\n  votes: [UservotesVotelinkLinkvotesVote!]\n}\n\ninput UservotesVotelinkLinkvotesVote {\n  linkId: ID\n  userId: ID\n}\n\n# This is the famous Relay viewer object\ntype Viewer {\n  allFiles(filter: FileFilter, orderBy: FileOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): FileConnection!\n  allLinks(filter: LinkFilter, orderBy: LinkOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): LinkConnection\n  allUsers(filter: UserFilter, orderBy: UserOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  allVotes(filter: VoteFilter, orderBy: VoteOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): VoteConnection!\n  user: User\n  File(id: ID, secret: String, url: String): File\n  Link(id: ID): Link\n  User(id: ID): User\n  Vote(id: ID): Vote\n  id: ID!\n}\n\ntype Vote implements Node {\n  createdAt: DateTime!\n  id: ID!\n  link(filter: LinkFilter): Link!\n  updatedAt: DateTime!\n  user(filter: UserFilter): User!\n}\n\n# A connection to a list of items.\ntype VoteConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo\n\n  # A list of edges.\n  edges: [VoteEdge]\n\n  # Count of filtered result set without considering pagination arguments\n  count: Int!\n}\n\n# An edge in a connection.\ntype VoteEdge {\n  # The item at the end of the edge.\n  node: Vote\n\n  # A cursor for use in pagination.\n  cursor: String\n}\n\ninput VoteFilter {\n  AND: [VoteFilter!]\n  OR: [VoteFilter!]\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  link: LinkFilter\n  user: UserFilter\n}\n\nenum VoteOrderBy {\n  createdAt_ASC\n  createdAt_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ninput VotelinkLink {\n  description: String!\n  url: String!\n  postedById: ID\n  votesIds: [ID!]\n  votes: [VotelinkLinkvotesVote!]\n}\n\ninput VotelinkLinkvotesVote {\n  userId: ID\n}\n\ntype Subscription {\n  Link: LinkSubscriptionPayload\n  Vote: VoteSubscriptionPayload\n}\n\ntype LinkSubscriptionPayload {\n  mutation: _ModelMutationType!\n  node: Link\n  updatedFields: [String!]\n  previousValues: LinkPreviousValues\n}\n\nenum _ModelMutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ntype LinkPreviousValues {\n  createdAt: DateTime!\n  description: String!\n  id: ID!\n  updatedAt: DateTime!\n  url: String!\n}\n\ntype VoteSubscriptionPayload {\n  mutation: _ModelMutationType!\n  node: Vote\n  updatedFields: [String!]\n  previousValues: VotePreviousValues\n}\n\ntype VotePreviousValues {\n  createdAt: DateTime!\n  id: ID!\n  updatedAt: DateTime!\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 96
    }
  ],
  "metrics": {
    "created_at": "2017-01-25T13:19:29Z",
    "updated_at": "2019-07-19T17:21:34Z",
    "pushed_at": "2019-07-05T13:09:14Z",
    "issues": 689,
    "watchers": 74,
    "fork_count": 316,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 368,
    "pull_requests_open": 24,
    "pull_requests_closed": 164,
    "pull_requests_merged": 180,
    "releases": 65,
    "stargazers": 4754
  }
}