{
  "repo_name": "jsweekend",
  "repo_full_name": "kiwicom/jsweekend",
  "repo_owner": "kiwicom",
  "repo_description": "Project for attendees of https://jsweekend.cz",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "saturday-afternoon/schema.graphql",
      "sha": "78d29defed9b0357f6c47a3386c966d3e04d2463",
      "url": "https://api.github.com/repositories/120899785/contents/saturday-afternoon/schema.graphql?ref=aa6741bbb253d05039e923a20d02ef82746793e7",
      "git_url": "https://api.github.com/repositories/120899785/git/blobs/78d29defed9b0357f6c47a3386c966d3e04d2463",
      "html_url": "https://github.com/kiwicom/jsweekend/blob/aa6741bbb253d05039e923a20d02ef82746793e7/saturday-afternoon/schema.graphql",
      "content": "# source: https://graphql.kiwi.com\n# timestamp: Mon Mar 12 2018 17:53:12 GMT+0100 (CET)\n\nschema {\n  query: RootQuery\n  mutation: RootMutation\n}\n\ntype AdditionalBaggage {\n  price: Price\n\n  \"\"\"Number of baggage.\"\"\"\n  quantity: Int\n}\n\ntype Address {\n  \"\"\"Contains street and number.\"\"\"\n  street: String\n  city: String\n  zip: String\n}\n\ntype Airline {\n  name: String\n\n  \"\"\"2-letter IATA code of airline.\"\"\"\n  code: String\n  logoUrl: String\n\n  \"\"\"Airline is low cost carrier.\"\"\"\n  isLowCost: Boolean\n}\n\ntype AllowedBaggage {\n  \"\"\"Extra and overweight baggage.\"\"\"\n  additionalBaggage: [AdditionalBaggage]\n\n  \"\"\"Small carry-on luggage.\"\"\"\n  cabin: [Baggage]\n\n  \"\"\"Baggage checked online.\"\"\"\n  checked: [Baggage]\n}\n\ninput AreaInput {\n  \"\"\"Top left coordinates of the area.\"\"\"\n  topLeft: CoordinatesInput!\n\n  \"\"\"Bottom right coordinates of the area.\"\"\"\n  bottomRight: CoordinatesInput!\n}\n\ninput AvailableHotelOptionsInput {\n  \"\"\"Three-letters ISO 4217 currency code, e.g. EUR or USD\"\"\"\n  currency: Currency\n}\n\ninput AvailableHotelSearchInput {\n  \"\"\"Opaque hotel ID.\"\"\"\n  hotelId: ID!\n  checkin: Date!\n  checkout: Date!\n  roomsConfiguration: [RoomsConfiguration!]!\n  language: Language\n}\n\ntype Baggage {\n  height: Int\n  length: Int\n  width: Int\n  weight: Int\n  note: String\n}\n\ntype Booking {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Internal database ID.\"\"\"\n  databaseId: Int @deprecated(reason: \"Use id field instead.\")\n  allowedBaggage: AllowedBaggage\n  arrival: RouteStop\n\n  \"\"\"Static assets related to this booking.\"\"\"\n  assets: BookingAssets\n  departure: RouteStop\n\n  \"\"\"Flight segments, e.g. stopover, change of aircraft, etc.\"\"\"\n  legs: [Leg]\n  status: BookingStatus\n}\n\ntype BookingAssets {\n  \"\"\"\n  URL of the electronic ticket. Ticket may not be available yet (returns null).\n  \"\"\"\n  ticketUrl: String\n\n  \"\"\"URL of the invoice.\"\"\"\n  invoiceUrl: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype BookingConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [BookingEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BookingEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Booking\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\nenum BookingStatus {\n  NEW\n  REFUNDED\n  PENDING\n  CONFIRMED\n  CANCELLED\n  DELETED\n  CLOSED\n  EXPIRED\n}\n\ntype Coordinates {\n  \"\"\"Latitude.\"\"\"\n  lat: Float\n\n  \"\"\"Longitude.\"\"\"\n  lng: Float\n}\n\ninput CoordinatesInput {\n  \"\"\"Latitude.\"\"\"\n  lat: Float!\n\n  \"\"\"Longitude.\"\"\"\n  lng: Float!\n}\n\nenum Currency {\n  DZD\n  NAD\n  GHS\n  EGP\n  BGN\n  PAB\n  BOB\n  DKK\n  BWP\n  LBP\n  TZS\n  VND\n  AOA\n  KHR\n  MYR\n  SOS\n  KYD\n  LYD\n  UAH\n  JOD\n  AZN\n  AWG\n  SAR\n  XAG\n  HKD\n  CHF\n  GIP\n  BYR\n  SVC\n  XPD\n  BYN\n  MRO\n  HRK\n  DJF\n  THB\n  XAF\n  BND\n  ETB\n  UYU\n  NIO\n  LAK\n  SYP\n  MAD\n  MZN\n  YER\n  ZAR\n  NPR\n  ZWL\n  NGN\n  CRC\n  AED\n  GBP\n  MWK\n  LKR\n  PKR\n  HUF\n  SZL\n  LSL\n  MNT\n  AMD\n  UGX\n  XDR\n  JMD\n  TTD\n  SHP\n  AFN\n  MMK\n  KPW\n  TRY\n  BDT\n  HTG\n  SLL\n  MGA\n  PHP\n  LRD\n  XCD\n  NOK\n  MOP\n  INR\n  MXN\n  CZK\n  TJS\n  BTC\n  BTN\n  COP\n  TMT\n  MUR\n  IDR\n  GEL\n  XPF\n  FJD\n  VUV\n  PEN\n  BZD\n  ILS\n  DOP\n  GGP\n  MDL\n  XPT\n  QAR\n  SEK\n  ZMK\n  MVR\n  AUD\n  SRD\n  CUP\n  CLF\n  BBD\n  KMF\n  KRW\n  GMD\n  VEF\n  GTQ\n  ANG\n  CUC\n  CLP\n  ZMW\n  EUR\n  ALL\n  RWF\n  KZT\n  RUB\n  ISK\n  CDF\n  RON\n  OMR\n  BRL\n  SBD\n  PLN\n  PYG\n  KES\n  QUN\n  MKD\n  EEK\n  TWD\n  TOP\n  JEP\n  GNF\n  WST\n  IQD\n  ERN\n  BAM\n  SCR\n  CAD\n  CVE\n  KWD\n  BIF\n  PGK\n  LTL\n  HNL\n  SGD\n  UZS\n  STD\n  IRR\n  CNY\n  XOF\n  TND\n  GYD\n  MTL\n  NZD\n  FKP\n  LVL\n  USD\n  BSD\n  KGS\n  ARS\n  BMD\n  IMP\n  RSD\n  BHD\n  JPY\n  SDG\n  XAU\n}\n\n\"\"\"\nA date string, such as 2007-12-03, compliant with the `full-date` format\noutlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for\nrepresentation of dates and times using the Gregorian calendar.\n\"\"\"\nscalar Date\n\n\"\"\"You always have to setup exact date OR range from-to.\"\"\"\ninput DateInput {\n  \"\"\"Exact date (cannot be used in combination with from-to fields).\"\"\"\n  exact: Date\n\n  \"\"\"\n  Start of the date range (cannot be used in combination with exact date).\n  \"\"\"\n  from: Date\n\n  \"\"\"\n  End of the date range (cannot be used in combination with exact date).\n  \"\"\"\n  to: Date\n}\n\n\"\"\"\nA date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the\n`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO\n8601 standard for representation of dates and times using the Gregorian calendar.\n\"\"\"\nscalar DateTime\n\ninput DurationInput {\n  stopovers: StopoversInput\n  maxFlightDuration: Int\n}\n\ntype Flight {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"List of all Airlines involved.\"\"\"\n  airlines: [Airline]\n  departure: RouteStop\n  arrival: RouteStop\n\n  \"\"\"Flight duration in minutes.\"\"\"\n  duration: Int\n\n  \"\"\"Flight segments, e.g. stopover, change of aircraft, etc.\"\"\"\n  legs: [Leg]\n\n  \"\"\"Total flight price.\"\"\"\n  price: Price\n\n  \"\"\"URL to the Kiwi.com for booking the flight.\"\"\"\n  bookingUrl: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FlightConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FlightEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FlightEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Flight\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput FlightsFiltersInput {\n  maxStopovers: Int\n  duration: DurationInput\n}\n\ninput FlightsOptionsInput {\n  \"\"\"An ISO-4217 currency code.\"\"\"\n  currency: Currency\n  locale: Locale\n}\n\ninput FlightsSearchInput {\n  \"\"\"From where you want to fly?\"\"\"\n  from: [LocationInput!]!\n\n  \"\"\"To where you want to fly?\"\"\"\n  to: [LocationInput!]!\n\n  \"\"\"When do you want to leave?\"\"\"\n  date: DateInput!\n\n  \"\"\"When do you want to return?\"\"\"\n  returnDate: DateInput\n  passengers: PassengersInput\n}\n\n\"\"\"General information about the hotel.\"\"\"\ntype Hotel {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"\n  Original (low level ID of the hotel). You are probably looking for \"id\" field.\n  \"\"\"\n  originalId: String @deprecated(reason: \"Use field \\\"id\\\" instead. This field is used only because of compatibility reasons with old APIs.\")\n\n  \"\"\"Name of the hotel.\"\"\"\n  name: String\n  cityName: String\n\n  \"\"\"URL to our whitelabel page of this hotel.\"\"\"\n  whitelabelUrl: String\n\n  \"\"\"Main description (summary) of the hotel.\"\"\"\n  summary: String\n\n  \"\"\"Main photo of the hotel.\"\"\"\n  mainPhoto: HotelPhoto\n\n  \"\"\"Location of the hotel.\"\"\"\n  coordinates: Coordinates\n  address: Address\n\n  \"\"\"The star rating of the hotel.\"\"\"\n  rating: HotelRating\n\n  \"\"\"Hotel review from hotel visitors.\"\"\"\n  review: HotelReview\n\n  \"\"\"All facilities available in the hotel.\"\"\"\n  facilities(after: String, first: Int, before: String, last: Int): HotelFacilityConnection\n\n  \"\"\"All rooms available in the hotel.\"\"\"\n  rooms(after: String, first: Int, before: String, last: Int): HotelRoomConnection\n\n  \"\"\"All available photos of the hotel.\"\"\"\n  photos(after: String, first: Int, before: String, last: Int): HotelPhotoConnection\n\n  \"\"\"Hotel distance from the center in Km.\"\"\"\n  distanceFromCenter: Float\n}\n\n\"\"\"Information about hotel availability during selected time period.\"\"\"\ntype HotelAvailability {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"\n  Total price for all guests and nights and in the hotel. (including VAT)\n  \"\"\"\n  price: Price\n  availableRooms: [HotelRoomAvailability]\n  hotel: Hotel\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelAvailabilityConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelAvailabilityEdge]\n  stats: HotelAvailabilityStats\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelAvailabilityEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelAvailability\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"\nOverall statistics related to all hotels matching search & filter criteria\n\"\"\"\ntype HotelAvailabilityStats {\n  priceMax: Float\n  priceMin: Float\n}\n\ntype HotelCity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Name of the hotel.\"\"\"\n  name: String\n  location: Coordinates\n  numberOfHotels: Int\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelCityConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelCityEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelCityEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelCity\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput HotelFacilitiesInput {\n  \"\"\"Show only hotels having airport shuttle as a service.\"\"\"\n  airportShuttle: Boolean\n\n  \"\"\"Show only hotels having family rooms.\"\"\"\n  familyRooms: Boolean\n\n  \"\"\"Show only hotels having facilities for disabled.\"\"\"\n  facilitiesForDisabled: Boolean\n\n  \"\"\"Show only hotels having fitness room.\"\"\"\n  fitnessCenter: Boolean\n\n  \"\"\"Show only hotels having any parking.\"\"\"\n  parking: Boolean\n\n  \"\"\"Show only hotels having free parking.\"\"\"\n  freeParking: Boolean\n\n  \"\"\"Show only hotels having valet parking.\"\"\"\n  valetParking: Boolean\n\n  \"\"\"Show only hotels having indoor swimming pool.\"\"\"\n  indoorPool: Boolean\n\n  \"\"\"Show only hotels having pets allowed.\"\"\"\n  petsAllowed: Boolean\n\n  \"\"\"Show only hotels having spa.\"\"\"\n  spa: Boolean\n\n  \"\"\"Show only hotels having wifi.\"\"\"\n  wifi: Boolean\n}\n\ntype HotelFacility {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Name of the facility.\"\"\"\n  name: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelFacilityConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelFacilityEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelFacilityEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelFacility\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype HotelPhoto {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  lowResUrl: String\n  highResUrl: String\n  thumbnailUrl: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelPhotoConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelPhotoEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelPhotoEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelPhoto\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype HotelRating {\n  \"\"\"Star rating is always in the interval 1-5 inclusive.\"\"\"\n  stars: Int\n\n  \"\"\"Name of the stars category.\"\"\"\n  categoryName: String\n}\n\ntype HotelReview {\n  \"\"\"The review score of the hotel, in the range 1-10 inclusive.\"\"\"\n  score: Float\n\n  \"\"\"The review score of the hotel in words.\"\"\"\n  description: String\n\n  \"\"\"The number of reviews of the hotel.\"\"\"\n  count: Int\n}\n\ntype HotelRoom {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Type of the hotel room.\"\"\"\n  type: String\n  maxPersons: Int\n  bedding: [HotelRoomBedding]\n\n  \"\"\"All available photos of the hotel room.\"\"\"\n  photos(after: String, first: Int, before: String, last: Int): HotelRoomPhotoConnection\n  description: HotelRoomDescription\n}\n\ntype HotelRoomAvailability {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Original block ID used to open Booking.com page.\"\"\"\n  originalId: String @deprecated(reason: \"Use \\\"id\\\" field whenever possible.\")\n\n  \"\"\"Base price for the room in this configuration.\"\"\"\n  minimalPrice: Price\n  incrementalPrice: [Price]\n  room: HotelRoom\n}\n\ntype HotelRoomBedding {\n  type: String\n  amount: Int\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelRoomConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelRoomEdge]\n}\n\ntype HotelRoomDescription {\n  title: String\n  text: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelRoomEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelRoom\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelRoomPhotoConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelRoomPhotoEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelRoomPhotoEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelPhoto\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput HotelsFilterInput {\n  \"\"\"List of hotels classes (stars) you want to filter.\"\"\"\n  starsRating: [Int]\n\n  \"\"\"\n  Show only hotels having minimum total price lower than or equal to this value.\n  \"\"\"\n  minPrice: Float\n\n  \"\"\"\n  Show only hotels having minimum total price higher than or equal to this value.\n  \"\"\"\n  maxPrice: Float\n\n  \"\"\"Show only hotels having specified hotel facilities\"\"\"\n  hotelFacilities: HotelFacilitiesInput\n\n  \"\"\"\n  Show only hotels having minimum review score higher than or equal to this value. Score must be between 1 and 10.\n  \"\"\"\n  minScore: Int\n\n  \"\"\"Show only hotels having free cancellation.\"\"\"\n  freeCancellation: Boolean\n}\n\n\"\"\"You must provide lat/lng combination OR city ID.\"\"\"\ninput HotelsSearchInput {\n  \"\"\"Latitude in float format (example: 45.4654).\"\"\"\n  latitude: Float\n\n  \"\"\"Longitude in float format (example: 9.1859).\"\"\"\n  longitude: Float\n\n  \"\"\"Opaque ID of the city.\"\"\"\n  cityId: String\n  checkin: Date!\n  checkout: Date!\n  language: Language\n  roomsConfiguration: [RoomsConfiguration!]!\n}\n\ntype Identity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Internal database ID.\"\"\"\n  databaseId: String @deprecated(reason: \"Use id field instead.\")\n\n  \"\"\"Raw input by user, use \"login\" if you want normalized email.\"\"\"\n  email: String\n  emailVerified: Boolean\n  firstName: String\n  lastName: String\n\n  \"\"\"\n  Concatenation of first and last name with fallback to the login field.\n  \"\"\"\n  fullName: String\n\n  \"\"\"Use this in API calls. It is email but normalized.\"\"\"\n  login: String\n}\n\nenum Language {\n  ar\n  bg\n  ca\n  cs\n  da\n  de\n  el\n  en\n  engb\n  enus\n  es\n  esar\n  et\n  fi\n  fr\n  he\n  hr\n  hu\n  id\n  is\n  it\n  ja\n  ko\n  lt\n  lv\n  ms\n  nl\n  no\n  pl\n  pt\n  ptbr\n  ptpt\n  ro\n  ru\n  sk\n  sl\n  sr\n  sv\n  th\n  tl\n  tr\n  uk\n  vi\n  zh\n  zhcn\n  zhtw\n}\n\n\"\"\"\nLeg is the operation of an aircraft from one scheduled departure station to its next scheduled arrival station.\n\"\"\"\ntype Leg {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  airline: Airline\n  arrival: RouteStop\n  departure: RouteStop\n\n  \"\"\"Leg duration in minutes.\"\"\"\n  duration: Int\n  flightNumber: Int\n  recheckRequired: Boolean\n}\n\n\"\"\"Language tag in the format of the RFC 5646.\"\"\"\nenum Locale {\n  bg_BG\n  ca_ES\n  cs_CZ\n  da_DK\n  de_DE\n  de_AT\n  de_CH\n  el_GR\n  en_GB\n  en_AU\n  en_CA\n  en_EE\n  en_HK\n  en_IN\n  en_IE\n  en_MY\n  en_NZ\n  en_SG\n  en_ZA\n  en_PH\n  en_US\n  es_ES\n  es_AR\n  es_CL\n  es_CO\n  es_EC\n  es_PE\n  es_MX\n  fr_FR\n  fr_BE\n  fr_CA\n  hr_HR\n  id_ID\n  is_IS\n  it_IT\n  ja_JP\n  lt_LT\n  he_IL\n  hu_HU\n  nl_NL\n  no_NO\n  pl_PL\n  pt_PT\n  pt_BR\n  ro_RO\n  ru_RU\n  ru_BY\n  ru_KZ\n  sk_SK\n  sr_RS\n  fi_FI\n  sv_SE\n  th_TH\n  tr_TR\n  vi_VN\n  uk_UA\n  ar_SA\n  ar_BH\n  ar_JO\n  ar_KW\n  ar_OM\n  ar_QA\n  ar_AE\n  ko_KR\n  zh_CN\n  zh_TW\n}\n\ntype Location {\n  \"\"\"3-letter IATA code of airport or internal city code.\"\"\"\n  locationId: String\n  name: String\n  slug: String\n  timezone: String\n  location: Coordinates\n\n  \"\"\"Airport, city or country.\"\"\"\n  type: String\n  city: LocationArea\n  subdivision: LocationArea\n  country: LocationArea\n  isActive: Boolean\n  stationsCount: Int\n  airportsCount: Int\n  alternativeNames: [String]\n  autonomousTerritory: LocationArea\n  rank: Int\n}\n\ntype LocationArea {\n  locationId: String\n  name: String\n  slug: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LocationConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LocationEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LocationEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Location\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput LocationInput {\n  location: String\n  radius: RadiusInput\n}\n\ninput LocationsOptionsInput {\n  \"\"\"Language tag in the format of the RFC 5646.\"\"\"\n  locale: Locale\n\n  \"\"\"Desired location type the response should only include.\"\"\"\n  locationType: LocationType\n}\n\n\"\"\"Type of location\"\"\"\nenum LocationType {\n  airport\n  autonomous_territory\n  city\n  country\n  station\n  subdivision\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ninput PassengersInput {\n  adults: Int!\n}\n\ntype Price {\n  amount: Float\n\n  \"\"\"An ISO-4217 currency code.\"\"\"\n  currency: String\n}\n\ninput RadiusInput {\n  \"\"\"Latitude of the center of the circle.\"\"\"\n  lat: Float!\n\n  \"\"\"Longitude of the center of the circle.\"\"\"\n  lng: Float!\n\n  \"\"\"Distance in kilometers.\"\"\"\n  radius: Int!\n}\n\ninput RoomsChildrenConfiguration {\n  age: Int\n}\n\ninput RoomsConfiguration {\n  adultsCount: Int!\n  children: [RoomsChildrenConfiguration]\n}\n\n\"\"\"Root Mutation.\"\"\"\ntype RootMutation {\n  login(email: String!, password: String!): User\n}\n\n\"\"\"Root Query\"\"\"\ntype RootQuery {\n  \"\"\"Search for your flight bookings.\"\"\"\n  allBookings(after: String, first: Int, before: String, last: Int): BookingConnection\n\n  \"\"\"Search for scheduled flights.\"\"\"\n  allFlights(search: FlightsSearchInput!, options: FlightsOptionsInput, filters: FlightsFiltersInput, after: String, first: Int, before: String, last: Int): FlightConnection\n\n  \"\"\"\n  Search for all available hotels in one location. It's necessary to send\n  checkin and checkout dates as well as rooms configuration to get availability info.\n  \"\"\"\n  allAvailableHotels(search: HotelsSearchInput!, filter: HotelsFilterInput, options: AvailableHotelOptionsInput, after: String, first: Int = 50, before: String, last: Int): HotelAvailabilityConnection\n\n  \"\"\"\n  Search for single available hotel by its ID. It's necessary to send checkin\n  and checkout dates as well as rooms configuration to get availability info.\n  \"\"\"\n  availableHotel(search: AvailableHotelSearchInput!, options: AvailableHotelOptionsInput): HotelAvailability\n\n  \"\"\"\n  Search for airports, cities, countries. You can search by location name,\n  radius on the map or rectangle on the map. If you do not specify one of these\n  search inputs then the alphabetical dump of all locations is returned.\n  \"\"\"\n  allLocations(\n    \"\"\"Search location by name.\"\"\"\n    search: String\n\n    \"\"\"Search location by radius.\"\"\"\n    radius: RadiusInput\n\n    \"\"\"Search location by area.\"\"\"\n    area: AreaInput\n    options: LocationsOptionsInput\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): LocationConnection\n\n  \"\"\"Single location by ID.\"\"\"\n  location(id: String!, locale: Locale): Location\n\n  \"\"\"All locations in certain location. For example all airports in London\"\"\"\n  allSubLocations(\n    \"\"\"Location ID\"\"\"\n    id: String!\n    options: LocationsOptionsInput\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): LocationConnection\n\n  \"\"\"Flight booking by ID.\"\"\"\n  booking(id: ID!): Booking\n\n  \"\"\"Current user information.\"\"\"\n  currentUser: Identity\n\n  \"\"\"Single hotel by ID.\"\"\"\n  hotel(id: ID!, language: Language): Hotel\n\n  \"\"\"\n  All cities where you can find the hotels. This query can be used for\n  suggestions of relevant cities (search for example). Cities can be filtered\n  by prefix with typo tolerance. Items are sorted by prefix matching and a\n  number of hotels (desc). When the prefix is omitted top cities are returned.\n  \"\"\"\n  hotelCities(\n    \"\"\"First few letters.\"\"\"\n    prefix: String\n\n    \"\"\"Search for cities around a given position.\"\"\"\n    position: CoordinatesInput\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): HotelCityConnection\n}\n\ntype RouteStop {\n  airport: Location\n  time: DateTime\n  localTime: DateTime\n}\n\ninput StopoversInput {\n  \"\"\"Minimum number of hours of stopover duration.\"\"\"\n  from: Int\n\n  \"\"\"Maximum number of hours of stopover duration.\"\"\"\n  to: Int\n}\n\ntype User {\n  token: String\n  isLoggedIn: Boolean\n  identity: Identity\n}\n",
      "containsQueryType": true,
      "typesUndefined": [],
      "directivesUndefined": [
        "deprecated"
      ],
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 49,
      "containsCycle": false,
      "polynomialLevel": 3,
      "numDefinitions": 76
    },
    {
      "name": "schema.graphql",
      "path": "saturday-morning/schema.graphql",
      "sha": "3ed7e8128b0ca6195c267d1b83e5dcf06e6672ec",
      "url": "https://api.github.com/repositories/120899785/contents/saturday-morning/schema.graphql?ref=aa6741bbb253d05039e923a20d02ef82746793e7",
      "git_url": "https://api.github.com/repositories/120899785/git/blobs/3ed7e8128b0ca6195c267d1b83e5dcf06e6672ec",
      "html_url": "https://github.com/kiwicom/jsweekend/blob/aa6741bbb253d05039e923a20d02ef82746793e7/saturday-morning/schema.graphql",
      "content": "# source: https://graphql.kiwi.com\n# timestamp: Tue Mar 13 2018 16:38:52 GMT+0100 (CET)\n\nschema {\n  query: RootQuery\n  mutation: RootMutation\n}\n\ntype AdditionalBaggage {\n  price: Price\n\n  \"\"\"Number of baggage.\"\"\"\n  quantity: Int\n}\n\ntype Address {\n  \"\"\"Contains street and number.\"\"\"\n  street: String\n  city: String\n  zip: String\n}\n\ntype Airline {\n  name: String\n\n  \"\"\"2-letter IATA code of airline.\"\"\"\n  code: String\n  logoUrl: String\n\n  \"\"\"Airline is low cost carrier.\"\"\"\n  isLowCost: Boolean\n}\n\ntype AllowedBaggage {\n  \"\"\"Extra and overweight baggage.\"\"\"\n  additionalBaggage: [AdditionalBaggage]\n\n  \"\"\"Small carry-on luggage.\"\"\"\n  cabin: [Baggage]\n\n  \"\"\"Baggage checked online.\"\"\"\n  checked: [Baggage]\n}\n\ninput AreaInput {\n  \"\"\"Top left coordinates of the area.\"\"\"\n  topLeft: CoordinatesInput!\n\n  \"\"\"Bottom right coordinates of the area.\"\"\"\n  bottomRight: CoordinatesInput!\n}\n\ninput AvailableHotelOptionsInput {\n  \"\"\"Three-letters ISO 4217 currency code, e.g. EUR or USD\"\"\"\n  currency: Currency\n}\n\ninput AvailableHotelSearchInput {\n  \"\"\"Opaque hotel ID.\"\"\"\n  hotelId: ID!\n  checkin: Date!\n  checkout: Date!\n  roomsConfiguration: [RoomsConfiguration!]!\n  language: Language\n}\n\ntype Baggage {\n  height: Int\n  length: Int\n  width: Int\n  weight: Int\n  note: String\n}\n\ntype Booking {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Internal database ID.\"\"\"\n  databaseId: Int @deprecated(reason: \"Use id field instead.\")\n  allowedBaggage: AllowedBaggage\n  arrival: RouteStop\n\n  \"\"\"Static assets related to this booking.\"\"\"\n  assets: BookingAssets\n  departure: RouteStop\n\n  \"\"\"Flight segments, e.g. stopover, change of aircraft, etc.\"\"\"\n  legs: [Leg]\n  status: BookingStatus\n}\n\ntype BookingAssets {\n  \"\"\"\n  URL of the electronic ticket. Ticket may not be available yet (returns null).\n  \"\"\"\n  ticketUrl: String\n\n  \"\"\"URL of the invoice.\"\"\"\n  invoiceUrl: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype BookingConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [BookingEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BookingEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Booking\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\nenum BookingStatus {\n  NEW\n  REFUNDED\n  PENDING\n  CONFIRMED\n  CANCELLED\n  DELETED\n  CLOSED\n  EXPIRED\n}\n\ntype Coordinates {\n  \"\"\"Latitude.\"\"\"\n  lat: Float\n\n  \"\"\"Longitude.\"\"\"\n  lng: Float\n}\n\ninput CoordinatesInput {\n  \"\"\"Latitude.\"\"\"\n  lat: Float!\n\n  \"\"\"Longitude.\"\"\"\n  lng: Float!\n}\n\nenum Currency {\n  DZD\n  NAD\n  GHS\n  EGP\n  BGN\n  PAB\n  BOB\n  DKK\n  BWP\n  LBP\n  TZS\n  VND\n  AOA\n  KHR\n  MYR\n  SOS\n  KYD\n  LYD\n  UAH\n  JOD\n  AZN\n  AWG\n  SAR\n  XAG\n  HKD\n  CHF\n  GIP\n  BYR\n  SVC\n  XPD\n  BYN\n  MRO\n  HRK\n  DJF\n  THB\n  XAF\n  BND\n  ETB\n  UYU\n  NIO\n  LAK\n  SYP\n  MAD\n  MZN\n  YER\n  ZAR\n  NPR\n  ZWL\n  NGN\n  CRC\n  AED\n  GBP\n  MWK\n  LKR\n  PKR\n  HUF\n  SZL\n  LSL\n  MNT\n  AMD\n  UGX\n  XDR\n  JMD\n  TTD\n  SHP\n  AFN\n  MMK\n  KPW\n  TRY\n  BDT\n  HTG\n  SLL\n  MGA\n  PHP\n  LRD\n  XCD\n  NOK\n  MOP\n  INR\n  MXN\n  CZK\n  TJS\n  BTC\n  BTN\n  COP\n  TMT\n  MUR\n  IDR\n  GEL\n  XPF\n  FJD\n  VUV\n  PEN\n  BZD\n  ILS\n  DOP\n  GGP\n  MDL\n  XPT\n  QAR\n  SEK\n  ZMK\n  MVR\n  AUD\n  SRD\n  CUP\n  CLF\n  BBD\n  KMF\n  KRW\n  GMD\n  VEF\n  GTQ\n  ANG\n  CUC\n  CLP\n  ZMW\n  EUR\n  ALL\n  RWF\n  KZT\n  RUB\n  ISK\n  CDF\n  RON\n  OMR\n  BRL\n  SBD\n  PLN\n  PYG\n  KES\n  QUN\n  MKD\n  EEK\n  TWD\n  TOP\n  JEP\n  GNF\n  WST\n  IQD\n  ERN\n  BAM\n  SCR\n  CAD\n  CVE\n  KWD\n  BIF\n  PGK\n  LTL\n  HNL\n  SGD\n  UZS\n  STD\n  IRR\n  CNY\n  XOF\n  TND\n  GYD\n  MTL\n  NZD\n  FKP\n  LVL\n  USD\n  BSD\n  KGS\n  ARS\n  BMD\n  IMP\n  RSD\n  BHD\n  JPY\n  SDG\n  XAU\n}\n\n\"\"\"\nA date string, such as 2007-12-03, compliant with the `full-date` format\noutlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for\nrepresentation of dates and times using the Gregorian calendar.\n\"\"\"\nscalar Date\n\n\"\"\"You always have to setup exact date OR range from-to.\"\"\"\ninput DateInput {\n  \"\"\"Exact date (cannot be used in combination with from-to fields).\"\"\"\n  exact: Date\n\n  \"\"\"\n  Start of the date range (cannot be used in combination with exact date).\n  \"\"\"\n  from: Date\n\n  \"\"\"\n  End of the date range (cannot be used in combination with exact date).\n  \"\"\"\n  to: Date\n}\n\n\"\"\"\nA date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the\n`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO\n8601 standard for representation of dates and times using the Gregorian calendar.\n\"\"\"\nscalar DateTime\n\ninput DurationInput {\n  stopovers: StopoversInput\n  maxFlightDuration: Int\n}\n\ntype Flight {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"List of all Airlines involved.\"\"\"\n  airlines: [Airline]\n  departure: RouteStop\n  arrival: RouteStop\n\n  \"\"\"Flight duration in minutes.\"\"\"\n  duration: Int\n\n  \"\"\"Flight segments, e.g. stopover, change of aircraft, etc.\"\"\"\n  legs: [Leg]\n\n  \"\"\"Total flight price.\"\"\"\n  price: Price\n\n  \"\"\"URL to the Kiwi.com for booking the flight.\"\"\"\n  bookingUrl: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FlightConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FlightEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FlightEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Flight\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput FlightsFiltersInput {\n  maxStopovers: Int\n  duration: DurationInput\n}\n\ninput FlightsOptionsInput {\n  \"\"\"An ISO-4217 currency code.\"\"\"\n  currency: Currency\n  locale: Locale\n}\n\ninput FlightsSearchInput {\n  \"\"\"From where you want to fly?\"\"\"\n  from: [LocationInput!]!\n\n  \"\"\"To where you want to fly?\"\"\"\n  to: [LocationInput!]!\n\n  \"\"\"When do you want to leave?\"\"\"\n  date: DateInput!\n\n  \"\"\"When do you want to return?\"\"\"\n  returnDate: DateInput\n  passengers: PassengersInput\n}\n\n\"\"\"General information about the hotel.\"\"\"\ntype Hotel {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"\n  Original (low level ID of the hotel). You are probably looking for \"id\" field.\n  \"\"\"\n  originalId: String @deprecated(reason: \"Use field \\\"id\\\" instead. This field is used only because of compatibility reasons with old APIs.\")\n\n  \"\"\"Name of the hotel.\"\"\"\n  name: String\n  cityName: String\n\n  \"\"\"URL to our whitelabel page of this hotel.\"\"\"\n  whitelabelUrl: String\n\n  \"\"\"Main description (summary) of the hotel.\"\"\"\n  summary: String\n\n  \"\"\"Main photo of the hotel.\"\"\"\n  mainPhoto: HotelPhoto\n\n  \"\"\"Location of the hotel.\"\"\"\n  coordinates: Coordinates\n  address: Address\n\n  \"\"\"The star rating of the hotel.\"\"\"\n  rating: HotelRating\n\n  \"\"\"Hotel review from hotel visitors.\"\"\"\n  review: HotelReview\n\n  \"\"\"All facilities available in the hotel.\"\"\"\n  facilities(after: String, first: Int, before: String, last: Int): HotelFacilityConnection\n\n  \"\"\"All rooms available in the hotel.\"\"\"\n  rooms(after: String, first: Int, before: String, last: Int): HotelRoomConnection\n\n  \"\"\"All available photos of the hotel.\"\"\"\n  photos(after: String, first: Int, before: String, last: Int): HotelPhotoConnection\n\n  \"\"\"Hotel distance from the center in Km.\"\"\"\n  distanceFromCenter: Float\n}\n\n\"\"\"Information about hotel availability during selected time period.\"\"\"\ntype HotelAvailability {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"\n  Total price for all guests and nights and in the hotel. (including VAT)\n  \"\"\"\n  price: Price\n  availableRooms: [HotelRoomAvailability]\n  hotel: Hotel\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelAvailabilityConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelAvailabilityEdge]\n  stats: HotelAvailabilityStats\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelAvailabilityEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelAvailability\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"\nOverall statistics related to all hotels matching search & filter criteria\n\"\"\"\ntype HotelAvailabilityStats {\n  priceMax: Float\n  priceMin: Float\n}\n\ntype HotelCity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Name of the hotel.\"\"\"\n  name: String\n  location: Coordinates\n  numberOfHotels: Int\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelCityConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelCityEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelCityEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelCity\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput HotelFacilitiesInput {\n  \"\"\"Show only hotels having airport shuttle as a service.\"\"\"\n  airportShuttle: Boolean\n\n  \"\"\"Show only hotels having family rooms.\"\"\"\n  familyRooms: Boolean\n\n  \"\"\"Show only hotels having facilities for disabled.\"\"\"\n  facilitiesForDisabled: Boolean\n\n  \"\"\"Show only hotels having fitness room.\"\"\"\n  fitnessCenter: Boolean\n\n  \"\"\"Show only hotels having any parking.\"\"\"\n  parking: Boolean\n\n  \"\"\"Show only hotels having free parking.\"\"\"\n  freeParking: Boolean\n\n  \"\"\"Show only hotels having valet parking.\"\"\"\n  valetParking: Boolean\n\n  \"\"\"Show only hotels having indoor swimming pool.\"\"\"\n  indoorPool: Boolean\n\n  \"\"\"Show only hotels having pets allowed.\"\"\"\n  petsAllowed: Boolean\n\n  \"\"\"Show only hotels having spa.\"\"\"\n  spa: Boolean\n\n  \"\"\"Show only hotels having wifi.\"\"\"\n  wifi: Boolean\n}\n\ntype HotelFacility {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Name of the facility.\"\"\"\n  name: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelFacilityConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelFacilityEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelFacilityEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelFacility\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype HotelPhoto {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  lowResUrl: String\n  highResUrl: String\n  thumbnailUrl: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelPhotoConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelPhotoEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelPhotoEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelPhoto\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype HotelRating {\n  \"\"\"Star rating is always in the interval 1-5 inclusive.\"\"\"\n  stars: Int\n\n  \"\"\"Name of the stars category.\"\"\"\n  categoryName: String\n}\n\ntype HotelReview {\n  \"\"\"The review score of the hotel, in the range 1-10 inclusive.\"\"\"\n  score: Float\n\n  \"\"\"The review score of the hotel in words.\"\"\"\n  description: String\n\n  \"\"\"The number of reviews of the hotel.\"\"\"\n  count: Int\n}\n\ntype HotelRoom {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Type of the hotel room.\"\"\"\n  type: String\n  maxPersons: Int\n  bedding: [HotelRoomBedding]\n\n  \"\"\"All available photos of the hotel room.\"\"\"\n  photos(after: String, first: Int, before: String, last: Int): HotelRoomPhotoConnection\n  description: HotelRoomDescription\n\n  \"\"\"The hotelroom size in square meters\"\"\"\n  roomSize: Float\n}\n\ntype HotelRoomAvailability {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Original block ID used to open Booking.com page.\"\"\"\n  originalId: String @deprecated(reason: \"Use \\\"id\\\" field whenever possible.\")\n\n  \"\"\"Base price for the room in this configuration.\"\"\"\n  minimalPrice: Price\n  incrementalPrice: [Price]\n\n  \"\"\"Is the hotelroom refundable\"\"\"\n  isRefundable: Boolean\n\n  \"\"\"Is breakfast included in the hotelroom\"\"\"\n  isBreakfastIncluded: Boolean\n  room: HotelRoom\n}\n\ntype HotelRoomBedding {\n  type: String\n  amount: Int\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelRoomConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelRoomEdge]\n}\n\ntype HotelRoomDescription {\n  title: String\n  text: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelRoomEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelRoom\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelRoomPhotoConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelRoomPhotoEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelRoomPhotoEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelPhoto\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput HotelsFilterInput {\n  \"\"\"List of hotels classes (stars) you want to filter.\"\"\"\n  starsRating: [Int]\n\n  \"\"\"\n  Show only hotels having minimum total price lower than or equal to this value.\n  \"\"\"\n  minPrice: Float\n\n  \"\"\"\n  Show only hotels having minimum total price higher than or equal to this value.\n  \"\"\"\n  maxPrice: Float\n\n  \"\"\"Show only hotels having specified hotel facilities\"\"\"\n  hotelFacilities: HotelFacilitiesInput\n\n  \"\"\"\n  Show only hotels having minimum review score higher than or equal to this value. Score must be between 1 and 10.\n  \"\"\"\n  minScore: Int\n\n  \"\"\"Show only hotels having free cancellation.\"\"\"\n  freeCancellation: Boolean\n}\n\n\"\"\"You must provide lat/lng combination OR city ID.\"\"\"\ninput HotelsSearchInput {\n  \"\"\"Latitude in float format (example: 45.4654).\"\"\"\n  latitude: Float\n\n  \"\"\"Longitude in float format (example: 9.1859).\"\"\"\n  longitude: Float\n\n  \"\"\"Opaque ID of the city.\"\"\"\n  cityId: String\n  checkin: Date!\n  checkout: Date!\n  language: Language\n  roomsConfiguration: [RoomsConfiguration!]!\n}\n\ntype Identity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Internal database ID.\"\"\"\n  databaseId: String @deprecated(reason: \"Use id field instead.\")\n\n  \"\"\"Raw input by user, use \"login\" if you want normalized email.\"\"\"\n  email: String\n  emailVerified: Boolean\n  firstName: String\n  lastName: String\n\n  \"\"\"\n  Concatenation of first and last name with fallback to the login field.\n  \"\"\"\n  fullName: String\n\n  \"\"\"Use this in API calls. It is email but normalized.\"\"\"\n  login: String\n}\n\nenum Language {\n  ar\n  bg\n  ca\n  cs\n  da\n  de\n  el\n  en\n  engb\n  enus\n  es\n  esar\n  et\n  fi\n  fr\n  he\n  hr\n  hu\n  id\n  is\n  it\n  ja\n  ko\n  lt\n  lv\n  ms\n  nl\n  no\n  pl\n  pt\n  ptbr\n  ptpt\n  ro\n  ru\n  sk\n  sl\n  sr\n  sv\n  th\n  tl\n  tr\n  uk\n  vi\n  zh\n  zhcn\n  zhtw\n}\n\n\"\"\"\nLeg is the operation of an aircraft from one scheduled departure station to its next scheduled arrival station.\n\"\"\"\ntype Leg {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  airline: Airline\n  arrival: RouteStop\n  departure: RouteStop\n\n  \"\"\"Leg duration in minutes.\"\"\"\n  duration: Int\n  flightNumber: Int\n  recheckRequired: Boolean\n}\n\n\"\"\"Language tag in the format of the RFC 5646.\"\"\"\nenum Locale {\n  bg_BG\n  ca_ES\n  cs_CZ\n  da_DK\n  de_DE\n  de_AT\n  de_CH\n  el_GR\n  en_GB\n  en_AU\n  en_CA\n  en_EE\n  en_HK\n  en_IN\n  en_IE\n  en_MY\n  en_NZ\n  en_SG\n  en_ZA\n  en_PH\n  en_US\n  es_ES\n  es_AR\n  es_CL\n  es_CO\n  es_EC\n  es_PE\n  es_MX\n  fr_FR\n  fr_BE\n  fr_CA\n  hr_HR\n  id_ID\n  is_IS\n  it_IT\n  ja_JP\n  lt_LT\n  he_IL\n  hu_HU\n  nl_NL\n  no_NO\n  pl_PL\n  pt_PT\n  pt_BR\n  ro_RO\n  ru_RU\n  ru_BY\n  ru_KZ\n  sk_SK\n  sr_RS\n  fi_FI\n  sv_SE\n  th_TH\n  tr_TR\n  vi_VN\n  uk_UA\n  ar_SA\n  ar_BH\n  ar_JO\n  ar_KW\n  ar_OM\n  ar_QA\n  ar_AE\n  ko_KR\n  zh_CN\n  zh_TW\n}\n\ntype Location {\n  \"\"\"3-letter IATA code of airport or internal city code.\"\"\"\n  locationId: String\n  name: String\n  slug: String\n  timezone: String\n  location: Coordinates\n\n  \"\"\"Airport, city or country.\"\"\"\n  type: String\n  city: LocationArea\n  subdivision: LocationArea\n  country: LocationArea\n  isActive: Boolean\n  stationsCount: Int\n  airportsCount: Int\n  alternativeNames: [String]\n  autonomousTerritory: LocationArea\n  rank: Int\n}\n\ntype LocationArea {\n  locationId: String\n  name: String\n  slug: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LocationConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LocationEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LocationEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Location\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput LocationInput {\n  location: String\n  radius: RadiusInput\n}\n\ninput LocationsOptionsInput {\n  \"\"\"Language tag in the format of the RFC 5646.\"\"\"\n  locale: Locale\n\n  \"\"\"Desired location type the response should only include.\"\"\"\n  locationType: LocationType\n}\n\n\"\"\"Type of location\"\"\"\nenum LocationType {\n  airport\n  autonomous_territory\n  city\n  country\n  station\n  subdivision\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ninput PassengersInput {\n  adults: Int!\n}\n\ntype Price {\n  amount: Float\n\n  \"\"\"An ISO-4217 currency code.\"\"\"\n  currency: String\n}\n\ninput RadiusInput {\n  \"\"\"Latitude of the center of the circle.\"\"\"\n  lat: Float!\n\n  \"\"\"Longitude of the center of the circle.\"\"\"\n  lng: Float!\n\n  \"\"\"Distance in kilometers.\"\"\"\n  radius: Int!\n}\n\ninput RoomsChildrenConfiguration {\n  age: Int\n}\n\ninput RoomsConfiguration {\n  adultsCount: Int!\n  children: [RoomsChildrenConfiguration]\n}\n\n\"\"\"Root Mutation.\"\"\"\ntype RootMutation {\n  login(email: String!, password: String!): User\n}\n\n\"\"\"Root Query\"\"\"\ntype RootQuery {\n  \"\"\"Search for your flight bookings.\"\"\"\n  allBookings(after: String, first: Int, before: String, last: Int): BookingConnection\n\n  \"\"\"Search for scheduled flights.\"\"\"\n  allFlights(search: FlightsSearchInput!, options: FlightsOptionsInput, filters: FlightsFiltersInput, after: String, first: Int, before: String, last: Int): FlightConnection\n\n  \"\"\"\n  Search for all available hotels in one location. It's necessary to send\n  checkin and checkout dates as well as rooms configuration to get availability info.\n  \"\"\"\n  allAvailableHotels(search: HotelsSearchInput!, filter: HotelsFilterInput, options: AvailableHotelOptionsInput, after: String, first: Int = 50, before: String, last: Int): HotelAvailabilityConnection\n\n  \"\"\"\n  Search for single available hotel by its ID. It's necessary to send checkin\n  and checkout dates as well as rooms configuration to get availability info.\n  \"\"\"\n  availableHotel(search: AvailableHotelSearchInput!, options: AvailableHotelOptionsInput): HotelAvailability\n\n  \"\"\"\n  Search for airports, cities, countries. You can search by location name,\n  radius on the map or rectangle on the map. If you do not specify one of these\n  search inputs then the alphabetical dump of all locations is returned.\n  \"\"\"\n  allLocations(\n    \"\"\"Search location by name.\"\"\"\n    search: String\n\n    \"\"\"Search location by radius.\"\"\"\n    radius: RadiusInput\n\n    \"\"\"Search location by area.\"\"\"\n    area: AreaInput\n    options: LocationsOptionsInput\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): LocationConnection\n\n  \"\"\"Single location by ID.\"\"\"\n  location(id: String!, locale: Locale): Location\n\n  \"\"\"All locations in certain location. For example all airports in London\"\"\"\n  allSubLocations(\n    \"\"\"Location ID\"\"\"\n    id: String!\n    options: LocationsOptionsInput\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): LocationConnection\n\n  \"\"\"Flight booking by ID.\"\"\"\n  booking(id: ID!): Booking\n\n  \"\"\"Current user information.\"\"\"\n  currentUser: Identity\n\n  \"\"\"Single hotel by ID.\"\"\"\n  hotel(id: ID!, language: Language): Hotel\n\n  \"\"\"\n  All cities where you can find the hotels. This query can be used for\n  suggestions of relevant cities (search for example). Cities can be filtered\n  by prefix with typo tolerance. Items are sorted by prefix matching and a\n  number of hotels (desc). When the prefix is omitted top cities are returned.\n  \"\"\"\n  hotelCities(\n    \"\"\"First few letters.\"\"\"\n    prefix: String\n\n    \"\"\"Search for cities around a given position.\"\"\"\n    position: CoordinatesInput\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): HotelCityConnection\n}\n\ntype RouteStop {\n  airport: Location\n  time: DateTime\n  localTime: DateTime\n}\n\ninput StopoversInput {\n  \"\"\"Minimum number of hours of stopover duration.\"\"\"\n  from: Int\n\n  \"\"\"Maximum number of hours of stopover duration.\"\"\"\n  to: Int\n}\n\ntype User {\n  token: String\n  isLoggedIn: Boolean\n  identity: Identity\n}\n",
      "containsQueryType": true,
      "typesUndefined": [],
      "directivesUndefined": [
        "deprecated"
      ],
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 76
    },
    {
      "name": "schema.graphql",
      "path": "sunday-afternoon/schema.graphql",
      "sha": "64379268cae97ae4f425989630460703fd4f5b03",
      "url": "https://api.github.com/repositories/120899785/contents/sunday-afternoon/schema.graphql?ref=aa6741bbb253d05039e923a20d02ef82746793e7",
      "git_url": "https://api.github.com/repositories/120899785/git/blobs/64379268cae97ae4f425989630460703fd4f5b03",
      "html_url": "https://github.com/kiwicom/jsweekend/blob/aa6741bbb253d05039e923a20d02ef82746793e7/sunday-afternoon/schema.graphql",
      "content": "# source: https://graphql.kiwi.com\n# timestamp: Wed Mar 14 2018 14:21:11 GMT+0100 (CET)\n\nschema {\n  query: RootQuery\n  mutation: RootMutation\n}\n\ntype AdditionalBaggage {\n  price: Price\n\n  \"\"\"Number of baggage.\"\"\"\n  quantity: Int\n}\n\ntype Address {\n  \"\"\"Contains street and number.\"\"\"\n  street: String\n  city: String\n  zip: String\n}\n\ntype Airline {\n  name: String\n\n  \"\"\"2-letter IATA code of airline.\"\"\"\n  code: String\n  logoUrl: String\n\n  \"\"\"Airline is low cost carrier.\"\"\"\n  isLowCost: Boolean\n}\n\ntype AllowedBaggage {\n  \"\"\"Extra and overweight baggage.\"\"\"\n  additionalBaggage: [AdditionalBaggage]\n\n  \"\"\"Small carry-on luggage.\"\"\"\n  cabin: [Baggage]\n\n  \"\"\"Baggage checked online.\"\"\"\n  checked: [Baggage]\n}\n\ninput AreaInput {\n  \"\"\"Top left coordinates of the area.\"\"\"\n  topLeft: CoordinatesInput!\n\n  \"\"\"Bottom right coordinates of the area.\"\"\"\n  bottomRight: CoordinatesInput!\n}\n\ninput AvailableHotelOptionsInput {\n  \"\"\"Three-letters ISO 4217 currency code, e.g. EUR or USD\"\"\"\n  currency: Currency\n}\n\ninput AvailableHotelSearchInput {\n  \"\"\"Opaque hotel ID.\"\"\"\n  hotelId: ID!\n  checkin: Date!\n  checkout: Date!\n  roomsConfiguration: [RoomsConfiguration!]!\n  language: Language\n}\n\ntype Baggage {\n  height: Int\n  length: Int\n  width: Int\n  weight: Int\n  note: String\n}\n\ntype Booking {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Internal database ID.\"\"\"\n  databaseId: Int @deprecated(reason: \"Use id field instead.\")\n  allowedBaggage: AllowedBaggage\n  arrival: RouteStop\n\n  \"\"\"Static assets related to this booking.\"\"\"\n  assets: BookingAssets\n  departure: RouteStop\n\n  \"\"\"Flight segments, e.g. stopover, change of aircraft, etc.\"\"\"\n  legs: [Leg]\n  status: BookingStatus\n}\n\ntype BookingAssets {\n  \"\"\"\n  URL of the electronic ticket. Ticket may not be available yet (returns null).\n  \"\"\"\n  ticketUrl: String\n\n  \"\"\"URL of the invoice.\"\"\"\n  invoiceUrl: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype BookingConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [BookingEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BookingEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Booking\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\nenum BookingStatus {\n  NEW\n  REFUNDED\n  PENDING\n  CONFIRMED\n  CANCELLED\n  DELETED\n  CLOSED\n  EXPIRED\n}\n\ntype Coordinates {\n  \"\"\"Latitude.\"\"\"\n  lat: Float\n\n  \"\"\"Longitude.\"\"\"\n  lng: Float\n}\n\ninput CoordinatesInput {\n  \"\"\"Latitude.\"\"\"\n  lat: Float!\n\n  \"\"\"Longitude.\"\"\"\n  lng: Float!\n}\n\nenum Currency {\n  DZD\n  NAD\n  GHS\n  EGP\n  BGN\n  PAB\n  BOB\n  DKK\n  BWP\n  LBP\n  TZS\n  VND\n  AOA\n  KHR\n  MYR\n  SOS\n  KYD\n  LYD\n  UAH\n  JOD\n  AZN\n  AWG\n  SAR\n  XAG\n  HKD\n  CHF\n  GIP\n  BYR\n  SVC\n  XPD\n  BYN\n  MRO\n  HRK\n  DJF\n  THB\n  XAF\n  BND\n  ETB\n  UYU\n  NIO\n  LAK\n  SYP\n  MAD\n  MZN\n  YER\n  ZAR\n  NPR\n  ZWL\n  NGN\n  CRC\n  AED\n  GBP\n  MWK\n  LKR\n  PKR\n  HUF\n  SZL\n  LSL\n  MNT\n  AMD\n  UGX\n  XDR\n  JMD\n  TTD\n  SHP\n  AFN\n  MMK\n  KPW\n  TRY\n  BDT\n  HTG\n  SLL\n  MGA\n  PHP\n  LRD\n  XCD\n  NOK\n  MOP\n  INR\n  MXN\n  CZK\n  TJS\n  BTC\n  BTN\n  COP\n  TMT\n  MUR\n  IDR\n  GEL\n  XPF\n  FJD\n  VUV\n  PEN\n  BZD\n  ILS\n  DOP\n  GGP\n  MDL\n  XPT\n  QAR\n  SEK\n  ZMK\n  MVR\n  AUD\n  SRD\n  CUP\n  CLF\n  BBD\n  KMF\n  KRW\n  GMD\n  VEF\n  GTQ\n  ANG\n  CUC\n  CLP\n  ZMW\n  EUR\n  ALL\n  RWF\n  KZT\n  RUB\n  ISK\n  CDF\n  RON\n  OMR\n  BRL\n  SBD\n  PLN\n  PYG\n  KES\n  QUN\n  MKD\n  EEK\n  TWD\n  TOP\n  JEP\n  GNF\n  WST\n  IQD\n  ERN\n  BAM\n  SCR\n  CAD\n  CVE\n  KWD\n  BIF\n  PGK\n  LTL\n  HNL\n  SGD\n  UZS\n  STD\n  IRR\n  CNY\n  XOF\n  TND\n  GYD\n  MTL\n  NZD\n  FKP\n  LVL\n  USD\n  BSD\n  KGS\n  ARS\n  BMD\n  IMP\n  RSD\n  BHD\n  JPY\n  SDG\n  XAU\n}\n\n\"\"\"\nA date string, such as 2007-12-03, compliant with the `full-date` format\noutlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for\nrepresentation of dates and times using the Gregorian calendar.\n\"\"\"\nscalar Date\n\n\"\"\"You always have to setup exact date OR range from-to.\"\"\"\ninput DateInput {\n  \"\"\"Exact date (cannot be used in combination with from-to fields).\"\"\"\n  exact: Date\n\n  \"\"\"\n  Start of the date range (cannot be used in combination with exact date).\n  \"\"\"\n  from: Date\n\n  \"\"\"\n  End of the date range (cannot be used in combination with exact date).\n  \"\"\"\n  to: Date\n}\n\n\"\"\"\nA date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the\n`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO\n8601 standard for representation of dates and times using the Gregorian calendar.\n\"\"\"\nscalar DateTime\n\ninput DurationInput {\n  stopovers: StopoversInput\n  maxFlightDuration: Int\n}\n\ntype Flight {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"List of all Airlines involved.\"\"\"\n  airlines: [Airline]\n  departure: RouteStop\n  arrival: RouteStop\n\n  \"\"\"Flight duration in minutes.\"\"\"\n  duration: Int\n\n  \"\"\"Flight segments, e.g. stopover, change of aircraft, etc.\"\"\"\n  legs: [Leg]\n\n  \"\"\"Total flight price.\"\"\"\n  price: Price\n\n  \"\"\"URL to the Kiwi.com for booking the flight.\"\"\"\n  bookingUrl: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FlightConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FlightEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FlightEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Flight\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput FlightsFiltersInput {\n  maxStopovers: Int\n  duration: DurationInput\n}\n\ninput FlightsOptionsInput {\n  \"\"\"An ISO-4217 currency code.\"\"\"\n  currency: Currency\n  locale: Locale\n}\n\ninput FlightsSearchInput {\n  \"\"\"From where you want to fly?\"\"\"\n  from: [LocationInput!]!\n\n  \"\"\"To where you want to fly?\"\"\"\n  to: [LocationInput!]!\n\n  \"\"\"When do you want to leave?\"\"\"\n  date: DateInput!\n\n  \"\"\"When do you want to return?\"\"\"\n  returnDate: DateInput\n  passengers: PassengersInput\n}\n\n\"\"\"General information about the hotel.\"\"\"\ntype Hotel {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"\n  Original (low level ID of the hotel). You are probably looking for \"id\" field.\n  \"\"\"\n  originalId: String @deprecated(reason: \"Use field \\\"id\\\" instead. This field is used only because of compatibility reasons with old APIs.\")\n\n  \"\"\"Name of the hotel.\"\"\"\n  name: String\n  cityName: String\n\n  \"\"\"URL to our whitelabel page of this hotel.\"\"\"\n  whitelabelUrl: String\n\n  \"\"\"Main description (summary) of the hotel.\"\"\"\n  summary: String\n\n  \"\"\"Main photo of the hotel.\"\"\"\n  mainPhoto: HotelPhoto\n\n  \"\"\"Location of the hotel.\"\"\"\n  coordinates: Coordinates\n  address: Address\n\n  \"\"\"The star rating of the hotel.\"\"\"\n  rating: HotelRating\n\n  \"\"\"Hotel review from hotel visitors.\"\"\"\n  review: HotelReview\n\n  \"\"\"All facilities available in the hotel.\"\"\"\n  facilities(after: String, first: Int, before: String, last: Int): HotelFacilityConnection\n\n  \"\"\"All rooms available in the hotel.\"\"\"\n  rooms(after: String, first: Int, before: String, last: Int): HotelRoomConnection\n\n  \"\"\"All available photos of the hotel.\"\"\"\n  photos(after: String, first: Int, before: String, last: Int): HotelPhotoConnection\n\n  \"\"\"Hotel distance from the center in Km.\"\"\"\n  distanceFromCenter: Float\n}\n\n\"\"\"Information about hotel availability during selected time period.\"\"\"\ntype HotelAvailability {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"\n  Total price for all guests and nights and in the hotel. (including VAT)\n  \"\"\"\n  price: Price\n  availableRooms: [HotelRoomAvailability]\n  hotel: Hotel\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelAvailabilityConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelAvailabilityEdge]\n  stats: HotelAvailabilityStats\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelAvailabilityEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelAvailability\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"\nOverall statistics related to all hotels matching search & filter criteria\n\"\"\"\ntype HotelAvailabilityStats {\n  priceMax: Float\n  priceMin: Float\n}\n\ntype HotelCity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Name of the hotel.\"\"\"\n  name: String\n  location: Coordinates\n  numberOfHotels: Int\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelCityConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelCityEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelCityEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelCity\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput HotelFacilitiesInput {\n  \"\"\"Show only hotels having airport shuttle as a service.\"\"\"\n  airportShuttle: Boolean\n\n  \"\"\"Show only hotels having family rooms.\"\"\"\n  familyRooms: Boolean\n\n  \"\"\"Show only hotels having facilities for disabled.\"\"\"\n  facilitiesForDisabled: Boolean\n\n  \"\"\"Show only hotels having fitness room.\"\"\"\n  fitnessCenter: Boolean\n\n  \"\"\"Show only hotels having any parking.\"\"\"\n  parking: Boolean\n\n  \"\"\"Show only hotels having free parking.\"\"\"\n  freeParking: Boolean\n\n  \"\"\"Show only hotels having valet parking.\"\"\"\n  valetParking: Boolean\n\n  \"\"\"Show only hotels having indoor swimming pool.\"\"\"\n  indoorPool: Boolean\n\n  \"\"\"Show only hotels having pets allowed.\"\"\"\n  petsAllowed: Boolean\n\n  \"\"\"Show only hotels having spa.\"\"\"\n  spa: Boolean\n\n  \"\"\"Show only hotels having wifi.\"\"\"\n  wifi: Boolean\n}\n\ntype HotelFacility {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Name of the facility.\"\"\"\n  name: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelFacilityConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelFacilityEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelFacilityEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelFacility\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype HotelPhoto {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  lowResUrl: String\n  highResUrl: String\n  thumbnailUrl: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelPhotoConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelPhotoEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelPhotoEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelPhoto\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype HotelRating {\n  \"\"\"Star rating is always in the interval 1-5 inclusive.\"\"\"\n  stars: Int\n\n  \"\"\"Name of the stars category.\"\"\"\n  categoryName: String\n}\n\ntype HotelReview {\n  \"\"\"The review score of the hotel, in the range 1-10 inclusive.\"\"\"\n  score: Float\n\n  \"\"\"The review score of the hotel in words.\"\"\"\n  description: String\n\n  \"\"\"The number of reviews of the hotel.\"\"\"\n  count: Int\n}\n\ntype HotelRoom {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Type of the hotel room.\"\"\"\n  type: String\n  maxPersons: Int\n  bedding: [HotelRoomBedding]\n\n  \"\"\"All available photos of the hotel room.\"\"\"\n  photos(after: String, first: Int, before: String, last: Int): HotelRoomPhotoConnection\n  description: HotelRoomDescription\n\n  \"\"\"The hotelroom size in square meters\"\"\"\n  roomSize: Float\n}\n\ntype HotelRoomAvailability {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Original block ID used to open Booking.com page.\"\"\"\n  originalId: String @deprecated(reason: \"Use \\\"id\\\" field whenever possible.\")\n\n  \"\"\"Base price for the room in this configuration.\"\"\"\n  minimalPrice: Price\n  incrementalPrice: [Price]\n\n  \"\"\"Is the hotelroom refundable\"\"\"\n  isRefundable: Boolean\n\n  \"\"\"Is breakfast included in the hotelroom\"\"\"\n  isBreakfastIncluded: Boolean\n  room: HotelRoom\n}\n\ntype HotelRoomBedding {\n  type: String\n  amount: Int\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelRoomConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelRoomEdge]\n}\n\ntype HotelRoomDescription {\n  title: String\n  text: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelRoomEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelRoom\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelRoomPhotoConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelRoomPhotoEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelRoomPhotoEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelPhoto\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput HotelsFilterInput {\n  \"\"\"List of hotels classes (stars) you want to filter.\"\"\"\n  starsRating: [Int]\n\n  \"\"\"\n  Show only hotels having minimum total price lower than or equal to this value.\n  \"\"\"\n  minPrice: Float\n\n  \"\"\"\n  Show only hotels having minimum total price higher than or equal to this value.\n  \"\"\"\n  maxPrice: Float\n\n  \"\"\"Show only hotels having specified hotel facilities\"\"\"\n  hotelFacilities: HotelFacilitiesInput\n\n  \"\"\"\n  Show only hotels having minimum review score higher than or equal to this value. Score must be between 1 and 10.\n  \"\"\"\n  minScore: Int\n\n  \"\"\"Show only hotels having free cancellation.\"\"\"\n  freeCancellation: Boolean\n}\n\n\"\"\"You must provide lat/lng combination OR city ID.\"\"\"\ninput HotelsSearchInput {\n  \"\"\"Latitude in float format (example: 45.4654).\"\"\"\n  latitude: Float\n\n  \"\"\"Longitude in float format (example: 9.1859).\"\"\"\n  longitude: Float\n\n  \"\"\"Opaque ID of the city.\"\"\"\n  cityId: String\n  checkin: Date!\n  checkout: Date!\n  language: Language\n  roomsConfiguration: [RoomsConfiguration!]!\n}\n\ntype Identity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Internal database ID.\"\"\"\n  databaseId: String @deprecated(reason: \"Use id field instead.\")\n\n  \"\"\"Raw input by user, use \"login\" if you want normalized email.\"\"\"\n  email: String\n  emailVerified: Boolean\n  firstName: String\n  lastName: String\n\n  \"\"\"\n  Concatenation of first and last name with fallback to the login field.\n  \"\"\"\n  fullName: String\n\n  \"\"\"Use this in API calls. It is email but normalized.\"\"\"\n  login: String\n}\n\nenum Language {\n  ar\n  bg\n  ca\n  cs\n  da\n  de\n  el\n  en\n  engb\n  enus\n  es\n  esar\n  et\n  fi\n  fr\n  he\n  hr\n  hu\n  id\n  is\n  it\n  ja\n  ko\n  lt\n  lv\n  ms\n  nl\n  no\n  pl\n  pt\n  ptbr\n  ptpt\n  ro\n  ru\n  sk\n  sl\n  sr\n  sv\n  th\n  tl\n  tr\n  uk\n  vi\n  zh\n  zhcn\n  zhtw\n}\n\n\"\"\"\nLeg is the operation of an aircraft from one scheduled departure station to its next scheduled arrival station.\n\"\"\"\ntype Leg {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  airline: Airline\n  arrival: RouteStop\n  departure: RouteStop\n\n  \"\"\"Leg duration in minutes.\"\"\"\n  duration: Int\n  flightNumber: Int\n  recheckRequired: Boolean\n}\n\n\"\"\"Language tag in the format of the RFC 5646.\"\"\"\nenum Locale {\n  bg_BG\n  ca_ES\n  cs_CZ\n  da_DK\n  de_DE\n  de_AT\n  de_CH\n  el_GR\n  en_GB\n  en_AU\n  en_CA\n  en_EE\n  en_HK\n  en_IN\n  en_IE\n  en_MY\n  en_NZ\n  en_SG\n  en_ZA\n  en_PH\n  en_US\n  es_ES\n  es_AR\n  es_CL\n  es_CO\n  es_EC\n  es_PE\n  es_MX\n  fr_FR\n  fr_BE\n  fr_CA\n  hr_HR\n  id_ID\n  is_IS\n  it_IT\n  ja_JP\n  lt_LT\n  he_IL\n  hu_HU\n  nl_NL\n  no_NO\n  pl_PL\n  pt_PT\n  pt_BR\n  ro_RO\n  ru_RU\n  ru_BY\n  ru_KZ\n  sk_SK\n  sr_RS\n  fi_FI\n  sv_SE\n  th_TH\n  tr_TR\n  vi_VN\n  uk_UA\n  ar_SA\n  ar_BH\n  ar_JO\n  ar_KW\n  ar_OM\n  ar_QA\n  ar_AE\n  ko_KR\n  zh_CN\n  zh_TW\n}\n\ntype Location {\n  \"\"\"3-letter IATA code of airport or internal city code.\"\"\"\n  locationId: String\n  name: String\n  slug: String\n  timezone: String\n  location: Coordinates\n\n  \"\"\"Airport, city or country.\"\"\"\n  type: String\n  city: LocationArea\n  subdivision: LocationArea\n  country: LocationArea\n  isActive: Boolean\n  stationsCount: Int\n  airportsCount: Int\n  alternativeNames: [String]\n  autonomousTerritory: LocationArea\n  rank: Int\n}\n\ntype LocationArea {\n  locationId: String\n  name: String\n  slug: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LocationConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LocationEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LocationEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Location\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput LocationInput {\n  location: String\n  radius: RadiusInput\n}\n\ninput LocationsOptionsInput {\n  \"\"\"Language tag in the format of the RFC 5646.\"\"\"\n  locale: Locale\n\n  \"\"\"Desired location type the response should only include.\"\"\"\n  locationType: LocationType\n}\n\n\"\"\"Type of location\"\"\"\nenum LocationType {\n  airport\n  autonomous_territory\n  city\n  country\n  station\n  subdivision\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ninput PassengersInput {\n  adults: Int!\n}\n\ntype Price {\n  amount: Float\n\n  \"\"\"An ISO-4217 currency code.\"\"\"\n  currency: String\n}\n\ninput RadiusInput {\n  \"\"\"Latitude of the center of the circle.\"\"\"\n  lat: Float!\n\n  \"\"\"Longitude of the center of the circle.\"\"\"\n  lng: Float!\n\n  \"\"\"Distance in kilometers.\"\"\"\n  radius: Int!\n}\n\ninput RoomsChildrenConfiguration {\n  age: Int\n}\n\ninput RoomsConfiguration {\n  adultsCount: Int!\n  children: [RoomsChildrenConfiguration]\n}\n\n\"\"\"Root Mutation.\"\"\"\ntype RootMutation {\n  login(email: String!, password: String!): User\n}\n\n\"\"\"Root Query\"\"\"\ntype RootQuery {\n  \"\"\"Search for your flight bookings.\"\"\"\n  allBookings(after: String, first: Int, before: String, last: Int): BookingConnection\n\n  \"\"\"Search for scheduled flights.\"\"\"\n  allFlights(search: FlightsSearchInput!, options: FlightsOptionsInput, filters: FlightsFiltersInput, after: String, first: Int, before: String, last: Int): FlightConnection\n\n  \"\"\"\n  Search for all available hotels in one location. It's necessary to send\n  checkin and checkout dates as well as rooms configuration to get availability info.\n  \"\"\"\n  allAvailableHotels(search: HotelsSearchInput!, filter: HotelsFilterInput, options: AvailableHotelOptionsInput, after: String, first: Int = 50, before: String, last: Int): HotelAvailabilityConnection\n\n  \"\"\"\n  Search for single available hotel by its ID. It's necessary to send checkin\n  and checkout dates as well as rooms configuration to get availability info.\n  \"\"\"\n  availableHotel(search: AvailableHotelSearchInput!, options: AvailableHotelOptionsInput): HotelAvailability\n\n  \"\"\"\n  Search for airports, cities, countries. You can search by location name,\n  radius on the map or rectangle on the map. If you do not specify one of these\n  search inputs then the alphabetical dump of all locations is returned.\n  \"\"\"\n  allLocations(\n    \"\"\"Search location by name.\"\"\"\n    search: String\n\n    \"\"\"Search location by radius.\"\"\"\n    radius: RadiusInput\n\n    \"\"\"Search location by area.\"\"\"\n    area: AreaInput\n\n    \"\"\"Combination of slug and radius. e.g. bratislava-slovakia-169km\"\"\"\n    slugRadius: String\n    options: LocationsOptionsInput\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): LocationConnection\n\n  \"\"\"Single location by ID.\"\"\"\n  location(id: String!, locale: Locale): Location\n\n  \"\"\"All locations in certain location. For example all airports in London\"\"\"\n  allSubLocations(\n    \"\"\"Location ID\"\"\"\n    id: String!\n    options: LocationsOptionsInput\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): LocationConnection\n\n  \"\"\"Flight booking by ID.\"\"\"\n  booking(id: ID!): Booking\n\n  \"\"\"Current user information.\"\"\"\n  currentUser: Identity\n\n  \"\"\"Single hotel by ID.\"\"\"\n  hotel(id: ID!, language: Language): Hotel\n\n  \"\"\"\n  All cities where you can find the hotels. This query can be used for\n  suggestions of relevant cities (search for example). Cities can be filtered\n  by prefix with typo tolerance. Items are sorted by prefix matching and a\n  number of hotels (desc). When the prefix is omitted top cities are returned.\n  \"\"\"\n  hotelCities(\n    \"\"\"First few letters.\"\"\"\n    prefix: String\n\n    \"\"\"Search for cities around a given position.\"\"\"\n    position: CoordinatesInput\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): HotelCityConnection\n}\n\ntype RouteStop {\n  airport: Location\n  time: DateTime\n  localTime: DateTime\n}\n\ninput StopoversInput {\n  \"\"\"Minimum number of hours of stopover duration.\"\"\"\n  from: Int\n\n  \"\"\"Maximum number of hours of stopover duration.\"\"\"\n  to: Int\n}\n\ntype User {\n  token: String\n  isLoggedIn: Boolean\n  identity: Identity\n}\n",
      "containsQueryType": true,
      "typesUndefined": [],
      "directivesUndefined": [
        "deprecated"
      ],
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 76
    },
    {
      "name": "schema.graphql",
      "path": "sunday-morning/schema.graphql",
      "sha": "64379268cae97ae4f425989630460703fd4f5b03",
      "url": "https://api.github.com/repositories/120899785/contents/sunday-morning/schema.graphql?ref=aa6741bbb253d05039e923a20d02ef82746793e7",
      "git_url": "https://api.github.com/repositories/120899785/git/blobs/64379268cae97ae4f425989630460703fd4f5b03",
      "html_url": "https://github.com/kiwicom/jsweekend/blob/aa6741bbb253d05039e923a20d02ef82746793e7/sunday-morning/schema.graphql",
      "content": "# source: https://graphql.kiwi.com\n# timestamp: Wed Mar 14 2018 14:21:11 GMT+0100 (CET)\n\nschema {\n  query: RootQuery\n  mutation: RootMutation\n}\n\ntype AdditionalBaggage {\n  price: Price\n\n  \"\"\"Number of baggage.\"\"\"\n  quantity: Int\n}\n\ntype Address {\n  \"\"\"Contains street and number.\"\"\"\n  street: String\n  city: String\n  zip: String\n}\n\ntype Airline {\n  name: String\n\n  \"\"\"2-letter IATA code of airline.\"\"\"\n  code: String\n  logoUrl: String\n\n  \"\"\"Airline is low cost carrier.\"\"\"\n  isLowCost: Boolean\n}\n\ntype AllowedBaggage {\n  \"\"\"Extra and overweight baggage.\"\"\"\n  additionalBaggage: [AdditionalBaggage]\n\n  \"\"\"Small carry-on luggage.\"\"\"\n  cabin: [Baggage]\n\n  \"\"\"Baggage checked online.\"\"\"\n  checked: [Baggage]\n}\n\ninput AreaInput {\n  \"\"\"Top left coordinates of the area.\"\"\"\n  topLeft: CoordinatesInput!\n\n  \"\"\"Bottom right coordinates of the area.\"\"\"\n  bottomRight: CoordinatesInput!\n}\n\ninput AvailableHotelOptionsInput {\n  \"\"\"Three-letters ISO 4217 currency code, e.g. EUR or USD\"\"\"\n  currency: Currency\n}\n\ninput AvailableHotelSearchInput {\n  \"\"\"Opaque hotel ID.\"\"\"\n  hotelId: ID!\n  checkin: Date!\n  checkout: Date!\n  roomsConfiguration: [RoomsConfiguration!]!\n  language: Language\n}\n\ntype Baggage {\n  height: Int\n  length: Int\n  width: Int\n  weight: Int\n  note: String\n}\n\ntype Booking {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Internal database ID.\"\"\"\n  databaseId: Int @deprecated(reason: \"Use id field instead.\")\n  allowedBaggage: AllowedBaggage\n  arrival: RouteStop\n\n  \"\"\"Static assets related to this booking.\"\"\"\n  assets: BookingAssets\n  departure: RouteStop\n\n  \"\"\"Flight segments, e.g. stopover, change of aircraft, etc.\"\"\"\n  legs: [Leg]\n  status: BookingStatus\n}\n\ntype BookingAssets {\n  \"\"\"\n  URL of the electronic ticket. Ticket may not be available yet (returns null).\n  \"\"\"\n  ticketUrl: String\n\n  \"\"\"URL of the invoice.\"\"\"\n  invoiceUrl: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype BookingConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [BookingEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BookingEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Booking\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\nenum BookingStatus {\n  NEW\n  REFUNDED\n  PENDING\n  CONFIRMED\n  CANCELLED\n  DELETED\n  CLOSED\n  EXPIRED\n}\n\ntype Coordinates {\n  \"\"\"Latitude.\"\"\"\n  lat: Float\n\n  \"\"\"Longitude.\"\"\"\n  lng: Float\n}\n\ninput CoordinatesInput {\n  \"\"\"Latitude.\"\"\"\n  lat: Float!\n\n  \"\"\"Longitude.\"\"\"\n  lng: Float!\n}\n\nenum Currency {\n  DZD\n  NAD\n  GHS\n  EGP\n  BGN\n  PAB\n  BOB\n  DKK\n  BWP\n  LBP\n  TZS\n  VND\n  AOA\n  KHR\n  MYR\n  SOS\n  KYD\n  LYD\n  UAH\n  JOD\n  AZN\n  AWG\n  SAR\n  XAG\n  HKD\n  CHF\n  GIP\n  BYR\n  SVC\n  XPD\n  BYN\n  MRO\n  HRK\n  DJF\n  THB\n  XAF\n  BND\n  ETB\n  UYU\n  NIO\n  LAK\n  SYP\n  MAD\n  MZN\n  YER\n  ZAR\n  NPR\n  ZWL\n  NGN\n  CRC\n  AED\n  GBP\n  MWK\n  LKR\n  PKR\n  HUF\n  SZL\n  LSL\n  MNT\n  AMD\n  UGX\n  XDR\n  JMD\n  TTD\n  SHP\n  AFN\n  MMK\n  KPW\n  TRY\n  BDT\n  HTG\n  SLL\n  MGA\n  PHP\n  LRD\n  XCD\n  NOK\n  MOP\n  INR\n  MXN\n  CZK\n  TJS\n  BTC\n  BTN\n  COP\n  TMT\n  MUR\n  IDR\n  GEL\n  XPF\n  FJD\n  VUV\n  PEN\n  BZD\n  ILS\n  DOP\n  GGP\n  MDL\n  XPT\n  QAR\n  SEK\n  ZMK\n  MVR\n  AUD\n  SRD\n  CUP\n  CLF\n  BBD\n  KMF\n  KRW\n  GMD\n  VEF\n  GTQ\n  ANG\n  CUC\n  CLP\n  ZMW\n  EUR\n  ALL\n  RWF\n  KZT\n  RUB\n  ISK\n  CDF\n  RON\n  OMR\n  BRL\n  SBD\n  PLN\n  PYG\n  KES\n  QUN\n  MKD\n  EEK\n  TWD\n  TOP\n  JEP\n  GNF\n  WST\n  IQD\n  ERN\n  BAM\n  SCR\n  CAD\n  CVE\n  KWD\n  BIF\n  PGK\n  LTL\n  HNL\n  SGD\n  UZS\n  STD\n  IRR\n  CNY\n  XOF\n  TND\n  GYD\n  MTL\n  NZD\n  FKP\n  LVL\n  USD\n  BSD\n  KGS\n  ARS\n  BMD\n  IMP\n  RSD\n  BHD\n  JPY\n  SDG\n  XAU\n}\n\n\"\"\"\nA date string, such as 2007-12-03, compliant with the `full-date` format\noutlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for\nrepresentation of dates and times using the Gregorian calendar.\n\"\"\"\nscalar Date\n\n\"\"\"You always have to setup exact date OR range from-to.\"\"\"\ninput DateInput {\n  \"\"\"Exact date (cannot be used in combination with from-to fields).\"\"\"\n  exact: Date\n\n  \"\"\"\n  Start of the date range (cannot be used in combination with exact date).\n  \"\"\"\n  from: Date\n\n  \"\"\"\n  End of the date range (cannot be used in combination with exact date).\n  \"\"\"\n  to: Date\n}\n\n\"\"\"\nA date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the\n`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO\n8601 standard for representation of dates and times using the Gregorian calendar.\n\"\"\"\nscalar DateTime\n\ninput DurationInput {\n  stopovers: StopoversInput\n  maxFlightDuration: Int\n}\n\ntype Flight {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"List of all Airlines involved.\"\"\"\n  airlines: [Airline]\n  departure: RouteStop\n  arrival: RouteStop\n\n  \"\"\"Flight duration in minutes.\"\"\"\n  duration: Int\n\n  \"\"\"Flight segments, e.g. stopover, change of aircraft, etc.\"\"\"\n  legs: [Leg]\n\n  \"\"\"Total flight price.\"\"\"\n  price: Price\n\n  \"\"\"URL to the Kiwi.com for booking the flight.\"\"\"\n  bookingUrl: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FlightConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FlightEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FlightEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Flight\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput FlightsFiltersInput {\n  maxStopovers: Int\n  duration: DurationInput\n}\n\ninput FlightsOptionsInput {\n  \"\"\"An ISO-4217 currency code.\"\"\"\n  currency: Currency\n  locale: Locale\n}\n\ninput FlightsSearchInput {\n  \"\"\"From where you want to fly?\"\"\"\n  from: [LocationInput!]!\n\n  \"\"\"To where you want to fly?\"\"\"\n  to: [LocationInput!]!\n\n  \"\"\"When do you want to leave?\"\"\"\n  date: DateInput!\n\n  \"\"\"When do you want to return?\"\"\"\n  returnDate: DateInput\n  passengers: PassengersInput\n}\n\n\"\"\"General information about the hotel.\"\"\"\ntype Hotel {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"\n  Original (low level ID of the hotel). You are probably looking for \"id\" field.\n  \"\"\"\n  originalId: String @deprecated(reason: \"Use field \\\"id\\\" instead. This field is used only because of compatibility reasons with old APIs.\")\n\n  \"\"\"Name of the hotel.\"\"\"\n  name: String\n  cityName: String\n\n  \"\"\"URL to our whitelabel page of this hotel.\"\"\"\n  whitelabelUrl: String\n\n  \"\"\"Main description (summary) of the hotel.\"\"\"\n  summary: String\n\n  \"\"\"Main photo of the hotel.\"\"\"\n  mainPhoto: HotelPhoto\n\n  \"\"\"Location of the hotel.\"\"\"\n  coordinates: Coordinates\n  address: Address\n\n  \"\"\"The star rating of the hotel.\"\"\"\n  rating: HotelRating\n\n  \"\"\"Hotel review from hotel visitors.\"\"\"\n  review: HotelReview\n\n  \"\"\"All facilities available in the hotel.\"\"\"\n  facilities(after: String, first: Int, before: String, last: Int): HotelFacilityConnection\n\n  \"\"\"All rooms available in the hotel.\"\"\"\n  rooms(after: String, first: Int, before: String, last: Int): HotelRoomConnection\n\n  \"\"\"All available photos of the hotel.\"\"\"\n  photos(after: String, first: Int, before: String, last: Int): HotelPhotoConnection\n\n  \"\"\"Hotel distance from the center in Km.\"\"\"\n  distanceFromCenter: Float\n}\n\n\"\"\"Information about hotel availability during selected time period.\"\"\"\ntype HotelAvailability {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"\n  Total price for all guests and nights and in the hotel. (including VAT)\n  \"\"\"\n  price: Price\n  availableRooms: [HotelRoomAvailability]\n  hotel: Hotel\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelAvailabilityConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelAvailabilityEdge]\n  stats: HotelAvailabilityStats\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelAvailabilityEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelAvailability\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"\nOverall statistics related to all hotels matching search & filter criteria\n\"\"\"\ntype HotelAvailabilityStats {\n  priceMax: Float\n  priceMin: Float\n}\n\ntype HotelCity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Name of the hotel.\"\"\"\n  name: String\n  location: Coordinates\n  numberOfHotels: Int\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelCityConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelCityEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelCityEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelCity\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput HotelFacilitiesInput {\n  \"\"\"Show only hotels having airport shuttle as a service.\"\"\"\n  airportShuttle: Boolean\n\n  \"\"\"Show only hotels having family rooms.\"\"\"\n  familyRooms: Boolean\n\n  \"\"\"Show only hotels having facilities for disabled.\"\"\"\n  facilitiesForDisabled: Boolean\n\n  \"\"\"Show only hotels having fitness room.\"\"\"\n  fitnessCenter: Boolean\n\n  \"\"\"Show only hotels having any parking.\"\"\"\n  parking: Boolean\n\n  \"\"\"Show only hotels having free parking.\"\"\"\n  freeParking: Boolean\n\n  \"\"\"Show only hotels having valet parking.\"\"\"\n  valetParking: Boolean\n\n  \"\"\"Show only hotels having indoor swimming pool.\"\"\"\n  indoorPool: Boolean\n\n  \"\"\"Show only hotels having pets allowed.\"\"\"\n  petsAllowed: Boolean\n\n  \"\"\"Show only hotels having spa.\"\"\"\n  spa: Boolean\n\n  \"\"\"Show only hotels having wifi.\"\"\"\n  wifi: Boolean\n}\n\ntype HotelFacility {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Name of the facility.\"\"\"\n  name: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelFacilityConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelFacilityEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelFacilityEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelFacility\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype HotelPhoto {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  lowResUrl: String\n  highResUrl: String\n  thumbnailUrl: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelPhotoConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelPhotoEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelPhotoEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelPhoto\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype HotelRating {\n  \"\"\"Star rating is always in the interval 1-5 inclusive.\"\"\"\n  stars: Int\n\n  \"\"\"Name of the stars category.\"\"\"\n  categoryName: String\n}\n\ntype HotelReview {\n  \"\"\"The review score of the hotel, in the range 1-10 inclusive.\"\"\"\n  score: Float\n\n  \"\"\"The review score of the hotel in words.\"\"\"\n  description: String\n\n  \"\"\"The number of reviews of the hotel.\"\"\"\n  count: Int\n}\n\ntype HotelRoom {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Type of the hotel room.\"\"\"\n  type: String\n  maxPersons: Int\n  bedding: [HotelRoomBedding]\n\n  \"\"\"All available photos of the hotel room.\"\"\"\n  photos(after: String, first: Int, before: String, last: Int): HotelRoomPhotoConnection\n  description: HotelRoomDescription\n\n  \"\"\"The hotelroom size in square meters\"\"\"\n  roomSize: Float\n}\n\ntype HotelRoomAvailability {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Original block ID used to open Booking.com page.\"\"\"\n  originalId: String @deprecated(reason: \"Use \\\"id\\\" field whenever possible.\")\n\n  \"\"\"Base price for the room in this configuration.\"\"\"\n  minimalPrice: Price\n  incrementalPrice: [Price]\n\n  \"\"\"Is the hotelroom refundable\"\"\"\n  isRefundable: Boolean\n\n  \"\"\"Is breakfast included in the hotelroom\"\"\"\n  isBreakfastIncluded: Boolean\n  room: HotelRoom\n}\n\ntype HotelRoomBedding {\n  type: String\n  amount: Int\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelRoomConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelRoomEdge]\n}\n\ntype HotelRoomDescription {\n  title: String\n  text: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelRoomEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelRoom\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype HotelRoomPhotoConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [HotelRoomPhotoEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype HotelRoomPhotoEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: HotelPhoto\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput HotelsFilterInput {\n  \"\"\"List of hotels classes (stars) you want to filter.\"\"\"\n  starsRating: [Int]\n\n  \"\"\"\n  Show only hotels having minimum total price lower than or equal to this value.\n  \"\"\"\n  minPrice: Float\n\n  \"\"\"\n  Show only hotels having minimum total price higher than or equal to this value.\n  \"\"\"\n  maxPrice: Float\n\n  \"\"\"Show only hotels having specified hotel facilities\"\"\"\n  hotelFacilities: HotelFacilitiesInput\n\n  \"\"\"\n  Show only hotels having minimum review score higher than or equal to this value. Score must be between 1 and 10.\n  \"\"\"\n  minScore: Int\n\n  \"\"\"Show only hotels having free cancellation.\"\"\"\n  freeCancellation: Boolean\n}\n\n\"\"\"You must provide lat/lng combination OR city ID.\"\"\"\ninput HotelsSearchInput {\n  \"\"\"Latitude in float format (example: 45.4654).\"\"\"\n  latitude: Float\n\n  \"\"\"Longitude in float format (example: 9.1859).\"\"\"\n  longitude: Float\n\n  \"\"\"Opaque ID of the city.\"\"\"\n  cityId: String\n  checkin: Date!\n  checkout: Date!\n  language: Language\n  roomsConfiguration: [RoomsConfiguration!]!\n}\n\ntype Identity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"Internal database ID.\"\"\"\n  databaseId: String @deprecated(reason: \"Use id field instead.\")\n\n  \"\"\"Raw input by user, use \"login\" if you want normalized email.\"\"\"\n  email: String\n  emailVerified: Boolean\n  firstName: String\n  lastName: String\n\n  \"\"\"\n  Concatenation of first and last name with fallback to the login field.\n  \"\"\"\n  fullName: String\n\n  \"\"\"Use this in API calls. It is email but normalized.\"\"\"\n  login: String\n}\n\nenum Language {\n  ar\n  bg\n  ca\n  cs\n  da\n  de\n  el\n  en\n  engb\n  enus\n  es\n  esar\n  et\n  fi\n  fr\n  he\n  hr\n  hu\n  id\n  is\n  it\n  ja\n  ko\n  lt\n  lv\n  ms\n  nl\n  no\n  pl\n  pt\n  ptbr\n  ptpt\n  ro\n  ru\n  sk\n  sl\n  sr\n  sv\n  th\n  tl\n  tr\n  uk\n  vi\n  zh\n  zhcn\n  zhtw\n}\n\n\"\"\"\nLeg is the operation of an aircraft from one scheduled departure station to its next scheduled arrival station.\n\"\"\"\ntype Leg {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  airline: Airline\n  arrival: RouteStop\n  departure: RouteStop\n\n  \"\"\"Leg duration in minutes.\"\"\"\n  duration: Int\n  flightNumber: Int\n  recheckRequired: Boolean\n}\n\n\"\"\"Language tag in the format of the RFC 5646.\"\"\"\nenum Locale {\n  bg_BG\n  ca_ES\n  cs_CZ\n  da_DK\n  de_DE\n  de_AT\n  de_CH\n  el_GR\n  en_GB\n  en_AU\n  en_CA\n  en_EE\n  en_HK\n  en_IN\n  en_IE\n  en_MY\n  en_NZ\n  en_SG\n  en_ZA\n  en_PH\n  en_US\n  es_ES\n  es_AR\n  es_CL\n  es_CO\n  es_EC\n  es_PE\n  es_MX\n  fr_FR\n  fr_BE\n  fr_CA\n  hr_HR\n  id_ID\n  is_IS\n  it_IT\n  ja_JP\n  lt_LT\n  he_IL\n  hu_HU\n  nl_NL\n  no_NO\n  pl_PL\n  pt_PT\n  pt_BR\n  ro_RO\n  ru_RU\n  ru_BY\n  ru_KZ\n  sk_SK\n  sr_RS\n  fi_FI\n  sv_SE\n  th_TH\n  tr_TR\n  vi_VN\n  uk_UA\n  ar_SA\n  ar_BH\n  ar_JO\n  ar_KW\n  ar_OM\n  ar_QA\n  ar_AE\n  ko_KR\n  zh_CN\n  zh_TW\n}\n\ntype Location {\n  \"\"\"3-letter IATA code of airport or internal city code.\"\"\"\n  locationId: String\n  name: String\n  slug: String\n  timezone: String\n  location: Coordinates\n\n  \"\"\"Airport, city or country.\"\"\"\n  type: String\n  city: LocationArea\n  subdivision: LocationArea\n  country: LocationArea\n  isActive: Boolean\n  stationsCount: Int\n  airportsCount: Int\n  alternativeNames: [String]\n  autonomousTerritory: LocationArea\n  rank: Int\n}\n\ntype LocationArea {\n  locationId: String\n  name: String\n  slug: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LocationConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LocationEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LocationEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Location\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput LocationInput {\n  location: String\n  radius: RadiusInput\n}\n\ninput LocationsOptionsInput {\n  \"\"\"Language tag in the format of the RFC 5646.\"\"\"\n  locale: Locale\n\n  \"\"\"Desired location type the response should only include.\"\"\"\n  locationType: LocationType\n}\n\n\"\"\"Type of location\"\"\"\nenum LocationType {\n  airport\n  autonomous_territory\n  city\n  country\n  station\n  subdivision\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ninput PassengersInput {\n  adults: Int!\n}\n\ntype Price {\n  amount: Float\n\n  \"\"\"An ISO-4217 currency code.\"\"\"\n  currency: String\n}\n\ninput RadiusInput {\n  \"\"\"Latitude of the center of the circle.\"\"\"\n  lat: Float!\n\n  \"\"\"Longitude of the center of the circle.\"\"\"\n  lng: Float!\n\n  \"\"\"Distance in kilometers.\"\"\"\n  radius: Int!\n}\n\ninput RoomsChildrenConfiguration {\n  age: Int\n}\n\ninput RoomsConfiguration {\n  adultsCount: Int!\n  children: [RoomsChildrenConfiguration]\n}\n\n\"\"\"Root Mutation.\"\"\"\ntype RootMutation {\n  login(email: String!, password: String!): User\n}\n\n\"\"\"Root Query\"\"\"\ntype RootQuery {\n  \"\"\"Search for your flight bookings.\"\"\"\n  allBookings(after: String, first: Int, before: String, last: Int): BookingConnection\n\n  \"\"\"Search for scheduled flights.\"\"\"\n  allFlights(search: FlightsSearchInput!, options: FlightsOptionsInput, filters: FlightsFiltersInput, after: String, first: Int, before: String, last: Int): FlightConnection\n\n  \"\"\"\n  Search for all available hotels in one location. It's necessary to send\n  checkin and checkout dates as well as rooms configuration to get availability info.\n  \"\"\"\n  allAvailableHotels(search: HotelsSearchInput!, filter: HotelsFilterInput, options: AvailableHotelOptionsInput, after: String, first: Int = 50, before: String, last: Int): HotelAvailabilityConnection\n\n  \"\"\"\n  Search for single available hotel by its ID. It's necessary to send checkin\n  and checkout dates as well as rooms configuration to get availability info.\n  \"\"\"\n  availableHotel(search: AvailableHotelSearchInput!, options: AvailableHotelOptionsInput): HotelAvailability\n\n  \"\"\"\n  Search for airports, cities, countries. You can search by location name,\n  radius on the map or rectangle on the map. If you do not specify one of these\n  search inputs then the alphabetical dump of all locations is returned.\n  \"\"\"\n  allLocations(\n    \"\"\"Search location by name.\"\"\"\n    search: String\n\n    \"\"\"Search location by radius.\"\"\"\n    radius: RadiusInput\n\n    \"\"\"Search location by area.\"\"\"\n    area: AreaInput\n\n    \"\"\"Combination of slug and radius. e.g. bratislava-slovakia-169km\"\"\"\n    slugRadius: String\n    options: LocationsOptionsInput\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): LocationConnection\n\n  \"\"\"Single location by ID.\"\"\"\n  location(id: String!, locale: Locale): Location\n\n  \"\"\"All locations in certain location. For example all airports in London\"\"\"\n  allSubLocations(\n    \"\"\"Location ID\"\"\"\n    id: String!\n    options: LocationsOptionsInput\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): LocationConnection\n\n  \"\"\"Flight booking by ID.\"\"\"\n  booking(id: ID!): Booking\n\n  \"\"\"Current user information.\"\"\"\n  currentUser: Identity\n\n  \"\"\"Single hotel by ID.\"\"\"\n  hotel(id: ID!, language: Language): Hotel\n\n  \"\"\"\n  All cities where you can find the hotels. This query can be used for\n  suggestions of relevant cities (search for example). Cities can be filtered\n  by prefix with typo tolerance. Items are sorted by prefix matching and a\n  number of hotels (desc). When the prefix is omitted top cities are returned.\n  \"\"\"\n  hotelCities(\n    \"\"\"First few letters.\"\"\"\n    prefix: String\n\n    \"\"\"Search for cities around a given position.\"\"\"\n    position: CoordinatesInput\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): HotelCityConnection\n}\n\ntype RouteStop {\n  airport: Location\n  time: DateTime\n  localTime: DateTime\n}\n\ninput StopoversInput {\n  \"\"\"Minimum number of hours of stopover duration.\"\"\"\n  from: Int\n\n  \"\"\"Maximum number of hours of stopover duration.\"\"\"\n  to: Int\n}\n\ntype User {\n  token: String\n  isLoggedIn: Boolean\n  identity: Identity\n}\n",
      "containsQueryType": true,
      "typesUndefined": [],
      "directivesUndefined": [
        "deprecated"
      ],
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 76
    }
  ],
  "metrics": {
    "created_at": "2018-02-09T11:52:45Z",
    "updated_at": "2019-07-12T11:08:08Z",
    "pushed_at": "2019-07-12T09:54:16Z",
    "issues": 13,
    "watchers": 6,
    "fork_count": 5,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 44,
    "pull_requests_open": 1,
    "pull_requests_closed": 2,
    "pull_requests_merged": 41,
    "releases": 0,
    "stargazers": 3
  }
}