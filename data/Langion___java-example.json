{
  "repo_name": "java-example",
  "repo_full_name": "langion/java-example",
  "repo_owner": "Langion",
  "repo_description": "Java example",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "schema.graphql",
      "sha": "06b854193055912fdce7b437a9987fd5b7cc01f1",
      "url": "https://api.github.com/repositories/134238556/contents/schema.graphql?ref=67c1174c58c2bbf22d3e5b89dc1323d7f3592c86",
      "git_url": "https://api.github.com/repositories/134238556/git/blobs/06b854193055912fdce7b437a9987fd5b7cc01f1",
      "html_url": "https://github.com/Langion/java-example/blob/67c1174c58c2bbf22d3e5b89dc1323d7f3592c86/schema.graphql",
      "content": "input DeleteHotelParamsServiceaHotelControllerMutationInterplayInput {\n  raw: Raw\n\n  \"\"\"The ID of the existing hotel resource.\"\"\"\n  id: Float!\n}\n\ninput DeleteHotelParamsServiceaTestAControllerMutationInterplayInput {\n  raw: Raw\n\n  \"\"\"The ID of the existing hotel resource.\"\"\"\n  id: Float!\n}\n\ninput DeleteHotelParamsServicebHotelControllerMutationInterplayInput {\n  raw: Raw\n\n  \"\"\"The ID of the existing hotel resource.\"\"\"\n  id: Float!\n}\n\nenum Direction {\n  ASC\n  DESC\n}\n\ninput GetAllHotelQueryInput {\n  raw: Raw\n\n  \"\"\"Tha page size\"\"\"\n  size: Float!\n\n  \"\"\"The page number (zero-based)\"\"\"\n  page: Float!\n}\n\ninput GetAllHotelQueryServiceaTestAControllerInterplayInput {\n  raw: Raw\n\n  \"\"\"Tha page size\"\"\"\n  size: Float!\n\n  \"\"\"The page number (zero-based)\"\"\"\n  page: Float!\n}\n\ninput GetAllHotelQueryServicebHotelControllerInterplayInput {\n  raw: Raw\n\n  \"\"\"Tha page size\"\"\"\n  size: Float!\n\n  \"\"\"The page number (zero-based)\"\"\"\n  page: Float!\n}\n\ninput GetHotelParamsInput {\n  raw: Raw\n\n  \"\"\"The ID of the hotel.\"\"\"\n  id: Float!\n}\n\ninput GetHotelParamsServiceaTestAControllerInterplayInput {\n  raw: Raw\n\n  \"\"\"The ID of the hotel.\"\"\"\n  id: Float!\n}\n\ninput GetHotelParamsServicebHotelControllerInterplayInput {\n  raw: Raw\n\n  \"\"\"The ID of the hotel.\"\"\"\n  id: Float!\n}\n\ninput GetHotelTwoParamsInput {\n  raw: Raw\n\n  \"\"\"The ID of the hotel.\"\"\"\n  id: Float!\n}\n\ninput GetTestHotelParamsInput {\n  raw: Raw\n\n  \"\"\"The ID of the hotel.\"\"\"\n  id: Float!\n}\n\n\"\"\" a simple domain entity doubling as a DTO  \"\"\"\ntype Hotel {\n  raw: Raw\n  city: String\n  description: String\n  id: Float\n  name: String\n  rating: Float\n}\n\ntype HotelControllerMutationServicea {\n  \"\"\"\n  Path: /example/v1/hotels/\n  Create a hotel resource. Returns the URL of the new resource in the Location header.\n  \"\"\"\n  createHotel(payload: HotelInput!): Raw\n\n  \"\"\"\n  Path: /example/v1/hotels/{id}\n  Delete a hotel resource. You have to provide a valid hotel ID in the URL. Once deleted the resource can not be recovered.\n  \"\"\"\n  deleteHotel(params: DeleteHotelParamsServiceaHotelControllerMutationInterplayInput!): Raw\n\n  \"\"\"\n  Path: /example/v1/hotels/{id}\n  Update a hotel resource. You have to provide a valid hotel ID in the URL and\n  in the payload. The ID attribute can not be updated.\n  \"\"\"\n  updateHotel(params: UpdateHotelParamsServiceaHotelControllerMutationInterplayInput!, payload: HotelInput!): Raw\n}\n\ntype HotelControllerMutationServiceb {\n  \"\"\"\n  Path: /example/v1/hotels/\n  Create a hotel resource. Returns the URL of the new resource in the Location header.\n  \"\"\"\n  createHotel(payload: HotelServicebInput!): Raw\n\n  \"\"\"\n  Path: /example/v1/hotels/{id}\n  Delete a hotel resource. You have to provide a valid hotel ID in the URL. Once deleted the resource can not be recovered.\n  \"\"\"\n  deleteHotel(params: DeleteHotelParamsServicebHotelControllerMutationInterplayInput!): Raw\n\n  \"\"\"\n  Path: /example/v1/hotels/{id}\n  Update a hotel resource. You have to provide a valid hotel ID in the URL and\n  in the payload. The ID attribute can not be updated.\n  \"\"\"\n  updateHotel(params: UpdateHotelParamsServicebHotelControllerMutationInterplayInput!, payload: HotelServicebInput!): Raw\n}\n\ntype HotelControllerServicea {\n  \"\"\"\n  Path: /example/v1/hotels/\n  Get a paginated list of all hotels. The list is paginated. You can provide a\n  page number (default 0) and a page size (default 100)\n  \"\"\"\n  getAllHotel(query: GetAllHotelQueryInput): Page_Hotel\n\n  \"\"\"\n  Path: /example/v1/hotels/{id}\n  Get a single hotel. You have to provide a valid hotel ID.\n  \"\"\"\n  getHotel(params: GetHotelParamsInput!): Hotel\n}\n\ntype HotelControllerServiceb {\n  \"\"\"\n  Path: /example/v1/hotels/\n  Get a paginated list of all hotels. The list is paginated. You can provide a\n  page number (default 0) and a page size (default 100)\n  \"\"\"\n  getAllHotel(query: GetAllHotelQueryServicebHotelControllerInterplayInput): Page_HotelServiceb\n\n  \"\"\"\n  Path: /example/v1/hotels/{id}\n  Get a single hotel. You have to provide a valid hotel ID.\n  \"\"\"\n  getHotel(params: GetHotelParamsServicebHotelControllerInterplayInput!): HotelServiceb\n\n  \"\"\"\n  Path: /example/v1/hotels/two/{id}\n  Get a single hotel. You have to provide a valid hotel ID.\n  \"\"\"\n  getHotelTwo(params: GetHotelTwoParamsInput!): HotelTwo\n}\n\n\"\"\" a simple domain entity doubling as a DTO  \"\"\"\ninput HotelInput {\n  raw: Raw\n  city: String\n  description: String\n  id: Float\n  name: String\n  rating: Float\n}\n\n\"\"\" a simple domain entity doubling as a DTO  \"\"\"\ntype HotelServiceb {\n  raw: Raw\n  city: String\n  description: String\n  id: Float\n  name: String\n  rating: Float\n}\n\n\"\"\" a simple domain entity doubling as a DTO  \"\"\"\ninput HotelServicebInput {\n  raw: Raw\n  city: String\n  description: String\n  id: Float\n  name: String\n  rating: Float\n}\n\n\"\"\" a simple domain entity doubling as a DTO  \"\"\"\ntype HotelTwo {\n  raw: Raw\n  one: HotelServiceb\n}\n\ntype Mutation {\n  ServiceaMutation: ServiceaMutation\n  ServicebMutation: ServicebMutation\n}\n\nenum NullHandling {\n  NATIVE\n  NULLS_FIRST\n  NULLS_LAST\n}\n\n\"\"\"@addedFrom servicea\"\"\"\ntype Order {\n  raw: Raw\n  ascending: Boolean\n  descending: Boolean\n  direction: Direction\n  ignoreCase: Boolean\n  nullHandling: NullHandling\n  property: String\n}\n\n\"\"\"@addedFrom servicea\"\"\"\ntype Page_Hotel {\n  raw: Raw\n  content: [Hotel]\n  first: Boolean\n  last: Boolean\n  number: Float\n  numberOfElements: Float\n  size: Float\n  sort: Sort\n  totalElements: Float\n  totalPages: Float\n}\n\n\"\"\"@addedFrom servicea\"\"\"\ntype Page_HotelServiceb {\n  raw: Raw\n  content: [HotelServiceb]\n  first: Boolean\n  last: Boolean\n  number: Float\n  numberOfElements: Float\n  size: Float\n  sort: Sort\n  totalElements: Float\n  totalPages: Float\n}\n\ntype Query {\n  Servicea: Servicea\n  Serviceb: Serviceb\n}\n\n\"\"\"Сырое значение как есть\"\"\"\nscalar Raw\n\ntype Servicea {\n  HotelController: HotelControllerServicea\n  TestAController: TestAControllerServicea\n}\n\ntype ServiceaMutation {\n  HotelControllerMutation: HotelControllerMutationServicea\n  TestAControllerMutation: TestAControllerMutationServicea\n}\n\ntype Serviceb {\n  HotelController: HotelControllerServiceb\n}\n\ntype ServicebMutation {\n  HotelControllerMutation: HotelControllerMutationServiceb\n}\n\n\"\"\"@addedFrom servicea\"\"\"\ntype Sort {\n  raw: Raw\n  DEFAULT_DIRECTION: Direction\n  orderFor: Order\n}\n\ntype TestAControllerMutationServicea {\n  \"\"\"\n  Path: /example/v1/a/test/\n  Create a hotel resource. Returns the URL of the new resource in the Location header.\n  \"\"\"\n  createHotel(payload: HotelInput!): Raw\n\n  \"\"\"\n  Path: /example/v1/a/test/{id}\n  Delete a hotel resource. You have to provide a valid hotel ID in the URL. Once deleted the resource can not be recovered.\n  \"\"\"\n  deleteHotel(params: DeleteHotelParamsServiceaTestAControllerMutationInterplayInput!): Raw\n\n  \"\"\"\n  Path: /example/v1/a/test/{id}\n  Update a hotel resource. You have to provide a valid hotel ID in the URL and\n  in the payload. The ID attribute can not be updated.\n  \"\"\"\n  updateHotel(params: UpdateHotelParamsServiceaTestAControllerMutationInterplayInput!, payload: HotelInput!): Raw\n\n  \"\"\"\n  Path: /example/v1/a/test/{id}/{one}\n  Update a hotel resource. You have to provide a valid hotel ID in the URL and\n  in the payload. The ID attribute can not be updated.\n  \"\"\"\n  updateHotel2(params: UpdateHotel2ParamsServiceaTestAControllerMutationInterplayInput!, payload: HotelInput!): Raw\n}\n\ntype TestAControllerServicea {\n  \"\"\"\n  Path: /example/v1/a/test/\n  Get a paginated list of all hotels. The list is paginated. You can provide a\n  page number (default 0) and a page size (default 100)\n  \"\"\"\n  getAllHotel(query: GetAllHotelQueryServiceaTestAControllerInterplayInput): Page_Hotel\n\n  \"\"\"\n  Path: /example/v1/a/test/{id}\n  Get a single hotel. You have to provide a valid hotel ID.\n  \"\"\"\n  getHotel(params: GetHotelParamsServiceaTestAControllerInterplayInput!): Hotel\n\n  \"\"\"\n  Path: /example/v1/a/test/test/{id}\n  Get a single hotel. You have to provide a valid hotel ID.\n  \"\"\"\n  getTestHotel(params: GetTestHotelParamsInput!): TestAHotel\n}\n\n\"\"\" a simple domain entity doubling as a DTO  \"\"\"\ntype TestAHotel {\n  raw: Raw\n  city: String\n  description: String\n  id: Float\n  name: String\n  rating: Float\n}\n\ninput UpdateHotel2ParamsServiceaTestAControllerMutationInterplayInput {\n  raw: Raw\n\n  \"\"\"Some one\"\"\"\n  one: Float!\n\n  \"\"\"The ID of the existing hotel resource.\"\"\"\n  id: Float!\n}\n\ninput UpdateHotelParamsServiceaHotelControllerMutationInterplayInput {\n  raw: Raw\n\n  \"\"\"The ID of the existing hotel resource.\"\"\"\n  id: Float!\n}\n\ninput UpdateHotelParamsServiceaTestAControllerMutationInterplayInput {\n  raw: Raw\n\n  \"\"\"The ID of the existing hotel resource.\"\"\"\n  id: Float!\n}\n\ninput UpdateHotelParamsServicebHotelControllerMutationInterplayInput {\n  raw: Raw\n\n  \"\"\"The ID of the existing hotel resource.\"\"\"\n  id: Float!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 20,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 40
    }
  ],
  "metrics": {
    "created_at": "2018-05-21T08:09:24Z",
    "updated_at": "2019-02-12T11:14:13Z",
    "pushed_at": "2019-02-12T11:14:07Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}