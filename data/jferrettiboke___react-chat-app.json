{
  "repo_name": "react-chat-app",
  "repo_full_name": "jferrettiboke/react-chat-app",
  "repo_owner": "jferrettiboke",
  "repo_description": "A real-time chat application with Node.js, Prisma, GraphQL, Next.js, React.js and Apollo.",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "server/src/generated/prisma.graphql",
      "sha": "9d12689e43090e11ae45efa651ae866f1b25d228",
      "url": "https://api.github.com/repositories/147343165/contents/server/src/generated/prisma.graphql?ref=76435440cbda61b8d60aa005c89344e8e2d59faa",
      "git_url": "https://api.github.com/repositories/147343165/git/blobs/9d12689e43090e11ae45efa651ae866f1b25d228",
      "html_url": "https://github.com/jferrettiboke/react-chat-app/blob/76435440cbda61b8d60aa005c89344e8e2d59faa/server/src/generated/prisma.graphql",
      "content": "# source: https://eu1.prisma.sh/chat-app/chat-app/dev\n# timestamp: Tue Aug 28 2018 15:41:06 GMT+0200 (CEST)\n\ntype AggregateConversation {\n  count: Int!\n}\n\ntype AggregateText {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\ntype Conversation implements Node {\n  id: ID!\n  name: String\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  texts(where: TextWhereInput, orderBy: TextOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Text!]\n  participants(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ConversationConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ConversationEdge]!\n  aggregate: AggregateConversation!\n}\n\ninput ConversationCreateInput {\n  name: String\n  texts: TextCreateManyWithoutConversationInput\n  participants: UserCreateManyWithoutConversationsInput\n}\n\ninput ConversationCreateManyWithoutParticipantsInput {\n  create: [ConversationCreateWithoutParticipantsInput!]\n  connect: [ConversationWhereUniqueInput!]\n}\n\ninput ConversationCreateOneWithoutTextsInput {\n  create: ConversationCreateWithoutTextsInput\n  connect: ConversationWhereUniqueInput\n}\n\ninput ConversationCreateWithoutParticipantsInput {\n  name: String\n  texts: TextCreateManyWithoutConversationInput\n}\n\ninput ConversationCreateWithoutTextsInput {\n  name: String\n  participants: UserCreateManyWithoutConversationsInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ConversationEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Conversation!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum ConversationOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype ConversationPreviousValues {\n  id: ID!\n  name: String\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype ConversationSubscriptionPayload {\n  mutation: MutationType!\n  node: Conversation\n  updatedFields: [String!]\n  previousValues: ConversationPreviousValues\n}\n\ninput ConversationSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ConversationSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ConversationSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ConversationSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ConversationWhereInput\n}\n\ninput ConversationUpdateInput {\n  name: String\n  texts: TextUpdateManyWithoutConversationInput\n  participants: UserUpdateManyWithoutConversationsInput\n}\n\ninput ConversationUpdateManyWithoutParticipantsInput {\n  create: [ConversationCreateWithoutParticipantsInput!]\n  connect: [ConversationWhereUniqueInput!]\n  disconnect: [ConversationWhereUniqueInput!]\n  delete: [ConversationWhereUniqueInput!]\n  update: [ConversationUpdateWithWhereUniqueWithoutParticipantsInput!]\n  upsert: [ConversationUpsertWithWhereUniqueWithoutParticipantsInput!]\n}\n\ninput ConversationUpdateOneWithoutTextsInput {\n  create: ConversationCreateWithoutTextsInput\n  connect: ConversationWhereUniqueInput\n  delete: Boolean\n  update: ConversationUpdateWithoutTextsDataInput\n  upsert: ConversationUpsertWithoutTextsInput\n}\n\ninput ConversationUpdateWithoutParticipantsDataInput {\n  name: String\n  texts: TextUpdateManyWithoutConversationInput\n}\n\ninput ConversationUpdateWithoutTextsDataInput {\n  name: String\n  participants: UserUpdateManyWithoutConversationsInput\n}\n\ninput ConversationUpdateWithWhereUniqueWithoutParticipantsInput {\n  where: ConversationWhereUniqueInput!\n  data: ConversationUpdateWithoutParticipantsDataInput!\n}\n\ninput ConversationUpsertWithoutTextsInput {\n  update: ConversationUpdateWithoutTextsDataInput!\n  create: ConversationCreateWithoutTextsInput!\n}\n\ninput ConversationUpsertWithWhereUniqueWithoutParticipantsInput {\n  where: ConversationWhereUniqueInput!\n  update: ConversationUpdateWithoutParticipantsDataInput!\n  create: ConversationCreateWithoutParticipantsInput!\n}\n\ninput ConversationWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ConversationWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ConversationWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ConversationWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  texts_every: TextWhereInput\n  texts_some: TextWhereInput\n  texts_none: TextWhereInput\n  participants_every: UserWhereInput\n  participants_some: UserWhereInput\n  participants_none: UserWhereInput\n}\n\ninput ConversationWhereUniqueInput {\n  id: ID\n}\n\nscalar DateTime\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createConversation(data: ConversationCreateInput!): Conversation!\n  createText(data: TextCreateInput!): Text!\n  createUser(data: UserCreateInput!): User!\n  updateConversation(data: ConversationUpdateInput!, where: ConversationWhereUniqueInput!): Conversation\n  updateText(data: TextUpdateInput!, where: TextWhereUniqueInput!): Text\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteConversation(where: ConversationWhereUniqueInput!): Conversation\n  deleteText(where: TextWhereUniqueInput!): Text\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertConversation(where: ConversationWhereUniqueInput!, create: ConversationCreateInput!, update: ConversationUpdateInput!): Conversation!\n  upsertText(where: TextWhereUniqueInput!, create: TextCreateInput!, update: TextUpdateInput!): Text!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyConversations(data: ConversationUpdateInput!, where: ConversationWhereInput): BatchPayload!\n  updateManyTexts(data: TextUpdateInput!, where: TextWhereInput): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  deleteManyConversations(where: ConversationWhereInput): BatchPayload!\n  deleteManyTexts(where: TextWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  conversations(where: ConversationWhereInput, orderBy: ConversationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Conversation]!\n  texts(where: TextWhereInput, orderBy: TextOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Text]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  conversation(where: ConversationWhereUniqueInput!): Conversation\n  text(where: TextWhereUniqueInput!): Text\n  user(where: UserWhereUniqueInput!): User\n  conversationsConnection(where: ConversationWhereInput, orderBy: ConversationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ConversationConnection!\n  textsConnection(where: TextWhereInput, orderBy: TextOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TextConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  conversation(where: ConversationSubscriptionWhereInput): ConversationSubscriptionPayload\n  text(where: TextSubscriptionWhereInput): TextSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype Text implements Node {\n  id: ID!\n  text: String!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  author(where: UserWhereInput): User!\n  conversation(where: ConversationWhereInput): Conversation!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TextConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TextEdge]!\n  aggregate: AggregateText!\n}\n\ninput TextCreateInput {\n  text: String!\n  author: UserCreateOneInput!\n  conversation: ConversationCreateOneWithoutTextsInput!\n}\n\ninput TextCreateManyWithoutConversationInput {\n  create: [TextCreateWithoutConversationInput!]\n  connect: [TextWhereUniqueInput!]\n}\n\ninput TextCreateWithoutConversationInput {\n  text: String!\n  author: UserCreateOneInput!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TextEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Text!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum TextOrderByInput {\n  id_ASC\n  id_DESC\n  text_ASC\n  text_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype TextPreviousValues {\n  id: ID!\n  text: String!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype TextSubscriptionPayload {\n  mutation: MutationType!\n  node: Text\n  updatedFields: [String!]\n  previousValues: TextPreviousValues\n}\n\ninput TextSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TextSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TextSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TextSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TextWhereInput\n}\n\ninput TextUpdateInput {\n  text: String\n  author: UserUpdateOneInput\n  conversation: ConversationUpdateOneWithoutTextsInput\n}\n\ninput TextUpdateManyWithoutConversationInput {\n  create: [TextCreateWithoutConversationInput!]\n  connect: [TextWhereUniqueInput!]\n  disconnect: [TextWhereUniqueInput!]\n  delete: [TextWhereUniqueInput!]\n  update: [TextUpdateWithWhereUniqueWithoutConversationInput!]\n  upsert: [TextUpsertWithWhereUniqueWithoutConversationInput!]\n}\n\ninput TextUpdateWithoutConversationDataInput {\n  text: String\n  author: UserUpdateOneInput\n}\n\ninput TextUpdateWithWhereUniqueWithoutConversationInput {\n  where: TextWhereUniqueInput!\n  data: TextUpdateWithoutConversationDataInput!\n}\n\ninput TextUpsertWithWhereUniqueWithoutConversationInput {\n  where: TextWhereUniqueInput!\n  update: TextUpdateWithoutConversationDataInput!\n  create: TextCreateWithoutConversationInput!\n}\n\ninput TextWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TextWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TextWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TextWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  text: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  text_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  text_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  text_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  text_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  text_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  text_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  text_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  text_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  text_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  text_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  text_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  text_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  text_not_ends_with: String\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  author: UserWhereInput\n  conversation: ConversationWhereInput\n}\n\ninput TextWhereUniqueInput {\n  id: ID\n}\n\ntype User implements Node {\n  id: ID!\n  username: String!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  conversations(where: ConversationWhereInput, orderBy: ConversationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Conversation!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  username: String!\n  conversations: ConversationCreateManyWithoutParticipantsInput\n}\n\ninput UserCreateManyWithoutConversationsInput {\n  create: [UserCreateWithoutConversationsInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateOneInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutConversationsInput {\n  username: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  username_ASC\n  username_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  username: String!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateDataInput {\n  username: String\n  conversations: ConversationUpdateManyWithoutParticipantsInput\n}\n\ninput UserUpdateInput {\n  username: String\n  conversations: ConversationUpdateManyWithoutParticipantsInput\n}\n\ninput UserUpdateManyWithoutConversationsInput {\n  create: [UserCreateWithoutConversationsInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  delete: [UserWhereUniqueInput!]\n  update: [UserUpdateWithWhereUniqueWithoutConversationsInput!]\n  upsert: [UserUpsertWithWhereUniqueWithoutConversationsInput!]\n}\n\ninput UserUpdateOneInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateDataInput\n  upsert: UserUpsertNestedInput\n}\n\ninput UserUpdateWithoutConversationsDataInput {\n  username: String\n}\n\ninput UserUpdateWithWhereUniqueWithoutConversationsInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateWithoutConversationsDataInput!\n}\n\ninput UserUpsertNestedInput {\n  update: UserUpdateDataInput!\n  create: UserCreateInput!\n}\n\ninput UserUpsertWithWhereUniqueWithoutConversationsInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateWithoutConversationsDataInput!\n  create: UserCreateWithoutConversationsInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  username: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  username_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  username_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  username_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  username_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  username_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  username_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  username_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  username_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  username_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  username_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  username_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  username_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  username_not_ends_with: String\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  conversations_every: ConversationWhereInput\n  conversations_some: ConversationWhereInput\n  conversations_none: ConversationWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  username: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 23,
      "containsCycle": true,
      "numDefinitions": 72
    }
  ],
  "metrics": {
    "created_at": "2018-09-04T12:33:39Z",
    "updated_at": "2019-05-01T18:49:50Z",
    "pushed_at": "2018-09-07T19:40:19Z",
    "issues": 1,
    "watchers": 2,
    "fork_count": 5,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 2,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 2,
    "releases": 0,
    "stargazers": 11
  }
}