{
  "repo_name": "graphql-result-tracker",
  "repo_full_name": "sanjsanj/graphql-result-tracker",
  "repo_owner": "sanjsanj",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "backend/src/generated/prisma.graphql",
      "sha": "cb4e52dcbb70db6d22413d12f85f0ce51e1f9ae9",
      "url": "https://api.github.com/repositories/157074470/contents/backend/src/generated/prisma.graphql?ref=6362decd60547f6096f64067038b7c1c445f28ef",
      "git_url": "https://api.github.com/repositories/157074470/git/blobs/cb4e52dcbb70db6d22413d12f85f0ce51e1f9ae9",
      "html_url": "https://github.com/sanjsanj/graphql-result-tracker/blob/6362decd60547f6096f64067038b7c1c445f28ef/backend/src/generated/prisma.graphql",
      "content": "# source: https://result-tracker-b05e382178.herokuapp.com/result-tracker-prod/prod\n# timestamp: Tue Nov 20 2018 20:35:35 GMT+0000 (Greenwich Mean Time)\n\ntype AggregateChallenge {\n  count: Int!\n}\n\ntype AggregateResult {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\ntype Challenge implements Node {\n  id: ID!\n  title: String!\n  user: User!\n  participant: User!\n  results(where: ResultWhereInput, orderBy: ResultOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Result!]\n  goal: Int!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ChallengeConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ChallengeEdge]!\n  aggregate: AggregateChallenge!\n}\n\ninput ChallengeCreateInput {\n  title: String!\n  goal: Int!\n  user: UserCreateOneWithoutChallengesCreatedInput!\n  participant: UserCreateOneWithoutChallengesParticipatingInput!\n  results: ResultCreateManyWithoutChallengeInput\n}\n\ninput ChallengeCreateManyWithoutParticipantInput {\n  create: [ChallengeCreateWithoutParticipantInput!]\n  connect: [ChallengeWhereUniqueInput!]\n}\n\ninput ChallengeCreateManyWithoutUserInput {\n  create: [ChallengeCreateWithoutUserInput!]\n  connect: [ChallengeWhereUniqueInput!]\n}\n\ninput ChallengeCreateOneWithoutResultsInput {\n  create: ChallengeCreateWithoutResultsInput\n  connect: ChallengeWhereUniqueInput\n}\n\ninput ChallengeCreateWithoutParticipantInput {\n  title: String!\n  goal: Int!\n  user: UserCreateOneWithoutChallengesCreatedInput!\n  results: ResultCreateManyWithoutChallengeInput\n}\n\ninput ChallengeCreateWithoutResultsInput {\n  title: String!\n  goal: Int!\n  user: UserCreateOneWithoutChallengesCreatedInput!\n  participant: UserCreateOneWithoutChallengesParticipatingInput!\n}\n\ninput ChallengeCreateWithoutUserInput {\n  title: String!\n  goal: Int!\n  participant: UserCreateOneWithoutChallengesParticipatingInput!\n  results: ResultCreateManyWithoutChallengeInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ChallengeEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Challenge!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum ChallengeOrderByInput {\n  id_ASC\n  id_DESC\n  title_ASC\n  title_DESC\n  goal_ASC\n  goal_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ChallengePreviousValues {\n  id: ID!\n  title: String!\n  goal: Int!\n}\n\ntype ChallengeSubscriptionPayload {\n  mutation: MutationType!\n  node: Challenge\n  updatedFields: [String!]\n  previousValues: ChallengePreviousValues\n}\n\ninput ChallengeSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ChallengeSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ChallengeSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ChallengeSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ChallengeWhereInput\n}\n\ninput ChallengeUpdateInput {\n  title: String\n  goal: Int\n  user: UserUpdateOneRequiredWithoutChallengesCreatedInput\n  participant: UserUpdateOneRequiredWithoutChallengesParticipatingInput\n  results: ResultUpdateManyWithoutChallengeInput\n}\n\ninput ChallengeUpdateManyMutationInput {\n  title: String\n  goal: Int\n}\n\ninput ChallengeUpdateManyWithoutParticipantInput {\n  create: [ChallengeCreateWithoutParticipantInput!]\n  connect: [ChallengeWhereUniqueInput!]\n  disconnect: [ChallengeWhereUniqueInput!]\n  delete: [ChallengeWhereUniqueInput!]\n  update: [ChallengeUpdateWithWhereUniqueWithoutParticipantInput!]\n  upsert: [ChallengeUpsertWithWhereUniqueWithoutParticipantInput!]\n}\n\ninput ChallengeUpdateManyWithoutUserInput {\n  create: [ChallengeCreateWithoutUserInput!]\n  connect: [ChallengeWhereUniqueInput!]\n  disconnect: [ChallengeWhereUniqueInput!]\n  delete: [ChallengeWhereUniqueInput!]\n  update: [ChallengeUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [ChallengeUpsertWithWhereUniqueWithoutUserInput!]\n}\n\ninput ChallengeUpdateOneRequiredWithoutResultsInput {\n  create: ChallengeCreateWithoutResultsInput\n  connect: ChallengeWhereUniqueInput\n  update: ChallengeUpdateWithoutResultsDataInput\n  upsert: ChallengeUpsertWithoutResultsInput\n}\n\ninput ChallengeUpdateWithoutParticipantDataInput {\n  title: String\n  goal: Int\n  user: UserUpdateOneRequiredWithoutChallengesCreatedInput\n  results: ResultUpdateManyWithoutChallengeInput\n}\n\ninput ChallengeUpdateWithoutResultsDataInput {\n  title: String\n  goal: Int\n  user: UserUpdateOneRequiredWithoutChallengesCreatedInput\n  participant: UserUpdateOneRequiredWithoutChallengesParticipatingInput\n}\n\ninput ChallengeUpdateWithoutUserDataInput {\n  title: String\n  goal: Int\n  participant: UserUpdateOneRequiredWithoutChallengesParticipatingInput\n  results: ResultUpdateManyWithoutChallengeInput\n}\n\ninput ChallengeUpdateWithWhereUniqueWithoutParticipantInput {\n  where: ChallengeWhereUniqueInput!\n  data: ChallengeUpdateWithoutParticipantDataInput!\n}\n\ninput ChallengeUpdateWithWhereUniqueWithoutUserInput {\n  where: ChallengeWhereUniqueInput!\n  data: ChallengeUpdateWithoutUserDataInput!\n}\n\ninput ChallengeUpsertWithoutResultsInput {\n  update: ChallengeUpdateWithoutResultsDataInput!\n  create: ChallengeCreateWithoutResultsInput!\n}\n\ninput ChallengeUpsertWithWhereUniqueWithoutParticipantInput {\n  where: ChallengeWhereUniqueInput!\n  update: ChallengeUpdateWithoutParticipantDataInput!\n  create: ChallengeCreateWithoutParticipantInput!\n}\n\ninput ChallengeUpsertWithWhereUniqueWithoutUserInput {\n  where: ChallengeWhereUniqueInput!\n  update: ChallengeUpdateWithoutUserDataInput!\n  create: ChallengeCreateWithoutUserInput!\n}\n\ninput ChallengeWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ChallengeWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ChallengeWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ChallengeWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  title: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  title_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  title_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  title_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  title_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  title_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  title_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  title_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  title_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  title_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  title_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  title_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  title_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  title_not_ends_with: String\n  goal: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  goal_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  goal_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  goal_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  goal_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  goal_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  goal_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  goal_gte: Int\n  user: UserWhereInput\n  participant: UserWhereInput\n  results_every: ResultWhereInput\n  results_some: ResultWhereInput\n  results_none: ResultWhereInput\n}\n\ninput ChallengeWhereUniqueInput {\n  id: ID\n}\n\nscalar DateTime\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createChallenge(data: ChallengeCreateInput!): Challenge!\n  createResult(data: ResultCreateInput!): Result!\n  createUser(data: UserCreateInput!): User!\n  updateChallenge(data: ChallengeUpdateInput!, where: ChallengeWhereUniqueInput!): Challenge\n  updateResult(data: ResultUpdateInput!, where: ResultWhereUniqueInput!): Result\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteChallenge(where: ChallengeWhereUniqueInput!): Challenge\n  deleteResult(where: ResultWhereUniqueInput!): Result\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertChallenge(where: ChallengeWhereUniqueInput!, create: ChallengeCreateInput!, update: ChallengeUpdateInput!): Challenge!\n  upsertResult(where: ResultWhereUniqueInput!, create: ResultCreateInput!, update: ResultUpdateInput!): Result!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyChallenges(data: ChallengeUpdateManyMutationInput!, where: ChallengeWhereInput): BatchPayload!\n  updateManyResults(data: ResultUpdateManyMutationInput!, where: ResultWhereInput): BatchPayload!\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  deleteManyChallenges(where: ChallengeWhereInput): BatchPayload!\n  deleteManyResults(where: ResultWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  challenges(where: ChallengeWhereInput, orderBy: ChallengeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Challenge]!\n  results(where: ResultWhereInput, orderBy: ResultOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Result]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  challenge(where: ChallengeWhereUniqueInput!): Challenge\n  result(where: ResultWhereUniqueInput!): Result\n  user(where: UserWhereUniqueInput!): User\n  challengesConnection(where: ChallengeWhereInput, orderBy: ChallengeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChallengeConnection!\n  resultsConnection(where: ResultWhereInput, orderBy: ResultOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ResultConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Result implements Node {\n  id: ID!\n  challenge: Challenge!\n  createdBy: User!\n  createdAt: DateTime!\n  winner: User!\n  loser: User!\n  confirmed: Boolean\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ResultConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ResultEdge]!\n  aggregate: AggregateResult!\n}\n\ninput ResultCreateInput {\n  confirmed: Boolean\n  challenge: ChallengeCreateOneWithoutResultsInput!\n  createdBy: UserCreateOneInput!\n  winner: UserCreateOneInput!\n  loser: UserCreateOneInput!\n}\n\ninput ResultCreateManyWithoutChallengeInput {\n  create: [ResultCreateWithoutChallengeInput!]\n  connect: [ResultWhereUniqueInput!]\n}\n\ninput ResultCreateWithoutChallengeInput {\n  confirmed: Boolean\n  createdBy: UserCreateOneInput!\n  winner: UserCreateOneInput!\n  loser: UserCreateOneInput!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ResultEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Result!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum ResultOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  confirmed_ASC\n  confirmed_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype ResultPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  confirmed: Boolean\n}\n\ntype ResultSubscriptionPayload {\n  mutation: MutationType!\n  node: Result\n  updatedFields: [String!]\n  previousValues: ResultPreviousValues\n}\n\ninput ResultSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ResultSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ResultSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ResultSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ResultWhereInput\n}\n\ninput ResultUpdateInput {\n  confirmed: Boolean\n  challenge: ChallengeUpdateOneRequiredWithoutResultsInput\n  createdBy: UserUpdateOneRequiredInput\n  winner: UserUpdateOneRequiredInput\n  loser: UserUpdateOneRequiredInput\n}\n\ninput ResultUpdateManyMutationInput {\n  confirmed: Boolean\n}\n\ninput ResultUpdateManyWithoutChallengeInput {\n  create: [ResultCreateWithoutChallengeInput!]\n  connect: [ResultWhereUniqueInput!]\n  disconnect: [ResultWhereUniqueInput!]\n  delete: [ResultWhereUniqueInput!]\n  update: [ResultUpdateWithWhereUniqueWithoutChallengeInput!]\n  upsert: [ResultUpsertWithWhereUniqueWithoutChallengeInput!]\n}\n\ninput ResultUpdateWithoutChallengeDataInput {\n  confirmed: Boolean\n  createdBy: UserUpdateOneRequiredInput\n  winner: UserUpdateOneRequiredInput\n  loser: UserUpdateOneRequiredInput\n}\n\ninput ResultUpdateWithWhereUniqueWithoutChallengeInput {\n  where: ResultWhereUniqueInput!\n  data: ResultUpdateWithoutChallengeDataInput!\n}\n\ninput ResultUpsertWithWhereUniqueWithoutChallengeInput {\n  where: ResultWhereUniqueInput!\n  update: ResultUpdateWithoutChallengeDataInput!\n  create: ResultCreateWithoutChallengeInput!\n}\n\ninput ResultWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ResultWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ResultWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ResultWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  confirmed: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  confirmed_not: Boolean\n  challenge: ChallengeWhereInput\n  createdBy: UserWhereInput\n  winner: UserWhereInput\n  loser: UserWhereInput\n}\n\ninput ResultWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  challenge(where: ChallengeSubscriptionWhereInput): ChallengeSubscriptionPayload\n  result(where: ResultSubscriptionWhereInput): ResultSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n  email: String!\n  password: String!\n  resetToken: String\n  resetTokenExpiry: Float\n  challengesCreated(where: ChallengeWhereInput, orderBy: ChallengeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Challenge!]\n  challengesParticipating(where: ChallengeWhereInput, orderBy: ChallengeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Challenge!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n  email: String!\n  password: String!\n  resetToken: String\n  resetTokenExpiry: Float\n  challengesCreated: ChallengeCreateManyWithoutUserInput\n  challengesParticipating: ChallengeCreateManyWithoutParticipantInput\n}\n\ninput UserCreateOneInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutChallengesCreatedInput {\n  create: UserCreateWithoutChallengesCreatedInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutChallengesParticipatingInput {\n  create: UserCreateWithoutChallengesParticipatingInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutChallengesCreatedInput {\n  name: String!\n  email: String!\n  password: String!\n  resetToken: String\n  resetTokenExpiry: Float\n  challengesParticipating: ChallengeCreateManyWithoutParticipantInput\n}\n\ninput UserCreateWithoutChallengesParticipatingInput {\n  name: String!\n  email: String!\n  password: String!\n  resetToken: String\n  resetTokenExpiry: Float\n  challengesCreated: ChallengeCreateManyWithoutUserInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  resetToken_ASC\n  resetToken_DESC\n  resetTokenExpiry_ASC\n  resetTokenExpiry_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n  email: String!\n  password: String!\n  resetToken: String\n  resetTokenExpiry: Float\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateDataInput {\n  name: String\n  email: String\n  password: String\n  resetToken: String\n  resetTokenExpiry: Float\n  challengesCreated: ChallengeUpdateManyWithoutUserInput\n  challengesParticipating: ChallengeUpdateManyWithoutParticipantInput\n}\n\ninput UserUpdateInput {\n  name: String\n  email: String\n  password: String\n  resetToken: String\n  resetTokenExpiry: Float\n  challengesCreated: ChallengeUpdateManyWithoutUserInput\n  challengesParticipating: ChallengeUpdateManyWithoutParticipantInput\n}\n\ninput UserUpdateManyMutationInput {\n  name: String\n  email: String\n  password: String\n  resetToken: String\n  resetTokenExpiry: Float\n}\n\ninput UserUpdateOneRequiredInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n  update: UserUpdateDataInput\n  upsert: UserUpsertNestedInput\n}\n\ninput UserUpdateOneRequiredWithoutChallengesCreatedInput {\n  create: UserCreateWithoutChallengesCreatedInput\n  connect: UserWhereUniqueInput\n  update: UserUpdateWithoutChallengesCreatedDataInput\n  upsert: UserUpsertWithoutChallengesCreatedInput\n}\n\ninput UserUpdateOneRequiredWithoutChallengesParticipatingInput {\n  create: UserCreateWithoutChallengesParticipatingInput\n  connect: UserWhereUniqueInput\n  update: UserUpdateWithoutChallengesParticipatingDataInput\n  upsert: UserUpsertWithoutChallengesParticipatingInput\n}\n\ninput UserUpdateWithoutChallengesCreatedDataInput {\n  name: String\n  email: String\n  password: String\n  resetToken: String\n  resetTokenExpiry: Float\n  challengesParticipating: ChallengeUpdateManyWithoutParticipantInput\n}\n\ninput UserUpdateWithoutChallengesParticipatingDataInput {\n  name: String\n  email: String\n  password: String\n  resetToken: String\n  resetTokenExpiry: Float\n  challengesCreated: ChallengeUpdateManyWithoutUserInput\n}\n\ninput UserUpsertNestedInput {\n  update: UserUpdateDataInput!\n  create: UserCreateInput!\n}\n\ninput UserUpsertWithoutChallengesCreatedInput {\n  update: UserUpdateWithoutChallengesCreatedDataInput!\n  create: UserCreateWithoutChallengesCreatedInput!\n}\n\ninput UserUpsertWithoutChallengesParticipatingInput {\n  update: UserUpdateWithoutChallengesParticipatingDataInput!\n  create: UserCreateWithoutChallengesParticipatingInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  email: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  email_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  email_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  email_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  email_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  email_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  email_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  email_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  email_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  email_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  email_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  email_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  email_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  email_not_ends_with: String\n  password: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  password_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  password_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  password_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  password_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  password_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  password_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  password_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  password_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  password_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  password_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  password_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  password_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  password_not_ends_with: String\n  resetToken: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  resetToken_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  resetToken_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  resetToken_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  resetToken_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  resetToken_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  resetToken_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  resetToken_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  resetToken_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  resetToken_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  resetToken_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  resetToken_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  resetToken_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  resetToken_not_ends_with: String\n  resetTokenExpiry: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  resetTokenExpiry_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  resetTokenExpiry_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  resetTokenExpiry_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  resetTokenExpiry_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  resetTokenExpiry_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  resetTokenExpiry_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  resetTokenExpiry_gte: Float\n  challengesCreated_every: ChallengeWhereInput\n  challengesCreated_some: ChallengeWhereInput\n  challengesCreated_none: ChallengeWhereInput\n  challengesParticipating_every: ChallengeWhereInput\n  challengesParticipating_some: ChallengeWhereInput\n  challengesParticipating_none: ChallengeWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 23,
      "containsCycle": true,
      "numDefinitions": 85
    }
  ],
  "metrics": {
    "created_at": "2018-11-11T11:51:07Z",
    "updated_at": "2018-11-23T14:00:44Z",
    "pushed_at": "2018-11-23T14:00:43Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}