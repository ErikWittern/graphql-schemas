{
  "repo_name": "agorask",
  "repo_full_name": "youennpennarun/agorask",
  "repo_owner": "youennPennarun",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "server/server/graphql/schema.graphql",
      "sha": "71e8855e49205cbddd88774e8ddade2b9f89c14d",
      "url": "https://api.github.com/repositories/72162222/contents/server/server/graphql/schema.graphql?ref=979e0be9c54ec2c5d3ac2f2f23f8a056d581938b",
      "git_url": "https://api.github.com/repositories/72162222/git/blobs/71e8855e49205cbddd88774e8ddade2b9f89c14d",
      "html_url": "https://github.com/youennPennarun/agorask/blob/979e0be9c54ec2c5d3ac2f2f23f8a056d581938b/server/server/graphql/schema.graphql",
      "content": "type address {\n  location: [Float]!\n  formatted: [String]!\n}\n\ntype Answer {\n  # the answer\n  answer: String!\n\n  # The user who posted the answer\n  postedBy: User!\n\n  # When the task was posted\n  date: Date!\n}\n\ntype category {\n  name: String!\n  icon: String\n}\n\ntype contact {\n  facebookName: String\n  facebook: String\n  twitter: String\n  formattedPhone: String\n  phone: String\n}\n\nscalar Date\n\n# Information about pagination in a connection.\ntype PageInfo {\n  # When paginating forwards, are there more items?\n  hasNextPage: Boolean!\n\n  # When paginating backwards, are there more items?\n  hasPreviousPage: Boolean!\n\n  # When paginating backwards, the cursor to continue.\n  startCursor: String\n\n  # When paginating forwards, the cursor to continue.\n  endCursor: String\n}\n\ntype Query {\n  venue(id: ID!, source: String): Venue\n  searchVenues(lat: Float!, lng: Float!, radius: Float, query: String!): [Venue]\n  venuesWithinRadius(lat: Float!, lng: Float!, radius: Float): [Venue]\n  task(id: ID!): Task\n  user(id: ID!): User\n}\n\ntype Task {\n  # task's id\n  _id: String!\n\n  # task title id\n  title: String!\n\n  # The user who posted the task\n  postedBy: User!\n\n  # When the task was posted\n  date: Date\n\n  # The list of answers posted for this task\n  answers: [Answer]\n\n  # The list of answers posted for this task\n  nbAnswers: Int\n}\n\n# A connection to a list of items.\ntype TaskConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [TaskEdge]\n}\n\n# An edge in a connection.\ntype TaskEdge {\n  # The item at the end of the edge\n  node: Task\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\ntype User {\n  # user id\n  _id: String\n\n  # user id\n  userId: String\n\n  # username\n  username: String!\n}\n\ntype Venue {\n  # venue's id\n  _id: String!\n\n  # venue's name\n  name: String!\n\n  # venues id from foursquare api\n  foursquareId: String\n  contact: contact\n  address: address\n  website: String\n  categories: [category]\n  tasks: [TaskConnection]\n  picture(size: Float): String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 11,
      "containsCycle": false,
      "polynomialLevel": 4,
      "numDefinitions": 12
    }
  ],
  "metrics": {
    "created_at": "2016-10-28T01:23:10Z",
    "updated_at": "2018-11-11T17:30:28Z",
    "pushed_at": "2017-05-11T09:27:08Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 2
  }
}