{
  "repo_name": "annict",
  "repo_full_name": "annict/annict",
  "repo_owner": "annict",
  "repo_description": "The platform for anime addicts built with Rails 5.2 and Vue.js 2.6.",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "app/graphql/schema.graphql",
      "sha": "2a0f309272f663b737f9056e434f6fe675363801",
      "url": "https://api.github.com/repositories/21744872/contents/app/graphql/schema.graphql?ref=777fae9c053351a72829ed0329bd2305b22b18f2",
      "git_url": "https://api.github.com/repositories/21744872/git/blobs/2a0f309272f663b737f9056e434f6fe675363801",
      "html_url": "https://github.com/annict/annict/blob/777fae9c053351a72829ed0329bd2305b22b18f2/app/graphql/schema.graphql",
      "content": "type Activity implements Node {\n  annictId: Int!\n\n  \"\"\"\n  ID of the object.\n  \"\"\"\n  id: ID!\n  user: User!\n}\n\nenum ActivityAction {\n  \"\"\"\n  \"\"\"\n  CREATE\n}\n\n\"\"\"\nThe connection type for Activity.\n\"\"\"\ntype ActivityConnection {\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [ActivityEdge]\n\n  \"\"\"\n  A list of nodes.\n  \"\"\"\n  nodes: [Activity]\n\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype ActivityEdge {\n  action: ActivityAction!\n  annictId: Int!\n\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n  node: ActivityItem\n  user: User!\n}\n\nunion ActivityItem = MultipleRecord | Record | Review | Status\n\ninput ActivityOrder {\n  direction: OrderDirection!\n  field: ActivityOrderField!\n}\n\nenum ActivityOrderField {\n  \"\"\"\n  \"\"\"\n  CREATED_AT\n}\n\ntype Cast implements Node {\n  annictId: Int!\n  character: Character!\n  id: ID!\n  name: String!\n  nameEn: String!\n  person: Person!\n  sortNumber: Int!\n  work: Work!\n}\n\n\"\"\"\nThe connection type for Cast.\n\"\"\"\ntype CastConnection {\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CastEdge]\n\n  \"\"\"\n  A list of nodes.\n  \"\"\"\n  nodes: [Cast]\n\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CastEdge {\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Cast\n}\n\ninput CastOrder {\n  direction: OrderDirection!\n  field: CastOrderField!\n}\n\nenum CastOrderField {\n  \"\"\"\n  \"\"\"\n  CREATED_AT\n\n  \"\"\"\n  \"\"\"\n  SORT_NUMBER\n}\n\ntype Channel implements Node {\n  annictId: Int!\n  channelGroup: ChannelGroup!\n  id: ID!\n  name: String!\n  programs(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n  ): ProgramConnection\n  published: Boolean!\n  scChid: Int!\n}\n\n\"\"\"\nThe connection type for Channel.\n\"\"\"\ntype ChannelConnection {\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [ChannelEdge]\n\n  \"\"\"\n  A list of nodes.\n  \"\"\"\n  nodes: [Channel]\n\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype ChannelEdge {\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Channel\n}\n\ntype ChannelGroup implements Node {\n  annictId: Int!\n  channels(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n  ): ChannelConnection\n  id: ID!\n  name: String!\n  sortNumber: Int!\n}\n\ntype Character implements Node {\n  age: String!\n  ageEn: String!\n  annictId: Int!\n  birthday: String!\n  birthdayEn: String!\n  bloodType: String!\n  bloodTypeEn: String!\n  description: String!\n  descriptionEn: String!\n  descriptionSource: String!\n  descriptionSourceEn: String!\n  favoriteCharactersCount: Int!\n  height: String!\n  heightEn: String!\n  id: ID!\n  name: String!\n  nameEn: String!\n  nameKana: String!\n  nationality: String!\n  nationalityEn: String!\n  nickname: String!\n  nicknameEn: String!\n  occupation: String!\n  occupationEn: String!\n  series: Series!\n  weight: String!\n  weightEn: String!\n}\n\n\"\"\"\nThe connection type for Character.\n\"\"\"\ntype CharacterConnection {\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [CharacterEdge]\n\n  \"\"\"\n  A list of nodes.\n  \"\"\"\n  nodes: [Character]\n\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype CharacterEdge {\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Character\n}\n\ninput CharacterOrder {\n  direction: OrderDirection!\n  field: CharacterOrderField!\n}\n\nenum CharacterOrderField {\n  \"\"\"\n  \"\"\"\n  CREATED_AT\n\n  \"\"\"\n  \"\"\"\n  FAVORITE_CHARACTERS_COUNT\n}\n\n\"\"\"\nAutogenerated input type of CreateRecord\n\"\"\"\ninput CreateRecordInput {\n  \"\"\"\n  A unique identifier for the client performing the mutation.\n  \"\"\"\n  clientMutationId: String\n  comment: String\n  episodeId: ID!\n  ratingState: RatingState\n  shareFacebook: Boolean\n  shareTwitter: Boolean\n}\n\n\"\"\"\nAutogenerated return type of CreateRecord\n\"\"\"\ntype CreateRecordPayload {\n  \"\"\"\n  A unique identifier for the client performing the mutation.\n  \"\"\"\n  clientMutationId: String\n  record: Record\n}\n\n\"\"\"\nAutogenerated input type of CreateReview\n\"\"\"\ninput CreateReviewInput {\n  body: String!\n\n  \"\"\"\n  A unique identifier for the client performing the mutation.\n  \"\"\"\n  clientMutationId: String\n  ratingAnimationState: RatingState\n  ratingCharacterState: RatingState\n  ratingMusicState: RatingState\n  ratingOverallState: RatingState\n  ratingStoryState: RatingState\n  shareFacebook: Boolean\n  shareTwitter: Boolean\n  title: String\n  workId: ID!\n}\n\n\"\"\"\nAutogenerated return type of CreateReview\n\"\"\"\ntype CreateReviewPayload {\n  \"\"\"\n  A unique identifier for the client performing the mutation.\n  \"\"\"\n  clientMutationId: String\n  review: Review\n}\n\nscalar DateTime\n\n\"\"\"\nAutogenerated input type of DeleteRecord\n\"\"\"\ninput DeleteRecordInput {\n  \"\"\"\n  A unique identifier for the client performing the mutation.\n  \"\"\"\n  clientMutationId: String\n  recordId: ID!\n}\n\n\"\"\"\nAutogenerated return type of DeleteRecord\n\"\"\"\ntype DeleteRecordPayload {\n  \"\"\"\n  A unique identifier for the client performing the mutation.\n  \"\"\"\n  clientMutationId: String\n  episode: Episode\n}\n\n\"\"\"\nAutogenerated input type of DeleteReview\n\"\"\"\ninput DeleteReviewInput {\n  \"\"\"\n  A unique identifier for the client performing the mutation.\n  \"\"\"\n  clientMutationId: String\n  reviewId: ID!\n}\n\n\"\"\"\nAutogenerated return type of DeleteReview\n\"\"\"\ntype DeleteReviewPayload {\n  \"\"\"\n  A unique identifier for the client performing the mutation.\n  \"\"\"\n  clientMutationId: String\n  work: Work\n}\n\n\"\"\"\nAn episode of a work\n\"\"\"\ntype Episode implements Node {\n  annictId: Int!\n  id: ID!\n  nextEpisode: Episode\n  number: Int\n  numberText: String\n  prevEpisode: Episode\n  recordCommentsCount: Int!\n  records(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n    hasComment: Boolean\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n    orderBy: RecordOrder\n  ): RecordConnection\n  recordsCount: Int!\n  satisfactionRate: Float\n  sortNumber: Int!\n  title: String\n  viewerDidTrack: Boolean!\n  viewerRecordsCount: Int!\n  work: Work!\n}\n\n\"\"\"\nThe connection type for Episode.\n\"\"\"\ntype EpisodeConnection {\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [EpisodeEdge]\n\n  \"\"\"\n  A list of nodes.\n  \"\"\"\n  nodes: [Episode]\n\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype EpisodeEdge {\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Episode\n}\n\ninput EpisodeOrder {\n  direction: OrderDirection!\n  field: EpisodeOrderField!\n}\n\nenum EpisodeOrderField {\n  \"\"\"\n  \"\"\"\n  CREATED_AT\n\n  \"\"\"\n  \"\"\"\n  SORT_NUMBER\n}\n\n\"\"\"\nMedia of anime\n\"\"\"\nenum Media {\n  \"\"\"\n  \"\"\"\n  MOVIE\n\n  \"\"\"\n  \"\"\"\n  OTHER\n\n  \"\"\"\n  \"\"\"\n  OVA\n\n  \"\"\"\n  \"\"\"\n  TV\n\n  \"\"\"\n  \"\"\"\n  WEB\n}\n\ntype MultipleRecord implements Node {\n  annictId: Int!\n  createdAt: DateTime!\n  id: ID!\n  records(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n  ): RecordConnection\n  user: User!\n  work: Work!\n}\n\ntype Mutation {\n  createRecord(input: CreateRecordInput!): CreateRecordPayload\n  createReview(input: CreateReviewInput!): CreateReviewPayload\n  deleteRecord(input: DeleteRecordInput!): DeleteRecordPayload\n  deleteReview(input: DeleteReviewInput!): DeleteReviewPayload\n  updateRecord(input: UpdateRecordInput!): UpdateRecordPayload\n  updateReview(input: UpdateReviewInput!): UpdateReviewPayload\n  updateStatus(input: UpdateStatusInput!): UpdateStatusPayload\n}\n\n\"\"\"\nAn object with an ID.\n\"\"\"\ninterface Node {\n  \"\"\"\n  ID of the object.\n  \"\"\"\n  id: ID!\n}\n\nenum OrderDirection {\n  \"\"\"\n  \"\"\"\n  ASC\n\n  \"\"\"\n  \"\"\"\n  DESC\n}\n\ntype Organization implements Node {\n  annictId: Int!\n  favoriteOrganizationsCount: Int!\n  id: ID!\n  name: String!\n  nameEn: String!\n  nameKana: String!\n  staffsCount: Int!\n  twitterUsername: String!\n  twitterUsernameEn: String!\n  url: String!\n  urlEn: String!\n  wikipediaUrl: String!\n  wikipediaUrlEn: String!\n}\n\n\"\"\"\nThe connection type for Organization.\n\"\"\"\ntype OrganizationConnection {\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OrganizationEdge]\n\n  \"\"\"\n  A list of nodes.\n  \"\"\"\n  nodes: [Organization]\n\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OrganizationEdge {\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Organization\n}\n\ninput OrganizationOrder {\n  direction: OrderDirection!\n  field: OrganizationOrderField!\n}\n\nenum OrganizationOrderField {\n  \"\"\"\n  \"\"\"\n  CREATED_AT\n\n  \"\"\"\n  \"\"\"\n  FAVORITE_ORGANIZATIONS_COUNT\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n}\n\ntype Person implements Node {\n  annictId: Int!\n  birthday: String!\n  bloodType: String!\n  castsCount: Int!\n  favoritePeopleCount: Int!\n  genderText: String!\n  height: String!\n  id: ID!\n  name: String!\n  nameEn: String!\n  nameKana: String!\n  nickname: String!\n  nicknameEn: String!\n  prefecture: Prefecture!\n  staffsCount: Int!\n  twitterUsername: String!\n  twitterUsernameEn: String!\n  url: String!\n  urlEn: String!\n  wikipediaUrl: String!\n  wikipediaUrlEn: String!\n}\n\n\"\"\"\nThe connection type for Person.\n\"\"\"\ntype PersonConnection {\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [PersonEdge]\n\n  \"\"\"\n  A list of nodes.\n  \"\"\"\n  nodes: [Person]\n\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype PersonEdge {\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Person\n}\n\ninput PersonOrder {\n  direction: OrderDirection!\n  field: PersonOrderField!\n}\n\nenum PersonOrderField {\n  \"\"\"\n  \"\"\"\n  CREATED_AT\n\n  \"\"\"\n  \"\"\"\n  FAVORITE_PEOPLE_COUNT\n}\n\ntype Prefecture implements Node {\n  annictId: Int!\n  id: ID!\n  name: String!\n}\n\ntype Program implements Node {\n  annictId: Int!\n  channel: Channel!\n  episode: Episode!\n  id: ID!\n  rebroadcast: Boolean!\n  scPid: Int\n  startedAt: DateTime!\n  state: ProgramState!\n  work: Work!\n}\n\n\"\"\"\nThe connection type for Program.\n\"\"\"\ntype ProgramConnection {\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [ProgramEdge]\n\n  \"\"\"\n  A list of nodes.\n  \"\"\"\n  nodes: [Program]\n\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype ProgramEdge {\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Program\n}\n\ninput ProgramOrder {\n  direction: OrderDirection!\n  field: ProgramOrderField!\n}\n\nenum ProgramOrderField {\n  \"\"\"\n  \"\"\"\n  STARTED_AT\n}\n\nenum ProgramState {\n  \"\"\"\n  \"\"\"\n  HIDDEN\n\n  \"\"\"\n  \"\"\"\n  PUBLISHED\n}\n\ntype Query {\n  \"\"\"\n  Fetches an object given its ID.\n  \"\"\"\n  node(\n    \"\"\"\n    ID of the object.\n    \"\"\"\n    id: ID!\n  ): Node\n\n  \"\"\"\n  Fetches a list of objects given a list of IDs.\n  \"\"\"\n  nodes(\n    \"\"\"\n    IDs of the objects.\n    \"\"\"\n    ids: [ID!]!\n  ): [Node]!\n  searchCharacters(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n    annictIds: [Int!]\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n    names: [String!]\n    orderBy: CharacterOrder\n  ): CharacterConnection\n  searchOrganizations(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n    annictIds: [Int!]\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n    names: [String!]\n    orderBy: OrganizationOrder\n  ): OrganizationConnection\n  searchPeople(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n    annictIds: [Int!]\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n    names: [String!]\n    orderBy: PersonOrder\n  ): PersonConnection\n  searchWorks(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n    annictIds: [Int!]\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n    orderBy: WorkOrder\n    seasons: [String!]\n    titles: [String!]\n  ): WorkConnection\n  user(username: String!): User\n  viewer: User\n}\n\nenum RatingState {\n  AVERAGE\n  BAD\n  GOOD\n  GREAT\n}\n\ntype Record implements Node {\n  annictId: Int!\n  comment: String\n  commentsCount: Int!\n  createdAt: DateTime!\n  episode: Episode!\n  facebookClickCount: Int!\n  id: ID!\n  likesCount: Int!\n  modified: Boolean!\n  rating: Float\n  ratingState: RatingState\n  twitterClickCount: Int!\n  updatedAt: DateTime!\n  user: User!\n  work: Work!\n}\n\n\"\"\"\nThe connection type for Record.\n\"\"\"\ntype RecordConnection {\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [RecordEdge]\n\n  \"\"\"\n  A list of nodes.\n  \"\"\"\n  nodes: [Record]\n\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype RecordEdge {\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Record\n}\n\ninput RecordOrder {\n  direction: OrderDirection!\n  field: RecordOrderField!\n}\n\nenum RecordOrderField {\n  \"\"\"\n  \"\"\"\n  CREATED_AT\n\n  \"\"\"\n  \"\"\"\n  LIKES_COUNT\n}\n\ntype Review implements Node {\n  annictId: Int!\n  body: String!\n  createdAt: DateTime!\n  id: ID!\n  impressionsCount: Int!\n  likesCount: Int!\n  modifiedAt: DateTime\n  ratingAnimationState: RatingState\n  ratingCharacterState: RatingState\n  ratingMusicState: RatingState\n  ratingOverallState: RatingState\n  ratingStoryState: RatingState\n  title: String\n  updatedAt: DateTime!\n  user: User!\n  work: Work!\n}\n\n\"\"\"\nThe connection type for Review.\n\"\"\"\ntype ReviewConnection {\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [ReviewEdge]\n\n  \"\"\"\n  A list of nodes.\n  \"\"\"\n  nodes: [Review]\n\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype ReviewEdge {\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Review\n}\n\ninput ReviewOrder {\n  direction: OrderDirection!\n  field: ReviewOrderField!\n}\n\nenum ReviewOrderField {\n  \"\"\"\n  \"\"\"\n  CREATED_AT\n\n  \"\"\"\n  \"\"\"\n  LIKES_COUNT\n}\n\n\"\"\"\nSeason name\n\"\"\"\nenum SeasonName {\n  \"\"\"\n  \"\"\"\n  AUTUMN\n\n  \"\"\"\n  \"\"\"\n  SPRING\n\n  \"\"\"\n  \"\"\"\n  SUMMER\n\n  \"\"\"\n  \"\"\"\n  WINTER\n}\n\ntype Series implements Node {\n  annictId: Int!\n  id: ID!\n  name: String!\n  nameEn: String!\n  nameRo: String!\n  works(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n    orderBy: SeriesWorkOrder\n  ): SeriesWorkConnection\n}\n\n\"\"\"\nThe connection type for Series.\n\"\"\"\ntype SeriesConnection {\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [SeriesEdge]\n\n  \"\"\"\n  A list of nodes.\n  \"\"\"\n  nodes: [Series]\n\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype SeriesEdge {\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Series\n}\n\n\"\"\"\nThe connection type for Work.\n\"\"\"\ntype SeriesWorkConnection {\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [SeriesWorkEdge]\n\n  \"\"\"\n  A list of nodes.\n  \"\"\"\n  nodes: [Work]\n\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype SeriesWorkEdge {\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n  node: Work!\n  summary: String\n  summaryEn: String\n}\n\ninput SeriesWorkOrder {\n  direction: OrderDirection!\n  field: SeriesWorkOrderField!\n}\n\nenum SeriesWorkOrderField {\n  \"\"\"\n  \"\"\"\n  SEASON\n}\n\ntype Staff implements Node {\n  annictId: Int!\n  id: ID!\n  name: String!\n  nameEn: String!\n  resource: StaffResourceItem!\n  roleOther: String!\n  roleOtherEn: String!\n  roleText: String!\n  sortNumber: Int!\n  work: Work!\n}\n\n\"\"\"\nThe connection type for Staff.\n\"\"\"\ntype StaffConnection {\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [StaffEdge]\n\n  \"\"\"\n  A list of nodes.\n  \"\"\"\n  nodes: [Staff]\n\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype StaffEdge {\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Staff\n}\n\ninput StaffOrder {\n  direction: OrderDirection!\n  field: StaffOrderField!\n}\n\nenum StaffOrderField {\n  \"\"\"\n  \"\"\"\n  CREATED_AT\n\n  \"\"\"\n  \"\"\"\n  SORT_NUMBER\n}\n\nunion StaffResourceItem = Organization | Person\n\ntype Status implements Node {\n  annictId: Int!\n  createdAt: DateTime!\n  id: ID!\n  likesCount: Int!\n  state: StatusState!\n  user: User!\n  work: Work!\n}\n\nenum StatusState {\n  \"\"\"\n  \"\"\"\n  NO_STATE\n\n  \"\"\"\n  \"\"\"\n  ON_HOLD\n\n  \"\"\"\n  \"\"\"\n  STOP_WATCHING\n\n  \"\"\"\n  \"\"\"\n  WANNA_WATCH\n\n  \"\"\"\n  \"\"\"\n  WATCHED\n\n  \"\"\"\n  \"\"\"\n  WATCHING\n}\n\n\"\"\"\nAutogenerated input type of UpdateRecord\n\"\"\"\ninput UpdateRecordInput {\n  \"\"\"\n  A unique identifier for the client performing the mutation.\n  \"\"\"\n  clientMutationId: String\n  comment: String\n  ratingState: RatingState\n  recordId: ID!\n  shareFacebook: Boolean\n  shareTwitter: Boolean\n}\n\n\"\"\"\nAutogenerated return type of UpdateRecord\n\"\"\"\ntype UpdateRecordPayload {\n  \"\"\"\n  A unique identifier for the client performing the mutation.\n  \"\"\"\n  clientMutationId: String\n  record: Record\n}\n\n\"\"\"\nAutogenerated input type of UpdateReview\n\"\"\"\ninput UpdateReviewInput {\n  body: String!\n\n  \"\"\"\n  A unique identifier for the client performing the mutation.\n  \"\"\"\n  clientMutationId: String\n  ratingAnimationState: RatingState!\n  ratingCharacterState: RatingState!\n  ratingMusicState: RatingState!\n  ratingOverallState: RatingState!\n  ratingStoryState: RatingState!\n  reviewId: ID!\n  shareFacebook: Boolean\n  shareTwitter: Boolean\n  title: String\n}\n\n\"\"\"\nAutogenerated return type of UpdateReview\n\"\"\"\ntype UpdateReviewPayload {\n  \"\"\"\n  A unique identifier for the client performing the mutation.\n  \"\"\"\n  clientMutationId: String\n  review: Review\n}\n\n\"\"\"\nAutogenerated input type of UpdateStatus\n\"\"\"\ninput UpdateStatusInput {\n  \"\"\"\n  A unique identifier for the client performing the mutation.\n  \"\"\"\n  clientMutationId: String\n  state: StatusState!\n  workId: ID!\n}\n\n\"\"\"\nAutogenerated return type of UpdateStatus\n\"\"\"\ntype UpdateStatusPayload {\n  \"\"\"\n  A unique identifier for the client performing the mutation.\n  \"\"\"\n  clientMutationId: String\n  work: Work\n}\n\ntype User implements Node {\n  activities(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n    orderBy: ActivityOrder\n  ): ActivityConnection\n  annictId: Int!\n  avatarUrl: String\n  backgroundImageUrl: String\n  createdAt: DateTime!\n  description: String!\n  email: String\n  followers(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n  ): UserConnection\n  followersCount: Int!\n  following(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n  ): UserConnection\n  followingActivities(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n    orderBy: ActivityOrder\n  ): ActivityConnection\n  followingsCount: Int!\n  id: ID!\n  name: String!\n  notificationsCount: Int\n  onHoldCount: Int!\n  programs(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n    orderBy: ProgramOrder\n    unwatched: Boolean\n  ): ProgramConnection\n  records(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n    hasComment: Boolean\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n    orderBy: RecordOrder\n  ): RecordConnection\n  recordsCount: Int!\n  stopWatchingCount: Int!\n  url: String\n  username: String!\n  viewerCanFollow: Boolean!\n  viewerIsFollowing: Boolean!\n  wannaWatchCount: Int!\n  watchedCount: Int!\n  watchingCount: Int!\n  works(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n    annictIds: [Int!]\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n    orderBy: WorkOrder\n    seasons: [String!]\n    state: StatusState\n    titles: [String!]\n  ): WorkConnection\n}\n\n\"\"\"\nThe connection type for User.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]\n\n  \"\"\"\n  A list of nodes.\n  \"\"\"\n  nodes: [User]\n\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User\n}\n\n\"\"\"\nAn anime title\n\"\"\"\ntype Work implements Node {\n  annictId: Int!\n  casts(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n    orderBy: CastOrder\n  ): CastConnection\n  episodes(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n    orderBy: EpisodeOrder\n  ): EpisodeConnection\n  episodesCount: Int!\n  id: ID!\n  image: WorkImage\n  malAnimeId: String\n  media: Media!\n  noEpisodes: Boolean!\n  officialSiteUrl: String\n  officialSiteUrlEn: String\n  programs(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n    orderBy: ProgramOrder\n  ): ProgramConnection\n  reviews(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n    hasBody: Boolean\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n    orderBy: ReviewOrder\n  ): ReviewConnection\n  reviewsCount: Int!\n  satisfactionRate: Float\n  seasonName: SeasonName\n  seasonYear: Int\n  seriesList(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n  ): SeriesConnection\n  staffs(\n    \"\"\"\n    Returns the elements in the list that come after the specified cursor.\n    \"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"\n    Returns the first _n_ elements from the list.\n    \"\"\"\n    first: Int\n\n    \"\"\"\n    Returns the last _n_ elements from the list.\n    \"\"\"\n    last: Int\n    orderBy: StaffOrder\n  ): StaffConnection\n  syobocalTid: Int\n  title: String!\n  titleEn: String\n  titleKana: String\n  titleRo: String\n  twitterHashtag: String\n  twitterUsername: String\n  viewerStatusState: StatusState\n  watchersCount: Int!\n  wikipediaUrl: String\n  wikipediaUrlEn: String\n}\n\n\"\"\"\nThe connection type for Work.\n\"\"\"\ntype WorkConnection {\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [WorkEdge]\n\n  \"\"\"\n  A list of nodes.\n  \"\"\"\n  nodes: [Work]\n\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype WorkEdge {\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Work\n}\n\ntype WorkImage implements Node {\n  annictId: Int\n  facebookOgImageUrl: String\n  id: ID!\n  internalUrl(size: String!): String\n  recommendedImageUrl: String\n  twitterAvatarUrl: String\n  twitterBiggerAvatarUrl: String\n  twitterMiniAvatarUrl: String\n  twitterNormalAvatarUrl: String\n  work: Work\n}\n\ninput WorkOrder {\n  direction: OrderDirection!\n  field: WorkOrderField!\n}\n\nenum WorkOrderField {\n  \"\"\"\n  \"\"\"\n  CREATED_AT\n\n  \"\"\"\n  \"\"\"\n  SEASON\n\n  \"\"\"\n  \"\"\"\n  WATCHERS_COUNT\n}",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 59,
      "containsCycle": true,
      "numDefinitions": 101
    }
  ],
  "metrics": {
    "created_at": "2014-07-11T17:18:18Z",
    "updated_at": "2019-07-15T13:10:16Z",
    "pushed_at": "2019-07-18T22:56:13Z",
    "issues": 549,
    "watchers": 33,
    "fork_count": 66,
    "has_wiki_enabled": false,
    "license": "apache-2.0",
    "pull_requests": 1573,
    "pull_requests_open": 22,
    "pull_requests_closed": 331,
    "pull_requests_merged": 1220,
    "releases": 2,
    "stargazers": 439
  }
}