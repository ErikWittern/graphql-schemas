{
  "repo_name": "Beginning-GraphQL-eLearning",
  "repo_full_name": "trainingbypackt/beginning-graphql-elearning",
  "repo_owner": "TrainingByPackt",
  "repo_description": "Learn faster data fetching using this query language and improve the performance of your application",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "Course-client-setup/GraphQL-Course-client-setup/packages/prisma-books/src/generated/prisma.graphql",
      "sha": "e2337c4e5fcc34f95da29e7f80328e0bf2055141",
      "url": "https://api.github.com/repositories/161157975/contents/Course-client-setup/GraphQL-Course-client-setup/packages/prisma-books/src/generated/prisma.graphql?ref=f98093126a8d3d079b3b9fba0e1a429f0dff2afc",
      "git_url": "https://api.github.com/repositories/161157975/git/blobs/e2337c4e5fcc34f95da29e7f80328e0bf2055141",
      "html_url": "https://github.com/TrainingByPackt/Beginning-GraphQL-eLearning/blob/f98093126a8d3d079b3b9fba0e1a429f0dff2afc/Course-client-setup/GraphQL-Course-client-setup/packages/prisma-books/src/generated/prisma.graphql",
      "content": "# source: http://localhost:4466/prisma-books/dev\n# timestamp: Thu Aug 30 2018 22:54:24 GMT+0530 (IST)\n\ntype AggregateBook {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\ntype Book implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String!\n  description: String!\n  owner(where: UserWhereInput): User\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype BookConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [BookEdge]!\n  aggregate: AggregateBook!\n}\n\ninput BookCreateInput {\n  title: String!\n  description: String!\n  owner: UserCreateOneWithoutBooksInput\n}\n\ninput BookCreateManyWithoutOwnerInput {\n  create: [BookCreateWithoutOwnerInput!]\n  connect: [BookWhereUniqueInput!]\n}\n\ninput BookCreateWithoutOwnerInput {\n  title: String!\n  description: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BookEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Book!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum BookOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  title_ASC\n  title_DESC\n  description_ASC\n  description_DESC\n}\n\ntype BookPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String!\n  description: String!\n}\n\ntype BookSubscriptionPayload {\n  mutation: MutationType!\n  node: Book\n  updatedFields: [String!]\n  previousValues: BookPreviousValues\n}\n\ninput BookSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [BookSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [BookSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [BookSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BookWhereInput\n}\n\ninput BookUpdateInput {\n  title: String\n  description: String\n  owner: UserUpdateOneWithoutBooksInput\n}\n\ninput BookUpdateManyWithoutOwnerInput {\n  create: [BookCreateWithoutOwnerInput!]\n  connect: [BookWhereUniqueInput!]\n  disconnect: [BookWhereUniqueInput!]\n  delete: [BookWhereUniqueInput!]\n  update: [BookUpdateWithWhereUniqueWithoutOwnerInput!]\n  upsert: [BookUpsertWithWhereUniqueWithoutOwnerInput!]\n}\n\ninput BookUpdateWithoutOwnerDataInput {\n  title: String\n  description: String\n}\n\ninput BookUpdateWithWhereUniqueWithoutOwnerInput {\n  where: BookWhereUniqueInput!\n  data: BookUpdateWithoutOwnerDataInput!\n}\n\ninput BookUpsertWithWhereUniqueWithoutOwnerInput {\n  where: BookWhereUniqueInput!\n  update: BookUpdateWithoutOwnerDataInput!\n  create: BookCreateWithoutOwnerInput!\n}\n\ninput BookWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [BookWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [BookWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [BookWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  title: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  title_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  title_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  title_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  title_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  title_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  title_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  title_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  title_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  title_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  title_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  title_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  title_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  title_not_ends_with: String\n  description: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  description_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  description_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  description_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  description_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  description_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  description_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  description_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  description_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  description_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  description_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  description_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  description_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  description_not_ends_with: String\n  owner: UserWhereInput\n}\n\ninput BookWhereUniqueInput {\n  id: ID\n  title: String\n}\n\nscalar DateTime\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createBook(data: BookCreateInput!): Book!\n  createUser(data: UserCreateInput!): User!\n  updateBook(data: BookUpdateInput!, where: BookWhereUniqueInput!): Book\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteBook(where: BookWhereUniqueInput!): Book\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertBook(where: BookWhereUniqueInput!, create: BookCreateInput!, update: BookUpdateInput!): Book!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyBooks(data: BookUpdateInput!, where: BookWhereInput): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  deleteManyBooks(where: BookWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  books(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Book]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  book(where: BookWhereUniqueInput!): Book\n  user(where: UserWhereUniqueInput!): User\n  booksConnection(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BookConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  book(where: BookSubscriptionWhereInput): BookSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  email: String!\n  name: String!\n  books(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Book!]\n  password: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  name: String!\n  password: String!\n  books: BookCreateManyWithoutOwnerInput\n}\n\ninput UserCreateOneWithoutBooksInput {\n  create: UserCreateWithoutBooksInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutBooksInput {\n  email: String!\n  name: String!\n  password: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  name_ASC\n  name_DESC\n  password_ASC\n  password_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  name: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  email: String\n  name: String\n  password: String\n  books: BookUpdateManyWithoutOwnerInput\n}\n\ninput UserUpdateOneWithoutBooksInput {\n  create: UserCreateWithoutBooksInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutBooksDataInput\n  upsert: UserUpsertWithoutBooksInput\n}\n\ninput UserUpdateWithoutBooksDataInput {\n  email: String\n  name: String\n  password: String\n}\n\ninput UserUpsertWithoutBooksInput {\n  update: UserUpdateWithoutBooksDataInput!\n  create: UserCreateWithoutBooksInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  email: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  email_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  email_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  email_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  email_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  email_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  email_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  email_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  email_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  email_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  email_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  email_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  email_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  email_not_ends_with: String\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  password: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  password_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  password_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  password_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  password_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  password_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  password_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  password_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  password_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  password_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  password_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  password_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  password_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  password_not_ends_with: String\n  books_every: BookWhereInput\n  books_some: BookWhereInput\n  books_none: BookWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 44
    },
    {
      "name": "prisma.graphql",
      "path": "Lesson2D/GraphQL-Course-lesson2D/packages/prisma-books/src/generated/prisma.graphql",
      "sha": "349bf021ae33e58fe00fba74e5bc61b6772f548f",
      "url": "https://api.github.com/repositories/161157975/contents/Lesson2D/GraphQL-Course-lesson2D/packages/prisma-books/src/generated/prisma.graphql?ref=f98093126a8d3d079b3b9fba0e1a429f0dff2afc",
      "git_url": "https://api.github.com/repositories/161157975/git/blobs/349bf021ae33e58fe00fba74e5bc61b6772f548f",
      "html_url": "https://github.com/TrainingByPackt/Beginning-GraphQL-eLearning/blob/f98093126a8d3d079b3b9fba0e1a429f0dff2afc/Lesson2D/GraphQL-Course-lesson2D/packages/prisma-books/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Book implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String!\n  description: String!\n  owner(where: UserWhereInput): User\n}\n\ntype User implements Node {\n  id: ID!\n  email: String!\n  name: String!\n  books(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Book!]\n  password: String!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateBook {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BookConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BookEdge]!\n  aggregate: AggregateBook!\n}\n\ninput BookCreateInput {\n  title: String!\n  description: String!\n  owner: UserCreateOneWithoutBooksInput\n}\n\ninput BookCreateManyWithoutOwnerInput {\n  create: [BookCreateWithoutOwnerInput!]\n  connect: [BookWhereUniqueInput!]\n}\n\ninput BookCreateWithoutOwnerInput {\n  title: String!\n  description: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BookEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Book!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BookOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  title_ASC\n  title_DESC\n  description_ASC\n  description_DESC\n}\n\ntype BookPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String!\n  description: String!\n}\n\ntype BookSubscriptionPayload {\n  mutation: MutationType!\n  node: Book\n  updatedFields: [String!]\n  previousValues: BookPreviousValues\n}\n\ninput BookSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BookSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BookSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BookWhereInput\n}\n\ninput BookUpdateInput {\n  title: String\n  description: String\n  owner: UserUpdateOneWithoutBooksInput\n}\n\ninput BookUpdateManyWithoutOwnerInput {\n  create: [BookCreateWithoutOwnerInput!]\n  connect: [BookWhereUniqueInput!]\n  disconnect: [BookWhereUniqueInput!]\n  delete: [BookWhereUniqueInput!]\n  update: [BookUpdateWithWhereUniqueWithoutOwnerInput!]\n  upsert: [BookUpsertWithWhereUniqueWithoutOwnerInput!]\n}\n\ninput BookUpdateWithoutOwnerDataInput {\n  title: String\n  description: String\n}\n\ninput BookUpdateWithWhereUniqueWithoutOwnerInput {\n  where: BookWhereUniqueInput!\n  data: BookUpdateWithoutOwnerDataInput!\n}\n\ninput BookUpsertWithWhereUniqueWithoutOwnerInput {\n  where: BookWhereUniqueInput!\n  update: BookUpdateWithoutOwnerDataInput!\n  create: BookCreateWithoutOwnerInput!\n}\n\ninput BookWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BookWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BookWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  title: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  title_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  title_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  title_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  title_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  title_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  title_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  title_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  title_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  title_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  title_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  title_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  title_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  title_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  owner: UserWhereInput\n}\n\ninput BookWhereUniqueInput {\n  id: ID\n  title: String\n}\n\nscalar DateTime\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createBook(data: BookCreateInput!): Book!\n  createUser(data: UserCreateInput!): User!\n  updateBook(data: BookUpdateInput!, where: BookWhereUniqueInput!): Book\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteBook(where: BookWhereUniqueInput!): Book\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertBook(where: BookWhereUniqueInput!, create: BookCreateInput!, update: BookUpdateInput!): Book!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyBooks(data: BookUpdateInput!, where: BookWhereInput!): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!\n  deleteManyBooks(where: BookWhereInput!): BatchPayload!\n  deleteManyUsers(where: UserWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  books(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Book]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  book(where: BookWhereUniqueInput!): Book\n  user(where: UserWhereUniqueInput!): User\n  booksConnection(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BookConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!): Node\n}\n\ntype Subscription {\n  book(where: BookSubscriptionWhereInput): BookSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  name: String!\n  password: String!\n  books: BookCreateManyWithoutOwnerInput\n}\n\ninput UserCreateOneWithoutBooksInput {\n  create: UserCreateWithoutBooksInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutBooksInput {\n  email: String!\n  name: String!\n  password: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  name_ASC\n  name_DESC\n  password_ASC\n  password_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  name: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  email: String\n  name: String\n  password: String\n  books: BookUpdateManyWithoutOwnerInput\n}\n\ninput UserUpdateOneWithoutBooksInput {\n  create: UserCreateWithoutBooksInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutBooksDataInput\n  upsert: UserUpsertWithoutBooksInput\n}\n\ninput UserUpdateWithoutBooksDataInput {\n  email: String\n  name: String\n  password: String\n}\n\ninput UserUpsertWithoutBooksInput {\n  update: UserUpdateWithoutBooksDataInput!\n  create: UserCreateWithoutBooksInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  password: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  password_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  password_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  password_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  password_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  password_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  password_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  password_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  password_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  password_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  password_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  password_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  password_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  password_not_ends_with: String\n  books_every: BookWhereInput\n  books_some: BookWhereInput\n  books_none: BookWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 44
    },
    {
      "name": "prisma.graphql",
      "path": "Lesson3A/GraphQL-Course-lesson3A/packages/prisma-books/src/generated/prisma.graphql",
      "sha": "349bf021ae33e58fe00fba74e5bc61b6772f548f",
      "url": "https://api.github.com/repositories/161157975/contents/Lesson3A/GraphQL-Course-lesson3A/packages/prisma-books/src/generated/prisma.graphql?ref=f98093126a8d3d079b3b9fba0e1a429f0dff2afc",
      "git_url": "https://api.github.com/repositories/161157975/git/blobs/349bf021ae33e58fe00fba74e5bc61b6772f548f",
      "html_url": "https://github.com/TrainingByPackt/Beginning-GraphQL-eLearning/blob/f98093126a8d3d079b3b9fba0e1a429f0dff2afc/Lesson3A/GraphQL-Course-lesson3A/packages/prisma-books/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Book implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String!\n  description: String!\n  owner(where: UserWhereInput): User\n}\n\ntype User implements Node {\n  id: ID!\n  email: String!\n  name: String!\n  books(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Book!]\n  password: String!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateBook {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BookConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BookEdge]!\n  aggregate: AggregateBook!\n}\n\ninput BookCreateInput {\n  title: String!\n  description: String!\n  owner: UserCreateOneWithoutBooksInput\n}\n\ninput BookCreateManyWithoutOwnerInput {\n  create: [BookCreateWithoutOwnerInput!]\n  connect: [BookWhereUniqueInput!]\n}\n\ninput BookCreateWithoutOwnerInput {\n  title: String!\n  description: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BookEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Book!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BookOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  title_ASC\n  title_DESC\n  description_ASC\n  description_DESC\n}\n\ntype BookPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String!\n  description: String!\n}\n\ntype BookSubscriptionPayload {\n  mutation: MutationType!\n  node: Book\n  updatedFields: [String!]\n  previousValues: BookPreviousValues\n}\n\ninput BookSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BookSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BookSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BookWhereInput\n}\n\ninput BookUpdateInput {\n  title: String\n  description: String\n  owner: UserUpdateOneWithoutBooksInput\n}\n\ninput BookUpdateManyWithoutOwnerInput {\n  create: [BookCreateWithoutOwnerInput!]\n  connect: [BookWhereUniqueInput!]\n  disconnect: [BookWhereUniqueInput!]\n  delete: [BookWhereUniqueInput!]\n  update: [BookUpdateWithWhereUniqueWithoutOwnerInput!]\n  upsert: [BookUpsertWithWhereUniqueWithoutOwnerInput!]\n}\n\ninput BookUpdateWithoutOwnerDataInput {\n  title: String\n  description: String\n}\n\ninput BookUpdateWithWhereUniqueWithoutOwnerInput {\n  where: BookWhereUniqueInput!\n  data: BookUpdateWithoutOwnerDataInput!\n}\n\ninput BookUpsertWithWhereUniqueWithoutOwnerInput {\n  where: BookWhereUniqueInput!\n  update: BookUpdateWithoutOwnerDataInput!\n  create: BookCreateWithoutOwnerInput!\n}\n\ninput BookWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BookWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BookWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  title: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  title_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  title_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  title_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  title_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  title_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  title_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  title_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  title_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  title_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  title_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  title_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  title_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  title_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  owner: UserWhereInput\n}\n\ninput BookWhereUniqueInput {\n  id: ID\n  title: String\n}\n\nscalar DateTime\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createBook(data: BookCreateInput!): Book!\n  createUser(data: UserCreateInput!): User!\n  updateBook(data: BookUpdateInput!, where: BookWhereUniqueInput!): Book\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteBook(where: BookWhereUniqueInput!): Book\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertBook(where: BookWhereUniqueInput!, create: BookCreateInput!, update: BookUpdateInput!): Book!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyBooks(data: BookUpdateInput!, where: BookWhereInput!): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!\n  deleteManyBooks(where: BookWhereInput!): BatchPayload!\n  deleteManyUsers(where: UserWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  books(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Book]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  book(where: BookWhereUniqueInput!): Book\n  user(where: UserWhereUniqueInput!): User\n  booksConnection(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BookConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!): Node\n}\n\ntype Subscription {\n  book(where: BookSubscriptionWhereInput): BookSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  name: String!\n  password: String!\n  books: BookCreateManyWithoutOwnerInput\n}\n\ninput UserCreateOneWithoutBooksInput {\n  create: UserCreateWithoutBooksInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutBooksInput {\n  email: String!\n  name: String!\n  password: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  name_ASC\n  name_DESC\n  password_ASC\n  password_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  name: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  email: String\n  name: String\n  password: String\n  books: BookUpdateManyWithoutOwnerInput\n}\n\ninput UserUpdateOneWithoutBooksInput {\n  create: UserCreateWithoutBooksInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutBooksDataInput\n  upsert: UserUpsertWithoutBooksInput\n}\n\ninput UserUpdateWithoutBooksDataInput {\n  email: String\n  name: String\n  password: String\n}\n\ninput UserUpsertWithoutBooksInput {\n  update: UserUpdateWithoutBooksDataInput!\n  create: UserCreateWithoutBooksInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  password: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  password_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  password_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  password_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  password_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  password_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  password_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  password_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  password_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  password_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  password_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  password_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  password_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  password_not_ends_with: String\n  books_every: BookWhereInput\n  books_some: BookWhereInput\n  books_none: BookWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 44
    },
    {
      "name": "prisma.graphql",
      "path": "Lesson3B/GraphQL-Course-lesson3B/packages/prisma-books/src/generated/prisma.graphql",
      "sha": "349bf021ae33e58fe00fba74e5bc61b6772f548f",
      "url": "https://api.github.com/repositories/161157975/contents/Lesson3B/GraphQL-Course-lesson3B/packages/prisma-books/src/generated/prisma.graphql?ref=f98093126a8d3d079b3b9fba0e1a429f0dff2afc",
      "git_url": "https://api.github.com/repositories/161157975/git/blobs/349bf021ae33e58fe00fba74e5bc61b6772f548f",
      "html_url": "https://github.com/TrainingByPackt/Beginning-GraphQL-eLearning/blob/f98093126a8d3d079b3b9fba0e1a429f0dff2afc/Lesson3B/GraphQL-Course-lesson3B/packages/prisma-books/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Book implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String!\n  description: String!\n  owner(where: UserWhereInput): User\n}\n\ntype User implements Node {\n  id: ID!\n  email: String!\n  name: String!\n  books(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Book!]\n  password: String!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateBook {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BookConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BookEdge]!\n  aggregate: AggregateBook!\n}\n\ninput BookCreateInput {\n  title: String!\n  description: String!\n  owner: UserCreateOneWithoutBooksInput\n}\n\ninput BookCreateManyWithoutOwnerInput {\n  create: [BookCreateWithoutOwnerInput!]\n  connect: [BookWhereUniqueInput!]\n}\n\ninput BookCreateWithoutOwnerInput {\n  title: String!\n  description: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BookEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Book!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BookOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  title_ASC\n  title_DESC\n  description_ASC\n  description_DESC\n}\n\ntype BookPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String!\n  description: String!\n}\n\ntype BookSubscriptionPayload {\n  mutation: MutationType!\n  node: Book\n  updatedFields: [String!]\n  previousValues: BookPreviousValues\n}\n\ninput BookSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BookSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BookSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BookWhereInput\n}\n\ninput BookUpdateInput {\n  title: String\n  description: String\n  owner: UserUpdateOneWithoutBooksInput\n}\n\ninput BookUpdateManyWithoutOwnerInput {\n  create: [BookCreateWithoutOwnerInput!]\n  connect: [BookWhereUniqueInput!]\n  disconnect: [BookWhereUniqueInput!]\n  delete: [BookWhereUniqueInput!]\n  update: [BookUpdateWithWhereUniqueWithoutOwnerInput!]\n  upsert: [BookUpsertWithWhereUniqueWithoutOwnerInput!]\n}\n\ninput BookUpdateWithoutOwnerDataInput {\n  title: String\n  description: String\n}\n\ninput BookUpdateWithWhereUniqueWithoutOwnerInput {\n  where: BookWhereUniqueInput!\n  data: BookUpdateWithoutOwnerDataInput!\n}\n\ninput BookUpsertWithWhereUniqueWithoutOwnerInput {\n  where: BookWhereUniqueInput!\n  update: BookUpdateWithoutOwnerDataInput!\n  create: BookCreateWithoutOwnerInput!\n}\n\ninput BookWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BookWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BookWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  title: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  title_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  title_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  title_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  title_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  title_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  title_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  title_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  title_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  title_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  title_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  title_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  title_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  title_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  owner: UserWhereInput\n}\n\ninput BookWhereUniqueInput {\n  id: ID\n  title: String\n}\n\nscalar DateTime\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createBook(data: BookCreateInput!): Book!\n  createUser(data: UserCreateInput!): User!\n  updateBook(data: BookUpdateInput!, where: BookWhereUniqueInput!): Book\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteBook(where: BookWhereUniqueInput!): Book\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertBook(where: BookWhereUniqueInput!, create: BookCreateInput!, update: BookUpdateInput!): Book!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyBooks(data: BookUpdateInput!, where: BookWhereInput!): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!\n  deleteManyBooks(where: BookWhereInput!): BatchPayload!\n  deleteManyUsers(where: UserWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  books(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Book]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  book(where: BookWhereUniqueInput!): Book\n  user(where: UserWhereUniqueInput!): User\n  booksConnection(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BookConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!): Node\n}\n\ntype Subscription {\n  book(where: BookSubscriptionWhereInput): BookSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  name: String!\n  password: String!\n  books: BookCreateManyWithoutOwnerInput\n}\n\ninput UserCreateOneWithoutBooksInput {\n  create: UserCreateWithoutBooksInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutBooksInput {\n  email: String!\n  name: String!\n  password: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  name_ASC\n  name_DESC\n  password_ASC\n  password_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  name: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  email: String\n  name: String\n  password: String\n  books: BookUpdateManyWithoutOwnerInput\n}\n\ninput UserUpdateOneWithoutBooksInput {\n  create: UserCreateWithoutBooksInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutBooksDataInput\n  upsert: UserUpsertWithoutBooksInput\n}\n\ninput UserUpdateWithoutBooksDataInput {\n  email: String\n  name: String\n  password: String\n}\n\ninput UserUpsertWithoutBooksInput {\n  update: UserUpdateWithoutBooksDataInput!\n  create: UserCreateWithoutBooksInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  password: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  password_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  password_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  password_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  password_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  password_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  password_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  password_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  password_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  password_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  password_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  password_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  password_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  password_not_ends_with: String\n  books_every: BookWhereInput\n  books_some: BookWhereInput\n  books_none: BookWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 44
    },
    {
      "name": "prisma.graphql",
      "path": "Lesson3C/GraphQL-Course-lesson3C/packages/prisma-books/src/generated/prisma.graphql",
      "sha": "349bf021ae33e58fe00fba74e5bc61b6772f548f",
      "url": "https://api.github.com/repositories/161157975/contents/Lesson3C/GraphQL-Course-lesson3C/packages/prisma-books/src/generated/prisma.graphql?ref=f98093126a8d3d079b3b9fba0e1a429f0dff2afc",
      "git_url": "https://api.github.com/repositories/161157975/git/blobs/349bf021ae33e58fe00fba74e5bc61b6772f548f",
      "html_url": "https://github.com/TrainingByPackt/Beginning-GraphQL-eLearning/blob/f98093126a8d3d079b3b9fba0e1a429f0dff2afc/Lesson3C/GraphQL-Course-lesson3C/packages/prisma-books/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Book implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String!\n  description: String!\n  owner(where: UserWhereInput): User\n}\n\ntype User implements Node {\n  id: ID!\n  email: String!\n  name: String!\n  books(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Book!]\n  password: String!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateBook {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BookConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BookEdge]!\n  aggregate: AggregateBook!\n}\n\ninput BookCreateInput {\n  title: String!\n  description: String!\n  owner: UserCreateOneWithoutBooksInput\n}\n\ninput BookCreateManyWithoutOwnerInput {\n  create: [BookCreateWithoutOwnerInput!]\n  connect: [BookWhereUniqueInput!]\n}\n\ninput BookCreateWithoutOwnerInput {\n  title: String!\n  description: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BookEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Book!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BookOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  title_ASC\n  title_DESC\n  description_ASC\n  description_DESC\n}\n\ntype BookPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String!\n  description: String!\n}\n\ntype BookSubscriptionPayload {\n  mutation: MutationType!\n  node: Book\n  updatedFields: [String!]\n  previousValues: BookPreviousValues\n}\n\ninput BookSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BookSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BookSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BookWhereInput\n}\n\ninput BookUpdateInput {\n  title: String\n  description: String\n  owner: UserUpdateOneWithoutBooksInput\n}\n\ninput BookUpdateManyWithoutOwnerInput {\n  create: [BookCreateWithoutOwnerInput!]\n  connect: [BookWhereUniqueInput!]\n  disconnect: [BookWhereUniqueInput!]\n  delete: [BookWhereUniqueInput!]\n  update: [BookUpdateWithWhereUniqueWithoutOwnerInput!]\n  upsert: [BookUpsertWithWhereUniqueWithoutOwnerInput!]\n}\n\ninput BookUpdateWithoutOwnerDataInput {\n  title: String\n  description: String\n}\n\ninput BookUpdateWithWhereUniqueWithoutOwnerInput {\n  where: BookWhereUniqueInput!\n  data: BookUpdateWithoutOwnerDataInput!\n}\n\ninput BookUpsertWithWhereUniqueWithoutOwnerInput {\n  where: BookWhereUniqueInput!\n  update: BookUpdateWithoutOwnerDataInput!\n  create: BookCreateWithoutOwnerInput!\n}\n\ninput BookWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BookWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BookWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  title: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  title_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  title_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  title_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  title_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  title_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  title_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  title_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  title_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  title_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  title_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  title_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  title_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  title_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  owner: UserWhereInput\n}\n\ninput BookWhereUniqueInput {\n  id: ID\n  title: String\n}\n\nscalar DateTime\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createBook(data: BookCreateInput!): Book!\n  createUser(data: UserCreateInput!): User!\n  updateBook(data: BookUpdateInput!, where: BookWhereUniqueInput!): Book\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteBook(where: BookWhereUniqueInput!): Book\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertBook(where: BookWhereUniqueInput!, create: BookCreateInput!, update: BookUpdateInput!): Book!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyBooks(data: BookUpdateInput!, where: BookWhereInput!): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!\n  deleteManyBooks(where: BookWhereInput!): BatchPayload!\n  deleteManyUsers(where: UserWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  books(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Book]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  book(where: BookWhereUniqueInput!): Book\n  user(where: UserWhereUniqueInput!): User\n  booksConnection(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BookConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!): Node\n}\n\ntype Subscription {\n  book(where: BookSubscriptionWhereInput): BookSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  name: String!\n  password: String!\n  books: BookCreateManyWithoutOwnerInput\n}\n\ninput UserCreateOneWithoutBooksInput {\n  create: UserCreateWithoutBooksInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutBooksInput {\n  email: String!\n  name: String!\n  password: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  name_ASC\n  name_DESC\n  password_ASC\n  password_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  name: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  email: String\n  name: String\n  password: String\n  books: BookUpdateManyWithoutOwnerInput\n}\n\ninput UserUpdateOneWithoutBooksInput {\n  create: UserCreateWithoutBooksInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutBooksDataInput\n  upsert: UserUpsertWithoutBooksInput\n}\n\ninput UserUpdateWithoutBooksDataInput {\n  email: String\n  name: String\n  password: String\n}\n\ninput UserUpsertWithoutBooksInput {\n  update: UserUpdateWithoutBooksDataInput!\n  create: UserCreateWithoutBooksInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  password: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  password_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  password_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  password_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  password_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  password_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  password_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  password_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  password_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  password_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  password_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  password_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  password_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  password_not_ends_with: String\n  books_every: BookWhereInput\n  books_some: BookWhereInput\n  books_none: BookWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 44
    },
    {
      "name": "prisma.graphql",
      "path": "Lesson3D/GraphQL-Course-lesson3D/packages/prisma-books/src/generated/prisma.graphql",
      "sha": "349bf021ae33e58fe00fba74e5bc61b6772f548f",
      "url": "https://api.github.com/repositories/161157975/contents/Lesson3D/GraphQL-Course-lesson3D/packages/prisma-books/src/generated/prisma.graphql?ref=f98093126a8d3d079b3b9fba0e1a429f0dff2afc",
      "git_url": "https://api.github.com/repositories/161157975/git/blobs/349bf021ae33e58fe00fba74e5bc61b6772f548f",
      "html_url": "https://github.com/TrainingByPackt/Beginning-GraphQL-eLearning/blob/f98093126a8d3d079b3b9fba0e1a429f0dff2afc/Lesson3D/GraphQL-Course-lesson3D/packages/prisma-books/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Book implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String!\n  description: String!\n  owner(where: UserWhereInput): User\n}\n\ntype User implements Node {\n  id: ID!\n  email: String!\n  name: String!\n  books(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Book!]\n  password: String!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateBook {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BookConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BookEdge]!\n  aggregate: AggregateBook!\n}\n\ninput BookCreateInput {\n  title: String!\n  description: String!\n  owner: UserCreateOneWithoutBooksInput\n}\n\ninput BookCreateManyWithoutOwnerInput {\n  create: [BookCreateWithoutOwnerInput!]\n  connect: [BookWhereUniqueInput!]\n}\n\ninput BookCreateWithoutOwnerInput {\n  title: String!\n  description: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BookEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Book!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BookOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  title_ASC\n  title_DESC\n  description_ASC\n  description_DESC\n}\n\ntype BookPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String!\n  description: String!\n}\n\ntype BookSubscriptionPayload {\n  mutation: MutationType!\n  node: Book\n  updatedFields: [String!]\n  previousValues: BookPreviousValues\n}\n\ninput BookSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BookSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BookSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BookWhereInput\n}\n\ninput BookUpdateInput {\n  title: String\n  description: String\n  owner: UserUpdateOneWithoutBooksInput\n}\n\ninput BookUpdateManyWithoutOwnerInput {\n  create: [BookCreateWithoutOwnerInput!]\n  connect: [BookWhereUniqueInput!]\n  disconnect: [BookWhereUniqueInput!]\n  delete: [BookWhereUniqueInput!]\n  update: [BookUpdateWithWhereUniqueWithoutOwnerInput!]\n  upsert: [BookUpsertWithWhereUniqueWithoutOwnerInput!]\n}\n\ninput BookUpdateWithoutOwnerDataInput {\n  title: String\n  description: String\n}\n\ninput BookUpdateWithWhereUniqueWithoutOwnerInput {\n  where: BookWhereUniqueInput!\n  data: BookUpdateWithoutOwnerDataInput!\n}\n\ninput BookUpsertWithWhereUniqueWithoutOwnerInput {\n  where: BookWhereUniqueInput!\n  update: BookUpdateWithoutOwnerDataInput!\n  create: BookCreateWithoutOwnerInput!\n}\n\ninput BookWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BookWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BookWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  title: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  title_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  title_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  title_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  title_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  title_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  title_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  title_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  title_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  title_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  title_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  title_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  title_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  title_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  owner: UserWhereInput\n}\n\ninput BookWhereUniqueInput {\n  id: ID\n  title: String\n}\n\nscalar DateTime\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createBook(data: BookCreateInput!): Book!\n  createUser(data: UserCreateInput!): User!\n  updateBook(data: BookUpdateInput!, where: BookWhereUniqueInput!): Book\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteBook(where: BookWhereUniqueInput!): Book\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertBook(where: BookWhereUniqueInput!, create: BookCreateInput!, update: BookUpdateInput!): Book!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyBooks(data: BookUpdateInput!, where: BookWhereInput!): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!\n  deleteManyBooks(where: BookWhereInput!): BatchPayload!\n  deleteManyUsers(where: UserWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  books(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Book]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  book(where: BookWhereUniqueInput!): Book\n  user(where: UserWhereUniqueInput!): User\n  booksConnection(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BookConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!): Node\n}\n\ntype Subscription {\n  book(where: BookSubscriptionWhereInput): BookSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  name: String!\n  password: String!\n  books: BookCreateManyWithoutOwnerInput\n}\n\ninput UserCreateOneWithoutBooksInput {\n  create: UserCreateWithoutBooksInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutBooksInput {\n  email: String!\n  name: String!\n  password: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  name_ASC\n  name_DESC\n  password_ASC\n  password_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  name: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  email: String\n  name: String\n  password: String\n  books: BookUpdateManyWithoutOwnerInput\n}\n\ninput UserUpdateOneWithoutBooksInput {\n  create: UserCreateWithoutBooksInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutBooksDataInput\n  upsert: UserUpsertWithoutBooksInput\n}\n\ninput UserUpdateWithoutBooksDataInput {\n  email: String\n  name: String\n  password: String\n}\n\ninput UserUpsertWithoutBooksInput {\n  update: UserUpdateWithoutBooksDataInput!\n  create: UserCreateWithoutBooksInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  password: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  password_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  password_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  password_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  password_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  password_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  password_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  password_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  password_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  password_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  password_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  password_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  password_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  password_not_ends_with: String\n  books_every: BookWhereInput\n  books_some: BookWhereInput\n  books_none: BookWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 44
    },
    {
      "name": "prisma.graphql",
      "path": "Lesson3E/GraphQL-Course-lesson3E/packages/prisma-books/src/generated/prisma.graphql",
      "sha": "349bf021ae33e58fe00fba74e5bc61b6772f548f",
      "url": "https://api.github.com/repositories/161157975/contents/Lesson3E/GraphQL-Course-lesson3E/packages/prisma-books/src/generated/prisma.graphql?ref=f98093126a8d3d079b3b9fba0e1a429f0dff2afc",
      "git_url": "https://api.github.com/repositories/161157975/git/blobs/349bf021ae33e58fe00fba74e5bc61b6772f548f",
      "html_url": "https://github.com/TrainingByPackt/Beginning-GraphQL-eLearning/blob/f98093126a8d3d079b3b9fba0e1a429f0dff2afc/Lesson3E/GraphQL-Course-lesson3E/packages/prisma-books/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Book implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String!\n  description: String!\n  owner(where: UserWhereInput): User\n}\n\ntype User implements Node {\n  id: ID!\n  email: String!\n  name: String!\n  books(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Book!]\n  password: String!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateBook {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype BookConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [BookEdge]!\n  aggregate: AggregateBook!\n}\n\ninput BookCreateInput {\n  title: String!\n  description: String!\n  owner: UserCreateOneWithoutBooksInput\n}\n\ninput BookCreateManyWithoutOwnerInput {\n  create: [BookCreateWithoutOwnerInput!]\n  connect: [BookWhereUniqueInput!]\n}\n\ninput BookCreateWithoutOwnerInput {\n  title: String!\n  description: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype BookEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Book!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum BookOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  title_ASC\n  title_DESC\n  description_ASC\n  description_DESC\n}\n\ntype BookPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String!\n  description: String!\n}\n\ntype BookSubscriptionPayload {\n  mutation: MutationType!\n  node: Book\n  updatedFields: [String!]\n  previousValues: BookPreviousValues\n}\n\ninput BookSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BookSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BookSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BookWhereInput\n}\n\ninput BookUpdateInput {\n  title: String\n  description: String\n  owner: UserUpdateOneWithoutBooksInput\n}\n\ninput BookUpdateManyWithoutOwnerInput {\n  create: [BookCreateWithoutOwnerInput!]\n  connect: [BookWhereUniqueInput!]\n  disconnect: [BookWhereUniqueInput!]\n  delete: [BookWhereUniqueInput!]\n  update: [BookUpdateWithWhereUniqueWithoutOwnerInput!]\n  upsert: [BookUpsertWithWhereUniqueWithoutOwnerInput!]\n}\n\ninput BookUpdateWithoutOwnerDataInput {\n  title: String\n  description: String\n}\n\ninput BookUpdateWithWhereUniqueWithoutOwnerInput {\n  where: BookWhereUniqueInput!\n  data: BookUpdateWithoutOwnerDataInput!\n}\n\ninput BookUpsertWithWhereUniqueWithoutOwnerInput {\n  where: BookWhereUniqueInput!\n  update: BookUpdateWithoutOwnerDataInput!\n  create: BookCreateWithoutOwnerInput!\n}\n\ninput BookWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [BookWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [BookWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  title: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  title_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  title_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  title_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  title_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  title_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  title_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  title_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  title_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  title_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  title_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  title_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  title_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  title_not_ends_with: String\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  owner: UserWhereInput\n}\n\ninput BookWhereUniqueInput {\n  id: ID\n  title: String\n}\n\nscalar DateTime\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createBook(data: BookCreateInput!): Book!\n  createUser(data: UserCreateInput!): User!\n  updateBook(data: BookUpdateInput!, where: BookWhereUniqueInput!): Book\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteBook(where: BookWhereUniqueInput!): Book\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertBook(where: BookWhereUniqueInput!, create: BookCreateInput!, update: BookUpdateInput!): Book!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyBooks(data: BookUpdateInput!, where: BookWhereInput!): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!\n  deleteManyBooks(where: BookWhereInput!): BatchPayload!\n  deleteManyUsers(where: UserWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  books(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Book]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  book(where: BookWhereUniqueInput!): Book\n  user(where: UserWhereUniqueInput!): User\n  booksConnection(where: BookWhereInput, orderBy: BookOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BookConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!): Node\n}\n\ntype Subscription {\n  book(where: BookSubscriptionWhereInput): BookSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  name: String!\n  password: String!\n  books: BookCreateManyWithoutOwnerInput\n}\n\ninput UserCreateOneWithoutBooksInput {\n  create: UserCreateWithoutBooksInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutBooksInput {\n  email: String!\n  name: String!\n  password: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  name_ASC\n  name_DESC\n  password_ASC\n  password_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  name: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  email: String\n  name: String\n  password: String\n  books: BookUpdateManyWithoutOwnerInput\n}\n\ninput UserUpdateOneWithoutBooksInput {\n  create: UserCreateWithoutBooksInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutBooksDataInput\n  upsert: UserUpsertWithoutBooksInput\n}\n\ninput UserUpdateWithoutBooksDataInput {\n  email: String\n  name: String\n  password: String\n}\n\ninput UserUpsertWithoutBooksInput {\n  update: UserUpdateWithoutBooksDataInput!\n  create: UserCreateWithoutBooksInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  password: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  password_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  password_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  password_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  password_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  password_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  password_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  password_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  password_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  password_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  password_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  password_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  password_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  password_not_ends_with: String\n  books_every: BookWhereInput\n  books_some: BookWhereInput\n  books_none: BookWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 44
    }
  ],
  "metrics": {
    "created_at": "2018-12-10T10:32:50Z",
    "updated_at": "2018-12-10T12:26:34Z",
    "pushed_at": "2018-12-10T12:26:33Z",
    "issues": 0,
    "watchers": 2,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}