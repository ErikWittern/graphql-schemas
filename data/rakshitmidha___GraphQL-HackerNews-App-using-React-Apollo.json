{
  "repo_name": "GraphQL-HackerNews-App-using-React-Apollo",
  "repo_full_name": "rakshitmidha/graphql-hackernews-app-using-react-apollo",
  "repo_owner": "rakshitmidha",
  "repo_description": "HackerNews app made using React, Apollo & GraphQL",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "server/src/generated/prisma.graphql",
      "sha": "9d4d350eecf140cc03ae8450a0e0dda5fdb3f4b9",
      "url": "https://api.github.com/repositories/123645951/contents/server/src/generated/prisma.graphql?ref=f3d7b49f3cc9ba628839cda960668f53a128d8cf",
      "git_url": "https://api.github.com/repositories/123645951/git/blobs/9d4d350eecf140cc03ae8450a0e0dda5fdb3f4b9",
      "html_url": "https://github.com/rakshitmidha/GraphQL-HackerNews-App-using-React-Apollo/blob/f3d7b49f3cc9ba628839cda960668f53a128d8cf/server/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Link implements Node {\n  id: ID!\n  createdAt: DateTime!\n  description: String!\n  url: String!\n  postedBy(where: UserWhereInput): User\n  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n  email: String!\n  password: String!\n  links(where: LinkWhereInput, orderBy: LinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Link!]\n  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]\n}\n\ntype Vote implements Node {\n  id: ID!\n  link(where: LinkWhereInput): Link!\n  user(where: UserWhereInput): User!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateLink {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype AggregateVote {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\nscalar DateTime\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype LinkConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [LinkEdge]!\n  aggregate: AggregateLink!\n}\n\ninput LinkCreateInput {\n  description: String!\n  url: String!\n  postedBy: UserCreateOneWithoutLinksInput\n  votes: VoteCreateManyWithoutLinkInput\n}\n\ninput LinkCreateManyWithoutPostedByInput {\n  create: [LinkCreateWithoutPostedByInput!]\n  connect: [LinkWhereUniqueInput!]\n}\n\ninput LinkCreateOneWithoutVotesInput {\n  create: LinkCreateWithoutVotesInput\n  connect: LinkWhereUniqueInput\n}\n\ninput LinkCreateWithoutPostedByInput {\n  description: String!\n  url: String!\n  votes: VoteCreateManyWithoutLinkInput\n}\n\ninput LinkCreateWithoutVotesInput {\n  description: String!\n  url: String!\n  postedBy: UserCreateOneWithoutLinksInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype LinkEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Link!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum LinkOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  description_ASC\n  description_DESC\n  url_ASC\n  url_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype LinkPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  description: String!\n  url: String!\n}\n\ntype LinkSubscriptionPayload {\n  mutation: MutationType!\n  node: Link\n  updatedFields: [String!]\n  previousValues: LinkPreviousValues\n}\n\ninput LinkSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LinkSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LinkSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LinkSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LinkWhereInput\n}\n\ninput LinkUpdateInput {\n  description: String\n  url: String\n  postedBy: UserUpdateOneWithoutLinksInput\n  votes: VoteUpdateManyWithoutLinkInput\n}\n\ninput LinkUpdateManyWithoutPostedByInput {\n  create: [LinkCreateWithoutPostedByInput!]\n  connect: [LinkWhereUniqueInput!]\n  disconnect: [LinkWhereUniqueInput!]\n  delete: [LinkWhereUniqueInput!]\n  update: [LinkUpdateWithWhereUniqueWithoutPostedByInput!]\n  upsert: [LinkUpsertWithWhereUniqueWithoutPostedByInput!]\n}\n\ninput LinkUpdateOneWithoutVotesInput {\n  create: LinkCreateWithoutVotesInput\n  connect: LinkWhereUniqueInput\n  delete: Boolean\n  update: LinkUpdateWithoutVotesDataInput\n  upsert: LinkUpsertWithoutVotesInput\n}\n\ninput LinkUpdateWithoutPostedByDataInput {\n  description: String\n  url: String\n  votes: VoteUpdateManyWithoutLinkInput\n}\n\ninput LinkUpdateWithoutVotesDataInput {\n  description: String\n  url: String\n  postedBy: UserUpdateOneWithoutLinksInput\n}\n\ninput LinkUpdateWithWhereUniqueWithoutPostedByInput {\n  where: LinkWhereUniqueInput!\n  data: LinkUpdateWithoutPostedByDataInput!\n}\n\ninput LinkUpsertWithoutVotesInput {\n  update: LinkUpdateWithoutVotesDataInput!\n  create: LinkCreateWithoutVotesInput!\n}\n\ninput LinkUpsertWithWhereUniqueWithoutPostedByInput {\n  where: LinkWhereUniqueInput!\n  update: LinkUpdateWithoutPostedByDataInput!\n  create: LinkCreateWithoutPostedByInput!\n}\n\ninput LinkWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [LinkWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [LinkWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [LinkWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  description: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  description_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  description_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  description_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  description_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  description_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  description_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  description_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  description_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  description_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  description_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  description_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  description_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  description_not_ends_with: String\n  url: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  url_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  url_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  url_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  url_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  url_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  url_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  url_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  url_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  url_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  url_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  url_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  url_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  url_not_ends_with: String\n  postedBy: UserWhereInput\n  votes_every: VoteWhereInput\n  votes_some: VoteWhereInput\n  votes_none: VoteWhereInput\n}\n\ninput LinkWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createVote(data: VoteCreateInput!): Vote!\n  createLink(data: LinkCreateInput!): Link!\n  createUser(data: UserCreateInput!): User!\n  updateVote(data: VoteUpdateInput!, where: VoteWhereUniqueInput!): Vote\n  updateLink(data: LinkUpdateInput!, where: LinkWhereUniqueInput!): Link\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteVote(where: VoteWhereUniqueInput!): Vote\n  deleteLink(where: LinkWhereUniqueInput!): Link\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertVote(where: VoteWhereUniqueInput!, create: VoteCreateInput!, update: VoteUpdateInput!): Vote!\n  upsertLink(where: LinkWhereUniqueInput!, create: LinkCreateInput!, update: LinkUpdateInput!): Link!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyVotes(data: VoteUpdateInput!, where: VoteWhereInput): BatchPayload!\n  updateManyLinks(data: LinkUpdateInput!, where: LinkWhereInput): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  deleteManyVotes(where: VoteWhereInput): BatchPayload!\n  deleteManyLinks(where: LinkWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote]!\n  links(where: LinkWhereInput, orderBy: LinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Link]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  vote(where: VoteWhereUniqueInput!): Vote\n  link(where: LinkWhereUniqueInput!): Link\n  user(where: UserWhereUniqueInput!): User\n  votesConnection(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VoteConnection!\n  linksConnection(where: LinkWhereInput, orderBy: LinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LinkConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!): Node\n}\n\ntype Subscription {\n  vote(where: VoteSubscriptionWhereInput): VoteSubscriptionPayload\n  link(where: LinkSubscriptionWhereInput): LinkSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n  email: String!\n  password: String!\n  links: LinkCreateManyWithoutPostedByInput\n  votes: VoteCreateManyWithoutUserInput\n}\n\ninput UserCreateOneWithoutLinksInput {\n  create: UserCreateWithoutLinksInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutVotesInput {\n  create: UserCreateWithoutVotesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutLinksInput {\n  name: String!\n  email: String!\n  password: String!\n  votes: VoteCreateManyWithoutUserInput\n}\n\ninput UserCreateWithoutVotesInput {\n  name: String!\n  email: String!\n  password: String!\n  links: LinkCreateManyWithoutPostedByInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n  email: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  name: String\n  email: String\n  password: String\n  links: LinkUpdateManyWithoutPostedByInput\n  votes: VoteUpdateManyWithoutUserInput\n}\n\ninput UserUpdateOneWithoutLinksInput {\n  create: UserCreateWithoutLinksInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutLinksDataInput\n  upsert: UserUpsertWithoutLinksInput\n}\n\ninput UserUpdateOneWithoutVotesInput {\n  create: UserCreateWithoutVotesInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutVotesDataInput\n  upsert: UserUpsertWithoutVotesInput\n}\n\ninput UserUpdateWithoutLinksDataInput {\n  name: String\n  email: String\n  password: String\n  votes: VoteUpdateManyWithoutUserInput\n}\n\ninput UserUpdateWithoutVotesDataInput {\n  name: String\n  email: String\n  password: String\n  links: LinkUpdateManyWithoutPostedByInput\n}\n\ninput UserUpsertWithoutLinksInput {\n  update: UserUpdateWithoutLinksDataInput!\n  create: UserCreateWithoutLinksInput!\n}\n\ninput UserUpsertWithoutVotesInput {\n  update: UserUpdateWithoutVotesDataInput!\n  create: UserCreateWithoutVotesInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  password: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  password_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  password_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  password_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  password_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  password_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  password_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  password_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  password_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  password_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  password_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  password_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  password_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  password_not_ends_with: String\n  links_every: LinkWhereInput\n  links_some: LinkWhereInput\n  links_none: LinkWhereInput\n  votes_every: VoteWhereInput\n  votes_some: VoteWhereInput\n  votes_none: VoteWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype VoteConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [VoteEdge]!\n  aggregate: AggregateVote!\n}\n\ninput VoteCreateInput {\n  link: LinkCreateOneWithoutVotesInput!\n  user: UserCreateOneWithoutVotesInput!\n}\n\ninput VoteCreateManyWithoutLinkInput {\n  create: [VoteCreateWithoutLinkInput!]\n  connect: [VoteWhereUniqueInput!]\n}\n\ninput VoteCreateManyWithoutUserInput {\n  create: [VoteCreateWithoutUserInput!]\n  connect: [VoteWhereUniqueInput!]\n}\n\ninput VoteCreateWithoutLinkInput {\n  user: UserCreateOneWithoutVotesInput!\n}\n\ninput VoteCreateWithoutUserInput {\n  link: LinkCreateOneWithoutVotesInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype VoteEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Vote!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum VoteOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype VotePreviousValues {\n  id: ID!\n}\n\ntype VoteSubscriptionPayload {\n  mutation: MutationType!\n  node: Vote\n  updatedFields: [String!]\n  previousValues: VotePreviousValues\n}\n\ninput VoteSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [VoteSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [VoteSubscriptionWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [VoteSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: VoteWhereInput\n}\n\ninput VoteUpdateInput {\n  link: LinkUpdateOneWithoutVotesInput\n  user: UserUpdateOneWithoutVotesInput\n}\n\ninput VoteUpdateManyWithoutLinkInput {\n  create: [VoteCreateWithoutLinkInput!]\n  connect: [VoteWhereUniqueInput!]\n  disconnect: [VoteWhereUniqueInput!]\n  delete: [VoteWhereUniqueInput!]\n  update: [VoteUpdateWithWhereUniqueWithoutLinkInput!]\n  upsert: [VoteUpsertWithWhereUniqueWithoutLinkInput!]\n}\n\ninput VoteUpdateManyWithoutUserInput {\n  create: [VoteCreateWithoutUserInput!]\n  connect: [VoteWhereUniqueInput!]\n  disconnect: [VoteWhereUniqueInput!]\n  delete: [VoteWhereUniqueInput!]\n  update: [VoteUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [VoteUpsertWithWhereUniqueWithoutUserInput!]\n}\n\ninput VoteUpdateWithoutLinkDataInput {\n  user: UserUpdateOneWithoutVotesInput\n}\n\ninput VoteUpdateWithoutUserDataInput {\n  link: LinkUpdateOneWithoutVotesInput\n}\n\ninput VoteUpdateWithWhereUniqueWithoutLinkInput {\n  where: VoteWhereUniqueInput!\n  data: VoteUpdateWithoutLinkDataInput!\n}\n\ninput VoteUpdateWithWhereUniqueWithoutUserInput {\n  where: VoteWhereUniqueInput!\n  data: VoteUpdateWithoutUserDataInput!\n}\n\ninput VoteUpsertWithWhereUniqueWithoutLinkInput {\n  where: VoteWhereUniqueInput!\n  update: VoteUpdateWithoutLinkDataInput!\n  create: VoteCreateWithoutLinkInput!\n}\n\ninput VoteUpsertWithWhereUniqueWithoutUserInput {\n  where: VoteWhereUniqueInput!\n  update: VoteUpdateWithoutUserDataInput!\n  create: VoteCreateWithoutUserInput!\n}\n\ninput VoteWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [VoteWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [VoteWhereInput!]\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [VoteWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  link: LinkWhereInput\n  user: UserWhereInput\n}\n\ninput VoteWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 78
    }
  ],
  "metrics": {
    "created_at": "2018-03-03T00:44:14Z",
    "updated_at": "2019-05-07T15:27:37Z",
    "pushed_at": "2018-05-10T22:09:35Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 2,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 2,
    "releases": 0,
    "stargazers": 1
  }
}