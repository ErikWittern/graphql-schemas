{
  "repo_name": "news-link",
  "repo_full_name": "nzediegwu1/news-link",
  "repo_owner": "nzediegwu1",
  "repo_description": "An app for collection and sharing popular news links. Users can vote on their favourite news links and let the world know what is trending",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "api/schema.graphql",
      "sha": "cd2aeff8a17a39fdac33ffdb87ea61595e02763b",
      "url": "https://api.github.com/repositories/163020570/contents/api/schema.graphql?ref=1112723ad5c37efd3805624e48de750a96f0929c",
      "git_url": "https://api.github.com/repositories/163020570/git/blobs/cd2aeff8a17a39fdac33ffdb87ea61595e02763b",
      "html_url": "https://github.com/nzediegwu1/news-link/blob/1112723ad5c37efd3805624e48de750a96f0929c/api/schema.graphql",
      "content": "type Query {\n  info: String!\n  feed(filter: String, first: Int, skip: Int, orderBy: LinkOrderByInput): Feed!\n  getLink(id: ID!): Link\n  getUsers: [User!]!\n}\ntype Mutation {\n  postLink(\n    title: String!\n    description: String!\n    url: String!\n    imageUrl: String!\n    imagePublicId: String!\n  ): Link!\n  updateLink(\n    id: ID!\n    title: String\n    description: String\n    url: String\n    imageUrl: String\n    imagePublicId: String\n  ): Link!\n  deleteLink(id: ID!): Link\n  signup(name: String!, email: String!, password: String!): AuthPayload\n  signin(email: String!, password: String!): AuthPayload\n  vote(linkId: String!): Vote!\n  deleteVote(id: ID!): VoteResponse\n}\ntype VoteResponse {\n  message: String!\n  id: ID!\n}\nenum LinkOrderByInput {\n  url_ASC\n  url_DESC\n  description_ASC\n  description_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\ntype Feed {\n  links: [Link!]!\n  count: Int!\n}\ntype Subscription {\n  newLink: Link\n  newVote: Vote\n}\ntype Link {\n  id: ID!\n  title: String!\n  description: String!\n  url: String!\n  imageUrl: String!\n  imagePublicId: String!\n  createdAt: DateTime!\n  postedBy: User\n  votes: [Vote!]!\n}\ntype AuthPayload {\n  token: String\n  user: User\n}\ntype User {\n  id: ID!\n  name: String!\n  email: String!\n  password: String!\n  links: [Link!]!\n  voteCasts: [Vote!]!\n}\ntype Vote {\n  id: ID!\n  voter: User\n  link: Link\n}\nscalar DateTime\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 9,
      "containsCycle": true,
      "numDefinitions": 11
    }
  ],
  "metrics": {
    "created_at": "2018-12-24T20:05:22Z",
    "updated_at": "2019-03-25T09:47:25Z",
    "pushed_at": "2019-03-25T09:47:24Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 3,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 3,
    "releases": 0,
    "stargazers": 1
  }
}