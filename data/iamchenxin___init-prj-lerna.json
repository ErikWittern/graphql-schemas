{
  "repo_name": "init-prj-lerna",
  "repo_full_name": "iamchenxin/init-prj-lerna",
  "repo_owner": "iamchenxin",
  "repo_description": "lerna project template for init-app.",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "packages/config-relay-graphql/data/schema.graphql",
      "sha": "8f2706c0eb8243c68224b87a4e26d0f8622db52b",
      "url": "https://api.github.com/repositories/75709549/contents/packages/config-relay-graphql/data/schema.graphql?ref=f2d045643ef03cdeb5341166824a3f6fa8fd9309",
      "git_url": "https://api.github.com/repositories/75709549/git/blobs/8f2706c0eb8243c68224b87a4e26d0f8622db52b",
      "html_url": "https://github.com/iamchenxin/init-prj-lerna/blob/f2d045643ef03cdeb5341166824a3f6fa8fd9309/packages/config-relay-graphql/data/schema.graphql",
      "content": "# A item (name, content)\ntype Item implements Node {\n  # The ID of an object\n  id: ID!\n\n  # the name of a content\n  name: String\n\n  # the content\n  content: String\n}\n\n# mainupulate items\ntype ItemBook implements Node {\n  # The ID of an object\n  id: ID!\n  byName(name: String!): Item\n}\n\n# A connection to a list of items.\ntype ItemConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [ItemEdge]\n}\n\n# An edge in a connection.\ntype ItemEdge {\n  # The item at the end of the edge\n  node: Item\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\ntype Mutation {\n  setItem(input: SetItemInput!): SetItemPayload\n}\n\n# An interface with an ID\ninterface Node {\n  # The id of the object.\n  id: ID!\n}\n\n# Information about pagination in a connection.\ntype PageInfo {\n  # When paginating forwards, are there more items?\n  hasNextPage: Boolean!\n\n  # When paginating backwards, are there more items?\n  hasPreviousPage: Boolean!\n\n  # When paginating backwards, the cursor to continue.\n  startCursor: String\n\n  # When paginating forwards, the cursor to continue.\n  endCursor: String\n}\n\ntype Query {\n  book: ItemBook\n  nameSeach(text: String): SearchResult\n\n  # Fetches an object given its ID\n  node(\n    # The ID of an object\n    id: ID!\n  ): Node\n}\n\n# the results for a name search\ntype SearchResult implements Node {\n  # The ID of an object\n  id: ID!\n  results(after: String, first: Int, before: String, last: Int): ItemConnection\n}\n\ninput SetItemInput {\n  name: String!\n  content: String!\n  clientMutationId: String!\n}\n\ntype SetItemPayload {\n  item: Item\n  clientMutationId: String!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 9,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 11
    }
  ],
  "metrics": {
    "created_at": "2016-12-06T08:12:01Z",
    "updated_at": "2016-12-06T08:12:29Z",
    "pushed_at": "2016-12-06T08:17:58Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}