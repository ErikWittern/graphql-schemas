{
  "repo_name": "graphql_examples",
  "repo_full_name": "matt-riley/graphql_examples",
  "repo_owner": "matt-riley",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "js/lastfm/schema.graphql",
      "sha": "9b67e91c1ffe58fe274ab955b938cc4a1c70e342",
      "url": "https://api.github.com/repositories/172202294/contents/js/lastfm/schema.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/9b67e91c1ffe58fe274ab955b938cc4a1c70e342",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/schema.graphql",
      "content": "\"\"\"The type for a recording artist\"\"\"\ntype Artist {\n  \"\"\"The musicbrainz id for the artist\"\"\"\n  id: ID\n\n  \"\"\"The artists name\"\"\"\n  name: String\n\n  \"\"\"The URL to the artists Last.fm page\"\"\"\n  url: String\n\n  \"\"\"Images of the Artist\"\"\"\n  images: Images\n\n  \"\"\"The total amount of listeners for the Artist\"\"\"\n  totalListeners: String\n\n  \"\"\"The total amount of plays the artist has had\"\"\"\n  totalPlays: String\n\n  \"\"\"Tags assigned to the artist\"\"\"\n  tags: [Tag]\n\n  \"\"\"The artists biography\"\"\"\n  bio: Bio\n}\n\ntype Bio {\n  \"\"\"Date the bio was published\"\"\"\n  published: String\n\n  \"\"\"A summary of the bio\"\"\"\n  summary: String\n\n  \"\"\"The full bio\"\"\"\n  content: String\n}\n\ntype Date {\n  \"\"\"The date - Unix Time\"\"\"\n  date: String\n\n  \"\"\"The text version of the date\"\"\"\n  text: String\n}\n\ntype Images {\n  \"\"\"The smallest version of the image\"\"\"\n  small: String\n\n  \"\"\"The medium size of the image\"\"\"\n  medium: String\n\n  \"\"\"The large size of the image\"\"\"\n  large: String\n}\n\ntype LastFM {\n  \"\"\"The last.fm user\"\"\"\n  user(\n    \"\"\"\n    The last.fm username, this **must** be passed into the query else it will fail\n    \"\"\"\n    username: String!\n  ): User\n}\n\ntype Query {\n  \"\"\"Last.fm Api\"\"\"\n  lastfm: LastFM\n}\n\ntype Tag {\n  \"\"\"The name of the tag\"\"\"\n  name: String\n\n  \"\"\"The url to the last.fm page for the tag\"\"\"\n  url: String\n}\n\ntype Track {\n  \"\"\"The name of the track\"\"\"\n  name: String\n\n  \"\"\"The musicbrainz id for the track\"\"\"\n  id: ID\n\n  \"\"\"The url for the last.fm page for the track\"\"\"\n  url: String\n\n  \"\"\"The date of the track\"\"\"\n  date: Date\n\n  \"\"\"The artist for the track\"\"\"\n  artist: Artist\n\n  \"\"\"Any images for the track\"\"\"\n  images: Images\n}\n\ntype User {\n  \"\"\"The users ID\"\"\"\n  id: ID\n\n  \"\"\"The users username\"\"\"\n  name: String\n\n  \"\"\"The users real name\"\"\"\n  realname: String\n\n  \"\"\"The url for the users Last.fm profile\"\"\"\n  url: String\n\n  \"\"\"The users avatar\"\"\"\n  image: Images\n\n  \"\"\"The country in which the user resides\"\"\"\n  country: String\n\n  \"\"\"The users gender\"\"\"\n  gender: String\n\n  \"\"\"Returns if the user is a Last.fm subscriber or not\"\"\"\n  subscriber: Boolean\n\n  \"\"\"The users total playcount\"\"\"\n  playcount: Int\n\n  \"\"\"The number of playlists the user has\"\"\"\n  playlists: Int\n\n  \"\"\"The date the user registered\"\"\"\n  registeredDate: Date\n\n  \"\"\"A list of the users loved tracks\"\"\"\n  lovedTracks: [Track]\n\n  \"\"\"A list of the users recently played tracks\"\"\"\n  recentTracks(\n    \"\"\"Limit the amount of recently played tracks to return\"\"\"\n    limit: Int\n\n    \"\"\"The page of recently played tracks which you wish to return\"\"\"\n    page: Int\n  ): [Track]\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 9,
      "containsCycle": false,
      "polynomialLevel": 2,
      "numDefinitions": 9
    },
    {
      "name": "schema.graphql",
      "path": "typescript/lastfm/build/public/schema.graphql",
      "sha": "0334fbd0f1b935bc4cf341bf011bd66515482f72",
      "url": "https://api.github.com/repositories/172202294/contents/typescript/lastfm/build/public/schema.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/0334fbd0f1b935bc4cf341bf011bd66515482f72",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/public/schema.graphql",
      "content": "\"\"\"The type for a recording artist\"\"\"\ntype Artist {\n  \"\"\"The musicbrainz id for the artist\"\"\"\n  id: ID\n\n  \"\"\"The artists name\"\"\"\n  name: String\n\n  \"\"\"The URL to the artists Last.fm page\"\"\"\n  url: String\n\n  \"\"\"Images of the Artist\"\"\"\n  images: Images\n\n  \"\"\"The total amount of listeners for the Artist\"\"\"\n  totalListeners: String\n\n  \"\"\"The total amount of plays the artist has had\"\"\"\n  totalPlays: String\n\n  \"\"\"Tags assigned to the artist\"\"\"\n  tags: [Tag]\n\n  \"\"\"The artists biography\"\"\"\n  bio: Bio\n}\n\ntype Bio {\n  \"\"\"Date the bio was published\"\"\"\n  published: String\n\n  \"\"\"A summary of the bio\"\"\"\n  summary: String\n\n  \"\"\"The full bio\"\"\"\n  content: String\n}\n\ntype Date {\n  \"\"\"The date - Unix Time\"\"\"\n  date: String\n\n  \"\"\"The text version of the date\"\"\"\n  text: String\n}\n\ntype Images {\n  \"\"\"The smallest version of the image\"\"\"\n  small: String\n\n  \"\"\"The medium size of the image\"\"\"\n  medium: String\n\n  \"\"\"The large size of the image\"\"\"\n  large: String\n}\n\ntype LastFM {\n  \"\"\"The last.fm user\"\"\"\n  user(\n    \"\"\"\n    The last.fm username, this **must** be passed into the query else it will fail\n    \"\"\"\n    username: String!\n  ): User\n}\n\ntype Query {\n  \"\"\"Last.fm API\"\"\"\n  lastfm: LastFM\n}\n\ntype Tag {\n  \"\"\"The name of the tag\"\"\"\n  name: String\n\n  \"\"\"The url to the last.fm page for the tag\"\"\"\n  url: String\n}\n\ntype Track {\n  \"\"\"The name of the track\"\"\"\n  name: String\n\n  \"\"\"The musicbrainz id for the track\"\"\"\n  id: ID\n\n  \"\"\"The url for the last.fm page for the track\"\"\"\n  url: String\n\n  \"\"\"The date of the track\"\"\"\n  date: Date\n\n  \"\"\"The artist for the track\"\"\"\n  artist: Artist\n\n  \"\"\"Any images for the track\"\"\"\n  images: Images\n}\n\ntype User {\n  \"\"\"The users ID\"\"\"\n  id: ID\n\n  \"\"\"The users username\"\"\"\n  name: String\n\n  \"\"\"The users real name\"\"\"\n  realname: String\n\n  \"\"\"The url for the users Last.fm profile\"\"\"\n  url: String\n\n  \"\"\"The users avatar\"\"\"\n  image: Images\n\n  \"\"\"The country in which the user resides\"\"\"\n  country: String\n\n  \"\"\"The users gender\"\"\"\n  gender: String\n\n  \"\"\"Returns if the user is a Last.fm subscriber or not\"\"\"\n  subscriber: Boolean\n\n  \"\"\"The users total playcount\"\"\"\n  playcount: Int\n\n  \"\"\"The number of playlists the user has\"\"\"\n  playlists: Int\n\n  \"\"\"The date the user registered\"\"\"\n  registeredDate: Date\n\n  \"\"\"A list of the users loved tracks\"\"\"\n  lovedTracks: [Track]\n\n  \"\"\"A list of the users recently played tracks\"\"\"\n  recentTracks(\n    \"\"\"Limit the amount of recently played tracks to return\"\"\"\n    limit: Int\n\n    \"\"\"The page of recently played tracks which you wish to return\"\"\"\n    page: Int\n  ): [Track]\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 9
    },
    {
      "name": "schema.graphql",
      "path": "typescript/lastfm/schema.graphql",
      "sha": "0334fbd0f1b935bc4cf341bf011bd66515482f72",
      "url": "https://api.github.com/repositories/172202294/contents/typescript/lastfm/schema.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/0334fbd0f1b935bc4cf341bf011bd66515482f72",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/schema.graphql",
      "content": "\"\"\"The type for a recording artist\"\"\"\ntype Artist {\n  \"\"\"The musicbrainz id for the artist\"\"\"\n  id: ID\n\n  \"\"\"The artists name\"\"\"\n  name: String\n\n  \"\"\"The URL to the artists Last.fm page\"\"\"\n  url: String\n\n  \"\"\"Images of the Artist\"\"\"\n  images: Images\n\n  \"\"\"The total amount of listeners for the Artist\"\"\"\n  totalListeners: String\n\n  \"\"\"The total amount of plays the artist has had\"\"\"\n  totalPlays: String\n\n  \"\"\"Tags assigned to the artist\"\"\"\n  tags: [Tag]\n\n  \"\"\"The artists biography\"\"\"\n  bio: Bio\n}\n\ntype Bio {\n  \"\"\"Date the bio was published\"\"\"\n  published: String\n\n  \"\"\"A summary of the bio\"\"\"\n  summary: String\n\n  \"\"\"The full bio\"\"\"\n  content: String\n}\n\ntype Date {\n  \"\"\"The date - Unix Time\"\"\"\n  date: String\n\n  \"\"\"The text version of the date\"\"\"\n  text: String\n}\n\ntype Images {\n  \"\"\"The smallest version of the image\"\"\"\n  small: String\n\n  \"\"\"The medium size of the image\"\"\"\n  medium: String\n\n  \"\"\"The large size of the image\"\"\"\n  large: String\n}\n\ntype LastFM {\n  \"\"\"The last.fm user\"\"\"\n  user(\n    \"\"\"\n    The last.fm username, this **must** be passed into the query else it will fail\n    \"\"\"\n    username: String!\n  ): User\n}\n\ntype Query {\n  \"\"\"Last.fm API\"\"\"\n  lastfm: LastFM\n}\n\ntype Tag {\n  \"\"\"The name of the tag\"\"\"\n  name: String\n\n  \"\"\"The url to the last.fm page for the tag\"\"\"\n  url: String\n}\n\ntype Track {\n  \"\"\"The name of the track\"\"\"\n  name: String\n\n  \"\"\"The musicbrainz id for the track\"\"\"\n  id: ID\n\n  \"\"\"The url for the last.fm page for the track\"\"\"\n  url: String\n\n  \"\"\"The date of the track\"\"\"\n  date: Date\n\n  \"\"\"The artist for the track\"\"\"\n  artist: Artist\n\n  \"\"\"Any images for the track\"\"\"\n  images: Images\n}\n\ntype User {\n  \"\"\"The users ID\"\"\"\n  id: ID\n\n  \"\"\"The users username\"\"\"\n  name: String\n\n  \"\"\"The users real name\"\"\"\n  realname: String\n\n  \"\"\"The url for the users Last.fm profile\"\"\"\n  url: String\n\n  \"\"\"The users avatar\"\"\"\n  image: Images\n\n  \"\"\"The country in which the user resides\"\"\"\n  country: String\n\n  \"\"\"The users gender\"\"\"\n  gender: String\n\n  \"\"\"Returns if the user is a Last.fm subscriber or not\"\"\"\n  subscriber: Boolean\n\n  \"\"\"The users total playcount\"\"\"\n  playcount: Int\n\n  \"\"\"The number of playlists the user has\"\"\"\n  playlists: Int\n\n  \"\"\"The date the user registered\"\"\"\n  registeredDate: Date\n\n  \"\"\"A list of the users loved tracks\"\"\"\n  lovedTracks: [Track]\n\n  \"\"\"A list of the users recently played tracks\"\"\"\n  recentTracks(\n    \"\"\"Limit the amount of recently played tracks to return\"\"\"\n    limit: Int\n\n    \"\"\"The page of recently played tracks which you wish to return\"\"\"\n    page: Int\n  ): [Track]\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 9
    },
    {
      "name": "schema.graphql",
      "path": "js/fortune-api/schema.graphql",
      "sha": "e6db7286d8108a0586881030fc7f6f79c5210490",
      "url": "https://api.github.com/repositories/172202294/contents/js/fortune-api/schema.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/e6db7286d8108a0586881030fc7f6f79c5210490",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/fortune-api/schema.graphql",
      "content": "\"\"\"\nFortunes are a key component to a fortune cookie. Fortunes contain a message,\noften a proverb the reader can easily relate to his or her own experiences,\ngiving the illusion of a mysterious connection between self and cookie.\n\"\"\"\ntype Fortune {\n  \"\"\"ID of the Fortune\"\"\"\n  id: String\n\n  \"\"\"The fortune message\"\"\"\n  message: String\n}\n\ntype Lesson {\n  \"\"\"ID of the lesson\"\"\"\n  id: ID\n\n  \"\"\"The Chinese version of the lesson\"\"\"\n  chinese: String\n\n  \"\"\"How to pronounce\"\"\"\n  pronunciation: String\n\n  \"\"\"The English translation\"\"\"\n  english: String\n}\n\ntype Lotto {\n  \"\"\"ID of the lotto numbers\"\"\"\n  id: ID\n\n  \"\"\"Array of the lotto numbers\"\"\"\n  numbers: [Int]\n}\n\ntype Query {\n  \"\"\"\n  Returns a list of `fortune`s.\n  Args: `limit`, `skip`, `page` - can be used together, `id` to be used on its own.\n  \"\"\"\n  fortunes(\n    \"\"\"\n    limit: Integer (optional) = Quantity of fortunes to return, default 100, max 1000\n    \"\"\"\n    limit: Int\n\n    \"\"\"\n    skip: Integer (optional) = Fortunes to skip before fetching, default 0\n    \"\"\"\n    skip: Int\n\n    \"\"\"\n    page: Integer (optional) = Page number taking into account given limit, default 1\n    \"\"\"\n    page: Int\n\n    \"\"\"\n    id: String (optional) = id of the Fortune to perform action with. Will return a single entry in the array.\n    \"\"\"\n    id: ID\n  ): [Fortune]\n\n  \"\"\"\n  A lesson in simplified Chinese. Gives the user a common word or phrase in\n  English, the Chinese alphabet, and a pronunciation. After a gluttonous meal,\n  there’s no better thank you than butchering the language of the restaurant\n  staff while crunching down two or three cookies.\n  Args: `limit`, `skip`, `page` - can be used together, `id` to be used on its own.\n  \"\"\"\n  lessons(\n    \"\"\"\n    limit: Integer (optional) = Quantity of lessons to return, default 100, max 1000\n    \"\"\"\n    limit: Int\n\n    \"\"\"skip: Integer (optional) = Lessons to skip before fetching, default 0\"\"\"\n    skip: Int\n\n    \"\"\"\n    page: Integer (optional) = Page number taking into account given limit, default 1\n    \"\"\"\n    page: Int\n\n    \"\"\"\n    id: String (optional) = id of the Lesson to perform action with. Will return a single entry in the array.\n    \"\"\"\n    id: ID\n  ): [Lesson]\n\n  \"\"\"\n  Lotto numbers are 6 numbers ranging from 0 to 59, coninciding with US\n  Powerball numbers. No one has ever won the Powerball using the numbers from a\n  fortune cookie, but fortune-makers still need something to fill in the extra white-space.\n  Args: `limit`, `skip`, `page` - can be used together, `id` to be used on its own.\n  \"\"\"\n  lottos(\n    \"\"\"\n    limit: Integer (optional) = Quantity of lotto numbers to return, default 100, max 1000\n    \"\"\"\n    limit: Int\n\n    \"\"\"skip: Integer (optional) = Lessons to skip before fetching, default 0\"\"\"\n    skip: Int\n\n    \"\"\"\n    page: Integer (optional) = Page number taking into account given limit, default 1\n    \"\"\"\n    page: Int\n\n    \"\"\"\n    id: String (optional) = id of the Lotto numbers to perform action with. Will return a single entry in the array.\n    \"\"\"\n    id: ID\n  ): [Lotto]\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 4,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 4
    },
    {
      "name": "root.graphql",
      "path": "js/lastfm/src/schema/root.graphql",
      "sha": "e574d6ac5755d2a0c7a8b8d3e4667428c0fdb3e4",
      "url": "https://api.github.com/repositories/172202294/contents/js/lastfm/src/schema/root.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/e574d6ac5755d2a0c7a8b8d3e4667428c0fdb3e4",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/root.graphql",
      "content": "type Query {\n  \"\"\"\n  Last.fm Api\n  \"\"\"\n  lastfm: LastFM\n}",
      "containsQueryType": true,
      "merged": {
        "mergedContent": "# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/root.graphql:\ntype Query {\n  \"\"\"\n  Last.fm Api\n  \"\"\"\n  lastfm: LastFM\n}\n# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/lastfm/lastfm.graphql:\ntype LastFM {\n  \"The last.fm user\"\n  user(\n    \"The last.fm username, this **must** be passed into the query else it will fail\"\n    username: String!\n  ): User\n}\n# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/lastfm/user.graphql:\ntype User {\n  \"The users ID\"\n  id: ID\n  \"The users username\"\n  name: String\n  \"The users real name\"\n  realname: String\n  \"The url for the users Last.fm profile\"\n  url: String\n  \"The users avatar\"\n  image: Images\n  \"The country in which the user resides\"\n  country: String\n  \"The users gender\"\n  gender: String\n  \"Returns if the user is a Last.fm subscriber or not\"\n  subscriber: Boolean\n  \"The users total playcount\"\n  playcount: Int\n  \"The number of playlists the user has\"\n  playlists: Int\n  \"The date the user registered\"\n  registeredDate: Date\n  \"A list of the users loved tracks\"\n  lovedTracks: [Track]\n  \"A list of the users recently played tracks\"\n  recentTracks(\n    \"Limit the amount of recently played tracks to return\"\n    limit: Int,\n    \"The page of recently played tracks which you wish to return\"\n    page: Int\n  ): [Track]\n}\n# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/lastfm/image.graphql:\ntype Images {\n  \"The smallest version of the image\"\n  small: String\n  \"The medium size of the image\"\n  medium: String\n  \"The large size of the image\"\n  large: String\n}\n# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/lastfm/date.graphql:\ntype Date {\n  \"The date - Unix Time\"\n  date: String\n  \"The text version of the date\"\n  text: String\n}\n# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/lastfm/track.graphql:\ntype Track {\n  \"The name of the track\"\n  name: String\n  \"The musicbrainz id for the track\"\n  id: ID\n  \"The url for the last.fm page for the track\"\n  url: String\n  \"The date of the track\"\n  date: Date\n  \"The artist for the track\"\n  artist: Artist\n  \"Any images for the track\"\n  images: Images\n}\n# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/lastfm/artist.graphql:\n\"The type for a recording artist\"\ntype Artist {\n  \"The musicbrainz id for the artist\"\n  id: ID\n  \"The artists name\"\n  name: String\n  \"The URL to the artists Last.fm page\"\n  url: String\n  \"Images of the Artist\"\n  images: Images\n  \"The total amount of listeners for the Artist\"\n  totalListeners: String\n  \"The total amount of plays the artist has had\"\n  totalPlays: String\n  \"Tags assigned to the artist\"\n  tags: [Tag]\n  \"The artists biography\"\n  bio: Bio\n}\n# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/lastfm/tag.graphql:\ntype Tag {\n  \"The name of the tag\"\n  name: String\n  \"The url to the last.fm page for the tag\"\n  url: String\n}\n# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/lastfm/bio.graphql:\ntype Bio {\n  \"Date the bio was published\"\n  published: String\n  \"A summary of the bio\"\n  summary: String\n  \"The full bio\"\n  content: String\n}",
        "mergedPaths": [
          "js/lastfm/src/schema/lastfm/lastfm.graphql",
          "js/lastfm/src/schema/lastfm/user.graphql",
          "js/lastfm/src/schema/lastfm/image.graphql",
          "js/lastfm/src/schema/lastfm/date.graphql",
          "js/lastfm/src/schema/lastfm/track.graphql",
          "js/lastfm/src/schema/lastfm/artist.graphql",
          "js/lastfm/src/schema/lastfm/tag.graphql",
          "js/lastfm/src/schema/lastfm/bio.graphql"
        ],
        "typesDefinedByMerge": [
          "LastFM",
          "User",
          "Images",
          "Date",
          "Track",
          "Artist",
          "Tag",
          "Bio"
        ],
        "directivesDefinedByMerge": [],
        "validSchema": true,
        "contentDuplicate": true,
        "numDefinitions": 9
      },
      "validSchema": false
    },
    {
      "name": "date.graphql",
      "path": "js/lastfm/src/schema/lastfm/date.graphql",
      "sha": "9632cde2292ac21513a474238ddb9dbcf4eaa0d8",
      "url": "https://api.github.com/repositories/172202294/contents/js/lastfm/src/schema/lastfm/date.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/9632cde2292ac21513a474238ddb9dbcf4eaa0d8",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/lastfm/date.graphql",
      "content": "type Date {\n  \"The date - Unix Time\"\n  date: String\n  \"The text version of the date\"\n  text: String\n}",
      "containsQueryType": false,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 1
    },
    {
      "name": "tag.graphql",
      "path": "js/lastfm/src/schema/lastfm/tag.graphql",
      "sha": "81204e4d76727bc04a8471f3f37ee0d8ecf59558",
      "url": "https://api.github.com/repositories/172202294/contents/js/lastfm/src/schema/lastfm/tag.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/81204e4d76727bc04a8471f3f37ee0d8ecf59558",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/lastfm/tag.graphql",
      "content": "type Tag {\n  \"The name of the tag\"\n  name: String\n  \"The url to the last.fm page for the tag\"\n  url: String\n}",
      "containsQueryType": false,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 1
    },
    {
      "name": "bio.graphql",
      "path": "js/lastfm/src/schema/lastfm/bio.graphql",
      "sha": "f7dd281919687af2ced0e83d848b573a77ab06b7",
      "url": "https://api.github.com/repositories/172202294/contents/js/lastfm/src/schema/lastfm/bio.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/f7dd281919687af2ced0e83d848b573a77ab06b7",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/lastfm/bio.graphql",
      "content": "type Bio {\n  \"Date the bio was published\"\n  published: String\n  \"A summary of the bio\"\n  summary: String\n  \"The full bio\"\n  content: String\n}",
      "containsQueryType": false,
      "validSchema": true,
      "contentDuplicate": false,
      "numDefinitions": 1
    },
    {
      "name": "lastfm.graphql",
      "path": "js/lastfm/src/schema/lastfm/lastfm.graphql",
      "sha": "1c84dd9573e5ba7b3e7293274c57917bbd2923fe",
      "url": "https://api.github.com/repositories/172202294/contents/js/lastfm/src/schema/lastfm/lastfm.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/1c84dd9573e5ba7b3e7293274c57917bbd2923fe",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/lastfm/lastfm.graphql",
      "content": "type LastFM {\n  \"The last.fm user\"\n  user(\n    \"The last.fm username, this **must** be passed into the query else it will fail\"\n    username: String!\n  ): User\n}",
      "containsQueryType": false,
      "validSchema": false,
      "numDefinitions": 1
    },
    {
      "name": "image.graphql",
      "path": "js/lastfm/src/schema/lastfm/image.graphql",
      "sha": "a745dbb46dc25bd43d6840a8556d465f8e7d1aae",
      "url": "https://api.github.com/repositories/172202294/contents/js/lastfm/src/schema/lastfm/image.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/a745dbb46dc25bd43d6840a8556d465f8e7d1aae",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/lastfm/image.graphql",
      "content": "type Images {\n  \"The smallest version of the image\"\n  small: String\n  \"The medium size of the image\"\n  medium: String\n  \"The large size of the image\"\n  large: String\n}",
      "containsQueryType": false,
      "validSchema": true,
      "contentDuplicate": false,
      "numDefinitions": 1
    },
    {
      "name": "track.graphql",
      "path": "js/lastfm/src/schema/lastfm/track.graphql",
      "sha": "de792c2c8b53f775fedd86456a886b78339e2643",
      "url": "https://api.github.com/repositories/172202294/contents/js/lastfm/src/schema/lastfm/track.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/de792c2c8b53f775fedd86456a886b78339e2643",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/lastfm/track.graphql",
      "content": "type Track {\n  \"The name of the track\"\n  name: String\n  \"The musicbrainz id for the track\"\n  id: ID\n  \"The url for the last.fm page for the track\"\n  url: String\n  \"The date of the track\"\n  date: Date\n  \"The artist for the track\"\n  artist: Artist\n  \"Any images for the track\"\n  images: Images\n}",
      "containsQueryType": false,
      "validSchema": false,
      "numDefinitions": 1
    },
    {
      "name": "artist.graphql",
      "path": "js/lastfm/src/schema/lastfm/artist.graphql",
      "sha": "7eb48a1bdb098f634004fe5bfe303deba60bc4b9",
      "url": "https://api.github.com/repositories/172202294/contents/js/lastfm/src/schema/lastfm/artist.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/7eb48a1bdb098f634004fe5bfe303deba60bc4b9",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/lastfm/artist.graphql",
      "content": "\"The type for a recording artist\"\ntype Artist {\n  \"The musicbrainz id for the artist\"\n  id: ID\n  \"The artists name\"\n  name: String\n  \"The URL to the artists Last.fm page\"\n  url: String\n  \"Images of the Artist\"\n  images: Images\n  \"The total amount of listeners for the Artist\"\n  totalListeners: String\n  \"The total amount of plays the artist has had\"\n  totalPlays: String\n  \"Tags assigned to the artist\"\n  tags: [Tag]\n  \"The artists biography\"\n  bio: Bio\n}",
      "containsQueryType": false,
      "validSchema": false,
      "numDefinitions": 1
    },
    {
      "name": "user.graphql",
      "path": "js/lastfm/src/schema/lastfm/user.graphql",
      "sha": "4d21c12fbaead548c29bbb1b4028341e10f0d4f0",
      "url": "https://api.github.com/repositories/172202294/contents/js/lastfm/src/schema/lastfm/user.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/4d21c12fbaead548c29bbb1b4028341e10f0d4f0",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/js/lastfm/src/schema/lastfm/user.graphql",
      "content": "type User {\n  \"The users ID\"\n  id: ID\n  \"The users username\"\n  name: String\n  \"The users real name\"\n  realname: String\n  \"The url for the users Last.fm profile\"\n  url: String\n  \"The users avatar\"\n  image: Images\n  \"The country in which the user resides\"\n  country: String\n  \"The users gender\"\n  gender: String\n  \"Returns if the user is a Last.fm subscriber or not\"\n  subscriber: Boolean\n  \"The users total playcount\"\n  playcount: Int\n  \"The number of playlists the user has\"\n  playlists: Int\n  \"The date the user registered\"\n  registeredDate: Date\n  \"A list of the users loved tracks\"\n  lovedTracks: [Track]\n  \"A list of the users recently played tracks\"\n  recentTracks(\n    \"Limit the amount of recently played tracks to return\"\n    limit: Int,\n    \"The page of recently played tracks which you wish to return\"\n    page: Int\n  ): [Track]\n}",
      "containsQueryType": false,
      "validSchema": false,
      "numDefinitions": 1
    },
    {
      "name": "root.graphql",
      "path": "typescript/lastfm/build/schema/root.graphql",
      "sha": "107762d89e9f5893042a377ee1353ea67ef43573",
      "url": "https://api.github.com/repositories/172202294/contents/typescript/lastfm/build/schema/root.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/107762d89e9f5893042a377ee1353ea67ef43573",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/root.graphql",
      "content": "type Query {\n  \"\"\"\n  Last.fm API\n  \"\"\"\n  lastfm: LastFM\n}",
      "containsQueryType": true,
      "merged": {
        "mergedContent": "# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/root.graphql:\ntype Query {\n  \"\"\"\n  Last.fm API\n  \"\"\"\n  lastfm: LastFM\n}\n# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/lastfm/lastfm.graphql:\ntype LastFM {\n  \"The last.fm user\"\n  user(\n    \"The last.fm username, this **must** be passed into the query else it will fail\"\n    username: String!\n  ): User\n}\n# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/lastfm/user.graphql:\ntype User {\n  \"The users ID\"\n  id: ID\n  \"The users username\"\n  name: String\n  \"The users real name\"\n  realname: String\n  \"The url for the users Last.fm profile\"\n  url: String\n  \"The users avatar\"\n  image: Images\n  \"The country in which the user resides\"\n  country: String\n  \"The users gender\"\n  gender: String\n  \"Returns if the user is a Last.fm subscriber or not\"\n  subscriber: Boolean\n  \"The users total playcount\"\n  playcount: Int\n  \"The number of playlists the user has\"\n  playlists: Int\n  \"The date the user registered\"\n  registeredDate: Date\n  \"A list of the users loved tracks\"\n  lovedTracks: [Track]\n  \"A list of the users recently played tracks\"\n  recentTracks(\n    \"Limit the amount of recently played tracks to return\"\n    limit: Int,\n    \"The page of recently played tracks which you wish to return\"\n    page: Int\n  ): [Track]\n}\n# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/lastfm/image.graphql:\ntype Images {\n  \"The smallest version of the image\"\n  small: String\n  \"The medium size of the image\"\n  medium: String\n  \"The large size of the image\"\n  large: String\n}\n# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/lastfm/date.graphql:\ntype Date {\n  \"The date - Unix Time\"\n  date: String\n  \"The text version of the date\"\n  text: String\n}\n# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/lastfm/track.graphql:\ntype Track {\n  \"The name of the track\"\n  name: String\n  \"The musicbrainz id for the track\"\n  id: ID\n  \"The url for the last.fm page for the track\"\n  url: String\n  \"The date of the track\"\n  date: Date\n  \"The artist for the track\"\n  artist: Artist\n  \"Any images for the track\"\n  images: Images\n}\n# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/lastfm/artist.graphql:\n\"The type for a recording artist\"\ntype Artist {\n  \"The musicbrainz id for the artist\"\n  id: ID\n  \"The artists name\"\n  name: String\n  \"The URL to the artists Last.fm page\"\n  url: String\n  \"Images of the Artist\"\n  images: Images\n  \"The total amount of listeners for the Artist\"\n  totalListeners: String\n  \"The total amount of plays the artist has had\"\n  totalPlays: String\n  \"Tags assigned to the artist\"\n  tags: [Tag]\n  \"The artists biography\"\n  bio: Bio\n}\n# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/lastfm/tag.graphql:\ntype Tag {\n  \"The name of the tag\"\n  name: String\n  \"The url to the last.fm page for the tag\"\n  url: String\n}\n# https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/lastfm/bio.graphql:\ntype Bio {\n  \"Date the bio was published\"\n  published: String\n  \"A summary of the bio\"\n  summary: String\n  \"The full bio\"\n  content: String\n}",
        "mergedPaths": [
          "typescript/lastfm/build/schema/lastfm/lastfm.graphql",
          "typescript/lastfm/build/schema/lastfm/user.graphql",
          "typescript/lastfm/build/schema/lastfm/image.graphql",
          "typescript/lastfm/build/schema/lastfm/date.graphql",
          "typescript/lastfm/build/schema/lastfm/track.graphql",
          "typescript/lastfm/build/schema/lastfm/artist.graphql",
          "typescript/lastfm/build/schema/lastfm/tag.graphql",
          "typescript/lastfm/build/schema/lastfm/bio.graphql"
        ],
        "typesDefinedByMerge": [
          "LastFM",
          "User",
          "Images",
          "Date",
          "Track",
          "Artist",
          "Tag",
          "Bio"
        ],
        "directivesDefinedByMerge": [],
        "validSchema": true,
        "contentDuplicate": true,
        "numDefinitions": 9
      },
      "validSchema": false
    },
    {
      "name": "date.graphql",
      "path": "typescript/lastfm/build/schema/lastfm/date.graphql",
      "sha": "9632cde2292ac21513a474238ddb9dbcf4eaa0d8",
      "url": "https://api.github.com/repositories/172202294/contents/typescript/lastfm/build/schema/lastfm/date.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/9632cde2292ac21513a474238ddb9dbcf4eaa0d8",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/lastfm/date.graphql",
      "content": "type Date {\n  \"The date - Unix Time\"\n  date: String\n  \"The text version of the date\"\n  text: String\n}",
      "containsQueryType": false,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 1
    },
    {
      "name": "tag.graphql",
      "path": "typescript/lastfm/build/schema/lastfm/tag.graphql",
      "sha": "81204e4d76727bc04a8471f3f37ee0d8ecf59558",
      "url": "https://api.github.com/repositories/172202294/contents/typescript/lastfm/build/schema/lastfm/tag.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/81204e4d76727bc04a8471f3f37ee0d8ecf59558",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/lastfm/tag.graphql",
      "content": "type Tag {\n  \"The name of the tag\"\n  name: String\n  \"The url to the last.fm page for the tag\"\n  url: String\n}",
      "containsQueryType": false,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 1
    },
    {
      "name": "bio.graphql",
      "path": "typescript/lastfm/build/schema/lastfm/bio.graphql",
      "sha": "f7dd281919687af2ced0e83d848b573a77ab06b7",
      "url": "https://api.github.com/repositories/172202294/contents/typescript/lastfm/build/schema/lastfm/bio.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/f7dd281919687af2ced0e83d848b573a77ab06b7",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/lastfm/bio.graphql",
      "content": "type Bio {\n  \"Date the bio was published\"\n  published: String\n  \"A summary of the bio\"\n  summary: String\n  \"The full bio\"\n  content: String\n}",
      "containsQueryType": false,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 1
    },
    {
      "name": "lastfm.graphql",
      "path": "typescript/lastfm/build/schema/lastfm/lastfm.graphql",
      "sha": "1c84dd9573e5ba7b3e7293274c57917bbd2923fe",
      "url": "https://api.github.com/repositories/172202294/contents/typescript/lastfm/build/schema/lastfm/lastfm.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/1c84dd9573e5ba7b3e7293274c57917bbd2923fe",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/lastfm/lastfm.graphql",
      "content": "type LastFM {\n  \"The last.fm user\"\n  user(\n    \"The last.fm username, this **must** be passed into the query else it will fail\"\n    username: String!\n  ): User\n}",
      "containsQueryType": false,
      "validSchema": false,
      "numDefinitions": 1
    },
    {
      "name": "image.graphql",
      "path": "typescript/lastfm/build/schema/lastfm/image.graphql",
      "sha": "a745dbb46dc25bd43d6840a8556d465f8e7d1aae",
      "url": "https://api.github.com/repositories/172202294/contents/typescript/lastfm/build/schema/lastfm/image.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/a745dbb46dc25bd43d6840a8556d465f8e7d1aae",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/lastfm/image.graphql",
      "content": "type Images {\n  \"The smallest version of the image\"\n  small: String\n  \"The medium size of the image\"\n  medium: String\n  \"The large size of the image\"\n  large: String\n}",
      "containsQueryType": false,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 1
    },
    {
      "name": "track.graphql",
      "path": "typescript/lastfm/build/schema/lastfm/track.graphql",
      "sha": "de792c2c8b53f775fedd86456a886b78339e2643",
      "url": "https://api.github.com/repositories/172202294/contents/typescript/lastfm/build/schema/lastfm/track.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/de792c2c8b53f775fedd86456a886b78339e2643",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/lastfm/track.graphql",
      "content": "type Track {\n  \"The name of the track\"\n  name: String\n  \"The musicbrainz id for the track\"\n  id: ID\n  \"The url for the last.fm page for the track\"\n  url: String\n  \"The date of the track\"\n  date: Date\n  \"The artist for the track\"\n  artist: Artist\n  \"Any images for the track\"\n  images: Images\n}",
      "containsQueryType": false,
      "validSchema": false,
      "numDefinitions": 1
    },
    {
      "name": "artist.graphql",
      "path": "typescript/lastfm/build/schema/lastfm/artist.graphql",
      "sha": "7eb48a1bdb098f634004fe5bfe303deba60bc4b9",
      "url": "https://api.github.com/repositories/172202294/contents/typescript/lastfm/build/schema/lastfm/artist.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/7eb48a1bdb098f634004fe5bfe303deba60bc4b9",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/lastfm/artist.graphql",
      "content": "\"The type for a recording artist\"\ntype Artist {\n  \"The musicbrainz id for the artist\"\n  id: ID\n  \"The artists name\"\n  name: String\n  \"The URL to the artists Last.fm page\"\n  url: String\n  \"Images of the Artist\"\n  images: Images\n  \"The total amount of listeners for the Artist\"\n  totalListeners: String\n  \"The total amount of plays the artist has had\"\n  totalPlays: String\n  \"Tags assigned to the artist\"\n  tags: [Tag]\n  \"The artists biography\"\n  bio: Bio\n}",
      "containsQueryType": false,
      "validSchema": false,
      "numDefinitions": 1
    },
    {
      "name": "user.graphql",
      "path": "typescript/lastfm/build/schema/lastfm/user.graphql",
      "sha": "4d21c12fbaead548c29bbb1b4028341e10f0d4f0",
      "url": "https://api.github.com/repositories/172202294/contents/typescript/lastfm/build/schema/lastfm/user.graphql?ref=5025e22570d72a1911fe7196a4337627d0554ae2",
      "git_url": "https://api.github.com/repositories/172202294/git/blobs/4d21c12fbaead548c29bbb1b4028341e10f0d4f0",
      "html_url": "https://github.com/matt-riley/graphql_examples/blob/5025e22570d72a1911fe7196a4337627d0554ae2/typescript/lastfm/build/schema/lastfm/user.graphql",
      "content": "type User {\n  \"The users ID\"\n  id: ID\n  \"The users username\"\n  name: String\n  \"The users real name\"\n  realname: String\n  \"The url for the users Last.fm profile\"\n  url: String\n  \"The users avatar\"\n  image: Images\n  \"The country in which the user resides\"\n  country: String\n  \"The users gender\"\n  gender: String\n  \"Returns if the user is a Last.fm subscriber or not\"\n  subscriber: Boolean\n  \"The users total playcount\"\n  playcount: Int\n  \"The number of playlists the user has\"\n  playlists: Int\n  \"The date the user registered\"\n  registeredDate: Date\n  \"A list of the users loved tracks\"\n  lovedTracks: [Track]\n  \"A list of the users recently played tracks\"\n  recentTracks(\n    \"Limit the amount of recently played tracks to return\"\n    limit: Int,\n    \"The page of recently played tracks which you wish to return\"\n    page: Int\n  ): [Track]\n}",
      "containsQueryType": false,
      "validSchema": false,
      "numDefinitions": 1
    }
  ],
  "metrics": {
    "created_at": "2019-02-23T10:41:14Z",
    "updated_at": "2019-07-18T23:05:09Z",
    "pushed_at": "2019-07-19T06:11:11Z",
    "issues": 1,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": false,
    "license": "mit",
    "pull_requests": 295,
    "pull_requests_open": 5,
    "pull_requests_closed": 8,
    "pull_requests_merged": 282,
    "releases": 0,
    "stargazers": 1
  }
}