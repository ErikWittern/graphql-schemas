{
  "repo_name": "prisma",
  "repo_full_name": "devmare/prisma",
  "repo_owner": "devmare",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "generated-schema.graphql",
      "path": "examples/data-modelling/generated-schema.graphql",
      "sha": "4925d58e3efc1f40e221ff31bcd513d098801436",
      "url": "https://api.github.com/repositories/133720126/contents/examples/data-modelling/generated-schema.graphql?ref=b7a6dd1f363a0185e8a8ea002074fbf1806894a5",
      "git_url": "https://api.github.com/repositories/133720126/git/blobs/4925d58e3efc1f40e221ff31bcd513d098801436",
      "html_url": "https://github.com/devmare/prisma/blob/b7a6dd1f363a0185e8a8ea002074fbf1806894a5/examples/data-modelling/generated-schema.graphql",
      "content": "# source: http://localhost:4466/data-modelling\n# timestamp: Mon May 14 2018 15:03:19 GMT+0530 (IST)\n\ntype AggregateLocation {\n  count: Int!\n}\n\ntype AggregateTweet {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\nscalar DateTime\n\ntype Location {\n  latitude: Float!\n  longitude: Float!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LocationConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LocationEdge]!\n  aggregate: AggregateLocation!\n}\n\ninput LocationCreateInput {\n  latitude: Float!\n  longitude: Float!\n}\n\ninput LocationCreateOneInput {\n  create: LocationCreateInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LocationEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Location!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum LocationOrderByInput {\n  latitude_ASC\n  latitude_DESC\n  longitude_ASC\n  longitude_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype LocationPreviousValues {\n  latitude: Float!\n  longitude: Float!\n}\n\ntype LocationSubscriptionPayload {\n  mutation: MutationType!\n  node: Location\n  updatedFields: [String!]\n  previousValues: LocationPreviousValues\n}\n\ninput LocationSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [LocationSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [LocationSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [LocationSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LocationWhereInput\n}\n\ninput LocationUpdateDataInput {\n  latitude: Float\n  longitude: Float\n}\n\ninput LocationUpdateInput {\n  latitude: Float\n  longitude: Float\n}\n\ninput LocationUpdateOneInput {\n  create: LocationCreateInput\n  delete: Boolean\n  update: LocationUpdateDataInput\n  upsert: LocationUpsertNestedInput\n}\n\ninput LocationUpsertNestedInput {\n  update: LocationUpdateDataInput!\n  create: LocationCreateInput!\n}\n\ninput LocationWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [LocationWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [LocationWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [LocationWhereInput!]\n  latitude: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  latitude_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  latitude_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  latitude_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  latitude_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  latitude_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  latitude_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  latitude_gte: Float\n  longitude: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  longitude_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  longitude_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  longitude_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  longitude_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  longitude_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  longitude_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  longitude_gte: Float\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createTweet(data: TweetCreateInput!): Tweet!\n  createUser(data: UserCreateInput!): User!\n  createLocation(data: LocationCreateInput!): Location!\n  updateTweet(data: TweetUpdateInput!, where: TweetWhereUniqueInput!): Tweet\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteTweet(where: TweetWhereUniqueInput!): Tweet\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertTweet(where: TweetWhereUniqueInput!, create: TweetCreateInput!, update: TweetUpdateInput!): Tweet!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyTweets(data: TweetUpdateInput!, where: TweetWhereInput): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  updateManyLocations(data: LocationUpdateInput!, where: LocationWhereInput): BatchPayload!\n  deleteManyTweets(where: TweetWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyLocations(where: LocationWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  tweets(where: TweetWhereInput, orderBy: TweetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tweet]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  locations(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Location]!\n  tweet(where: TweetWhereUniqueInput!): Tweet\n  user(where: UserWhereUniqueInput!): User\n  tweetsConnection(where: TweetWhereInput, orderBy: TweetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TweetConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  locationsConnection(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LocationConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  tweet(where: TweetSubscriptionWhereInput): TweetSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  location(where: LocationSubscriptionWhereInput): LocationSubscriptionPayload\n}\n\ntype Tweet implements Node {\n  id: ID!\n  createdAt: DateTime!\n  text: String!\n  owner(where: UserWhereInput): User!\n  location(where: LocationWhereInput): Location!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TweetConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TweetEdge]!\n  aggregate: AggregateTweet!\n}\n\ninput TweetCreateInput {\n  text: String!\n  owner: UserCreateOneWithoutTweetsInput!\n  location: LocationCreateOneInput!\n}\n\ninput TweetCreateManyWithoutOwnerInput {\n  create: [TweetCreateWithoutOwnerInput!]\n  connect: [TweetWhereUniqueInput!]\n}\n\ninput TweetCreateWithoutOwnerInput {\n  text: String!\n  location: LocationCreateOneInput!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TweetEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Tweet!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum TweetOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  text_ASC\n  text_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype TweetPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  text: String!\n}\n\ntype TweetSubscriptionPayload {\n  mutation: MutationType!\n  node: Tweet\n  updatedFields: [String!]\n  previousValues: TweetPreviousValues\n}\n\ninput TweetSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TweetSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TweetSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TweetSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TweetWhereInput\n}\n\ninput TweetUpdateInput {\n  text: String\n  owner: UserUpdateOneWithoutTweetsInput\n  location: LocationUpdateOneInput\n}\n\ninput TweetUpdateManyWithoutOwnerInput {\n  create: [TweetCreateWithoutOwnerInput!]\n  connect: [TweetWhereUniqueInput!]\n  disconnect: [TweetWhereUniqueInput!]\n  delete: [TweetWhereUniqueInput!]\n  update: [TweetUpdateWithWhereUniqueWithoutOwnerInput!]\n  upsert: [TweetUpsertWithWhereUniqueWithoutOwnerInput!]\n}\n\ninput TweetUpdateWithoutOwnerDataInput {\n  text: String\n  location: LocationUpdateOneInput\n}\n\ninput TweetUpdateWithWhereUniqueWithoutOwnerInput {\n  where: TweetWhereUniqueInput!\n  data: TweetUpdateWithoutOwnerDataInput!\n}\n\ninput TweetUpsertWithWhereUniqueWithoutOwnerInput {\n  where: TweetWhereUniqueInput!\n  update: TweetUpdateWithoutOwnerDataInput!\n  create: TweetCreateWithoutOwnerInput!\n}\n\ninput TweetWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TweetWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TweetWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TweetWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  text: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  text_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  text_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  text_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  text_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  text_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  text_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  text_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  text_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  text_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  text_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  text_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  text_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  text_not_ends_with: String\n  owner: UserWhereInput\n  location: LocationWhereInput\n}\n\ninput TweetWhereUniqueInput {\n  id: ID\n}\n\ntype User implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  handle: String!\n  name: String!\n  tweets(where: TweetWhereInput, orderBy: TweetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tweet!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  handle: String!\n  name: String\n  tweets: TweetCreateManyWithoutOwnerInput\n}\n\ninput UserCreateOneWithoutTweetsInput {\n  create: UserCreateWithoutTweetsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutTweetsInput {\n  handle: String!\n  name: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  handle_ASC\n  handle_DESC\n  name_ASC\n  name_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  handle: String!\n  name: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  handle: String\n  name: String\n  tweets: TweetUpdateManyWithoutOwnerInput\n}\n\ninput UserUpdateOneWithoutTweetsInput {\n  create: UserCreateWithoutTweetsInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutTweetsDataInput\n  upsert: UserUpsertWithoutTweetsInput\n}\n\ninput UserUpdateWithoutTweetsDataInput {\n  handle: String\n  name: String\n}\n\ninput UserUpsertWithoutTweetsInput {\n  update: UserUpdateWithoutTweetsDataInput!\n  create: UserCreateWithoutTweetsInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  handle: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  handle_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  handle_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  handle_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  handle_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  handle_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  handle_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  handle_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  handle_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  handle_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  handle_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  handle_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  handle_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  handle_not_ends_with: String\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  tweets_every: TweetWhereInput\n  tweets_some: TweetWhereInput\n  tweets_none: TweetWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  handle: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 59
    },
    {
      "name": "prisma.graphql",
      "path": "examples/archive/resolver-forwarding/src/generated/prisma.graphql",
      "sha": "166b036be5bcbd97a351ccc9d3b13a09d612a899",
      "url": "https://api.github.com/repositories/133720126/contents/examples/archive/resolver-forwarding/src/generated/prisma.graphql?ref=b7a6dd1f363a0185e8a8ea002074fbf1806894a5",
      "git_url": "https://api.github.com/repositories/133720126/git/blobs/166b036be5bcbd97a351ccc9d3b13a09d612a899",
      "html_url": "https://github.com/devmare/prisma/blob/b7a6dd1f363a0185e8a8ea002074fbf1806894a5/examples/archive/resolver-forwarding/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Post implements Node {\n  id: ID!\n  title: String!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregatePost {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar Long\n\ntype Mutation {\n  createPost(data: PostCreateInput!): Post!\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  deletePost(where: PostWhereUniqueInput!): Post\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  updateManyPosts(data: PostUpdateInput!, where: PostWhereInput!): BatchPayload!\n  deleteManyPosts(where: PostWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype PostConnection {\n  pageInfo: PageInfo!\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  title: String!\n}\n\ntype PostEdge {\n  node: Post!\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  title_ASC\n  title_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  title: String!\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  AND: [PostSubscriptionWhereInput!]\n  OR: [PostSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n}\n\ninput PostUpdateInput {\n  title: String\n}\n\ninput PostWhereInput {\n  AND: [PostWhereInput!]\n  OR: [PostWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  title: String\n  title_not: String\n  title_in: [String!]\n  title_not_in: [String!]\n  title_lt: String\n  title_lte: String\n  title_gt: String\n  title_gte: String\n  title_contains: String\n  title_not_contains: String\n  title_starts_with: String\n  title_not_starts_with: String\n  title_ends_with: String\n  title_not_ends_with: String\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  post(where: PostWhereUniqueInput!): Post\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 20
    },
    {
      "name": "prisma.graphql",
      "path": "examples/archive/subscriptions/src/generated/prisma.graphql",
      "sha": "c23f3aa2719e4a1255911318300f2cc621f52f75",
      "url": "https://api.github.com/repositories/133720126/contents/examples/archive/subscriptions/src/generated/prisma.graphql?ref=b7a6dd1f363a0185e8a8ea002074fbf1806894a5",
      "git_url": "https://api.github.com/repositories/133720126/git/blobs/c23f3aa2719e4a1255911318300f2cc621f52f75",
      "html_url": "https://github.com/devmare/prisma/blob/b7a6dd1f363a0185e8a8ea002074fbf1806894a5/examples/archive/subscriptions/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"GRAPHCOOL DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Post implements Node {\n  id: ID!\n  title: String!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregatePost {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar Long\n\ntype Mutation {\n  createPost(data: PostCreateInput!): Post!\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  deletePost(where: PostWhereUniqueInput!): Post\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  updateManyPosts(data: PostUpdateInput!, where: PostWhereInput!): BatchPayload!\n  deleteManyPosts(where: PostWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype PostConnection {\n  pageInfo: PageInfo!\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  title: String!\n}\n\ntype PostEdge {\n  node: Post!\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  title_ASC\n  title_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  title: String!\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  AND: [PostSubscriptionWhereInput!]\n  OR: [PostSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n}\n\ninput PostUpdateInput {\n  title: String\n}\n\ninput PostWhereInput {\n  AND: [PostWhereInput!]\n  OR: [PostWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  title: String\n  title_not: String\n  title_in: [String!]\n  title_not_in: [String!]\n  title_lt: String\n  title_lte: String\n  title_gt: String\n  title_gte: String\n  title_contains: String\n  title_not_contains: String\n  title_starts_with: String\n  title_not_starts_with: String\n  title_ends_with: String\n  title_not_ends_with: String\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  post(where: PostWhereUniqueInput!): Post\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 20
    },
    {
      "name": "prisma.graphql",
      "path": "examples/archive/auth/src/generated/prisma.graphql",
      "sha": "7f2f2c117b8f21ffd829185976cd67cb28561f8f",
      "url": "https://api.github.com/repositories/133720126/contents/examples/archive/auth/src/generated/prisma.graphql?ref=b7a6dd1f363a0185e8a8ea002074fbf1806894a5",
      "git_url": "https://api.github.com/repositories/133720126/git/blobs/7f2f2c117b8f21ffd829185976cd67cb28561f8f",
      "html_url": "https://github.com/devmare/prisma/blob/b7a6dd1f363a0185e8a8ea002074fbf1806894a5/examples/archive/auth/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype User implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  email: String!\n  password: String!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar DateTime\n\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!\n  deleteManyUsers(where: UserWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  user(where: UserWhereUniqueInput!): User\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  password: String!\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  email: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  email: String\n  password: String\n}\n\ninput UserWhereInput {\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 21
    },
    {
      "name": "cluster.graphql",
      "path": "cli/packages/prisma-cli-core/src/test/cluster.graphql",
      "sha": "6cc1bc2dc4c7dc05e5058b0999bc9f9a0598e222",
      "url": "https://api.github.com/repositories/133720126/contents/cli/packages/prisma-cli-core/src/test/cluster.graphql?ref=b7a6dd1f363a0185e8a8ea002074fbf1806894a5",
      "git_url": "https://api.github.com/repositories/133720126/git/blobs/6cc1bc2dc4c7dc05e5058b0999bc9f9a0598e222",
      "html_url": "https://github.com/devmare/prisma/blob/b7a6dd1f363a0185e8a8ea002074fbf1806894a5/cli/packages/prisma-cli-core/src/test/cluster.graphql",
      "content": "input AddProjectInput {\n  name: String!\n  stage: String!\n  secrets: [String!]\n  clientMutationId: String\n}\n\ntype AddProjectPayload {\n  project: Project\n  clientMutationId: String\n}\n\n# Information about the deployed cluster\ntype ClusterInfo {\n  version: String!\n  commit: String!\n}\n\ntype CreateEnum implements MigrationStep {\n  name: String!\n  values: [String!]!\n  type: String!\n}\n\ntype CreateField implements MigrationStep {\n  model: String!\n  name: String!\n  typeName: String!\n  isRequired: Boolean!\n  isList: Boolean!\n  unique: Boolean!\n  relation: String\n  default: String\n  enum: String\n  type: String!\n}\n\ntype CreateModel implements MigrationStep {\n  name: String!\n  type: String!\n}\n\ntype CreateRelation implements MigrationStep {\n  name: String!\n  leftModel: String!\n  rightModel: String!\n  type: String!\n}\n\nscalar DateTime\n\ntype DeleteEnum implements MigrationStep {\n  name: String!\n  type: String!\n}\n\ntype DeleteField implements MigrationStep {\n  model: String!\n  name: String!\n  type: String!\n}\n\ntype DeleteModel implements MigrationStep {\n  name: String!\n  type: String!\n}\n\ninput DeleteProjectInput {\n  name: String!\n  stage: String!\n  clientMutationId: String\n}\n\ntype DeleteProjectPayload {\n  project: Project\n  clientMutationId: String\n}\n\ntype DeleteRelation implements MigrationStep {\n  name: String!\n  type: String!\n}\n\ninput DeployInput {\n  name: String!\n  stage: String!\n  types: String!\n  dryRun: Boolean\n  secrets: [String!]\n  subscriptions: [FunctionInput!]\n  force: Boolean\n  clientMutationId: String\n}\n\ntype DeployPayload {\n  errors: [SchemaError!]!\n  migration: Migration\n  warnings: [SchemaWarning!]!\n  clientMutationId: String\n}\n\ninput FunctionInput {\n  name: String!\n  query: String!\n  url: String!\n  headers: [HeaderInput!]!\n}\n\ninput HeaderInput {\n  name: String!\n  value: String!\n}\n\n# This is a migration\ntype Migration {\n  projectId: String!\n  revision: Int!\n  status: String!\n  applied: Int!\n  rolledBack: Int!\n  steps: [MigrationStep!]!\n  errors: [String!]!\n  startedAt: DateTime\n  finishedAt: DateTime\n}\n\n# This is a migration step.\ninterface MigrationStep {\n  type: String!\n}\n\ntype Mutation {\n  deploy(input: DeployInput!): DeployPayload\n  addProject(input: AddProjectInput!): AddProjectPayload\n  deleteProject(input: DeleteProjectInput!): DeleteProjectPayload\n}\n\n# This is a project\ntype Project {\n  metricKey: String!\n  name: String!\n  stage: String!\n}\n\ntype Query {\n  # Shows the status of the next migration in line to be applied to the project.\n  # If no such migration exists, it shows the last applied migration.\n  migrationStatus(name: String!, stage: String!): Migration!\n\n  # Shows all projects the caller has access to.\n  listProjects: [Project!]!\n\n  # Shows all migrations for the project. Debug query, will likely be removed in the future.\n  listMigrations(name: String!, stage: String!): [Migration!]!\n\n  # Gets a project by name and stage.\n  project(name: String!, stage: String!): Project!\n\n  # Information about the cluster\n  clusterInfo: ClusterInfo!\n\n  # generates a token for the given project\n  generateProjectToken(name: String!, stage: String!): String!\n}\n\n# An error that occurred while validating the schema.\ntype SchemaError {\n  type: String!\n  field: String\n  description: String!\n}\n\n# A warning created while validating the schema against existing data.\ntype SchemaWarning {\n  type: String!\n  field: String\n  description: String!\n}\n\ntype UpdateEnum implements MigrationStep {\n  name: String!\n  newName: String\n  values: [String!]\n  type: String!\n}\n\ntype UpdateField implements MigrationStep {\n  model: String!\n  name: String!\n  newName: String\n  typeName: String\n  isRequired: Boolean\n  isList: Boolean\n  unique: Boolean\n  relation: String\n  default: String\n  enum: String\n  type: String!\n}\n\ntype UpdateModel implements MigrationStep {\n  name: String!\n  newName: String!\n  type: String!\n}\n\ntype UpdateRelation implements MigrationStep {\n  name: String!\n  newName: String\n  modelAId: String\n  modelBId: String\n  type: String!\n}\n\ntype UpdateSecrets implements MigrationStep {\n  message: String!\n  type: String!\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 30
    },
    {
      "name": "schema.graphql",
      "path": "examples/archive/auth/src/schema.graphql",
      "sha": "44e8ee827ece56893cc62f5a7008bb9bf664d200",
      "url": "https://api.github.com/repositories/133720126/contents/examples/archive/auth/src/schema.graphql?ref=b7a6dd1f363a0185e8a8ea002074fbf1806894a5",
      "git_url": "https://api.github.com/repositories/133720126/git/blobs/44e8ee827ece56893cc62f5a7008bb9bf664d200",
      "html_url": "https://github.com/devmare/prisma/blob/b7a6dd1f363a0185e8a8ea002074fbf1806894a5/examples/archive/auth/src/schema.graphql",
      "content": "type Query {\n  me: User\n}\n\ntype Mutation {\n  signup(email: String!, password: String!): AuthPayload!\n  login(email: String!, password: String!): AuthPayload!\n}\n\ntype AuthPayload {\n  token: String!\n  user: User!\n}\n\n# The `User` type is a reduced version (\"mask\") of the `User` type from the data model (and database schema).\n# It does not expose the `createdAt`, `updatedAt` and `password` fields.\ntype User {\n  id: ID!\n  email: String!\n  name: String!\n}",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 4
    },
    {
      "name": "prisma.graphql",
      "path": "examples/archive/file-handling-s3/src/generated/prisma.graphql",
      "sha": "652cf02065fb7137458c2d3715822283fdaad62e",
      "url": "https://api.github.com/repositories/133720126/contents/examples/archive/file-handling-s3/src/generated/prisma.graphql?ref=b7a6dd1f363a0185e8a8ea002074fbf1806894a5",
      "git_url": "https://api.github.com/repositories/133720126/git/blobs/652cf02065fb7137458c2d3715822283fdaad62e",
      "html_url": "https://github.com/devmare/prisma/blob/b7a6dd1f363a0185e8a8ea002074fbf1806894a5/examples/archive/file-handling-s3/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype File implements Node {\n  id: ID!\n  name: String!\n  size: Int!\n  secret: String!\n  contentType: String!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  url: String!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateFile {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar DateTime\n\ntype FileConnection {\n  pageInfo: PageInfo!\n  edges: [FileEdge]!\n  aggregate: AggregateFile!\n}\n\ninput FileCreateInput {\n  name: String!\n  size: Int!\n  secret: String!\n  contentType: String!\n  url: String!\n}\n\ntype FileEdge {\n  node: File!\n  cursor: String!\n}\n\nenum FileOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  size_ASC\n  size_DESC\n  secret_ASC\n  secret_DESC\n  contentType_ASC\n  contentType_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  url_ASC\n  url_DESC\n}\n\ntype FilePreviousValues {\n  id: ID!\n  name: String!\n  size: Int!\n  secret: String!\n  contentType: String!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  url: String!\n}\n\ntype FileSubscriptionPayload {\n  mutation: MutationType!\n  node: File\n  updatedFields: [String!]\n  previousValues: FilePreviousValues\n}\n\ninput FileSubscriptionWhereInput {\n  AND: [FileSubscriptionWhereInput!]\n  OR: [FileSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: FileWhereInput\n}\n\ninput FileUpdateInput {\n  name: String\n  size: Int\n  secret: String\n  contentType: String\n  url: String\n}\n\ninput FileWhereInput {\n  AND: [FileWhereInput!]\n  OR: [FileWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  size: Int\n  size_not: Int\n  size_in: [Int!]\n  size_not_in: [Int!]\n  size_lt: Int\n  size_lte: Int\n  size_gt: Int\n  size_gte: Int\n  secret: String\n  secret_not: String\n  secret_in: [String!]\n  secret_not_in: [String!]\n  secret_lt: String\n  secret_lte: String\n  secret_gt: String\n  secret_gte: String\n  secret_contains: String\n  secret_not_contains: String\n  secret_starts_with: String\n  secret_not_starts_with: String\n  secret_ends_with: String\n  secret_not_ends_with: String\n  contentType: String\n  contentType_not: String\n  contentType_in: [String!]\n  contentType_not_in: [String!]\n  contentType_lt: String\n  contentType_lte: String\n  contentType_gt: String\n  contentType_gte: String\n  contentType_contains: String\n  contentType_not_contains: String\n  contentType_starts_with: String\n  contentType_not_starts_with: String\n  contentType_ends_with: String\n  contentType_not_ends_with: String\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  url: String\n  url_not: String\n  url_in: [String!]\n  url_not_in: [String!]\n  url_lt: String\n  url_lte: String\n  url_gt: String\n  url_gte: String\n  url_contains: String\n  url_not_contains: String\n  url_starts_with: String\n  url_not_starts_with: String\n  url_ends_with: String\n  url_not_ends_with: String\n}\n\ninput FileWhereUniqueInput {\n  id: ID\n  secret: String\n  url: String\n}\n\nscalar Long\n\ntype Mutation {\n  createFile(data: FileCreateInput!): File!\n  updateFile(data: FileUpdateInput!, where: FileWhereUniqueInput!): File\n  deleteFile(where: FileWhereUniqueInput!): File\n  upsertFile(where: FileWhereUniqueInput!, create: FileCreateInput!, update: FileUpdateInput!): File!\n  updateManyFiles(data: FileUpdateInput!, where: FileWhereInput!): BatchPayload!\n  deleteManyFiles(where: FileWhereInput!): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  files(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [File]!\n  file(where: FileWhereUniqueInput!): File\n  filesConnection(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FileConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  file(where: FileSubscriptionWhereInput): FileSubscriptionPayload\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 21
    },
    {
      "name": "generated-schema.graphql",
      "path": "examples/cli-tool/generated-schema.graphql",
      "sha": "40036b193779baa444d7a0f8fafe96be9ac74c80",
      "url": "https://api.github.com/repositories/133720126/contents/examples/cli-tool/generated-schema.graphql?ref=b7a6dd1f363a0185e8a8ea002074fbf1806894a5",
      "git_url": "https://api.github.com/repositories/133720126/git/blobs/40036b193779baa444d7a0f8fafe96be9ac74c80",
      "html_url": "https://github.com/devmare/prisma/blob/b7a6dd1f363a0185e8a8ea002074fbf1806894a5/examples/cli-tool/generated-schema.graphql",
      "content": "# source: http://localhost:4466/cli-tool\n# timestamp: Mon May 14 2018 12:48:03 GMT+0530 (IST)\n\ntype AggregateTodo {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createTodo(data: TodoCreateInput!): Todo!\n  updateTodo(data: TodoUpdateInput!, where: TodoWhereUniqueInput!): Todo\n  deleteTodo(where: TodoWhereUniqueInput!): Todo\n  upsertTodo(where: TodoWhereUniqueInput!, create: TodoCreateInput!, update: TodoUpdateInput!): Todo!\n  updateManyTodoes(data: TodoUpdateInput!, where: TodoWhereInput): BatchPayload!\n  deleteManyTodoes(where: TodoWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  todoes(where: TodoWhereInput, orderBy: TodoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Todo]!\n  todo(where: TodoWhereUniqueInput!): Todo\n  todoesConnection(where: TodoWhereInput, orderBy: TodoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TodoConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  todo(where: TodoSubscriptionWhereInput): TodoSubscriptionPayload\n}\n\ntype Todo implements Node {\n  id: ID!\n  title: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TodoConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TodoEdge]!\n  aggregate: AggregateTodo!\n}\n\ninput TodoCreateInput {\n  title: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TodoEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Todo!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum TodoOrderByInput {\n  id_ASC\n  id_DESC\n  title_ASC\n  title_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TodoPreviousValues {\n  id: ID!\n  title: String!\n}\n\ntype TodoSubscriptionPayload {\n  mutation: MutationType!\n  node: Todo\n  updatedFields: [String!]\n  previousValues: TodoPreviousValues\n}\n\ninput TodoSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TodoSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TodoSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TodoSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TodoWhereInput\n}\n\ninput TodoUpdateInput {\n  title: String\n}\n\ninput TodoWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TodoWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TodoWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TodoWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  title: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  title_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  title_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  title_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  title_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  title_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  title_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  title_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  title_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  title_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  title_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  title_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  title_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  title_not_ends_with: String\n}\n\ninput TodoWhereUniqueInput {\n  id: ID\n  title: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 20
    },
    {
      "name": "generated-schema.graphql",
      "path": "examples/hooks/generated-schema.graphql",
      "sha": "7473e06f56a3ca619fd8953fe0667bce2223ba4f",
      "url": "https://api.github.com/repositories/133720126/contents/examples/hooks/generated-schema.graphql?ref=b7a6dd1f363a0185e8a8ea002074fbf1806894a5",
      "git_url": "https://api.github.com/repositories/133720126/git/blobs/7473e06f56a3ca619fd8953fe0667bce2223ba4f",
      "html_url": "https://github.com/devmare/prisma/blob/b7a6dd1f363a0185e8a8ea002074fbf1806894a5/examples/hooks/generated-schema.graphql",
      "content": "# source: http://localhost:4466/hooks\n# timestamp: Mon May 14 2018 18:31:28 GMT+0530 (IST)\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  user(where: UserWhereUniqueInput!): User\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  name: String\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 20
    },
    {
      "name": "generated-schema.graphql",
      "path": "examples/postgres/generated-schema.graphql",
      "sha": "fa7ce47aba7a14254680f200a1eb2efc1c81c636",
      "url": "https://api.github.com/repositories/133720126/contents/examples/postgres/generated-schema.graphql?ref=b7a6dd1f363a0185e8a8ea002074fbf1806894a5",
      "git_url": "https://api.github.com/repositories/133720126/git/blobs/fa7ce47aba7a14254680f200a1eb2efc1c81c636",
      "html_url": "https://github.com/devmare/prisma/blob/b7a6dd1f363a0185e8a8ea002074fbf1806894a5/examples/postgres/generated-schema.graphql",
      "content": "# source: http://localhost:4466/postgres\n# timestamp: Mon May 14 2018 16:36:10 GMT+0530 (IST)\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  user(where: UserWhereUniqueInput!): User\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  name: String\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 20
    },
    {
      "name": "generated-schema.graphql",
      "path": "examples/yaml-structure/generated-schema.graphql",
      "sha": "2dd5b995c09bd4d0912cfd737d79cd613d002ec7",
      "url": "https://api.github.com/repositories/133720126/contents/examples/yaml-structure/generated-schema.graphql?ref=b7a6dd1f363a0185e8a8ea002074fbf1806894a5",
      "git_url": "https://api.github.com/repositories/133720126/git/blobs/2dd5b995c09bd4d0912cfd737d79cd613d002ec7",
      "html_url": "https://github.com/devmare/prisma/blob/b7a6dd1f363a0185e8a8ea002074fbf1806894a5/examples/yaml-structure/generated-schema.graphql",
      "content": "# source: http://localhost:4466/yaml-structure\n# timestamp: Mon May 14 2018 17:06:36 GMT+0530 (IST)\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  user(where: UserWhereUniqueInput!): User\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n  type: UserType!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n  type: UserType!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  type_ASC\n  type_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n  type: UserType!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\nenum UserType {\n  ADMIN\n  NORMAL\n}\n\ninput UserUpdateInput {\n  name: String\n  type: UserType\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  type: UserType\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  type_not: UserType\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  type_in: [UserType!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  type_not_in: [UserType!]\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 21
    }
  ],
  "metrics": {
    "created_at": "2018-05-16T20:34:10Z",
    "updated_at": "2018-12-28T18:25:50Z",
    "pushed_at": "2018-05-16T20:41:02Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "apache-2.0",
    "pull_requests": 1,
    "pull_requests_open": 1,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 1
  }
}