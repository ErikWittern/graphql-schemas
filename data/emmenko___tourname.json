{
  "repo_name": "tourname",
  "repo_full_name": "emmenko/tourname",
  "repo_owner": "emmenko",
  "repo_description": "ðŸš§ Under construction ðŸ”¨ðŸ‘·",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "packages/server/src/generated/prisma.graphql",
      "sha": "f9fe24048f1e248af46ae774a249021405b07ab6",
      "url": "https://api.github.com/repositories/101679669/contents/packages/server/src/generated/prisma.graphql?ref=ebde3f8f9339138cdba0eb60c8c984efea11afe1",
      "git_url": "https://api.github.com/repositories/101679669/git/blobs/f9fe24048f1e248af46ae774a249021405b07ab6",
      "html_url": "https://github.com/emmenko/tourname/blob/ebde3f8f9339138cdba0eb60c8c984efea11afe1/packages/server/src/generated/prisma.graphql",
      "content": "# source: http://192.168.99.100:4466/tourname/dev\n# timestamp: Tue May 15 2018 22:12:49 GMT+0200 (CEST)\n\ntype AggregateMatchSingle {\n  count: Int!\n}\n\ntype AggregateMatchTournament {\n  count: Int!\n}\n\ntype AggregateMemberRef {\n  count: Int!\n}\n\ntype AggregateOrganization {\n  count: Int!\n}\n\ntype AggregateRoundFinal {\n  count: Int!\n}\n\ntype AggregateRoundLastSixteen {\n  count: Int!\n}\n\ntype AggregateRoundQuarterfinals {\n  count: Int!\n}\n\ntype AggregateRoundSemifinals {\n  count: Int!\n}\n\ntype AggregateTeamMatchSingle {\n  count: Int!\n}\n\ntype AggregateTeamMatchTournament {\n  count: Int!\n}\n\ntype AggregateTournament {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\nscalar DateTime\n\nenum Discipline {\n  PoolTable\n  TableTennis\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype MatchSingle implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  organization(where: OrganizationWhereInput): Organization!\n  discipline: Discipline!\n  status: MatchSingleStatus!\n  teamLeft(where: TeamMatchSingleWhereInput): TeamMatchSingle!\n  teamRight(where: TeamMatchSingleWhereInput): TeamMatchSingle!\n  winner(where: TeamMatchSingleWhereInput): TeamMatchSingle\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype MatchSingleConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [MatchSingleEdge]!\n  aggregate: AggregateMatchSingle!\n}\n\ninput MatchSingleCreateInput {\n  discipline: Discipline!\n  status: MatchSingleStatus!\n  organization: OrganizationCreateOneInput!\n  teamLeft: TeamMatchSingleCreateOneInput!\n  teamRight: TeamMatchSingleCreateOneInput!\n  winner: TeamMatchSingleCreateOneInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype MatchSingleEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: MatchSingle!\n\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum MatchSingleOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  discipline_ASC\n  discipline_DESC\n  status_ASC\n  status_DESC\n}\n\ntype MatchSinglePreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  discipline: Discipline!\n  status: MatchSingleStatus!\n}\n\nenum MatchSingleStatus {\n  New\n  Finished\n}\n\ntype MatchSingleSubscriptionPayload {\n  mutation: MutationType!\n  node: MatchSingle\n  updatedFields: [String!]\n  previousValues: MatchSinglePreviousValues\n}\n\ninput MatchSingleSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MatchSingleSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MatchSingleSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MatchSingleSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: MatchSingleWhereInput\n}\n\ninput MatchSingleUpdateInput {\n  discipline: Discipline\n  status: MatchSingleStatus\n  organization: OrganizationUpdateOneInput\n  teamLeft: TeamMatchSingleUpdateOneInput\n  teamRight: TeamMatchSingleUpdateOneInput\n  winner: TeamMatchSingleUpdateOneInput\n}\n\ninput MatchSingleWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MatchSingleWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MatchSingleWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MatchSingleWhereInput!]\n  id: ID\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  discipline: Discipline\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  discipline_not: Discipline\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  discipline_in: [Discipline!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  discipline_not_in: [Discipline!]\n  status: MatchSingleStatus\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  status_not: MatchSingleStatus\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  status_in: [MatchSingleStatus!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  status_not_in: [MatchSingleStatus!]\n  organization: OrganizationWhereInput\n  teamLeft: TeamMatchSingleWhereInput\n  teamRight: TeamMatchSingleWhereInput\n  winner: TeamMatchSingleWhereInput\n}\n\ninput MatchSingleWhereUniqueInput {\n  id: ID\n}\n\ntype MatchTournament implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  organization(where: OrganizationWhereInput): Organization!\n  tournament(where: TournamentWhereInput): Tournament!\n  discipline: Discipline!\n  teamLeft(where: TeamMatchTournamentWhereInput): TeamMatchTournament\n  teamRight(where: TeamMatchTournamentWhereInput): TeamMatchTournament\n  winner(where: TeamMatchTournamentWhereInput): TeamMatchTournament\n  nextMatch(where: MatchTournamentWhereInput): MatchTournament\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype MatchTournamentConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [MatchTournamentEdge]!\n  aggregate: AggregateMatchTournament!\n}\n\ninput MatchTournamentCreateInput {\n  discipline: Discipline!\n  organization: OrganizationCreateOneInput!\n  tournament: TournamentCreateOneInput!\n  teamLeft: TeamMatchTournamentCreateOneInput\n  teamRight: TeamMatchTournamentCreateOneInput\n  winner: TeamMatchTournamentCreateOneInput\n  nextMatch: MatchTournamentCreateOneInput\n}\n\ninput MatchTournamentCreateOneInput {\n  create: MatchTournamentCreateInput\n  connect: MatchTournamentWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype MatchTournamentEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: MatchTournament!\n\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum MatchTournamentOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  discipline_ASC\n  discipline_DESC\n}\n\ntype MatchTournamentPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  discipline: Discipline!\n}\n\ntype MatchTournamentSubscriptionPayload {\n  mutation: MutationType!\n  node: MatchTournament\n  updatedFields: [String!]\n  previousValues: MatchTournamentPreviousValues\n}\n\ninput MatchTournamentSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MatchTournamentSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MatchTournamentSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MatchTournamentSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: MatchTournamentWhereInput\n}\n\ninput MatchTournamentUpdateDataInput {\n  discipline: Discipline\n  organization: OrganizationUpdateOneInput\n  tournament: TournamentUpdateOneInput\n  teamLeft: TeamMatchTournamentUpdateOneInput\n  teamRight: TeamMatchTournamentUpdateOneInput\n  winner: TeamMatchTournamentUpdateOneInput\n  nextMatch: MatchTournamentUpdateOneInput\n}\n\ninput MatchTournamentUpdateInput {\n  discipline: Discipline\n  organization: OrganizationUpdateOneInput\n  tournament: TournamentUpdateOneInput\n  teamLeft: TeamMatchTournamentUpdateOneInput\n  teamRight: TeamMatchTournamentUpdateOneInput\n  winner: TeamMatchTournamentUpdateOneInput\n  nextMatch: MatchTournamentUpdateOneInput\n}\n\ninput MatchTournamentUpdateOneInput {\n  create: MatchTournamentCreateInput\n  connect: MatchTournamentWhereUniqueInput\n  delete: Boolean\n  update: MatchTournamentUpdateDataInput\n  upsert: MatchTournamentUpsertNestedInput\n}\n\ninput MatchTournamentUpsertNestedInput {\n  update: MatchTournamentUpdateDataInput!\n  create: MatchTournamentCreateInput!\n}\n\ninput MatchTournamentWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MatchTournamentWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MatchTournamentWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MatchTournamentWhereInput!]\n  id: ID\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  discipline: Discipline\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  discipline_not: Discipline\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  discipline_in: [Discipline!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  discipline_not_in: [Discipline!]\n  organization: OrganizationWhereInput\n  tournament: TournamentWhereInput\n  teamLeft: TeamMatchTournamentWhereInput\n  teamRight: TeamMatchTournamentWhereInput\n  winner: TeamMatchTournamentWhereInput\n  nextMatch: MatchTournamentWhereInput\n}\n\ninput MatchTournamentWhereUniqueInput {\n  id: ID\n}\n\ntype MemberRef implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  auth0Id: String!\n  organization(where: OrganizationWhereInput): Organization!\n  role: Role!\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype MemberRefConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [MemberRefEdge]!\n  aggregate: AggregateMemberRef!\n}\n\ninput MemberRefCreateInput {\n  auth0Id: String!\n  role: Role!\n  organization: OrganizationCreateOneWithoutMemberRefsInput!\n}\n\ninput MemberRefCreateManyInput {\n  create: [MemberRefCreateInput!]\n  connect: [MemberRefWhereUniqueInput!]\n}\n\ninput MemberRefCreateManyWithoutOrganizationInput {\n  create: [MemberRefCreateWithoutOrganizationInput!]\n  connect: [MemberRefWhereUniqueInput!]\n}\n\ninput MemberRefCreateWithoutOrganizationInput {\n  auth0Id: String!\n  role: Role!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype MemberRefEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: MemberRef!\n\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum MemberRefOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  auth0Id_ASC\n  auth0Id_DESC\n  role_ASC\n  role_DESC\n}\n\ntype MemberRefPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  auth0Id: String!\n  role: Role!\n}\n\ntype MemberRefSubscriptionPayload {\n  mutation: MutationType!\n  node: MemberRef\n  updatedFields: [String!]\n  previousValues: MemberRefPreviousValues\n}\n\ninput MemberRefSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MemberRefSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MemberRefSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MemberRefSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: MemberRefWhereInput\n}\n\ninput MemberRefUpdateDataInput {\n  auth0Id: String\n  role: Role\n  organization: OrganizationUpdateOneWithoutMemberRefsInput\n}\n\ninput MemberRefUpdateInput {\n  auth0Id: String\n  role: Role\n  organization: OrganizationUpdateOneWithoutMemberRefsInput\n}\n\ninput MemberRefUpdateManyInput {\n  create: [MemberRefCreateInput!]\n  connect: [MemberRefWhereUniqueInput!]\n  disconnect: [MemberRefWhereUniqueInput!]\n  delete: [MemberRefWhereUniqueInput!]\n  update: [MemberRefUpdateWithWhereUniqueNestedInput!]\n  upsert: [MemberRefUpsertWithWhereUniqueNestedInput!]\n}\n\ninput MemberRefUpdateManyWithoutOrganizationInput {\n  create: [MemberRefCreateWithoutOrganizationInput!]\n  connect: [MemberRefWhereUniqueInput!]\n  disconnect: [MemberRefWhereUniqueInput!]\n  delete: [MemberRefWhereUniqueInput!]\n  update: [MemberRefUpdateWithWhereUniqueWithoutOrganizationInput!]\n  upsert: [MemberRefUpsertWithWhereUniqueWithoutOrganizationInput!]\n}\n\ninput MemberRefUpdateWithoutOrganizationDataInput {\n  auth0Id: String\n  role: Role\n}\n\ninput MemberRefUpdateWithWhereUniqueNestedInput {\n  where: MemberRefWhereUniqueInput!\n  data: MemberRefUpdateDataInput!\n}\n\ninput MemberRefUpdateWithWhereUniqueWithoutOrganizationInput {\n  where: MemberRefWhereUniqueInput!\n  data: MemberRefUpdateWithoutOrganizationDataInput!\n}\n\ninput MemberRefUpsertWithWhereUniqueNestedInput {\n  where: MemberRefWhereUniqueInput!\n  update: MemberRefUpdateDataInput!\n  create: MemberRefCreateInput!\n}\n\ninput MemberRefUpsertWithWhereUniqueWithoutOrganizationInput {\n  where: MemberRefWhereUniqueInput!\n  update: MemberRefUpdateWithoutOrganizationDataInput!\n  create: MemberRefCreateWithoutOrganizationInput!\n}\n\ninput MemberRefWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [MemberRefWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [MemberRefWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [MemberRefWhereInput!]\n  id: ID\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  auth0Id: String\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  auth0Id_not: String\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  auth0Id_in: [String!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  auth0Id_not_in: [String!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  auth0Id_lt: String\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  auth0Id_lte: String\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  auth0Id_gt: String\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  auth0Id_gte: String\n\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  auth0Id_contains: String\n\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  auth0Id_not_contains: String\n\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  auth0Id_starts_with: String\n\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  auth0Id_not_starts_with: String\n\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  auth0Id_ends_with: String\n\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  auth0Id_not_ends_with: String\n  role: Role\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  role_not: Role\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  role_in: [Role!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  role_not_in: [Role!]\n  organization: OrganizationWhereInput\n}\n\ninput MemberRefWhereUniqueInput {\n  id: ID\n}\n\ntype Mutation {\n  createMemberRef(data: MemberRefCreateInput!): MemberRef!\n  createOrganization(data: OrganizationCreateInput!): Organization!\n  createTournament(data: TournamentCreateInput!): Tournament!\n  createTeamMatchTournament(\n    data: TeamMatchTournamentCreateInput!\n  ): TeamMatchTournament!\n  createTeamMatchSingle(data: TeamMatchSingleCreateInput!): TeamMatchSingle!\n  createRoundLastSixteen(data: RoundLastSixteenCreateInput!): RoundLastSixteen!\n  createRoundQuarterfinals(\n    data: RoundQuarterfinalsCreateInput!\n  ): RoundQuarterfinals!\n  createRoundSemifinals(data: RoundSemifinalsCreateInput!): RoundSemifinals!\n  createRoundFinal(data: RoundFinalCreateInput!): RoundFinal!\n  createMatchTournament(data: MatchTournamentCreateInput!): MatchTournament!\n  createMatchSingle(data: MatchSingleCreateInput!): MatchSingle!\n  updateMemberRef(\n    data: MemberRefUpdateInput!\n    where: MemberRefWhereUniqueInput!\n  ): MemberRef\n  updateOrganization(\n    data: OrganizationUpdateInput!\n    where: OrganizationWhereUniqueInput!\n  ): Organization\n  updateTournament(\n    data: TournamentUpdateInput!\n    where: TournamentWhereUniqueInput!\n  ): Tournament\n  updateTeamMatchTournament(\n    data: TeamMatchTournamentUpdateInput!\n    where: TeamMatchTournamentWhereUniqueInput!\n  ): TeamMatchTournament\n  updateTeamMatchSingle(\n    data: TeamMatchSingleUpdateInput!\n    where: TeamMatchSingleWhereUniqueInput!\n  ): TeamMatchSingle\n  updateMatchTournament(\n    data: MatchTournamentUpdateInput!\n    where: MatchTournamentWhereUniqueInput!\n  ): MatchTournament\n  updateMatchSingle(\n    data: MatchSingleUpdateInput!\n    where: MatchSingleWhereUniqueInput!\n  ): MatchSingle\n  deleteMemberRef(where: MemberRefWhereUniqueInput!): MemberRef\n  deleteOrganization(where: OrganizationWhereUniqueInput!): Organization\n  deleteTournament(where: TournamentWhereUniqueInput!): Tournament\n  deleteTeamMatchTournament(\n    where: TeamMatchTournamentWhereUniqueInput!\n  ): TeamMatchTournament\n  deleteTeamMatchSingle(\n    where: TeamMatchSingleWhereUniqueInput!\n  ): TeamMatchSingle\n  deleteMatchTournament(\n    where: MatchTournamentWhereUniqueInput!\n  ): MatchTournament\n  deleteMatchSingle(where: MatchSingleWhereUniqueInput!): MatchSingle\n  upsertMemberRef(\n    where: MemberRefWhereUniqueInput!\n    create: MemberRefCreateInput!\n    update: MemberRefUpdateInput!\n  ): MemberRef!\n  upsertOrganization(\n    where: OrganizationWhereUniqueInput!\n    create: OrganizationCreateInput!\n    update: OrganizationUpdateInput!\n  ): Organization!\n  upsertTournament(\n    where: TournamentWhereUniqueInput!\n    create: TournamentCreateInput!\n    update: TournamentUpdateInput!\n  ): Tournament!\n  upsertTeamMatchTournament(\n    where: TeamMatchTournamentWhereUniqueInput!\n    create: TeamMatchTournamentCreateInput!\n    update: TeamMatchTournamentUpdateInput!\n  ): TeamMatchTournament!\n  upsertTeamMatchSingle(\n    where: TeamMatchSingleWhereUniqueInput!\n    create: TeamMatchSingleCreateInput!\n    update: TeamMatchSingleUpdateInput!\n  ): TeamMatchSingle!\n  upsertMatchTournament(\n    where: MatchTournamentWhereUniqueInput!\n    create: MatchTournamentCreateInput!\n    update: MatchTournamentUpdateInput!\n  ): MatchTournament!\n  upsertMatchSingle(\n    where: MatchSingleWhereUniqueInput!\n    create: MatchSingleCreateInput!\n    update: MatchSingleUpdateInput!\n  ): MatchSingle!\n  updateManyMemberRefs(\n    data: MemberRefUpdateInput!\n    where: MemberRefWhereInput\n  ): BatchPayload!\n  updateManyOrganizations(\n    data: OrganizationUpdateInput!\n    where: OrganizationWhereInput\n  ): BatchPayload!\n  updateManyTournaments(\n    data: TournamentUpdateInput!\n    where: TournamentWhereInput\n  ): BatchPayload!\n  updateManyTeamMatchTournaments(\n    data: TeamMatchTournamentUpdateInput!\n    where: TeamMatchTournamentWhereInput\n  ): BatchPayload!\n  updateManyTeamMatchSingles(\n    data: TeamMatchSingleUpdateInput!\n    where: TeamMatchSingleWhereInput\n  ): BatchPayload!\n  updateManyRoundLastSixteens(\n    data: RoundLastSixteenUpdateInput!\n    where: RoundLastSixteenWhereInput\n  ): BatchPayload!\n  updateManyRoundQuarterfinalses(\n    data: RoundQuarterfinalsUpdateInput!\n    where: RoundQuarterfinalsWhereInput\n  ): BatchPayload!\n  updateManyRoundSemifinalses(\n    data: RoundSemifinalsUpdateInput!\n    where: RoundSemifinalsWhereInput\n  ): BatchPayload!\n  updateManyRoundFinals(\n    data: RoundFinalUpdateInput!\n    where: RoundFinalWhereInput\n  ): BatchPayload!\n  updateManyMatchTournaments(\n    data: MatchTournamentUpdateInput!\n    where: MatchTournamentWhereInput\n  ): BatchPayload!\n  updateManyMatchSingles(\n    data: MatchSingleUpdateInput!\n    where: MatchSingleWhereInput\n  ): BatchPayload!\n  deleteManyMemberRefs(where: MemberRefWhereInput): BatchPayload!\n  deleteManyOrganizations(where: OrganizationWhereInput): BatchPayload!\n  deleteManyTournaments(where: TournamentWhereInput): BatchPayload!\n  deleteManyTeamMatchTournaments(\n    where: TeamMatchTournamentWhereInput\n  ): BatchPayload!\n  deleteManyTeamMatchSingles(where: TeamMatchSingleWhereInput): BatchPayload!\n  deleteManyRoundLastSixteens(where: RoundLastSixteenWhereInput): BatchPayload!\n  deleteManyRoundQuarterfinalses(\n    where: RoundQuarterfinalsWhereInput\n  ): BatchPayload!\n  deleteManyRoundSemifinalses(where: RoundSemifinalsWhereInput): BatchPayload!\n  deleteManyRoundFinals(where: RoundFinalWhereInput): BatchPayload!\n  deleteManyMatchTournaments(where: MatchTournamentWhereInput): BatchPayload!\n  deleteManyMatchSingles(where: MatchSingleWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\ntype Organization {\n  key: String!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  memberRefs(\n    where: MemberRefWhereInput\n    orderBy: MemberRefOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [MemberRef!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype OrganizationConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [OrganizationEdge]!\n  aggregate: AggregateOrganization!\n}\n\ninput OrganizationCreateInput {\n  key: String!\n  name: String!\n  memberRefs: MemberRefCreateManyWithoutOrganizationInput\n}\n\ninput OrganizationCreateOneInput {\n  create: OrganizationCreateInput\n  connect: OrganizationWhereUniqueInput\n}\n\ninput OrganizationCreateOneWithoutMemberRefsInput {\n  create: OrganizationCreateWithoutMemberRefsInput\n  connect: OrganizationWhereUniqueInput\n}\n\ninput OrganizationCreateWithoutMemberRefsInput {\n  key: String!\n  name: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype OrganizationEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Organization!\n\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum OrganizationOrderByInput {\n  key_ASC\n  key_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  name_ASC\n  name_DESC\n  id_ASC\n  id_DESC\n}\n\ntype OrganizationPreviousValues {\n  key: String!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n}\n\ntype OrganizationSubscriptionPayload {\n  mutation: MutationType!\n  node: Organization\n  updatedFields: [String!]\n  previousValues: OrganizationPreviousValues\n}\n\ninput OrganizationSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OrganizationSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OrganizationSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OrganizationSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OrganizationWhereInput\n}\n\ninput OrganizationUpdateDataInput {\n  key: String\n  name: String\n  memberRefs: MemberRefUpdateManyWithoutOrganizationInput\n}\n\ninput OrganizationUpdateInput {\n  key: String\n  name: String\n  memberRefs: MemberRefUpdateManyWithoutOrganizationInput\n}\n\ninput OrganizationUpdateOneInput {\n  create: OrganizationCreateInput\n  connect: OrganizationWhereUniqueInput\n  delete: Boolean\n  update: OrganizationUpdateDataInput\n  upsert: OrganizationUpsertNestedInput\n}\n\ninput OrganizationUpdateOneWithoutMemberRefsInput {\n  create: OrganizationCreateWithoutMemberRefsInput\n  connect: OrganizationWhereUniqueInput\n  delete: Boolean\n  update: OrganizationUpdateWithoutMemberRefsDataInput\n  upsert: OrganizationUpsertWithoutMemberRefsInput\n}\n\ninput OrganizationUpdateWithoutMemberRefsDataInput {\n  key: String\n  name: String\n}\n\ninput OrganizationUpsertNestedInput {\n  update: OrganizationUpdateDataInput!\n  create: OrganizationCreateInput!\n}\n\ninput OrganizationUpsertWithoutMemberRefsInput {\n  update: OrganizationUpdateWithoutMemberRefsDataInput!\n  create: OrganizationCreateWithoutMemberRefsInput!\n}\n\ninput OrganizationWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [OrganizationWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [OrganizationWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [OrganizationWhereInput!]\n  key: String\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  key_not: String\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  key_in: [String!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  key_not_in: [String!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  key_lt: String\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  key_lte: String\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  key_gt: String\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  key_gte: String\n\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  key_contains: String\n\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  key_not_contains: String\n\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  key_starts_with: String\n\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  key_not_starts_with: String\n\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  key_ends_with: String\n\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  key_not_ends_with: String\n  createdAt: DateTime\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  name: String\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  memberRefs_every: MemberRefWhereInput\n  memberRefs_some: MemberRefWhereInput\n  memberRefs_none: MemberRefWhereInput\n}\n\ninput OrganizationWhereUniqueInput {\n  key: String\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  memberRefs(\n    where: MemberRefWhereInput\n    orderBy: MemberRefOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [MemberRef]!\n  organizations(\n    where: OrganizationWhereInput\n    orderBy: OrganizationOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [Organization]!\n  tournaments(\n    where: TournamentWhereInput\n    orderBy: TournamentOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [Tournament]!\n  teamMatchTournaments(\n    where: TeamMatchTournamentWhereInput\n    orderBy: TeamMatchTournamentOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [TeamMatchTournament]!\n  teamMatchSingles(\n    where: TeamMatchSingleWhereInput\n    orderBy: TeamMatchSingleOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [TeamMatchSingle]!\n  roundLastSixteens(\n    where: RoundLastSixteenWhereInput\n    orderBy: RoundLastSixteenOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [RoundLastSixteen]!\n  roundQuarterfinalses(\n    where: RoundQuarterfinalsWhereInput\n    orderBy: RoundQuarterfinalsOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [RoundQuarterfinals]!\n  roundSemifinalses(\n    where: RoundSemifinalsWhereInput\n    orderBy: RoundSemifinalsOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [RoundSemifinals]!\n  roundFinals(\n    where: RoundFinalWhereInput\n    orderBy: RoundFinalOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [RoundFinal]!\n  matchTournaments(\n    where: MatchTournamentWhereInput\n    orderBy: MatchTournamentOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [MatchTournament]!\n  matchSingles(\n    where: MatchSingleWhereInput\n    orderBy: MatchSingleOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [MatchSingle]!\n  memberRef(where: MemberRefWhereUniqueInput!): MemberRef\n  organization(where: OrganizationWhereUniqueInput!): Organization\n  tournament(where: TournamentWhereUniqueInput!): Tournament\n  teamMatchTournament(\n    where: TeamMatchTournamentWhereUniqueInput!\n  ): TeamMatchTournament\n  teamMatchSingle(where: TeamMatchSingleWhereUniqueInput!): TeamMatchSingle\n  matchTournament(where: MatchTournamentWhereUniqueInput!): MatchTournament\n  matchSingle(where: MatchSingleWhereUniqueInput!): MatchSingle\n  memberRefsConnection(\n    where: MemberRefWhereInput\n    orderBy: MemberRefOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): MemberRefConnection!\n  organizationsConnection(\n    where: OrganizationWhereInput\n    orderBy: OrganizationOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): OrganizationConnection!\n  tournamentsConnection(\n    where: TournamentWhereInput\n    orderBy: TournamentOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): TournamentConnection!\n  teamMatchTournamentsConnection(\n    where: TeamMatchTournamentWhereInput\n    orderBy: TeamMatchTournamentOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): TeamMatchTournamentConnection!\n  teamMatchSinglesConnection(\n    where: TeamMatchSingleWhereInput\n    orderBy: TeamMatchSingleOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): TeamMatchSingleConnection!\n  roundLastSixteensConnection(\n    where: RoundLastSixteenWhereInput\n    orderBy: RoundLastSixteenOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): RoundLastSixteenConnection!\n  roundQuarterfinalsesConnection(\n    where: RoundQuarterfinalsWhereInput\n    orderBy: RoundQuarterfinalsOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): RoundQuarterfinalsConnection!\n  roundSemifinalsesConnection(\n    where: RoundSemifinalsWhereInput\n    orderBy: RoundSemifinalsOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): RoundSemifinalsConnection!\n  roundFinalsConnection(\n    where: RoundFinalWhereInput\n    orderBy: RoundFinalOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): RoundFinalConnection!\n  matchTournamentsConnection(\n    where: MatchTournamentWhereInput\n    orderBy: MatchTournamentOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): MatchTournamentConnection!\n  matchSinglesConnection(\n    where: MatchSingleWhereInput\n    orderBy: MatchSingleOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): MatchSingleConnection!\n\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\n    \"\"\"\n    The ID of an object\n    \"\"\"\n    id: ID!\n  ): Node\n}\n\nenum Role {\n  Admin\n  Member\n}\n\ntype RoundFinal {\n  match(where: MatchTournamentWhereInput): MatchTournament!\n  tournament(where: TournamentWhereInput): Tournament!\n  _ignore_: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype RoundFinalConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [RoundFinalEdge]!\n  aggregate: AggregateRoundFinal!\n}\n\ninput RoundFinalCreateInput {\n  _ignore_: String\n  match: MatchTournamentCreateOneInput!\n  tournament: TournamentCreateOneWithoutRoundFinalInput!\n}\n\ninput RoundFinalCreateOneWithoutTournamentInput {\n  create: RoundFinalCreateWithoutTournamentInput\n}\n\ninput RoundFinalCreateWithoutTournamentInput {\n  _ignore_: String\n  match: MatchTournamentCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype RoundFinalEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: RoundFinal!\n\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum RoundFinalOrderByInput {\n  _ignore__ASC\n  _ignore__DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype RoundFinalPreviousValues {\n  _ignore_: String\n}\n\ntype RoundFinalSubscriptionPayload {\n  mutation: MutationType!\n  node: RoundFinal\n  updatedFields: [String!]\n  previousValues: RoundFinalPreviousValues\n}\n\ninput RoundFinalSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [RoundFinalSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [RoundFinalSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [RoundFinalSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: RoundFinalWhereInput\n}\n\ninput RoundFinalUpdateInput {\n  _ignore_: String\n  match: MatchTournamentUpdateOneInput\n  tournament: TournamentUpdateOneWithoutRoundFinalInput\n}\n\ninput RoundFinalUpdateOneWithoutTournamentInput {\n  create: RoundFinalCreateWithoutTournamentInput\n  disconnect: Boolean\n  delete: Boolean\n  update: RoundFinalUpdateWithoutTournamentDataInput\n  upsert: RoundFinalUpsertWithoutTournamentInput\n}\n\ninput RoundFinalUpdateWithoutTournamentDataInput {\n  _ignore_: String\n  match: MatchTournamentUpdateOneInput\n}\n\ninput RoundFinalUpsertWithoutTournamentInput {\n  update: RoundFinalUpdateWithoutTournamentDataInput!\n  create: RoundFinalCreateWithoutTournamentInput!\n}\n\ninput RoundFinalWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [RoundFinalWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [RoundFinalWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [RoundFinalWhereInput!]\n  _ignore_: String\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  _ignore__not: String\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  _ignore__in: [String!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  _ignore__not_in: [String!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  _ignore__lt: String\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  _ignore__lte: String\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  _ignore__gt: String\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  _ignore__gte: String\n\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  _ignore__contains: String\n\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  _ignore__not_contains: String\n\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  _ignore__starts_with: String\n\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  _ignore__not_starts_with: String\n\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  _ignore__ends_with: String\n\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  _ignore__not_ends_with: String\n  match: MatchTournamentWhereInput\n  tournament: TournamentWhereInput\n}\n\ntype RoundLastSixteen {\n  matchA(where: MatchTournamentWhereInput): MatchTournament!\n  matchB(where: MatchTournamentWhereInput): MatchTournament!\n  matchC(where: MatchTournamentWhereInput): MatchTournament!\n  matchD(where: MatchTournamentWhereInput): MatchTournament!\n  matchE(where: MatchTournamentWhereInput): MatchTournament!\n  matchF(where: MatchTournamentWhereInput): MatchTournament!\n  matchG(where: MatchTournamentWhereInput): MatchTournament!\n  matchH(where: MatchTournamentWhereInput): MatchTournament!\n  tournament(where: TournamentWhereInput): Tournament!\n  _ignore_: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype RoundLastSixteenConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [RoundLastSixteenEdge]!\n  aggregate: AggregateRoundLastSixteen!\n}\n\ninput RoundLastSixteenCreateInput {\n  _ignore_: String\n  matchA: MatchTournamentCreateOneInput!\n  matchB: MatchTournamentCreateOneInput!\n  matchC: MatchTournamentCreateOneInput!\n  matchD: MatchTournamentCreateOneInput!\n  matchE: MatchTournamentCreateOneInput!\n  matchF: MatchTournamentCreateOneInput!\n  matchG: MatchTournamentCreateOneInput!\n  matchH: MatchTournamentCreateOneInput!\n  tournament: TournamentCreateOneWithoutRoundLastSixteenInput!\n}\n\ninput RoundLastSixteenCreateOneWithoutTournamentInput {\n  create: RoundLastSixteenCreateWithoutTournamentInput\n}\n\ninput RoundLastSixteenCreateWithoutTournamentInput {\n  _ignore_: String\n  matchA: MatchTournamentCreateOneInput!\n  matchB: MatchTournamentCreateOneInput!\n  matchC: MatchTournamentCreateOneInput!\n  matchD: MatchTournamentCreateOneInput!\n  matchE: MatchTournamentCreateOneInput!\n  matchF: MatchTournamentCreateOneInput!\n  matchG: MatchTournamentCreateOneInput!\n  matchH: MatchTournamentCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype RoundLastSixteenEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: RoundLastSixteen!\n\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum RoundLastSixteenOrderByInput {\n  _ignore__ASC\n  _ignore__DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype RoundLastSixteenPreviousValues {\n  _ignore_: String\n}\n\ntype RoundLastSixteenSubscriptionPayload {\n  mutation: MutationType!\n  node: RoundLastSixteen\n  updatedFields: [String!]\n  previousValues: RoundLastSixteenPreviousValues\n}\n\ninput RoundLastSixteenSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [RoundLastSixteenSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [RoundLastSixteenSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [RoundLastSixteenSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: RoundLastSixteenWhereInput\n}\n\ninput RoundLastSixteenUpdateInput {\n  _ignore_: String\n  matchA: MatchTournamentUpdateOneInput\n  matchB: MatchTournamentUpdateOneInput\n  matchC: MatchTournamentUpdateOneInput\n  matchD: MatchTournamentUpdateOneInput\n  matchE: MatchTournamentUpdateOneInput\n  matchF: MatchTournamentUpdateOneInput\n  matchG: MatchTournamentUpdateOneInput\n  matchH: MatchTournamentUpdateOneInput\n  tournament: TournamentUpdateOneWithoutRoundLastSixteenInput\n}\n\ninput RoundLastSixteenUpdateOneWithoutTournamentInput {\n  create: RoundLastSixteenCreateWithoutTournamentInput\n  disconnect: Boolean\n  delete: Boolean\n  update: RoundLastSixteenUpdateWithoutTournamentDataInput\n  upsert: RoundLastSixteenUpsertWithoutTournamentInput\n}\n\ninput RoundLastSixteenUpdateWithoutTournamentDataInput {\n  _ignore_: String\n  matchA: MatchTournamentUpdateOneInput\n  matchB: MatchTournamentUpdateOneInput\n  matchC: MatchTournamentUpdateOneInput\n  matchD: MatchTournamentUpdateOneInput\n  matchE: MatchTournamentUpdateOneInput\n  matchF: MatchTournamentUpdateOneInput\n  matchG: MatchTournamentUpdateOneInput\n  matchH: MatchTournamentUpdateOneInput\n}\n\ninput RoundLastSixteenUpsertWithoutTournamentInput {\n  update: RoundLastSixteenUpdateWithoutTournamentDataInput!\n  create: RoundLastSixteenCreateWithoutTournamentInput!\n}\n\ninput RoundLastSixteenWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [RoundLastSixteenWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [RoundLastSixteenWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [RoundLastSixteenWhereInput!]\n  _ignore_: String\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  _ignore__not: String\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  _ignore__in: [String!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  _ignore__not_in: [String!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  _ignore__lt: String\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  _ignore__lte: String\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  _ignore__gt: String\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  _ignore__gte: String\n\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  _ignore__contains: String\n\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  _ignore__not_contains: String\n\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  _ignore__starts_with: String\n\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  _ignore__not_starts_with: String\n\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  _ignore__ends_with: String\n\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  _ignore__not_ends_with: String\n  matchA: MatchTournamentWhereInput\n  matchB: MatchTournamentWhereInput\n  matchC: MatchTournamentWhereInput\n  matchD: MatchTournamentWhereInput\n  matchE: MatchTournamentWhereInput\n  matchF: MatchTournamentWhereInput\n  matchG: MatchTournamentWhereInput\n  matchH: MatchTournamentWhereInput\n  tournament: TournamentWhereInput\n}\n\ntype RoundQuarterfinals {\n  matchA(where: MatchTournamentWhereInput): MatchTournament!\n  matchB(where: MatchTournamentWhereInput): MatchTournament!\n  matchC(where: MatchTournamentWhereInput): MatchTournament!\n  matchD(where: MatchTournamentWhereInput): MatchTournament!\n  tournament(where: TournamentWhereInput): Tournament!\n  _ignore_: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype RoundQuarterfinalsConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [RoundQuarterfinalsEdge]!\n  aggregate: AggregateRoundQuarterfinals!\n}\n\ninput RoundQuarterfinalsCreateInput {\n  _ignore_: String\n  matchA: MatchTournamentCreateOneInput!\n  matchB: MatchTournamentCreateOneInput!\n  matchC: MatchTournamentCreateOneInput!\n  matchD: MatchTournamentCreateOneInput!\n  tournament: TournamentCreateOneWithoutRoundQuarterfinalsInput!\n}\n\ninput RoundQuarterfinalsCreateOneWithoutTournamentInput {\n  create: RoundQuarterfinalsCreateWithoutTournamentInput\n}\n\ninput RoundQuarterfinalsCreateWithoutTournamentInput {\n  _ignore_: String\n  matchA: MatchTournamentCreateOneInput!\n  matchB: MatchTournamentCreateOneInput!\n  matchC: MatchTournamentCreateOneInput!\n  matchD: MatchTournamentCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype RoundQuarterfinalsEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: RoundQuarterfinals!\n\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum RoundQuarterfinalsOrderByInput {\n  _ignore__ASC\n  _ignore__DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype RoundQuarterfinalsPreviousValues {\n  _ignore_: String\n}\n\ntype RoundQuarterfinalsSubscriptionPayload {\n  mutation: MutationType!\n  node: RoundQuarterfinals\n  updatedFields: [String!]\n  previousValues: RoundQuarterfinalsPreviousValues\n}\n\ninput RoundQuarterfinalsSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [RoundQuarterfinalsSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [RoundQuarterfinalsSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [RoundQuarterfinalsSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: RoundQuarterfinalsWhereInput\n}\n\ninput RoundQuarterfinalsUpdateInput {\n  _ignore_: String\n  matchA: MatchTournamentUpdateOneInput\n  matchB: MatchTournamentUpdateOneInput\n  matchC: MatchTournamentUpdateOneInput\n  matchD: MatchTournamentUpdateOneInput\n  tournament: TournamentUpdateOneWithoutRoundQuarterfinalsInput\n}\n\ninput RoundQuarterfinalsUpdateOneWithoutTournamentInput {\n  create: RoundQuarterfinalsCreateWithoutTournamentInput\n  disconnect: Boolean\n  delete: Boolean\n  update: RoundQuarterfinalsUpdateWithoutTournamentDataInput\n  upsert: RoundQuarterfinalsUpsertWithoutTournamentInput\n}\n\ninput RoundQuarterfinalsUpdateWithoutTournamentDataInput {\n  _ignore_: String\n  matchA: MatchTournamentUpdateOneInput\n  matchB: MatchTournamentUpdateOneInput\n  matchC: MatchTournamentUpdateOneInput\n  matchD: MatchTournamentUpdateOneInput\n}\n\ninput RoundQuarterfinalsUpsertWithoutTournamentInput {\n  update: RoundQuarterfinalsUpdateWithoutTournamentDataInput!\n  create: RoundQuarterfinalsCreateWithoutTournamentInput!\n}\n\ninput RoundQuarterfinalsWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [RoundQuarterfinalsWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [RoundQuarterfinalsWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [RoundQuarterfinalsWhereInput!]\n  _ignore_: String\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  _ignore__not: String\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  _ignore__in: [String!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  _ignore__not_in: [String!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  _ignore__lt: String\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  _ignore__lte: String\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  _ignore__gt: String\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  _ignore__gte: String\n\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  _ignore__contains: String\n\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  _ignore__not_contains: String\n\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  _ignore__starts_with: String\n\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  _ignore__not_starts_with: String\n\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  _ignore__ends_with: String\n\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  _ignore__not_ends_with: String\n  matchA: MatchTournamentWhereInput\n  matchB: MatchTournamentWhereInput\n  matchC: MatchTournamentWhereInput\n  matchD: MatchTournamentWhereInput\n  tournament: TournamentWhereInput\n}\n\ntype RoundSemifinals {\n  matchA(where: MatchTournamentWhereInput): MatchTournament!\n  matchB(where: MatchTournamentWhereInput): MatchTournament!\n  tournament(where: TournamentWhereInput): Tournament!\n  _ignore_: String\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype RoundSemifinalsConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [RoundSemifinalsEdge]!\n  aggregate: AggregateRoundSemifinals!\n}\n\ninput RoundSemifinalsCreateInput {\n  _ignore_: String\n  matchA: MatchTournamentCreateOneInput!\n  matchB: MatchTournamentCreateOneInput!\n  tournament: TournamentCreateOneWithoutRoundSemifinalsInput!\n}\n\ninput RoundSemifinalsCreateOneWithoutTournamentInput {\n  create: RoundSemifinalsCreateWithoutTournamentInput\n}\n\ninput RoundSemifinalsCreateWithoutTournamentInput {\n  _ignore_: String\n  matchA: MatchTournamentCreateOneInput!\n  matchB: MatchTournamentCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype RoundSemifinalsEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: RoundSemifinals!\n\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum RoundSemifinalsOrderByInput {\n  _ignore__ASC\n  _ignore__DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype RoundSemifinalsPreviousValues {\n  _ignore_: String\n}\n\ntype RoundSemifinalsSubscriptionPayload {\n  mutation: MutationType!\n  node: RoundSemifinals\n  updatedFields: [String!]\n  previousValues: RoundSemifinalsPreviousValues\n}\n\ninput RoundSemifinalsSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [RoundSemifinalsSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [RoundSemifinalsSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [RoundSemifinalsSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: RoundSemifinalsWhereInput\n}\n\ninput RoundSemifinalsUpdateInput {\n  _ignore_: String\n  matchA: MatchTournamentUpdateOneInput\n  matchB: MatchTournamentUpdateOneInput\n  tournament: TournamentUpdateOneWithoutRoundSemifinalsInput\n}\n\ninput RoundSemifinalsUpdateOneWithoutTournamentInput {\n  create: RoundSemifinalsCreateWithoutTournamentInput\n  disconnect: Boolean\n  delete: Boolean\n  update: RoundSemifinalsUpdateWithoutTournamentDataInput\n  upsert: RoundSemifinalsUpsertWithoutTournamentInput\n}\n\ninput RoundSemifinalsUpdateWithoutTournamentDataInput {\n  _ignore_: String\n  matchA: MatchTournamentUpdateOneInput\n  matchB: MatchTournamentUpdateOneInput\n}\n\ninput RoundSemifinalsUpsertWithoutTournamentInput {\n  update: RoundSemifinalsUpdateWithoutTournamentDataInput!\n  create: RoundSemifinalsCreateWithoutTournamentInput!\n}\n\ninput RoundSemifinalsWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [RoundSemifinalsWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [RoundSemifinalsWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [RoundSemifinalsWhereInput!]\n  _ignore_: String\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  _ignore__not: String\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  _ignore__in: [String!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  _ignore__not_in: [String!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  _ignore__lt: String\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  _ignore__lte: String\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  _ignore__gt: String\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  _ignore__gte: String\n\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  _ignore__contains: String\n\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  _ignore__not_contains: String\n\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  _ignore__starts_with: String\n\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  _ignore__not_starts_with: String\n\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  _ignore__ends_with: String\n\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  _ignore__not_ends_with: String\n  matchA: MatchTournamentWhereInput\n  matchB: MatchTournamentWhereInput\n  tournament: TournamentWhereInput\n}\n\ntype Subscription {\n  memberRef(\n    where: MemberRefSubscriptionWhereInput\n  ): MemberRefSubscriptionPayload\n  organization(\n    where: OrganizationSubscriptionWhereInput\n  ): OrganizationSubscriptionPayload\n  tournament(\n    where: TournamentSubscriptionWhereInput\n  ): TournamentSubscriptionPayload\n  teamMatchTournament(\n    where: TeamMatchTournamentSubscriptionWhereInput\n  ): TeamMatchTournamentSubscriptionPayload\n  teamMatchSingle(\n    where: TeamMatchSingleSubscriptionWhereInput\n  ): TeamMatchSingleSubscriptionPayload\n  roundLastSixteen(\n    where: RoundLastSixteenSubscriptionWhereInput\n  ): RoundLastSixteenSubscriptionPayload\n  roundQuarterfinals(\n    where: RoundQuarterfinalsSubscriptionWhereInput\n  ): RoundQuarterfinalsSubscriptionPayload\n  roundSemifinals(\n    where: RoundSemifinalsSubscriptionWhereInput\n  ): RoundSemifinalsSubscriptionPayload\n  roundFinal(\n    where: RoundFinalSubscriptionWhereInput\n  ): RoundFinalSubscriptionPayload\n  matchTournament(\n    where: MatchTournamentSubscriptionWhereInput\n  ): MatchTournamentSubscriptionPayload\n  matchSingle(\n    where: MatchSingleSubscriptionWhereInput\n  ): MatchSingleSubscriptionPayload\n}\n\ntype TeamMatchSingle implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  size: Int!\n  playerRefs(\n    where: MemberRefWhereInput\n    orderBy: MemberRefOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [MemberRef!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype TeamMatchSingleConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [TeamMatchSingleEdge]!\n  aggregate: AggregateTeamMatchSingle!\n}\n\ninput TeamMatchSingleCreateInput {\n  size: Int!\n  playerRefs: MemberRefCreateManyInput\n}\n\ninput TeamMatchSingleCreateOneInput {\n  create: TeamMatchSingleCreateInput\n  connect: TeamMatchSingleWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype TeamMatchSingleEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: TeamMatchSingle!\n\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum TeamMatchSingleOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  size_ASC\n  size_DESC\n}\n\ntype TeamMatchSinglePreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  size: Int!\n}\n\ntype TeamMatchSingleSubscriptionPayload {\n  mutation: MutationType!\n  node: TeamMatchSingle\n  updatedFields: [String!]\n  previousValues: TeamMatchSinglePreviousValues\n}\n\ninput TeamMatchSingleSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TeamMatchSingleSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TeamMatchSingleSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TeamMatchSingleSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TeamMatchSingleWhereInput\n}\n\ninput TeamMatchSingleUpdateDataInput {\n  size: Int\n  playerRefs: MemberRefUpdateManyInput\n}\n\ninput TeamMatchSingleUpdateInput {\n  size: Int\n  playerRefs: MemberRefUpdateManyInput\n}\n\ninput TeamMatchSingleUpdateOneInput {\n  create: TeamMatchSingleCreateInput\n  connect: TeamMatchSingleWhereUniqueInput\n  delete: Boolean\n  update: TeamMatchSingleUpdateDataInput\n  upsert: TeamMatchSingleUpsertNestedInput\n}\n\ninput TeamMatchSingleUpsertNestedInput {\n  update: TeamMatchSingleUpdateDataInput!\n  create: TeamMatchSingleCreateInput!\n}\n\ninput TeamMatchSingleWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TeamMatchSingleWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TeamMatchSingleWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TeamMatchSingleWhereInput!]\n  id: ID\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  size: Int\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  size_not: Int\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  size_in: [Int!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  size_not_in: [Int!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  size_lt: Int\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  size_lte: Int\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  size_gt: Int\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  size_gte: Int\n  playerRefs_every: MemberRefWhereInput\n  playerRefs_some: MemberRefWhereInput\n  playerRefs_none: MemberRefWhereInput\n}\n\ninput TeamMatchSingleWhereUniqueInput {\n  id: ID\n}\n\ntype TeamMatchTournament implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  tournament(where: TournamentWhereInput): Tournament!\n  size: Int!\n  playerRefs(\n    where: MemberRefWhereInput\n    orderBy: MemberRefOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [MemberRef!]\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype TeamMatchTournamentConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [TeamMatchTournamentEdge]!\n  aggregate: AggregateTeamMatchTournament!\n}\n\ninput TeamMatchTournamentCreateInput {\n  size: Int!\n  tournament: TournamentCreateOneWithoutTeamsInput!\n  playerRefs: MemberRefCreateManyInput\n}\n\ninput TeamMatchTournamentCreateManyWithoutTournamentInput {\n  create: [TeamMatchTournamentCreateWithoutTournamentInput!]\n  connect: [TeamMatchTournamentWhereUniqueInput!]\n}\n\ninput TeamMatchTournamentCreateOneInput {\n  create: TeamMatchTournamentCreateInput\n  connect: TeamMatchTournamentWhereUniqueInput\n}\n\ninput TeamMatchTournamentCreateWithoutTournamentInput {\n  size: Int!\n  playerRefs: MemberRefCreateManyInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype TeamMatchTournamentEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: TeamMatchTournament!\n\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum TeamMatchTournamentOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  size_ASC\n  size_DESC\n}\n\ntype TeamMatchTournamentPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  size: Int!\n}\n\ntype TeamMatchTournamentSubscriptionPayload {\n  mutation: MutationType!\n  node: TeamMatchTournament\n  updatedFields: [String!]\n  previousValues: TeamMatchTournamentPreviousValues\n}\n\ninput TeamMatchTournamentSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TeamMatchTournamentSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TeamMatchTournamentSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TeamMatchTournamentSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TeamMatchTournamentWhereInput\n}\n\ninput TeamMatchTournamentUpdateDataInput {\n  size: Int\n  tournament: TournamentUpdateOneWithoutTeamsInput\n  playerRefs: MemberRefUpdateManyInput\n}\n\ninput TeamMatchTournamentUpdateInput {\n  size: Int\n  tournament: TournamentUpdateOneWithoutTeamsInput\n  playerRefs: MemberRefUpdateManyInput\n}\n\ninput TeamMatchTournamentUpdateManyWithoutTournamentInput {\n  create: [TeamMatchTournamentCreateWithoutTournamentInput!]\n  connect: [TeamMatchTournamentWhereUniqueInput!]\n  disconnect: [TeamMatchTournamentWhereUniqueInput!]\n  delete: [TeamMatchTournamentWhereUniqueInput!]\n  update: [TeamMatchTournamentUpdateWithWhereUniqueWithoutTournamentInput!]\n  upsert: [TeamMatchTournamentUpsertWithWhereUniqueWithoutTournamentInput!]\n}\n\ninput TeamMatchTournamentUpdateOneInput {\n  create: TeamMatchTournamentCreateInput\n  connect: TeamMatchTournamentWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: TeamMatchTournamentUpdateDataInput\n  upsert: TeamMatchTournamentUpsertNestedInput\n}\n\ninput TeamMatchTournamentUpdateWithoutTournamentDataInput {\n  size: Int\n  playerRefs: MemberRefUpdateManyInput\n}\n\ninput TeamMatchTournamentUpdateWithWhereUniqueWithoutTournamentInput {\n  where: TeamMatchTournamentWhereUniqueInput!\n  data: TeamMatchTournamentUpdateWithoutTournamentDataInput!\n}\n\ninput TeamMatchTournamentUpsertNestedInput {\n  update: TeamMatchTournamentUpdateDataInput!\n  create: TeamMatchTournamentCreateInput!\n}\n\ninput TeamMatchTournamentUpsertWithWhereUniqueWithoutTournamentInput {\n  where: TeamMatchTournamentWhereUniqueInput!\n  update: TeamMatchTournamentUpdateWithoutTournamentDataInput!\n  create: TeamMatchTournamentCreateWithoutTournamentInput!\n}\n\ninput TeamMatchTournamentWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TeamMatchTournamentWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TeamMatchTournamentWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TeamMatchTournamentWhereInput!]\n  id: ID\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  size: Int\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  size_not: Int\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  size_in: [Int!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  size_not_in: [Int!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  size_lt: Int\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  size_lte: Int\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  size_gt: Int\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  size_gte: Int\n  tournament: TournamentWhereInput\n  playerRefs_every: MemberRefWhereInput\n  playerRefs_some: MemberRefWhereInput\n  playerRefs_none: MemberRefWhereInput\n}\n\ninput TeamMatchTournamentWhereUniqueInput {\n  id: ID\n}\n\ntype Tournament implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  size: TournamentSize!\n  status: TournamentStatus!\n  discipline: Discipline!\n  organization(where: OrganizationWhereInput): Organization!\n  teamSize: Int!\n  teams(\n    where: TeamMatchTournamentWhereInput\n    orderBy: TeamMatchTournamentOrderByInput\n    skip: Int\n    after: String\n    before: String\n    first: Int\n    last: Int\n  ): [TeamMatchTournament!]\n  roundLastSixteen(where: RoundLastSixteenWhereInput): RoundLastSixteen\n  roundQuarterfinals(where: RoundQuarterfinalsWhereInput): RoundQuarterfinals\n  roundSemifinals(where: RoundSemifinalsWhereInput): RoundSemifinals\n  roundFinal(where: RoundFinalWhereInput): RoundFinal\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype TournamentConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [TournamentEdge]!\n  aggregate: AggregateTournament!\n}\n\ninput TournamentCreateInput {\n  name: String!\n  size: TournamentSize!\n  status: TournamentStatus!\n  discipline: Discipline!\n  teamSize: Int!\n  organization: OrganizationCreateOneInput!\n  teams: TeamMatchTournamentCreateManyWithoutTournamentInput\n  roundLastSixteen: RoundLastSixteenCreateOneWithoutTournamentInput\n  roundQuarterfinals: RoundQuarterfinalsCreateOneWithoutTournamentInput\n  roundSemifinals: RoundSemifinalsCreateOneWithoutTournamentInput\n  roundFinal: RoundFinalCreateOneWithoutTournamentInput\n}\n\ninput TournamentCreateOneInput {\n  create: TournamentCreateInput\n  connect: TournamentWhereUniqueInput\n}\n\ninput TournamentCreateOneWithoutRoundFinalInput {\n  create: TournamentCreateWithoutRoundFinalInput\n  connect: TournamentWhereUniqueInput\n}\n\ninput TournamentCreateOneWithoutRoundLastSixteenInput {\n  create: TournamentCreateWithoutRoundLastSixteenInput\n  connect: TournamentWhereUniqueInput\n}\n\ninput TournamentCreateOneWithoutRoundQuarterfinalsInput {\n  create: TournamentCreateWithoutRoundQuarterfinalsInput\n  connect: TournamentWhereUniqueInput\n}\n\ninput TournamentCreateOneWithoutRoundSemifinalsInput {\n  create: TournamentCreateWithoutRoundSemifinalsInput\n  connect: TournamentWhereUniqueInput\n}\n\ninput TournamentCreateOneWithoutTeamsInput {\n  create: TournamentCreateWithoutTeamsInput\n  connect: TournamentWhereUniqueInput\n}\n\ninput TournamentCreateWithoutRoundFinalInput {\n  name: String!\n  size: TournamentSize!\n  status: TournamentStatus!\n  discipline: Discipline!\n  teamSize: Int!\n  organization: OrganizationCreateOneInput!\n  teams: TeamMatchTournamentCreateManyWithoutTournamentInput\n  roundLastSixteen: RoundLastSixteenCreateOneWithoutTournamentInput\n  roundQuarterfinals: RoundQuarterfinalsCreateOneWithoutTournamentInput\n  roundSemifinals: RoundSemifinalsCreateOneWithoutTournamentInput\n}\n\ninput TournamentCreateWithoutRoundLastSixteenInput {\n  name: String!\n  size: TournamentSize!\n  status: TournamentStatus!\n  discipline: Discipline!\n  teamSize: Int!\n  organization: OrganizationCreateOneInput!\n  teams: TeamMatchTournamentCreateManyWithoutTournamentInput\n  roundQuarterfinals: RoundQuarterfinalsCreateOneWithoutTournamentInput\n  roundSemifinals: RoundSemifinalsCreateOneWithoutTournamentInput\n  roundFinal: RoundFinalCreateOneWithoutTournamentInput\n}\n\ninput TournamentCreateWithoutRoundQuarterfinalsInput {\n  name: String!\n  size: TournamentSize!\n  status: TournamentStatus!\n  discipline: Discipline!\n  teamSize: Int!\n  organization: OrganizationCreateOneInput!\n  teams: TeamMatchTournamentCreateManyWithoutTournamentInput\n  roundLastSixteen: RoundLastSixteenCreateOneWithoutTournamentInput\n  roundSemifinals: RoundSemifinalsCreateOneWithoutTournamentInput\n  roundFinal: RoundFinalCreateOneWithoutTournamentInput\n}\n\ninput TournamentCreateWithoutRoundSemifinalsInput {\n  name: String!\n  size: TournamentSize!\n  status: TournamentStatus!\n  discipline: Discipline!\n  teamSize: Int!\n  organization: OrganizationCreateOneInput!\n  teams: TeamMatchTournamentCreateManyWithoutTournamentInput\n  roundLastSixteen: RoundLastSixteenCreateOneWithoutTournamentInput\n  roundQuarterfinals: RoundQuarterfinalsCreateOneWithoutTournamentInput\n  roundFinal: RoundFinalCreateOneWithoutTournamentInput\n}\n\ninput TournamentCreateWithoutTeamsInput {\n  name: String!\n  size: TournamentSize!\n  status: TournamentStatus!\n  discipline: Discipline!\n  teamSize: Int!\n  organization: OrganizationCreateOneInput!\n  roundLastSixteen: RoundLastSixteenCreateOneWithoutTournamentInput\n  roundQuarterfinals: RoundQuarterfinalsCreateOneWithoutTournamentInput\n  roundSemifinals: RoundSemifinalsCreateOneWithoutTournamentInput\n  roundFinal: RoundFinalCreateOneWithoutTournamentInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype TournamentEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Tournament!\n\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum TournamentOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  name_ASC\n  name_DESC\n  size_ASC\n  size_DESC\n  status_ASC\n  status_DESC\n  discipline_ASC\n  discipline_DESC\n  teamSize_ASC\n  teamSize_DESC\n}\n\ntype TournamentPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  size: TournamentSize!\n  status: TournamentStatus!\n  discipline: Discipline!\n  teamSize: Int!\n}\n\nenum TournamentSize {\n  Small\n  Medium\n  Large\n}\n\nenum TournamentStatus {\n  New\n  InProgress\n  Finished\n}\n\ntype TournamentSubscriptionPayload {\n  mutation: MutationType!\n  node: Tournament\n  updatedFields: [String!]\n  previousValues: TournamentPreviousValues\n}\n\ninput TournamentSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TournamentSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TournamentSubscriptionWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TournamentSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TournamentWhereInput\n}\n\ninput TournamentUpdateDataInput {\n  name: String\n  size: TournamentSize\n  status: TournamentStatus\n  discipline: Discipline\n  teamSize: Int\n  organization: OrganizationUpdateOneInput\n  teams: TeamMatchTournamentUpdateManyWithoutTournamentInput\n  roundLastSixteen: RoundLastSixteenUpdateOneWithoutTournamentInput\n  roundQuarterfinals: RoundQuarterfinalsUpdateOneWithoutTournamentInput\n  roundSemifinals: RoundSemifinalsUpdateOneWithoutTournamentInput\n  roundFinal: RoundFinalUpdateOneWithoutTournamentInput\n}\n\ninput TournamentUpdateInput {\n  name: String\n  size: TournamentSize\n  status: TournamentStatus\n  discipline: Discipline\n  teamSize: Int\n  organization: OrganizationUpdateOneInput\n  teams: TeamMatchTournamentUpdateManyWithoutTournamentInput\n  roundLastSixteen: RoundLastSixteenUpdateOneWithoutTournamentInput\n  roundQuarterfinals: RoundQuarterfinalsUpdateOneWithoutTournamentInput\n  roundSemifinals: RoundSemifinalsUpdateOneWithoutTournamentInput\n  roundFinal: RoundFinalUpdateOneWithoutTournamentInput\n}\n\ninput TournamentUpdateOneInput {\n  create: TournamentCreateInput\n  connect: TournamentWhereUniqueInput\n  delete: Boolean\n  update: TournamentUpdateDataInput\n  upsert: TournamentUpsertNestedInput\n}\n\ninput TournamentUpdateOneWithoutRoundFinalInput {\n  create: TournamentCreateWithoutRoundFinalInput\n  connect: TournamentWhereUniqueInput\n  delete: Boolean\n  update: TournamentUpdateWithoutRoundFinalDataInput\n  upsert: TournamentUpsertWithoutRoundFinalInput\n}\n\ninput TournamentUpdateOneWithoutRoundLastSixteenInput {\n  create: TournamentCreateWithoutRoundLastSixteenInput\n  connect: TournamentWhereUniqueInput\n  delete: Boolean\n  update: TournamentUpdateWithoutRoundLastSixteenDataInput\n  upsert: TournamentUpsertWithoutRoundLastSixteenInput\n}\n\ninput TournamentUpdateOneWithoutRoundQuarterfinalsInput {\n  create: TournamentCreateWithoutRoundQuarterfinalsInput\n  connect: TournamentWhereUniqueInput\n  delete: Boolean\n  update: TournamentUpdateWithoutRoundQuarterfinalsDataInput\n  upsert: TournamentUpsertWithoutRoundQuarterfinalsInput\n}\n\ninput TournamentUpdateOneWithoutRoundSemifinalsInput {\n  create: TournamentCreateWithoutRoundSemifinalsInput\n  connect: TournamentWhereUniqueInput\n  delete: Boolean\n  update: TournamentUpdateWithoutRoundSemifinalsDataInput\n  upsert: TournamentUpsertWithoutRoundSemifinalsInput\n}\n\ninput TournamentUpdateOneWithoutTeamsInput {\n  create: TournamentCreateWithoutTeamsInput\n  connect: TournamentWhereUniqueInput\n  delete: Boolean\n  update: TournamentUpdateWithoutTeamsDataInput\n  upsert: TournamentUpsertWithoutTeamsInput\n}\n\ninput TournamentUpdateWithoutRoundFinalDataInput {\n  name: String\n  size: TournamentSize\n  status: TournamentStatus\n  discipline: Discipline\n  teamSize: Int\n  organization: OrganizationUpdateOneInput\n  teams: TeamMatchTournamentUpdateManyWithoutTournamentInput\n  roundLastSixteen: RoundLastSixteenUpdateOneWithoutTournamentInput\n  roundQuarterfinals: RoundQuarterfinalsUpdateOneWithoutTournamentInput\n  roundSemifinals: RoundSemifinalsUpdateOneWithoutTournamentInput\n}\n\ninput TournamentUpdateWithoutRoundLastSixteenDataInput {\n  name: String\n  size: TournamentSize\n  status: TournamentStatus\n  discipline: Discipline\n  teamSize: Int\n  organization: OrganizationUpdateOneInput\n  teams: TeamMatchTournamentUpdateManyWithoutTournamentInput\n  roundQuarterfinals: RoundQuarterfinalsUpdateOneWithoutTournamentInput\n  roundSemifinals: RoundSemifinalsUpdateOneWithoutTournamentInput\n  roundFinal: RoundFinalUpdateOneWithoutTournamentInput\n}\n\ninput TournamentUpdateWithoutRoundQuarterfinalsDataInput {\n  name: String\n  size: TournamentSize\n  status: TournamentStatus\n  discipline: Discipline\n  teamSize: Int\n  organization: OrganizationUpdateOneInput\n  teams: TeamMatchTournamentUpdateManyWithoutTournamentInput\n  roundLastSixteen: RoundLastSixteenUpdateOneWithoutTournamentInput\n  roundSemifinals: RoundSemifinalsUpdateOneWithoutTournamentInput\n  roundFinal: RoundFinalUpdateOneWithoutTournamentInput\n}\n\ninput TournamentUpdateWithoutRoundSemifinalsDataInput {\n  name: String\n  size: TournamentSize\n  status: TournamentStatus\n  discipline: Discipline\n  teamSize: Int\n  organization: OrganizationUpdateOneInput\n  teams: TeamMatchTournamentUpdateManyWithoutTournamentInput\n  roundLastSixteen: RoundLastSixteenUpdateOneWithoutTournamentInput\n  roundQuarterfinals: RoundQuarterfinalsUpdateOneWithoutTournamentInput\n  roundFinal: RoundFinalUpdateOneWithoutTournamentInput\n}\n\ninput TournamentUpdateWithoutTeamsDataInput {\n  name: String\n  size: TournamentSize\n  status: TournamentStatus\n  discipline: Discipline\n  teamSize: Int\n  organization: OrganizationUpdateOneInput\n  roundLastSixteen: RoundLastSixteenUpdateOneWithoutTournamentInput\n  roundQuarterfinals: RoundQuarterfinalsUpdateOneWithoutTournamentInput\n  roundSemifinals: RoundSemifinalsUpdateOneWithoutTournamentInput\n  roundFinal: RoundFinalUpdateOneWithoutTournamentInput\n}\n\ninput TournamentUpsertNestedInput {\n  update: TournamentUpdateDataInput!\n  create: TournamentCreateInput!\n}\n\ninput TournamentUpsertWithoutRoundFinalInput {\n  update: TournamentUpdateWithoutRoundFinalDataInput!\n  create: TournamentCreateWithoutRoundFinalInput!\n}\n\ninput TournamentUpsertWithoutRoundLastSixteenInput {\n  update: TournamentUpdateWithoutRoundLastSixteenDataInput!\n  create: TournamentCreateWithoutRoundLastSixteenInput!\n}\n\ninput TournamentUpsertWithoutRoundQuarterfinalsInput {\n  update: TournamentUpdateWithoutRoundQuarterfinalsDataInput!\n  create: TournamentCreateWithoutRoundQuarterfinalsInput!\n}\n\ninput TournamentUpsertWithoutRoundSemifinalsInput {\n  update: TournamentUpdateWithoutRoundSemifinalsDataInput!\n  create: TournamentCreateWithoutRoundSemifinalsInput!\n}\n\ninput TournamentUpsertWithoutTeamsInput {\n  update: TournamentUpdateWithoutTeamsDataInput!\n  create: TournamentCreateWithoutTeamsInput!\n}\n\ninput TournamentWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [TournamentWhereInput!]\n\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [TournamentWhereInput!]\n\n  \"\"\"\n  Logical NOT on all given filters combined by AND.\n  \"\"\"\n  NOT: [TournamentWhereInput!]\n  id: ID\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  updatedAt_gte: DateTime\n  name: String\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  size: TournamentSize\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  size_not: TournamentSize\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  size_in: [TournamentSize!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  size_not_in: [TournamentSize!]\n  status: TournamentStatus\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  status_not: TournamentStatus\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  status_in: [TournamentStatus!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  status_not_in: [TournamentStatus!]\n  discipline: Discipline\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  discipline_not: Discipline\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  discipline_in: [Discipline!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  discipline_not_in: [Discipline!]\n  teamSize: Int\n\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  teamSize_not: Int\n\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  teamSize_in: [Int!]\n\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  teamSize_not_in: [Int!]\n\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  teamSize_lt: Int\n\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  teamSize_lte: Int\n\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  teamSize_gt: Int\n\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  teamSize_gte: Int\n  organization: OrganizationWhereInput\n  teams_every: TeamMatchTournamentWhereInput\n  teams_some: TeamMatchTournamentWhereInput\n  teams_none: TeamMatchTournamentWhereInput\n  roundLastSixteen: RoundLastSixteenWhereInput\n  roundQuarterfinals: RoundQuarterfinalsWhereInput\n  roundSemifinals: RoundSemifinalsWhereInput\n  roundFinal: RoundFinalWhereInput\n}\n\ninput TournamentWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 71,
      "containsCycle": true,
      "numDefinitions": 229
    }
  ],
  "metrics": {
    "created_at": "2017-08-28T19:25:25Z",
    "updated_at": "2018-07-08T20:39:28Z",
    "pushed_at": "2019-07-13T15:59:54Z",
    "issues": 1,
    "watchers": 0,
    "fork_count": 1,
    "has_wiki_enabled": true,
    "license": "bsd-3-clause",
    "pull_requests": 127,
    "pull_requests_open": 20,
    "pull_requests_closed": 69,
    "pull_requests_merged": 38,
    "releases": 0,
    "stargazers": 6
  }
}