{
  "repo_name": "pethotel",
  "repo_full_name": "pablog12/pethotel",
  "repo_owner": "pablog12",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "pethotel/plugins/graphql/config/generated/schema.graphql",
      "sha": "3c0a2a6193d853d6c8cb062551c137390138e84d",
      "url": "https://api.github.com/repositories/177360139/contents/pethotel/plugins/graphql/config/generated/schema.graphql?ref=bcb0daebc87ddb0ff542ee548dc1a0141a7123c8",
      "git_url": "https://api.github.com/repositories/177360139/git/blobs/3c0a2a6193d853d6c8cb062551c137390138e84d",
      "html_url": "https://github.com/pablog12/pethotel/blob/bcb0daebc87ddb0ff542ee548dc1a0141a7123c8/pethotel/plugins/graphql/config/generated/schema.graphql",
      "content": "input createPublicationInput {\n  data: PublicationInput\n}\n\ntype createPublicationPayload {\n  publication: Publication\n}\n\ninput createRoleInput {\n  data: RoleInput\n}\n\ntype createRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput createUserInput {\n  data: UserInput\n}\n\ntype createUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"\nThe `DateTime` scalar represents a date and time following the ISO 8601 standard\n\"\"\"\nscalar DateTime\n\ninput deletePublicationInput {\n  where: InputID\n}\n\ntype deletePublicationPayload {\n  publication: Publication\n}\n\ninput deleteRoleInput {\n  where: InputID\n}\n\ntype deleteRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput deleteUserInput {\n  where: InputID\n}\n\ntype deleteUserPayload {\n  user: UsersPermissionsUser\n}\n\ninput editFileInput {\n  name: String\n  hash: String\n  sha256: String\n  ext: String\n  mime: String\n  size: String\n  url: String\n  provider: String\n  public_id: String\n  related: [ID]\n}\n\ninput editPublicationInput {\n  title: String\n  description: String\n  pictures: [ID]\n  hasKids: Boolean\n  otherPets: Boolean\n  price: Float\n  exoticPets: Boolean\n  user: ID\n  femalePets: Boolean\n  malePets: Boolean\n  houseType: ENUM_PUBLICATION_HOUSETYPE\n  smallPets: Boolean\n  mediumPets: Boolean\n  bigPets: Boolean\n  takesCats: Boolean\n  takesDogs: Boolean\n  addressLatitude: Float\n  addresslongitude: Float\n  dateStart: DateTime\n  dateEnd: DateTime\n  formatted_address: String\n  street_number: String\n  route: String\n  locality: String\n  administrative_area_level_2: String\n  administrative_area_level_1: String\n  postal_code: String\n  background_colour: String\n}\n\ninput editRoleInput {\n  name: String\n  description: String\n  type: String\n  permissions: [ID]\n  users: [ID]\n}\n\ninput editUserInput {\n  username: String\n  email: String\n  provider: String\n  password: String\n  resetPasswordToken: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: ID\n  publication: ID\n}\n\nenum ENUM_PUBLICATION_HOUSETYPE {\n  Casa\n  Apartamento\n}\n\ninput FileInput {\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related: [ID]\n}\n\ninput InputID {\n  id: ID!\n}\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\"\"\"\nscalar JSON\n\nunion Morph = UsersPermissionsMe | UsersPermissionsMeRole | Publication | createPublicationPayload | updatePublicationPayload | deletePublicationPayload | UploadFile | UsersPermissionsPermission | UsersPermissionsRole | createRolePayload | updateRolePayload | deleteRolePayload | UsersPermissionsUser | createUserPayload | updateUserPayload | deleteUserPayload\n\ntype Mutation {\n  createPublication(input: createPublicationInput): createPublicationPayload\n  updatePublication(input: updatePublicationInput): updatePublicationPayload\n  deletePublication(input: deletePublicationInput): deletePublicationPayload\n\n  \"\"\"Create a new role\"\"\"\n  createRole(input: createRoleInput): createRolePayload\n\n  \"\"\"Update an existing role\"\"\"\n  updateRole(input: updateRoleInput): updateRolePayload\n\n  \"\"\"Delete an existing role\"\"\"\n  deleteRole(input: deleteRoleInput): deleteRolePayload\n\n  \"\"\"Create a new user\"\"\"\n  createUser(input: createUserInput): createUserPayload\n\n  \"\"\"Update an existing user\"\"\"\n  updateUser(input: updateUserInput): updateUserPayload\n\n  \"\"\"Delete an existing user\"\"\"\n  deleteUser(input: deleteUserInput): deleteUserPayload\n  upload(refId: ID, ref: String, source: String, file: Upload!): UploadFile!\n}\n\n\"\"\"User offering to be a pet host\"\"\"\ntype Publication {\n  id: ID!\n  created_at: DateTime!\n  updated_at: DateTime!\n  title: String!\n  description: String\n  hasKids: Boolean\n  otherPets: Boolean\n  price: Float!\n  exoticPets: Boolean\n  user: UsersPermissionsUser\n  femalePets: Boolean\n  malePets: Boolean\n  houseType: ENUM_PUBLICATION_HOUSETYPE\n  smallPets: Boolean\n  mediumPets: Boolean\n  bigPets: Boolean\n  takesCats: Boolean\n  takesDogs: Boolean\n  addressLatitude: Float\n  addresslongitude: Float\n  dateStart: DateTime!\n  dateEnd: DateTime!\n  formatted_address: String\n  street_number: String\n  route: String\n  locality: String\n  administrative_area_level_2: String\n  administrative_area_level_1: String\n  postal_code: String\n  background_colour: String\n  pictures(sort: String, limit: Int, start: Int, where: JSON): [UploadFile]\n}\n\ninput PublicationInput {\n  title: String!\n  description: String\n  pictures: [ID]\n  hasKids: Boolean\n  otherPets: Boolean\n  price: Float!\n  exoticPets: Boolean\n  user: ID\n  femalePets: Boolean\n  malePets: Boolean\n  houseType: ENUM_PUBLICATION_HOUSETYPE\n  smallPets: Boolean\n  mediumPets: Boolean\n  bigPets: Boolean\n  takesCats: Boolean\n  takesDogs: Boolean\n  addressLatitude: Float\n  addresslongitude: Float\n  dateStart: DateTime!\n  dateEnd: DateTime!\n  formatted_address: String\n  street_number: String\n  route: String\n  locality: String\n  administrative_area_level_2: String\n  administrative_area_level_1: String\n  postal_code: String\n  background_colour: String\n}\n\ntype Query {\n  publication(id: ID!): Publication\n  publications(sort: String, limit: Int, start: Int, where: JSON): [Publication]\n  files(sort: String, limit: Int, start: Int, where: JSON): [UploadFile]\n  role(id: ID!): UsersPermissionsRole\n\n  \"\"\"\n  Retrieve all the existing roles. You can't apply filters on this query.\n  \"\"\"\n  roles(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsRole]\n  user(id: ID!): UsersPermissionsUser\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n  me: UsersPermissionsMe\n}\n\ninput RoleInput {\n  name: String!\n  description: String\n  type: String\n  permissions: [ID]\n  users: [ID]\n}\n\ninput updatePublicationInput {\n  where: InputID\n  data: editPublicationInput\n}\n\ntype updatePublicationPayload {\n  publication: Publication\n}\n\ninput updateRoleInput {\n  where: InputID\n  data: editRoleInput\n}\n\ntype updateRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput updateUserInput {\n  where: InputID\n  data: editUserInput\n}\n\ntype updateUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload\n\ntype UploadFile {\n  id: ID!\n  created_at: DateTime!\n  updated_at: DateTime!\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related(sort: String, limit: Int, start: Int, where: JSON): [Morph]\n}\n\ninput UserInput {\n  username: String!\n  email: String!\n  provider: String\n  password: String\n  resetPasswordToken: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: ID\n  publication: ID\n}\n\ntype UsersPermissionsMe {\n  _id: ID!\n  username: String!\n  email: String!\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsMeRole\n}\n\ntype UsersPermissionsMeRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n}\n\ntype UsersPermissionsPermission {\n  id: ID!\n  type: String!\n  controller: String!\n  action: String!\n  enabled: Boolean!\n  policy: String\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsRole {\n  id: ID!\n  name: String!\n  description: String\n  type: String\n  permissions(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsPermission]\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n}\n\ntype UsersPermissionsUser {\n  id: ID!\n  username: String!\n  email: String!\n  provider: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsRole\n  publication: Publication\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 18,
      "containsCycle": true,
      "numDefinitions": 41
    }
  ],
  "metrics": {
    "created_at": "2019-03-24T02:01:41Z",
    "updated_at": "2019-04-07T13:09:04Z",
    "pushed_at": "2019-04-07T13:09:03Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}