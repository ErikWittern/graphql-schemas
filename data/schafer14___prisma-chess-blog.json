{
  "repo_name": "prisma-chess-blog",
  "repo_full_name": "schafer14/prisma-chess-blog",
  "repo_owner": "schafer14",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "server/src/generated/prisma.graphql",
      "sha": "4ff4df772903251095329acdcfff39e98891f8e8",
      "url": "https://api.github.com/repositories/146949378/contents/server/src/generated/prisma.graphql?ref=b2d1bb22a017189f7426c28fc6869d0b6281d4b1",
      "git_url": "https://api.github.com/repositories/146949378/git/blobs/4ff4df772903251095329acdcfff39e98891f8e8",
      "html_url": "https://github.com/schafer14/prisma-chess-blog/blob/b2d1bb22a017189f7426c28fc6869d0b6281d4b1/server/src/generated/prisma.graphql",
      "content": "# source: https://us1.prisma.sh/public-shardseeker-99/chess/dev\n# timestamp: Sat Sep 01 2018 10:29:19 GMT+1000 (AEST)\n\ntype AggregateAnnotatedGame {\n  count: Int!\n}\n\ntype AggregateBlogPost {\n  count: Int!\n}\n\ntype AggregateChallenge {\n  count: Int!\n}\n\ntype AggregateFen {\n  count: Int!\n}\n\ntype AggregateMoveSet {\n  count: Int!\n}\n\ntype AggregateTimeControl {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype AggregateUserRole {\n  count: Int!\n}\n\ntype AnnotatedGame implements Node {\n  id: ID!\n  startpos(where: FenWhereInput): Fen\n  moveSets(where: MoveSetWhereInput, orderBy: MoveSetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MoveSet!]\n  users(where: UserRoleWhereInput, orderBy: UserRoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserRole!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype AnnotatedGameConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [AnnotatedGameEdge]!\n  aggregate: AggregateAnnotatedGame!\n}\n\ninput AnnotatedGameCreateInput {\n  startpos: FenCreateOneInput\n  moveSets: MoveSetCreateManyInput\n  users: UserRoleCreateManyInput\n}\n\ninput AnnotatedGameCreateOneInput {\n  create: AnnotatedGameCreateInput\n  connect: AnnotatedGameWhereUniqueInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype AnnotatedGameEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: AnnotatedGame!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum AnnotatedGameOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AnnotatedGamePreviousValues {\n  id: ID!\n}\n\ntype AnnotatedGameSubscriptionPayload {\n  mutation: MutationType!\n  node: AnnotatedGame\n  updatedFields: [String!]\n  previousValues: AnnotatedGamePreviousValues\n}\n\ninput AnnotatedGameSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [AnnotatedGameSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [AnnotatedGameSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [AnnotatedGameSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AnnotatedGameWhereInput\n}\n\ninput AnnotatedGameUpdateDataInput {\n  startpos: FenUpdateOneInput\n  moveSets: MoveSetUpdateManyInput\n  users: UserRoleUpdateManyInput\n}\n\ninput AnnotatedGameUpdateInput {\n  startpos: FenUpdateOneInput\n  moveSets: MoveSetUpdateManyInput\n  users: UserRoleUpdateManyInput\n}\n\ninput AnnotatedGameUpdateOneInput {\n  create: AnnotatedGameCreateInput\n  connect: AnnotatedGameWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: AnnotatedGameUpdateDataInput\n  upsert: AnnotatedGameUpsertNestedInput\n}\n\ninput AnnotatedGameUpsertNestedInput {\n  update: AnnotatedGameUpdateDataInput!\n  create: AnnotatedGameCreateInput!\n}\n\ninput AnnotatedGameWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [AnnotatedGameWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [AnnotatedGameWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [AnnotatedGameWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  startpos: FenWhereInput\n  moveSets_every: MoveSetWhereInput\n  moveSets_some: MoveSetWhereInput\n  moveSets_none: MoveSetWhereInput\n  users_every: UserRoleWhereInput\n  users_some: UserRoleWhereInput\n  users_none: UserRoleWhereInput\n}\n\ninput AnnotatedGameWhereUniqueInput {\n  id: ID\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\ntype BlogPost implements Node {\n  id: ID!\n  slug: String!\n  title: String!\n  game(where: AnnotatedGameWhereInput): AnnotatedGame\n  markup: String\n  keywords: [String!]!\n  published: Boolean\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype BlogPostConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [BlogPostEdge]!\n  aggregate: AggregateBlogPost!\n}\n\ninput BlogPostCreateInput {\n  slug: String!\n  title: String!\n  markup: String\n  published: Boolean\n  keywords: BlogPostCreatekeywordsInput\n  game: AnnotatedGameCreateOneInput\n}\n\ninput BlogPostCreatekeywordsInput {\n  set: [String!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BlogPostEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: BlogPost!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum BlogPostOrderByInput {\n  id_ASC\n  id_DESC\n  slug_ASC\n  slug_DESC\n  title_ASC\n  title_DESC\n  markup_ASC\n  markup_DESC\n  published_ASC\n  published_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BlogPostPreviousValues {\n  id: ID!\n  slug: String!\n  title: String!\n  markup: String\n  keywords: [String!]!\n  published: Boolean\n}\n\ntype BlogPostSubscriptionPayload {\n  mutation: MutationType!\n  node: BlogPost\n  updatedFields: [String!]\n  previousValues: BlogPostPreviousValues\n}\n\ninput BlogPostSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [BlogPostSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [BlogPostSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [BlogPostSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BlogPostWhereInput\n}\n\ninput BlogPostUpdateInput {\n  slug: String\n  title: String\n  markup: String\n  published: Boolean\n  keywords: BlogPostUpdatekeywordsInput\n  game: AnnotatedGameUpdateOneInput\n}\n\ninput BlogPostUpdatekeywordsInput {\n  set: [String!]\n}\n\ninput BlogPostWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [BlogPostWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [BlogPostWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [BlogPostWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  slug: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  slug_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  slug_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  slug_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  slug_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  slug_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  slug_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  slug_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  slug_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  slug_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  slug_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  slug_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  slug_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  slug_not_ends_with: String\n  title: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  title_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  title_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  title_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  title_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  title_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  title_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  title_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  title_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  title_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  title_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  title_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  title_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  title_not_ends_with: String\n  markup: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  markup_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  markup_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  markup_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  markup_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  markup_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  markup_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  markup_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  markup_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  markup_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  markup_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  markup_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  markup_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  markup_not_ends_with: String\n  published: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  published_not: Boolean\n  game: AnnotatedGameWhereInput\n}\n\ninput BlogPostWhereUniqueInput {\n  id: ID\n  slug: String\n}\n\ntype Challenge implements Node {\n  id: ID!\n  user(where: UserWhereInput): User\n  timeControls(where: TimeControlWhereInput): TimeControl\n  rated: Boolean\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ChallengeConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ChallengeEdge]!\n  aggregate: AggregateChallenge!\n}\n\ninput ChallengeCreateInput {\n  rated: Boolean\n  user: UserCreateOneInput\n  timeControls: TimeControlCreateOneInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ChallengeEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Challenge!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum ChallengeOrderByInput {\n  id_ASC\n  id_DESC\n  rated_ASC\n  rated_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ChallengePreviousValues {\n  id: ID!\n  rated: Boolean\n}\n\ntype ChallengeSubscriptionPayload {\n  mutation: MutationType!\n  node: Challenge\n  updatedFields: [String!]\n  previousValues: ChallengePreviousValues\n}\n\ninput ChallengeSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ChallengeSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ChallengeSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ChallengeSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ChallengeWhereInput\n}\n\ninput ChallengeUpdateInput {\n  rated: Boolean\n  user: UserUpdateOneInput\n  timeControls: TimeControlUpdateOneInput\n}\n\ninput ChallengeWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ChallengeWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ChallengeWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ChallengeWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  rated: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  rated_not: Boolean\n  user: UserWhereInput\n  timeControls: TimeControlWhereInput\n}\n\ninput ChallengeWhereUniqueInput {\n  id: ID\n}\n\ntype Fen {\n  fen: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FenConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FenEdge]!\n  aggregate: AggregateFen!\n}\n\ninput FenCreateInput {\n  fen: String!\n}\n\ninput FenCreateOneInput {\n  create: FenCreateInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FenEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Fen!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum FenOrderByInput {\n  fen_ASC\n  fen_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype FenPreviousValues {\n  fen: String!\n}\n\ntype FenSubscriptionPayload {\n  mutation: MutationType!\n  node: Fen\n  updatedFields: [String!]\n  previousValues: FenPreviousValues\n}\n\ninput FenSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [FenSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [FenSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [FenSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FenWhereInput\n}\n\ninput FenUpdateDataInput {\n  fen: String\n}\n\ninput FenUpdateInput {\n  fen: String\n}\n\ninput FenUpdateOneInput {\n  create: FenCreateInput\n  disconnect: Boolean\n  delete: Boolean\n  update: FenUpdateDataInput\n  upsert: FenUpsertNestedInput\n}\n\ninput FenUpsertNestedInput {\n  update: FenUpdateDataInput!\n  create: FenCreateInput!\n}\n\ninput FenWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [FenWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [FenWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [FenWhereInput!]\n  fen: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  fen_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  fen_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  fen_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  fen_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  fen_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  fen_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  fen_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  fen_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  fen_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  fen_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  fen_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  fen_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  fen_not_ends_with: String\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype MoveSet {\n  moves: [String!]!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype MoveSetConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [MoveSetEdge]!\n  aggregate: AggregateMoveSet!\n}\n\ninput MoveSetCreateInput {\n  moves: MoveSetCreatemovesInput\n}\n\ninput MoveSetCreateManyInput {\n  create: [MoveSetCreateInput!]\n}\n\ninput MoveSetCreatemovesInput {\n  set: [String!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype MoveSetEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: MoveSet!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum MoveSetOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype MoveSetPreviousValues {\n  moves: [String!]!\n}\n\ntype MoveSetSubscriptionPayload {\n  mutation: MutationType!\n  node: MoveSet\n  updatedFields: [String!]\n  previousValues: MoveSetPreviousValues\n}\n\ninput MoveSetSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [MoveSetSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [MoveSetSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [MoveSetSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: MoveSetWhereInput\n}\n\ninput MoveSetUpdateInput {\n  moves: MoveSetUpdatemovesInput\n}\n\ninput MoveSetUpdateManyInput {\n  create: [MoveSetCreateInput!]\n}\n\ninput MoveSetUpdatemovesInput {\n  set: [String!]\n}\n\ninput MoveSetWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [MoveSetWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [MoveSetWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [MoveSetWhereInput!]\n}\n\ntype Mutation {\n  createBlogPost(data: BlogPostCreateInput!): BlogPost!\n  createChallenge(data: ChallengeCreateInput!): Challenge!\n  createUserRole(data: UserRoleCreateInput!): UserRole!\n  createFen(data: FenCreateInput!): Fen!\n  createTimeControl(data: TimeControlCreateInput!): TimeControl!\n  createMoveSet(data: MoveSetCreateInput!): MoveSet!\n  createUser(data: UserCreateInput!): User!\n  createAnnotatedGame(data: AnnotatedGameCreateInput!): AnnotatedGame!\n  updateBlogPost(data: BlogPostUpdateInput!, where: BlogPostWhereUniqueInput!): BlogPost\n  updateChallenge(data: ChallengeUpdateInput!, where: ChallengeWhereUniqueInput!): Challenge\n  updateTimeControl(data: TimeControlUpdateInput!, where: TimeControlWhereUniqueInput!): TimeControl\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateAnnotatedGame(data: AnnotatedGameUpdateInput!, where: AnnotatedGameWhereUniqueInput!): AnnotatedGame\n  deleteBlogPost(where: BlogPostWhereUniqueInput!): BlogPost\n  deleteChallenge(where: ChallengeWhereUniqueInput!): Challenge\n  deleteTimeControl(where: TimeControlWhereUniqueInput!): TimeControl\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteAnnotatedGame(where: AnnotatedGameWhereUniqueInput!): AnnotatedGame\n  upsertBlogPost(where: BlogPostWhereUniqueInput!, create: BlogPostCreateInput!, update: BlogPostUpdateInput!): BlogPost!\n  upsertChallenge(where: ChallengeWhereUniqueInput!, create: ChallengeCreateInput!, update: ChallengeUpdateInput!): Challenge!\n  upsertTimeControl(where: TimeControlWhereUniqueInput!, create: TimeControlCreateInput!, update: TimeControlUpdateInput!): TimeControl!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertAnnotatedGame(where: AnnotatedGameWhereUniqueInput!, create: AnnotatedGameCreateInput!, update: AnnotatedGameUpdateInput!): AnnotatedGame!\n  updateManyBlogPosts(data: BlogPostUpdateInput!, where: BlogPostWhereInput): BatchPayload!\n  updateManyChallenges(data: ChallengeUpdateInput!, where: ChallengeWhereInput): BatchPayload!\n  updateManyUserRoles(data: UserRoleUpdateInput!, where: UserRoleWhereInput): BatchPayload!\n  updateManyFens(data: FenUpdateInput!, where: FenWhereInput): BatchPayload!\n  updateManyTimeControls(data: TimeControlUpdateInput!, where: TimeControlWhereInput): BatchPayload!\n  updateManyMoveSets(data: MoveSetUpdateInput!, where: MoveSetWhereInput): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  updateManyAnnotatedGames(data: AnnotatedGameUpdateInput!, where: AnnotatedGameWhereInput): BatchPayload!\n  deleteManyBlogPosts(where: BlogPostWhereInput): BatchPayload!\n  deleteManyChallenges(where: ChallengeWhereInput): BatchPayload!\n  deleteManyUserRoles(where: UserRoleWhereInput): BatchPayload!\n  deleteManyFens(where: FenWhereInput): BatchPayload!\n  deleteManyTimeControls(where: TimeControlWhereInput): BatchPayload!\n  deleteManyMoveSets(where: MoveSetWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyAnnotatedGames(where: AnnotatedGameWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  blogPosts(where: BlogPostWhereInput, orderBy: BlogPostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BlogPost]!\n  challenges(where: ChallengeWhereInput, orderBy: ChallengeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Challenge]!\n  userRoles(where: UserRoleWhereInput, orderBy: UserRoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserRole]!\n  fens(where: FenWhereInput, orderBy: FenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Fen]!\n  timeControls(where: TimeControlWhereInput, orderBy: TimeControlOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TimeControl]!\n  moveSets(where: MoveSetWhereInput, orderBy: MoveSetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MoveSet]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  annotatedGames(where: AnnotatedGameWhereInput, orderBy: AnnotatedGameOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AnnotatedGame]!\n  blogPost(where: BlogPostWhereUniqueInput!): BlogPost\n  challenge(where: ChallengeWhereUniqueInput!): Challenge\n  timeControl(where: TimeControlWhereUniqueInput!): TimeControl\n  user(where: UserWhereUniqueInput!): User\n  annotatedGame(where: AnnotatedGameWhereUniqueInput!): AnnotatedGame\n  blogPostsConnection(where: BlogPostWhereInput, orderBy: BlogPostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BlogPostConnection!\n  challengesConnection(where: ChallengeWhereInput, orderBy: ChallengeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChallengeConnection!\n  userRolesConnection(where: UserRoleWhereInput, orderBy: UserRoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserRoleConnection!\n  fensConnection(where: FenWhereInput, orderBy: FenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FenConnection!\n  timeControlsConnection(where: TimeControlWhereInput, orderBy: TimeControlOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TimeControlConnection!\n  moveSetsConnection(where: MoveSetWhereInput, orderBy: MoveSetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MoveSetConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  annotatedGamesConnection(where: AnnotatedGameWhereInput, orderBy: AnnotatedGameOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AnnotatedGameConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  blogPost(where: BlogPostSubscriptionWhereInput): BlogPostSubscriptionPayload\n  challenge(where: ChallengeSubscriptionWhereInput): ChallengeSubscriptionPayload\n  userRole(where: UserRoleSubscriptionWhereInput): UserRoleSubscriptionPayload\n  fen(where: FenSubscriptionWhereInput): FenSubscriptionPayload\n  timeControl(where: TimeControlSubscriptionWhereInput): TimeControlSubscriptionPayload\n  moveSet(where: MoveSetSubscriptionWhereInput): MoveSetSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  annotatedGame(where: AnnotatedGameSubscriptionWhereInput): AnnotatedGameSubscriptionPayload\n}\n\ntype TimeControl implements Node {\n  id: ID!\n  increment: Float\n  base: Float\n  class: TimeControlClasses\n  isCorrespondence: Boolean\n}\n\nenum TimeControlClasses {\n  BULLET\n  BLITZ\n  RAPID\n  CLASSIC\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TimeControlConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TimeControlEdge]!\n  aggregate: AggregateTimeControl!\n}\n\ninput TimeControlCreateInput {\n  increment: Float\n  base: Float\n  class: TimeControlClasses\n  isCorrespondence: Boolean\n}\n\ninput TimeControlCreateOneInput {\n  create: TimeControlCreateInput\n  connect: TimeControlWhereUniqueInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TimeControlEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: TimeControl!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum TimeControlOrderByInput {\n  id_ASC\n  id_DESC\n  increment_ASC\n  increment_DESC\n  base_ASC\n  base_DESC\n  class_ASC\n  class_DESC\n  isCorrespondence_ASC\n  isCorrespondence_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TimeControlPreviousValues {\n  id: ID!\n  increment: Float\n  base: Float\n  class: TimeControlClasses\n  isCorrespondence: Boolean\n}\n\ntype TimeControlSubscriptionPayload {\n  mutation: MutationType!\n  node: TimeControl\n  updatedFields: [String!]\n  previousValues: TimeControlPreviousValues\n}\n\ninput TimeControlSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TimeControlSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TimeControlSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TimeControlSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TimeControlWhereInput\n}\n\ninput TimeControlUpdateDataInput {\n  increment: Float\n  base: Float\n  class: TimeControlClasses\n  isCorrespondence: Boolean\n}\n\ninput TimeControlUpdateInput {\n  increment: Float\n  base: Float\n  class: TimeControlClasses\n  isCorrespondence: Boolean\n}\n\ninput TimeControlUpdateOneInput {\n  create: TimeControlCreateInput\n  connect: TimeControlWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: TimeControlUpdateDataInput\n  upsert: TimeControlUpsertNestedInput\n}\n\ninput TimeControlUpsertNestedInput {\n  update: TimeControlUpdateDataInput!\n  create: TimeControlCreateInput!\n}\n\ninput TimeControlWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TimeControlWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TimeControlWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TimeControlWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  increment: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  increment_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  increment_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  increment_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  increment_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  increment_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  increment_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  increment_gte: Float\n  base: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  base_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  base_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  base_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  base_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  base_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  base_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  base_gte: Float\n  class: TimeControlClasses\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  class_not: TimeControlClasses\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  class_in: [TimeControlClasses!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  class_not_in: [TimeControlClasses!]\n  isCorrespondence: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  isCorrespondence_not: Boolean\n}\n\ninput TimeControlWhereUniqueInput {\n  id: ID\n}\n\ntype User implements Node {\n  id: ID!\n  sub: String!\n  name: String!\n  rating: Float\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  sub: String!\n  name: String!\n  rating: Float\n}\n\ninput UserCreateOneInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  sub_ASC\n  sub_DESC\n  name_ASC\n  name_DESC\n  rating_ASC\n  rating_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  sub: String!\n  name: String!\n  rating: Float\n}\n\ntype UserRole {\n  user(where: UserWhereInput): User\n  role: UserRoles\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserRoleConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserRoleEdge]!\n  aggregate: AggregateUserRole!\n}\n\ninput UserRoleCreateInput {\n  role: UserRoles\n  user: UserCreateOneInput\n}\n\ninput UserRoleCreateManyInput {\n  create: [UserRoleCreateInput!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserRoleEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: UserRole!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserRoleOrderByInput {\n  role_ASC\n  role_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserRolePreviousValues {\n  role: UserRoles\n}\n\nenum UserRoles {\n  WHITE\n  BLACK\n  ANNOTATOR\n}\n\ntype UserRoleSubscriptionPayload {\n  mutation: MutationType!\n  node: UserRole\n  updatedFields: [String!]\n  previousValues: UserRolePreviousValues\n}\n\ninput UserRoleSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserRoleSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserRoleSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserRoleSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserRoleWhereInput\n}\n\ninput UserRoleUpdateInput {\n  role: UserRoles\n  user: UserUpdateOneInput\n}\n\ninput UserRoleUpdateManyInput {\n  create: [UserRoleCreateInput!]\n}\n\ninput UserRoleWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserRoleWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserRoleWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserRoleWhereInput!]\n  role: UserRoles\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  role_not: UserRoles\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  role_in: [UserRoles!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  role_not_in: [UserRoles!]\n  user: UserWhereInput\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateDataInput {\n  sub: String\n  name: String\n  rating: Float\n}\n\ninput UserUpdateInput {\n  sub: String\n  name: String\n  rating: Float\n}\n\ninput UserUpdateOneInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateDataInput\n  upsert: UserUpsertNestedInput\n}\n\ninput UserUpsertNestedInput {\n  update: UserUpdateDataInput!\n  create: UserCreateInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  sub: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  sub_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  sub_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  sub_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  sub_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  sub_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  sub_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  sub_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  sub_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  sub_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  sub_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  sub_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  sub_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  sub_not_ends_with: String\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  rating: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  rating_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  rating_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  rating_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  rating_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  rating_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  rating_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  rating_gte: Float\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  sub: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 53,
      "containsCycle": false,
      "polynomialLevel": 2,
      "numDefinitions": 127
    }
  ],
  "metrics": {
    "created_at": "2018-08-31T22:58:38Z",
    "updated_at": "2018-09-16T07:59:24Z",
    "pushed_at": "2018-09-16T07:59:22Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}