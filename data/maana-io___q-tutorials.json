{
  "repo_name": "q-tutorials",
  "repo_full_name": "maana-io/q-tutorials",
  "repo_owner": "maana-io",
  "repo_description": "A collection of tutorial projects and datasets for learning how to use the Maana Knowledge Platform",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "maana-language.graphql",
      "path": "maana-demo-black-mirror/schemas/maana-language.graphql",
      "sha": "49165517599ab255befc0469522b4aabd2a222c5",
      "url": "https://api.github.com/repositories/120362480/contents/maana-demo-black-mirror/schemas/maana-language.graphql?ref=7d49bc178c2686914c1c19a546da37d02add2aef",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/49165517599ab255befc0469522b4aabd2a222c5",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/7d49bc178c2686914c1c19a546da37d02add2aef/maana-demo-black-mirror/schemas/maana-language.graphql",
      "content": "# source: https://stable.knowledge.maana.io:8443/service/05830e8d-a9af-42f3-a922-c76305c67e90/graphql\n# timestamp: Tue Apr 30 2019 10:04:33 GMT-0700 (PDT)\n\n\"\"\"Autogenerated input for adding instance of Country\"\"\"\ninput AddCountryInput {\n  \"\"\"id\"\"\"\n  id: ID\n  name: String\n  localizedName: ID\n}\n\n\"\"\"Autogenerated input for adding instance of Language\"\"\"\ninput AddLanguageInput {\n  \"\"\"id\"\"\"\n  id: ID\n  localizedName: ID\n  name: String\n}\n\n\"\"\"Autogenerated input for adding instance of LanguageTag\"\"\"\ninput AddLanguageTagInput {\n  \"\"\"id\"\"\"\n  id: ID\n  languageCode: ID\n  country: ID\n}\n\n\"\"\"Autogenerated input for adding instance of LocalizedText\"\"\"\ninput AddLocalizedTextInput {\n  \"\"\"id\"\"\"\n  id: ID\n  languageTag: ID\n  text: String!\n}\n\nenum AggregateOp {\n  MIN\n  MAX\n  SUM\n  COUNT\n}\n\ntype Country {\n  \"\"\"id\"\"\"\n  id: ID!\n  name: String\n  localizedName: LocalizedText\n}\n\ninput CountryAsInput {\n  id: ID!\n  name: String\n  localizedName: LocalizedTextAsInput\n}\n\nscalar Date\n\nscalar DateTime\n\ninput FieldFilterInput {\n  \"\"\"one of the following is required\"\"\"\n  fieldId: ID\n  fieldName: String\n  op: String!\n  value: FieldValueInput!\n}\n\ninput FieldProjectionInput {\n  \"\"\"one of the following is required - except in the case of count queries\"\"\"\n  fieldId: ID\n  fieldName: String\n\n  \"\"\"optional if omitted outer query is used\"\"\"\n  alias: String\n  op: AggregateOp\n}\n\ntype FieldValue {\n  \"\"\"Types\"\"\"\n  ID: ID\n  STRING: String\n  INT: Int\n  FLOAT: Float\n  BOOLEAN: Boolean\n  DATE: Date\n  TIME: Time\n  DATETIME: DateTime\n  JSON: JSON\n  KIND: ID\n\n  \"\"\"List forms\"\"\"\n  l_ID: [ID]\n  l_STRING: [String]\n  l_INT: [Int]\n  l_FLOAT: [Float]\n  l_BOOLEAN: [Boolean]\n  l_DATE: [Date]\n  l_TIME: [Time]\n  l_DATETIME: [DateTime]\n  l_JSON: [JSON]\n  l_KIND: [ID]\n}\n\ninput FieldValueInput {\n  \"\"\"Types\"\"\"\n  ID: ID\n  STRING: String\n  INT: Int\n  FLOAT: Float\n  BOOLEAN: Boolean\n  DATE: Date\n  TIME: Time\n  DATETIME: DateTime\n  JSON: JSON\n  KIND: ID\n\n  \"\"\"List forms\"\"\"\n  l_ID: [ID]\n  l_STRING: [String]\n  l_INT: [Int]\n  l_FLOAT: [Float]\n  l_BOOLEAN: [Boolean]\n  l_DATE: [Date]\n  l_TIME: [Time]\n  l_DATETIME: [DateTime]\n  l_JSON: [JSON]\n  l_KIND: [ID]\n}\n\ntype Info {\n  id: ID!\n  name: String!\n  description: String\n}\n\ntype InstanceSet {\n  kindId: ID!\n\n  \"\"\"Continuation token\"\"\"\n  token: String\n  fieldIds: [ID]\n\n  \"\"\"rowKeys: [Int]\"\"\"\n  records: [[FieldValue]]\n}\n\nscalar JSON\n\ninput KindQueryInput {\n  \"\"\"projected kind (one of the following is required)\"\"\"\n  kindId: ID\n  kindName: String\n  serviceId: ID\n\n  \"\"\"optional alias for projection binding\"\"\"\n  alias: String\n\n  \"\"\"projected fields\"\"\"\n  projection: [FieldProjectionInput]\n\n  \"\"\"distinct Projected result\"\"\"\n  distinct: Boolean\n\n  \"\"\"filters (where)\"\"\"\n  fieldFilters: [FieldFilterInput]\n\n  \"\"\"conjunction (where)\"\"\"\n  and: [KindQueryInput]\n\n  \"\"\"disjunction (where)\"\"\"\n  or: [KindQueryInput]\n\n  \"\"\"join (if conjunction or disjunction)\"\"\"\n  fromFieldId: ID\n  fromFieldName: String\n  toFieldId: ID\n  toFieldName: String\n  take: Int\n  token: String\n}\n\ntype Language {\n  \"\"\"id\"\"\"\n  id: ID!\n  localizedName: LocalizedText\n  name: String\n}\n\ninput LanguageAsInput {\n  id: ID!\n  localizedName: LocalizedTextAsInput\n  name: String\n}\n\ntype LanguageTag {\n  \"\"\"id\"\"\"\n  id: ID!\n  languageCode: Language\n  country: Country\n}\n\ninput LanguageTagAsInput {\n  id: ID!\n  languageCode: LanguageAsInput\n  country: CountryAsInput\n}\n\ntype LanguageTagOutput {\n  id: ID!\n  languageCode: Language\n  country: Country\n}\n\ntype LocalizedText {\n  \"\"\"id\"\"\"\n  id: ID!\n  languageTag: LanguageTag\n  text: String!\n}\n\ninput LocalizedTextAsInput {\n  id: ID!\n  languageTag: LanguageTagAsInput\n  text: String!\n}\n\ntype Mutation {\n  \"\"\"Autogenerated mutation for adding single instance of LanguageTag\"\"\"\n  addLanguageTag(input: AddLanguageTagInput!): ID\n\n  \"\"\"Autogenerated mutation for adding multiple instances of LanguageTag\"\"\"\n  addLanguageTags(input: [AddLanguageTagInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for updating single instance of LanguageTag\"\"\"\n  updateLanguageTag(input: UpdateLanguageTagInput!): ID\n\n  \"\"\"Autogenerated mutation for updating multiple instance of LanguageTag\"\"\"\n  updateLanguageTags(input: [UpdateLanguageTagInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for deleting single instance of LanguageTag\"\"\"\n  deleteLanguageTag(id: ID!): LanguageTag\n\n  \"\"\"Autogenerated mutation for deleting multiple instance of LanguageTag\"\"\"\n  deleteLanguageTags(ids: [ID!]): [LanguageTag]\n\n  \"\"\"Autogenerated mutation for adding single instance of LocalizedText\"\"\"\n  addLocalizedText(input: AddLocalizedTextInput!): ID\n\n  \"\"\"Autogenerated mutation for adding multiple instances of LocalizedText\"\"\"\n  addLocalizedTexts(input: [AddLocalizedTextInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for updating single instance of LocalizedText\"\"\"\n  updateLocalizedText(input: UpdateLocalizedTextInput!): ID\n\n  \"\"\"Autogenerated mutation for updating multiple instance of LocalizedText\"\"\"\n  updateLocalizedTexts(input: [UpdateLocalizedTextInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for deleting single instance of LocalizedText\"\"\"\n  deleteLocalizedText(id: ID!): LocalizedText\n\n  \"\"\"Autogenerated mutation for deleting multiple instance of LocalizedText\"\"\"\n  deleteLocalizedTexts(ids: [ID!]): [LocalizedText]\n\n  \"\"\"Autogenerated mutation for adding single instance of Language\"\"\"\n  addLanguage(input: AddLanguageInput!): ID\n\n  \"\"\"Autogenerated mutation for adding multiple instances of Language\"\"\"\n  addLanguages(input: [AddLanguageInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for updating single instance of Language\"\"\"\n  updateLanguage(input: UpdateLanguageInput!): ID\n\n  \"\"\"Autogenerated mutation for updating multiple instance of Language\"\"\"\n  updateLanguages(input: [UpdateLanguageInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for deleting single instance of Language\"\"\"\n  deleteLanguage(id: ID!): Language\n\n  \"\"\"Autogenerated mutation for deleting multiple instance of Language\"\"\"\n  deleteLanguages(ids: [ID!]): [Language]\n\n  \"\"\"Autogenerated mutation for adding single instance of Country\"\"\"\n  addCountry(input: AddCountryInput!): ID\n\n  \"\"\"Autogenerated mutation for adding multiple instances of Country\"\"\"\n  addCountrys(input: [AddCountryInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for updating single instance of Country\"\"\"\n  updateCountry(input: UpdateCountryInput!): ID\n\n  \"\"\"Autogenerated mutation for updating multiple instance of Country\"\"\"\n  updateCountrys(input: [UpdateCountryInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for deleting single instance of Country\"\"\"\n  deleteCountry(id: ID!): Country\n\n  \"\"\"Autogenerated mutation for deleting multiple instance of Country\"\"\"\n  deleteCountrys(ids: [ID!]): [Country]\n}\n\ntype Query {\n  translateOneLocalized(localizedText: LocalizedTextAsInput!, targetLanguageTag: LanguageTagAsInput!): LocalizedText!\n  translateMultipleLocalized(localizedTexts: [LocalizedTextAsInput!]!, targetLanguageTag: LanguageTagAsInput!): [LocalizedText!]!\n  translateOne(text: String!, targetLanguageTag: LanguageTagAsInput!): LocalizedText!\n  translateMultiple(texts: [String!]!, targetLanguageTag: LanguageTagAsInput!): [LocalizedText!]!\n  CKGErrors: [String]\n\n  \"\"\"All instances of LanguageTag kind\"\"\"\n  allLanguageTags(\n    \"\"\"Number of results to return\"\"\"\n    take: Int = 1000\n\n    \"\"\"Number of results to skip from the query result. Applied before take\"\"\"\n    offset: Int = 0\n  ): [LanguageTag]\n\n  \"\"\"Get single instance of LanguageTag kind by ID\"\"\"\n  languageTag(id: ID!): LanguageTag\n\n  \"\"\"Get list of instance of LanguageTag kind by IDs\"\"\"\n  languageTags(ids: [ID]!): [LanguageTag]\n\n  \"\"\"Get instances of LanguageTag kind based on one or more field filters\"\"\"\n  languageTagFilter(\n    filters: [FieldFilterInput]!\n\n    \"\"\"Number of results to return\"\"\"\n    take: Int = 1000\n\n    \"\"\"Number of results to skip from the query result. Applied before take\"\"\"\n    offset: Int = 0\n  ): [LanguageTag]\n\n  \"\"\"All instances of LocalizedText kind\"\"\"\n  allLocalizedTexts(\n    \"\"\"Number of results to return\"\"\"\n    take: Int = 1000\n\n    \"\"\"Number of results to skip from the query result. Applied before take\"\"\"\n    offset: Int = 0\n  ): [LocalizedText]\n\n  \"\"\"Get single instance of LocalizedText kind by ID\"\"\"\n  localizedText(id: ID!): LocalizedText\n\n  \"\"\"Get list of instance of LocalizedText kind by IDs\"\"\"\n  localizedTexts(ids: [ID]!): [LocalizedText]\n\n  \"\"\"Get instances of LocalizedText kind based on one or more field filters\"\"\"\n  localizedTextFilter(\n    filters: [FieldFilterInput]!\n\n    \"\"\"Number of results to return\"\"\"\n    take: Int = 1000\n\n    \"\"\"Number of results to skip from the query result. Applied before take\"\"\"\n    offset: Int = 0\n  ): [LocalizedText]\n\n  \"\"\"All instances of Language kind\"\"\"\n  allLanguages(\n    \"\"\"Number of results to return\"\"\"\n    take: Int = 1000\n\n    \"\"\"Number of results to skip from the query result. Applied before take\"\"\"\n    offset: Int = 0\n  ): [Language]\n\n  \"\"\"Get single instance of Language kind by ID\"\"\"\n  language(id: ID!): Language\n\n  \"\"\"Get list of instance of Language kind by IDs\"\"\"\n  languages(ids: [ID]!): [Language]\n\n  \"\"\"Get instances of Language kind based on one or more field filters\"\"\"\n  languageFilter(\n    filters: [FieldFilterInput]!\n\n    \"\"\"Number of results to return\"\"\"\n    take: Int = 1000\n\n    \"\"\"Number of results to skip from the query result. Applied before take\"\"\"\n    offset: Int = 0\n  ): [Language]\n\n  \"\"\"All instances of Country kind\"\"\"\n  allCountrys(\n    \"\"\"Number of results to return\"\"\"\n    take: Int = 1000\n\n    \"\"\"Number of results to skip from the query result. Applied before take\"\"\"\n    offset: Int = 0\n  ): [Country]\n\n  \"\"\"Get single instance of Country kind by ID\"\"\"\n  country(id: ID!): Country\n\n  \"\"\"Get list of instance of Country kind by IDs\"\"\"\n  countrys(ids: [ID]!): [Country]\n\n  \"\"\"Get instances of Country kind based on one or more field filters\"\"\"\n  countryFilter(\n    filters: [FieldFilterInput]!\n\n    \"\"\"Number of results to return\"\"\"\n    take: Int = 1000\n\n    \"\"\"Number of results to skip from the query result. Applied before take\"\"\"\n    offset: Int = 0\n  ): [Country]\n\n  \"\"\"Mandatory service manifest.\"\"\"\n  info: Info!\n\n  \"\"\"Kind Query\"\"\"\n  query(input: KindQueryInput!): InstanceSet\n  queryJSON(input: KindQueryInput!): String\n}\n\nscalar Time\n\n\"\"\"Autogenerated input for modifying instance of Country\"\"\"\ninput UpdateCountryInput {\n  \"\"\"id\"\"\"\n  id: ID!\n  name: String\n  localizedName: ID\n}\n\n\"\"\"Autogenerated input for modifying instance of Language\"\"\"\ninput UpdateLanguageInput {\n  \"\"\"id\"\"\"\n  id: ID!\n  localizedName: ID\n  name: String\n}\n\n\"\"\"Autogenerated input for modifying instance of LanguageTag\"\"\"\ninput UpdateLanguageTagInput {\n  \"\"\"id\"\"\"\n  id: ID!\n  languageCode: ID\n  country: ID\n}\n\n\"\"\"Autogenerated input for modifying instance of LocalizedText\"\"\"\ninput UpdateLocalizedTextInput {\n  \"\"\"id\"\"\"\n  id: ID!\n  languageTag: ID\n  text: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 10,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 31
    },
    {
      "name": "schema.gql",
      "path": "maana-demo-black-mirror/helpers/src/graphql/maana-language/schema.gql",
      "sha": "25dbf70b932145d8c86478d04180112c6d03767f",
      "url": "https://api.github.com/repositories/120362480/contents/maana-demo-black-mirror/helpers/src/graphql/maana-language/schema.gql?ref=7d49bc178c2686914c1c19a546da37d02add2aef",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/25dbf70b932145d8c86478d04180112c6d03767f",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/7d49bc178c2686914c1c19a546da37d02add2aef/maana-demo-black-mirror/helpers/src/graphql/maana-language/schema.gql",
      "content": "type Country {\n  \"\"\"\n  id\n  \"\"\"\n  id: ID!\n  name: String\n  localizedName: LocalizedText\n}\n\ninput CountryAsInput {\n  id: ID!\n  name: String\n  localizedName: LocalizedTextAsInput\n}\n\ntype Language {\n  \"\"\"\n  id\n  \"\"\"\n  id: ID!\n  localizedName: LocalizedText\n  name: String\n}\n\ninput LanguageAsInput {\n  id: ID!\n  localizedName: LocalizedTextAsInput\n  name: String\n}\n\ntype LocalizedText {\n  \"\"\"\n  id\n  \"\"\"\n  id: ID!\n  languageTag: LanguageTag\n  text: String!\n}\n\ninput LocalizedTextAsInput {\n  id: ID!\n  languageTag: LanguageTagAsInput\n  text: String!\n}\n\ntype LanguageTag {\n  \"\"\"\n  id\n  \"\"\"\n  id: ID!\n  languageCode: Language\n  country: Country\n}\n\ninput LanguageTagAsInput {\n  id: ID!\n  languageCode: LanguageAsInput\n  country: CountryAsInput\n}\n\ntype Query {\n  translateOneLocalized_Mock(\n    localizedText: LocalizedTextAsInput!\n    targetLanguageTag: LanguageTagAsInput!\n  ): LocalizedText!\n  translateMultipleLocalized_Mock(\n    localizedTexts: [LocalizedTextAsInput!]!\n    targetLanguageTag: LanguageTagAsInput!\n  ): [LocalizedText!]!\n  translateOne_Mock(\n    text: String!\n    targetLanguageTag: LanguageTagAsInput!\n  ): LocalizedText!\n  translateMultiple_Mock(\n    texts: [String!]!\n    targetLanguageTag: LanguageTagAsInput!\n  ): [LocalizedText!]!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 5,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 9
    },
    {
      "name": "maana-mr-portal.graphql",
      "path": "maana-demo-black-mirror/schemas/maana-mr-portal.graphql",
      "sha": "4a8b401bd267999315e7f220ccbbe524129c8235",
      "url": "https://api.github.com/repositories/120362480/contents/maana-demo-black-mirror/schemas/maana-mr-portal.graphql?ref=7d49bc178c2686914c1c19a546da37d02add2aef",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/4a8b401bd267999315e7f220ccbbe524129c8235",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/7d49bc178c2686914c1c19a546da37d02add2aef/maana-demo-black-mirror/schemas/maana-mr-portal.graphql",
      "content": "# source: https://stable.knowledge.maana.io:8443/service/4e567126-7f99-4526-9835-80aad10e5626/graphql\n# timestamp: Tue Apr 30 2019 10:04:36 GMT-0700 (PDT)\n\ntype Application {\n  id: ID!\n  name: String!\n  thumbnailUrl: String\n}\n\ninput ApplicationAsInput {\n  id: ID!\n  name: String!\n  thumbnailUrl: String\n}\n\ntype Argument {\n  id: ID!\n  name: String!\n  type: String!\n  typeKindId: ID\n  kind: Kind\n  modifiers: [String]\n  description: String\n  function: Function!\n  isDeleted: Boolean!\n}\n\ninput ArgumentAsInput {\n  id: ID!\n  name: String!\n  type: String!\n  typeKindId: ID\n  kind: KindAsInput\n  modifiers: [String]\n  description: String\n  function: FunctionAsInput!\n  isDeleted: Boolean!\n}\n\ntype ArgumentValue {\n  id: ID!\n  argument: Argument\n  operation: Operation\n  argumentRef: ID\n}\n\ninput ArgumentValueAsInput {\n  id: ID!\n  argument: ArgumentAsInput\n  operation: OperationAsInput\n  argumentRef: ID\n}\n\ntype Country {\n  id: ID!\n  name: String\n  localizedName: LocalizedText\n}\n\ninput CountryAsInput {\n  id: ID!\n  name: String\n  localizedName: LocalizedTextAsInput\n}\n\nscalar Date\n\nscalar DateTime\n\ntype Field {\n  id: ID!\n  name: String!\n  type: String!\n  description: String\n  modifiers: [String]\n  typeKindId: ID\n  displayAs: [String]\n  hide: Boolean\n  autoFocus: Boolean\n  readonly: Boolean\n  kind: Kind\n  isDeleted: Boolean!\n}\n\ninput FieldAsInput {\n  id: ID!\n  name: String!\n  type: String!\n  description: String\n  modifiers: [String]\n  typeKindId: ID\n  displayAs: [String]\n  hide: Boolean\n  autoFocus: Boolean\n  readonly: Boolean\n  kind: KindAsInput\n  isDeleted: Boolean!\n}\n\ntype FieldValue {\n  ID: ID\n  STRING: String\n  INT: Int\n  FLOAT: Float\n  BOOLEAN: Boolean\n  DATE: Date\n  TIME: Time\n  DATETIME: DateTime\n  JSON: JSON\n  KIND: ID\n  l_ID: [ID]\n  l_STRING: [String]\n  l_INT: [Int]\n  l_FLOAT: [Float]\n  l_BOOLEAN: [Boolean]\n  l_DATE: [Date]\n  l_TIME: [Time]\n  l_DATETIME: [DateTime]\n  l_JSON: [JSON]\n  l_KIND: [ID]\n}\n\ninput FieldValueAsInput {\n  ID: ID\n  STRING: String\n  INT: Int\n  FLOAT: Float\n  BOOLEAN: Boolean\n  DATE: Date\n  TIME: Time\n  DATETIME: DateTime\n  JSON: JSON\n  KIND: ID\n  l_ID: [ID]\n  l_STRING: [String]\n  l_INT: [Int]\n  l_FLOAT: [Float]\n  l_BOOLEAN: [Boolean]\n  l_DATE: [Date]\n  l_TIME: [Time]\n  l_DATETIME: [DateTime]\n  l_JSON: [JSON]\n  l_KIND: [ID]\n}\n\ntype Function {\n  id: ID!\n  name: String!\n  description: String\n  arguments: [Argument!]!\n  outputType: String!\n  outputKindId: ID\n  outputModifiers: [String]\n  isGenerated: Boolean!\n  kind: Kind\n  graphqlOperationType: String\n  functionType: String!\n  implementation: Implementation\n  service: Service!\n  isDeleted: Boolean!\n}\n\ninput FunctionAsInput {\n  id: ID!\n  name: String!\n  description: String\n  arguments: [ArgumentAsInput!]!\n  outputType: String!\n  outputKindId: ID\n  outputModifiers: [String]\n  isGenerated: Boolean!\n  kind: KindAsInput\n  graphqlOperationType: String\n  functionType: String!\n  implementation: ImplementationAsInput\n  service: ServiceAsInput!\n  isDeleted: Boolean!\n}\n\ntype FunctionGraphNode {\n  id: ID!\n  operationId: ID!\n}\n\ninput FunctionGraphNodeAsInput {\n  id: ID!\n  operationId: ID!\n}\n\ntype Implementation {\n  id: ID!\n  entrypoint: Operation\n  operations: [Operation!]!\n}\n\ninput ImplementationAsInput {\n  id: ID!\n  entrypoint: OperationAsInput\n  operations: [OperationAsInput!]!\n}\n\ntype Instance {\n  id: ID!\n  name: String\n  kindId: ID!\n  kind: Kind\n  fieldIds: [ID]\n  fieldValues: [FieldValue]\n  linksFrom: [Link]\n  linksTo: [Link]\n}\n\ninput InstanceAsInput {\n  id: ID!\n  name: String\n  kindId: ID!\n  kind: KindAsInput\n  fieldIds: [ID]\n  fieldValues: [FieldValueAsInput]\n  linksFrom: [LinkAsInput]\n  linksTo: [LinkAsInput]\n}\n\ntype InstanceRef {\n  id: ID!\n  kindId: ID\n  kindName: String\n  name: String\n  url: String\n  kind: Kind\n  instance: Instance\n  innerKind: Kind\n  innerFunction: Function\n}\n\ninput InstanceRefAsInput {\n  id: ID!\n  kindId: ID\n  kindName: String\n  name: String\n  url: String\n  kind: KindAsInput\n  instance: InstanceAsInput\n  innerKind: KindAsInput\n  innerFunction: FunctionAsInput\n}\n\ntype Inventory {\n  serviceKinds: [Kind!]!\n  workspaceKinds: [Kind!]!\n  functions: [Function!]!\n}\n\ninput InventoryAsInput {\n  serviceKinds: [KindAsInput!]!\n  workspaceKinds: [KindAsInput!]!\n  functions: [FunctionAsInput!]!\n}\n\nscalar JSON\n\ntype Kind {\n  id: ID!\n  name: String!\n  serviceId: ID\n  description: String\n  thumbnailUrl: String\n  isPublic: Boolean\n  isManaged: Boolean\n  isSystem: Boolean\n  nameField: ID\n  isGenerated: Boolean!\n  relationsFrom: [Relation]\n  relationsTo: [Relation]\n  linksFrom: [Link]\n  linksTo: [Link]\n  service: Service\n  isDeleted: Boolean!\n}\n\ninput KindAsInput {\n  id: ID!\n  name: String!\n  serviceId: ID\n  description: String\n  thumbnailUrl: String\n  isPublic: Boolean\n  isManaged: Boolean\n  isSystem: Boolean\n  nameField: ID\n  isGenerated: Boolean!\n  relationsFrom: [RelationAsInput]\n  relationsTo: [RelationAsInput]\n  linksFrom: [LinkAsInput]\n  linksTo: [LinkAsInput]\n  service: ServiceAsInput\n  isDeleted: Boolean!\n}\n\ntype KnowledgeGraphNode {\n  id: ID!\n  kind: Kind\n  instance: Instance\n  innerKind: Kind\n  innerFunction: Function\n}\n\ninput KnowledgeGraphNodeAsInput {\n  id: ID!\n  kind: KindAsInput\n  instance: InstanceAsInput\n  innerKind: KindAsInput\n  innerFunction: FunctionAsInput\n}\n\ntype Language {\n  id: ID!\n  localizedName: LocalizedText\n  name: String\n}\n\ninput LanguageAsInput {\n  id: ID!\n  localizedName: LocalizedTextAsInput\n  name: String\n}\n\ntype LanguageTag {\n  id: ID!\n  languageCode: Language\n  country: Country\n}\n\ninput LanguageTagAsInput {\n  id: ID!\n  languageCode: LanguageAsInput\n  country: CountryAsInput\n}\n\ntype Link {\n  id: ID!\n  relation: Relation!\n  fromKind: Kind\n  toKind: Kind\n  name: String\n  weight: Float\n  fromField: Field\n  fromInstance: Instance\n  fromOffset: String\n  fromSpan: String\n  toField: Field\n  toInstance: Instance\n  toOffset: String\n  toSpan: String\n}\n\ninput LinkAsInput {\n  id: ID!\n  relation: RelationAsInput!\n  fromKind: KindAsInput\n  toKind: KindAsInput\n  name: String\n  weight: Float\n  fromField: FieldAsInput\n  fromInstance: InstanceAsInput\n  fromOffset: String\n  fromSpan: String\n  toField: FieldAsInput\n  toInstance: InstanceAsInput\n  toOffset: String\n  toSpan: String\n}\n\ntype LocalizedText {\n  id: ID!\n  languageTag: LanguageTag\n  text: String!\n}\n\ninput LocalizedTextAsInput {\n  id: ID!\n  languageTag: LanguageTagAsInput\n  text: String!\n}\n\ntype Operation {\n  id: ID!\n  type: String!\n  function: Function\n  argumentValues: [ArgumentValue!]!\n}\n\ninput OperationAsInput {\n  id: ID!\n  type: String!\n  function: FunctionAsInput\n  argumentValues: [ArgumentValueAsInput!]!\n}\n\ntype Path {\n  id: ID!\n  parts: [String]\n}\n\ninput PathAsInput {\n  id: ID!\n  parts: [String]\n}\n\ntype PortalAnnouncement {\n  id: ID!\n  text: String\n}\n\ntype PortalAvatar {\n  id: ID!\n  portalModel: PortalModel!\n}\n\ninput PortalAvatarAsInput {\n  id: ID!\n  portalModel: PortalModelAsInput!\n}\n\ntype PortalDashboard {\n  id: ID!\n  portalUser: PortalUserOutput!\n  recentPortalWorkspaces: [PortalWorkspace!]!\n  favoritePortalWorkspaces: [PortalWorkspace!]!\n}\n\ntype PortalGraph {\n  id: ID!\n  name: String!\n  type: String!\n  expanded: Boolean!\n  zoom: Float!\n  offsetX: Float!\n  offsetY: Float!\n  workspace: Workspace!\n  function: Function\n  nodes: [PortalGraphNode!]!\n}\n\ninput PortalGraphAsInput {\n  id: ID!\n  name: String!\n  type: String!\n  expanded: Boolean!\n  zoom: Float!\n  offsetX: Float!\n  offsetY: Float!\n  workspace: WorkspaceAsInput!\n  function: FunctionAsInput\n  nodes: [PortalGraphNodeAsInput!]!\n}\n\ntype PortalGraphNode {\n  id: ID!\n  x: Float!\n  y: Float!\n  width: Float!\n  height: Float!\n  collapsed: Boolean!\n  knowledgeGraphNode: KnowledgeGraphNode\n  queryGraphNode: QueryGraphNode\n  functionGraphNode: FunctionGraphNode\n}\n\ninput PortalGraphNodeAsInput {\n  id: ID!\n  x: Float!\n  y: Float!\n  width: Float!\n  height: Float!\n  collapsed: Boolean!\n  knowledgeGraphNode: KnowledgeGraphNodeAsInput\n  queryGraphNode: QueryGraphNodeAsInput\n  functionGraphNode: FunctionGraphNodeAsInput\n}\n\ntype PortalLobby {\n  id: ID!\n  portalUser: PortalUserOutput!\n  visiblePortalUsers: [VisiblePortalUser!]!\n  announcements: [PortalAnnouncement!]!\n  scene: PortalScene!\n  dashboard: PortalDashboard!\n}\n\ntype PortalModel {\n  id: ID!\n  asset: ID!\n}\n\ninput PortalModelAsInput {\n  id: ID!\n  asset: ID!\n}\n\ntype PortalScene {\n  id: ID!\n  name: String\n}\n\ninput PortalUserAsInput {\n  id: ID!\n  user: UserAsInput!\n  thumnailUrl: URLAsInput!\n  avatar: PortalAvatarAsInput!\n  preferredLanguageTag: LanguageTagAsInput!\n}\n\ntype PortalUserOutput {\n  id: ID!\n  user: UserOutput!\n  thumnailUrl: URL!\n  avatar: PortalAvatar!\n  preferredLanguageTag: LanguageTag!\n}\n\ntype PortalWorkspace {\n  id: ID!\n  user: PortalUserOutput!\n  name: String!\n  workspace: Workspace!\n}\n\ntype Query {\n  login(user: UserAsInput!): PortalLobby!\n  getPortalUserPreferredLanguage(portalUser: PortalUserAsInput!): LanguageTag!\n  CKGErrors: [String]\n}\n\ntype QueryGraphFieldFilter {\n  id: ID!\n  fieldId: ID!\n  op: String!\n  value: String\n}\n\ninput QueryGraphFieldFilterAsInput {\n  id: ID!\n  fieldId: ID!\n  op: String!\n  value: String\n}\n\ntype QueryGraphNode {\n  id: ID!\n  kindId: ID!\n  fieldFilters: [QueryGraphFieldFilter!]!\n  children: [QueryGraphNodeConnection!]!\n  kind: Kind\n}\n\ninput QueryGraphNodeAsInput {\n  id: ID!\n  kindId: ID!\n  fieldFilters: [QueryGraphFieldFilterAsInput!]!\n  children: [QueryGraphNodeConnectionAsInput!]!\n  kind: KindAsInput\n}\n\ntype QueryGraphNodeConnection {\n  id: ID!\n  childId: ID!\n  childFieldId: ID!\n  parentId: ID!\n  parentFieldId: ID!\n  type: String!\n}\n\ninput QueryGraphNodeConnectionAsInput {\n  id: ID!\n  childId: ID!\n  childFieldId: ID!\n  parentId: ID!\n  parentFieldId: ID!\n  type: String!\n}\n\ntype RBACAuthority {\n  id: ID!\n  description: String\n}\n\ntype RBACPolicy {\n  id: ID!\n  rbacAuthority: RBACAuthority!\n  rbacRole: RBACRole!\n  rbacVerb: RBACVerb!\n  effective: DateTime\n  expires: DateTime\n  objectId: ID!\n}\n\ntype RBACRole {\n  id: ID!\n  description: String\n}\n\ntype RBACVerb {\n  id: ID!\n  description: String\n}\n\ntype Relation {\n  id: ID!\n  name: String!\n  inverseName: String!\n  description: String\n  undirected: Boolean\n  weight: Float\n  links: [Link]\n}\n\ninput RelationAsInput {\n  id: ID!\n  name: String!\n  inverseName: String!\n  description: String\n  undirected: Boolean\n  weight: Float\n  links: [LinkAsInput]\n}\n\ntype Role {\n  id: ID!\n  name: String!\n}\n\ninput RoleAsInput {\n  id: ID!\n  name: String!\n}\n\ntype Scheme {\n  id: ID!\n}\n\ninput SchemeAsInput {\n  id: ID!\n}\n\ntype Service {\n  id: ID!\n  name: String!\n  description: String\n  isManaged: Boolean!\n  isSystem: Boolean!\n  isReadOnly: Boolean!\n  endpointUrl: String!\n  subscriptionEndpointUrl: String\n  assistantUrl: String\n  thumbnailUrl: String\n  tags: [String!]!\n  created: DateTime!\n  modified: DateTime\n  schema: String!\n  serviceType: String!\n  provider: String\n  logicType: String\n  logicTemplate: JSON\n  aggregatedServices: [Service]\n  refreshPeriod: Int\n  lastChecked: DateTime\n  lastConnectionResult: Int\n  imports: [ServiceImport]\n  exports: [ServiceExport]\n  externalServiceInstances: [ServiceInstance]\n  kinds: [Kind]\n  functions: [Function]\n  workspace: Workspace\n  isDeleted: Boolean!\n}\n\ninput ServiceAsInput {\n  id: ID!\n  name: String!\n  description: String\n  isManaged: Boolean!\n  isSystem: Boolean!\n  isReadOnly: Boolean!\n  endpointUrl: String!\n  subscriptionEndpointUrl: String\n  assistantUrl: String\n  thumbnailUrl: String\n  tags: [String!]!\n  created: DateTime!\n  modified: DateTime\n  schema: String!\n  serviceType: String!\n  provider: String\n  logicType: String\n  logicTemplate: JSON\n  aggregatedServices: [ServiceAsInput]\n  refreshPeriod: Int\n  lastChecked: DateTime\n  lastConnectionResult: Int\n  imports: [ServiceImportAsInput]\n  exports: [ServiceExportAsInput]\n  externalServiceInstances: [ServiceInstanceAsInput]\n  kinds: [KindAsInput]\n  functions: [FunctionAsInput]\n  workspace: WorkspaceAsInput\n  isDeleted: Boolean!\n}\n\ntype ServiceExport {\n  id: ID!\n  function: Function\n  kind: Kind\n  as: String\n}\n\ninput ServiceExportAsInput {\n  id: ID!\n  function: FunctionAsInput\n  kind: KindAsInput\n  as: String\n}\n\ntype ServiceImport {\n  id: ID!\n  service: ID!\n  function: Function\n  kind: Kind\n  as: String\n}\n\ninput ServiceImportAsInput {\n  id: ID!\n  service: ID!\n  function: FunctionAsInput\n  kind: KindAsInput\n  as: String\n}\n\ntype ServiceInstance {\n  id: ID!\n  dockerServiceName: String!\n  hostName: String!\n  desiredState: String!\n  currentState: String!\n}\n\ninput ServiceInstanceAsInput {\n  id: ID!\n  dockerServiceName: String!\n  hostName: String!\n  desiredState: String!\n  currentState: String!\n}\n\ntype Tenant {\n  id: ID!\n  name: String!\n  users: [UserOutput]\n  services: [Service]\n  applications: [Application]\n}\n\ninput TenantAsInput {\n  id: ID!\n  name: String!\n  users: [UserAsInput]\n  services: [ServiceAsInput]\n  applications: [ApplicationAsInput]\n}\n\ntype TenantUserRole {\n  userId: ID!\n  user: UserOutput\n  tenantId: ID!\n  tenant: Tenant\n  roles: [Role]\n}\n\ninput TenantUserRoleAsInput {\n  userId: ID!\n  user: UserAsInput\n  tenantId: ID!\n  tenant: TenantAsInput\n  roles: [RoleAsInput]\n}\n\nscalar Time\n\ntype URL {\n  id: ID!\n  scheme: Scheme\n  host: String\n  port: Int\n  path: Path\n}\n\ninput URLAsInput {\n  id: ID!\n  scheme: SchemeAsInput\n  host: String\n  port: Int\n  path: PathAsInput\n}\n\ninput UserAsInput {\n  id: ID!\n  name: String!\n  givenName: String\n  familyName: String\n  email: String\n  picture: String\n  tenants: [TenantAsInput]\n  tenantUserRoles: [TenantUserRoleAsInput]\n  createdOn: DateTime\n  activities: [InstanceRefAsInput!]!\n  recentItems: [InstanceRefAsInput!]!\n  favoriteItems: [InstanceRefAsInput!]!\n  workspaces: [WorkspaceAsInput!]!\n  applications: [ApplicationAsInput!]!\n  theme: String\n  openWorkspaces: [WorkspaceAsInput!]!\n  activeWorkspace: WorkspaceAsInput\n}\n\ntype UserOutput {\n  id: ID!\n  name: String!\n  givenName: String\n  familyName: String\n  email: String\n  picture: String\n  tenants: [Tenant]\n  tenantUserRoles: [TenantUserRole]\n  createdOn: DateTime\n  activities: [InstanceRef!]!\n  recentItems: [InstanceRef!]!\n  favoriteItems: [InstanceRef!]!\n  workspaces: [Workspace!]!\n  applications: [Application!]!\n  theme: String\n  openWorkspaces: [Workspace!]!\n  activeWorkspace: Workspace\n}\n\ntype VisiblePortalUser {\n  id: ID!\n  fromPortalUser: PortalUserOutput!\n  toPortalUser: PortalUserOutput!\n  policies: [RBACPolicy]\n}\n\ntype Workspace {\n  id: ID!\n  name: String!\n  thumbnailUrl: String!\n  owner: UserOutput!\n  isPublic: Boolean\n  isTemplate: Boolean\n  createdOn: DateTime!\n  lastOpenedOn: DateTime!\n  layout: WorkspaceLayout!\n  modelServiceId: ID!\n  logicServiceId: ID!\n  workspaceServiceId: ID!\n  services: [Service!]!\n  portalGraphs: [PortalGraph!]!\n  activeGraphPath: [ID!]!\n  instanceRefs: [InstanceRef!]!\n  inventory: Inventory\n}\n\ninput WorkspaceAsInput {\n  id: ID!\n  name: String!\n  thumbnailUrl: String!\n  owner: UserAsInput!\n  isPublic: Boolean\n  isTemplate: Boolean\n  createdOn: DateTime!\n  lastOpenedOn: DateTime!\n  layout: WorkspaceLayoutAsInput!\n  modelServiceId: ID!\n  logicServiceId: ID!\n  workspaceServiceId: ID!\n  services: [ServiceAsInput!]!\n  portalGraphs: [PortalGraphAsInput!]!\n  activeGraphPath: [ID!]!\n  instanceRefs: [InstanceRefAsInput!]!\n  inventory: InventoryAsInput\n}\n\ntype WorkspaceLayout {\n  id: ID!\n  explorerOpen: Boolean!\n  explorerSize: Float!\n  inventoryOpen: Boolean!\n  inventorySize: Float!\n  contextOpen: Boolean!\n  contextMode: String!\n  contextSize: Float!\n  dataVizOpen: Boolean!\n  dataVizSize: Float!\n}\n\ninput WorkspaceLayoutAsInput {\n  id: ID!\n  explorerOpen: Boolean!\n  explorerSize: Float!\n  inventoryOpen: Boolean!\n  inventorySize: Float!\n  contextOpen: Boolean!\n  contextMode: String!\n  contextSize: Float!\n  dataVizOpen: Boolean!\n  dataVizSize: Float!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 52,
      "containsCycle": true,
      "numDefinitions": 97
    },
    {
      "name": "dp.graphql",
      "path": "drill_prob/dp.graphql",
      "sha": "077851ab98cb842784f8923a0516d49ad9cecd8c",
      "url": "https://api.github.com/repositories/120362480/contents/drill_prob/dp.graphql?ref=2add18037400db9a33e498da84a73effd246eff5",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/077851ab98cb842784f8923a0516d49ad9cecd8c",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/2add18037400db9a33e498da84a73effd246eff5/drill_prob/dp.graphql",
      "content": "# source: http://138.91.199.6:8003/service/c77f9ac5-a526-49ee-b728-ef020a6cfb32/graphql\n# timestamp: Fri May 11 2018 15:34:35 GMT-0700 (PDT)\n\ninput AddBotActionInput {\n  name: String\n  serviceName: String!\n  serviceId: ID\n  eventName: String\n  mutationName: String\n  queryName: String\n  inputInstanceRef: InstanceRefInput\n  outputInstanceRef: InstanceRefInput\n}\n\n\"\"\"Autogenerated input for adding instance of DrillingProblem\"\"\"\ninput AddDrillingProblemInput {\n  id: ID\n  name: String\n  problemType: String\n}\n\n\"\"\"Autogenerated input for adding instance of DrillingReport\"\"\"\ninput AddDrillingReportInput {\n  id: ID\n  well: ID\n  date: DATE\n  comment: String\n  drillingProblem: ID\n}\n\n\"\"\"Autogenerated input for adding instance of ExpectedDrillingProblem\"\"\"\ninput AddExpectedDrillingProblemInput {\n  id: ID\n  probability: String\n  drillingProblem: ID\n}\n\n\"\"\"Autogenerated input for adding instance of Location\"\"\"\ninput AddLocationInput {\n  id: ID\n  lat: Float\n  long: Float\n}\n\n\"\"\"Autogenerated input for adding instance of NearbyWell\"\"\"\ninput AddNearbyWellInput {\n  id: ID\n  well: ID\n  distance: String\n}\n\n\"\"\"Autogenerated input for adding instance of Well\"\"\"\ninput AddWellInput {\n  id: ID\n  name: String\n  location: ID\n}\n\ntype BotAction {\n  \"\"\"io.maana.kind\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"bookkeeping\"\"\"\n  created: DateTime!\n  lastUpdated: DateTime!\n  status: BotActionStatus!\n  progress: Float\n  errors: [JSON!]\n\n  \"\"\"operation\"\"\"\n  service: Service!\n  eventName: String\n  mutation: ServiceMutation\n  query: ServiceQuery\n  input: InstanceRef\n  output: InstanceRef\n}\n\ntype BotActionAddedEvent {\n  id: ID!\n  name: String!\n  serviceName: String!\n  serviceId: ID\n  eventName: String\n  mutationName: String\n  queryName: String\n  inputInstanceRef: InstanceRef\n  outputInstanceRef: InstanceRef\n}\n\nenum BotActionStatus {\n  PENDING\n  IN_PROGRESS\n  STOPPING\n  STOPPED\n  ERROR\n  COMPLETE\n}\n\ntype BotActionUpdatedEvent {\n  id: ID!\n  oldStatus: BotActionStatus!\n  newStatus: BotActionStatus!\n  progress: Float\n  errors: [JSON!]\n}\n\nscalar Date\n\nscalar DATE\n\nscalar DateTime\n\ntype DrillingProblem {\n  id: ID!\n  name: String\n  problemType: String!\n}\n\ntype DrillingReport {\n  id: ID!\n  well: Well!\n  date: DATE!\n  comment: String!\n  drillingProblem: DrillingProblem\n}\n\ntype ExpectedDrillingProblem {\n  id: ID!\n  probability: String!\n  drillingProblem: DrillingProblem!\n}\n\ntype Field {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n  type: FieldType!\n\n  \"\"\"optional\"\"\"\n  description: String\n  modifiers: [FieldModifiers]\n  typeKindId: ID\n\n  \"\"\"UI hints\"\"\"\n  displayAs: [String]\n  hide: Boolean\n  autoFocus: Boolean\n  readonly: Boolean\n\n  \"\"\"inferred\"\"\"\n  kind: Kind\n  acceptedFieldClassification: FieldClassification\n}\n\ntype FieldClassification {\n  id: ID!\n  fieldId: ID!\n  name: String!\n  score: Float!\n}\n\ninput FieldFilterInput {\n  \"\"\"one of the following is required\"\"\"\n  fieldId: ID\n  fieldName: String\n  op: String!\n  value: FieldValueInput!\n}\n\nenum FieldModifiers {\n  NONULL\n  LIST\n  NOIDX\n}\n\nenum FieldType {\n  ID\n  STRING\n  INT\n  FLOAT\n  BOOLEAN\n  DATE\n  TIME\n  DATETIME\n  JSON\n  KIND\n}\n\ntype FieldValue {\n  \"\"\"Types\"\"\"\n  ID: ID\n  STRING: String\n  INT: Int\n  FLOAT: Float\n  BOOLEAN: Boolean\n  DATE: Date\n  TIME: Time\n  DATETIME: DateTime\n  JSON: JSON\n  KIND: ID\n\n  \"\"\"List forms\"\"\"\n  l_IDENTITY: [ID]\n  l_STRING: [String]\n  l_INT: [Int]\n  l_FLOAT: [Float]\n  l_BOOLEAN: [Boolean]\n  l_DATE: [Date]\n  l_TIME: [Time]\n  l_DATETIME: [DateTime]\n  l_JSON: [JSON]\n  l_KIND: [ID]\n}\n\ninput FieldValueInput {\n  \"\"\"Types\"\"\"\n  ID: ID\n  STRING: String\n  INT: Int\n  FLOAT: Float\n  BOOLEAN: Boolean\n  DATE: Date\n  TIME: Time\n  DATETIME: DateTime\n  JSON: JSON\n  KIND: ID\n\n  \"\"\"List forms\"\"\"\n  l_IDENTITY: [ID]\n  l_STRING: [String]\n  l_INT: [Int]\n  l_FLOAT: [Float]\n  l_BOOLEAN: [Boolean]\n  l_DATE: [Date]\n  l_TIME: [Time]\n  l_DATETIME: [DateTime]\n  l_JSON: [JSON]\n  l_KIND: [ID]\n}\n\ntype Info {\n  id: ID!\n  name: String!\n  description: String\n}\n\ntype Instance {\n  \"\"\"required\"\"\"\n  id: ID!\n\n  \"\"\"optional\"\"\"\n  name: String\n  kindId: ID!\n  kind: Kind\n  fieldIds: [ID]\n\n  \"\"\"rowKey: Int\"\"\"\n  fieldValues: [FieldValue]\n\n  \"\"\"inferred\"\"\"\n  linksFrom: [Link]\n  linksTo: [Link]\n}\n\ntype InstanceRef {\n  \"\"\"required\"\"\"\n  id: ID!\n\n  \"\"\"- one of:\"\"\"\n  kindId: ID\n  kindName: String\n\n  \"\"\"optional\"\"\"\n  name: String\n  url: String\n\n  \"\"\"inferred\"\"\"\n  kind: Kind\n  instance: Instance\n  innerKind: Kind\n}\n\ninput InstanceRefInput {\n  id: ID\n  name: String\n  kindId: ID\n  kindName: String\n  url: String\n}\n\ntype InstanceSet {\n  kindId: ID!\n  kind: Kind!\n  fieldIds: [ID]\n\n  \"\"\"rowKeys: [Int]\"\"\"\n  records: [[FieldValue]]\n}\n\nscalar JSON\n\ntype Kind {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"optional\"\"\"\n  serviceId: ID\n  description: String\n  thumbnailUrl: String\n  isPublic: Boolean\n  isManaged: Boolean\n  schema(includeDeleted: Boolean = false, fieldIds: [ID!], fieldNames: [String!], fieldKinds: [ID!]): [Field]\n  nameField: ID\n\n  \"\"\"inferred\"\"\"\n  relationsFrom: [Relation]\n  relationsTo: [Relation]\n  linksFrom: [Link]\n  linksTo: [Link]\n  service: Service\n}\n\ninput KindQueryInput {\n  \"\"\"projected kind (one of the following is required)\"\"\"\n  kindId: ID\n  kindName: String\n  serviceId: ID\n\n  \"\"\"filters (where)\"\"\"\n  fieldFilters: [FieldFilterInput]\n\n  \"\"\"conjunction (where)\"\"\"\n  and: [KindQueryInput]\n\n  \"\"\"disjunction (where)\"\"\"\n  or: [KindQueryInput]\n\n  \"\"\"join (if conjunction or disjunction)\"\"\"\n  fromFieldId: ID\n  fromFieldName: String\n  toFieldId: ID\n  toFieldName: String\n  take: Int\n}\n\ntype Link {\n  \"\"\"required\"\"\"\n  id: ID!\n  relation: Relation!\n  fromKind: Kind!\n  toKind: Kind!\n\n  \"\"\"optional\"\"\"\n  name: String\n  weight: Float\n  fromField: Field\n  fromInstance: Instance\n  fromOffset: String\n  fromSpan: String\n  toField: Field\n  toInstance: Instance\n  toOffset: String\n  toSpan: String\n}\n\ntype Location {\n  id: ID!\n  lat: Float!\n  long: Float!\n}\n\ntype Mutation {\n  \"\"\"Autogenerated mutation for adding single instance of Well\"\"\"\n  addWell(input: AddWellInput!): ID\n\n  \"\"\"Autogenerated mutation for adding multiple instances of Well\"\"\"\n  addWells(input: [AddWellInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for updating single instance of Well\"\"\"\n  updateWell(input: UpdateWellInput!): ID\n\n  \"\"\"Autogenerated mutation for updating multiple instance of Well\"\"\"\n  updateWells(input: [UpdateWellInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for deleting single instance of Well\"\"\"\n  deleteWell(id: ID!): Well\n\n  \"\"\"Autogenerated mutation for deleting multiple instance of Well\"\"\"\n  deleteWells(ids: [ID!]): [Well]\n\n  \"\"\"Autogenerated mutation for adding single instance of Location\"\"\"\n  addLocation(input: AddLocationInput!): ID\n\n  \"\"\"Autogenerated mutation for adding multiple instances of Location\"\"\"\n  addLocations(input: [AddLocationInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for updating single instance of Location\"\"\"\n  updateLocation(input: UpdateLocationInput!): ID\n\n  \"\"\"Autogenerated mutation for updating multiple instance of Location\"\"\"\n  updateLocations(input: [UpdateLocationInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for deleting single instance of Location\"\"\"\n  deleteLocation(id: ID!): Location\n\n  \"\"\"Autogenerated mutation for deleting multiple instance of Location\"\"\"\n  deleteLocations(ids: [ID!]): [Location]\n\n  \"\"\"Autogenerated mutation for adding single instance of DrillingReport\"\"\"\n  addDrillingReport(input: AddDrillingReportInput!): ID\n\n  \"\"\"\n  Autogenerated mutation for adding multiple instances of DrillingReport\n  \"\"\"\n  addDrillingReports(input: [AddDrillingReportInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for updating single instance of DrillingReport\"\"\"\n  updateDrillingReport(input: UpdateDrillingReportInput!): ID\n\n  \"\"\"\n  Autogenerated mutation for updating multiple instance of DrillingReport\n  \"\"\"\n  updateDrillingReports(input: [UpdateDrillingReportInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for deleting single instance of DrillingReport\"\"\"\n  deleteDrillingReport(id: ID!): DrillingReport\n\n  \"\"\"\n  Autogenerated mutation for deleting multiple instance of DrillingReport\n  \"\"\"\n  deleteDrillingReports(ids: [ID!]): [DrillingReport]\n\n  \"\"\"Autogenerated mutation for adding single instance of DrillingProblem\"\"\"\n  addDrillingProblem(input: AddDrillingProblemInput!): ID\n\n  \"\"\"\n  Autogenerated mutation for adding multiple instances of DrillingProblem\n  \"\"\"\n  addDrillingProblems(input: [AddDrillingProblemInput]!): [ID]\n\n  \"\"\"\n  Autogenerated mutation for updating single instance of DrillingProblem\n  \"\"\"\n  updateDrillingProblem(input: UpdateDrillingProblemInput!): ID\n\n  \"\"\"\n  Autogenerated mutation for updating multiple instance of DrillingProblem\n  \"\"\"\n  updateDrillingProblems(input: [UpdateDrillingProblemInput]!): [ID]\n\n  \"\"\"\n  Autogenerated mutation for deleting single instance of DrillingProblem\n  \"\"\"\n  deleteDrillingProblem(id: ID!): DrillingProblem\n\n  \"\"\"\n  Autogenerated mutation for deleting multiple instance of DrillingProblem\n  \"\"\"\n  deleteDrillingProblems(ids: [ID!]): [DrillingProblem]\n\n  \"\"\"\n  Autogenerated mutation for adding single instance of ExpectedDrillingProblem\n  \"\"\"\n  addExpectedDrillingProblem(input: AddExpectedDrillingProblemInput!): ID\n\n  \"\"\"\n  Autogenerated mutation for adding multiple instances of ExpectedDrillingProblem\n  \"\"\"\n  addExpectedDrillingProblems(input: [AddExpectedDrillingProblemInput]!): [ID]\n\n  \"\"\"\n  Autogenerated mutation for updating single instance of ExpectedDrillingProblem\n  \"\"\"\n  updateExpectedDrillingProblem(input: UpdateExpectedDrillingProblemInput!): ID\n\n  \"\"\"\n  Autogenerated mutation for updating multiple instance of ExpectedDrillingProblem\n  \"\"\"\n  updateExpectedDrillingProblems(input: [UpdateExpectedDrillingProblemInput]!): [ID]\n\n  \"\"\"\n  Autogenerated mutation for deleting single instance of ExpectedDrillingProblem\n  \"\"\"\n  deleteExpectedDrillingProblem(id: ID!): ExpectedDrillingProblem\n\n  \"\"\"\n  Autogenerated mutation for deleting multiple instance of ExpectedDrillingProblem\n  \"\"\"\n  deleteExpectedDrillingProblems(ids: [ID!]): [ExpectedDrillingProblem]\n\n  \"\"\"Autogenerated mutation for adding single instance of NearbyWell\"\"\"\n  addNearbyWell(input: AddNearbyWellInput!): ID\n\n  \"\"\"Autogenerated mutation for adding multiple instances of NearbyWell\"\"\"\n  addNearbyWells(input: [AddNearbyWellInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for updating single instance of NearbyWell\"\"\"\n  updateNearbyWell(input: UpdateNearbyWellInput!): ID\n\n  \"\"\"Autogenerated mutation for updating multiple instance of NearbyWell\"\"\"\n  updateNearbyWells(input: [UpdateNearbyWellInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for deleting single instance of NearbyWell\"\"\"\n  deleteNearbyWell(id: ID!): NearbyWell\n\n  \"\"\"Autogenerated mutation for deleting multiple instance of NearbyWell\"\"\"\n  deleteNearbyWells(ids: [ID!]): [NearbyWell]\n  addBotAction(input: AddBotActionInput!): ID\n  runBotAction(id: ID!): BotActionStatus\n  stopBotAction(id: ID!): BotActionStatus\n  updateBotAction(input: UpdateBotActionInput!): BotActionStatus\n}\n\ntype NearbyWell {\n  id: ID!\n  well: Well!\n  distance: String!\n}\n\ntype Query {\n  \"\"\"All instances of Well kind\"\"\"\n  allWells: [Well]\n\n  \"\"\"Get single instance of Well kind by ID\"\"\"\n  well(id: ID!): Well\n\n  \"\"\"Get list of instance of Well kind by IDs\"\"\"\n  wells(ids: [ID]!): [Well]\n\n  \"\"\"All instances of Location kind\"\"\"\n  allLocations: [Location]\n\n  \"\"\"Get single instance of Location kind by ID\"\"\"\n  location(id: ID!): Location\n\n  \"\"\"Get list of instance of Location kind by IDs\"\"\"\n  locations(ids: [ID]!): [Location]\n\n  \"\"\"All instances of DrillingReport kind\"\"\"\n  allDrillingReports: [DrillingReport]\n\n  \"\"\"Get single instance of DrillingReport kind by ID\"\"\"\n  drillingReport(id: ID!): DrillingReport\n\n  \"\"\"Get list of instance of DrillingReport kind by IDs\"\"\"\n  drillingReports(ids: [ID]!): [DrillingReport]\n\n  \"\"\"All instances of DrillingProblem kind\"\"\"\n  allDrillingProblems: [DrillingProblem]\n\n  \"\"\"Get single instance of DrillingProblem kind by ID\"\"\"\n  drillingProblem(id: ID!): DrillingProblem\n\n  \"\"\"Get list of instance of DrillingProblem kind by IDs\"\"\"\n  drillingProblems(ids: [ID]!): [DrillingProblem]\n\n  \"\"\"All instances of ExpectedDrillingProblem kind\"\"\"\n  allExpectedDrillingProblems: [ExpectedDrillingProblem]\n\n  \"\"\"Get single instance of ExpectedDrillingProblem kind by ID\"\"\"\n  expectedDrillingProblem(id: ID!): ExpectedDrillingProblem\n\n  \"\"\"Get list of instance of ExpectedDrillingProblem kind by IDs\"\"\"\n  expectedDrillingProblems(ids: [ID]!): [ExpectedDrillingProblem]\n\n  \"\"\"All instances of NearbyWell kind\"\"\"\n  allNearbyWells: [NearbyWell]\n\n  \"\"\"Get single instance of NearbyWell kind by ID\"\"\"\n  nearbyWell(id: ID!): NearbyWell\n\n  \"\"\"Get list of instance of NearbyWell kind by IDs\"\"\"\n  nearbyWells(ids: [ID]!): [NearbyWell]\n  info: Info!\n  botAction(id: ID!): BotAction\n  botActions(ids: [ID!]!): [BotAction]\n  allBotActions: [BotAction]\n\n  \"\"\"\n  Returns kind by ID, regardless of whether kind is used by the service or not.\n  Can only be used to find kind in a tenant of a service.\n  OR\n  Returns kind by name. If serviceId is omitted, will return kind of a current service/workspace,\n  otherwise can be used to find a kind with specific name of a specific service (e.g. kind 'Workspace' of Portal Service)\n  \"\"\"\n  kind(id: ID, name: String, serviceId: ID): Kind\n\n  \"\"\"\n  Returns all kinds defined *in this service* (sic!).\n  This includes managed kinds and kinds used by workspace/service\n  \"\"\"\n  allKinds(take: Int): [Kind]\n\n  \"\"\"Kind Query\"\"\"\n  query(input: KindQueryInput!): InstanceSet\n  queryJSON(input: KindQueryInput!): JSON\n}\n\ntype Relation {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"optional\"\"\"\n  description: String\n  undirected: Boolean\n  weight: Float\n\n  \"\"\"inferred\"\"\"\n  links: [Link]\n}\n\ntype Service {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n  isSystem: Boolean!\n  endpointUrl: String!\n\n  \"\"\"optional\"\"\"\n  description: String\n  subscriptionEndpointUrl: String\n  thumbnailUrl: String\n  tags: [String]\n  status: Int\n  lastChecked: Date\n  instances: [ServiceInstance]\n\n  \"\"\"inferred\"\"\"\n  kinds: [Kind]\n  queries: [ServiceQuery]\n  mutations: [ServiceMutation]\n  subscriptions: [ServiceSubscription]\n}\n\ntype ServiceInstance {\n  \"\"\"required\"\"\"\n  id: ID!\n  dockerServiceName: String!\n  hostName: String!\n  desiredState: String!\n  currentState: String!\n}\n\ntype ServiceMutation {\n  id: ID!\n  name: String!\n}\n\ntype ServiceQuery {\n  id: ID!\n  name: String!\n}\n\ntype ServiceSubscription {\n  id: ID!\n  name: String!\n}\n\ntype Subscription {\n  botActionAdded: BotActionAddedEvent!\n  botActionUpdated: BotActionUpdatedEvent!\n}\n\nscalar Time\n\ninput UpdateBotActionInput {\n  status: BotActionStatus!\n  progress: Float\n  error: JSON\n}\n\n\"\"\"Autogenerated input for updating instance of DrillingProblem\"\"\"\ninput UpdateDrillingProblemInput {\n  id: ID!\n  name: String\n  problemType: String!\n}\n\n\"\"\"Autogenerated input for updating instance of DrillingReport\"\"\"\ninput UpdateDrillingReportInput {\n  id: ID!\n  well: UpdateWellInput!\n  date: DATE!\n  comment: String!\n  drillingProblem: UpdateDrillingProblemInput\n}\n\n\"\"\"Autogenerated input for updating instance of ExpectedDrillingProblem\"\"\"\ninput UpdateExpectedDrillingProblemInput {\n  id: ID!\n  probability: String!\n  drillingProblem: UpdateDrillingProblemInput!\n}\n\n\"\"\"Autogenerated input for updating instance of Location\"\"\"\ninput UpdateLocationInput {\n  id: ID!\n  lat: Float!\n  long: Float!\n}\n\n\"\"\"Autogenerated input for updating instance of NearbyWell\"\"\"\ninput UpdateNearbyWellInput {\n  id: ID!\n  well: UpdateWellInput!\n  distance: String!\n}\n\n\"\"\"Autogenerated input for updating instance of Well\"\"\"\ninput UpdateWellInput {\n  id: ID!\n  name: String!\n  location: UpdateLocationInput!\n}\n\ntype Well {\n  id: ID!\n  name: String!\n  location: Location!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 27,
      "containsCycle": true,
      "numDefinitions": 53
    },
    {
      "name": "io.maana.core.model.graphql",
      "path": "sample-transportation/packages/sample-transportation-logic/src/imports/io.maana.core.model.graphql",
      "sha": "2f92a2e9e1be50798def7565bdbfb365840b4315",
      "url": "https://api.github.com/repositories/120362480/contents/sample-transportation/packages/sample-transportation-logic/src/imports/io.maana.core.model.graphql?ref=2add18037400db9a33e498da84a73effd246eff5",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/2f92a2e9e1be50798def7565bdbfb365840b4315",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/2add18037400db9a33e498da84a73effd246eff5/sample-transportation/packages/sample-transportation-logic/src/imports/io.maana.core.model.graphql",
      "content": "# source: http://localhost:8051\n# timestamp: Fri Jul 20 2018 07:52:06 GMT-0700 (PDT)\n\ntype AggregateBooleanKind {\n  count: Int!\n}\n\ntype AggregateCategorical {\n  count: Int!\n}\n\ntype AggregateContent {\n  count: Int!\n}\n\ntype AggregateCountryCode {\n  count: Int!\n}\n\ntype AggregateCurrency {\n  count: Int!\n}\n\ntype AggregateDateKind {\n  count: Int!\n}\n\ntype AggregateDocFile {\n  count: Int!\n}\n\ntype AggregateDocument {\n  count: Int!\n}\n\ntype AggregateDuration {\n  count: Int!\n}\n\ntype AggregateEmail {\n  count: Int!\n}\n\ntype AggregateGeoCoordinate {\n  count: Int!\n}\n\ntype AggregateImage {\n  count: Int!\n}\n\ntype AggregateIpAddress {\n  count: Int!\n}\n\ntype AggregateLatitude {\n  count: Int!\n}\n\ntype AggregateLocation {\n  count: Int!\n}\n\ntype AggregateLongitude {\n  count: Int!\n}\n\ntype AggregateNumber {\n  count: Int!\n}\n\ntype AggregateOrderedList {\n  count: Int!\n}\n\ntype AggregateOrderedListItem {\n  count: Int!\n}\n\ntype AggregateOrganization {\n  count: Int!\n}\n\ntype AggregatePage {\n  count: Int!\n}\n\ntype AggregatePercentage {\n  count: Int!\n}\n\ntype AggregatePerson {\n  count: Int!\n}\n\ntype AggregatePhoneNumber {\n  count: Int!\n}\n\ntype AggregatePhysicalQuantity {\n  count: Int!\n}\n\ntype AggregateSection {\n  count: Int!\n}\n\ntype AggregateSocialSecurityNumber {\n  count: Int!\n}\n\ntype AggregateTable {\n  count: Int!\n}\n\ntype AggregateTimeEstimate {\n  count: Int!\n}\n\ntype AggregateTimeKind {\n  count: Int!\n}\n\ntype AggregateUnorderedList {\n  count: Int!\n}\n\ntype AggregateUnorderedListItem {\n  count: Int!\n}\n\ntype AggregateURL {\n  count: Int!\n}\n\ntype AggregateUSState {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\ntype BooleanKind implements Node {\n  id: ID!\n  value: Boolean!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype BooleanKindConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [BooleanKindEdge]!\n  aggregate: AggregateBooleanKind!\n}\n\ninput BooleanKindCreateInput {\n  value: Boolean!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BooleanKindEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: BooleanKind!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum BooleanKindOrderByInput {\n  id_ASC\n  id_DESC\n  value_ASC\n  value_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BooleanKindPreviousValues {\n  id: ID!\n  value: Boolean!\n}\n\ntype BooleanKindSubscriptionPayload {\n  mutation: MutationType!\n  node: BooleanKind\n  updatedFields: [String!]\n  previousValues: BooleanKindPreviousValues\n}\n\ninput BooleanKindSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [BooleanKindSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [BooleanKindSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [BooleanKindSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BooleanKindWhereInput\n}\n\ninput BooleanKindUpdateInput {\n  value: Boolean\n}\n\ninput BooleanKindWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [BooleanKindWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [BooleanKindWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [BooleanKindWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  value: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  value_not: Boolean\n}\n\ninput BooleanKindWhereUniqueInput {\n  id: ID\n}\n\ntype Categorical implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype CategoricalConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [CategoricalEdge]!\n  aggregate: AggregateCategorical!\n}\n\ninput CategoricalCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CategoricalEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Categorical!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum CategoricalOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CategoricalPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype CategoricalSubscriptionPayload {\n  mutation: MutationType!\n  node: Categorical\n  updatedFields: [String!]\n  previousValues: CategoricalPreviousValues\n}\n\ninput CategoricalSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CategoricalSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CategoricalSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CategoricalSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CategoricalWhereInput\n}\n\ninput CategoricalUpdateInput {\n  name: String\n}\n\ninput CategoricalWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CategoricalWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CategoricalWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CategoricalWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput CategoricalWhereUniqueInput {\n  id: ID\n}\n\ntype Content implements Node {\n  id: ID!\n  table(where: TableWhereInput): Table\n  unorderedList(where: UnorderedListWhereInput): UnorderedList\n  orderedList(where: OrderedListWhereInput): OrderedList\n  text: String\n  image(where: ImageWhereInput): Image\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ContentConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ContentEdge]!\n  aggregate: AggregateContent!\n}\n\ninput ContentCreateInput {\n  text: String\n  table: TableCreateOneInput\n  unorderedList: UnorderedListCreateOneInput\n  orderedList: OrderedListCreateOneInput\n  image: ImageCreateOneInput\n}\n\ninput ContentCreateManyInput {\n  create: [ContentCreateInput!]\n  connect: [ContentWhereUniqueInput!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ContentEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Content!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum ContentOrderByInput {\n  id_ASC\n  id_DESC\n  text_ASC\n  text_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ContentPreviousValues {\n  id: ID!\n  text: String\n}\n\ntype ContentSubscriptionPayload {\n  mutation: MutationType!\n  node: Content\n  updatedFields: [String!]\n  previousValues: ContentPreviousValues\n}\n\ninput ContentSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ContentSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ContentSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ContentSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ContentWhereInput\n}\n\ninput ContentUpdateDataInput {\n  text: String\n  table: TableUpdateOneInput\n  unorderedList: UnorderedListUpdateOneInput\n  orderedList: OrderedListUpdateOneInput\n  image: ImageUpdateOneInput\n}\n\ninput ContentUpdateInput {\n  text: String\n  table: TableUpdateOneInput\n  unorderedList: UnorderedListUpdateOneInput\n  orderedList: OrderedListUpdateOneInput\n  image: ImageUpdateOneInput\n}\n\ninput ContentUpdateManyInput {\n  create: [ContentCreateInput!]\n  connect: [ContentWhereUniqueInput!]\n  disconnect: [ContentWhereUniqueInput!]\n  delete: [ContentWhereUniqueInput!]\n  update: [ContentUpdateWithWhereUniqueNestedInput!]\n  upsert: [ContentUpsertWithWhereUniqueNestedInput!]\n}\n\ninput ContentUpdateWithWhereUniqueNestedInput {\n  where: ContentWhereUniqueInput!\n  data: ContentUpdateDataInput!\n}\n\ninput ContentUpsertWithWhereUniqueNestedInput {\n  where: ContentWhereUniqueInput!\n  update: ContentUpdateDataInput!\n  create: ContentCreateInput!\n}\n\ninput ContentWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ContentWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ContentWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ContentWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  text: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  text_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  text_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  text_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  text_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  text_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  text_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  text_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  text_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  text_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  text_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  text_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  text_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  text_not_ends_with: String\n  table: TableWhereInput\n  unorderedList: UnorderedListWhereInput\n  orderedList: OrderedListWhereInput\n  image: ImageWhereInput\n  _MagicalBackRelation_ContentToUnorderedListItem_every: UnorderedListItemWhereInput\n  _MagicalBackRelation_ContentToUnorderedListItem_some: UnorderedListItemWhereInput\n  _MagicalBackRelation_ContentToUnorderedListItem_none: UnorderedListItemWhereInput\n  _MagicalBackRelation_ContentToDocument_every: DocumentWhereInput\n  _MagicalBackRelation_ContentToDocument_some: DocumentWhereInput\n  _MagicalBackRelation_ContentToDocument_none: DocumentWhereInput\n  _MagicalBackRelation_PageHeader_every: PageWhereInput\n  _MagicalBackRelation_PageHeader_some: PageWhereInput\n  _MagicalBackRelation_PageHeader_none: PageWhereInput\n  _MagicalBackRelation_TableHeader_every: TableWhereInput\n  _MagicalBackRelation_TableHeader_some: TableWhereInput\n  _MagicalBackRelation_TableHeader_none: TableWhereInput\n  _MagicalBackRelation_PageFooter_every: PageWhereInput\n  _MagicalBackRelation_PageFooter_some: PageWhereInput\n  _MagicalBackRelation_PageFooter_none: PageWhereInput\n  _MagicalBackRelation_ContentToOrderedListItem_every: OrderedListItemWhereInput\n  _MagicalBackRelation_ContentToOrderedListItem_some: OrderedListItemWhereInput\n  _MagicalBackRelation_ContentToOrderedListItem_none: OrderedListItemWhereInput\n  _MagicalBackRelation_ContentToSection_every: SectionWhereInput\n  _MagicalBackRelation_ContentToSection_some: SectionWhereInput\n  _MagicalBackRelation_ContentToSection_none: SectionWhereInput\n  _MagicalBackRelation_PageContent_every: PageWhereInput\n  _MagicalBackRelation_PageContent_some: PageWhereInput\n  _MagicalBackRelation_PageContent_none: PageWhereInput\n  _MagicalBackRelation_TableRows_every: TableWhereInput\n  _MagicalBackRelation_TableRows_some: TableWhereInput\n  _MagicalBackRelation_TableRows_none: TableWhereInput\n}\n\ninput ContentWhereUniqueInput {\n  id: ID\n}\n\ntype CountryCode implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype CountryCodeConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [CountryCodeEdge]!\n  aggregate: AggregateCountryCode!\n}\n\ninput CountryCodeCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CountryCodeEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: CountryCode!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum CountryCodeOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CountryCodePreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype CountryCodeSubscriptionPayload {\n  mutation: MutationType!\n  node: CountryCode\n  updatedFields: [String!]\n  previousValues: CountryCodePreviousValues\n}\n\ninput CountryCodeSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CountryCodeSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CountryCodeSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CountryCodeSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CountryCodeWhereInput\n}\n\ninput CountryCodeUpdateInput {\n  name: String\n}\n\ninput CountryCodeWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CountryCodeWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CountryCodeWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CountryCodeWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput CountryCodeWhereUniqueInput {\n  id: ID\n}\n\ntype Currency implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype CurrencyConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [CurrencyEdge]!\n  aggregate: AggregateCurrency!\n}\n\ninput CurrencyCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CurrencyEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Currency!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum CurrencyOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CurrencyPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype CurrencySubscriptionPayload {\n  mutation: MutationType!\n  node: Currency\n  updatedFields: [String!]\n  previousValues: CurrencyPreviousValues\n}\n\ninput CurrencySubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CurrencySubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CurrencySubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CurrencySubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CurrencyWhereInput\n}\n\ninput CurrencyUpdateInput {\n  name: String\n}\n\ninput CurrencyWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CurrencyWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CurrencyWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CurrencyWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput CurrencyWhereUniqueInput {\n  id: ID\n}\n\ntype DateKind implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype DateKindConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [DateKindEdge]!\n  aggregate: AggregateDateKind!\n}\n\ninput DateKindCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DateKindEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: DateKind!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum DateKindOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype DateKindPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype DateKindSubscriptionPayload {\n  mutation: MutationType!\n  node: DateKind\n  updatedFields: [String!]\n  previousValues: DateKindPreviousValues\n}\n\ninput DateKindSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DateKindSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DateKindSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [DateKindSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: DateKindWhereInput\n}\n\ninput DateKindUpdateInput {\n  name: String\n}\n\ninput DateKindWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DateKindWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DateKindWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [DateKindWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput DateKindWhereUniqueInput {\n  id: ID\n}\n\nscalar DateTime\n\ntype DocFile implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype DocFileConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [DocFileEdge]!\n  aggregate: AggregateDocFile!\n}\n\ninput DocFileCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DocFileEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: DocFile!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum DocFileOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype DocFilePreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype DocFileSubscriptionPayload {\n  mutation: MutationType!\n  node: DocFile\n  updatedFields: [String!]\n  previousValues: DocFilePreviousValues\n}\n\ninput DocFileSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DocFileSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DocFileSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [DocFileSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: DocFileWhereInput\n}\n\ninput DocFileUpdateInput {\n  name: String\n}\n\ninput DocFileWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DocFileWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DocFileWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [DocFileWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput DocFileWhereUniqueInput {\n  id: ID\n}\n\ntype Document implements Node {\n  id: ID!\n  name: String!\n  text: String\n  xhtml: String\n  pages(where: PageWhereInput, orderBy: PageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Page!]\n  sections(where: SectionWhereInput, orderBy: SectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Section!]\n  content(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype DocumentConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [DocumentEdge]!\n  aggregate: AggregateDocument!\n}\n\ninput DocumentCreateInput {\n  name: String!\n  text: String\n  xhtml: String\n  pages: PageCreateManyInput\n  sections: SectionCreateManyInput\n  content: ContentCreateManyInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DocumentEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Document!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum DocumentOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  text_ASC\n  text_DESC\n  xhtml_ASC\n  xhtml_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype DocumentPreviousValues {\n  id: ID!\n  name: String!\n  text: String\n  xhtml: String\n}\n\ntype DocumentSubscriptionPayload {\n  mutation: MutationType!\n  node: Document\n  updatedFields: [String!]\n  previousValues: DocumentPreviousValues\n}\n\ninput DocumentSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DocumentSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DocumentSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [DocumentSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: DocumentWhereInput\n}\n\ninput DocumentUpdateInput {\n  name: String\n  text: String\n  xhtml: String\n  pages: PageUpdateManyInput\n  sections: SectionUpdateManyInput\n  content: ContentUpdateManyInput\n}\n\ninput DocumentWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DocumentWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DocumentWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [DocumentWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  text: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  text_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  text_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  text_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  text_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  text_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  text_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  text_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  text_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  text_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  text_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  text_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  text_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  text_not_ends_with: String\n  xhtml: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  xhtml_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  xhtml_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  xhtml_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  xhtml_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  xhtml_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  xhtml_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  xhtml_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  xhtml_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  xhtml_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  xhtml_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  xhtml_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  xhtml_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  xhtml_not_ends_with: String\n  pages_every: PageWhereInput\n  pages_some: PageWhereInput\n  pages_none: PageWhereInput\n  sections_every: SectionWhereInput\n  sections_some: SectionWhereInput\n  sections_none: SectionWhereInput\n  content_every: ContentWhereInput\n  content_some: ContentWhereInput\n  content_none: ContentWhereInput\n}\n\ninput DocumentWhereUniqueInput {\n  id: ID\n}\n\ntype Duration implements Node {\n  id: ID!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype DurationConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [DurationEdge]!\n  aggregate: AggregateDuration!\n}\n\ninput DurationCreateOneInput {\n  connect: DurationWhereUniqueInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DurationEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Duration!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum DurationOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype DurationPreviousValues {\n  id: ID!\n}\n\ntype DurationSubscriptionPayload {\n  mutation: MutationType!\n  node: Duration\n  updatedFields: [String!]\n  previousValues: DurationPreviousValues\n}\n\ninput DurationSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DurationSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DurationSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [DurationSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: DurationWhereInput\n}\n\ninput DurationUpdateOneInput {\n  connect: DurationWhereUniqueInput\n  delete: Boolean\n}\n\ninput DurationWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DurationWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DurationWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [DurationWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  _MagicalBackRelation_DurationToTimeEstimate_every: TimeEstimateWhereInput\n  _MagicalBackRelation_DurationToTimeEstimate_some: TimeEstimateWhereInput\n  _MagicalBackRelation_DurationToTimeEstimate_none: TimeEstimateWhereInput\n}\n\ninput DurationWhereUniqueInput {\n  id: ID\n}\n\ntype Email implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype EmailConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [EmailEdge]!\n  aggregate: AggregateEmail!\n}\n\ninput EmailCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype EmailEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Email!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum EmailOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype EmailPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype EmailSubscriptionPayload {\n  mutation: MutationType!\n  node: Email\n  updatedFields: [String!]\n  previousValues: EmailPreviousValues\n}\n\ninput EmailSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [EmailSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [EmailSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [EmailSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: EmailWhereInput\n}\n\ninput EmailUpdateInput {\n  name: String\n}\n\ninput EmailWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [EmailWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [EmailWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [EmailWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput EmailWhereUniqueInput {\n  id: ID\n}\n\ntype GeoCoordinate implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype GeoCoordinateConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [GeoCoordinateEdge]!\n  aggregate: AggregateGeoCoordinate!\n}\n\ninput GeoCoordinateCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype GeoCoordinateEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: GeoCoordinate!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum GeoCoordinateOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype GeoCoordinatePreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype GeoCoordinateSubscriptionPayload {\n  mutation: MutationType!\n  node: GeoCoordinate\n  updatedFields: [String!]\n  previousValues: GeoCoordinatePreviousValues\n}\n\ninput GeoCoordinateSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [GeoCoordinateSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [GeoCoordinateSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [GeoCoordinateSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: GeoCoordinateWhereInput\n}\n\ninput GeoCoordinateUpdateInput {\n  name: String\n}\n\ninput GeoCoordinateWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [GeoCoordinateWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [GeoCoordinateWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [GeoCoordinateWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput GeoCoordinateWhereUniqueInput {\n  id: ID\n}\n\ntype Image implements Node {\n  id: ID!\n  name: String!\n  url: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ImageConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ImageEdge]!\n  aggregate: AggregateImage!\n}\n\ninput ImageCreateInput {\n  name: String!\n  url: String\n}\n\ninput ImageCreateOneInput {\n  create: ImageCreateInput\n  connect: ImageWhereUniqueInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ImageEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Image!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum ImageOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  url_ASC\n  url_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ImagePreviousValues {\n  id: ID!\n  name: String!\n  url: String\n}\n\ntype ImageSubscriptionPayload {\n  mutation: MutationType!\n  node: Image\n  updatedFields: [String!]\n  previousValues: ImagePreviousValues\n}\n\ninput ImageSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ImageSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ImageSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ImageSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ImageWhereInput\n}\n\ninput ImageUpdateDataInput {\n  name: String\n  url: String\n}\n\ninput ImageUpdateInput {\n  name: String\n  url: String\n}\n\ninput ImageUpdateOneInput {\n  create: ImageCreateInput\n  connect: ImageWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: ImageUpdateDataInput\n  upsert: ImageUpsertNestedInput\n}\n\ninput ImageUpsertNestedInput {\n  update: ImageUpdateDataInput!\n  create: ImageCreateInput!\n}\n\ninput ImageWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ImageWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ImageWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ImageWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  url: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  url_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  url_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  url_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  url_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  url_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  url_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  url_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  url_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  url_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  url_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  url_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  url_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  url_not_ends_with: String\n  _MagicalBackRelation_ContentToImage_every: ContentWhereInput\n  _MagicalBackRelation_ContentToImage_some: ContentWhereInput\n  _MagicalBackRelation_ContentToImage_none: ContentWhereInput\n}\n\ninput ImageWhereUniqueInput {\n  id: ID\n}\n\ntype IpAddress implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype IpAddressConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [IpAddressEdge]!\n  aggregate: AggregateIpAddress!\n}\n\ninput IpAddressCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype IpAddressEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: IpAddress!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum IpAddressOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype IpAddressPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype IpAddressSubscriptionPayload {\n  mutation: MutationType!\n  node: IpAddress\n  updatedFields: [String!]\n  previousValues: IpAddressPreviousValues\n}\n\ninput IpAddressSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [IpAddressSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [IpAddressSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [IpAddressSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: IpAddressWhereInput\n}\n\ninput IpAddressUpdateInput {\n  name: String\n}\n\ninput IpAddressWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [IpAddressWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [IpAddressWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [IpAddressWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput IpAddressWhereUniqueInput {\n  id: ID\n}\n\ntype Latitude implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LatitudeConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LatitudeEdge]!\n  aggregate: AggregateLatitude!\n}\n\ninput LatitudeCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LatitudeEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Latitude!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum LatitudeOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype LatitudePreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype LatitudeSubscriptionPayload {\n  mutation: MutationType!\n  node: Latitude\n  updatedFields: [String!]\n  previousValues: LatitudePreviousValues\n}\n\ninput LatitudeSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [LatitudeSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [LatitudeSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [LatitudeSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LatitudeWhereInput\n}\n\ninput LatitudeUpdateInput {\n  name: String\n}\n\ninput LatitudeWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [LatitudeWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [LatitudeWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [LatitudeWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput LatitudeWhereUniqueInput {\n  id: ID\n}\n\ntype Location implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LocationConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LocationEdge]!\n  aggregate: AggregateLocation!\n}\n\ninput LocationCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LocationEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Location!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum LocationOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype LocationPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype LocationSubscriptionPayload {\n  mutation: MutationType!\n  node: Location\n  updatedFields: [String!]\n  previousValues: LocationPreviousValues\n}\n\ninput LocationSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [LocationSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [LocationSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [LocationSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LocationWhereInput\n}\n\ninput LocationUpdateInput {\n  name: String\n}\n\ninput LocationWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [LocationWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [LocationWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [LocationWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput LocationWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Longitude implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LongitudeConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LongitudeEdge]!\n  aggregate: AggregateLongitude!\n}\n\ninput LongitudeCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LongitudeEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Longitude!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum LongitudeOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype LongitudePreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype LongitudeSubscriptionPayload {\n  mutation: MutationType!\n  node: Longitude\n  updatedFields: [String!]\n  previousValues: LongitudePreviousValues\n}\n\ninput LongitudeSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [LongitudeSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [LongitudeSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [LongitudeSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LongitudeWhereInput\n}\n\ninput LongitudeUpdateInput {\n  name: String\n}\n\ninput LongitudeWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [LongitudeWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [LongitudeWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [LongitudeWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput LongitudeWhereUniqueInput {\n  id: ID\n}\n\ntype Mutation {\n  createLatitude(data: LatitudeCreateInput!): Latitude!\n  createLongitude(data: LongitudeCreateInput!): Longitude!\n  createUSState(data: USStateCreateInput!): USState!\n  createDocFile(data: DocFileCreateInput!): DocFile!\n  createCountryCode(data: CountryCodeCreateInput!): CountryCode!\n  createCategorical(data: CategoricalCreateInput!): Categorical!\n  createBooleanKind(data: BooleanKindCreateInput!): BooleanKind!\n  createCurrency(data: CurrencyCreateInput!): Currency!\n  createDateKind(data: DateKindCreateInput!): DateKind!\n  createTimeKind(data: TimeKindCreateInput!): TimeKind!\n  createGeoCoordinate(data: GeoCoordinateCreateInput!): GeoCoordinate!\n  createSocialSecurityNumber(data: SocialSecurityNumberCreateInput!): SocialSecurityNumber!\n  createOrganization(data: OrganizationCreateInput!): Organization!\n  createLocation(data: LocationCreateInput!): Location!\n  createNumber(data: NumberCreateInput!): Number!\n  createPercentage(data: PercentageCreateInput!): Percentage!\n  createPhoneNumber(data: PhoneNumberCreateInput!): PhoneNumber!\n  createEmail(data: EmailCreateInput!): Email!\n  createIpAddress(data: IpAddressCreateInput!): IpAddress!\n  createURL(data: URLCreateInput!): URL!\n  createPhysicalQuantity(data: PhysicalQuantityCreateInput!): PhysicalQuantity!\n  createDocument(data: DocumentCreateInput!): Document!\n  createPerson(data: PersonCreateInput!): Person!\n  createTimeEstimate(data: TimeEstimateCreateInput!): TimeEstimate!\n  createUnorderedListItem(data: UnorderedListItemCreateInput!): UnorderedListItem!\n  createDuration: Duration!\n  createImage(data: ImageCreateInput!): Image!\n  createOrderedList(data: OrderedListCreateInput!): OrderedList!\n  createOrderedListItem(data: OrderedListItemCreateInput!): OrderedListItem!\n  createSection(data: SectionCreateInput!): Section!\n  createPage(data: PageCreateInput!): Page!\n  createTable(data: TableCreateInput!): Table!\n  createUnorderedList(data: UnorderedListCreateInput!): UnorderedList!\n  createContent(data: ContentCreateInput!): Content!\n  updateLatitude(data: LatitudeUpdateInput!, where: LatitudeWhereUniqueInput!): Latitude\n  updateLongitude(data: LongitudeUpdateInput!, where: LongitudeWhereUniqueInput!): Longitude\n  updateUSState(data: USStateUpdateInput!, where: USStateWhereUniqueInput!): USState\n  updateDocFile(data: DocFileUpdateInput!, where: DocFileWhereUniqueInput!): DocFile\n  updateCountryCode(data: CountryCodeUpdateInput!, where: CountryCodeWhereUniqueInput!): CountryCode\n  updateCategorical(data: CategoricalUpdateInput!, where: CategoricalWhereUniqueInput!): Categorical\n  updateBooleanKind(data: BooleanKindUpdateInput!, where: BooleanKindWhereUniqueInput!): BooleanKind\n  updateCurrency(data: CurrencyUpdateInput!, where: CurrencyWhereUniqueInput!): Currency\n  updateDateKind(data: DateKindUpdateInput!, where: DateKindWhereUniqueInput!): DateKind\n  updateTimeKind(data: TimeKindUpdateInput!, where: TimeKindWhereUniqueInput!): TimeKind\n  updateGeoCoordinate(data: GeoCoordinateUpdateInput!, where: GeoCoordinateWhereUniqueInput!): GeoCoordinate\n  updateSocialSecurityNumber(data: SocialSecurityNumberUpdateInput!, where: SocialSecurityNumberWhereUniqueInput!): SocialSecurityNumber\n  updateOrganization(data: OrganizationUpdateInput!, where: OrganizationWhereUniqueInput!): Organization\n  updateLocation(data: LocationUpdateInput!, where: LocationWhereUniqueInput!): Location\n  updateNumber(data: NumberUpdateInput!, where: NumberWhereUniqueInput!): Number\n  updatePercentage(data: PercentageUpdateInput!, where: PercentageWhereUniqueInput!): Percentage\n  updatePhoneNumber(data: PhoneNumberUpdateInput!, where: PhoneNumberWhereUniqueInput!): PhoneNumber\n  updateEmail(data: EmailUpdateInput!, where: EmailWhereUniqueInput!): Email\n  updateIpAddress(data: IpAddressUpdateInput!, where: IpAddressWhereUniqueInput!): IpAddress\n  updateURL(data: URLUpdateInput!, where: URLWhereUniqueInput!): URL\n  updatePhysicalQuantity(data: PhysicalQuantityUpdateInput!, where: PhysicalQuantityWhereUniqueInput!): PhysicalQuantity\n  updateDocument(data: DocumentUpdateInput!, where: DocumentWhereUniqueInput!): Document\n  updatePerson(data: PersonUpdateInput!, where: PersonWhereUniqueInput!): Person\n  updateTimeEstimate(data: TimeEstimateUpdateInput!, where: TimeEstimateWhereUniqueInput!): TimeEstimate\n  updateUnorderedListItem(data: UnorderedListItemUpdateInput!, where: UnorderedListItemWhereUniqueInput!): UnorderedListItem\n  updateImage(data: ImageUpdateInput!, where: ImageWhereUniqueInput!): Image\n  updateOrderedList(data: OrderedListUpdateInput!, where: OrderedListWhereUniqueInput!): OrderedList\n  updateOrderedListItem(data: OrderedListItemUpdateInput!, where: OrderedListItemWhereUniqueInput!): OrderedListItem\n  updateSection(data: SectionUpdateInput!, where: SectionWhereUniqueInput!): Section\n  updatePage(data: PageUpdateInput!, where: PageWhereUniqueInput!): Page\n  updateTable(data: TableUpdateInput!, where: TableWhereUniqueInput!): Table\n  updateUnorderedList(data: UnorderedListUpdateInput!, where: UnorderedListWhereUniqueInput!): UnorderedList\n  updateContent(data: ContentUpdateInput!, where: ContentWhereUniqueInput!): Content\n  deleteLatitude(where: LatitudeWhereUniqueInput!): Latitude\n  deleteLongitude(where: LongitudeWhereUniqueInput!): Longitude\n  deleteUSState(where: USStateWhereUniqueInput!): USState\n  deleteDocFile(where: DocFileWhereUniqueInput!): DocFile\n  deleteCountryCode(where: CountryCodeWhereUniqueInput!): CountryCode\n  deleteCategorical(where: CategoricalWhereUniqueInput!): Categorical\n  deleteBooleanKind(where: BooleanKindWhereUniqueInput!): BooleanKind\n  deleteCurrency(where: CurrencyWhereUniqueInput!): Currency\n  deleteDateKind(where: DateKindWhereUniqueInput!): DateKind\n  deleteTimeKind(where: TimeKindWhereUniqueInput!): TimeKind\n  deleteGeoCoordinate(where: GeoCoordinateWhereUniqueInput!): GeoCoordinate\n  deleteSocialSecurityNumber(where: SocialSecurityNumberWhereUniqueInput!): SocialSecurityNumber\n  deleteOrganization(where: OrganizationWhereUniqueInput!): Organization\n  deleteLocation(where: LocationWhereUniqueInput!): Location\n  deleteNumber(where: NumberWhereUniqueInput!): Number\n  deletePercentage(where: PercentageWhereUniqueInput!): Percentage\n  deletePhoneNumber(where: PhoneNumberWhereUniqueInput!): PhoneNumber\n  deleteEmail(where: EmailWhereUniqueInput!): Email\n  deleteIpAddress(where: IpAddressWhereUniqueInput!): IpAddress\n  deleteURL(where: URLWhereUniqueInput!): URL\n  deletePhysicalQuantity(where: PhysicalQuantityWhereUniqueInput!): PhysicalQuantity\n  deleteDocument(where: DocumentWhereUniqueInput!): Document\n  deletePerson(where: PersonWhereUniqueInput!): Person\n  deleteTimeEstimate(where: TimeEstimateWhereUniqueInput!): TimeEstimate\n  deleteUnorderedListItem(where: UnorderedListItemWhereUniqueInput!): UnorderedListItem\n  deleteDuration(where: DurationWhereUniqueInput!): Duration\n  deleteImage(where: ImageWhereUniqueInput!): Image\n  deleteOrderedList(where: OrderedListWhereUniqueInput!): OrderedList\n  deleteOrderedListItem(where: OrderedListItemWhereUniqueInput!): OrderedListItem\n  deleteSection(where: SectionWhereUniqueInput!): Section\n  deletePage(where: PageWhereUniqueInput!): Page\n  deleteTable(where: TableWhereUniqueInput!): Table\n  deleteUnorderedList(where: UnorderedListWhereUniqueInput!): UnorderedList\n  deleteContent(where: ContentWhereUniqueInput!): Content\n  upsertLatitude(where: LatitudeWhereUniqueInput!, create: LatitudeCreateInput!, update: LatitudeUpdateInput!): Latitude!\n  upsertLongitude(where: LongitudeWhereUniqueInput!, create: LongitudeCreateInput!, update: LongitudeUpdateInput!): Longitude!\n  upsertUSState(where: USStateWhereUniqueInput!, create: USStateCreateInput!, update: USStateUpdateInput!): USState!\n  upsertDocFile(where: DocFileWhereUniqueInput!, create: DocFileCreateInput!, update: DocFileUpdateInput!): DocFile!\n  upsertCountryCode(where: CountryCodeWhereUniqueInput!, create: CountryCodeCreateInput!, update: CountryCodeUpdateInput!): CountryCode!\n  upsertCategorical(where: CategoricalWhereUniqueInput!, create: CategoricalCreateInput!, update: CategoricalUpdateInput!): Categorical!\n  upsertBooleanKind(where: BooleanKindWhereUniqueInput!, create: BooleanKindCreateInput!, update: BooleanKindUpdateInput!): BooleanKind!\n  upsertCurrency(where: CurrencyWhereUniqueInput!, create: CurrencyCreateInput!, update: CurrencyUpdateInput!): Currency!\n  upsertDateKind(where: DateKindWhereUniqueInput!, create: DateKindCreateInput!, update: DateKindUpdateInput!): DateKind!\n  upsertTimeKind(where: TimeKindWhereUniqueInput!, create: TimeKindCreateInput!, update: TimeKindUpdateInput!): TimeKind!\n  upsertGeoCoordinate(where: GeoCoordinateWhereUniqueInput!, create: GeoCoordinateCreateInput!, update: GeoCoordinateUpdateInput!): GeoCoordinate!\n  upsertSocialSecurityNumber(where: SocialSecurityNumberWhereUniqueInput!, create: SocialSecurityNumberCreateInput!, update: SocialSecurityNumberUpdateInput!): SocialSecurityNumber!\n  upsertOrganization(where: OrganizationWhereUniqueInput!, create: OrganizationCreateInput!, update: OrganizationUpdateInput!): Organization!\n  upsertLocation(where: LocationWhereUniqueInput!, create: LocationCreateInput!, update: LocationUpdateInput!): Location!\n  upsertNumber(where: NumberWhereUniqueInput!, create: NumberCreateInput!, update: NumberUpdateInput!): Number!\n  upsertPercentage(where: PercentageWhereUniqueInput!, create: PercentageCreateInput!, update: PercentageUpdateInput!): Percentage!\n  upsertPhoneNumber(where: PhoneNumberWhereUniqueInput!, create: PhoneNumberCreateInput!, update: PhoneNumberUpdateInput!): PhoneNumber!\n  upsertEmail(where: EmailWhereUniqueInput!, create: EmailCreateInput!, update: EmailUpdateInput!): Email!\n  upsertIpAddress(where: IpAddressWhereUniqueInput!, create: IpAddressCreateInput!, update: IpAddressUpdateInput!): IpAddress!\n  upsertURL(where: URLWhereUniqueInput!, create: URLCreateInput!, update: URLUpdateInput!): URL!\n  upsertPhysicalQuantity(where: PhysicalQuantityWhereUniqueInput!, create: PhysicalQuantityCreateInput!, update: PhysicalQuantityUpdateInput!): PhysicalQuantity!\n  upsertDocument(where: DocumentWhereUniqueInput!, create: DocumentCreateInput!, update: DocumentUpdateInput!): Document!\n  upsertPerson(where: PersonWhereUniqueInput!, create: PersonCreateInput!, update: PersonUpdateInput!): Person!\n  upsertTimeEstimate(where: TimeEstimateWhereUniqueInput!, create: TimeEstimateCreateInput!, update: TimeEstimateUpdateInput!): TimeEstimate!\n  upsertUnorderedListItem(where: UnorderedListItemWhereUniqueInput!, create: UnorderedListItemCreateInput!, update: UnorderedListItemUpdateInput!): UnorderedListItem!\n  upsertImage(where: ImageWhereUniqueInput!, create: ImageCreateInput!, update: ImageUpdateInput!): Image!\n  upsertOrderedList(where: OrderedListWhereUniqueInput!, create: OrderedListCreateInput!, update: OrderedListUpdateInput!): OrderedList!\n  upsertOrderedListItem(where: OrderedListItemWhereUniqueInput!, create: OrderedListItemCreateInput!, update: OrderedListItemUpdateInput!): OrderedListItem!\n  upsertSection(where: SectionWhereUniqueInput!, create: SectionCreateInput!, update: SectionUpdateInput!): Section!\n  upsertPage(where: PageWhereUniqueInput!, create: PageCreateInput!, update: PageUpdateInput!): Page!\n  upsertTable(where: TableWhereUniqueInput!, create: TableCreateInput!, update: TableUpdateInput!): Table!\n  upsertUnorderedList(where: UnorderedListWhereUniqueInput!, create: UnorderedListCreateInput!, update: UnorderedListUpdateInput!): UnorderedList!\n  upsertContent(where: ContentWhereUniqueInput!, create: ContentCreateInput!, update: ContentUpdateInput!): Content!\n  updateManyLatitudes(data: LatitudeUpdateInput!, where: LatitudeWhereInput): BatchPayload!\n  updateManyLongitudes(data: LongitudeUpdateInput!, where: LongitudeWhereInput): BatchPayload!\n  updateManyUSStates(data: USStateUpdateInput!, where: USStateWhereInput): BatchPayload!\n  updateManyDocFiles(data: DocFileUpdateInput!, where: DocFileWhereInput): BatchPayload!\n  updateManyCountryCodes(data: CountryCodeUpdateInput!, where: CountryCodeWhereInput): BatchPayload!\n  updateManyCategoricals(data: CategoricalUpdateInput!, where: CategoricalWhereInput): BatchPayload!\n  updateManyBooleanKinds(data: BooleanKindUpdateInput!, where: BooleanKindWhereInput): BatchPayload!\n  updateManyCurrencies(data: CurrencyUpdateInput!, where: CurrencyWhereInput): BatchPayload!\n  updateManyDateKinds(data: DateKindUpdateInput!, where: DateKindWhereInput): BatchPayload!\n  updateManyTimeKinds(data: TimeKindUpdateInput!, where: TimeKindWhereInput): BatchPayload!\n  updateManyGeoCoordinates(data: GeoCoordinateUpdateInput!, where: GeoCoordinateWhereInput): BatchPayload!\n  updateManySocialSecurityNumbers(data: SocialSecurityNumberUpdateInput!, where: SocialSecurityNumberWhereInput): BatchPayload!\n  updateManyOrganizations(data: OrganizationUpdateInput!, where: OrganizationWhereInput): BatchPayload!\n  updateManyLocations(data: LocationUpdateInput!, where: LocationWhereInput): BatchPayload!\n  updateManyNumbers(data: NumberUpdateInput!, where: NumberWhereInput): BatchPayload!\n  updateManyPercentages(data: PercentageUpdateInput!, where: PercentageWhereInput): BatchPayload!\n  updateManyPhoneNumbers(data: PhoneNumberUpdateInput!, where: PhoneNumberWhereInput): BatchPayload!\n  updateManyEmails(data: EmailUpdateInput!, where: EmailWhereInput): BatchPayload!\n  updateManyIpAddresses(data: IpAddressUpdateInput!, where: IpAddressWhereInput): BatchPayload!\n  updateManyURLs(data: URLUpdateInput!, where: URLWhereInput): BatchPayload!\n  updateManyPhysicalQuantities(data: PhysicalQuantityUpdateInput!, where: PhysicalQuantityWhereInput): BatchPayload!\n  updateManyDocuments(data: DocumentUpdateInput!, where: DocumentWhereInput): BatchPayload!\n  updateManyPersons(data: PersonUpdateInput!, where: PersonWhereInput): BatchPayload!\n  updateManyTimeEstimates(data: TimeEstimateUpdateInput!, where: TimeEstimateWhereInput): BatchPayload!\n  updateManyUnorderedListItems(data: UnorderedListItemUpdateInput!, where: UnorderedListItemWhereInput): BatchPayload!\n  updateManyImages(data: ImageUpdateInput!, where: ImageWhereInput): BatchPayload!\n  updateManyOrderedLists(data: OrderedListUpdateInput!, where: OrderedListWhereInput): BatchPayload!\n  updateManyOrderedListItems(data: OrderedListItemUpdateInput!, where: OrderedListItemWhereInput): BatchPayload!\n  updateManySections(data: SectionUpdateInput!, where: SectionWhereInput): BatchPayload!\n  updateManyPages(data: PageUpdateInput!, where: PageWhereInput): BatchPayload!\n  updateManyTables(data: TableUpdateInput!, where: TableWhereInput): BatchPayload!\n  updateManyUnorderedLists(data: UnorderedListUpdateInput!, where: UnorderedListWhereInput): BatchPayload!\n  updateManyContents(data: ContentUpdateInput!, where: ContentWhereInput): BatchPayload!\n  deleteManyLatitudes(where: LatitudeWhereInput): BatchPayload!\n  deleteManyLongitudes(where: LongitudeWhereInput): BatchPayload!\n  deleteManyUSStates(where: USStateWhereInput): BatchPayload!\n  deleteManyDocFiles(where: DocFileWhereInput): BatchPayload!\n  deleteManyCountryCodes(where: CountryCodeWhereInput): BatchPayload!\n  deleteManyCategoricals(where: CategoricalWhereInput): BatchPayload!\n  deleteManyBooleanKinds(where: BooleanKindWhereInput): BatchPayload!\n  deleteManyCurrencies(where: CurrencyWhereInput): BatchPayload!\n  deleteManyDateKinds(where: DateKindWhereInput): BatchPayload!\n  deleteManyTimeKinds(where: TimeKindWhereInput): BatchPayload!\n  deleteManyGeoCoordinates(where: GeoCoordinateWhereInput): BatchPayload!\n  deleteManySocialSecurityNumbers(where: SocialSecurityNumberWhereInput): BatchPayload!\n  deleteManyOrganizations(where: OrganizationWhereInput): BatchPayload!\n  deleteManyLocations(where: LocationWhereInput): BatchPayload!\n  deleteManyNumbers(where: NumberWhereInput): BatchPayload!\n  deleteManyPercentages(where: PercentageWhereInput): BatchPayload!\n  deleteManyPhoneNumbers(where: PhoneNumberWhereInput): BatchPayload!\n  deleteManyEmails(where: EmailWhereInput): BatchPayload!\n  deleteManyIpAddresses(where: IpAddressWhereInput): BatchPayload!\n  deleteManyURLs(where: URLWhereInput): BatchPayload!\n  deleteManyPhysicalQuantities(where: PhysicalQuantityWhereInput): BatchPayload!\n  deleteManyDocuments(where: DocumentWhereInput): BatchPayload!\n  deleteManyPersons(where: PersonWhereInput): BatchPayload!\n  deleteManyTimeEstimates(where: TimeEstimateWhereInput): BatchPayload!\n  deleteManyUnorderedListItems(where: UnorderedListItemWhereInput): BatchPayload!\n  deleteManyDurations(where: DurationWhereInput): BatchPayload!\n  deleteManyImages(where: ImageWhereInput): BatchPayload!\n  deleteManyOrderedLists(where: OrderedListWhereInput): BatchPayload!\n  deleteManyOrderedListItems(where: OrderedListItemWhereInput): BatchPayload!\n  deleteManySections(where: SectionWhereInput): BatchPayload!\n  deleteManyPages(where: PageWhereInput): BatchPayload!\n  deleteManyTables(where: TableWhereInput): BatchPayload!\n  deleteManyUnorderedLists(where: UnorderedListWhereInput): BatchPayload!\n  deleteManyContents(where: ContentWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\ntype Number implements Node {\n  id: ID!\n  name: String!\n  value: Float\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype NumberConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [NumberEdge]!\n  aggregate: AggregateNumber!\n}\n\ninput NumberCreateInput {\n  name: String!\n  value: Float\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype NumberEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Number!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum NumberOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  value_ASC\n  value_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype NumberPreviousValues {\n  id: ID!\n  name: String!\n  value: Float\n}\n\ntype NumberSubscriptionPayload {\n  mutation: MutationType!\n  node: Number\n  updatedFields: [String!]\n  previousValues: NumberPreviousValues\n}\n\ninput NumberSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [NumberSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [NumberSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [NumberSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: NumberWhereInput\n}\n\ninput NumberUpdateInput {\n  name: String\n  value: Float\n}\n\ninput NumberWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [NumberWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [NumberWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [NumberWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  value: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  value_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  value_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  value_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  value_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  value_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  value_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  value_gte: Float\n}\n\ninput NumberWhereUniqueInput {\n  id: ID\n}\n\ntype OrderedList implements Node {\n  id: ID!\n  type: String\n  items(where: OrderedListItemWhereInput, orderBy: OrderedListItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OrderedListItem!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype OrderedListConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [OrderedListEdge]!\n  aggregate: AggregateOrderedList!\n}\n\ninput OrderedListCreateInput {\n  type: String\n  items: OrderedListItemCreateManyInput\n}\n\ninput OrderedListCreateOneInput {\n  create: OrderedListCreateInput\n  connect: OrderedListWhereUniqueInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype OrderedListEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: OrderedList!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\ntype OrderedListItem implements Node {\n  id: ID!\n  index: Int\n  contents(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype OrderedListItemConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [OrderedListItemEdge]!\n  aggregate: AggregateOrderedListItem!\n}\n\ninput OrderedListItemCreateInput {\n  index: Int\n  contents: ContentCreateManyInput\n}\n\ninput OrderedListItemCreateManyInput {\n  create: [OrderedListItemCreateInput!]\n  connect: [OrderedListItemWhereUniqueInput!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype OrderedListItemEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: OrderedListItem!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum OrderedListItemOrderByInput {\n  id_ASC\n  id_DESC\n  index_ASC\n  index_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype OrderedListItemPreviousValues {\n  id: ID!\n  index: Int\n}\n\ntype OrderedListItemSubscriptionPayload {\n  mutation: MutationType!\n  node: OrderedListItem\n  updatedFields: [String!]\n  previousValues: OrderedListItemPreviousValues\n}\n\ninput OrderedListItemSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [OrderedListItemSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [OrderedListItemSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [OrderedListItemSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OrderedListItemWhereInput\n}\n\ninput OrderedListItemUpdateDataInput {\n  index: Int\n  contents: ContentUpdateManyInput\n}\n\ninput OrderedListItemUpdateInput {\n  index: Int\n  contents: ContentUpdateManyInput\n}\n\ninput OrderedListItemUpdateManyInput {\n  create: [OrderedListItemCreateInput!]\n  connect: [OrderedListItemWhereUniqueInput!]\n  disconnect: [OrderedListItemWhereUniqueInput!]\n  delete: [OrderedListItemWhereUniqueInput!]\n  update: [OrderedListItemUpdateWithWhereUniqueNestedInput!]\n  upsert: [OrderedListItemUpsertWithWhereUniqueNestedInput!]\n}\n\ninput OrderedListItemUpdateWithWhereUniqueNestedInput {\n  where: OrderedListItemWhereUniqueInput!\n  data: OrderedListItemUpdateDataInput!\n}\n\ninput OrderedListItemUpsertWithWhereUniqueNestedInput {\n  where: OrderedListItemWhereUniqueInput!\n  update: OrderedListItemUpdateDataInput!\n  create: OrderedListItemCreateInput!\n}\n\ninput OrderedListItemWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [OrderedListItemWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [OrderedListItemWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [OrderedListItemWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  index: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  index_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  index_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  index_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  index_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  index_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  index_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  index_gte: Int\n  contents_every: ContentWhereInput\n  contents_some: ContentWhereInput\n  contents_none: ContentWhereInput\n  _MagicalBackRelation_OrderedListToOrderedListItem_every: OrderedListWhereInput\n  _MagicalBackRelation_OrderedListToOrderedListItem_some: OrderedListWhereInput\n  _MagicalBackRelation_OrderedListToOrderedListItem_none: OrderedListWhereInput\n}\n\ninput OrderedListItemWhereUniqueInput {\n  id: ID\n}\n\nenum OrderedListOrderByInput {\n  id_ASC\n  id_DESC\n  type_ASC\n  type_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype OrderedListPreviousValues {\n  id: ID!\n  type: String\n}\n\ntype OrderedListSubscriptionPayload {\n  mutation: MutationType!\n  node: OrderedList\n  updatedFields: [String!]\n  previousValues: OrderedListPreviousValues\n}\n\ninput OrderedListSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [OrderedListSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [OrderedListSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [OrderedListSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OrderedListWhereInput\n}\n\ninput OrderedListUpdateDataInput {\n  type: String\n  items: OrderedListItemUpdateManyInput\n}\n\ninput OrderedListUpdateInput {\n  type: String\n  items: OrderedListItemUpdateManyInput\n}\n\ninput OrderedListUpdateOneInput {\n  create: OrderedListCreateInput\n  connect: OrderedListWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: OrderedListUpdateDataInput\n  upsert: OrderedListUpsertNestedInput\n}\n\ninput OrderedListUpsertNestedInput {\n  update: OrderedListUpdateDataInput!\n  create: OrderedListCreateInput!\n}\n\ninput OrderedListWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [OrderedListWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [OrderedListWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [OrderedListWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  type: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  type_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  type_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  type_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  type_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  type_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  type_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  type_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  type_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  type_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  type_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  type_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  type_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  type_not_ends_with: String\n  items_every: OrderedListItemWhereInput\n  items_some: OrderedListItemWhereInput\n  items_none: OrderedListItemWhereInput\n  _MagicalBackRelation_ContentToOrderedList_every: ContentWhereInput\n  _MagicalBackRelation_ContentToOrderedList_some: ContentWhereInput\n  _MagicalBackRelation_ContentToOrderedList_none: ContentWhereInput\n}\n\ninput OrderedListWhereUniqueInput {\n  id: ID\n}\n\ntype Organization implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype OrganizationConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [OrganizationEdge]!\n  aggregate: AggregateOrganization!\n}\n\ninput OrganizationCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype OrganizationEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Organization!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum OrganizationOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype OrganizationPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype OrganizationSubscriptionPayload {\n  mutation: MutationType!\n  node: Organization\n  updatedFields: [String!]\n  previousValues: OrganizationPreviousValues\n}\n\ninput OrganizationSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [OrganizationSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [OrganizationSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [OrganizationSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: OrganizationWhereInput\n}\n\ninput OrganizationUpdateInput {\n  name: String\n}\n\ninput OrganizationWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [OrganizationWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [OrganizationWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [OrganizationWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput OrganizationWhereUniqueInput {\n  id: ID\n}\n\ntype Page implements Node {\n  id: ID!\n  contents(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content!]\n  number: Int\n  header(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content!]\n  footer(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PageConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PageEdge]!\n  aggregate: AggregatePage!\n}\n\ninput PageCreateInput {\n  number: Int\n  contents: ContentCreateManyInput\n  header: ContentCreateManyInput\n  footer: ContentCreateManyInput\n}\n\ninput PageCreateManyInput {\n  create: [PageCreateInput!]\n  connect: [PageWhereUniqueInput!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PageEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Page!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\nenum PageOrderByInput {\n  id_ASC\n  id_DESC\n  number_ASC\n  number_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PagePreviousValues {\n  id: ID!\n  number: Int\n}\n\ntype PageSubscriptionPayload {\n  mutation: MutationType!\n  node: Page\n  updatedFields: [String!]\n  previousValues: PagePreviousValues\n}\n\ninput PageSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PageSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PageSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PageSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PageWhereInput\n}\n\ninput PageUpdateDataInput {\n  number: Int\n  contents: ContentUpdateManyInput\n  header: ContentUpdateManyInput\n  footer: ContentUpdateManyInput\n}\n\ninput PageUpdateInput {\n  number: Int\n  contents: ContentUpdateManyInput\n  header: ContentUpdateManyInput\n  footer: ContentUpdateManyInput\n}\n\ninput PageUpdateManyInput {\n  create: [PageCreateInput!]\n  connect: [PageWhereUniqueInput!]\n  disconnect: [PageWhereUniqueInput!]\n  delete: [PageWhereUniqueInput!]\n  update: [PageUpdateWithWhereUniqueNestedInput!]\n  upsert: [PageUpsertWithWhereUniqueNestedInput!]\n}\n\ninput PageUpdateWithWhereUniqueNestedInput {\n  where: PageWhereUniqueInput!\n  data: PageUpdateDataInput!\n}\n\ninput PageUpsertWithWhereUniqueNestedInput {\n  where: PageWhereUniqueInput!\n  update: PageUpdateDataInput!\n  create: PageCreateInput!\n}\n\ninput PageWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PageWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PageWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PageWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  number: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  number_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  number_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  number_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  number_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  number_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  number_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  number_gte: Int\n  contents_every: ContentWhereInput\n  contents_some: ContentWhereInput\n  contents_none: ContentWhereInput\n  header_every: ContentWhereInput\n  header_some: ContentWhereInput\n  header_none: ContentWhereInput\n  footer_every: ContentWhereInput\n  footer_some: ContentWhereInput\n  footer_none: ContentWhereInput\n  _MagicalBackRelation_DocumentToPage_every: DocumentWhereInput\n  _MagicalBackRelation_DocumentToPage_some: DocumentWhereInput\n  _MagicalBackRelation_DocumentToPage_none: DocumentWhereInput\n}\n\ninput PageWhereUniqueInput {\n  id: ID\n}\n\ntype Percentage implements Node {\n  id: ID!\n  name: String!\n  value: Float\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PercentageConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PercentageEdge]!\n  aggregate: AggregatePercentage!\n}\n\ninput PercentageCreateInput {\n  name: String!\n  value: Float\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PercentageEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Percentage!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum PercentageOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  value_ASC\n  value_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PercentagePreviousValues {\n  id: ID!\n  name: String!\n  value: Float\n}\n\ntype PercentageSubscriptionPayload {\n  mutation: MutationType!\n  node: Percentage\n  updatedFields: [String!]\n  previousValues: PercentagePreviousValues\n}\n\ninput PercentageSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PercentageSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PercentageSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PercentageSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PercentageWhereInput\n}\n\ninput PercentageUpdateInput {\n  name: String\n  value: Float\n}\n\ninput PercentageWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PercentageWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PercentageWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PercentageWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  value: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  value_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  value_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  value_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  value_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  value_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  value_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  value_gte: Float\n}\n\ninput PercentageWhereUniqueInput {\n  id: ID\n}\n\ntype Person implements Node {\n  id: ID!\n  name: String!\n  givenName: String\n  familyName: String\n  dateOfBirth: DateTime\n  age: Int\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PersonConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PersonEdge]!\n  aggregate: AggregatePerson!\n}\n\ninput PersonCreateInput {\n  name: String!\n  givenName: String\n  familyName: String\n  dateOfBirth: DateTime\n  age: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PersonEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Person!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum PersonOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  givenName_ASC\n  givenName_DESC\n  familyName_ASC\n  familyName_DESC\n  dateOfBirth_ASC\n  dateOfBirth_DESC\n  age_ASC\n  age_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PersonPreviousValues {\n  id: ID!\n  name: String!\n  givenName: String\n  familyName: String\n  dateOfBirth: DateTime\n  age: Int\n}\n\ntype PersonSubscriptionPayload {\n  mutation: MutationType!\n  node: Person\n  updatedFields: [String!]\n  previousValues: PersonPreviousValues\n}\n\ninput PersonSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PersonSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PersonSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PersonSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PersonWhereInput\n}\n\ninput PersonUpdateInput {\n  name: String\n  givenName: String\n  familyName: String\n  dateOfBirth: DateTime\n  age: Int\n}\n\ninput PersonWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PersonWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PersonWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PersonWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  givenName: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  givenName_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  givenName_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  givenName_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  givenName_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  givenName_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  givenName_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  givenName_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  givenName_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  givenName_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  givenName_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  givenName_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  givenName_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  givenName_not_ends_with: String\n  familyName: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  familyName_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  familyName_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  familyName_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  familyName_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  familyName_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  familyName_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  familyName_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  familyName_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  familyName_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  familyName_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  familyName_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  familyName_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  familyName_not_ends_with: String\n  dateOfBirth: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  dateOfBirth_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  dateOfBirth_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  dateOfBirth_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  dateOfBirth_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  dateOfBirth_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  dateOfBirth_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  dateOfBirth_gte: DateTime\n  age: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  age_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  age_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  age_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  age_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  age_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  age_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  age_gte: Int\n}\n\ninput PersonWhereUniqueInput {\n  id: ID\n}\n\ntype PhoneNumber implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PhoneNumberConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PhoneNumberEdge]!\n  aggregate: AggregatePhoneNumber!\n}\n\ninput PhoneNumberCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PhoneNumberEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: PhoneNumber!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum PhoneNumberOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PhoneNumberPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype PhoneNumberSubscriptionPayload {\n  mutation: MutationType!\n  node: PhoneNumber\n  updatedFields: [String!]\n  previousValues: PhoneNumberPreviousValues\n}\n\ninput PhoneNumberSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PhoneNumberSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PhoneNumberSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PhoneNumberSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PhoneNumberWhereInput\n}\n\ninput PhoneNumberUpdateInput {\n  name: String\n}\n\ninput PhoneNumberWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PhoneNumberWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PhoneNumberWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PhoneNumberWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput PhoneNumberWhereUniqueInput {\n  id: ID\n}\n\ntype PhysicalQuantity implements Node {\n  id: ID!\n  name: String!\n  magnitude: String!\n  unit: String!\n  dimension: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PhysicalQuantityConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PhysicalQuantityEdge]!\n  aggregate: AggregatePhysicalQuantity!\n}\n\ninput PhysicalQuantityCreateInput {\n  name: String!\n  magnitude: String!\n  unit: String!\n  dimension: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PhysicalQuantityEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: PhysicalQuantity!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum PhysicalQuantityOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  magnitude_ASC\n  magnitude_DESC\n  unit_ASC\n  unit_DESC\n  dimension_ASC\n  dimension_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PhysicalQuantityPreviousValues {\n  id: ID!\n  name: String!\n  magnitude: String!\n  unit: String!\n  dimension: String!\n}\n\ntype PhysicalQuantitySubscriptionPayload {\n  mutation: MutationType!\n  node: PhysicalQuantity\n  updatedFields: [String!]\n  previousValues: PhysicalQuantityPreviousValues\n}\n\ninput PhysicalQuantitySubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PhysicalQuantitySubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PhysicalQuantitySubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PhysicalQuantitySubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PhysicalQuantityWhereInput\n}\n\ninput PhysicalQuantityUpdateInput {\n  name: String\n  magnitude: String\n  unit: String\n  dimension: String\n}\n\ninput PhysicalQuantityWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PhysicalQuantityWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PhysicalQuantityWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PhysicalQuantityWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  magnitude: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  magnitude_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  magnitude_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  magnitude_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  magnitude_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  magnitude_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  magnitude_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  magnitude_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  magnitude_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  magnitude_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  magnitude_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  magnitude_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  magnitude_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  magnitude_not_ends_with: String\n  unit: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  unit_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  unit_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  unit_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  unit_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  unit_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  unit_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  unit_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  unit_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  unit_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  unit_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  unit_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  unit_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  unit_not_ends_with: String\n  dimension: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  dimension_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  dimension_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  dimension_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  dimension_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  dimension_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  dimension_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  dimension_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  dimension_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  dimension_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  dimension_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  dimension_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  dimension_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  dimension_not_ends_with: String\n}\n\ninput PhysicalQuantityWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  latitudes(where: LatitudeWhereInput, orderBy: LatitudeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Latitude]!\n  longitudes(where: LongitudeWhereInput, orderBy: LongitudeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Longitude]!\n  uSStates(where: USStateWhereInput, orderBy: USStateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [USState]!\n  docFiles(where: DocFileWhereInput, orderBy: DocFileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DocFile]!\n  countryCodes(where: CountryCodeWhereInput, orderBy: CountryCodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CountryCode]!\n  categoricals(where: CategoricalWhereInput, orderBy: CategoricalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Categorical]!\n  booleanKinds(where: BooleanKindWhereInput, orderBy: BooleanKindOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BooleanKind]!\n  currencies(where: CurrencyWhereInput, orderBy: CurrencyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Currency]!\n  dateKinds(where: DateKindWhereInput, orderBy: DateKindOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DateKind]!\n  timeKinds(where: TimeKindWhereInput, orderBy: TimeKindOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TimeKind]!\n  geoCoordinates(where: GeoCoordinateWhereInput, orderBy: GeoCoordinateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GeoCoordinate]!\n  socialSecurityNumbers(where: SocialSecurityNumberWhereInput, orderBy: SocialSecurityNumberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SocialSecurityNumber]!\n  organizations(where: OrganizationWhereInput, orderBy: OrganizationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Organization]!\n  locations(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Location]!\n  numbers(where: NumberWhereInput, orderBy: NumberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Number]!\n  percentages(where: PercentageWhereInput, orderBy: PercentageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Percentage]!\n  phoneNumbers(where: PhoneNumberWhereInput, orderBy: PhoneNumberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PhoneNumber]!\n  emails(where: EmailWhereInput, orderBy: EmailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Email]!\n  ipAddresses(where: IpAddressWhereInput, orderBy: IpAddressOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [IpAddress]!\n  uRLs(where: URLWhereInput, orderBy: URLOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [URL]!\n  physicalQuantities(where: PhysicalQuantityWhereInput, orderBy: PhysicalQuantityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PhysicalQuantity]!\n  documents(where: DocumentWhereInput, orderBy: DocumentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Document]!\n  persons(where: PersonWhereInput, orderBy: PersonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Person]!\n  timeEstimates(where: TimeEstimateWhereInput, orderBy: TimeEstimateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TimeEstimate]!\n  unorderedListItems(where: UnorderedListItemWhereInput, orderBy: UnorderedListItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UnorderedListItem]!\n  durations(where: DurationWhereInput, orderBy: DurationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Duration]!\n  images(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Image]!\n  orderedLists(where: OrderedListWhereInput, orderBy: OrderedListOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OrderedList]!\n  orderedListItems(where: OrderedListItemWhereInput, orderBy: OrderedListItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [OrderedListItem]!\n  sections(where: SectionWhereInput, orderBy: SectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Section]!\n  pages(where: PageWhereInput, orderBy: PageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Page]!\n  tables(where: TableWhereInput, orderBy: TableOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Table]!\n  unorderedLists(where: UnorderedListWhereInput, orderBy: UnorderedListOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UnorderedList]!\n  contents(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content]!\n  latitude(where: LatitudeWhereUniqueInput!): Latitude\n  longitude(where: LongitudeWhereUniqueInput!): Longitude\n  uSState(where: USStateWhereUniqueInput!): USState\n  docFile(where: DocFileWhereUniqueInput!): DocFile\n  countryCode(where: CountryCodeWhereUniqueInput!): CountryCode\n  categorical(where: CategoricalWhereUniqueInput!): Categorical\n  booleanKind(where: BooleanKindWhereUniqueInput!): BooleanKind\n  currency(where: CurrencyWhereUniqueInput!): Currency\n  dateKind(where: DateKindWhereUniqueInput!): DateKind\n  timeKind(where: TimeKindWhereUniqueInput!): TimeKind\n  geoCoordinate(where: GeoCoordinateWhereUniqueInput!): GeoCoordinate\n  socialSecurityNumber(where: SocialSecurityNumberWhereUniqueInput!): SocialSecurityNumber\n  organization(where: OrganizationWhereUniqueInput!): Organization\n  location(where: LocationWhereUniqueInput!): Location\n  number(where: NumberWhereUniqueInput!): Number\n  percentage(where: PercentageWhereUniqueInput!): Percentage\n  phoneNumber(where: PhoneNumberWhereUniqueInput!): PhoneNumber\n  email(where: EmailWhereUniqueInput!): Email\n  ipAddress(where: IpAddressWhereUniqueInput!): IpAddress\n  uRL(where: URLWhereUniqueInput!): URL\n  physicalQuantity(where: PhysicalQuantityWhereUniqueInput!): PhysicalQuantity\n  document(where: DocumentWhereUniqueInput!): Document\n  person(where: PersonWhereUniqueInput!): Person\n  timeEstimate(where: TimeEstimateWhereUniqueInput!): TimeEstimate\n  unorderedListItem(where: UnorderedListItemWhereUniqueInput!): UnorderedListItem\n  duration(where: DurationWhereUniqueInput!): Duration\n  image(where: ImageWhereUniqueInput!): Image\n  orderedList(where: OrderedListWhereUniqueInput!): OrderedList\n  orderedListItem(where: OrderedListItemWhereUniqueInput!): OrderedListItem\n  section(where: SectionWhereUniqueInput!): Section\n  page(where: PageWhereUniqueInput!): Page\n  table(where: TableWhereUniqueInput!): Table\n  unorderedList(where: UnorderedListWhereUniqueInput!): UnorderedList\n  content(where: ContentWhereUniqueInput!): Content\n  latitudesConnection(where: LatitudeWhereInput, orderBy: LatitudeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LatitudeConnection!\n  longitudesConnection(where: LongitudeWhereInput, orderBy: LongitudeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LongitudeConnection!\n  uSStatesConnection(where: USStateWhereInput, orderBy: USStateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): USStateConnection!\n  docFilesConnection(where: DocFileWhereInput, orderBy: DocFileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DocFileConnection!\n  countryCodesConnection(where: CountryCodeWhereInput, orderBy: CountryCodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CountryCodeConnection!\n  categoricalsConnection(where: CategoricalWhereInput, orderBy: CategoricalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CategoricalConnection!\n  booleanKindsConnection(where: BooleanKindWhereInput, orderBy: BooleanKindOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BooleanKindConnection!\n  currenciesConnection(where: CurrencyWhereInput, orderBy: CurrencyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CurrencyConnection!\n  dateKindsConnection(where: DateKindWhereInput, orderBy: DateKindOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DateKindConnection!\n  timeKindsConnection(where: TimeKindWhereInput, orderBy: TimeKindOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TimeKindConnection!\n  geoCoordinatesConnection(where: GeoCoordinateWhereInput, orderBy: GeoCoordinateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GeoCoordinateConnection!\n  socialSecurityNumbersConnection(where: SocialSecurityNumberWhereInput, orderBy: SocialSecurityNumberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SocialSecurityNumberConnection!\n  organizationsConnection(where: OrganizationWhereInput, orderBy: OrganizationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OrganizationConnection!\n  locationsConnection(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LocationConnection!\n  numbersConnection(where: NumberWhereInput, orderBy: NumberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NumberConnection!\n  percentagesConnection(where: PercentageWhereInput, orderBy: PercentageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PercentageConnection!\n  phoneNumbersConnection(where: PhoneNumberWhereInput, orderBy: PhoneNumberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PhoneNumberConnection!\n  emailsConnection(where: EmailWhereInput, orderBy: EmailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EmailConnection!\n  ipAddressesConnection(where: IpAddressWhereInput, orderBy: IpAddressOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): IpAddressConnection!\n  uRLsConnection(where: URLWhereInput, orderBy: URLOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): URLConnection!\n  physicalQuantitiesConnection(where: PhysicalQuantityWhereInput, orderBy: PhysicalQuantityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PhysicalQuantityConnection!\n  documentsConnection(where: DocumentWhereInput, orderBy: DocumentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DocumentConnection!\n  personsConnection(where: PersonWhereInput, orderBy: PersonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PersonConnection!\n  timeEstimatesConnection(where: TimeEstimateWhereInput, orderBy: TimeEstimateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TimeEstimateConnection!\n  unorderedListItemsConnection(where: UnorderedListItemWhereInput, orderBy: UnorderedListItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UnorderedListItemConnection!\n  durationsConnection(where: DurationWhereInput, orderBy: DurationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DurationConnection!\n  imagesConnection(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ImageConnection!\n  orderedListsConnection(where: OrderedListWhereInput, orderBy: OrderedListOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OrderedListConnection!\n  orderedListItemsConnection(where: OrderedListItemWhereInput, orderBy: OrderedListItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OrderedListItemConnection!\n  sectionsConnection(where: SectionWhereInput, orderBy: SectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SectionConnection!\n  pagesConnection(where: PageWhereInput, orderBy: PageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PageConnection!\n  tablesConnection(where: TableWhereInput, orderBy: TableOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TableConnection!\n  unorderedListsConnection(where: UnorderedListWhereInput, orderBy: UnorderedListOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UnorderedListConnection!\n  contentsConnection(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ContentConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Section implements Node {\n  id: ID!\n  name: String\n  contents(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content!]\n  subSections(where: SectionWhereInput, orderBy: SectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Section!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype SectionConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [SectionEdge]!\n  aggregate: AggregateSection!\n}\n\ninput SectionCreateInput {\n  name: String\n  contents: ContentCreateManyInput\n  subSections: SectionCreateManyInput\n}\n\ninput SectionCreateManyInput {\n  create: [SectionCreateInput!]\n  connect: [SectionWhereUniqueInput!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SectionEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Section!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum SectionOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype SectionPreviousValues {\n  id: ID!\n  name: String\n}\n\ntype SectionSubscriptionPayload {\n  mutation: MutationType!\n  node: Section\n  updatedFields: [String!]\n  previousValues: SectionPreviousValues\n}\n\ninput SectionSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [SectionSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [SectionSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [SectionSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SectionWhereInput\n}\n\ninput SectionUpdateDataInput {\n  name: String\n  contents: ContentUpdateManyInput\n  subSections: SectionUpdateManyInput\n}\n\ninput SectionUpdateInput {\n  name: String\n  contents: ContentUpdateManyInput\n  subSections: SectionUpdateManyInput\n}\n\ninput SectionUpdateManyInput {\n  create: [SectionCreateInput!]\n  connect: [SectionWhereUniqueInput!]\n  disconnect: [SectionWhereUniqueInput!]\n  delete: [SectionWhereUniqueInput!]\n  update: [SectionUpdateWithWhereUniqueNestedInput!]\n  upsert: [SectionUpsertWithWhereUniqueNestedInput!]\n}\n\ninput SectionUpdateWithWhereUniqueNestedInput {\n  where: SectionWhereUniqueInput!\n  data: SectionUpdateDataInput!\n}\n\ninput SectionUpsertWithWhereUniqueNestedInput {\n  where: SectionWhereUniqueInput!\n  update: SectionUpdateDataInput!\n  create: SectionCreateInput!\n}\n\ninput SectionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [SectionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [SectionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [SectionWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  contents_every: ContentWhereInput\n  contents_some: ContentWhereInput\n  contents_none: ContentWhereInput\n  subSections_every: SectionWhereInput\n  subSections_some: SectionWhereInput\n  subSections_none: SectionWhereInput\n  _MagicalBackRelation_SectionToSection_every: SectionWhereInput\n  _MagicalBackRelation_SectionToSection_some: SectionWhereInput\n  _MagicalBackRelation_SectionToSection_none: SectionWhereInput\n  _MagicalBackRelation_DocumentToSection_every: DocumentWhereInput\n  _MagicalBackRelation_DocumentToSection_some: DocumentWhereInput\n  _MagicalBackRelation_DocumentToSection_none: DocumentWhereInput\n}\n\ninput SectionWhereUniqueInput {\n  id: ID\n}\n\ntype SocialSecurityNumber implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype SocialSecurityNumberConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [SocialSecurityNumberEdge]!\n  aggregate: AggregateSocialSecurityNumber!\n}\n\ninput SocialSecurityNumberCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SocialSecurityNumberEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: SocialSecurityNumber!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum SocialSecurityNumberOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype SocialSecurityNumberPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype SocialSecurityNumberSubscriptionPayload {\n  mutation: MutationType!\n  node: SocialSecurityNumber\n  updatedFields: [String!]\n  previousValues: SocialSecurityNumberPreviousValues\n}\n\ninput SocialSecurityNumberSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [SocialSecurityNumberSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [SocialSecurityNumberSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [SocialSecurityNumberSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SocialSecurityNumberWhereInput\n}\n\ninput SocialSecurityNumberUpdateInput {\n  name: String\n}\n\ninput SocialSecurityNumberWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [SocialSecurityNumberWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [SocialSecurityNumberWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [SocialSecurityNumberWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput SocialSecurityNumberWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  latitude(where: LatitudeSubscriptionWhereInput): LatitudeSubscriptionPayload\n  longitude(where: LongitudeSubscriptionWhereInput): LongitudeSubscriptionPayload\n  uSState(where: USStateSubscriptionWhereInput): USStateSubscriptionPayload\n  docFile(where: DocFileSubscriptionWhereInput): DocFileSubscriptionPayload\n  countryCode(where: CountryCodeSubscriptionWhereInput): CountryCodeSubscriptionPayload\n  categorical(where: CategoricalSubscriptionWhereInput): CategoricalSubscriptionPayload\n  booleanKind(where: BooleanKindSubscriptionWhereInput): BooleanKindSubscriptionPayload\n  currency(where: CurrencySubscriptionWhereInput): CurrencySubscriptionPayload\n  dateKind(where: DateKindSubscriptionWhereInput): DateKindSubscriptionPayload\n  timeKind(where: TimeKindSubscriptionWhereInput): TimeKindSubscriptionPayload\n  geoCoordinate(where: GeoCoordinateSubscriptionWhereInput): GeoCoordinateSubscriptionPayload\n  socialSecurityNumber(where: SocialSecurityNumberSubscriptionWhereInput): SocialSecurityNumberSubscriptionPayload\n  organization(where: OrganizationSubscriptionWhereInput): OrganizationSubscriptionPayload\n  location(where: LocationSubscriptionWhereInput): LocationSubscriptionPayload\n  number(where: NumberSubscriptionWhereInput): NumberSubscriptionPayload\n  percentage(where: PercentageSubscriptionWhereInput): PercentageSubscriptionPayload\n  phoneNumber(where: PhoneNumberSubscriptionWhereInput): PhoneNumberSubscriptionPayload\n  email(where: EmailSubscriptionWhereInput): EmailSubscriptionPayload\n  ipAddress(where: IpAddressSubscriptionWhereInput): IpAddressSubscriptionPayload\n  uRL(where: URLSubscriptionWhereInput): URLSubscriptionPayload\n  physicalQuantity(where: PhysicalQuantitySubscriptionWhereInput): PhysicalQuantitySubscriptionPayload\n  document(where: DocumentSubscriptionWhereInput): DocumentSubscriptionPayload\n  person(where: PersonSubscriptionWhereInput): PersonSubscriptionPayload\n  timeEstimate(where: TimeEstimateSubscriptionWhereInput): TimeEstimateSubscriptionPayload\n  unorderedListItem(where: UnorderedListItemSubscriptionWhereInput): UnorderedListItemSubscriptionPayload\n  duration(where: DurationSubscriptionWhereInput): DurationSubscriptionPayload\n  image(where: ImageSubscriptionWhereInput): ImageSubscriptionPayload\n  orderedList(where: OrderedListSubscriptionWhereInput): OrderedListSubscriptionPayload\n  orderedListItem(where: OrderedListItemSubscriptionWhereInput): OrderedListItemSubscriptionPayload\n  section(where: SectionSubscriptionWhereInput): SectionSubscriptionPayload\n  page(where: PageSubscriptionWhereInput): PageSubscriptionPayload\n  table(where: TableSubscriptionWhereInput): TableSubscriptionPayload\n  unorderedList(where: UnorderedListSubscriptionWhereInput): UnorderedListSubscriptionPayload\n  content(where: ContentSubscriptionWhereInput): ContentSubscriptionPayload\n}\n\ntype Table implements Node {\n  id: ID!\n  headers(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content!]\n  rows(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TableConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TableEdge]!\n  aggregate: AggregateTable!\n}\n\ninput TableCreateInput {\n  headers: ContentCreateManyInput\n  rows: ContentCreateManyInput\n}\n\ninput TableCreateOneInput {\n  create: TableCreateInput\n  connect: TableWhereUniqueInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TableEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Table!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum TableOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TablePreviousValues {\n  id: ID!\n}\n\ntype TableSubscriptionPayload {\n  mutation: MutationType!\n  node: Table\n  updatedFields: [String!]\n  previousValues: TablePreviousValues\n}\n\ninput TableSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TableSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TableSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TableSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TableWhereInput\n}\n\ninput TableUpdateDataInput {\n  headers: ContentUpdateManyInput\n  rows: ContentUpdateManyInput\n}\n\ninput TableUpdateInput {\n  headers: ContentUpdateManyInput\n  rows: ContentUpdateManyInput\n}\n\ninput TableUpdateOneInput {\n  create: TableCreateInput\n  connect: TableWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: TableUpdateDataInput\n  upsert: TableUpsertNestedInput\n}\n\ninput TableUpsertNestedInput {\n  update: TableUpdateDataInput!\n  create: TableCreateInput!\n}\n\ninput TableWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TableWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TableWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TableWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  headers_every: ContentWhereInput\n  headers_some: ContentWhereInput\n  headers_none: ContentWhereInput\n  rows_every: ContentWhereInput\n  rows_some: ContentWhereInput\n  rows_none: ContentWhereInput\n  _MagicalBackRelation_ContentTable_every: ContentWhereInput\n  _MagicalBackRelation_ContentTable_some: ContentWhereInput\n  _MagicalBackRelation_ContentTable_none: ContentWhereInput\n}\n\ninput TableWhereUniqueInput {\n  id: ID\n}\n\ntype TimeEstimate implements Node {\n  id: ID!\n  duration(where: DurationWhereInput): Duration!\n  confidence: Float!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TimeEstimateConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TimeEstimateEdge]!\n  aggregate: AggregateTimeEstimate!\n}\n\ninput TimeEstimateCreateInput {\n  confidence: Float!\n  duration: DurationCreateOneInput!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TimeEstimateEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: TimeEstimate!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum TimeEstimateOrderByInput {\n  id_ASC\n  id_DESC\n  confidence_ASC\n  confidence_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TimeEstimatePreviousValues {\n  id: ID!\n  confidence: Float!\n}\n\ntype TimeEstimateSubscriptionPayload {\n  mutation: MutationType!\n  node: TimeEstimate\n  updatedFields: [String!]\n  previousValues: TimeEstimatePreviousValues\n}\n\ninput TimeEstimateSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TimeEstimateSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TimeEstimateSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TimeEstimateSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TimeEstimateWhereInput\n}\n\ninput TimeEstimateUpdateInput {\n  confidence: Float\n  duration: DurationUpdateOneInput\n}\n\ninput TimeEstimateWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TimeEstimateWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TimeEstimateWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TimeEstimateWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  confidence: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  confidence_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  confidence_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  confidence_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  confidence_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  confidence_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  confidence_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  confidence_gte: Float\n  duration: DurationWhereInput\n}\n\ninput TimeEstimateWhereUniqueInput {\n  id: ID\n}\n\ntype TimeKind implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TimeKindConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TimeKindEdge]!\n  aggregate: AggregateTimeKind!\n}\n\ninput TimeKindCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TimeKindEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: TimeKind!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum TimeKindOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TimeKindPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype TimeKindSubscriptionPayload {\n  mutation: MutationType!\n  node: TimeKind\n  updatedFields: [String!]\n  previousValues: TimeKindPreviousValues\n}\n\ninput TimeKindSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TimeKindSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TimeKindSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TimeKindSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TimeKindWhereInput\n}\n\ninput TimeKindUpdateInput {\n  name: String\n}\n\ninput TimeKindWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TimeKindWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TimeKindWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TimeKindWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput TimeKindWhereUniqueInput {\n  id: ID\n}\n\ntype UnorderedList implements Node {\n  id: ID!\n  type: String\n  items(where: UnorderedListItemWhereInput, orderBy: UnorderedListItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UnorderedListItem!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UnorderedListConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UnorderedListEdge]!\n  aggregate: AggregateUnorderedList!\n}\n\ninput UnorderedListCreateInput {\n  type: String\n  items: UnorderedListItemCreateManyInput\n}\n\ninput UnorderedListCreateOneInput {\n  create: UnorderedListCreateInput\n  connect: UnorderedListWhereUniqueInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UnorderedListEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: UnorderedList!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\ntype UnorderedListItem implements Node {\n  id: ID!\n  contents(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UnorderedListItemConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UnorderedListItemEdge]!\n  aggregate: AggregateUnorderedListItem!\n}\n\ninput UnorderedListItemCreateInput {\n  contents: ContentCreateManyInput\n}\n\ninput UnorderedListItemCreateManyInput {\n  create: [UnorderedListItemCreateInput!]\n  connect: [UnorderedListItemWhereUniqueInput!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UnorderedListItemEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: UnorderedListItem!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UnorderedListItemOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UnorderedListItemPreviousValues {\n  id: ID!\n}\n\ntype UnorderedListItemSubscriptionPayload {\n  mutation: MutationType!\n  node: UnorderedListItem\n  updatedFields: [String!]\n  previousValues: UnorderedListItemPreviousValues\n}\n\ninput UnorderedListItemSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UnorderedListItemSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UnorderedListItemSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UnorderedListItemSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UnorderedListItemWhereInput\n}\n\ninput UnorderedListItemUpdateDataInput {\n  contents: ContentUpdateManyInput\n}\n\ninput UnorderedListItemUpdateInput {\n  contents: ContentUpdateManyInput\n}\n\ninput UnorderedListItemUpdateManyInput {\n  create: [UnorderedListItemCreateInput!]\n  connect: [UnorderedListItemWhereUniqueInput!]\n  disconnect: [UnorderedListItemWhereUniqueInput!]\n  delete: [UnorderedListItemWhereUniqueInput!]\n  update: [UnorderedListItemUpdateWithWhereUniqueNestedInput!]\n  upsert: [UnorderedListItemUpsertWithWhereUniqueNestedInput!]\n}\n\ninput UnorderedListItemUpdateWithWhereUniqueNestedInput {\n  where: UnorderedListItemWhereUniqueInput!\n  data: UnorderedListItemUpdateDataInput!\n}\n\ninput UnorderedListItemUpsertWithWhereUniqueNestedInput {\n  where: UnorderedListItemWhereUniqueInput!\n  update: UnorderedListItemUpdateDataInput!\n  create: UnorderedListItemCreateInput!\n}\n\ninput UnorderedListItemWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UnorderedListItemWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UnorderedListItemWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UnorderedListItemWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  contents_every: ContentWhereInput\n  contents_some: ContentWhereInput\n  contents_none: ContentWhereInput\n  _MagicalBackRelation_UnorderedListToUnorderedListItem_every: UnorderedListWhereInput\n  _MagicalBackRelation_UnorderedListToUnorderedListItem_some: UnorderedListWhereInput\n  _MagicalBackRelation_UnorderedListToUnorderedListItem_none: UnorderedListWhereInput\n}\n\ninput UnorderedListItemWhereUniqueInput {\n  id: ID\n}\n\nenum UnorderedListOrderByInput {\n  id_ASC\n  id_DESC\n  type_ASC\n  type_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UnorderedListPreviousValues {\n  id: ID!\n  type: String\n}\n\ntype UnorderedListSubscriptionPayload {\n  mutation: MutationType!\n  node: UnorderedList\n  updatedFields: [String!]\n  previousValues: UnorderedListPreviousValues\n}\n\ninput UnorderedListSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UnorderedListSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UnorderedListSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UnorderedListSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UnorderedListWhereInput\n}\n\ninput UnorderedListUpdateDataInput {\n  type: String\n  items: UnorderedListItemUpdateManyInput\n}\n\ninput UnorderedListUpdateInput {\n  type: String\n  items: UnorderedListItemUpdateManyInput\n}\n\ninput UnorderedListUpdateOneInput {\n  create: UnorderedListCreateInput\n  connect: UnorderedListWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UnorderedListUpdateDataInput\n  upsert: UnorderedListUpsertNestedInput\n}\n\ninput UnorderedListUpsertNestedInput {\n  update: UnorderedListUpdateDataInput!\n  create: UnorderedListCreateInput!\n}\n\ninput UnorderedListWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UnorderedListWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UnorderedListWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UnorderedListWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  type: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  type_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  type_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  type_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  type_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  type_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  type_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  type_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  type_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  type_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  type_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  type_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  type_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  type_not_ends_with: String\n  items_every: UnorderedListItemWhereInput\n  items_some: UnorderedListItemWhereInput\n  items_none: UnorderedListItemWhereInput\n  _MagicalBackRelation_ContentToUnorderedList_every: ContentWhereInput\n  _MagicalBackRelation_ContentToUnorderedList_some: ContentWhereInput\n  _MagicalBackRelation_ContentToUnorderedList_none: ContentWhereInput\n}\n\ninput UnorderedListWhereUniqueInput {\n  id: ID\n}\n\ntype URL implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype URLConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [URLEdge]!\n  aggregate: AggregateURL!\n}\n\ninput URLCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype URLEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: URL!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum URLOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype URLPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype URLSubscriptionPayload {\n  mutation: MutationType!\n  node: URL\n  updatedFields: [String!]\n  previousValues: URLPreviousValues\n}\n\ninput URLSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [URLSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [URLSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [URLSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: URLWhereInput\n}\n\ninput URLUpdateInput {\n  name: String\n}\n\ninput URLWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [URLWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [URLWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [URLWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput URLWhereUniqueInput {\n  id: ID\n}\n\ntype USState implements Node {\n  id: ID!\n  name: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype USStateConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [USStateEdge]!\n  aggregate: AggregateUSState!\n}\n\ninput USStateCreateInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype USStateEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: USState!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum USStateOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype USStatePreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype USStateSubscriptionPayload {\n  mutation: MutationType!\n  node: USState\n  updatedFields: [String!]\n  previousValues: USStatePreviousValues\n}\n\ninput USStateSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [USStateSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [USStateSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [USStateSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: USStateWhereInput\n}\n\ninput USStateUpdateInput {\n  name: String\n}\n\ninput USStateWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [USStateWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [USStateWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [USStateWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput USStateWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 209,
      "containsCycle": true,
      "numDefinitions": 458
    },
    {
      "name": "maana-demo-black-mirror-helpers.graphql",
      "path": "maana-demo-black-mirror/schemas/maana-demo-black-mirror-helpers.graphql",
      "sha": "4188b6f8766dc4be5ce9b09baf68ccecd217d6b9",
      "url": "https://api.github.com/repositories/120362480/contents/maana-demo-black-mirror/schemas/maana-demo-black-mirror-helpers.graphql?ref=7d49bc178c2686914c1c19a546da37d02add2aef",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/4188b6f8766dc4be5ce9b09baf68ccecd217d6b9",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/7d49bc178c2686914c1c19a546da37d02add2aef/maana-demo-black-mirror/schemas/maana-demo-black-mirror-helpers.graphql",
      "content": "# source: http://localhost:8050/graphql\n# timestamp: Tue Apr 30 2019 10:04:32 GMT-0700 (PDT)\n\ntype Country {\n  \"\"\"id\"\"\"\n  id: ID!\n  name: String\n  localizedName: LocalizedText\n}\n\ninput CountryAsInput {\n  id: ID!\n  name: String\n  localizedName: LocalizedTextAsInput\n}\n\nscalar Date\n\nscalar DateTime\n\ntype Info {\n  id: ID!\n  name: String\n  description: String\n}\n\nscalar JSON\n\ntype Language {\n  \"\"\"id\"\"\"\n  id: ID!\n  localizedName: LocalizedText\n  name: String\n}\n\ninput LanguageAsInput {\n  id: ID!\n  localizedName: LocalizedTextAsInput\n  name: String\n}\n\ntype LanguageTag {\n  \"\"\"id\"\"\"\n  id: ID!\n  languageCode: Language\n  country: Country\n}\n\ninput LanguageTagAsInput {\n  id: ID!\n  languageCode: LanguageAsInput\n  country: CountryAsInput\n}\n\ntype LocalizedText {\n  \"\"\"id\"\"\"\n  id: ID!\n  languageTag: LanguageTag\n  text: String!\n}\n\ninput LocalizedTextAsInput {\n  id: ID!\n  languageTag: LanguageTagAsInput\n  text: String!\n}\n\ntype Query {\n  info: Info\n  translateOneLocalized_Mock(localizedText: LocalizedTextAsInput!, targetLanguageTag: LanguageTagAsInput!): LocalizedText!\n  translateMultipleLocalized_Mock(localizedTexts: [LocalizedTextAsInput!]!, targetLanguageTag: LanguageTagAsInput!): [LocalizedText!]!\n  translateOne_Mock(text: String!, targetLanguageTag: LanguageTagAsInput!): LocalizedText!\n  translateMultiple_Mock(texts: [String!]!, targetLanguageTag: LanguageTagAsInput!): [LocalizedText!]!\n}\n\nscalar Time\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 6,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 14
    },
    {
      "name": "io.maana.sample.transportation.model.graphql",
      "path": "sample-transportation/packages/sample-transportation-logic/src/imports/io.maana.sample.transportation.model.graphql",
      "sha": "895fcef1bf4b8f569dbd4775bd1fc3e12dad8e49",
      "url": "https://api.github.com/repositories/120362480/contents/sample-transportation/packages/sample-transportation-logic/src/imports/io.maana.sample.transportation.model.graphql?ref=2add18037400db9a33e498da84a73effd246eff5",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/895fcef1bf4b8f569dbd4775bd1fc3e12dad8e49",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/2add18037400db9a33e498da84a73effd246eff5/sample-transportation/packages/sample-transportation-logic/src/imports/io.maana.sample.transportation.model.graphql",
      "content": "# source: http://localhost:8055\n# timestamp: Fri Jul 20 2018 08:28:40 GMT-0700 (PDT)\n\ntype AggregateCargo {\n  count: Int!\n}\n\ntype AggregatePort {\n  count: Int!\n}\n\ntype AggregatePortContingencyPlan {\n  count: Int!\n}\n\ntype AggregateVessel {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\ntype Cargo implements Node {\n  id: ID!\n  name: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype CargoConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [CargoEdge]!\n  aggregate: AggregateCargo!\n}\n\ninput CargoCreateInput {\n  name: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CargoEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Cargo!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum CargoOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CargoPreviousValues {\n  id: ID!\n  name: String\n}\n\ntype CargoSubscriptionPayload {\n  mutation: MutationType!\n  node: Cargo\n  updatedFields: [String!]\n  previousValues: CargoPreviousValues\n}\n\ninput CargoSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CargoSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CargoSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CargoSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CargoWhereInput\n}\n\ninput CargoUpdateInput {\n  name: String\n}\n\ninput CargoWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CargoWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CargoWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CargoWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput CargoWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createCargo(data: CargoCreateInput!): Cargo!\n  createPort(data: PortCreateInput!): Port!\n  createPortContingencyPlan(data: PortContingencyPlanCreateInput!): PortContingencyPlan!\n  createVessel(data: VesselCreateInput!): Vessel!\n  updateCargo(data: CargoUpdateInput!, where: CargoWhereUniqueInput!): Cargo\n  updatePort(data: PortUpdateInput!, where: PortWhereUniqueInput!): Port\n  updatePortContingencyPlan(data: PortContingencyPlanUpdateInput!, where: PortContingencyPlanWhereUniqueInput!): PortContingencyPlan\n  updateVessel(data: VesselUpdateInput!, where: VesselWhereUniqueInput!): Vessel\n  deleteCargo(where: CargoWhereUniqueInput!): Cargo\n  deletePort(where: PortWhereUniqueInput!): Port\n  deletePortContingencyPlan(where: PortContingencyPlanWhereUniqueInput!): PortContingencyPlan\n  deleteVessel(where: VesselWhereUniqueInput!): Vessel\n  upsertCargo(where: CargoWhereUniqueInput!, create: CargoCreateInput!, update: CargoUpdateInput!): Cargo!\n  upsertPort(where: PortWhereUniqueInput!, create: PortCreateInput!, update: PortUpdateInput!): Port!\n  upsertPortContingencyPlan(where: PortContingencyPlanWhereUniqueInput!, create: PortContingencyPlanCreateInput!, update: PortContingencyPlanUpdateInput!): PortContingencyPlan!\n  upsertVessel(where: VesselWhereUniqueInput!, create: VesselCreateInput!, update: VesselUpdateInput!): Vessel!\n  updateManyCargoes(data: CargoUpdateInput!, where: CargoWhereInput): BatchPayload!\n  updateManyPorts(data: PortUpdateInput!, where: PortWhereInput): BatchPayload!\n  updateManyPortContingencyPlans(data: PortContingencyPlanUpdateInput!, where: PortContingencyPlanWhereInput): BatchPayload!\n  updateManyVessels(data: VesselUpdateInput!, where: VesselWhereInput): BatchPayload!\n  deleteManyCargoes(where: CargoWhereInput): BatchPayload!\n  deleteManyPorts(where: PortWhereInput): BatchPayload!\n  deleteManyPortContingencyPlans(where: PortContingencyPlanWhereInput): BatchPayload!\n  deleteManyVessels(where: VesselWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Port implements Node {\n  id: ID!\n  name: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PortConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PortEdge]!\n  aggregate: AggregatePort!\n}\n\ntype PortContingencyPlan implements Node {\n  id: ID!\n  name: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PortContingencyPlanConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PortContingencyPlanEdge]!\n  aggregate: AggregatePortContingencyPlan!\n}\n\ninput PortContingencyPlanCreateInput {\n  name: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PortContingencyPlanEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: PortContingencyPlan!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum PortContingencyPlanOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PortContingencyPlanPreviousValues {\n  id: ID!\n  name: String\n}\n\ntype PortContingencyPlanSubscriptionPayload {\n  mutation: MutationType!\n  node: PortContingencyPlan\n  updatedFields: [String!]\n  previousValues: PortContingencyPlanPreviousValues\n}\n\ninput PortContingencyPlanSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PortContingencyPlanSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PortContingencyPlanSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PortContingencyPlanSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PortContingencyPlanWhereInput\n}\n\ninput PortContingencyPlanUpdateInput {\n  name: String\n}\n\ninput PortContingencyPlanWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PortContingencyPlanWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PortContingencyPlanWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PortContingencyPlanWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput PortContingencyPlanWhereUniqueInput {\n  id: ID\n}\n\ninput PortCreateInput {\n  name: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PortEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Port!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum PortOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PortPreviousValues {\n  id: ID!\n  name: String\n}\n\ntype PortSubscriptionPayload {\n  mutation: MutationType!\n  node: Port\n  updatedFields: [String!]\n  previousValues: PortPreviousValues\n}\n\ninput PortSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PortSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PortSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PortSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PortWhereInput\n}\n\ninput PortUpdateInput {\n  name: String\n}\n\ninput PortWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PortWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PortWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PortWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput PortWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  cargoes(where: CargoWhereInput, orderBy: CargoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cargo]!\n  ports(where: PortWhereInput, orderBy: PortOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Port]!\n  portContingencyPlans(where: PortContingencyPlanWhereInput, orderBy: PortContingencyPlanOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PortContingencyPlan]!\n  vessels(where: VesselWhereInput, orderBy: VesselOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vessel]!\n  cargo(where: CargoWhereUniqueInput!): Cargo\n  port(where: PortWhereUniqueInput!): Port\n  portContingencyPlan(where: PortContingencyPlanWhereUniqueInput!): PortContingencyPlan\n  vessel(where: VesselWhereUniqueInput!): Vessel\n  cargoesConnection(where: CargoWhereInput, orderBy: CargoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CargoConnection!\n  portsConnection(where: PortWhereInput, orderBy: PortOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PortConnection!\n  portContingencyPlansConnection(where: PortContingencyPlanWhereInput, orderBy: PortContingencyPlanOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PortContingencyPlanConnection!\n  vesselsConnection(where: VesselWhereInput, orderBy: VesselOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VesselConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  cargo(where: CargoSubscriptionWhereInput): CargoSubscriptionPayload\n  port(where: PortSubscriptionWhereInput): PortSubscriptionPayload\n  portContingencyPlan(where: PortContingencyPlanSubscriptionWhereInput): PortContingencyPlanSubscriptionPayload\n  vessel(where: VesselSubscriptionWhereInput): VesselSubscriptionPayload\n}\n\ntype Vessel implements Node {\n  id: ID!\n  name: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype VesselConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [VesselEdge]!\n  aggregate: AggregateVessel!\n}\n\ninput VesselCreateInput {\n  name: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype VesselEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Vessel!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum VesselOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype VesselPreviousValues {\n  id: ID!\n  name: String\n}\n\ntype VesselSubscriptionPayload {\n  mutation: MutationType!\n  node: Vessel\n  updatedFields: [String!]\n  previousValues: VesselPreviousValues\n}\n\ninput VesselSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [VesselSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [VesselSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [VesselSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: VesselWhereInput\n}\n\ninput VesselUpdateInput {\n  name: String\n}\n\ninput VesselWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [VesselWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [VesselWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [VesselWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput VesselWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 29,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 56
    },
    {
      "name": "schema.graphql",
      "path": "sample-transportation/packages/sample-transportation-model/schema.graphql",
      "sha": "d5eadea362aaa4fab4c584e30485419e7a653aaa",
      "url": "https://api.github.com/repositories/120362480/contents/sample-transportation/packages/sample-transportation-model/schema.graphql?ref=2add18037400db9a33e498da84a73effd246eff5",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/d5eadea362aaa4fab4c584e30485419e7a653aaa",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/2add18037400db9a33e498da84a73effd246eff5/sample-transportation/packages/sample-transportation-model/schema.graphql",
      "content": "# source: http://localhost:8055\n# timestamp: Fri Jul 20 2018 06:47:00 GMT-0700 (PDT)\n\ntype AggregateCargo {\n  count: Int!\n}\n\ntype AggregatePort {\n  count: Int!\n}\n\ntype AggregatePortContingencyPlan {\n  count: Int!\n}\n\ntype AggregateVessel {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\ntype Cargo implements Node {\n  id: ID!\n  name: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype CargoConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [CargoEdge]!\n  aggregate: AggregateCargo!\n}\n\ninput CargoCreateInput {\n  name: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CargoEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Cargo!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum CargoOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CargoPreviousValues {\n  id: ID!\n  name: String\n}\n\ntype CargoSubscriptionPayload {\n  mutation: MutationType!\n  node: Cargo\n  updatedFields: [String!]\n  previousValues: CargoPreviousValues\n}\n\ninput CargoSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CargoSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CargoSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CargoSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CargoWhereInput\n}\n\ninput CargoUpdateInput {\n  name: String\n}\n\ninput CargoWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CargoWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CargoWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CargoWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput CargoWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createCargo(data: CargoCreateInput!): Cargo!\n  createPort(data: PortCreateInput!): Port!\n  createPortContingencyPlan(data: PortContingencyPlanCreateInput!): PortContingencyPlan!\n  createVessel(data: VesselCreateInput!): Vessel!\n  updateCargo(data: CargoUpdateInput!, where: CargoWhereUniqueInput!): Cargo\n  updatePort(data: PortUpdateInput!, where: PortWhereUniqueInput!): Port\n  updatePortContingencyPlan(data: PortContingencyPlanUpdateInput!, where: PortContingencyPlanWhereUniqueInput!): PortContingencyPlan\n  updateVessel(data: VesselUpdateInput!, where: VesselWhereUniqueInput!): Vessel\n  deleteCargo(where: CargoWhereUniqueInput!): Cargo\n  deletePort(where: PortWhereUniqueInput!): Port\n  deletePortContingencyPlan(where: PortContingencyPlanWhereUniqueInput!): PortContingencyPlan\n  deleteVessel(where: VesselWhereUniqueInput!): Vessel\n  upsertCargo(where: CargoWhereUniqueInput!, create: CargoCreateInput!, update: CargoUpdateInput!): Cargo!\n  upsertPort(where: PortWhereUniqueInput!, create: PortCreateInput!, update: PortUpdateInput!): Port!\n  upsertPortContingencyPlan(where: PortContingencyPlanWhereUniqueInput!, create: PortContingencyPlanCreateInput!, update: PortContingencyPlanUpdateInput!): PortContingencyPlan!\n  upsertVessel(where: VesselWhereUniqueInput!, create: VesselCreateInput!, update: VesselUpdateInput!): Vessel!\n  updateManyCargoes(data: CargoUpdateInput!, where: CargoWhereInput): BatchPayload!\n  updateManyPorts(data: PortUpdateInput!, where: PortWhereInput): BatchPayload!\n  updateManyPortContingencyPlans(data: PortContingencyPlanUpdateInput!, where: PortContingencyPlanWhereInput): BatchPayload!\n  updateManyVessels(data: VesselUpdateInput!, where: VesselWhereInput): BatchPayload!\n  deleteManyCargoes(where: CargoWhereInput): BatchPayload!\n  deleteManyPorts(where: PortWhereInput): BatchPayload!\n  deleteManyPortContingencyPlans(where: PortContingencyPlanWhereInput): BatchPayload!\n  deleteManyVessels(where: VesselWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Port implements Node {\n  id: ID!\n  name: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PortConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PortEdge]!\n  aggregate: AggregatePort!\n}\n\ntype PortContingencyPlan implements Node {\n  id: ID!\n  name: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PortContingencyPlanConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PortContingencyPlanEdge]!\n  aggregate: AggregatePortContingencyPlan!\n}\n\ninput PortContingencyPlanCreateInput {\n  name: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PortContingencyPlanEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: PortContingencyPlan!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum PortContingencyPlanOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PortContingencyPlanPreviousValues {\n  id: ID!\n  name: String\n}\n\ntype PortContingencyPlanSubscriptionPayload {\n  mutation: MutationType!\n  node: PortContingencyPlan\n  updatedFields: [String!]\n  previousValues: PortContingencyPlanPreviousValues\n}\n\ninput PortContingencyPlanSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PortContingencyPlanSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PortContingencyPlanSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PortContingencyPlanSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PortContingencyPlanWhereInput\n}\n\ninput PortContingencyPlanUpdateInput {\n  name: String\n}\n\ninput PortContingencyPlanWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PortContingencyPlanWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PortContingencyPlanWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PortContingencyPlanWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput PortContingencyPlanWhereUniqueInput {\n  id: ID\n}\n\ninput PortCreateInput {\n  name: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PortEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Port!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum PortOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PortPreviousValues {\n  id: ID!\n  name: String\n}\n\ntype PortSubscriptionPayload {\n  mutation: MutationType!\n  node: Port\n  updatedFields: [String!]\n  previousValues: PortPreviousValues\n}\n\ninput PortSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PortSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PortSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PortSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PortWhereInput\n}\n\ninput PortUpdateInput {\n  name: String\n}\n\ninput PortWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PortWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PortWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PortWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput PortWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  cargoes(where: CargoWhereInput, orderBy: CargoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cargo]!\n  ports(where: PortWhereInput, orderBy: PortOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Port]!\n  portContingencyPlans(where: PortContingencyPlanWhereInput, orderBy: PortContingencyPlanOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PortContingencyPlan]!\n  vessels(where: VesselWhereInput, orderBy: VesselOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vessel]!\n  cargo(where: CargoWhereUniqueInput!): Cargo\n  port(where: PortWhereUniqueInput!): Port\n  portContingencyPlan(where: PortContingencyPlanWhereUniqueInput!): PortContingencyPlan\n  vessel(where: VesselWhereUniqueInput!): Vessel\n  cargoesConnection(where: CargoWhereInput, orderBy: CargoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CargoConnection!\n  portsConnection(where: PortWhereInput, orderBy: PortOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PortConnection!\n  portContingencyPlansConnection(where: PortContingencyPlanWhereInput, orderBy: PortContingencyPlanOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PortContingencyPlanConnection!\n  vesselsConnection(where: VesselWhereInput, orderBy: VesselOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VesselConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  cargo(where: CargoSubscriptionWhereInput): CargoSubscriptionPayload\n  port(where: PortSubscriptionWhereInput): PortSubscriptionPayload\n  portContingencyPlan(where: PortContingencyPlanSubscriptionWhereInput): PortContingencyPlanSubscriptionPayload\n  vessel(where: VesselSubscriptionWhereInput): VesselSubscriptionPayload\n}\n\ntype Vessel implements Node {\n  id: ID!\n  name: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype VesselConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [VesselEdge]!\n  aggregate: AggregateVessel!\n}\n\ninput VesselCreateInput {\n  name: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype VesselEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Vessel!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum VesselOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype VesselPreviousValues {\n  id: ID!\n  name: String\n}\n\ntype VesselSubscriptionPayload {\n  mutation: MutationType!\n  node: Vessel\n  updatedFields: [String!]\n  previousValues: VesselPreviousValues\n}\n\ninput VesselSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [VesselSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [VesselSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [VesselSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: VesselWhereInput\n}\n\ninput VesselUpdateInput {\n  name: String\n}\n\ninput VesselWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [VesselWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [VesselWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [VesselWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n}\n\ninput VesselWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 56
    },
    {
      "name": "schema.graphql",
      "path": "maana-ue/logic-js/schema.graphql",
      "sha": "de7b329aece420d6062ca74ccc8c6b595f8706b0",
      "url": "https://api.github.com/repositories/120362480/contents/maana-ue/logic-js/schema.graphql?ref=2771e357d1041c8b5ee1dfae9007ab8f94c13392",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/de7b329aece420d6062ca74ccc8c6b595f8706b0",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/2771e357d1041c8b5ee1dfae9007ab8f94c13392/maana-ue/logic-js/schema.graphql",
      "content": "# source: http://localhost:8050/graphql\n# timestamp: Sat Apr 13 2019 06:33:02 GMT+0300 (Arabian Standard Time)\n\nscalar Date\n\ntype Info {\n  id: ID!\n  name: String!\n  description: String\n}\n\ntype Location {\n  \"\"\"id\"\"\"\n  id: ID!\n  lat: Float!\n  lon: Float!\n}\n\ninput LocationAsInput {\n  id: ID!\n  lat: Float!\n  lon: Float!\n}\n\ntype Port {\n  \"\"\"id\"\"\"\n  id: ID!\n  location: Location!\n  draftM: Float!\n}\n\ninput PortAsInput {\n  id: ID!\n  location: LocationAsInput!\n  draftM: Float!\n}\n\n\"\"\"Standard queries (instance and batch)\"\"\"\ntype Query {\n  info: Info\n  constrainByCapacity(shipment: ShipmentAsInput!, vessels: [VesselAsInput!]!): [VesselOutput!]!\n  constrainByDraft(shipment: ShipmentAsInput!, vessels: [VesselROBAsInput!]!): [VesselOutput!]!\n  constrainByTime(shipment: ShipmentAsInput!, vesselDestinations: [VesselDestinationAsInput!]!): [VesselOutput!]!\n  intersectVessels(a: [VesselAsInput!]!, b: [VesselAsInput!]!, c: [VesselAsInput!]!): [VesselOutput!]!\n  vesselShipmentCosts(shipment: ShipmentAsInput!, vessels: [VesselAsInput!]!): [VesselCost!]!\n  selectBestVessel(vesselCosts: [VesselCostAsInput!]!): VesselCost!\n  findVesselDestination(vessel: VesselAsInput!): VesselDestination!\n  findVesselROB(vessel: VesselAsInput!): VesselROB!\n}\n\ninput ShipmentAsInput {\n  id: ID!\n  product: String!\n  loadingDate: Date!\n  loadingPort: PortAsInput!\n  dischargeDate: Date!\n  dischargePort: PortAsInput!\n  quantityMT: Float!\n}\n\ntype Vessel {\n  \"\"\"id\"\"\"\n  id: ID!\n  capacityMT: Float!\n  maxAllowableSpeedK: Float!\n  unloadedDraftM: Float!\n  draftLoadCoef: Float!\n}\n\ninput VesselAsInput {\n  id: ID!\n  capacityMT: Float!\n  maxAllowableSpeedK: Float!\n  unloadedDraftM: Float!\n  draftLoadCoef: Float!\n}\n\ntype VesselCost {\n  \"\"\"id\"\"\"\n  id: ID!\n  vessel: Vessel!\n  cost: Float!\n}\n\ninput VesselCostAsInput {\n  id: ID!\n  vessel: VesselAsInput!\n  cost: Float!\n}\n\ntype VesselDestination {\n  \"\"\"id\"\"\"\n  id: ID!\n  vessel: Vessel!\n  port: Port!\n  arrivalDate: Date!\n}\n\ninput VesselDestinationAsInput {\n  id: ID!\n  vessel: VesselAsInput!\n  port: PortAsInput!\n  arrivalDate: Date!\n}\n\ntype VesselOutput {\n  id: ID!\n  capacityMT: Float!\n  maxAllowableSpeedK: Float!\n  unloadedDraftM: Float!\n  draftLoadCoef: Float!\n}\n\ntype VesselROB {\n  \"\"\"id\"\"\"\n  id: ID!\n  vessel: Vessel!\n  ROB: Float!\n}\n\ninput VesselROBAsInput {\n  id: ID!\n  vessel: VesselAsInput!\n  ROB: Float!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 9,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 17
    },
    {
      "name": "query.gql",
      "path": "maana-ue/logic-py/docker_base/schema/query.gql",
      "sha": "4e87bf49faf632cc890b85e34301cdb2534b2565",
      "url": "https://api.github.com/repositories/120362480/contents/maana-ue/logic-py/docker_base/schema/query.gql?ref=1ea448e1ee9751959a16919c4b2c34a661bbbb92",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/4e87bf49faf632cc890b85e34301cdb2534b2565",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/1ea448e1ee9751959a16919c4b2c34a661bbbb92/maana-ue/logic-py/docker_base/schema/query.gql",
      "content": "type Query {\n  info: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 1
    },
    {
      "name": "io.maana.graph.model.graphql",
      "path": "maana-graph/packages/maana-graph-logic/src/imports/io.maana.graph.model.graphql",
      "sha": "969ad18be23bbbe17853810b36122b9f17b59336",
      "url": "https://api.github.com/repositories/120362480/contents/maana-graph/packages/maana-graph-logic/src/imports/io.maana.graph.model.graphql?ref=2add18037400db9a33e498da84a73effd246eff5",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/969ad18be23bbbe17853810b36122b9f17b59336",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/2add18037400db9a33e498da84a73effd246eff5/maana-graph/packages/maana-graph-logic/src/imports/io.maana.graph.model.graphql",
      "content": "# source: http://localhost:4468\n# timestamp: Wed Jul 18 2018 06:55:13 GMT-0700 (PDT)\n\ntype AggregateEdge {\n  count: Int!\n}\n\ntype AggregateGraph {\n  count: Int!\n}\n\ntype AggregateVertex {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\ntype Edge implements Node {\n  id: ID!\n  graph(where: GraphWhereInput): Graph!\n  source(where: VertexWhereInput): Vertex!\n  target(where: VertexWhereInput): Vertex!\n  title: String\n  type: EdgeType\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype EdgeConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [EdgeEdge]!\n  aggregate: AggregateEdge!\n}\n\ninput EdgeCreateInput {\n  title: String\n  type: EdgeType\n  graph: GraphCreateOneWithoutEdgesInput!\n  source: VertexCreateOneWithoutEdgesSourceInput!\n  target: VertexCreateOneWithoutEdgesTargetInput!\n}\n\ninput EdgeCreateManyWithoutGraphInput {\n  create: [EdgeCreateWithoutGraphInput!]\n  connect: [EdgeWhereUniqueInput!]\n}\n\ninput EdgeCreateManyWithoutSourceInput {\n  create: [EdgeCreateWithoutSourceInput!]\n  connect: [EdgeWhereUniqueInput!]\n}\n\ninput EdgeCreateManyWithoutTargetInput {\n  create: [EdgeCreateWithoutTargetInput!]\n  connect: [EdgeWhereUniqueInput!]\n}\n\ninput EdgeCreateWithoutGraphInput {\n  title: String\n  type: EdgeType\n  source: VertexCreateOneWithoutEdgesSourceInput!\n  target: VertexCreateOneWithoutEdgesTargetInput!\n}\n\ninput EdgeCreateWithoutSourceInput {\n  title: String\n  type: EdgeType\n  graph: GraphCreateOneWithoutEdgesInput!\n  target: VertexCreateOneWithoutEdgesTargetInput!\n}\n\ninput EdgeCreateWithoutTargetInput {\n  title: String\n  type: EdgeType\n  graph: GraphCreateOneWithoutEdgesInput!\n  source: VertexCreateOneWithoutEdgesSourceInput!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype EdgeEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Edge!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum EdgeOrderByInput {\n  id_ASC\n  id_DESC\n  title_ASC\n  title_DESC\n  type_ASC\n  type_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype EdgePreviousValues {\n  id: ID!\n  title: String\n  type: EdgeType\n}\n\ntype EdgeSubscriptionPayload {\n  mutation: MutationType!\n  node: Edge\n  updatedFields: [String!]\n  previousValues: EdgePreviousValues\n}\n\ninput EdgeSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [EdgeSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [EdgeSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [EdgeSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: EdgeWhereInput\n}\n\nenum EdgeType {\n  EmptyEdge\n  SpecialEdge\n}\n\ninput EdgeUpdateInput {\n  title: String\n  type: EdgeType\n  graph: GraphUpdateOneWithoutEdgesInput\n  source: VertexUpdateOneWithoutEdgesSourceInput\n  target: VertexUpdateOneWithoutEdgesTargetInput\n}\n\ninput EdgeUpdateManyWithoutGraphInput {\n  create: [EdgeCreateWithoutGraphInput!]\n  connect: [EdgeWhereUniqueInput!]\n  disconnect: [EdgeWhereUniqueInput!]\n  delete: [EdgeWhereUniqueInput!]\n  update: [EdgeUpdateWithWhereUniqueWithoutGraphInput!]\n  upsert: [EdgeUpsertWithWhereUniqueWithoutGraphInput!]\n}\n\ninput EdgeUpdateManyWithoutSourceInput {\n  create: [EdgeCreateWithoutSourceInput!]\n  connect: [EdgeWhereUniqueInput!]\n  disconnect: [EdgeWhereUniqueInput!]\n  delete: [EdgeWhereUniqueInput!]\n  update: [EdgeUpdateWithWhereUniqueWithoutSourceInput!]\n  upsert: [EdgeUpsertWithWhereUniqueWithoutSourceInput!]\n}\n\ninput EdgeUpdateManyWithoutTargetInput {\n  create: [EdgeCreateWithoutTargetInput!]\n  connect: [EdgeWhereUniqueInput!]\n  disconnect: [EdgeWhereUniqueInput!]\n  delete: [EdgeWhereUniqueInput!]\n  update: [EdgeUpdateWithWhereUniqueWithoutTargetInput!]\n  upsert: [EdgeUpsertWithWhereUniqueWithoutTargetInput!]\n}\n\ninput EdgeUpdateWithoutGraphDataInput {\n  title: String\n  type: EdgeType\n  source: VertexUpdateOneWithoutEdgesSourceInput\n  target: VertexUpdateOneWithoutEdgesTargetInput\n}\n\ninput EdgeUpdateWithoutSourceDataInput {\n  title: String\n  type: EdgeType\n  graph: GraphUpdateOneWithoutEdgesInput\n  target: VertexUpdateOneWithoutEdgesTargetInput\n}\n\ninput EdgeUpdateWithoutTargetDataInput {\n  title: String\n  type: EdgeType\n  graph: GraphUpdateOneWithoutEdgesInput\n  source: VertexUpdateOneWithoutEdgesSourceInput\n}\n\ninput EdgeUpdateWithWhereUniqueWithoutGraphInput {\n  where: EdgeWhereUniqueInput!\n  data: EdgeUpdateWithoutGraphDataInput!\n}\n\ninput EdgeUpdateWithWhereUniqueWithoutSourceInput {\n  where: EdgeWhereUniqueInput!\n  data: EdgeUpdateWithoutSourceDataInput!\n}\n\ninput EdgeUpdateWithWhereUniqueWithoutTargetInput {\n  where: EdgeWhereUniqueInput!\n  data: EdgeUpdateWithoutTargetDataInput!\n}\n\ninput EdgeUpsertWithWhereUniqueWithoutGraphInput {\n  where: EdgeWhereUniqueInput!\n  update: EdgeUpdateWithoutGraphDataInput!\n  create: EdgeCreateWithoutGraphInput!\n}\n\ninput EdgeUpsertWithWhereUniqueWithoutSourceInput {\n  where: EdgeWhereUniqueInput!\n  update: EdgeUpdateWithoutSourceDataInput!\n  create: EdgeCreateWithoutSourceInput!\n}\n\ninput EdgeUpsertWithWhereUniqueWithoutTargetInput {\n  where: EdgeWhereUniqueInput!\n  update: EdgeUpdateWithoutTargetDataInput!\n  create: EdgeCreateWithoutTargetInput!\n}\n\ninput EdgeWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [EdgeWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [EdgeWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [EdgeWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  title: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  title_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  title_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  title_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  title_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  title_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  title_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  title_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  title_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  title_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  title_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  title_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  title_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  title_not_ends_with: String\n  type: EdgeType\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  type_not: EdgeType\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  type_in: [EdgeType!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  type_not_in: [EdgeType!]\n  graph: GraphWhereInput\n  source: VertexWhereInput\n  target: VertexWhereInput\n}\n\ninput EdgeWhereUniqueInput {\n  id: ID\n}\n\ntype Graph implements Node {\n  id: ID!\n  name: String\n  vertices(where: VertexWhereInput, orderBy: VertexOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vertex!]\n  edges(where: EdgeWhereInput, orderBy: EdgeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Edge!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype GraphConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [GraphEdge]!\n  aggregate: AggregateGraph!\n}\n\ninput GraphCreateInput {\n  name: String\n  vertices: VertexCreateManyWithoutGraphInput\n  edges: EdgeCreateManyWithoutGraphInput\n}\n\ninput GraphCreateOneWithoutEdgesInput {\n  create: GraphCreateWithoutEdgesInput\n  connect: GraphWhereUniqueInput\n}\n\ninput GraphCreateOneWithoutVerticesInput {\n  create: GraphCreateWithoutVerticesInput\n  connect: GraphWhereUniqueInput\n}\n\ninput GraphCreateWithoutEdgesInput {\n  name: String\n  vertices: VertexCreateManyWithoutGraphInput\n}\n\ninput GraphCreateWithoutVerticesInput {\n  name: String\n  edges: EdgeCreateManyWithoutGraphInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype GraphEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Graph!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum GraphOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype GraphPreviousValues {\n  id: ID!\n  name: String\n}\n\ntype GraphSubscriptionPayload {\n  mutation: MutationType!\n  node: Graph\n  updatedFields: [String!]\n  previousValues: GraphPreviousValues\n}\n\ninput GraphSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [GraphSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [GraphSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [GraphSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: GraphWhereInput\n}\n\ninput GraphUpdateInput {\n  name: String\n  vertices: VertexUpdateManyWithoutGraphInput\n  edges: EdgeUpdateManyWithoutGraphInput\n}\n\ninput GraphUpdateOneWithoutEdgesInput {\n  create: GraphCreateWithoutEdgesInput\n  connect: GraphWhereUniqueInput\n  delete: Boolean\n  update: GraphUpdateWithoutEdgesDataInput\n  upsert: GraphUpsertWithoutEdgesInput\n}\n\ninput GraphUpdateOneWithoutVerticesInput {\n  create: GraphCreateWithoutVerticesInput\n  connect: GraphWhereUniqueInput\n  delete: Boolean\n  update: GraphUpdateWithoutVerticesDataInput\n  upsert: GraphUpsertWithoutVerticesInput\n}\n\ninput GraphUpdateWithoutEdgesDataInput {\n  name: String\n  vertices: VertexUpdateManyWithoutGraphInput\n}\n\ninput GraphUpdateWithoutVerticesDataInput {\n  name: String\n  edges: EdgeUpdateManyWithoutGraphInput\n}\n\ninput GraphUpsertWithoutEdgesInput {\n  update: GraphUpdateWithoutEdgesDataInput!\n  create: GraphCreateWithoutEdgesInput!\n}\n\ninput GraphUpsertWithoutVerticesInput {\n  update: GraphUpdateWithoutVerticesDataInput!\n  create: GraphCreateWithoutVerticesInput!\n}\n\ninput GraphWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [GraphWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [GraphWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [GraphWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  vertices_every: VertexWhereInput\n  vertices_some: VertexWhereInput\n  vertices_none: VertexWhereInput\n  edges_every: EdgeWhereInput\n  edges_some: EdgeWhereInput\n  edges_none: EdgeWhereInput\n}\n\ninput GraphWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createGraph(data: GraphCreateInput!): Graph!\n  createVertex(data: VertexCreateInput!): Vertex!\n  createEdge(data: EdgeCreateInput!): Edge!\n  updateGraph(data: GraphUpdateInput!, where: GraphWhereUniqueInput!): Graph\n  updateVertex(data: VertexUpdateInput!, where: VertexWhereUniqueInput!): Vertex\n  updateEdge(data: EdgeUpdateInput!, where: EdgeWhereUniqueInput!): Edge\n  deleteGraph(where: GraphWhereUniqueInput!): Graph\n  deleteVertex(where: VertexWhereUniqueInput!): Vertex\n  deleteEdge(where: EdgeWhereUniqueInput!): Edge\n  upsertGraph(where: GraphWhereUniqueInput!, create: GraphCreateInput!, update: GraphUpdateInput!): Graph!\n  upsertVertex(where: VertexWhereUniqueInput!, create: VertexCreateInput!, update: VertexUpdateInput!): Vertex!\n  upsertEdge(where: EdgeWhereUniqueInput!, create: EdgeCreateInput!, update: EdgeUpdateInput!): Edge!\n  updateManyGraphs(data: GraphUpdateInput!, where: GraphWhereInput): BatchPayload!\n  updateManyVertexes(data: VertexUpdateInput!, where: VertexWhereInput): BatchPayload!\n  updateManyEdges(data: EdgeUpdateInput!, where: EdgeWhereInput): BatchPayload!\n  deleteManyGraphs(where: GraphWhereInput): BatchPayload!\n  deleteManyVertexes(where: VertexWhereInput): BatchPayload!\n  deleteManyEdges(where: EdgeWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  graphs(where: GraphWhereInput, orderBy: GraphOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Graph]!\n  vertexes(where: VertexWhereInput, orderBy: VertexOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vertex]!\n  edges(where: EdgeWhereInput, orderBy: EdgeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Edge]!\n  graph(where: GraphWhereUniqueInput!): Graph\n  vertex(where: VertexWhereUniqueInput!): Vertex\n  edge(where: EdgeWhereUniqueInput!): Edge\n  graphsConnection(where: GraphWhereInput, orderBy: GraphOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GraphConnection!\n  vertexesConnection(where: VertexWhereInput, orderBy: VertexOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VertexConnection!\n  edgesConnection(where: EdgeWhereInput, orderBy: EdgeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EdgeConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  graph(where: GraphSubscriptionWhereInput): GraphSubscriptionPayload\n  vertex(where: VertexSubscriptionWhereInput): VertexSubscriptionPayload\n  edge(where: EdgeSubscriptionWhereInput): EdgeSubscriptionPayload\n}\n\ntype Vertex implements Node {\n  id: ID!\n  graph(where: GraphWhereInput): Graph!\n  x: Float!\n  y: Float!\n  edgesTarget(where: EdgeWhereInput, orderBy: EdgeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Edge!]\n  edgesSource(where: EdgeWhereInput, orderBy: EdgeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Edge!]\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype VertexConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [VertexEdge]!\n  aggregate: AggregateVertex!\n}\n\ninput VertexCreateInput {\n  x: Float!\n  y: Float!\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n  graph: GraphCreateOneWithoutVerticesInput!\n  edgesTarget: EdgeCreateManyWithoutTargetInput\n  edgesSource: EdgeCreateManyWithoutSourceInput\n}\n\ninput VertexCreateManyWithoutGraphInput {\n  create: [VertexCreateWithoutGraphInput!]\n  connect: [VertexWhereUniqueInput!]\n}\n\ninput VertexCreateOneWithoutEdgesSourceInput {\n  create: VertexCreateWithoutEdgesSourceInput\n  connect: VertexWhereUniqueInput\n}\n\ninput VertexCreateOneWithoutEdgesTargetInput {\n  create: VertexCreateWithoutEdgesTargetInput\n  connect: VertexWhereUniqueInput\n}\n\ninput VertexCreateWithoutEdgesSourceInput {\n  x: Float!\n  y: Float!\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n  graph: GraphCreateOneWithoutVerticesInput!\n  edgesTarget: EdgeCreateManyWithoutTargetInput\n}\n\ninput VertexCreateWithoutEdgesTargetInput {\n  x: Float!\n  y: Float!\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n  graph: GraphCreateOneWithoutVerticesInput!\n  edgesSource: EdgeCreateManyWithoutSourceInput\n}\n\ninput VertexCreateWithoutGraphInput {\n  x: Float!\n  y: Float!\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n  edgesTarget: EdgeCreateManyWithoutTargetInput\n  edgesSource: EdgeCreateManyWithoutSourceInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype VertexEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Vertex!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum VertexOrderByInput {\n  id_ASC\n  id_DESC\n  x_ASC\n  x_DESC\n  y_ASC\n  y_DESC\n  title_ASC\n  title_DESC\n  type_ASC\n  type_DESC\n  subtype_ASC\n  subtype_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype VertexPreviousValues {\n  id: ID!\n  x: Float!\n  y: Float!\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n}\n\ntype VertexSubscriptionPayload {\n  mutation: MutationType!\n  node: Vertex\n  updatedFields: [String!]\n  previousValues: VertexPreviousValues\n}\n\ninput VertexSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [VertexSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [VertexSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [VertexSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: VertexWhereInput\n}\n\nenum VertexSubtype {\n  SpecialChild\n}\n\nenum VertexType {\n  Empty\n  Special\n}\n\ninput VertexUpdateInput {\n  x: Float\n  y: Float\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n  graph: GraphUpdateOneWithoutVerticesInput\n  edgesTarget: EdgeUpdateManyWithoutTargetInput\n  edgesSource: EdgeUpdateManyWithoutSourceInput\n}\n\ninput VertexUpdateManyWithoutGraphInput {\n  create: [VertexCreateWithoutGraphInput!]\n  connect: [VertexWhereUniqueInput!]\n  disconnect: [VertexWhereUniqueInput!]\n  delete: [VertexWhereUniqueInput!]\n  update: [VertexUpdateWithWhereUniqueWithoutGraphInput!]\n  upsert: [VertexUpsertWithWhereUniqueWithoutGraphInput!]\n}\n\ninput VertexUpdateOneWithoutEdgesSourceInput {\n  create: VertexCreateWithoutEdgesSourceInput\n  connect: VertexWhereUniqueInput\n  delete: Boolean\n  update: VertexUpdateWithoutEdgesSourceDataInput\n  upsert: VertexUpsertWithoutEdgesSourceInput\n}\n\ninput VertexUpdateOneWithoutEdgesTargetInput {\n  create: VertexCreateWithoutEdgesTargetInput\n  connect: VertexWhereUniqueInput\n  delete: Boolean\n  update: VertexUpdateWithoutEdgesTargetDataInput\n  upsert: VertexUpsertWithoutEdgesTargetInput\n}\n\ninput VertexUpdateWithoutEdgesSourceDataInput {\n  x: Float\n  y: Float\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n  graph: GraphUpdateOneWithoutVerticesInput\n  edgesTarget: EdgeUpdateManyWithoutTargetInput\n}\n\ninput VertexUpdateWithoutEdgesTargetDataInput {\n  x: Float\n  y: Float\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n  graph: GraphUpdateOneWithoutVerticesInput\n  edgesSource: EdgeUpdateManyWithoutSourceInput\n}\n\ninput VertexUpdateWithoutGraphDataInput {\n  x: Float\n  y: Float\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n  edgesTarget: EdgeUpdateManyWithoutTargetInput\n  edgesSource: EdgeUpdateManyWithoutSourceInput\n}\n\ninput VertexUpdateWithWhereUniqueWithoutGraphInput {\n  where: VertexWhereUniqueInput!\n  data: VertexUpdateWithoutGraphDataInput!\n}\n\ninput VertexUpsertWithoutEdgesSourceInput {\n  update: VertexUpdateWithoutEdgesSourceDataInput!\n  create: VertexCreateWithoutEdgesSourceInput!\n}\n\ninput VertexUpsertWithoutEdgesTargetInput {\n  update: VertexUpdateWithoutEdgesTargetDataInput!\n  create: VertexCreateWithoutEdgesTargetInput!\n}\n\ninput VertexUpsertWithWhereUniqueWithoutGraphInput {\n  where: VertexWhereUniqueInput!\n  update: VertexUpdateWithoutGraphDataInput!\n  create: VertexCreateWithoutGraphInput!\n}\n\ninput VertexWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [VertexWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [VertexWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [VertexWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  x: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  x_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  x_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  x_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  x_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  x_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  x_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  x_gte: Float\n  y: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  y_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  y_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  y_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  y_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  y_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  y_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  y_gte: Float\n  title: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  title_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  title_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  title_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  title_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  title_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  title_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  title_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  title_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  title_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  title_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  title_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  title_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  title_not_ends_with: String\n  type: VertexType\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  type_not: VertexType\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  type_in: [VertexType!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  type_not_in: [VertexType!]\n  subtype: VertexSubtype\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  subtype_not: VertexSubtype\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  subtype_in: [VertexSubtype!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  subtype_not_in: [VertexSubtype!]\n  graph: GraphWhereInput\n  edgesTarget_every: EdgeWhereInput\n  edgesTarget_some: EdgeWhereInput\n  edgesTarget_none: EdgeWhereInput\n  edgesSource_every: EdgeWhereInput\n  edgesSource_some: EdgeWhereInput\n  edgesSource_none: EdgeWhereInput\n}\n\ninput VertexWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 91
    },
    {
      "name": "schema.graphql",
      "path": "maana-graph/packages/maana-graph-model/schema.graphql",
      "sha": "eb1cdbec770b72f670dec4251427b655994e5cc9",
      "url": "https://api.github.com/repositories/120362480/contents/maana-graph/packages/maana-graph-model/schema.graphql?ref=2add18037400db9a33e498da84a73effd246eff5",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/eb1cdbec770b72f670dec4251427b655994e5cc9",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/2add18037400db9a33e498da84a73effd246eff5/maana-graph/packages/maana-graph-model/schema.graphql",
      "content": "# source: http://localhost:4468\n# timestamp: Wed Jul 18 2018 06:51:42 GMT-0700 (PDT)\n\ntype AggregateEdge {\n  count: Int!\n}\n\ntype AggregateGraph {\n  count: Int!\n}\n\ntype AggregateVertex {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\ntype Edge implements Node {\n  id: ID!\n  graph(where: GraphWhereInput): Graph!\n  source(where: VertexWhereInput): Vertex!\n  target(where: VertexWhereInput): Vertex!\n  title: String\n  type: EdgeType\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype EdgeConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [EdgeEdge]!\n  aggregate: AggregateEdge!\n}\n\ninput EdgeCreateInput {\n  title: String\n  type: EdgeType\n  graph: GraphCreateOneWithoutEdgesInput!\n  source: VertexCreateOneWithoutEdgesSourceInput!\n  target: VertexCreateOneWithoutEdgesTargetInput!\n}\n\ninput EdgeCreateManyWithoutGraphInput {\n  create: [EdgeCreateWithoutGraphInput!]\n  connect: [EdgeWhereUniqueInput!]\n}\n\ninput EdgeCreateManyWithoutSourceInput {\n  create: [EdgeCreateWithoutSourceInput!]\n  connect: [EdgeWhereUniqueInput!]\n}\n\ninput EdgeCreateManyWithoutTargetInput {\n  create: [EdgeCreateWithoutTargetInput!]\n  connect: [EdgeWhereUniqueInput!]\n}\n\ninput EdgeCreateWithoutGraphInput {\n  title: String\n  type: EdgeType\n  source: VertexCreateOneWithoutEdgesSourceInput!\n  target: VertexCreateOneWithoutEdgesTargetInput!\n}\n\ninput EdgeCreateWithoutSourceInput {\n  title: String\n  type: EdgeType\n  graph: GraphCreateOneWithoutEdgesInput!\n  target: VertexCreateOneWithoutEdgesTargetInput!\n}\n\ninput EdgeCreateWithoutTargetInput {\n  title: String\n  type: EdgeType\n  graph: GraphCreateOneWithoutEdgesInput!\n  source: VertexCreateOneWithoutEdgesSourceInput!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype EdgeEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Edge!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum EdgeOrderByInput {\n  id_ASC\n  id_DESC\n  title_ASC\n  title_DESC\n  type_ASC\n  type_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype EdgePreviousValues {\n  id: ID!\n  title: String\n  type: EdgeType\n}\n\ntype EdgeSubscriptionPayload {\n  mutation: MutationType!\n  node: Edge\n  updatedFields: [String!]\n  previousValues: EdgePreviousValues\n}\n\ninput EdgeSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [EdgeSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [EdgeSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [EdgeSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: EdgeWhereInput\n}\n\nenum EdgeType {\n  EmptyEdge\n  SpecialEdge\n}\n\ninput EdgeUpdateInput {\n  title: String\n  type: EdgeType\n  graph: GraphUpdateOneWithoutEdgesInput\n  source: VertexUpdateOneWithoutEdgesSourceInput\n  target: VertexUpdateOneWithoutEdgesTargetInput\n}\n\ninput EdgeUpdateManyWithoutGraphInput {\n  create: [EdgeCreateWithoutGraphInput!]\n  connect: [EdgeWhereUniqueInput!]\n  disconnect: [EdgeWhereUniqueInput!]\n  delete: [EdgeWhereUniqueInput!]\n  update: [EdgeUpdateWithWhereUniqueWithoutGraphInput!]\n  upsert: [EdgeUpsertWithWhereUniqueWithoutGraphInput!]\n}\n\ninput EdgeUpdateManyWithoutSourceInput {\n  create: [EdgeCreateWithoutSourceInput!]\n  connect: [EdgeWhereUniqueInput!]\n  disconnect: [EdgeWhereUniqueInput!]\n  delete: [EdgeWhereUniqueInput!]\n  update: [EdgeUpdateWithWhereUniqueWithoutSourceInput!]\n  upsert: [EdgeUpsertWithWhereUniqueWithoutSourceInput!]\n}\n\ninput EdgeUpdateManyWithoutTargetInput {\n  create: [EdgeCreateWithoutTargetInput!]\n  connect: [EdgeWhereUniqueInput!]\n  disconnect: [EdgeWhereUniqueInput!]\n  delete: [EdgeWhereUniqueInput!]\n  update: [EdgeUpdateWithWhereUniqueWithoutTargetInput!]\n  upsert: [EdgeUpsertWithWhereUniqueWithoutTargetInput!]\n}\n\ninput EdgeUpdateWithoutGraphDataInput {\n  title: String\n  type: EdgeType\n  source: VertexUpdateOneWithoutEdgesSourceInput\n  target: VertexUpdateOneWithoutEdgesTargetInput\n}\n\ninput EdgeUpdateWithoutSourceDataInput {\n  title: String\n  type: EdgeType\n  graph: GraphUpdateOneWithoutEdgesInput\n  target: VertexUpdateOneWithoutEdgesTargetInput\n}\n\ninput EdgeUpdateWithoutTargetDataInput {\n  title: String\n  type: EdgeType\n  graph: GraphUpdateOneWithoutEdgesInput\n  source: VertexUpdateOneWithoutEdgesSourceInput\n}\n\ninput EdgeUpdateWithWhereUniqueWithoutGraphInput {\n  where: EdgeWhereUniqueInput!\n  data: EdgeUpdateWithoutGraphDataInput!\n}\n\ninput EdgeUpdateWithWhereUniqueWithoutSourceInput {\n  where: EdgeWhereUniqueInput!\n  data: EdgeUpdateWithoutSourceDataInput!\n}\n\ninput EdgeUpdateWithWhereUniqueWithoutTargetInput {\n  where: EdgeWhereUniqueInput!\n  data: EdgeUpdateWithoutTargetDataInput!\n}\n\ninput EdgeUpsertWithWhereUniqueWithoutGraphInput {\n  where: EdgeWhereUniqueInput!\n  update: EdgeUpdateWithoutGraphDataInput!\n  create: EdgeCreateWithoutGraphInput!\n}\n\ninput EdgeUpsertWithWhereUniqueWithoutSourceInput {\n  where: EdgeWhereUniqueInput!\n  update: EdgeUpdateWithoutSourceDataInput!\n  create: EdgeCreateWithoutSourceInput!\n}\n\ninput EdgeUpsertWithWhereUniqueWithoutTargetInput {\n  where: EdgeWhereUniqueInput!\n  update: EdgeUpdateWithoutTargetDataInput!\n  create: EdgeCreateWithoutTargetInput!\n}\n\ninput EdgeWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [EdgeWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [EdgeWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [EdgeWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  title: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  title_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  title_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  title_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  title_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  title_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  title_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  title_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  title_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  title_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  title_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  title_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  title_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  title_not_ends_with: String\n  type: EdgeType\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  type_not: EdgeType\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  type_in: [EdgeType!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  type_not_in: [EdgeType!]\n  graph: GraphWhereInput\n  source: VertexWhereInput\n  target: VertexWhereInput\n}\n\ninput EdgeWhereUniqueInput {\n  id: ID\n}\n\ntype Graph implements Node {\n  id: ID!\n  name: String\n  vertices(where: VertexWhereInput, orderBy: VertexOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vertex!]\n  edges(where: EdgeWhereInput, orderBy: EdgeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Edge!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype GraphConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [GraphEdge]!\n  aggregate: AggregateGraph!\n}\n\ninput GraphCreateInput {\n  name: String\n  vertices: VertexCreateManyWithoutGraphInput\n  edges: EdgeCreateManyWithoutGraphInput\n}\n\ninput GraphCreateOneWithoutEdgesInput {\n  create: GraphCreateWithoutEdgesInput\n  connect: GraphWhereUniqueInput\n}\n\ninput GraphCreateOneWithoutVerticesInput {\n  create: GraphCreateWithoutVerticesInput\n  connect: GraphWhereUniqueInput\n}\n\ninput GraphCreateWithoutEdgesInput {\n  name: String\n  vertices: VertexCreateManyWithoutGraphInput\n}\n\ninput GraphCreateWithoutVerticesInput {\n  name: String\n  edges: EdgeCreateManyWithoutGraphInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype GraphEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Graph!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum GraphOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype GraphPreviousValues {\n  id: ID!\n  name: String\n}\n\ntype GraphSubscriptionPayload {\n  mutation: MutationType!\n  node: Graph\n  updatedFields: [String!]\n  previousValues: GraphPreviousValues\n}\n\ninput GraphSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [GraphSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [GraphSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [GraphSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: GraphWhereInput\n}\n\ninput GraphUpdateInput {\n  name: String\n  vertices: VertexUpdateManyWithoutGraphInput\n  edges: EdgeUpdateManyWithoutGraphInput\n}\n\ninput GraphUpdateOneWithoutEdgesInput {\n  create: GraphCreateWithoutEdgesInput\n  connect: GraphWhereUniqueInput\n  delete: Boolean\n  update: GraphUpdateWithoutEdgesDataInput\n  upsert: GraphUpsertWithoutEdgesInput\n}\n\ninput GraphUpdateOneWithoutVerticesInput {\n  create: GraphCreateWithoutVerticesInput\n  connect: GraphWhereUniqueInput\n  delete: Boolean\n  update: GraphUpdateWithoutVerticesDataInput\n  upsert: GraphUpsertWithoutVerticesInput\n}\n\ninput GraphUpdateWithoutEdgesDataInput {\n  name: String\n  vertices: VertexUpdateManyWithoutGraphInput\n}\n\ninput GraphUpdateWithoutVerticesDataInput {\n  name: String\n  edges: EdgeUpdateManyWithoutGraphInput\n}\n\ninput GraphUpsertWithoutEdgesInput {\n  update: GraphUpdateWithoutEdgesDataInput!\n  create: GraphCreateWithoutEdgesInput!\n}\n\ninput GraphUpsertWithoutVerticesInput {\n  update: GraphUpdateWithoutVerticesDataInput!\n  create: GraphCreateWithoutVerticesInput!\n}\n\ninput GraphWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [GraphWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [GraphWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [GraphWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  vertices_every: VertexWhereInput\n  vertices_some: VertexWhereInput\n  vertices_none: VertexWhereInput\n  edges_every: EdgeWhereInput\n  edges_some: EdgeWhereInput\n  edges_none: EdgeWhereInput\n}\n\ninput GraphWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createGraph(data: GraphCreateInput!): Graph!\n  createVertex(data: VertexCreateInput!): Vertex!\n  createEdge(data: EdgeCreateInput!): Edge!\n  updateGraph(data: GraphUpdateInput!, where: GraphWhereUniqueInput!): Graph\n  updateVertex(data: VertexUpdateInput!, where: VertexWhereUniqueInput!): Vertex\n  updateEdge(data: EdgeUpdateInput!, where: EdgeWhereUniqueInput!): Edge\n  deleteGraph(where: GraphWhereUniqueInput!): Graph\n  deleteVertex(where: VertexWhereUniqueInput!): Vertex\n  deleteEdge(where: EdgeWhereUniqueInput!): Edge\n  upsertGraph(where: GraphWhereUniqueInput!, create: GraphCreateInput!, update: GraphUpdateInput!): Graph!\n  upsertVertex(where: VertexWhereUniqueInput!, create: VertexCreateInput!, update: VertexUpdateInput!): Vertex!\n  upsertEdge(where: EdgeWhereUniqueInput!, create: EdgeCreateInput!, update: EdgeUpdateInput!): Edge!\n  updateManyGraphs(data: GraphUpdateInput!, where: GraphWhereInput): BatchPayload!\n  updateManyVertexes(data: VertexUpdateInput!, where: VertexWhereInput): BatchPayload!\n  updateManyEdges(data: EdgeUpdateInput!, where: EdgeWhereInput): BatchPayload!\n  deleteManyGraphs(where: GraphWhereInput): BatchPayload!\n  deleteManyVertexes(where: VertexWhereInput): BatchPayload!\n  deleteManyEdges(where: EdgeWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  graphs(where: GraphWhereInput, orderBy: GraphOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Graph]!\n  vertexes(where: VertexWhereInput, orderBy: VertexOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vertex]!\n  edges(where: EdgeWhereInput, orderBy: EdgeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Edge]!\n  graph(where: GraphWhereUniqueInput!): Graph\n  vertex(where: VertexWhereUniqueInput!): Vertex\n  edge(where: EdgeWhereUniqueInput!): Edge\n  graphsConnection(where: GraphWhereInput, orderBy: GraphOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GraphConnection!\n  vertexesConnection(where: VertexWhereInput, orderBy: VertexOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VertexConnection!\n  edgesConnection(where: EdgeWhereInput, orderBy: EdgeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EdgeConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  graph(where: GraphSubscriptionWhereInput): GraphSubscriptionPayload\n  vertex(where: VertexSubscriptionWhereInput): VertexSubscriptionPayload\n  edge(where: EdgeSubscriptionWhereInput): EdgeSubscriptionPayload\n}\n\ntype Vertex implements Node {\n  id: ID!\n  graph(where: GraphWhereInput): Graph!\n  x: Float!\n  y: Float!\n  edgesTarget(where: EdgeWhereInput, orderBy: EdgeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Edge!]\n  edgesSource(where: EdgeWhereInput, orderBy: EdgeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Edge!]\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype VertexConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [VertexEdge]!\n  aggregate: AggregateVertex!\n}\n\ninput VertexCreateInput {\n  x: Float!\n  y: Float!\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n  graph: GraphCreateOneWithoutVerticesInput!\n  edgesTarget: EdgeCreateManyWithoutTargetInput\n  edgesSource: EdgeCreateManyWithoutSourceInput\n}\n\ninput VertexCreateManyWithoutGraphInput {\n  create: [VertexCreateWithoutGraphInput!]\n  connect: [VertexWhereUniqueInput!]\n}\n\ninput VertexCreateOneWithoutEdgesSourceInput {\n  create: VertexCreateWithoutEdgesSourceInput\n  connect: VertexWhereUniqueInput\n}\n\ninput VertexCreateOneWithoutEdgesTargetInput {\n  create: VertexCreateWithoutEdgesTargetInput\n  connect: VertexWhereUniqueInput\n}\n\ninput VertexCreateWithoutEdgesSourceInput {\n  x: Float!\n  y: Float!\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n  graph: GraphCreateOneWithoutVerticesInput!\n  edgesTarget: EdgeCreateManyWithoutTargetInput\n}\n\ninput VertexCreateWithoutEdgesTargetInput {\n  x: Float!\n  y: Float!\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n  graph: GraphCreateOneWithoutVerticesInput!\n  edgesSource: EdgeCreateManyWithoutSourceInput\n}\n\ninput VertexCreateWithoutGraphInput {\n  x: Float!\n  y: Float!\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n  edgesTarget: EdgeCreateManyWithoutTargetInput\n  edgesSource: EdgeCreateManyWithoutSourceInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype VertexEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Vertex!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum VertexOrderByInput {\n  id_ASC\n  id_DESC\n  x_ASC\n  x_DESC\n  y_ASC\n  y_DESC\n  title_ASC\n  title_DESC\n  type_ASC\n  type_DESC\n  subtype_ASC\n  subtype_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype VertexPreviousValues {\n  id: ID!\n  x: Float!\n  y: Float!\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n}\n\ntype VertexSubscriptionPayload {\n  mutation: MutationType!\n  node: Vertex\n  updatedFields: [String!]\n  previousValues: VertexPreviousValues\n}\n\ninput VertexSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [VertexSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [VertexSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [VertexSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: VertexWhereInput\n}\n\nenum VertexSubtype {\n  SpecialChild\n}\n\nenum VertexType {\n  Empty\n  Special\n}\n\ninput VertexUpdateInput {\n  x: Float\n  y: Float\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n  graph: GraphUpdateOneWithoutVerticesInput\n  edgesTarget: EdgeUpdateManyWithoutTargetInput\n  edgesSource: EdgeUpdateManyWithoutSourceInput\n}\n\ninput VertexUpdateManyWithoutGraphInput {\n  create: [VertexCreateWithoutGraphInput!]\n  connect: [VertexWhereUniqueInput!]\n  disconnect: [VertexWhereUniqueInput!]\n  delete: [VertexWhereUniqueInput!]\n  update: [VertexUpdateWithWhereUniqueWithoutGraphInput!]\n  upsert: [VertexUpsertWithWhereUniqueWithoutGraphInput!]\n}\n\ninput VertexUpdateOneWithoutEdgesSourceInput {\n  create: VertexCreateWithoutEdgesSourceInput\n  connect: VertexWhereUniqueInput\n  delete: Boolean\n  update: VertexUpdateWithoutEdgesSourceDataInput\n  upsert: VertexUpsertWithoutEdgesSourceInput\n}\n\ninput VertexUpdateOneWithoutEdgesTargetInput {\n  create: VertexCreateWithoutEdgesTargetInput\n  connect: VertexWhereUniqueInput\n  delete: Boolean\n  update: VertexUpdateWithoutEdgesTargetDataInput\n  upsert: VertexUpsertWithoutEdgesTargetInput\n}\n\ninput VertexUpdateWithoutEdgesSourceDataInput {\n  x: Float\n  y: Float\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n  graph: GraphUpdateOneWithoutVerticesInput\n  edgesTarget: EdgeUpdateManyWithoutTargetInput\n}\n\ninput VertexUpdateWithoutEdgesTargetDataInput {\n  x: Float\n  y: Float\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n  graph: GraphUpdateOneWithoutVerticesInput\n  edgesSource: EdgeUpdateManyWithoutSourceInput\n}\n\ninput VertexUpdateWithoutGraphDataInput {\n  x: Float\n  y: Float\n  title: String\n  type: VertexType\n  subtype: VertexSubtype\n  edgesTarget: EdgeUpdateManyWithoutTargetInput\n  edgesSource: EdgeUpdateManyWithoutSourceInput\n}\n\ninput VertexUpdateWithWhereUniqueWithoutGraphInput {\n  where: VertexWhereUniqueInput!\n  data: VertexUpdateWithoutGraphDataInput!\n}\n\ninput VertexUpsertWithoutEdgesSourceInput {\n  update: VertexUpdateWithoutEdgesSourceDataInput!\n  create: VertexCreateWithoutEdgesSourceInput!\n}\n\ninput VertexUpsertWithoutEdgesTargetInput {\n  update: VertexUpdateWithoutEdgesTargetDataInput!\n  create: VertexCreateWithoutEdgesTargetInput!\n}\n\ninput VertexUpsertWithWhereUniqueWithoutGraphInput {\n  where: VertexWhereUniqueInput!\n  update: VertexUpdateWithoutGraphDataInput!\n  create: VertexCreateWithoutGraphInput!\n}\n\ninput VertexWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [VertexWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [VertexWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [VertexWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  x: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  x_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  x_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  x_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  x_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  x_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  x_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  x_gte: Float\n  y: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  y_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  y_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  y_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  y_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  y_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  y_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  y_gte: Float\n  title: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  title_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  title_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  title_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  title_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  title_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  title_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  title_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  title_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  title_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  title_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  title_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  title_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  title_not_ends_with: String\n  type: VertexType\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  type_not: VertexType\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  type_in: [VertexType!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  type_not_in: [VertexType!]\n  subtype: VertexSubtype\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  subtype_not: VertexSubtype\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  subtype_in: [VertexSubtype!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  subtype_not_in: [VertexSubtype!]\n  graph: GraphWhereInput\n  edgesTarget_every: EdgeWhereInput\n  edgesTarget_some: EdgeWhereInput\n  edgesTarget_none: EdgeWhereInput\n  edgesSource_every: EdgeWhereInput\n  edgesSource_some: EdgeWhereInput\n  edgesSource_none: EdgeWhereInput\n}\n\ninput VertexWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 91
    },
    {
      "name": "schema.graphql",
      "path": "claroil/well-opportunity/js/packages/logic/src/schema.graphql",
      "sha": "ba794026e462afb21649490089c8938bcad96432",
      "url": "https://api.github.com/repositories/120362480/contents/claroil/well-opportunity/js/packages/logic/src/schema.graphql?ref=85da8d2f94d91bc71388eeec00276a45a9e29070",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/ba794026e462afb21649490089c8938bcad96432",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/85da8d2f94d91bc71388eeec00276a45a9e29070/claroil/well-opportunity/js/packages/logic/src/schema.graphql",
      "content": "scalar DateTime\nscalar Date\n\ntype Info {\n  name: String\n  version: String\n  dm_url: String\n}\n\ntype Action {\n  id: ID!\n  name: String!\n  type: String!\n}\n\ninput ActionInput {\n  id: ID!\n  name: String!\n  type: String!\n}\n\ntype ActionOutcome {\n  id: ID!\n  action: Action!\n  well: Well!\n  probabilityOfAnomaly: Float!\n  cost: Float!\n  manHours: Float!\n  increaseInOilRate: Float!\n}\n\ninput ActionOutcomeInput {\n  id: ID!\n  action: ActionInput!\n  well: WellInput!\n  probabilityOfAnomaly: Float!\n  cost: Float!\n  manHours: Float!\n  increaseInOilRate: Float!\n}\n\ntype ActionFinancialEstimate {\n  id: ID!\n  action: Action!\n  well: Well!\n  impact: Float!\n  cost: Float!\n  manHours: Float!\n}\n\ninput ActionFinancialEstimateInput {\n  id: ID!\n  action: ActionInput!\n  well: WellInput!\n  impact: Float!\n  cost: Float!\n  manHours: Float!\n}\n\ntype Well {\n  id: ID!\n  name: String!\n}\n\ninput WellInput {\n  id: ID!\n  name: String!\n}\n\ntype Opportunity {\n  id: ID!\n  name: String!\n  createdAt: DateTime!\n  actions: [Action!]!\n  incrementalRevenue: Float!\n  costReduction: Float!\n  cost: Float!\n  well: Well!\n  manHours: Float!\n}\n\ninput OpportunityInput {\n  id: ID!\n  name: String!\n  createdAt: DateTime!\n  actions: [ActionInput!]!\n  incrementalRevenue: Float!\n  costReduction: Float!\n  cost: Float!\n  well: WellInput!\n  manHours: Float!\n}\n\n\ntype Constraint {\n  id: ID!\n  budget: Float!\n  manHours: Float!\n}\n\ninput ConstraintInput {\n  id: ID!\n  budget: Float!\n  manHours: Float!\n}\n\ntype Metrics {\n  id: ID!\n  well: Well!\n  date: Int!\n  type: String!\n  waterCut: Float!\n  GOR: Float!\n  oilRate: Float!\n}\n\ninput MetricsInput {\n  id: ID!\n  well: WellInput!\n  date: Int!\n  type: String!\n  waterCut: Float!\n  GOR: Float!\n  oilRate: Float!\n}\n\ntype Query {\n  info: Info\n\n  allActiveWells: [Well!]!\n\n  wellPredictedMetrics(well: WellInput!, date: Int!): Metrics!\n  wellMeasuredMetrics(well: WellInput!, date: Int!): Metrics!\n  wellActionOutcome(well: WellInput!, action: ActionInput!): ActionOutcome!\n\n  discoverIntervention(\n    predictedMetrics: MetricsInput!\n    measuredMetrics: MetricsInput!\n  ): Action!\n\n  shouldTestWell(\n    healthIndex: Float!\n    lastTestDay: Int!\n    today: Int!\n  ): Action!\n\n  healthIndex(\n    predictedMetrics: MetricsInput!\n    measuredMetrics: MetricsInput!\n  ): Float!\n\n  wellLastTestDate(well: WellInput!, today: Int!): Int!\n  todayDate: Int!\n\n  applyConstraints(\n    opportunities: [OpportunityInput!]!\n    constraints: ConstraintInput!\n  ): [Opportunity!]!\n\n  combineActionImpacts(\n    well: WellInput!\n    costReduction: [ActionFinancialEstimateInput!]!\n    revenueGains: [ActionFinancialEstimateInput!]!\n  ): Opportunity!\n\n  interventionRevenueGain(\n    oilPrice: Float!\n    measuredMetrics: MetricsInput!\n    actionOutcome: ActionOutcomeInput!\n  ): [ActionFinancialEstimate!]!\n\n\n  skippingTestCostReduction(\n    oilPrice: Float!\n    measuredMetrics: MetricsInput!\n    actionOutcome: ActionOutcomeInput!\n  ): [ActionFinancialEstimate!]!\n\n  currentOilPrice: Float!\n\n\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 9,
      "containsCycle": false,
      "polynomialLevel": 2,
      "numDefinitions": 18
    },
    {
      "name": "ckg.graphql",
      "path": "cli/ckg.graphql",
      "sha": "9f72c210c9bbbaefe0ae17f61efa926695765f48",
      "url": "https://api.github.com/repositories/120362480/contents/cli/ckg.graphql?ref=2add18037400db9a33e498da84a73effd246eff5",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/9f72c210c9bbbaefe0ae17f61efa926695765f48",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/2add18037400db9a33e498da84a73effd246eff5/cli/ckg.graphql",
      "content": "# source: https://latest.knowledge.maana.io:8443/graphql\n# timestamp: Thu May 24 2018 15:49:10 GMT-0700 (PDT)\n\ninput AddApplicationInput {\n  id: ID!\n  name: String!\n  thumbnailUrl: String\n}\n\ninput AddBotActionInput {\n  name: String\n  serviceName: String!\n  serviceId: ID\n  eventName: String\n  mutationName: String\n  queryName: String\n  inputInstanceRef: InstanceRefInput\n  outputInstanceRef: InstanceRefInput\n}\n\n\"\"\"Create a Document instance\"\"\"\ninput AddDocumentInput {\n  id: ID\n\n  \"\"\"\n  these are all optional, but the resolver(s) must produce a 'name' value, since it is required\n  \"\"\"\n  name: String\n  text: String\n}\n\ninput AddEntitiesInput {\n  docId: ID!\n  entities: [EntityInput!]!\n}\n\ninput AddFieldMappingInput {\n  \"\"\"You need to give query binding Id or fromKind and toKind\"\"\"\n  queryBinding: ID\n  fromKind: ID\n  toKind: ID\n  serviceQuery: ID\n  serviceId: ID!\n  fieldMappings: [FieldMappingInput!]!\n}\n\ninput AddFieldsInput {\n  kindId: ID!\n  fields: [FieldInput!]!\n}\n\n\"\"\"Create a File instance\"\"\"\ninput AddFileFromUrlInput {\n  id: ID\n\n  \"\"\"\n  these are all optional, but the resolver(s) must produce a 'name' value, since it is required\n  \"\"\"\n  name: String\n  url: String!\n  thumbnailUrl: String\n  mimeType: String\n}\n\n\"\"\"Create a File instance\"\"\"\ninput AddFileInput {\n  id: ID\n\n  \"\"\"\n  these are all optional, but the resolver(s) must produce a 'name' value, since it is required\n  \"\"\"\n  name: String\n  url: String\n  thumbnailUrl: String\n  mimeType: String\n  size: String\n  progress: String\n  status: Int!\n}\n\n\"\"\"Create a Image instance\"\"\"\ninput AddImageInput {\n  id: ID\n\n  \"\"\"\n  these are all optional, but the resolver(s) must produce a 'name' value, since it is required\n  \"\"\"\n  name: String\n  url: String\n}\n\ninput AddInstanceInput {\n  kindId: ID!\n  id: ID\n  fieldIds: [ID]!\n  fieldValues: [FieldValueInput]!\n}\n\ninput AddInstanceSetInput {\n  kindId: ID!\n  ids: [ID]\n  fieldIds: [ID]!\n  records: [[FieldValueInput]]!\n}\n\ninput AddKindInput {\n  id: ID\n  name: String!\n  description: String\n  serviceId: ID\n  thumbnailUrl: String\n  isPublic: Boolean\n  nameField: String\n  isManaged: Boolean\n  schema: [FieldInput]\n}\n\ninput AddKnowledgeGraphInput {\n  workspaceId: ID!\n  name: String!\n  id: ID\n  index: Int\n}\n\ninput AddLinkInput {\n  \"\"\"one of the following is required\"\"\"\n  fromKindId: ID\n  fromKindName: String\n\n  \"\"\"one of the following is required\"\"\"\n  toKindId: ID\n  toKindName: String\n\n  \"\"\"one of the following is required\"\"\"\n  relationId: ID\n  relationName: String\n\n  \"\"\"optional\"\"\"\n  id: ID\n  name: String\n  weight: Float\n  fromFieldId: ID\n  fromFieldName: String\n  fromInstanceId: ID\n  fromOffset: String\n  fromSpan: String\n  toFieldId: ID\n  toFieldName: String\n  toInstanceId: ID\n  toOffset: String\n  toSpan: String\n}\n\n\"\"\"Create a Person instance\"\"\"\ninput AddPersonInput {\n  id: ID\n\n  \"\"\"\n  these are all optional, but the resolver(s) must produce a 'name' value, since it is required\n  \"\"\"\n  name: String\n  givenName: String\n  familyName: String\n  dateOfBirth: DateTime\n}\n\ninput AddQueryGraphInput {\n  workspaceId: ID!\n  name: String!\n  id: ID\n  nodes: [AddQueryGraphNodeInput!]\n  index: Int\n}\n\ninput AddQueryGraphNodeInput {\n  id: ID\n\n  \"\"\"projected kind\"\"\"\n  kindId: ID!\n\n  \"\"\"filters (where)\"\"\"\n  fieldFilters: [QueryGraphFieldFilterInput!]\n\n  \"\"\"child kind queries\"\"\"\n  children: [QueryGraphNodeConnectionInput!]\n}\n\ninput AddRelationInput {\n  \"\"\"required\"\"\"\n  name: String!\n\n  \"\"\"optional\"\"\"\n  id: ID\n  inverseName: String\n  description: String\n  undirected: Boolean\n  weight: Float\n}\n\ninput AddRoleInput {\n  id: ID\n  name: String!\n}\n\ninput AddServiceInput {\n  id: ID\n  name: String!\n  isSystem: Boolean!\n  thumbnailUrl: String!\n  endpointUrl: String!\n  subscriptionEndpointUrl: String!\n  tags: [String]\n  kinds: [KindInput]\n  queries: [ServiceQueryInput]\n  mutations: [ServiceMutationInput]\n  subscriptions: [ServiceSubscriptionInput]\n}\n\ninput AddServiceSourceInput {\n  \"\"\"\n  If id is not provided, it will be generated automatically. Must be unique if provided.\n  \"\"\"\n  id: ID\n  name: String\n  description: String\n\n  \"\"\"GraphQL Schema\"\"\"\n  schema: String!\n}\n\ninput AddTenantInput {\n  id: ID\n  name: String!\n}\n\ninput AddTenantUserRoleInput {\n  userId: ID!\n  tenantId: ID!\n  roleIds: [ID!]\n}\n\ninput AddTextElementInput {\n  id: ID\n  name: String!\n  docId: ID!\n  pageNum: Int\n  dir: String\n  width: Float\n  height: Float\n  transform: [Float]\n  fontName: String\n}\n\ninput AddUserInput {\n  id: ID\n  name: String!\n  givenName: String\n  familyName: String\n  email: String\n  picture: String\n  theme: Theme!\n  createdOn: DateTime\n}\n\ninput AddWorkspaceInput {\n  userId: ID!\n  name: String!\n  thumbnailUrl: String!\n}\n\ntype Application {\n  id: ID!\n  name: String!\n  thumbnailUrl: String\n}\n\ntype BooleanKind {\n  id: ID!\n  value: Boolean!\n}\n\ntype BotAction {\n  \"\"\"io.maana.kind\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"bookkeeping\"\"\"\n  created: DateTime!\n  lastUpdated: DateTime!\n  status: BotActionStatus!\n  progress: Float\n  errors: [JSON!]\n\n  \"\"\"operation\"\"\"\n  service: Service!\n  eventName: String\n  mutation: ServiceMutation\n  query: ServiceQuery\n  input: InstanceRef\n  output: InstanceRef\n}\n\ntype BotActionAddedEvent {\n  id: ID!\n  name: String!\n  serviceName: String!\n  serviceId: ID\n  eventName: String\n  mutationName: String\n  queryName: String\n  inputInstanceRef: InstanceRef\n  outputInstanceRef: InstanceRef\n}\n\n\"\"\"io.maana.ckg\"\"\"\nenum BotActionStatus {\n  PENDING\n  IN_PROGRESS\n  STOPPING\n  STOPPED\n  ERROR\n  COMPLETE\n}\n\ntype BotActionUpdatedEvent {\n  id: ID!\n  oldStatus: BotActionStatus!\n  newStatus: BotActionStatus!\n  progress: Float\n  errors: [JSON!]\n}\n\nenum CandidateFeaturizer {\n  SBOW\n  TFIDF\n}\n\nenum CandidateModel {\n  GAUSSIANNB\n  MULTINOMIALNB\n  RANDOMFOREST\n  SGD\n  LINEARSVC\n  LOGISTIC\n}\n\ntype Categorical {\n  id: ID!\n  name: String!\n}\n\ntype Class {\n  id: ID!\n  name: String!\n  kind: Kind\n  domains: [Domain]\n}\n\ntype Classification {\n  id: ID!\n  classifier: Classifier\n  instanceId: ID\n  classKind: Kind\n}\n\ninput ClassificationInput {\n  targetAccuracy: Float!\n\n  \"\"\"one of the following\"\"\"\n  kindName: String\n  kindId: ID\n\n  \"\"\"one of the following\"\"\"\n  textFieldName: String\n  textFieldId: ID\n\n  \"\"\"one of the following\"\"\"\n  classFieldName: String\n  classFieldId: ID\n\n  \"\"\"one of the following\"\"\"\n  domainInstanceName: String\n  domainInstanceId: ID\n  classifierName: String\n\n  \"\"\"cross validation folds\"\"\"\n  crossValidationFold: Int!\n\n  \"\"\"choosen candidate classification models:\"\"\"\n  candidateModels: [CandidateModel!]!\n\n  \"\"\"choosen candidate featurizer:\"\"\"\n  candidateFeaturizers: [CandidateFeaturizer!]!\n\n  \"\"\"\n  classifier profiling episodes. Reinforcement learning training episodes (>=1)\n  \"\"\"\n  modelProfilingEpisode: Int!\n\n  \"\"\"\n  parameter search episodes. After model profiling is done and best classifier is chosen, perform paramter search (>=1)\n  \"\"\"\n  modelSearchEpisode: Int!\n}\n\ntype Classifier {\n  id: ID!\n  name: String!\n  model: Model\n  featurizer: Featurizer\n  domain: Domain\n  accuracy: Float\n}\n\ntype Comment {\n  id: ID!\n  name: String!\n  detail: String\n  author: User!\n  timestamp: DateTime!\n}\n\ntype CountryCode {\n  id: ID!\n  name: String!\n}\n\ntype Currency {\n  id: ID!\n  name: String!\n}\n\ntype DateKind {\n  id: ID!\n  name: String!\n}\n\nscalar DateTime\n\ninput DeleteInstanceInput {\n  kindId: ID!\n  id: ID!\n}\n\ninput DeleteInstanceSetInput {\n  kindId: ID!\n  ids: [ID!]!\n}\n\ntype DetectedFace {\n  \"\"\"Required Kind\"\"\"\n  id: ID!\n  name: String\n\n  \"\"\"Source image\"\"\"\n  image: Image!\n\n  \"\"\"Image region with face\"\"\"\n  area: Int!\n  bottom: Int!\n  top: Int!\n  right: Int!\n  left: Int!\n\n  \"\"\"Normalized confidence score\"\"\"\n  detectionConfidence: Float!\n}\n\ninput DetectedFaceInput {\n  id: ID\n  name: String\n  imageId: ID!\n  area: Int!\n  bottom: Int!\n  top: Int!\n  right: Int!\n  left: Int!\n  detectionConfidence: Float!\n}\n\ntype DocFile {\n  id: ID!\n  name: String!\n}\n\n\"\"\"Documents\"\"\"\ntype Document {\n  \"\"\"Kind fields\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"Domain-specific fields\"\"\"\n  text: String\n  textElements: [TextElement]\n  entities: [Entity]\n}\n\n\"\"\"Standard event\"\"\"\ntype DocumentAddedEvent {\n  id: ID!\n  name: String!\n}\n\n\"\"\"Standard event\"\"\"\ntype DocumentDeletedEvent {\n  id: ID!\n  name: String!\n\n  \"\"\"only what was known\"\"\"\n  text: String\n}\n\n\"\"\"Standard event\"\"\"\ntype DocumentUpdatedEvent {\n  id: ID!\n  name: String!\n}\n\ntype Domain {\n  id: ID!\n  name: String!\n  classes: [Class]\n}\n\ntype Email {\n  id: ID!\n  name: String!\n}\n\n\"\"\"Entities\"\"\"\ntype Entity {\n  id: ID!\n  name: String!\n  class: String!\n  count: Int\n  percent: Float\n}\n\ninput EntityInput {\n  id: ID\n  name: String\n  class: String\n  count: Int\n  percent: Float\n}\n\ntype ExtractText {\n  offset: Int\n  span: Int\n  value: String!\n  name: String!\n}\n\ntype FaceDetectedEvent {\n  id: ID!\n  name: String!\n  area: Int!\n  bottom: Int!\n  top: Int!\n  right: Int!\n  left: Int!\n  detectionConfidence: Float!\n}\n\ntype FaceRecognizedEvent {\n  id: ID\n  name: String!\n  personId: ID!\n  detectedFaceId: ID!\n  recognitionConfidence: Float!\n}\n\ntype Featurizer {\n  id: ID!\n  name: String!\n  parameter: JSON\n}\n\n\"\"\"extend io.maana.kinddb's Field type\"\"\"\ntype Field {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n  type: FieldType!\n\n  \"\"\"optional\"\"\"\n  description: String\n  modifiers: [FieldModifiers]\n  typeKindId: ID\n\n  \"\"\"UI hints\"\"\"\n  displayAs: [String]\n  hide: Boolean\n  autoFocus: Boolean\n  readonly: Boolean\n\n  \"\"\"inferred\"\"\"\n  kind: Kind\n  acceptedFieldClassification: FieldClassification\n  fieldClassifications: [FieldClassification]\n}\n\ntype FieldClassification {\n  id: ID!\n  fieldId: ID!\n  name: String!\n  score: Float!\n}\n\ninput FieldClassificationInput {\n  id: ID\n  fieldId: ID!\n  name: String!\n  score: Float!\n}\n\n\"\"\"Arbitrary filters applied to field values\"\"\"\ntype FieldFilter {\n  id: ID!\n  fieldId: ID!\n  op: String!\n  value: FieldValue\n}\n\ninput FieldFilterInput {\n  \"\"\"one of the following is required\"\"\"\n  fieldId: ID\n  fieldName: String\n  op: String!\n  value: FieldValueInput!\n}\n\ninput FieldInput {\n  id: ID\n  name: String\n  description: String\n  type: FieldType\n  typeKindId: ID\n  modifiers: [FieldModifiers!]\n  displayAs: [String!]\n  hide: Boolean\n  autoFocus: Boolean\n  readonly: Boolean\n  fieldClassifications: [FieldClassificationInput]\n  acceptedFieldClassification: FieldClassificationInput\n}\n\ntype FieldMapping {\n  id: ID!\n  fromField: Field!\n  toField: Field!\n  onTypeErrorBehavior: OnTypeErrorBehavior\n\n  \"\"\"Executed sequentially\"\"\"\n  transformations: [Transformation]\n  defaultValue: FieldValue\n}\n\ninput FieldMappingInput {\n  id: ID\n  fromField: ID!\n  toField: ID!\n  onTypeErrorBehavior: OnTypeErrorBehavior\n  transformations: [Transformation]\n  defaultValue: FieldValueInput\n}\n\nenum FieldModifiers {\n  NONULL\n  LIST\n  NOIDX\n}\n\nenum FieldType {\n  ID\n  STRING\n  INT\n  FLOAT\n  BOOLEAN\n  DATE\n  TIME\n  DATETIME\n  JSON\n  KIND\n}\n\ntype FieldValue {\n  \"\"\"Types\"\"\"\n  ID: ID\n  STRING: String\n  INT: Int\n  FLOAT: Float\n  BOOLEAN: Boolean\n  DATE: DateTime\n  TIME: Time\n  DATETIME: DateTime\n  JSON: JSON\n  KIND: ID\n\n  \"\"\"List forms\"\"\"\n  l_IDENTITY: [ID]\n  l_STRING: [String]\n  l_INT: [Int]\n  l_FLOAT: [Float]\n  l_BOOLEAN: [Boolean]\n  l_DATE: [DateTime]\n  l_TIME: [Time]\n  l_DATETIME: [DateTime]\n  l_JSON: [JSON]\n  l_KIND: [ID]\n}\n\ninput FieldValueInput {\n  \"\"\"Types\"\"\"\n  ID: ID\n  STRING: String\n  INT: Int\n  FLOAT: Float\n  BOOLEAN: Boolean\n  DATE: DateTime\n  TIME: Time\n  DATETIME: DateTime\n  JSON: JSON\n  KIND: ID\n\n  \"\"\"List forms\"\"\"\n  l_IDENTITY: [ID]\n  l_STRING: [String]\n  l_INT: [Int]\n  l_FLOAT: [Float]\n  l_BOOLEAN: [Boolean]\n  l_DATE: [DateTime]\n  l_TIME: [Time]\n  l_DATETIME: [DateTime]\n  l_JSON: [JSON]\n  l_KIND: [ID]\n}\n\ntype File {\n  \"\"\"Kind fields\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"Domain-specific fields\"\"\"\n  url: String\n  thumbnailUrl: String\n  mimeType: String\n  size: String!\n  progress: String\n  status: Int!\n}\n\n\"\"\"Standard event\"\"\"\ntype FileAddedEvent {\n  id: ID!\n  name: String!\n  url: String\n  thumbnailUrl: String\n  size: String\n  status: Int\n  mimeType: String\n}\n\n\"\"\"Standard event\"\"\"\ntype FileDeletedEvent {\n  id: ID!\n  name: String!\n\n  \"\"\"only what was known\"\"\"\n  text: String\n}\n\n\"\"\"Standard event\"\"\"\ntype FileUpdatedEvent {\n  id: ID!\n  name: String!\n}\n\ntype GeoCoordinate {\n  id: ID!\n  name: String!\n}\n\ntype Image {\n  detectedFaces: [DetectedFace]\n  recognizedFaces: [RecognizedFace]\n  people: [Person]\n\n  \"\"\"Kind fields\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"Domain-specific fields\"\"\"\n  url: String\n}\n\n\"\"\"Standard event\"\"\"\ntype ImageAddedEvent {\n  id: ID!\n  name: String!\n  url: String\n}\n\n\"\"\"Standard event\"\"\"\ntype ImageDeletedEvent {\n  id: ID!\n  name: String!\n\n  \"\"\"only what was known\"\"\"\n  url: String\n}\n\n\"\"\"Standard event\"\"\"\ntype ImageUpdatedEvent {\n  id: ID!\n  name: String!\n  url: String\n}\n\ntype Info {\n  id: ID!\n  name: String!\n  description: String\n}\n\ntype Instance {\n  \"\"\"required\"\"\"\n  id: ID!\n\n  \"\"\"optional\"\"\"\n  name: String\n  kindId: ID!\n  kind: Kind\n  fieldIds: [ID]\n\n  \"\"\"rowKey: Int\"\"\"\n  fieldValues: [FieldValue]\n\n  \"\"\"inferred\"\"\"\n  linksFrom: [Link]\n  linksTo: [Link]\n}\n\ntype InstanceAddedEvent {\n  id: ID!\n  kindId: ID!\n}\n\ntype InstanceRef {\n  \"\"\"required\"\"\"\n  id: ID!\n\n  \"\"\"- one of:\"\"\"\n  kindId: ID\n  kindName: String\n\n  \"\"\"optional\"\"\"\n  name: String\n  url: String\n\n  \"\"\"inferred\"\"\"\n  kind: Kind\n  instance: Instance\n  innerKind: Kind\n  innerServiceQuery: ServiceQuery\n}\n\ninput InstanceRefInput {\n  id: ID\n  name: String\n  kindId: ID\n  kindName: String\n  url: String\n}\n\ntype InstanceSet {\n  kindId: ID!\n  kind: Kind!\n  fieldIds: [ID]\n\n  \"\"\"rowKeys: [Int]\"\"\"\n  records: [[FieldValue]]\n}\n\ntype Inventory {\n  serviceKinds: [Kind!]!\n  workspaceKinds: [Kind!]!\n  serviceQueries: [ServiceQuery!]!\n}\n\ntype IpAddress {\n  id: ID!\n  name: String!\n}\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\"\"\"\nscalar JSON\n\ntype Kind {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"optional\"\"\"\n  serviceId: ID\n  description: String\n  thumbnailUrl: String\n  isPublic: Boolean\n  isManaged: Boolean\n  schema(includeDeleted: Boolean = false, fieldIds: [ID!], fieldNames: [String!], fieldKinds: [ID!]): [Field]\n  nameField: ID\n\n  \"\"\"inferred\"\"\"\n  relationsFrom: [Relation]\n  relationsTo: [Relation]\n  linksFrom: [Link]\n  linksTo: [Link]\n  service: Service\n  fromQueryBindings: [QueryBinding!]\n  toQueryBindings: [QueryBinding!]\n}\n\ntype KindAddedEvent {\n  id: ID!\n}\n\ninput KindInput {\n  id: ID!\n  name: String\n  description: String\n  thumbnailUrl: String\n  isPublic: Boolean\n  isManaged: Boolean\n  schema: [FieldInput]\n}\n\n\"\"\"Query tree\"\"\"\ntype KindQuery {\n  \"\"\"id of query\"\"\"\n  id: ID!\n\n  \"\"\"projected kind\"\"\"\n  kindId: ID!\n\n  \"\"\"filters (where)\"\"\"\n  fieldFilters: [FieldFilter]\n\n  \"\"\"conjunction (where)\"\"\"\n  and: [KindQuery]\n\n  \"\"\"disjunction (where)\"\"\"\n  or: [KindQuery]\n\n  \"\"\"join (if conjunction or disjunction)\"\"\"\n  fromFieldId: ID\n  toFieldId: ID\n\n  \"\"\"inferred\"\"\"\n  kind: Kind!\n  fromField: Field\n  toField: Field\n}\n\ninput KindQueryInput {\n  \"\"\"projected kind (one of the following is required)\"\"\"\n  kindId: ID\n  kindName: String\n\n  \"\"\"filters (where)\"\"\"\n  fieldFilters: [FieldFilterInput]\n\n  \"\"\"conjunction (where)\"\"\"\n  and: [KindQueryInput]\n\n  \"\"\"disjunction (where)\"\"\"\n  or: [KindQueryInput]\n\n  \"\"\"join (if conjunction or disjunction)\"\"\"\n  fromFieldId: ID\n  fromFieldName: String\n  toFieldId: ID\n  toFieldName: String\n  take: Int\n}\n\ntype KnowledgeGraph {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"optional\"\"\"\n  service: Service\n  instanceRefs: [InstanceRef!]\n  expanded: Boolean\n  layout: KnowledgeGraphLayout!\n}\n\ntype KnowledgeGraphLayout {\n  id: ID!\n  nodes: [KnowledgeGraphLayoutNode!]\n  zoom: Float\n  offsetX: Float\n  offsetY: Float\n}\n\ntype KnowledgeGraphLayoutNode {\n  id: ID!\n  instanceRefId: ID\n  x: Float\n  y: Float\n  collapsed: Boolean\n}\n\ninput KnowledgeGraphLayoutNodeInput {\n  id: ID!\n  instanceRefId: ID!\n  x: Float\n  y: Float\n  collapsed: Boolean\n}\n\ntype KnowledgeGraphUpdate {\n  instanceRef: InstanceRef!\n  layoutNode: KnowledgeGraphLayoutNode!\n}\n\ntype Latitude {\n  id: ID!\n  name: String!\n}\n\ntype Link {\n  \"\"\"required\"\"\"\n  id: ID!\n  relation: Relation!\n  fromKind: Kind!\n  toKind: Kind!\n\n  \"\"\"optional\"\"\"\n  name: String\n  weight: Float\n  fromField: Field\n  fromInstance: Instance\n  fromOffset: String\n  fromSpan: String\n  toField: Field\n  toInstance: Instance\n  toOffset: String\n  toSpan: String\n}\n\ntype LinkAddedEvent {\n  id: ID!\n  name: String\n  relationId: ID\n  relationName: String\n  weight: Float\n  fromKindId: ID\n  fromKindName: String\n  fromFieldId: ID\n  fromFieldName: String\n  fromInstanceId: ID\n  fromOffset: String\n  fromSpan: String\n  toKindId: ID\n  toKindName: String\n  toFieldId: ID\n  toFieldName: String\n  toInstanceId: ID\n  toOffset: String\n  toSpan: String\n}\n\ntype Location {\n  id: ID!\n  name: String!\n}\n\ntype Longitude {\n  id: ID!\n  name: String!\n}\n\ntype Model {\n  id: ID!\n  name: String!\n  parameter: JSON\n}\n\ntype Mutation {\n  \"\"\"Services\"\"\"\n  addService(input: AddServiceInput!): ID!\n  updateServiceSchema(input: UpdateServiceSchemaInput): Boolean!\n  refreshServiceSchema(id: ID!): Service!\n  updateService(input: UpdateServiceInput!): Service!\n  addServiceQuery(input: ServiceQueryInput!): ID!\n  addQueryBinding(input: QueryBindingInput!): ID!\n\n  \"\"\"Applications\"\"\"\n  addApplication(input: AddApplicationInput!): ID\n  updateApplication(input: UpdateApplicationInput!): ID\n  addBotAction(input: AddBotActionInput!): ID\n  runBotAction(id: ID!): BotActionStatus\n  stopBotAction(id: ID!): BotActionStatus\n  updateBotAction(input: UpdateBotActionInput!): BotActionStatus\n  addDetectedFaces(input: [DetectedFaceInput!]!): Boolean!\n  addRecognizedFaces(input: [RecognizedFaceInput!]!): Boolean!\n\n  \"\"\"Tenants\"\"\"\n  addTenant(input: AddTenantInput!): ID\n  updateTenant(input: UpdateTenantInput!): ID\n\n  \"\"\"Users\"\"\"\n  addUser(input: AddUserInput!): ID\n  updateUser(input: UpdateUserInput!): ID\n\n  \"\"\"Roles\"\"\"\n  addRole(input: AddRoleInput!): ID\n  updateRole(input: UpdateRoleInput!): ID\n\n  \"\"\"User Tenant Role\"\"\"\n  addUserTenantRole(input: AddTenantUserRoleInput!): Boolean\n  updateUserTenantRole(input: UpdateTenantUserRoleInput!): Boolean\n\n  \"\"\"Service Admin\"\"\"\n  provisionService(tenantId: ID!): ID\n  resetService(tenantId: ID!, areYouSureYouReallyReallyWantToDoThis: Boolean!): Boolean\n\n  \"\"\"Kinds and Fields\"\"\"\n  addKind(tenantId: ID!, input: AddKindInput!): ID\n  updateKind(tenantId: ID!, input: UpdateKindInput!): ID\n  deleteKind(tenantId: ID!, kindId: ID!): Boolean\n  addFields(tenantId: ID!, input: AddFieldsInput!): ID\n\n  \"\"\"Instances\"\"\"\n  addInstance(tenantId: ID!, input: AddInstanceInput!): ID\n  addInstanceSet(tenantId: ID!, input: AddInstanceSetInput!): [ID]\n  updateInstance(tenantId: ID!, input: UpdateInstanceInput!): ID\n  updateInstances(tenantId: ID!, input: UpdateInstanceSetInput!): [ID]\n  deleteInstance(tenantId: ID!, input: DeleteInstanceInput!): ID\n  deleteInstanceSet(tenantId: ID!, input: DeleteInstanceSetInput!): [ID]\n\n  \"\"\"Relations\"\"\"\n  addRelation(input: AddRelationInput!): ID\n  updateRelation(input: UpdateRelationInput!): ID\n\n  \"\"\"Links\"\"\"\n  addLink(input: AddLinkInput!): ID\n  addLinks(input: [AddLinkInput]!): [ID]\n  updateLink(input: UpdateLinkInput!): ID\n\n  \"\"\"Users\"\"\"\n  setTheme(userId: ID!, theme: Theme!): Boolean!\n\n  \"\"\"QueryBinding\"\"\"\n  addFieldMapping(input: AddFieldMappingInput!): QueryBinding!\n  updateQueryBinding(input: UpdateQueryBindingInput!): Boolean!\n  removeQueryBinding(id: ID!): Boolean!\n  removeFieldMappings(input: [RemoveFieldMappingInput!]!): Boolean!\n  updateFieldMapping(input: UpdateFieldMappingInput!): Boolean!\n\n  \"\"\"Duplicate things\"\"\"\n  duplicateKind(id: ID!, newName: String!): ID!\n  duplicateInstance(instanceId: ID!, newName: String!, kindId: ID, kindName: String): ID!\n\n  \"\"\"Workspaces\"\"\"\n  addWorkspace(input: AddWorkspaceInput!): ID\n  openWorkspace(userId: ID!, workspaceId: ID!): ID\n  closeWorkspace(userId: ID!, workspaceId: ID!): ID\n  selectKinds(workspaceId: ID!, instanceRefs: [InstanceRefInput!]!): Boolean!\n  activeGraph(workspaceId: ID!, instanceRef: InstanceRefInput!): Boolean!\n  updateWorkspaceLayout(input: UpdateWorkspaceLayoutInput!): Boolean!\n  resetWorkspaceLayout(id: ID!): Boolean!\n  addInstanceRefToWorkspace(wsId: ID!, instanceRef: InstanceRefInput!): InstanceRef!\n  addInstanceRefsToWorkspace(wsId: ID!, instanceRefs: [InstanceRefInput!]!): [InstanceRef!]!\n  addServiceToWorkspace(workspaceId: ID!, serviceId: ID!): Service\n\n  \"\"\"Knowledge Graphs\"\"\"\n  addKnowledgeGraph(input: AddKnowledgeGraphInput!): KnowledgeGraph\n  reorderKnowledgeGraphs(input: ReorderKnowledgeGraphsInput!): ID\n  addInstanceRefToKnowledgeGraph(kgId: ID!, instanceRef: InstanceRefInput!): KnowledgeGraphUpdate!\n  addInstanceRefsToKnowledgeGraph(kgId: ID!, instanceRefs: [InstanceRefInput!]!): [KnowledgeGraphUpdate!]!\n  removeInstanceRefFromKnowledgeGraph(kgId: ID!, instanceId: ID!): Boolean!\n  removeInstanceRefsFromKnowledgeGraph(kgId: ID!, instanceIds: [ID!]!): Boolean!\n\n  \"\"\"Knowledge Graph Layout\"\"\"\n  updateKnowledgeGraphLayout(input: UpdateKnowledgeGraphLayoutInput!): Boolean!\n  updateModel(kgId: ID!, model: JSON!): Boolean!\n  expand(kgId: ID!): Boolean!\n\n  \"\"\"Query Graphs\"\"\"\n  addQueryGraph(input: AddQueryGraphInput!): QueryGraph!\n  reorderQueryGraphs(input: ReorderQueryGraphsInput!): ID\n  expandQueryGraph(qgId: ID!): Boolean!\n  addNodeToQueryGraph(qgId: ID!, node: AddQueryGraphNodeInput!): QueryGraphUpdate!\n  addNodesToQueryGraph(qgId: ID!, nodes: [AddQueryGraphNodeInput!]!): [QueryGraphUpdate]!\n  removeNodeFromQueryGraph(qgId: ID!, nodeId: ID!): [QueryGraphNode!]!\n  removeNodesFromQueryGraph(qgId: ID!, nodeIds: [ID!]!): [QueryGraphNode!]!\n  addQueryGraphNodeConnection(nodeId: ID!, connection: QueryGraphNodeConnectionInput!): QueryGraphNode!\n  removeQueryGraphNodeConnection(input: RemoveQueryGraphNodeConnectionInput!): QueryGraphNode!\n  removeQueryGraphNodeConnections(input: [RemoveQueryGraphNodeConnectionInput!]!): [QueryGraphNode!]!\n  addFieldFilterToQueryGraphNode(nodeId: ID!, fieldFilter: QueryGraphFieldFilterInput!): QueryGraphNode!\n  addFieldFiltersToQueryGraphNode(nodeId: ID!, fieldFilters: [QueryGraphFieldFilterInput!]!): QueryGraphNode!\n  removeFieldFilterFromQueryGraphNode(nodeId: ID!, fieldFilterId: ID!): QueryGraphNode!\n  removeFieldFiltersFromQueryGraphNode(nodeId: ID!, fieldFilterIds: [ID!]!): QueryGraphNode!\n  addServiceSource(input: AddServiceSourceInput!): ID!\n  addDocument(input: AddDocumentInput): ID\n  addDocuments(input: [AddDocumentInput!]!): [ID]\n  updateDocument(input: UpdateDocumentInput): ID\n  updateDocuments(input: [UpdateDocumentInput!]!): [ID]\n  deleteDocument(id: ID!): Document\n  deleteDocuments(ids: [ID!]!): [Document]\n  addFile(input: AddFileInput!): ID!\n  addFiles(input: [AddFileInput!]!): Boolean!\n  addFileFromUrl(input: AddFileFromUrlInput!): ID!\n  updateFile(input: UpdateFileInput): ID\n  updateFiles(input: [UpdateFileInput!]!): [ID]\n  deleteFile(id: ID!): File\n  deleteFiles(ids: [ID!]!): [File]\n  addImage(input: AddImageInput): ID\n  addImages(input: [AddImageInput!]!): [ID]\n  updateImage(input: UpdateImageInput): ID\n  updateImages(input: [UpdateImageInput!]!): [ID]\n  deleteImage(id: ID!): Image\n  deleteImages(ids: [ID!]!): [Image]\n  addPerson(input: AddPersonInput): ID\n  addPersons(input: [AddPersonInput!]!): [ID]\n  updatePerson(input: UpdatePersonInput): ID\n  updatePersons(input: [UpdatePersonInput!]!): [ID]\n  deletePerson(id: ID!): Person\n  deletePersons(ids: [ID!]!): [Person]\n\n  \"\"\"Documents\"\"\"\n  addTextElement(input: AddTextElementInput!): ID\n  addTextElements(elements: [AddTextElementInput!]!): Boolean\n\n  \"\"\"Entities\"\"\"\n  addEntities(input: AddEntitiesInput!): Boolean\n  demobootstrap: Boolean!\n  train(input: ClassificationInput!): Classifier\n  classifyKindandLink(input: PredictionInput!): [ID]\n  classifyText(rawtext: String!, classifierId: ID, classifierName: String): Classification\n  classifyKind(input: PredictionInput!): [Classification]\n}\n\ntype Number {\n  id: ID!\n  name: String!\n  value: Float\n}\n\n\"\"\"\nBehavior if type doesn't match, for instance: - FLOAT can be converted to\nSTRING, but not all STRING can't be converted to FLOAT\n\"\"\"\nenum OnTypeErrorBehavior {\n  \"\"\"Skip instance that produced error\"\"\"\n  SKIP\n\n  \"\"\"\n  Query of this kind will produce error even if single instance has produced error\n  \"\"\"\n  STOP\n}\n\ntype Organization {\n  id: ID!\n  name: String!\n}\n\ntype PatternMatchResult {\n  subject: String\n  predicate: String\n  object: String\n  score: Float\n}\n\ntype Percentage {\n  id: ID!\n  name: String!\n  value: Float\n}\n\ntype Person {\n  images: [Image]\n\n  \"\"\"Kind fields\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"Domain-specific fields\"\"\"\n  givenName: String\n  familyName: String\n  dateOfBirth: DateTime\n}\n\n\"\"\"Standard event\"\"\"\ntype PersonAddedEvent {\n  id: ID!\n  name: String!\n}\n\n\"\"\"Standard event\"\"\"\ntype PersonDeletedEvent {\n  id: ID!\n  name: String!\n\n  \"\"\"only what was known\"\"\"\n  givenName: String\n  familyName: String\n  dateOfBirth: DateTime\n}\n\n\"\"\"Standard event\"\"\"\ntype PersonUpdatedEvent {\n  id: ID!\n  name: String!\n\n  \"\"\"only what changed\"\"\"\n  givenName: String\n  familyName: String\n  dateOfBirth: DateTime\n}\n\ntype PhoneNumber {\n  id: ID!\n  name: String!\n}\n\ntype PhysicalDimension {\n  id: ID!\n  name: String!\n  formula: String!\n}\n\ntype PhysicalQuantity {\n  id: ID!\n  name: String!\n  magnitude: String!\n  unit: String!\n  dimension: String!\n}\n\ninput PredictionInput {\n  \"\"\"one of the following\"\"\"\n  kindName: String\n  kindId: ID\n\n  \"\"\"one of the following\"\"\"\n  textFieldName: String\n  textFieldId: String\n\n  \"\"\"one of the following\"\"\"\n  classifierName: String\n  classifierId: ID\n}\n\ntype Query {\n  \"\"\"Services\"\"\"\n  service(id: ID!): Service\n  allServices: [Service]\n  allSystemServices: [Service]\n  allNonSystemServices: [Service]\n\n  \"\"\"Applications\"\"\"\n  application(id: ID!): Application\n  allApplications: [Application]\n  botAction(id: ID!): BotAction\n  botActions(ids: [ID!]!): [BotAction]\n  allBotActions: [BotAction]\n\n  \"\"\"Tenants\"\"\"\n  tenant(id: ID!): Tenant\n  tenants(ids: [ID!]!): [Tenant]\n  allTenants: [Tenant]\n\n  \"\"\"Users\"\"\"\n  user(id: ID!): User\n  users(ids: [ID!]!): [User]\n  allUsers: [User]\n\n  \"\"\"Roles\"\"\"\n  role(id: ID!): Role\n  roles(ids: [ID!]!): [Role]\n  allRoles: [Role]\n\n  \"\"\"Kinds\"\"\"\n  kind(tenantId: ID!, id: ID, name: String): Kind\n  kinds(tenantId: ID!, ids: [ID!]!): [Kind]\n  allKinds(tenantId: ID!, take: Int): [Kind]\n\n  \"\"\"Instances\"\"\"\n  instance(tenantId: ID!, instanceRef: InstanceRefInput!): Instance\n\n  \"\"\"Fill in missing pieces of an instance ref\"\"\"\n  instanceRef(tenantId: ID!, id: ID!): InstanceRef\n  populateInstanceRef(tenantId: ID!, instanceRef: InstanceRefInput!): InstanceRef\n  instances(tenantId: ID!, kindId: ID, kindName: String, ids: [ID!]!): InstanceSet\n  instancesByRef(tenantId: ID!, instanceRefs: [InstanceRefInput!]!): [Instance]\n  allInstances(tenantId: ID!, kindId: ID, kindName: String, fieldIds: [ID!], take: Int): InstanceSet\n\n  \"\"\"Kind Query\"\"\"\n  query(tenantId: ID!, input: KindQueryInput!): InstanceSet\n\n  \"\"\"Relations\"\"\"\n  relation(tenantId: ID!, id: ID!): Relation\n  relations(tenantId: ID!, ids: [ID]!): [Relation]\n  allRelations(tenantId: ID!): [Relation]\n\n  \"\"\"Links\"\"\"\n  link(tenantId: ID!, id: ID!): Link\n  links(tenantId: ID!, ids: [ID]!): [Link]\n\n  \"\"\"\n  If relationId is provided, list all links, otherwise list only links of specific relation\n  \"\"\"\n  allLinks(tenantId: ID!, relationId: ID): [Link]\n  info: Info!\n  queryBinding(id: ID!): QueryBinding!\n  queryBindings(ids: [ID!]!): [QueryBinding!]!\n  queryFields(ids: [ID]): [QueryField!]!\n\n  \"\"\"Workspaces\"\"\"\n  workspace(id: ID!): Workspace\n  allSharedWorkspaces(userId: ID!): [Workspace!]\n  allTemplateWorkspaces(userId: ID!): [Workspace!]\n  searchUserSpaces(userId: ID!, text: String!): [Workspace!]\n\n  \"\"\"List all kinds by a service\"\"\"\n  allKindsOfService(tenantId: ID!, serviceId: ID!): [Kind]\n\n  \"\"\"Knowledge Graphs\"\"\"\n  knowledgeGraph(id: ID!): KnowledgeGraph\n  knowledgeGraphLayout(id: ID!): KnowledgeGraphLayout\n\n  \"\"\"Query Graph\"\"\"\n  queryGraph(id: ID!): QueryGraph\n\n  \"\"\"Query for the instances of a kind\"\"\"\n  kindDBQuery(kindQuery: KindQueryInput!): InstanceSet\n  comment(id: ID!): Comment\n\n  \"\"\"Search!\"\"\"\n  search(text: String!): [SearchResult]\n\n  \"\"\"unique people\"\"\"\n  document(id: ID!): Document\n  documents(ids: [ID!]!): [Document]\n\n  \"\"\"unique people\"\"\"\n  file(id: ID!): File\n  files(ids: [ID!]!): [File]\n\n  \"\"\"unique people\"\"\"\n  image(id: ID!): Image\n  images(ids: [ID!]!): [Image]\n\n  \"\"\"unique people\"\"\"\n  person(id: ID!): Person\n  persons(ids: [ID!]!): [Person]\n\n  \"\"\"specialized queries\"\"\"\n  personsByName(name: String!): [Person]\n  personsByDateOfBirth(date: DateTime!): [Person]\n  classifier(id: ID!): Classifier\n  featurizer(id: ID!): Featurizer\n  model(id: ID!): Model\n  class(id: ID!): Class\n  domain(id: ID!): Domain\n  classification(id: ID!): Classification\n}\n\ntype QueryBinding {\n  id: ID!\n\n  \"\"\"\n  Name of the field that will be added to original kind to call implicit\n  conversion. If omitted, field will not be added. Field name must be unique\n  within a fromKind, and must be safe (i.e. proper graphql name). Adding a\n  binding with mapping function will add a function\n  \"\"\"\n  name: String\n\n  \"\"\"\n  Optional. If not provided, means input is not a kind of workspace (e.g. scalar)\n  \"\"\"\n  fromKind: Kind\n\n  \"\"\"\n  Optional. If not provided, means output is not a kind of workspace/service (e.g. scalar)\n  \"\"\"\n  toKind: Kind\n\n  \"\"\"\n  Even though kinds are uniquely identifying services, to avoid constant\n  roundtrips to kinddb i would prefer to have a service (or workspace) ID to filter on\n  \"\"\"\n  serviceId: ID!\n\n  \"\"\"\n  Optional. If not provided, means that there's no mappings (e.g. just importing query into workspace)\n  \"\"\"\n  fieldMappings: [FieldMapping!]\n\n  \"\"\"\n  Reference to actual 'ServiceQuery' instance (mapping function) - that contains\n  reference to name, arguments etc. If not defined, QueryBinding will be treated\n  only as Kind Mapping\n  \"\"\"\n  serviceQuery: ServiceQuery\n}\n\ninput QueryBindingInput {\n  id: ID!\n  name: String\n\n  \"\"\"\n  Optional. If not provided, means input is not a kind of workspace (e.g. scalar)\n  \"\"\"\n  fromKind: ID\n\n  \"\"\"\n  Optional. If not provided, means output is not a kind of workspace/service (e.g. scalar)\n  \"\"\"\n  toKind: ID\n  serviceId: ID!\n\n  \"\"\"\n  Optional. If not provided, means that there's no mappings (e.g. just importing query into workspace)\n  \"\"\"\n  fieldMappings: [FieldMappingInput!]\n  serviceQuery: ID\n}\n\ntype QueryField {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n  type: FieldType!\n\n  \"\"\"optional\"\"\"\n  description: String\n  modifiers: [FieldModifiers]\n  typeKindId: ID\n}\n\ninput QueryFieldInput {\n  id: ID\n  name: String\n  description: String\n  type: FieldType\n  typeKindId: ID\n  modifiers: [FieldModifiers!]\n}\n\ntype QueryGraph {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n  expanded: Boolean\n  layout: KnowledgeGraphLayout!\n  nodes: [QueryGraphNode!]\n}\n\n\"\"\"FieldFilter type\"\"\"\ntype QueryGraphFieldFilter {\n  id: ID!\n  fieldId: ID!\n  op: String!\n  value: String\n}\n\n\"\"\"QueryGraphFieldFilterInput type\"\"\"\ninput QueryGraphFieldFilterInput {\n  id: ID\n  fieldId: ID!\n  op: String!\n  value: String\n}\n\n\"\"\"QueryGraphNode type\"\"\"\ntype QueryGraphNode {\n  id: ID!\n\n  \"\"\"projected kind\"\"\"\n  kindId: ID!\n\n  \"\"\"filters (where)\"\"\"\n  fieldFilters: [QueryGraphFieldFilter!]\n  children: [QueryGraphNodeConnection!]\n\n  \"\"\"Inferred\"\"\"\n  kind: Kind\n}\n\n\"\"\"\nQueryGraphNodeConnection type used to define the connectin between two nodes\n\"\"\"\ntype QueryGraphNodeConnection {\n  \"\"\"ID used to identify the connection\"\"\"\n  id: ID!\n\n  \"\"\"Information on the child's side of the connection\"\"\"\n  childId: ID!\n  childFieldId: ID!\n\n  \"\"\"Information on the parent's side of the connection\"\"\"\n  parentId: ID!\n  parentFieldId: ID!\n  type: QueryGraphNodeJoinType!\n}\n\n\"\"\"\nSpecifies a connection between QueryGraphNode when adding a QueryGraphNode\n\"\"\"\ninput QueryGraphNodeConnectionInput {\n  \"\"\"The ID of the child QueryGraphNode\"\"\"\n  childId: ID!\n\n  \"\"\"\n  The ID of the field in the child QueryGraphNode to join to the parent kind query\n  \"\"\"\n  childFieldId: ID!\n\n  \"\"\"The ID of the field in the parent QueryGraphNode\"\"\"\n  parentFieldId: ID!\n\n  \"\"\"The type of connection this is (defaults to AND)\"\"\"\n  type: QueryGraphNodeJoinType\n}\n\nenum QueryGraphNodeJoinType {\n  AND\n  OR\n}\n\ntype QueryGraphUpdate {\n  queryNode: QueryGraphNode!\n  layoutNode: KnowledgeGraphLayoutNode!\n}\n\n\"\"\"Person recognized by face in an image\"\"\"\ntype RecognizedFace {\n  \"\"\"Required Kind\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"Recognized person\"\"\"\n  personId: ID!\n  person: Person!\n\n  \"\"\"Based on detected face\"\"\"\n  detectedFaceId: ID!\n  detectedFace: DetectedFace\n\n  \"\"\"Normalized confidence score\"\"\"\n  recognitionConfidence: Float!\n}\n\n\"\"\"Person recognized by face in an image\"\"\"\ninput RecognizedFaceInput {\n  id: ID\n  name: String!\n  personId: ID!\n  detectedFaceId: ID!\n  recognitionConfidence: Float!\n}\n\ntype Relation {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"optional\"\"\"\n  inverseName: String\n  description: String\n  undirected: Boolean\n  weight: Float\n\n  \"\"\"inferred\"\"\"\n  links: [Link]\n}\n\ntype RelationAddedEvent {\n  id: ID!\n}\n\ninput RemoveFieldMappingInput {\n  queryBindingId: ID!\n  fieldMappingId: ID!\n}\n\ninput RemoveQueryGraphNodeConnectionInput {\n  nodeId: ID!\n  connectionId: ID!\n}\n\ninput ReorderKnowledgeGraphsInput {\n  workspaceId: ID!\n  oldIndex: Int!\n  newIndex: Int!\n}\n\ninput ReorderQueryGraphsInput {\n  workspaceId: ID!\n  oldIndex: Int!\n  newIndex: Int!\n}\n\ntype Role {\n  id: ID!\n  name: String!\n}\n\ntype SearchResult {\n  kindId: ID\n  kind: Kind\n  innerKind: Kind\n  instanceId: ID\n  instance: Instance\n  fieldId: ID\n  field: Field\n  offset: String\n  span: String\n  contents: String\n  serviceSource(id: ID!): ServiceSource\n  allServiceSources: [ServiceSource]\n}\n\ntype Service {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n  isSystem: Boolean!\n  endpointUrl: String!\n\n  \"\"\"optional\"\"\"\n  description: String\n  subscriptionEndpointUrl: String\n  thumbnailUrl: String\n  tags: [String]\n  status: Int\n  lastChecked: DateTime\n  instances: [ServiceInstance]\n\n  \"\"\"inferred\"\"\"\n  kinds: [Kind]\n  queries: [ServiceQuery]\n  mutations: [ServiceMutation]\n  subscriptions: [ServiceSubscription]\n  workspace: Workspace\n  serviceSource: ServiceSource\n}\n\ntype ServiceInstance {\n  \"\"\"required\"\"\"\n  id: ID!\n  dockerServiceName: String!\n  hostName: String!\n  desiredState: String!\n  currentState: String!\n}\n\ntype ServiceMutation {\n  id: ID!\n  name: String!\n}\n\ninput ServiceMutationInput {\n  id: ID!\n  name: String!\n}\n\ntype ServiceQuery {\n  id: ID!\n  name: String!\n  description: String\n  serviceId: ID!\n\n  \"\"\"Input arguments\"\"\"\n  fields: [QueryField!]\n\n  \"\"\"Output\"\"\"\n  outputType: FieldType!\n  outputModifiers: [FieldModifiers]\n  outputKindId: ID\n\n  \"\"\"Inferred\"\"\"\n  kind: Kind\n  service: Service\n  queryBindings: [QueryBinding!]\n}\n\ninput ServiceQueryInput {\n  id: ID\n  serviceId: ID!\n  name: String!\n  description: String\n\n  \"\"\"Input arguments\"\"\"\n  fields: [QueryFieldInput!]\n\n  \"\"\"Output\"\"\"\n  outputType: FieldType!\n  outputModifiers: [FieldModifiers]\n  outputKindId: ID\n}\n\ntype ServiceSource {\n  \"\"\"ID of Service Source will be used as service id.\"\"\"\n  id: ID!\n  name: String\n  description: String\n\n  \"\"\"GraphQL Schema\"\"\"\n  schema: String!\n  kinds: [Kind]\n}\n\ntype ServiceSubscription {\n  id: ID!\n  name: String!\n}\n\ninput ServiceSubscriptionInput {\n  id: ID!\n  name: String!\n}\n\ntype SocialSecurityNumber {\n  id: ID!\n  name: String!\n}\n\n\"\"\"Available subscriptions\"\"\"\ntype Subscription {\n  serviceAdded: ID\n  botActionAdded: BotActionAddedEvent!\n  botActionUpdated: BotActionUpdatedEvent!\n  faceDetected: FaceDetectedEvent!\n  faceRecognized: FaceRecognizedEvent!\n  kindAdded: KindAddedEvent!\n  instanceAdded: InstanceAddedEvent!\n  relationAdded: RelationAddedEvent!\n  linkAdded: LinkAddedEvent!\n  documentAdded: DocumentAddedEvent!\n  documentUpdated: DocumentUpdatedEvent!\n  documentDeleted: DocumentDeletedEvent!\n  fileAdded: FileAddedEvent!\n  fileUpdated: FileUpdatedEvent!\n  fileDeleted: FileDeletedEvent!\n  imageAdded: ImageAddedEvent!\n  imageUpdated: ImageUpdatedEvent!\n  imageDeleted: ImageDeletedEvent!\n  personAdded: PersonAddedEvent!\n  personUpdated: PersonUpdatedEvent!\n  personDeleted: PersonDeletedEvent!\n}\n\ntype Tenant {\n  id: ID!\n  name: String!\n  users: [User]\n  services: [Service]\n  applications: [Application]\n}\n\ntype TenantUserRole {\n  userId: ID!\n  user: User\n  tenantId: ID!\n  tenant: Tenant\n  roles: [Role]\n}\n\ntype TextClassifiedEvent {\n  kindId: ID!\n  textClassifiedId: ID!\n  name: String!\n}\n\ntype TextElement {\n  id: ID!\n  name: String!\n  docId: ID!\n  pageNum: Int\n  dir: String\n  width: Float\n  height: Float\n  transform: [Float]\n  fontName: String\n}\n\nenum Theme {\n  DARK\n  LIGHT\n}\n\nscalar Time\n\ntype TimeKind {\n  id: ID!\n  name: String!\n}\n\n\"\"\"\nCurrently a convenience - may need to use either a string for encoding function, or interface, or strongly typed hierarchy\n\"\"\"\nenum Transformation {\n  TO_LOWER\n  TO_UPPER\n  TO_STRING\n  TO_INT\n  TO_FLOAT\n}\n\ninput UpdateApplicationInput {\n  id: ID!\n  name: String!\n  thumbnailUrl: String\n}\n\ninput UpdateBotActionInput {\n  status: BotActionStatus!\n  progress: Float\n  error: JSON\n}\n\n\"\"\"Create a Document instance\"\"\"\ninput UpdateDocumentInput {\n  id: ID!\n\n  \"\"\"only what is changing\"\"\"\n  name: String\n  text: String\n}\n\ninput UpdateFieldMappingInput {\n  id: ID!\n  fromField: ID!\n  toField: ID!\n  onTypeErrorBehavior: OnTypeErrorBehavior\n  transformations: [Transformation]\n  defaultValue: FieldValueInput\n}\n\n\"\"\"Create a File instance\"\"\"\ninput UpdateFileInput {\n  id: ID!\n\n  \"\"\"only what is changing\"\"\"\n  name: String\n  url: String\n  thumbnailUrl: String\n  progress: String\n  status: Int\n  mimeType: String\n}\n\n\"\"\"Create a Image instance\"\"\"\ninput UpdateImageInput {\n  id: ID!\n\n  \"\"\"only what is changing\"\"\"\n  name: String\n  url: String\n}\n\ninput UpdateInstanceInput {\n  id: ID!\n  kindId: ID!\n  fieldIds: [ID]!\n  fieldValues: [FieldValueInput]!\n}\n\ninput UpdateInstanceSetInput {\n  ids: [ID]\n  kindId: ID!\n  fieldIds: [ID]!\n  records: [[FieldValueInput]]!\n}\n\ninput UpdateKindInput {\n  id: ID!\n  name: String\n  description: String\n  serviceId: ID\n  thumbnailUrl: String\n  isPublic: Boolean\n  nameField: String\n  isManaged: Boolean\n  schema: [FieldInput]\n}\n\ninput UpdateKnowledgeGraphLayoutInput {\n  id: ID!\n  nodes: [KnowledgeGraphLayoutNodeInput!]\n  zoom: Float\n  offsetX: Float\n  offsetY: Float\n}\n\ninput UpdateLinkInput {\n  id: ID!\n\n  \"\"\"optional\"\"\"\n  name: String\n  relationId: ID\n  relationName: String\n  weight: Float\n  fromKindId: ID\n  fromKindName: String\n  fromFieldId: ID\n  fromFieldName: String\n  fromInstanceId: ID\n  fromOffset: String\n  fromSpan: String\n  toKindId: ID\n  toKindName: String\n  toFieldId: ID\n  toFieldName: String\n  toInstanceId: ID\n  toOffset: String\n  toSpan: String\n}\n\n\"\"\"Create a Person instance\"\"\"\ninput UpdatePersonInput {\n  id: ID!\n\n  \"\"\"only what is changing\"\"\"\n  name: String\n  givenName: String\n  familyName: String\n  dateOfBirth: DateTime\n}\n\ninput UpdateQueryBindingInput {\n  id: ID!\n  name: String\n  fromKind: ID\n  toKind: ID\n  serviceId: ID!\n  fieldMappings: [UpdateFieldMappingInput!]\n  serviceQuery: ID\n}\n\ninput UpdateRelationInput {\n  id: ID!\n  name: String\n  inverseName: String\n  description: String\n  undirected: Boolean\n  weight: Float\n}\n\ninput UpdateRoleInput {\n  id: ID!\n  name: String\n}\n\ninput UpdateServiceInput {\n  id: ID!\n  name: String!\n  endpointUrl: String!\n  subscriptionEndpointUrl: String\n  thumbnailUrl: String\n  tags: [String]\n}\n\ninput UpdateServiceSchemaInput {\n  id: ID!\n  status: Int\n  lastChecked: DateTime\n  kinds: [KindInput]\n  queries: [ServiceQueryInput]\n  mutations: [ServiceMutationInput]\n  subscriptions: [ServiceSubscriptionInput]\n}\n\ninput UpdateTenantInput {\n  id: ID!\n  name: String\n}\n\ninput UpdateTenantUserRoleInput {\n  userId: ID!\n  tenantId: ID!\n  roleIds: [ID!]\n}\n\ninput UpdateUserInput {\n  id: ID!\n\n  \"\"\"optional\"\"\"\n  name: String\n  givenName: String\n  familyName: String\n  email: String\n  picture: String\n  theme: Theme\n}\n\ninput UpdateWorkspaceLayoutInput {\n  id: ID!\n  explorerOpen: Boolean\n  explorerSize: Float\n  inventoryOpen: Boolean\n  inventorySize: Float\n  contextOpen: Boolean\n  contextMode: String\n  contextSize: Float\n  dataVizOpen: Boolean\n  dataVizSize: Float\n}\n\ntype URL {\n  id: ID!\n  name: String!\n}\n\n\"\"\"merged with io.maana.idam\"\"\"\ntype User {\n  id: ID!\n  name: String!\n  givenName: String\n  familyName: String\n  email: String\n  picture: String\n  tenants: [Tenant]\n  tenantUserRoles: [TenantUserRole]\n  createdOn: DateTime\n  activities: [InstanceRef!]\n  recentItems: [InstanceRef!]\n  favoriteItems: [InstanceRef!]\n  workspaces: [Workspace!]\n  applications: [Application!]\n  theme: String\n  showNewKnowledgeGraphDialog: Boolean\n  openWorkspaces: [Workspace!]\n  activeWorkspace: Workspace\n}\n\ntype USState {\n  id: ID!\n  name: String!\n}\n\ntype Workspace {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n  thumbnailUrl: String!\n  owner: User!\n  isPublic: Boolean\n  isTemplate: Boolean\n  createdOn: DateTime!\n  lastOpenedOn: DateTime!\n  layout: WorkspaceLayout!\n\n  \"\"\"optional\"\"\"\n  services: [Service!]\n  knowledgeGraphs: [KnowledgeGraph!]\n  queryGraphs: [QueryGraph!]\n  activeGraph: InstanceRef\n  selected: [InstanceRef!]\n  instanceRefs: [InstanceRef!]\n  inventory: Inventory\n}\n\ntype WorkspaceLayout {\n  id: ID!\n  explorerOpen: Boolean!\n  explorerSize: Float!\n  inventoryOpen: Boolean!\n  inventorySize: Float!\n  contextOpen: Boolean!\n  contextMode: String!\n  contextSize: Float!\n  dataVizOpen: Boolean!\n  dataVizSize: Float!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 103,
      "containsCycle": true,
      "numDefinitions": 189
    },
    {
      "name": "ckg.graphql",
      "path": "drill_prob/ckg.graphql",
      "sha": "bfdf1a37e2c9bc445ebff97efaf6430bef6ab88b",
      "url": "https://api.github.com/repositories/120362480/contents/drill_prob/ckg.graphql?ref=2add18037400db9a33e498da84a73effd246eff5",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/bfdf1a37e2c9bc445ebff97efaf6430bef6ab88b",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/2add18037400db9a33e498da84a73effd246eff5/drill_prob/ckg.graphql",
      "content": "# source: https://latest.knowledge.maana.io:8443/graphql\n# timestamp: Thu May 24 2018 15:56:11 GMT-0700 (PDT)\n\ninput AddApplicationInput {\n  id: ID!\n  name: String!\n  thumbnailUrl: String\n}\n\ninput AddBotActionInput {\n  name: String\n  serviceName: String!\n  serviceId: ID\n  eventName: String\n  mutationName: String\n  queryName: String\n  inputInstanceRef: InstanceRefInput\n  outputInstanceRef: InstanceRefInput\n}\n\n\"\"\"Create a Document instance\"\"\"\ninput AddDocumentInput {\n  id: ID\n\n  \"\"\"\n  these are all optional, but the resolver(s) must produce a 'name' value, since it is required\n  \"\"\"\n  name: String\n  text: String\n}\n\ninput AddEntitiesInput {\n  docId: ID!\n  entities: [EntityInput!]!\n}\n\ninput AddFieldMappingInput {\n  \"\"\"You need to give query binding Id or fromKind and toKind\"\"\"\n  queryBinding: ID\n  fromKind: ID\n  toKind: ID\n  serviceQuery: ID\n  serviceId: ID!\n  fieldMappings: [FieldMappingInput!]!\n}\n\ninput AddFieldsInput {\n  kindId: ID!\n  fields: [FieldInput!]!\n}\n\n\"\"\"Create a File instance\"\"\"\ninput AddFileFromUrlInput {\n  id: ID\n\n  \"\"\"\n  these are all optional, but the resolver(s) must produce a 'name' value, since it is required\n  \"\"\"\n  name: String\n  url: String!\n  thumbnailUrl: String\n  mimeType: String\n}\n\n\"\"\"Create a File instance\"\"\"\ninput AddFileInput {\n  id: ID\n\n  \"\"\"\n  these are all optional, but the resolver(s) must produce a 'name' value, since it is required\n  \"\"\"\n  name: String\n  url: String\n  thumbnailUrl: String\n  mimeType: String\n  size: String\n  progress: String\n  status: Int!\n}\n\n\"\"\"Create a Image instance\"\"\"\ninput AddImageInput {\n  id: ID\n\n  \"\"\"\n  these are all optional, but the resolver(s) must produce a 'name' value, since it is required\n  \"\"\"\n  name: String\n  url: String\n}\n\ninput AddInstanceInput {\n  kindId: ID!\n  id: ID\n  fieldIds: [ID]!\n  fieldValues: [FieldValueInput]!\n}\n\ninput AddInstanceSetInput {\n  kindId: ID!\n  ids: [ID]\n  fieldIds: [ID]!\n  records: [[FieldValueInput]]!\n}\n\ninput AddKindInput {\n  id: ID\n  name: String!\n  description: String\n  serviceId: ID\n  thumbnailUrl: String\n  isPublic: Boolean\n  nameField: String\n  isManaged: Boolean\n  schema: [FieldInput]\n}\n\ninput AddKnowledgeGraphInput {\n  workspaceId: ID!\n  name: String!\n  id: ID\n  index: Int\n}\n\ninput AddLinkInput {\n  \"\"\"one of the following is required\"\"\"\n  fromKindId: ID\n  fromKindName: String\n\n  \"\"\"one of the following is required\"\"\"\n  toKindId: ID\n  toKindName: String\n\n  \"\"\"one of the following is required\"\"\"\n  relationId: ID\n  relationName: String\n\n  \"\"\"optional\"\"\"\n  id: ID\n  name: String\n  weight: Float\n  fromFieldId: ID\n  fromFieldName: String\n  fromInstanceId: ID\n  fromOffset: String\n  fromSpan: String\n  toFieldId: ID\n  toFieldName: String\n  toInstanceId: ID\n  toOffset: String\n  toSpan: String\n}\n\n\"\"\"Create a Person instance\"\"\"\ninput AddPersonInput {\n  id: ID\n\n  \"\"\"\n  these are all optional, but the resolver(s) must produce a 'name' value, since it is required\n  \"\"\"\n  name: String\n  givenName: String\n  familyName: String\n  dateOfBirth: DateTime\n}\n\ninput AddQueryGraphInput {\n  workspaceId: ID!\n  name: String!\n  id: ID\n  nodes: [AddQueryGraphNodeInput!]\n  index: Int\n}\n\ninput AddQueryGraphNodeInput {\n  id: ID\n\n  \"\"\"projected kind\"\"\"\n  kindId: ID!\n\n  \"\"\"filters (where)\"\"\"\n  fieldFilters: [QueryGraphFieldFilterInput!]\n\n  \"\"\"child kind queries\"\"\"\n  children: [QueryGraphNodeConnectionInput!]\n}\n\ninput AddRelationInput {\n  \"\"\"required\"\"\"\n  name: String!\n\n  \"\"\"optional\"\"\"\n  id: ID\n  inverseName: String\n  description: String\n  undirected: Boolean\n  weight: Float\n}\n\ninput AddRoleInput {\n  id: ID\n  name: String!\n}\n\ninput AddServiceInput {\n  id: ID\n  name: String!\n  isSystem: Boolean!\n  thumbnailUrl: String!\n  endpointUrl: String!\n  subscriptionEndpointUrl: String!\n  tags: [String]\n  kinds: [KindInput]\n  queries: [ServiceQueryInput]\n  mutations: [ServiceMutationInput]\n  subscriptions: [ServiceSubscriptionInput]\n}\n\ninput AddServiceSourceInput {\n  \"\"\"\n  If id is not provided, it will be generated automatically. Must be unique if provided.\n  \"\"\"\n  id: ID\n  name: String\n  description: String\n\n  \"\"\"GraphQL Schema\"\"\"\n  schema: String!\n}\n\ninput AddTenantInput {\n  id: ID\n  name: String!\n}\n\ninput AddTenantUserRoleInput {\n  userId: ID!\n  tenantId: ID!\n  roleIds: [ID!]\n}\n\ninput AddTextElementInput {\n  id: ID\n  name: String!\n  docId: ID!\n  pageNum: Int\n  dir: String\n  width: Float\n  height: Float\n  transform: [Float]\n  fontName: String\n}\n\ninput AddUserInput {\n  id: ID\n  name: String!\n  givenName: String\n  familyName: String\n  email: String\n  picture: String\n  theme: Theme!\n  createdOn: DateTime\n}\n\ninput AddWorkspaceInput {\n  userId: ID!\n  name: String!\n  thumbnailUrl: String!\n}\n\ntype Application {\n  id: ID!\n  name: String!\n  thumbnailUrl: String\n}\n\ntype BooleanKind {\n  id: ID!\n  value: Boolean!\n}\n\ntype BotAction {\n  \"\"\"io.maana.kind\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"bookkeeping\"\"\"\n  created: DateTime!\n  lastUpdated: DateTime!\n  status: BotActionStatus!\n  progress: Float\n  errors: [JSON!]\n\n  \"\"\"operation\"\"\"\n  service: Service!\n  eventName: String\n  mutation: ServiceMutation\n  query: ServiceQuery\n  input: InstanceRef\n  output: InstanceRef\n}\n\ntype BotActionAddedEvent {\n  id: ID!\n  name: String!\n  serviceName: String!\n  serviceId: ID\n  eventName: String\n  mutationName: String\n  queryName: String\n  inputInstanceRef: InstanceRef\n  outputInstanceRef: InstanceRef\n}\n\n\"\"\"io.maana.ckg\"\"\"\nenum BotActionStatus {\n  PENDING\n  IN_PROGRESS\n  STOPPING\n  STOPPED\n  ERROR\n  COMPLETE\n}\n\ntype BotActionUpdatedEvent {\n  id: ID!\n  oldStatus: BotActionStatus!\n  newStatus: BotActionStatus!\n  progress: Float\n  errors: [JSON!]\n}\n\nenum CandidateFeaturizer {\n  SBOW\n  TFIDF\n}\n\nenum CandidateModel {\n  GAUSSIANNB\n  MULTINOMIALNB\n  RANDOMFOREST\n  SGD\n  LINEARSVC\n  LOGISTIC\n}\n\ntype Categorical {\n  id: ID!\n  name: String!\n}\n\ntype Class {\n  id: ID!\n  name: String!\n  kind: Kind\n  domains: [Domain]\n}\n\ntype Classification {\n  id: ID!\n  classifier: Classifier\n  instanceId: ID\n  classKind: Kind\n}\n\ninput ClassificationInput {\n  targetAccuracy: Float!\n\n  \"\"\"one of the following\"\"\"\n  kindName: String\n  kindId: ID\n\n  \"\"\"one of the following\"\"\"\n  textFieldName: String\n  textFieldId: ID\n\n  \"\"\"one of the following\"\"\"\n  classFieldName: String\n  classFieldId: ID\n\n  \"\"\"one of the following\"\"\"\n  domainInstanceName: String\n  domainInstanceId: ID\n  classifierName: String\n\n  \"\"\"cross validation folds\"\"\"\n  crossValidationFold: Int!\n\n  \"\"\"choosen candidate classification models:\"\"\"\n  candidateModels: [CandidateModel!]!\n\n  \"\"\"choosen candidate featurizer:\"\"\"\n  candidateFeaturizers: [CandidateFeaturizer!]!\n\n  \"\"\"\n  classifier profiling episodes. Reinforcement learning training episodes (>=1)\n  \"\"\"\n  modelProfilingEpisode: Int!\n\n  \"\"\"\n  parameter search episodes. After model profiling is done and best classifier is chosen, perform paramter search (>=1)\n  \"\"\"\n  modelSearchEpisode: Int!\n}\n\ntype Classifier {\n  id: ID!\n  name: String!\n  model: Model\n  featurizer: Featurizer\n  domain: Domain\n  accuracy: Float\n}\n\ntype Comment {\n  id: ID!\n  name: String!\n  detail: String\n  author: User!\n  timestamp: DateTime!\n}\n\ntype CountryCode {\n  id: ID!\n  name: String!\n}\n\ntype Currency {\n  id: ID!\n  name: String!\n}\n\ntype DateKind {\n  id: ID!\n  name: String!\n}\n\nscalar DateTime\n\ninput DeleteInstanceInput {\n  kindId: ID!\n  id: ID!\n}\n\ninput DeleteInstanceSetInput {\n  kindId: ID!\n  ids: [ID!]!\n}\n\ntype DetectedFace {\n  \"\"\"Required Kind\"\"\"\n  id: ID!\n  name: String\n\n  \"\"\"Source image\"\"\"\n  image: Image!\n\n  \"\"\"Image region with face\"\"\"\n  area: Int!\n  bottom: Int!\n  top: Int!\n  right: Int!\n  left: Int!\n\n  \"\"\"Normalized confidence score\"\"\"\n  detectionConfidence: Float!\n}\n\ninput DetectedFaceInput {\n  id: ID\n  name: String\n  imageId: ID!\n  area: Int!\n  bottom: Int!\n  top: Int!\n  right: Int!\n  left: Int!\n  detectionConfidence: Float!\n}\n\ntype DocFile {\n  id: ID!\n  name: String!\n}\n\n\"\"\"Documents\"\"\"\ntype Document {\n  \"\"\"Kind fields\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"Domain-specific fields\"\"\"\n  text: String\n  textElements: [TextElement]\n  entities: [Entity]\n}\n\n\"\"\"Standard event\"\"\"\ntype DocumentAddedEvent {\n  id: ID!\n  name: String!\n}\n\n\"\"\"Standard event\"\"\"\ntype DocumentDeletedEvent {\n  id: ID!\n  name: String!\n\n  \"\"\"only what was known\"\"\"\n  text: String\n}\n\n\"\"\"Standard event\"\"\"\ntype DocumentUpdatedEvent {\n  id: ID!\n  name: String!\n}\n\ntype Domain {\n  id: ID!\n  name: String!\n  classes: [Class]\n}\n\ntype Email {\n  id: ID!\n  name: String!\n}\n\n\"\"\"Entities\"\"\"\ntype Entity {\n  id: ID!\n  name: String!\n  class: String!\n  count: Int\n  percent: Float\n}\n\ninput EntityInput {\n  id: ID\n  name: String\n  class: String\n  count: Int\n  percent: Float\n}\n\ntype ExtractText {\n  offset: Int\n  span: Int\n  value: String!\n  name: String!\n}\n\ntype FaceDetectedEvent {\n  id: ID!\n  name: String!\n  area: Int!\n  bottom: Int!\n  top: Int!\n  right: Int!\n  left: Int!\n  detectionConfidence: Float!\n}\n\ntype FaceRecognizedEvent {\n  id: ID\n  name: String!\n  personId: ID!\n  detectedFaceId: ID!\n  recognitionConfidence: Float!\n}\n\ntype Featurizer {\n  id: ID!\n  name: String!\n  parameter: JSON\n}\n\n\"\"\"extend io.maana.kinddb's Field type\"\"\"\ntype Field {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n  type: FieldType!\n\n  \"\"\"optional\"\"\"\n  description: String\n  modifiers: [FieldModifiers]\n  typeKindId: ID\n\n  \"\"\"UI hints\"\"\"\n  displayAs: [String]\n  hide: Boolean\n  autoFocus: Boolean\n  readonly: Boolean\n\n  \"\"\"inferred\"\"\"\n  kind: Kind\n  acceptedFieldClassification: FieldClassification\n  fieldClassifications: [FieldClassification]\n}\n\ntype FieldClassification {\n  id: ID!\n  fieldId: ID!\n  name: String!\n  score: Float!\n}\n\ninput FieldClassificationInput {\n  id: ID\n  fieldId: ID!\n  name: String!\n  score: Float!\n}\n\n\"\"\"Arbitrary filters applied to field values\"\"\"\ntype FieldFilter {\n  id: ID!\n  fieldId: ID!\n  op: String!\n  value: FieldValue\n}\n\ninput FieldFilterInput {\n  \"\"\"one of the following is required\"\"\"\n  fieldId: ID\n  fieldName: String\n  op: String!\n  value: FieldValueInput!\n}\n\ninput FieldInput {\n  id: ID\n  name: String\n  description: String\n  type: FieldType\n  typeKindId: ID\n  modifiers: [FieldModifiers!]\n  displayAs: [String!]\n  hide: Boolean\n  autoFocus: Boolean\n  readonly: Boolean\n  fieldClassifications: [FieldClassificationInput]\n  acceptedFieldClassification: FieldClassificationInput\n}\n\ntype FieldMapping {\n  id: ID!\n  fromField: Field!\n  toField: Field!\n  onTypeErrorBehavior: OnTypeErrorBehavior\n\n  \"\"\"Executed sequentially\"\"\"\n  transformations: [Transformation]\n  defaultValue: FieldValue\n}\n\ninput FieldMappingInput {\n  id: ID\n  fromField: ID!\n  toField: ID!\n  onTypeErrorBehavior: OnTypeErrorBehavior\n  transformations: [Transformation]\n  defaultValue: FieldValueInput\n}\n\nenum FieldModifiers {\n  NONULL\n  LIST\n  NOIDX\n}\n\nenum FieldType {\n  ID\n  STRING\n  INT\n  FLOAT\n  BOOLEAN\n  DATE\n  TIME\n  DATETIME\n  JSON\n  KIND\n}\n\ntype FieldValue {\n  \"\"\"Types\"\"\"\n  ID: ID\n  STRING: String\n  INT: Int\n  FLOAT: Float\n  BOOLEAN: Boolean\n  DATE: DateTime\n  TIME: Time\n  DATETIME: DateTime\n  JSON: JSON\n  KIND: ID\n\n  \"\"\"List forms\"\"\"\n  l_IDENTITY: [ID]\n  l_STRING: [String]\n  l_INT: [Int]\n  l_FLOAT: [Float]\n  l_BOOLEAN: [Boolean]\n  l_DATE: [DateTime]\n  l_TIME: [Time]\n  l_DATETIME: [DateTime]\n  l_JSON: [JSON]\n  l_KIND: [ID]\n}\n\ninput FieldValueInput {\n  \"\"\"Types\"\"\"\n  ID: ID\n  STRING: String\n  INT: Int\n  FLOAT: Float\n  BOOLEAN: Boolean\n  DATE: DateTime\n  TIME: Time\n  DATETIME: DateTime\n  JSON: JSON\n  KIND: ID\n\n  \"\"\"List forms\"\"\"\n  l_IDENTITY: [ID]\n  l_STRING: [String]\n  l_INT: [Int]\n  l_FLOAT: [Float]\n  l_BOOLEAN: [Boolean]\n  l_DATE: [DateTime]\n  l_TIME: [Time]\n  l_DATETIME: [DateTime]\n  l_JSON: [JSON]\n  l_KIND: [ID]\n}\n\ntype File {\n  \"\"\"Kind fields\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"Domain-specific fields\"\"\"\n  url: String\n  thumbnailUrl: String\n  mimeType: String\n  size: String!\n  progress: String\n  status: Int!\n}\n\n\"\"\"Standard event\"\"\"\ntype FileAddedEvent {\n  id: ID!\n  name: String!\n  url: String\n  thumbnailUrl: String\n  size: String\n  status: Int\n  mimeType: String\n}\n\n\"\"\"Standard event\"\"\"\ntype FileDeletedEvent {\n  id: ID!\n  name: String!\n\n  \"\"\"only what was known\"\"\"\n  text: String\n}\n\n\"\"\"Standard event\"\"\"\ntype FileUpdatedEvent {\n  id: ID!\n  name: String!\n}\n\ntype GeoCoordinate {\n  id: ID!\n  name: String!\n}\n\ntype Image {\n  detectedFaces: [DetectedFace]\n  recognizedFaces: [RecognizedFace]\n  people: [Person]\n\n  \"\"\"Kind fields\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"Domain-specific fields\"\"\"\n  url: String\n}\n\n\"\"\"Standard event\"\"\"\ntype ImageAddedEvent {\n  id: ID!\n  name: String!\n  url: String\n}\n\n\"\"\"Standard event\"\"\"\ntype ImageDeletedEvent {\n  id: ID!\n  name: String!\n\n  \"\"\"only what was known\"\"\"\n  url: String\n}\n\n\"\"\"Standard event\"\"\"\ntype ImageUpdatedEvent {\n  id: ID!\n  name: String!\n  url: String\n}\n\ntype Info {\n  id: ID!\n  name: String!\n  description: String\n}\n\ntype Instance {\n  \"\"\"required\"\"\"\n  id: ID!\n\n  \"\"\"optional\"\"\"\n  name: String\n  kindId: ID!\n  kind: Kind\n  fieldIds: [ID]\n\n  \"\"\"rowKey: Int\"\"\"\n  fieldValues: [FieldValue]\n\n  \"\"\"inferred\"\"\"\n  linksFrom: [Link]\n  linksTo: [Link]\n}\n\ntype InstanceAddedEvent {\n  id: ID!\n  kindId: ID!\n}\n\ntype InstanceRef {\n  \"\"\"required\"\"\"\n  id: ID!\n\n  \"\"\"- one of:\"\"\"\n  kindId: ID\n  kindName: String\n\n  \"\"\"optional\"\"\"\n  name: String\n  url: String\n\n  \"\"\"inferred\"\"\"\n  kind: Kind\n  instance: Instance\n  innerKind: Kind\n  innerServiceQuery: ServiceQuery\n}\n\ninput InstanceRefInput {\n  id: ID\n  name: String\n  kindId: ID\n  kindName: String\n  url: String\n}\n\ntype InstanceSet {\n  kindId: ID!\n  kind: Kind!\n  fieldIds: [ID]\n\n  \"\"\"rowKeys: [Int]\"\"\"\n  records: [[FieldValue]]\n}\n\ntype Inventory {\n  serviceKinds: [Kind!]!\n  workspaceKinds: [Kind!]!\n  serviceQueries: [ServiceQuery!]!\n}\n\ntype IpAddress {\n  id: ID!\n  name: String!\n}\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\"\"\"\nscalar JSON\n\ntype Kind {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"optional\"\"\"\n  serviceId: ID\n  description: String\n  thumbnailUrl: String\n  isPublic: Boolean\n  isManaged: Boolean\n  schema(includeDeleted: Boolean = false, fieldIds: [ID!], fieldNames: [String!], fieldKinds: [ID!]): [Field]\n  nameField: ID\n\n  \"\"\"inferred\"\"\"\n  relationsFrom: [Relation]\n  relationsTo: [Relation]\n  linksFrom: [Link]\n  linksTo: [Link]\n  service: Service\n  fromQueryBindings: [QueryBinding!]\n  toQueryBindings: [QueryBinding!]\n}\n\ntype KindAddedEvent {\n  id: ID!\n}\n\ninput KindInput {\n  id: ID!\n  name: String\n  description: String\n  thumbnailUrl: String\n  isPublic: Boolean\n  isManaged: Boolean\n  schema: [FieldInput]\n}\n\n\"\"\"Query tree\"\"\"\ntype KindQuery {\n  \"\"\"id of query\"\"\"\n  id: ID!\n\n  \"\"\"projected kind\"\"\"\n  kindId: ID!\n\n  \"\"\"filters (where)\"\"\"\n  fieldFilters: [FieldFilter]\n\n  \"\"\"conjunction (where)\"\"\"\n  and: [KindQuery]\n\n  \"\"\"disjunction (where)\"\"\"\n  or: [KindQuery]\n\n  \"\"\"join (if conjunction or disjunction)\"\"\"\n  fromFieldId: ID\n  toFieldId: ID\n\n  \"\"\"inferred\"\"\"\n  kind: Kind!\n  fromField: Field\n  toField: Field\n}\n\ninput KindQueryInput {\n  \"\"\"projected kind (one of the following is required)\"\"\"\n  kindId: ID\n  kindName: String\n\n  \"\"\"filters (where)\"\"\"\n  fieldFilters: [FieldFilterInput]\n\n  \"\"\"conjunction (where)\"\"\"\n  and: [KindQueryInput]\n\n  \"\"\"disjunction (where)\"\"\"\n  or: [KindQueryInput]\n\n  \"\"\"join (if conjunction or disjunction)\"\"\"\n  fromFieldId: ID\n  fromFieldName: String\n  toFieldId: ID\n  toFieldName: String\n  take: Int\n}\n\ntype KnowledgeGraph {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"optional\"\"\"\n  service: Service\n  instanceRefs: [InstanceRef!]\n  expanded: Boolean\n  layout: KnowledgeGraphLayout!\n}\n\ntype KnowledgeGraphLayout {\n  id: ID!\n  nodes: [KnowledgeGraphLayoutNode!]\n  zoom: Float\n  offsetX: Float\n  offsetY: Float\n}\n\ntype KnowledgeGraphLayoutNode {\n  id: ID!\n  instanceRefId: ID\n  x: Float\n  y: Float\n  collapsed: Boolean\n}\n\ninput KnowledgeGraphLayoutNodeInput {\n  id: ID!\n  instanceRefId: ID!\n  x: Float\n  y: Float\n  collapsed: Boolean\n}\n\ntype KnowledgeGraphUpdate {\n  instanceRef: InstanceRef!\n  layoutNode: KnowledgeGraphLayoutNode!\n}\n\ntype Latitude {\n  id: ID!\n  name: String!\n}\n\ntype Link {\n  \"\"\"required\"\"\"\n  id: ID!\n  relation: Relation!\n  fromKind: Kind!\n  toKind: Kind!\n\n  \"\"\"optional\"\"\"\n  name: String\n  weight: Float\n  fromField: Field\n  fromInstance: Instance\n  fromOffset: String\n  fromSpan: String\n  toField: Field\n  toInstance: Instance\n  toOffset: String\n  toSpan: String\n}\n\ntype LinkAddedEvent {\n  id: ID!\n  name: String\n  relationId: ID\n  relationName: String\n  weight: Float\n  fromKindId: ID\n  fromKindName: String\n  fromFieldId: ID\n  fromFieldName: String\n  fromInstanceId: ID\n  fromOffset: String\n  fromSpan: String\n  toKindId: ID\n  toKindName: String\n  toFieldId: ID\n  toFieldName: String\n  toInstanceId: ID\n  toOffset: String\n  toSpan: String\n}\n\ntype Location {\n  id: ID!\n  name: String!\n}\n\ntype Longitude {\n  id: ID!\n  name: String!\n}\n\ntype Model {\n  id: ID!\n  name: String!\n  parameter: JSON\n}\n\ntype Mutation {\n  \"\"\"Services\"\"\"\n  addService(input: AddServiceInput!): ID!\n  updateServiceSchema(input: UpdateServiceSchemaInput): Boolean!\n  refreshServiceSchema(id: ID!): Service!\n  updateService(input: UpdateServiceInput!): Service!\n  addServiceQuery(input: ServiceQueryInput!): ID!\n  addQueryBinding(input: QueryBindingInput!): ID!\n\n  \"\"\"Applications\"\"\"\n  addApplication(input: AddApplicationInput!): ID\n  updateApplication(input: UpdateApplicationInput!): ID\n  addBotAction(input: AddBotActionInput!): ID\n  runBotAction(id: ID!): BotActionStatus\n  stopBotAction(id: ID!): BotActionStatus\n  updateBotAction(input: UpdateBotActionInput!): BotActionStatus\n  addDetectedFaces(input: [DetectedFaceInput!]!): Boolean!\n  addRecognizedFaces(input: [RecognizedFaceInput!]!): Boolean!\n\n  \"\"\"Tenants\"\"\"\n  addTenant(input: AddTenantInput!): ID\n  updateTenant(input: UpdateTenantInput!): ID\n\n  \"\"\"Users\"\"\"\n  addUser(input: AddUserInput!): ID\n  updateUser(input: UpdateUserInput!): ID\n\n  \"\"\"Roles\"\"\"\n  addRole(input: AddRoleInput!): ID\n  updateRole(input: UpdateRoleInput!): ID\n\n  \"\"\"User Tenant Role\"\"\"\n  addUserTenantRole(input: AddTenantUserRoleInput!): Boolean\n  updateUserTenantRole(input: UpdateTenantUserRoleInput!): Boolean\n\n  \"\"\"Service Admin\"\"\"\n  provisionService(tenantId: ID!): ID\n  resetService(tenantId: ID!, areYouSureYouReallyReallyWantToDoThis: Boolean!): Boolean\n\n  \"\"\"Kinds and Fields\"\"\"\n  addKind(tenantId: ID!, input: AddKindInput!): ID\n  updateKind(tenantId: ID!, input: UpdateKindInput!): ID\n  deleteKind(tenantId: ID!, kindId: ID!): Boolean\n  addFields(tenantId: ID!, input: AddFieldsInput!): ID\n\n  \"\"\"Instances\"\"\"\n  addInstance(tenantId: ID!, input: AddInstanceInput!): ID\n  addInstanceSet(tenantId: ID!, input: AddInstanceSetInput!): [ID]\n  updateInstance(tenantId: ID!, input: UpdateInstanceInput!): ID\n  updateInstances(tenantId: ID!, input: UpdateInstanceSetInput!): [ID]\n  deleteInstance(tenantId: ID!, input: DeleteInstanceInput!): ID\n  deleteInstanceSet(tenantId: ID!, input: DeleteInstanceSetInput!): [ID]\n\n  \"\"\"Relations\"\"\"\n  addRelation(input: AddRelationInput!): ID\n  updateRelation(input: UpdateRelationInput!): ID\n\n  \"\"\"Links\"\"\"\n  addLink(input: AddLinkInput!): ID\n  addLinks(input: [AddLinkInput]!): [ID]\n  updateLink(input: UpdateLinkInput!): ID\n\n  \"\"\"Users\"\"\"\n  setTheme(userId: ID!, theme: Theme!): Boolean!\n\n  \"\"\"QueryBinding\"\"\"\n  addFieldMapping(input: AddFieldMappingInput!): QueryBinding!\n  updateQueryBinding(input: UpdateQueryBindingInput!): Boolean!\n  removeQueryBinding(id: ID!): Boolean!\n  removeFieldMappings(input: [RemoveFieldMappingInput!]!): Boolean!\n  updateFieldMapping(input: UpdateFieldMappingInput!): Boolean!\n\n  \"\"\"Duplicate things\"\"\"\n  duplicateKind(id: ID!, newName: String!): ID!\n  duplicateInstance(instanceId: ID!, newName: String!, kindId: ID, kindName: String): ID!\n\n  \"\"\"Workspaces\"\"\"\n  addWorkspace(input: AddWorkspaceInput!): ID\n  openWorkspace(userId: ID!, workspaceId: ID!): ID\n  closeWorkspace(userId: ID!, workspaceId: ID!): ID\n  selectKinds(workspaceId: ID!, instanceRefs: [InstanceRefInput!]!): Boolean!\n  activeGraph(workspaceId: ID!, instanceRef: InstanceRefInput!): Boolean!\n  updateWorkspaceLayout(input: UpdateWorkspaceLayoutInput!): Boolean!\n  resetWorkspaceLayout(id: ID!): Boolean!\n  addInstanceRefToWorkspace(wsId: ID!, instanceRef: InstanceRefInput!): InstanceRef!\n  addInstanceRefsToWorkspace(wsId: ID!, instanceRefs: [InstanceRefInput!]!): [InstanceRef!]!\n  addServiceToWorkspace(workspaceId: ID!, serviceId: ID!): Service\n\n  \"\"\"Knowledge Graphs\"\"\"\n  addKnowledgeGraph(input: AddKnowledgeGraphInput!): KnowledgeGraph\n  reorderKnowledgeGraphs(input: ReorderKnowledgeGraphsInput!): ID\n  addInstanceRefToKnowledgeGraph(kgId: ID!, instanceRef: InstanceRefInput!): KnowledgeGraphUpdate!\n  addInstanceRefsToKnowledgeGraph(kgId: ID!, instanceRefs: [InstanceRefInput!]!): [KnowledgeGraphUpdate!]!\n  removeInstanceRefFromKnowledgeGraph(kgId: ID!, instanceId: ID!): Boolean!\n  removeInstanceRefsFromKnowledgeGraph(kgId: ID!, instanceIds: [ID!]!): Boolean!\n\n  \"\"\"Knowledge Graph Layout\"\"\"\n  updateKnowledgeGraphLayout(input: UpdateKnowledgeGraphLayoutInput!): Boolean!\n  updateModel(kgId: ID!, model: JSON!): Boolean!\n  expand(kgId: ID!): Boolean!\n\n  \"\"\"Query Graphs\"\"\"\n  addQueryGraph(input: AddQueryGraphInput!): QueryGraph!\n  reorderQueryGraphs(input: ReorderQueryGraphsInput!): ID\n  expandQueryGraph(qgId: ID!): Boolean!\n  addNodeToQueryGraph(qgId: ID!, node: AddQueryGraphNodeInput!): QueryGraphUpdate!\n  addNodesToQueryGraph(qgId: ID!, nodes: [AddQueryGraphNodeInput!]!): [QueryGraphUpdate]!\n  removeNodeFromQueryGraph(qgId: ID!, nodeId: ID!): [QueryGraphNode!]!\n  removeNodesFromQueryGraph(qgId: ID!, nodeIds: [ID!]!): [QueryGraphNode!]!\n  addQueryGraphNodeConnection(nodeId: ID!, connection: QueryGraphNodeConnectionInput!): QueryGraphNode!\n  removeQueryGraphNodeConnection(input: RemoveQueryGraphNodeConnectionInput!): QueryGraphNode!\n  removeQueryGraphNodeConnections(input: [RemoveQueryGraphNodeConnectionInput!]!): [QueryGraphNode!]!\n  addFieldFilterToQueryGraphNode(nodeId: ID!, fieldFilter: QueryGraphFieldFilterInput!): QueryGraphNode!\n  addFieldFiltersToQueryGraphNode(nodeId: ID!, fieldFilters: [QueryGraphFieldFilterInput!]!): QueryGraphNode!\n  removeFieldFilterFromQueryGraphNode(nodeId: ID!, fieldFilterId: ID!): QueryGraphNode!\n  removeFieldFiltersFromQueryGraphNode(nodeId: ID!, fieldFilterIds: [ID!]!): QueryGraphNode!\n  addServiceSource(input: AddServiceSourceInput!): ID!\n  addDocument(input: AddDocumentInput): ID\n  addDocuments(input: [AddDocumentInput!]!): [ID]\n  updateDocument(input: UpdateDocumentInput): ID\n  updateDocuments(input: [UpdateDocumentInput!]!): [ID]\n  deleteDocument(id: ID!): Document\n  deleteDocuments(ids: [ID!]!): [Document]\n  addFile(input: AddFileInput!): ID!\n  addFiles(input: [AddFileInput!]!): Boolean!\n  addFileFromUrl(input: AddFileFromUrlInput!): ID!\n  updateFile(input: UpdateFileInput): ID\n  updateFiles(input: [UpdateFileInput!]!): [ID]\n  deleteFile(id: ID!): File\n  deleteFiles(ids: [ID!]!): [File]\n  addImage(input: AddImageInput): ID\n  addImages(input: [AddImageInput!]!): [ID]\n  updateImage(input: UpdateImageInput): ID\n  updateImages(input: [UpdateImageInput!]!): [ID]\n  deleteImage(id: ID!): Image\n  deleteImages(ids: [ID!]!): [Image]\n  addPerson(input: AddPersonInput): ID\n  addPersons(input: [AddPersonInput!]!): [ID]\n  updatePerson(input: UpdatePersonInput): ID\n  updatePersons(input: [UpdatePersonInput!]!): [ID]\n  deletePerson(id: ID!): Person\n  deletePersons(ids: [ID!]!): [Person]\n\n  \"\"\"Documents\"\"\"\n  addTextElement(input: AddTextElementInput!): ID\n  addTextElements(elements: [AddTextElementInput!]!): Boolean\n\n  \"\"\"Entities\"\"\"\n  addEntities(input: AddEntitiesInput!): Boolean\n  demobootstrap: Boolean!\n  train(input: ClassificationInput!): Classifier\n  classifyKindandLink(input: PredictionInput!): [ID]\n  classifyText(rawtext: String!, classifierId: ID, classifierName: String): Classification\n  classifyKind(input: PredictionInput!): [Classification]\n}\n\ntype Number {\n  id: ID!\n  name: String!\n  value: Float\n}\n\n\"\"\"\nBehavior if type doesn't match, for instance: - FLOAT can be converted to\nSTRING, but not all STRING can't be converted to FLOAT\n\"\"\"\nenum OnTypeErrorBehavior {\n  \"\"\"Skip instance that produced error\"\"\"\n  SKIP\n\n  \"\"\"\n  Query of this kind will produce error even if single instance has produced error\n  \"\"\"\n  STOP\n}\n\ntype Organization {\n  id: ID!\n  name: String!\n}\n\ntype PatternMatchResult {\n  subject: String\n  predicate: String\n  object: String\n  score: Float\n}\n\ntype Percentage {\n  id: ID!\n  name: String!\n  value: Float\n}\n\ntype Person {\n  images: [Image]\n\n  \"\"\"Kind fields\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"Domain-specific fields\"\"\"\n  givenName: String\n  familyName: String\n  dateOfBirth: DateTime\n}\n\n\"\"\"Standard event\"\"\"\ntype PersonAddedEvent {\n  id: ID!\n  name: String!\n}\n\n\"\"\"Standard event\"\"\"\ntype PersonDeletedEvent {\n  id: ID!\n  name: String!\n\n  \"\"\"only what was known\"\"\"\n  givenName: String\n  familyName: String\n  dateOfBirth: DateTime\n}\n\n\"\"\"Standard event\"\"\"\ntype PersonUpdatedEvent {\n  id: ID!\n  name: String!\n\n  \"\"\"only what changed\"\"\"\n  givenName: String\n  familyName: String\n  dateOfBirth: DateTime\n}\n\ntype PhoneNumber {\n  id: ID!\n  name: String!\n}\n\ntype PhysicalDimension {\n  id: ID!\n  name: String!\n  formula: String!\n}\n\ntype PhysicalQuantity {\n  id: ID!\n  name: String!\n  magnitude: String!\n  unit: String!\n  dimension: String!\n}\n\ninput PredictionInput {\n  \"\"\"one of the following\"\"\"\n  kindName: String\n  kindId: ID\n\n  \"\"\"one of the following\"\"\"\n  textFieldName: String\n  textFieldId: String\n\n  \"\"\"one of the following\"\"\"\n  classifierName: String\n  classifierId: ID\n}\n\ntype Query {\n  \"\"\"Services\"\"\"\n  service(id: ID!): Service\n  allServices: [Service]\n  allSystemServices: [Service]\n  allNonSystemServices: [Service]\n\n  \"\"\"Applications\"\"\"\n  application(id: ID!): Application\n  allApplications: [Application]\n  botAction(id: ID!): BotAction\n  botActions(ids: [ID!]!): [BotAction]\n  allBotActions: [BotAction]\n\n  \"\"\"Tenants\"\"\"\n  tenant(id: ID!): Tenant\n  tenants(ids: [ID!]!): [Tenant]\n  allTenants: [Tenant]\n\n  \"\"\"Users\"\"\"\n  user(id: ID!): User\n  users(ids: [ID!]!): [User]\n  allUsers: [User]\n\n  \"\"\"Roles\"\"\"\n  role(id: ID!): Role\n  roles(ids: [ID!]!): [Role]\n  allRoles: [Role]\n\n  \"\"\"Kinds\"\"\"\n  kind(tenantId: ID!, id: ID, name: String): Kind\n  kinds(tenantId: ID!, ids: [ID!]!): [Kind]\n  allKinds(tenantId: ID!, take: Int): [Kind]\n\n  \"\"\"Instances\"\"\"\n  instance(tenantId: ID!, instanceRef: InstanceRefInput!): Instance\n\n  \"\"\"Fill in missing pieces of an instance ref\"\"\"\n  instanceRef(tenantId: ID!, id: ID!): InstanceRef\n  populateInstanceRef(tenantId: ID!, instanceRef: InstanceRefInput!): InstanceRef\n  instances(tenantId: ID!, kindId: ID, kindName: String, ids: [ID!]!): InstanceSet\n  instancesByRef(tenantId: ID!, instanceRefs: [InstanceRefInput!]!): [Instance]\n  allInstances(tenantId: ID!, kindId: ID, kindName: String, fieldIds: [ID!], take: Int): InstanceSet\n\n  \"\"\"Kind Query\"\"\"\n  query(tenantId: ID!, input: KindQueryInput!): InstanceSet\n\n  \"\"\"Relations\"\"\"\n  relation(tenantId: ID!, id: ID!): Relation\n  relations(tenantId: ID!, ids: [ID]!): [Relation]\n  allRelations(tenantId: ID!): [Relation]\n\n  \"\"\"Links\"\"\"\n  link(tenantId: ID!, id: ID!): Link\n  links(tenantId: ID!, ids: [ID]!): [Link]\n\n  \"\"\"\n  If relationId is provided, list all links, otherwise list only links of specific relation\n  \"\"\"\n  allLinks(tenantId: ID!, relationId: ID): [Link]\n  info: Info!\n  queryBinding(id: ID!): QueryBinding!\n  queryBindings(ids: [ID!]!): [QueryBinding!]!\n  queryFields(ids: [ID]): [QueryField!]!\n\n  \"\"\"Workspaces\"\"\"\n  workspace(id: ID!): Workspace\n  allSharedWorkspaces(userId: ID!): [Workspace!]\n  allTemplateWorkspaces(userId: ID!): [Workspace!]\n  searchUserSpaces(userId: ID!, text: String!): [Workspace!]\n\n  \"\"\"List all kinds by a service\"\"\"\n  allKindsOfService(tenantId: ID!, serviceId: ID!): [Kind]\n\n  \"\"\"Knowledge Graphs\"\"\"\n  knowledgeGraph(id: ID!): KnowledgeGraph\n  knowledgeGraphLayout(id: ID!): KnowledgeGraphLayout\n\n  \"\"\"Query Graph\"\"\"\n  queryGraph(id: ID!): QueryGraph\n\n  \"\"\"Query for the instances of a kind\"\"\"\n  kindDBQuery(kindQuery: KindQueryInput!): InstanceSet\n  comment(id: ID!): Comment\n\n  \"\"\"Search!\"\"\"\n  search(text: String!): [SearchResult]\n\n  \"\"\"unique people\"\"\"\n  document(id: ID!): Document\n  documents(ids: [ID!]!): [Document]\n\n  \"\"\"unique people\"\"\"\n  file(id: ID!): File\n  files(ids: [ID!]!): [File]\n\n  \"\"\"unique people\"\"\"\n  image(id: ID!): Image\n  images(ids: [ID!]!): [Image]\n\n  \"\"\"unique people\"\"\"\n  person(id: ID!): Person\n  persons(ids: [ID!]!): [Person]\n\n  \"\"\"specialized queries\"\"\"\n  personsByName(name: String!): [Person]\n  personsByDateOfBirth(date: DateTime!): [Person]\n  classifier(id: ID!): Classifier\n  featurizer(id: ID!): Featurizer\n  model(id: ID!): Model\n  class(id: ID!): Class\n  domain(id: ID!): Domain\n  classification(id: ID!): Classification\n}\n\ntype QueryBinding {\n  id: ID!\n\n  \"\"\"\n  Name of the field that will be added to original kind to call implicit\n  conversion. If omitted, field will not be added. Field name must be unique\n  within a fromKind, and must be safe (i.e. proper graphql name). Adding a\n  binding with mapping function will add a function\n  \"\"\"\n  name: String\n\n  \"\"\"\n  Optional. If not provided, means input is not a kind of workspace (e.g. scalar)\n  \"\"\"\n  fromKind: Kind\n\n  \"\"\"\n  Optional. If not provided, means output is not a kind of workspace/service (e.g. scalar)\n  \"\"\"\n  toKind: Kind\n\n  \"\"\"\n  Even though kinds are uniquely identifying services, to avoid constant\n  roundtrips to kinddb i would prefer to have a service (or workspace) ID to filter on\n  \"\"\"\n  serviceId: ID!\n\n  \"\"\"\n  Optional. If not provided, means that there's no mappings (e.g. just importing query into workspace)\n  \"\"\"\n  fieldMappings: [FieldMapping!]\n\n  \"\"\"\n  Reference to actual 'ServiceQuery' instance (mapping function) - that contains\n  reference to name, arguments etc. If not defined, QueryBinding will be treated\n  only as Kind Mapping\n  \"\"\"\n  serviceQuery: ServiceQuery\n}\n\ninput QueryBindingInput {\n  id: ID!\n  name: String\n\n  \"\"\"\n  Optional. If not provided, means input is not a kind of workspace (e.g. scalar)\n  \"\"\"\n  fromKind: ID\n\n  \"\"\"\n  Optional. If not provided, means output is not a kind of workspace/service (e.g. scalar)\n  \"\"\"\n  toKind: ID\n  serviceId: ID!\n\n  \"\"\"\n  Optional. If not provided, means that there's no mappings (e.g. just importing query into workspace)\n  \"\"\"\n  fieldMappings: [FieldMappingInput!]\n  serviceQuery: ID\n}\n\ntype QueryField {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n  type: FieldType!\n\n  \"\"\"optional\"\"\"\n  description: String\n  modifiers: [FieldModifiers]\n  typeKindId: ID\n}\n\ninput QueryFieldInput {\n  id: ID\n  name: String\n  description: String\n  type: FieldType\n  typeKindId: ID\n  modifiers: [FieldModifiers!]\n}\n\ntype QueryGraph {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n  expanded: Boolean\n  layout: KnowledgeGraphLayout!\n  nodes: [QueryGraphNode!]\n}\n\n\"\"\"FieldFilter type\"\"\"\ntype QueryGraphFieldFilter {\n  id: ID!\n  fieldId: ID!\n  op: String!\n  value: String\n}\n\n\"\"\"QueryGraphFieldFilterInput type\"\"\"\ninput QueryGraphFieldFilterInput {\n  id: ID\n  fieldId: ID!\n  op: String!\n  value: String\n}\n\n\"\"\"QueryGraphNode type\"\"\"\ntype QueryGraphNode {\n  id: ID!\n\n  \"\"\"projected kind\"\"\"\n  kindId: ID!\n\n  \"\"\"filters (where)\"\"\"\n  fieldFilters: [QueryGraphFieldFilter!]\n  children: [QueryGraphNodeConnection!]\n\n  \"\"\"Inferred\"\"\"\n  kind: Kind\n}\n\n\"\"\"\nQueryGraphNodeConnection type used to define the connectin between two nodes\n\"\"\"\ntype QueryGraphNodeConnection {\n  \"\"\"ID used to identify the connection\"\"\"\n  id: ID!\n\n  \"\"\"Information on the child's side of the connection\"\"\"\n  childId: ID!\n  childFieldId: ID!\n\n  \"\"\"Information on the parent's side of the connection\"\"\"\n  parentId: ID!\n  parentFieldId: ID!\n  type: QueryGraphNodeJoinType!\n}\n\n\"\"\"\nSpecifies a connection between QueryGraphNode when adding a QueryGraphNode\n\"\"\"\ninput QueryGraphNodeConnectionInput {\n  \"\"\"The ID of the child QueryGraphNode\"\"\"\n  childId: ID!\n\n  \"\"\"\n  The ID of the field in the child QueryGraphNode to join to the parent kind query\n  \"\"\"\n  childFieldId: ID!\n\n  \"\"\"The ID of the field in the parent QueryGraphNode\"\"\"\n  parentFieldId: ID!\n\n  \"\"\"The type of connection this is (defaults to AND)\"\"\"\n  type: QueryGraphNodeJoinType\n}\n\nenum QueryGraphNodeJoinType {\n  AND\n  OR\n}\n\ntype QueryGraphUpdate {\n  queryNode: QueryGraphNode!\n  layoutNode: KnowledgeGraphLayoutNode!\n}\n\n\"\"\"Person recognized by face in an image\"\"\"\ntype RecognizedFace {\n  \"\"\"Required Kind\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"Recognized person\"\"\"\n  personId: ID!\n  person: Person!\n\n  \"\"\"Based on detected face\"\"\"\n  detectedFaceId: ID!\n  detectedFace: DetectedFace\n\n  \"\"\"Normalized confidence score\"\"\"\n  recognitionConfidence: Float!\n}\n\n\"\"\"Person recognized by face in an image\"\"\"\ninput RecognizedFaceInput {\n  id: ID\n  name: String!\n  personId: ID!\n  detectedFaceId: ID!\n  recognitionConfidence: Float!\n}\n\ntype Relation {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"optional\"\"\"\n  inverseName: String\n  description: String\n  undirected: Boolean\n  weight: Float\n\n  \"\"\"inferred\"\"\"\n  links: [Link]\n}\n\ntype RelationAddedEvent {\n  id: ID!\n}\n\ninput RemoveFieldMappingInput {\n  queryBindingId: ID!\n  fieldMappingId: ID!\n}\n\ninput RemoveQueryGraphNodeConnectionInput {\n  nodeId: ID!\n  connectionId: ID!\n}\n\ninput ReorderKnowledgeGraphsInput {\n  workspaceId: ID!\n  oldIndex: Int!\n  newIndex: Int!\n}\n\ninput ReorderQueryGraphsInput {\n  workspaceId: ID!\n  oldIndex: Int!\n  newIndex: Int!\n}\n\ntype Role {\n  id: ID!\n  name: String!\n}\n\ntype SearchResult {\n  kindId: ID\n  kind: Kind\n  innerKind: Kind\n  instanceId: ID\n  instance: Instance\n  fieldId: ID\n  field: Field\n  offset: String\n  span: String\n  contents: String\n  serviceSource(id: ID!): ServiceSource\n  allServiceSources: [ServiceSource]\n}\n\ntype Service {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n  isSystem: Boolean!\n  endpointUrl: String!\n\n  \"\"\"optional\"\"\"\n  description: String\n  subscriptionEndpointUrl: String\n  thumbnailUrl: String\n  tags: [String]\n  status: Int\n  lastChecked: DateTime\n  instances: [ServiceInstance]\n\n  \"\"\"inferred\"\"\"\n  kinds: [Kind]\n  queries: [ServiceQuery]\n  mutations: [ServiceMutation]\n  subscriptions: [ServiceSubscription]\n  workspace: Workspace\n  serviceSource: ServiceSource\n}\n\ntype ServiceInstance {\n  \"\"\"required\"\"\"\n  id: ID!\n  dockerServiceName: String!\n  hostName: String!\n  desiredState: String!\n  currentState: String!\n}\n\ntype ServiceMutation {\n  id: ID!\n  name: String!\n}\n\ninput ServiceMutationInput {\n  id: ID!\n  name: String!\n}\n\ntype ServiceQuery {\n  id: ID!\n  name: String!\n  description: String\n  serviceId: ID!\n\n  \"\"\"Input arguments\"\"\"\n  fields: [QueryField!]\n\n  \"\"\"Output\"\"\"\n  outputType: FieldType!\n  outputModifiers: [FieldModifiers]\n  outputKindId: ID\n\n  \"\"\"Inferred\"\"\"\n  kind: Kind\n  service: Service\n  queryBindings: [QueryBinding!]\n}\n\ninput ServiceQueryInput {\n  id: ID\n  serviceId: ID!\n  name: String!\n  description: String\n\n  \"\"\"Input arguments\"\"\"\n  fields: [QueryFieldInput!]\n\n  \"\"\"Output\"\"\"\n  outputType: FieldType!\n  outputModifiers: [FieldModifiers]\n  outputKindId: ID\n}\n\ntype ServiceSource {\n  \"\"\"ID of Service Source will be used as service id.\"\"\"\n  id: ID!\n  name: String\n  description: String\n\n  \"\"\"GraphQL Schema\"\"\"\n  schema: String!\n  kinds: [Kind]\n}\n\ntype ServiceSubscription {\n  id: ID!\n  name: String!\n}\n\ninput ServiceSubscriptionInput {\n  id: ID!\n  name: String!\n}\n\ntype SocialSecurityNumber {\n  id: ID!\n  name: String!\n}\n\n\"\"\"Available subscriptions\"\"\"\ntype Subscription {\n  serviceAdded: ID\n  botActionAdded: BotActionAddedEvent!\n  botActionUpdated: BotActionUpdatedEvent!\n  faceDetected: FaceDetectedEvent!\n  faceRecognized: FaceRecognizedEvent!\n  kindAdded: KindAddedEvent!\n  instanceAdded: InstanceAddedEvent!\n  relationAdded: RelationAddedEvent!\n  linkAdded: LinkAddedEvent!\n  documentAdded: DocumentAddedEvent!\n  documentUpdated: DocumentUpdatedEvent!\n  documentDeleted: DocumentDeletedEvent!\n  fileAdded: FileAddedEvent!\n  fileUpdated: FileUpdatedEvent!\n  fileDeleted: FileDeletedEvent!\n  imageAdded: ImageAddedEvent!\n  imageUpdated: ImageUpdatedEvent!\n  imageDeleted: ImageDeletedEvent!\n  personAdded: PersonAddedEvent!\n  personUpdated: PersonUpdatedEvent!\n  personDeleted: PersonDeletedEvent!\n}\n\ntype Tenant {\n  id: ID!\n  name: String!\n  users: [User]\n  services: [Service]\n  applications: [Application]\n}\n\ntype TenantUserRole {\n  userId: ID!\n  user: User\n  tenantId: ID!\n  tenant: Tenant\n  roles: [Role]\n}\n\ntype TextClassifiedEvent {\n  kindId: ID!\n  textClassifiedId: ID!\n  name: String!\n}\n\ntype TextElement {\n  id: ID!\n  name: String!\n  docId: ID!\n  pageNum: Int\n  dir: String\n  width: Float\n  height: Float\n  transform: [Float]\n  fontName: String\n}\n\nenum Theme {\n  DARK\n  LIGHT\n}\n\nscalar Time\n\ntype TimeKind {\n  id: ID!\n  name: String!\n}\n\n\"\"\"\nCurrently a convenience - may need to use either a string for encoding function, or interface, or strongly typed hierarchy\n\"\"\"\nenum Transformation {\n  TO_LOWER\n  TO_UPPER\n  TO_STRING\n  TO_INT\n  TO_FLOAT\n}\n\ninput UpdateApplicationInput {\n  id: ID!\n  name: String!\n  thumbnailUrl: String\n}\n\ninput UpdateBotActionInput {\n  status: BotActionStatus!\n  progress: Float\n  error: JSON\n}\n\n\"\"\"Create a Document instance\"\"\"\ninput UpdateDocumentInput {\n  id: ID!\n\n  \"\"\"only what is changing\"\"\"\n  name: String\n  text: String\n}\n\ninput UpdateFieldMappingInput {\n  id: ID!\n  fromField: ID!\n  toField: ID!\n  onTypeErrorBehavior: OnTypeErrorBehavior\n  transformations: [Transformation]\n  defaultValue: FieldValueInput\n}\n\n\"\"\"Create a File instance\"\"\"\ninput UpdateFileInput {\n  id: ID!\n\n  \"\"\"only what is changing\"\"\"\n  name: String\n  url: String\n  thumbnailUrl: String\n  progress: String\n  status: Int\n  mimeType: String\n}\n\n\"\"\"Create a Image instance\"\"\"\ninput UpdateImageInput {\n  id: ID!\n\n  \"\"\"only what is changing\"\"\"\n  name: String\n  url: String\n}\n\ninput UpdateInstanceInput {\n  id: ID!\n  kindId: ID!\n  fieldIds: [ID]!\n  fieldValues: [FieldValueInput]!\n}\n\ninput UpdateInstanceSetInput {\n  ids: [ID]\n  kindId: ID!\n  fieldIds: [ID]!\n  records: [[FieldValueInput]]!\n}\n\ninput UpdateKindInput {\n  id: ID!\n  name: String\n  description: String\n  serviceId: ID\n  thumbnailUrl: String\n  isPublic: Boolean\n  nameField: String\n  isManaged: Boolean\n  schema: [FieldInput]\n}\n\ninput UpdateKnowledgeGraphLayoutInput {\n  id: ID!\n  nodes: [KnowledgeGraphLayoutNodeInput!]\n  zoom: Float\n  offsetX: Float\n  offsetY: Float\n}\n\ninput UpdateLinkInput {\n  id: ID!\n\n  \"\"\"optional\"\"\"\n  name: String\n  relationId: ID\n  relationName: String\n  weight: Float\n  fromKindId: ID\n  fromKindName: String\n  fromFieldId: ID\n  fromFieldName: String\n  fromInstanceId: ID\n  fromOffset: String\n  fromSpan: String\n  toKindId: ID\n  toKindName: String\n  toFieldId: ID\n  toFieldName: String\n  toInstanceId: ID\n  toOffset: String\n  toSpan: String\n}\n\n\"\"\"Create a Person instance\"\"\"\ninput UpdatePersonInput {\n  id: ID!\n\n  \"\"\"only what is changing\"\"\"\n  name: String\n  givenName: String\n  familyName: String\n  dateOfBirth: DateTime\n}\n\ninput UpdateQueryBindingInput {\n  id: ID!\n  name: String\n  fromKind: ID\n  toKind: ID\n  serviceId: ID!\n  fieldMappings: [UpdateFieldMappingInput!]\n  serviceQuery: ID\n}\n\ninput UpdateRelationInput {\n  id: ID!\n  name: String\n  inverseName: String\n  description: String\n  undirected: Boolean\n  weight: Float\n}\n\ninput UpdateRoleInput {\n  id: ID!\n  name: String\n}\n\ninput UpdateServiceInput {\n  id: ID!\n  name: String!\n  endpointUrl: String!\n  subscriptionEndpointUrl: String\n  thumbnailUrl: String\n  tags: [String]\n}\n\ninput UpdateServiceSchemaInput {\n  id: ID!\n  status: Int\n  lastChecked: DateTime\n  kinds: [KindInput]\n  queries: [ServiceQueryInput]\n  mutations: [ServiceMutationInput]\n  subscriptions: [ServiceSubscriptionInput]\n}\n\ninput UpdateTenantInput {\n  id: ID!\n  name: String\n}\n\ninput UpdateTenantUserRoleInput {\n  userId: ID!\n  tenantId: ID!\n  roleIds: [ID!]\n}\n\ninput UpdateUserInput {\n  id: ID!\n\n  \"\"\"optional\"\"\"\n  name: String\n  givenName: String\n  familyName: String\n  email: String\n  picture: String\n  theme: Theme\n}\n\ninput UpdateWorkspaceLayoutInput {\n  id: ID!\n  explorerOpen: Boolean\n  explorerSize: Float\n  inventoryOpen: Boolean\n  inventorySize: Float\n  contextOpen: Boolean\n  contextMode: String\n  contextSize: Float\n  dataVizOpen: Boolean\n  dataVizSize: Float\n}\n\ntype URL {\n  id: ID!\n  name: String!\n}\n\n\"\"\"merged with io.maana.idam\"\"\"\ntype User {\n  id: ID!\n  name: String!\n  givenName: String\n  familyName: String\n  email: String\n  picture: String\n  tenants: [Tenant]\n  tenantUserRoles: [TenantUserRole]\n  createdOn: DateTime\n  activities: [InstanceRef!]\n  recentItems: [InstanceRef!]\n  favoriteItems: [InstanceRef!]\n  workspaces: [Workspace!]\n  applications: [Application!]\n  theme: String\n  showNewKnowledgeGraphDialog: Boolean\n  openWorkspaces: [Workspace!]\n  activeWorkspace: Workspace\n}\n\ntype USState {\n  id: ID!\n  name: String!\n}\n\ntype Workspace {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n  thumbnailUrl: String!\n  owner: User!\n  isPublic: Boolean\n  isTemplate: Boolean\n  createdOn: DateTime!\n  lastOpenedOn: DateTime!\n  layout: WorkspaceLayout!\n\n  \"\"\"optional\"\"\"\n  services: [Service!]\n  knowledgeGraphs: [KnowledgeGraph!]\n  queryGraphs: [QueryGraph!]\n  activeGraph: InstanceRef\n  selected: [InstanceRef!]\n  instanceRefs: [InstanceRef!]\n  inventory: Inventory\n}\n\ntype WorkspaceLayout {\n  id: ID!\n  explorerOpen: Boolean!\n  explorerSize: Float!\n  inventoryOpen: Boolean!\n  inventorySize: Float!\n  contextOpen: Boolean!\n  contextMode: String!\n  contextSize: Float!\n  dataVizOpen: Boolean!\n  dataVizSize: Float!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 189
    },
    {
      "name": "pie.model.graphql",
      "path": "sample-pie/packages/logic/src/imports/pie.model.graphql",
      "sha": "c5e89b0ff9b506ddd5abfeb84303eaf789e0cda6",
      "url": "https://api.github.com/repositories/120362480/contents/sample-pie/packages/logic/src/imports/pie.model.graphql?ref=2add18037400db9a33e498da84a73effd246eff5",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/c5e89b0ff9b506ddd5abfeb84303eaf789e0cda6",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/2add18037400db9a33e498da84a73effd246eff5/sample-pie/packages/logic/src/imports/pie.model.graphql",
      "content": "# source: http://localhost:8052\n# timestamp: Fri Sep 28 2018 09:30:29 GMT-0700 (PDT)\n\ntype AggregateAtom {\n  count: Int!\n}\n\ntype Atom implements Node {\n  id: ID!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype AtomConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [AtomEdge]!\n  aggregate: AggregateAtom!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype AtomEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Atom!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum AtomOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AtomPreviousValues {\n  id: ID!\n}\n\ntype AtomSubscriptionPayload {\n  mutation: MutationType!\n  node: Atom\n  updatedFields: [String!]\n  previousValues: AtomPreviousValues\n}\n\ninput AtomSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [AtomSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [AtomSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [AtomSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AtomWhereInput\n}\n\ninput AtomWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [AtomWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [AtomWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [AtomWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n}\n\ninput AtomWhereUniqueInput {\n  id: ID\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createAtom: Atom!\n  deleteAtom(where: AtomWhereUniqueInput!): Atom\n  deleteManyAtoms(where: AtomWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  atoms(where: AtomWhereInput, orderBy: AtomOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Atom]!\n  atom(where: AtomWhereUniqueInput!): Atom\n  atomsConnection(where: AtomWhereInput, orderBy: AtomOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AtomConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  atom(where: AtomSubscriptionWhereInput): AtomSubscriptionPayload\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 11,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 18
    },
    {
      "name": "schema.graphql",
      "path": "sample-pie/packages/model/schema.graphql",
      "sha": "da5511c525d61251ebf9e1051e9d26bce5887b8c",
      "url": "https://api.github.com/repositories/120362480/contents/sample-pie/packages/model/schema.graphql?ref=2add18037400db9a33e498da84a73effd246eff5",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/da5511c525d61251ebf9e1051e9d26bce5887b8c",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/2add18037400db9a33e498da84a73effd246eff5/sample-pie/packages/model/schema.graphql",
      "content": "# source: http://localhost:8052\n# timestamp: Fri Sep 28 2018 08:48:03 GMT-0700 (PDT)\n\ntype AggregateAtom {\n  count: Int!\n}\n\ntype Atom implements Node {\n  id: ID!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype AtomConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [AtomEdge]!\n  aggregate: AggregateAtom!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype AtomEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Atom!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum AtomOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype AtomPreviousValues {\n  id: ID!\n}\n\ntype AtomSubscriptionPayload {\n  mutation: MutationType!\n  node: Atom\n  updatedFields: [String!]\n  previousValues: AtomPreviousValues\n}\n\ninput AtomSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [AtomSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [AtomSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [AtomSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: AtomWhereInput\n}\n\ninput AtomWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [AtomWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [AtomWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [AtomWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n}\n\ninput AtomWhereUniqueInput {\n  id: ID\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createAtom: Atom!\n  deleteAtom(where: AtomWhereUniqueInput!): Atom\n  deleteManyAtoms(where: AtomWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  atoms(where: AtomWhereInput, orderBy: AtomOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Atom]!\n  atom(where: AtomWhereUniqueInput!): Atom\n  atomsConnection(where: AtomWhereInput, orderBy: AtomOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AtomConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  atom(where: AtomSubscriptionWhereInput): AtomSubscriptionPayload\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 18
    },
    {
      "name": "maana-measurement.graphql",
      "path": "maana-demo-black-mirror/schemas/maana-measurement.graphql",
      "sha": "f6b999754f5145b232abe1dc66755507da71a825",
      "url": "https://api.github.com/repositories/120362480/contents/maana-demo-black-mirror/schemas/maana-measurement.graphql?ref=7d49bc178c2686914c1c19a546da37d02add2aef",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/f6b999754f5145b232abe1dc66755507da71a825",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/7d49bc178c2686914c1c19a546da37d02add2aef/maana-demo-black-mirror/schemas/maana-measurement.graphql",
      "content": "# source: https://stable.knowledge.maana.io:8443/service/ed3e41e1-1259-4dc5-9ef6-1a3fdba8a69c/graphql\n# timestamp: Mon Apr 29 2019 09:34:26 GMT-0700 (PDT)\n\n\"\"\"Autogenerated input for adding instance of UnitOfMeasure\"\"\"\ninput AddUnitOfMeasureInput {\n  \"\"\"id\"\"\"\n  id: ID\n  name: String\n  displayAs: String\n}\n\nenum AggregateOp {\n  MIN\n  MAX\n  SUM\n  COUNT\n}\n\nscalar Date\n\nscalar DateTime\n\ninput FieldFilterInput {\n  \"\"\"one of the following is required\"\"\"\n  fieldId: ID\n  fieldName: String\n  op: String!\n  value: FieldValueInput!\n}\n\ninput FieldProjectionInput {\n  \"\"\"one of the following is required - except in the case of count queries\"\"\"\n  fieldId: ID\n  fieldName: String\n\n  \"\"\"optional if omitted outer query is used\"\"\"\n  alias: String\n  op: AggregateOp\n}\n\ntype FieldValue {\n  \"\"\"Types\"\"\"\n  ID: ID\n  STRING: String\n  INT: Int\n  FLOAT: Float\n  BOOLEAN: Boolean\n  DATE: Date\n  TIME: Time\n  DATETIME: DateTime\n  JSON: JSON\n  KIND: ID\n\n  \"\"\"List forms\"\"\"\n  l_ID: [ID]\n  l_STRING: [String]\n  l_INT: [Int]\n  l_FLOAT: [Float]\n  l_BOOLEAN: [Boolean]\n  l_DATE: [Date]\n  l_TIME: [Time]\n  l_DATETIME: [DateTime]\n  l_JSON: [JSON]\n  l_KIND: [ID]\n}\n\ninput FieldValueInput {\n  \"\"\"Types\"\"\"\n  ID: ID\n  STRING: String\n  INT: Int\n  FLOAT: Float\n  BOOLEAN: Boolean\n  DATE: Date\n  TIME: Time\n  DATETIME: DateTime\n  JSON: JSON\n  KIND: ID\n\n  \"\"\"List forms\"\"\"\n  l_ID: [ID]\n  l_STRING: [String]\n  l_INT: [Int]\n  l_FLOAT: [Float]\n  l_BOOLEAN: [Boolean]\n  l_DATE: [Date]\n  l_TIME: [Time]\n  l_DATETIME: [DateTime]\n  l_JSON: [JSON]\n  l_KIND: [ID]\n}\n\ntype Info {\n  id: ID!\n  name: String!\n  description: String\n}\n\ntype InstanceSet {\n  kindId: ID!\n\n  \"\"\"Continuation token\"\"\"\n  token: String\n  fieldIds: [ID]\n\n  \"\"\"rowKeys: [Int]\"\"\"\n  records: [[FieldValue]]\n}\n\nscalar JSON\n\ninput KindQueryInput {\n  \"\"\"projected kind (one of the following is required)\"\"\"\n  kindId: ID\n  kindName: String\n  serviceId: ID\n\n  \"\"\"optional alias for projection binding\"\"\"\n  alias: String\n\n  \"\"\"projected fields\"\"\"\n  projection: [FieldProjectionInput]\n\n  \"\"\"distinct Projected result\"\"\"\n  distinct: Boolean\n\n  \"\"\"filters (where)\"\"\"\n  fieldFilters: [FieldFilterInput]\n\n  \"\"\"conjunction (where)\"\"\"\n  and: [KindQueryInput]\n\n  \"\"\"disjunction (where)\"\"\"\n  or: [KindQueryInput]\n\n  \"\"\"join (if conjunction or disjunction)\"\"\"\n  fromFieldId: ID\n  fromFieldName: String\n  toFieldId: ID\n  toFieldName: String\n  take: Int\n  token: String\n}\n\ntype Mutation {\n  \"\"\"Autogenerated mutation for adding single instance of UnitOfMeasure\"\"\"\n  addUnitOfMeasure(input: AddUnitOfMeasureInput!): ID\n\n  \"\"\"Autogenerated mutation for adding multiple instances of UnitOfMeasure\"\"\"\n  addUnitOfMeasures(input: [AddUnitOfMeasureInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for updating single instance of UnitOfMeasure\"\"\"\n  updateUnitOfMeasure(input: UpdateUnitOfMeasureInput!): ID\n\n  \"\"\"Autogenerated mutation for updating multiple instance of UnitOfMeasure\"\"\"\n  updateUnitOfMeasures(input: [UpdateUnitOfMeasureInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for deleting single instance of UnitOfMeasure\"\"\"\n  deleteUnitOfMeasure(id: ID!): UnitOfMeasure\n\n  \"\"\"Autogenerated mutation for deleting multiple instance of UnitOfMeasure\"\"\"\n  deleteUnitOfMeasures(ids: [ID!]): [UnitOfMeasure]\n}\n\ntype Query {\n  CKGErrors: [String]\n\n  \"\"\"All instances of UnitOfMeasure kind\"\"\"\n  allUnitOfMeasures(\n    \"\"\"Number of results to return\"\"\"\n    take: Int = 1000\n\n    \"\"\"Number of results to skip from the query result. Applied before take\"\"\"\n    offset: Int = 0\n  ): [UnitOfMeasure]\n\n  \"\"\"Get single instance of UnitOfMeasure kind by ID\"\"\"\n  unitOfMeasure(id: ID!): UnitOfMeasure\n\n  \"\"\"Get list of instance of UnitOfMeasure kind by IDs\"\"\"\n  unitOfMeasures(ids: [ID]!): [UnitOfMeasure]\n\n  \"\"\"Get instances of UnitOfMeasure kind based on one or more field filters\"\"\"\n  unitOfMeasureFilter(\n    filters: [FieldFilterInput]!\n\n    \"\"\"Number of results to return\"\"\"\n    take: Int = 1000\n\n    \"\"\"Number of results to skip from the query result. Applied before take\"\"\"\n    offset: Int = 0\n  ): [UnitOfMeasure]\n\n  \"\"\"Mandatory service manifest.\"\"\"\n  info: Info!\n\n  \"\"\"Kind Query\"\"\"\n  query(input: KindQueryInput!): InstanceSet\n  queryJSON(input: KindQueryInput!): String\n}\n\nscalar Time\n\ntype UnitOfMeasure {\n  \"\"\"id\"\"\"\n  id: ID!\n  name: String\n  displayAs: String\n}\n\n\"\"\"Autogenerated input for modifying instance of UnitOfMeasure\"\"\"\ninput UpdateUnitOfMeasureInput {\n  \"\"\"id\"\"\"\n  id: ID!\n  name: String\n  displayAs: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 6,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 17
    },
    {
      "name": "schema.gql",
      "path": "maana-ue/logic-js/src/graphql/main/schema.gql",
      "sha": "bff7886d09c4393a2ced8166d7c60e8f9a4b3c0d",
      "url": "https://api.github.com/repositories/120362480/contents/maana-ue/logic-js/src/graphql/main/schema.gql?ref=17d24062c800c58e5c5ca8f9c4d532ef3484b6bf",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/bff7886d09c4393a2ced8166d7c60e8f9a4b3c0d",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/17d24062c800c58e5c5ca8f9c4d532ef3484b6bf/maana-ue/logic-js/src/graphql/main/schema.gql",
      "content": "scalar Date\n\ntype Info {\n  id: ID!\n  name: String!\n  description: String\n}\n\ntype OilRefinery {\n  id: ID!\n  location: String!\n  capacity: Float!\n}\n\ninput OilRefineryAsInput {\n  id: ID!\n  location: String!\n  capacity: Float!\n}\n\n# Standard queries (instance and batch)\ntype Query {\n  info: Info\n  helloWorld(name: String!): String!\n  wikiOilRefineryTopics: [String!]!\n  wikiParseOilRefineries(text: String!): [OilRefinery!]!\n  oilRefineryLocations(refineries: [OilRefineryAsInput!]!): [String!]!\n  largestOilRefinery(refineries: [OilRefineryAsInput!]!): OilRefinery!\n  totalLocationCapacity(\n    refineries: [OilRefineryAsInput!]!\n    location: String!\n  ): Float!\n  totalCapacity(refineries: [OilRefineryAsInput!]!): Float!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 3,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 5
    },
    {
      "name": "basic.graphql",
      "path": "cli/basic/basic.graphql",
      "sha": "72f6ac9bb5459ec64d5eeeb9365966df0e6b5f01",
      "url": "https://api.github.com/repositories/120362480/contents/cli/basic/basic.graphql?ref=2add18037400db9a33e498da84a73effd246eff5",
      "git_url": "https://api.github.com/repositories/120362480/git/blobs/72f6ac9bb5459ec64d5eeeb9365966df0e6b5f01",
      "html_url": "https://github.com/maana-io/q-tutorials/blob/2add18037400db9a33e498da84a73effd246eff5/cli/basic/basic.graphql",
      "content": "# source: http://138.91.199.6:8003/service/33ff60a5-ddc8-475a-a964-ae278f63db6c/graphql\n# timestamp: Sat Apr 21 2018 13:34:51 GMT-0700 (PDT)\n\ninput AddBotActionInput {\n  name: String\n  serviceName: String!\n  serviceId: ID\n  eventName: String\n  mutationName: String\n  queryName: String\n  inputInstanceRef: InstanceRefInput\n  outputInstanceRef: InstanceRefInput\n}\n\n\"\"\"Autogenerated input for adding instance of Employer\"\"\"\ninput AddEmployerInput {\n  id: ID\n  name: String\n  ceo: ID\n}\n\n\"\"\"Autogenerated input for adding instance of Person\"\"\"\ninput AddPersonInput {\n  id: ID\n  name: String\n  dob: String\n  employer: ID\n}\n\ntype BotAction {\n  \"\"\"io.maana.kind\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"bookkeeping\"\"\"\n  created: DateTime!\n  lastUpdated: DateTime!\n  status: BotActionStatus!\n  progress: Float\n  errors: [JSON!]\n\n  \"\"\"operation\"\"\"\n  service: Service!\n  eventName: String\n  mutation: ServiceMutation\n  query: ServiceQuery\n  input: InstanceRef\n  output: InstanceRef\n}\n\ntype BotActionAddedEvent {\n  id: ID!\n  name: String!\n  serviceName: String!\n  serviceId: ID\n  eventName: String\n  mutationName: String\n  queryName: String\n  inputInstanceRef: InstanceRef\n  outputInstanceRef: InstanceRef\n}\n\nenum BotActionStatus {\n  PENDING\n  IN_PROGRESS\n  STOPPING\n  STOPPED\n  ERROR\n  COMPLETE\n}\n\ntype BotActionUpdatedEvent {\n  id: ID!\n  oldStatus: BotActionStatus!\n  newStatus: BotActionStatus!\n  progress: Float\n  errors: [JSON!]\n}\n\nscalar Date\n\nscalar DateTime\n\ntype Employer {\n  id: ID!\n  name: String!\n  ceo: Person\n}\n\ntype Field {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n  type: FieldType!\n\n  \"\"\"optional\"\"\"\n  description: String\n  modifiers: [FieldModifiers]\n  typeKindId: ID\n\n  \"\"\"UI hints\"\"\"\n  displayAs: [String]\n  hide: Boolean\n  autoFocus: Boolean\n  readonly: Boolean\n\n  \"\"\"inferred\"\"\"\n  kind: Kind\n  acceptedFieldClassification: FieldClassification\n}\n\ntype FieldClassification {\n  id: ID!\n  fieldId: ID!\n  name: String!\n  score: Float!\n}\n\ninput FieldFilterInput {\n  \"\"\"one of the following is required\"\"\"\n  fieldId: ID\n  fieldName: String\n  op: String!\n  value: FieldValueInput!\n}\n\nenum FieldModifiers {\n  NONULL\n  LIST\n}\n\nenum FieldType {\n  ID\n  STRING\n  INT\n  FLOAT\n  BOOLEAN\n  DATE\n  TIME\n  DATETIME\n  JSON\n  KIND\n}\n\ntype FieldValue {\n  \"\"\"Types\"\"\"\n  ID: ID\n  STRING: String\n  INT: Int\n  FLOAT: Float\n  BOOLEAN: Boolean\n  DATE: Date\n  TIME: Time\n  DATETIME: DateTime\n  JSON: JSON\n  KIND: ID\n\n  \"\"\"List forms\"\"\"\n  l_IDENTITY: [ID]\n  l_STRING: [String]\n  l_INT: [Int]\n  l_FLOAT: [Float]\n  l_BOOLEAN: [Boolean]\n  l_DATE: [Date]\n  l_TIME: [Time]\n  l_DATETIME: [DateTime]\n  l_JSON: [JSON]\n  l_KIND: [ID]\n}\n\ninput FieldValueInput {\n  \"\"\"Types\"\"\"\n  ID: ID\n  STRING: String\n  INT: Int\n  FLOAT: Float\n  BOOLEAN: Boolean\n  DATE: Date\n  TIME: Time\n  DATETIME: DateTime\n  JSON: JSON\n  KIND: ID\n\n  \"\"\"List forms\"\"\"\n  l_IDENTITY: [ID]\n  l_STRING: [String]\n  l_INT: [Int]\n  l_FLOAT: [Float]\n  l_BOOLEAN: [Boolean]\n  l_DATE: [Date]\n  l_TIME: [Time]\n  l_DATETIME: [DateTime]\n  l_JSON: [JSON]\n  l_KIND: [ID]\n}\n\ntype Info {\n  id: ID!\n  name: String!\n  description: String\n}\n\ntype Instance {\n  \"\"\"required\"\"\"\n  id: ID!\n\n  \"\"\"optional\"\"\"\n  name: String\n  kindId: ID!\n  kind: Kind\n  fieldIds: [ID]\n\n  \"\"\"rowKey: Int\"\"\"\n  fieldValues: [FieldValue]\n\n  \"\"\"inferred\"\"\"\n  linksFrom: [Link]\n  linksTo: [Link]\n}\n\ntype InstanceRef {\n  \"\"\"required\"\"\"\n  id: ID!\n\n  \"\"\"- one of:\"\"\"\n  kindId: ID\n  kindName: String\n\n  \"\"\"optional\"\"\"\n  name: String\n  url: String\n\n  \"\"\"inferred\"\"\"\n  kind: Kind\n  instance: Instance\n  innerKind: Kind\n}\n\ninput InstanceRefInput {\n  id: ID\n  name: String\n  kindId: ID\n  kindName: String\n  url: String\n}\n\ntype InstanceSet {\n  kindId: ID!\n  kind: Kind!\n  fieldIds: [ID]\n\n  \"\"\"rowKeys: [Int]\"\"\"\n  records: [[FieldValue]]\n}\n\nscalar JSON\n\ntype Kind {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"optional\"\"\"\n  serviceId: ID\n  description: String\n  thumbnailUrl: String\n  isPublic: Boolean\n  isManaged: Boolean\n  schema(includeDeleted: Boolean = false, fieldIds: [ID!], fieldNames: [String!], fieldKinds: [ID!]): [Field]\n  nameField: ID\n\n  \"\"\"inferred\"\"\"\n  relationsFrom: [Relation]\n  relationsTo: [Relation]\n  linksFrom: [Link]\n  linksTo: [Link]\n  service: Service\n}\n\ninput KindQueryInput {\n  \"\"\"projected kind (one of the following is required)\"\"\"\n  kindId: ID\n  kindName: String\n  serviceId: ID\n\n  \"\"\"filters (where)\"\"\"\n  fieldFilters: [FieldFilterInput]\n\n  \"\"\"conjunction (where)\"\"\"\n  and: [KindQueryInput]\n\n  \"\"\"disjunction (where)\"\"\"\n  or: [KindQueryInput]\n\n  \"\"\"join (if conjunction or disjunction)\"\"\"\n  fromFieldId: ID\n  fromFieldName: String\n  toFieldId: ID\n  toFieldName: String\n  take: Int\n}\n\ntype Link {\n  \"\"\"required\"\"\"\n  id: ID!\n  relation: Relation!\n  fromKind: Kind!\n  toKind: Kind!\n\n  \"\"\"optional\"\"\"\n  name: String\n  weight: Float\n  fromField: Field\n  fromInstance: Instance\n  fromOffset: String\n  fromSpan: String\n  toField: Field\n  toInstance: Instance\n  toOffset: String\n  toSpan: String\n}\n\ntype Mutation {\n  \"\"\"Autogenerated mutation for adding single instance of Person\"\"\"\n  addPerson(input: AddPersonInput!): ID\n\n  \"\"\"Autogenerated mutation for adding multiple instances of Person\"\"\"\n  addPersons(input: [AddPersonInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for updating single instance of Person\"\"\"\n  updatePerson(input: UpdatePersonInput!): ID\n\n  \"\"\"Autogenerated mutation for updating multiple instance of Person\"\"\"\n  updatePersons(input: [UpdatePersonInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for deleting single instance of Person\"\"\"\n  deletePerson(id: ID!): Person\n\n  \"\"\"Autogenerated mutation for deleting multiple instance of Person\"\"\"\n  deletePersons(ids: [ID!]): [Person]\n\n  \"\"\"Autogenerated mutation for adding single instance of Employer\"\"\"\n  addEmployer(input: AddEmployerInput!): ID\n\n  \"\"\"Autogenerated mutation for adding multiple instances of Employer\"\"\"\n  addEmployers(input: [AddEmployerInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for updating single instance of Employer\"\"\"\n  updateEmployer(input: UpdateEmployerInput!): ID\n\n  \"\"\"Autogenerated mutation for updating multiple instance of Employer\"\"\"\n  updateEmployers(input: [UpdateEmployerInput]!): [ID]\n\n  \"\"\"Autogenerated mutation for deleting single instance of Employer\"\"\"\n  deleteEmployer(id: ID!): Employer\n\n  \"\"\"Autogenerated mutation for deleting multiple instance of Employer\"\"\"\n  deleteEmployers(ids: [ID!]): [Employer]\n  addBotAction(input: AddBotActionInput!): ID\n  runBotAction(id: ID!): BotActionStatus\n  stopBotAction(id: ID!): BotActionStatus\n  updateBotAction(input: UpdateBotActionInput!): BotActionStatus\n}\n\ntype Person {\n  id: ID!\n  name: String!\n  dob: String\n  employer: Employer\n}\n\ntype Query {\n  \"\"\"All instances of Person kind\"\"\"\n  allPersons: [Person]\n\n  \"\"\"Get single instance of Person kind by ID\"\"\"\n  person(id: ID!): Person\n\n  \"\"\"Get list of instance of Person kind by IDs\"\"\"\n  persons(ids: [ID]!): [Person]\n\n  \"\"\"All instances of Employer kind\"\"\"\n  allEmployers: [Employer]\n\n  \"\"\"Get single instance of Employer kind by ID\"\"\"\n  employer(id: ID!): Employer\n\n  \"\"\"Get list of instance of Employer kind by IDs\"\"\"\n  employers(ids: [ID]!): [Employer]\n  info: Info!\n  botAction(id: ID!): BotAction\n  botActions(ids: [ID!]!): [BotAction]\n  allBotActions: [BotAction]\n\n  \"\"\"\n  Returns kind by ID, regardless of whether kind is used by the service or not.\n  Can only be used to find kind in a tenant of a service.\n  OR\n  Returns kind by name. If serviceId is omitted, will return kind of a current service/workspace,\n  otherwise can be used to find a kind with specific name of a specific service (e.g. kind 'Workspace' of Portal Service)\n  \"\"\"\n  kind(id: ID, name: String, serviceId: ID): Kind\n\n  \"\"\"\n  Returns all kinds defined *in this service* (sic!).\n  This includes managed kinds and kinds used by workspace/service\n  \"\"\"\n  allKinds(take: Int): [Kind]\n\n  \"\"\"Kind Query\"\"\"\n  query(input: KindQueryInput!): InstanceSet\n}\n\ntype Relation {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n\n  \"\"\"optional\"\"\"\n  description: String\n  undirected: Boolean\n  weight: Float\n\n  \"\"\"inferred\"\"\"\n  links: [Link]\n}\n\ntype Service {\n  \"\"\"required\"\"\"\n  id: ID!\n  name: String!\n  isSystem: Boolean!\n  endpointUrl: String!\n\n  \"\"\"optional\"\"\"\n  description: String\n  subscriptionEndpointUrl: String\n  thumbnailUrl: String\n  tags: [String]\n  status: Int\n  lastChecked: Date\n  instances: [ServiceInstance]\n\n  \"\"\"inferred\"\"\"\n  kinds: [Kind]\n  queries: [ServiceQuery]\n  mutations: [ServiceMutation]\n  subscriptions: [ServiceSubscription]\n}\n\ntype ServiceInstance {\n  \"\"\"required\"\"\"\n  id: ID!\n  dockerServiceName: String!\n  hostName: String!\n  desiredState: String!\n  currentState: String!\n}\n\ntype ServiceMutation {\n  id: ID!\n  name: String!\n}\n\ntype ServiceQuery {\n  id: ID!\n  name: String!\n}\n\ntype ServiceSubscription {\n  id: ID!\n  name: String!\n}\n\ntype Subscription {\n  botActionAdded: BotActionAddedEvent!\n  botActionUpdated: BotActionUpdatedEvent!\n}\n\nscalar Time\n\ninput UpdateBotActionInput {\n  status: BotActionStatus!\n  progress: Float\n  error: JSON\n}\n\n\"\"\"Autogenerated input for updating instance of Employer\"\"\"\ninput UpdateEmployerInput {\n  id: ID!\n  name: String!\n  ceo: UpdatePersonInput\n}\n\n\"\"\"Autogenerated input for updating instance of Person\"\"\"\ninput UpdatePersonInput {\n  id: ID!\n  name: String!\n  dob: String\n  employer: UpdateEmployerInput\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 23,
      "containsCycle": true,
      "numDefinitions": 40
    }
  ],
  "metrics": {
    "created_at": "2018-02-05T21:11:52Z",
    "updated_at": "2019-07-17T14:38:12Z",
    "pushed_at": "2019-07-01T21:58:15Z",
    "issues": 0,
    "watchers": 10,
    "fork_count": 11,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 45,
    "pull_requests_open": 1,
    "pull_requests_closed": 3,
    "pull_requests_merged": 41,
    "releases": 0,
    "stargazers": 5
  }
}