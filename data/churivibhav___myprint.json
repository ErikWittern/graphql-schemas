{
  "repo_name": "myprint",
  "repo_full_name": "churivibhav/myprint",
  "repo_owner": "churivibhav",
  "repo_description": "CMS Application with products and cart",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "backend/plugins/graphql/config/generated/schema.graphql",
      "sha": "9a012045b7a11492bbe4123527b1cf3dc78fd9ba",
      "url": "https://api.github.com/repositories/161446019/contents/backend/plugins/graphql/config/generated/schema.graphql?ref=c798a1724e7dd0e19b5d78917b6eb816410dd071",
      "git_url": "https://api.github.com/repositories/161446019/git/blobs/9a012045b7a11492bbe4123527b1cf3dc78fd9ba",
      "html_url": "https://github.com/churivibhav/myprint/blob/c798a1724e7dd0e19b5d78917b6eb816410dd071/backend/plugins/graphql/config/generated/schema.graphql",
      "content": "type Category {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  products: Product\n}\n\ntype CategoryAggregator {\n  count: Int\n}\n\ntype CategoryConnection {\n  values: [Category]\n  groupBy: CategoryGroupBy\n  aggregate: CategoryAggregator\n}\n\ntype CategoryConnection_id {\n  key: ID\n  connection: CategoryConnection\n}\n\ntype CategoryConnectionCreatedAt {\n  key: DateTime\n  connection: CategoryConnection\n}\n\ntype CategoryConnectionName {\n  key: String\n  connection: CategoryConnection\n}\n\ntype CategoryConnectionProducts {\n  key: ID\n  connection: CategoryConnection\n}\n\ntype CategoryConnectionUpdatedAt {\n  key: DateTime\n  connection: CategoryConnection\n}\n\ntype CategoryGroupBy {\n  _id: [CategoryConnection_id]\n  createdAt: [CategoryConnectionCreatedAt]\n  updatedAt: [CategoryConnectionUpdatedAt]\n  name: [CategoryConnectionName]\n  products: [CategoryConnectionProducts]\n}\n\ninput CategoryInput {\n  name: String!\n  products: ID\n}\n\ninput createCategoryInput {\n  data: CategoryInput\n}\n\ntype createCategoryPayload {\n  category: Category\n}\n\ninput createProductInput {\n  data: ProductInput\n}\n\ntype createProductPayload {\n  product: Product\n}\n\ninput createRoleInput {\n  data: RoleInput\n}\n\ntype createRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput createUserInput {\n  data: UserInput\n}\n\ntype createUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"\nThe `DateTime` scalar represents a date and time following the ISO 8601 standard\n\"\"\"\nscalar DateTime\n\ninput deleteCategoryInput {\n  where: InputID\n}\n\ntype deleteCategoryPayload {\n  category: Category\n}\n\ninput deleteProductInput {\n  where: InputID\n}\n\ntype deleteProductPayload {\n  product: Product\n}\n\ninput deleteRoleInput {\n  where: InputID\n}\n\ntype deleteRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput deleteUserInput {\n  where: InputID\n}\n\ntype deleteUserPayload {\n  user: UsersPermissionsUser\n}\n\ninput FileInput {\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related: [ID]\n}\n\ninput InputID {\n  id: ID!\n}\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\"\"\"\nscalar JSON\n\nunion Morph = UsersPermissionsMe | UsersPermissionsMeRole | Category | createCategoryPayload | updateCategoryPayload | deleteCategoryPayload | CategoryConnection | CategoryAggregator | CategoryGroupBy | CategoryConnection_id | CategoryConnectionCreatedAt | CategoryConnectionUpdatedAt | CategoryConnectionName | CategoryConnectionProducts | Product | createProductPayload | updateProductPayload | deleteProductPayload | ProductConnection | ProductAggregator | ProductAggregatorSum | ProductAggregatorAvg | ProductAggregatorMin | ProductAggregatorMax | ProductGroupBy | ProductConnection_id | ProductConnectionCreatedAt | ProductConnectionUpdatedAt | ProductConnectionKey | ProductConnectionVersion | ProductConnectionLastModifiedAt | ProductConnectionName | ProductConnectionAttributes | ProductConnectionDescription | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileGroupBy | UploadFileConnection_id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionHash | UploadFileConnectionSha256 | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionProvider | UploadFileConnectionPublic_id | UsersPermissionsPermission | UsersPermissionsRole | createRolePayload | updateRolePayload | deleteRolePayload | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnection_id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | UsersPermissionsUser | createUserPayload | updateUserPayload | deleteUserPayload | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnection_id | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole\n\ntype Mutation {\n  createCategory(input: createCategoryInput): createCategoryPayload\n  updateCategory(input: updateCategoryInput): updateCategoryPayload\n  deleteCategory(input: deleteCategoryInput): deleteCategoryPayload\n  createProduct(input: createProductInput): createProductPayload\n  updateProduct(input: updateProductInput): updateProductPayload\n  deleteProduct(input: deleteProductInput): deleteProductPayload\n\n  \"\"\"Create a new role\"\"\"\n  createRole(input: createRoleInput): createRolePayload\n\n  \"\"\"Update an existing role\"\"\"\n  updateRole(input: updateRoleInput): updateRolePayload\n\n  \"\"\"Delete an existing role\"\"\"\n  deleteRole(input: deleteRoleInput): deleteRolePayload\n  createUser(input: createUserInput): createUserPayload\n  updateUser(input: updateUserInput): updateUserPayload\n  deleteUser(input: deleteUserInput): deleteUserPayload\n  upload(refId: ID, ref: String, source: String, file: Upload!): UploadFile!\n}\n\ntype Product {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  key: String!\n  version: Int\n  lastModifiedAt: DateTime\n  name: String\n  attributes: JSON\n  description: String\n  categories(sort: String, limit: Int, start: Int, where: JSON): [Category]\n  images(sort: String, limit: Int, start: Int, where: JSON): [UploadFile]\n}\n\ntype ProductAggregator {\n  count: Int\n  sum: ProductAggregatorSum\n  avg: ProductAggregatorAvg\n  min: ProductAggregatorMin\n  max: ProductAggregatorMax\n}\n\ntype ProductAggregatorAvg {\n  version: Float\n}\n\ntype ProductAggregatorMax {\n  version: Float\n}\n\ntype ProductAggregatorMin {\n  version: Float\n}\n\ntype ProductAggregatorSum {\n  version: Float\n}\n\ntype ProductConnection {\n  values: [Product]\n  groupBy: ProductGroupBy\n  aggregate: ProductAggregator\n}\n\ntype ProductConnection_id {\n  key: ID\n  connection: ProductConnection\n}\n\ntype ProductConnectionAttributes {\n  key: JSON\n  connection: ProductConnection\n}\n\ntype ProductConnectionCreatedAt {\n  key: DateTime\n  connection: ProductConnection\n}\n\ntype ProductConnectionDescription {\n  key: String\n  connection: ProductConnection\n}\n\ntype ProductConnectionKey {\n  key: String\n  connection: ProductConnection\n}\n\ntype ProductConnectionLastModifiedAt {\n  key: DateTime\n  connection: ProductConnection\n}\n\ntype ProductConnectionName {\n  key: String\n  connection: ProductConnection\n}\n\ntype ProductConnectionUpdatedAt {\n  key: DateTime\n  connection: ProductConnection\n}\n\ntype ProductConnectionVersion {\n  key: Int\n  connection: ProductConnection\n}\n\ntype ProductGroupBy {\n  _id: [ProductConnection_id]\n  createdAt: [ProductConnectionCreatedAt]\n  updatedAt: [ProductConnectionUpdatedAt]\n  key: [ProductConnectionKey]\n  version: [ProductConnectionVersion]\n  lastModifiedAt: [ProductConnectionLastModifiedAt]\n  name: [ProductConnectionName]\n  attributes: [ProductConnectionAttributes]\n  description: [ProductConnectionDescription]\n}\n\ninput ProductInput {\n  key: String!\n  version: Int\n  lastModifiedAt: DateTime\n  name: String\n  categories: [ID]\n  attributes: JSON\n  images: [ID]\n  description: String\n}\n\ntype Query {\n  category(id: ID!): Category\n  categories(sort: String, limit: Int, start: Int, where: JSON): [Category]\n  categoriesConnection(sort: String, limit: Int, start: Int, where: JSON): CategoryConnection\n  product(id: ID!): Product\n  products(sort: String, limit: Int, start: Int, where: JSON): [Product]\n  productsConnection(sort: String, limit: Int, start: Int, where: JSON): ProductConnection\n  files(sort: String, limit: Int, start: Int, where: JSON): [UploadFile]\n  filesConnection(sort: String, limit: Int, start: Int, where: JSON): UploadFileConnection\n  role(id: ID!): UsersPermissionsRole\n\n  \"\"\"\n  Retrieve all the existing roles. You can't apply filters on this query.\n  \"\"\"\n  roles(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsRole]\n  rolesConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsRoleConnection\n  user(id: ID!): UsersPermissionsUser\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n  usersConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsUserConnection\n  me: UsersPermissionsMe\n}\n\ninput RoleInput {\n  name: String!\n  description: String\n  type: String\n  permissions: [ID]\n  users: [ID]\n}\n\ninput updateCategoryInput {\n  where: InputID\n  data: CategoryInput\n}\n\ntype updateCategoryPayload {\n  category: Category\n}\n\ninput updateProductInput {\n  where: InputID\n  data: ProductInput\n}\n\ntype updateProductPayload {\n  product: Product\n}\n\ninput updateRoleInput {\n  where: InputID\n  data: RoleInput\n}\n\ntype updateRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput updateUserInput {\n  where: InputID\n  data: UserInput\n}\n\ntype updateUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"\nThe `Upload` scalar type represents a file upload promise that resolves an\nobject containing `stream`, `filename`, `mimetype` and `encoding`.\n\"\"\"\nscalar Upload\n\ntype UploadFile {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related(sort: String, limit: Int, start: Int, where: JSON): [Morph]\n}\n\ntype UploadFileAggregator {\n  count: Int\n}\n\ntype UploadFileConnection {\n  values: [UploadFile]\n  groupBy: UploadFileGroupBy\n  aggregate: UploadFileAggregator\n}\n\ntype UploadFileConnection_id {\n  key: ID\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionCreatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionExt {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionHash {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionMime {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionName {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionProvider {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionPublic_id {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSha256 {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSize {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUpdatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUrl {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileGroupBy {\n  _id: [UploadFileConnection_id]\n  createdAt: [UploadFileConnectionCreatedAt]\n  updatedAt: [UploadFileConnectionUpdatedAt]\n  name: [UploadFileConnectionName]\n  hash: [UploadFileConnectionHash]\n  sha256: [UploadFileConnectionSha256]\n  ext: [UploadFileConnectionExt]\n  mime: [UploadFileConnectionMime]\n  size: [UploadFileConnectionSize]\n  url: [UploadFileConnectionUrl]\n  provider: [UploadFileConnectionProvider]\n  public_id: [UploadFileConnectionPublic_id]\n}\n\ninput UserInput {\n  username: String!\n  email: String!\n  provider: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: ID\n}\n\ntype UsersPermissionsMe {\n  _id: ID!\n  username: String!\n  email: String!\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsMeRole\n}\n\ntype UsersPermissionsMeRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n}\n\ntype UsersPermissionsPermission {\n  _id: ID!\n  type: String!\n  controller: String!\n  action: String!\n  enabled: Boolean!\n  policy: String\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n  permissions(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsPermission]\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n}\n\ntype UsersPermissionsRoleAggregator {\n  count: Int\n}\n\ntype UsersPermissionsRoleConnection {\n  values: [UsersPermissionsRole]\n  groupBy: UsersPermissionsRoleGroupBy\n  aggregate: UsersPermissionsRoleAggregator\n}\n\ntype UsersPermissionsRoleConnection_id {\n  key: ID\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionDescription {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionName {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionType {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleGroupBy {\n  _id: [UsersPermissionsRoleConnection_id]\n  name: [UsersPermissionsRoleConnectionName]\n  description: [UsersPermissionsRoleConnectionDescription]\n  type: [UsersPermissionsRoleConnectionType]\n}\n\ntype UsersPermissionsUser {\n  _id: ID!\n  username: String!\n  email: String!\n  provider: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsUserAggregator {\n  count: Int\n}\n\ntype UsersPermissionsUserConnection {\n  values: [UsersPermissionsUser]\n  groupBy: UsersPermissionsUserGroupBy\n  aggregate: UsersPermissionsUserAggregator\n}\n\ntype UsersPermissionsUserConnection_id {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionBlocked {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionConfirmed {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionEmail {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionProvider {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionRole {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionUsername {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserGroupBy {\n  _id: [UsersPermissionsUserConnection_id]\n  username: [UsersPermissionsUserConnectionUsername]\n  email: [UsersPermissionsUserConnectionEmail]\n  provider: [UsersPermissionsUserConnectionProvider]\n  confirmed: [UsersPermissionsUserConnectionConfirmed]\n  blocked: [UsersPermissionsUserConnectionBlocked]\n  role: [UsersPermissionsUserConnectionRole]\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 78,
      "containsCycle": true,
      "numDefinitions": 100
    }
  ],
  "metrics": {
    "created_at": "2018-12-12T06:58:12Z",
    "updated_at": "2018-12-13T13:10:12Z",
    "pushed_at": "2018-12-13T13:10:11Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}