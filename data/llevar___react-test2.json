{
  "repo_name": "react-test2",
  "repo_full_name": "llevar/react-test2",
  "repo_owner": "llevar",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "src/schema.graphql",
      "sha": "cff660ac7f04835af8973738c67d6a8445bf5e1c",
      "url": "https://api.github.com/repositories/107453523/contents/src/schema.graphql?ref=c241e257873a5d665cf89c54f31943a85b58a815",
      "git_url": "https://api.github.com/repositories/107453523/git/blobs/cff660ac7f04835af8973738c67d6a8445bf5e1c",
      "html_url": "https://github.com/llevar/react-test2/blob/c241e257873a5d665cf89c54f31943a85b58a815/src/schema.graphql",
      "content": "type Comment implements Node {\n  # The ID of an object\n  id: ID!\n  story: Story!\n  parent: Comment!\n  author: User!\n  comments: [Comment]\n  text: String\n  pointsCount: Int!\n  createdAt: String!\n  updatedAt: String!\n}\n\ninput CreateCommentInput {\n  storyId: ID!\n  parentId: ID\n  text: String\n  clientMutationId: String\n}\n\ntype CreateCommentPayload {\n  story: Comment\n  clientMutationId: String\n}\n\ninput CreateStoryInput {\n  title: String\n  text: String\n  url: String\n  clientMutationId: String\n}\n\ntype CreateStoryPayload {\n  story: Story\n  clientMutationId: String\n}\n\ntype Email {\n  email: String!\n  verified: Boolean!\n}\n\ntype Mutation {\n  createStory(input: CreateStoryInput!): CreateStoryPayload\n  updateStory(input: UpdateStoryInput!): UpdateStoryPayload\n  createComment(input: CreateCommentInput!): CreateCommentPayload\n  updateComment(input: UpdateCommentInput!): UpdateCommentPayload\n}\n\n# An object with an ID\ninterface Node {\n  # The id of the object.\n  id: ID!\n}\n\n# Information about pagination in a connection.\ntype PageInfo {\n  # When paginating forwards, are there more items?\n  hasNextPage: Boolean!\n\n  # When paginating backwards, are there more items?\n  hasPreviousPage: Boolean!\n\n  # When paginating backwards, the cursor to continue.\n  startCursor: String\n\n  # When paginating forwards, the cursor to continue.\n  endCursor: String\n}\n\ntype Query {\n  # Fetches an object given its ID\n  node(\n    # The ID of an object\n    id: ID!\n  ): Node\n\n  # Fetches objects given their IDs\n  nodes(\n    # The IDs of objects\n    ids: [ID!]!\n  ): [Node]!\n  me: User\n  stories(after: String, first: Int): StoryConnection\n}\n\ntype Story implements Node {\n  # The ID of an object\n  id: ID!\n  author: User!\n  title: String!\n  url: String\n  text: String\n  comments: [Comment]\n  pointsCount: Int!\n  commentsCount: Int!\n  createdAt: String!\n  updatedAt: String!\n}\n\n# A connection to a list of items.\ntype StoryConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [StoryEdge]\n  totalCount: Int!\n}\n\n# An edge in a connection.\ntype StoryEdge {\n  # The item at the end of the edge\n  node: Story\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\ninput UpdateCommentInput {\n  id: ID!\n  text: ID\n  clientMutationId: String\n}\n\ntype UpdateCommentPayload {\n  story: Comment\n  clientMutationId: String\n}\n\ninput UpdateStoryInput {\n  id: ID!\n  title: String\n  text: String\n  url: String\n  clientMutationId: String\n}\n\ntype UpdateStoryPayload {\n  story: Story\n  clientMutationId: String\n}\n\ntype User implements Node {\n  # The ID of an object\n  id: ID!\n  displayName: String\n  imageUrl: String\n  emails: [Email]\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 18
    },
    {
      "name": "schema.graphql",
      "path": "schema.graphql",
      "sha": "aa81b8e266e06250a9c3c8d713f957ad588aa06d",
      "url": "https://api.github.com/repositories/107453523/contents/schema.graphql?ref=c241e257873a5d665cf89c54f31943a85b58a815",
      "git_url": "https://api.github.com/repositories/107453523/git/blobs/aa81b8e266e06250a9c3c8d713f957ad588aa06d",
      "html_url": "https://github.com/llevar/react-test2/blob/c241e257873a5d665cf89c54f31943a85b58a815/schema.graphql",
      "content": "type Comment implements Node {\n  # The ID of an object\n  id: ID!\n  story: Story!\n  parent: Comment!\n  author: User!\n  comments: [Comment]\n  text: String\n  pointsCount: Int!\n  createdAt: String!\n  updatedAt: String!\n}\n\ninput CreateCommentInput {\n  storyId: ID!\n  parentId: ID\n  text: String\n  clientMutationId: String\n}\n\ntype CreateCommentPayload {\n  story: Comment\n  clientMutationId: String\n}\n\ninput CreateStoryInput {\n  title: String\n  text: String\n  url: String\n  clientMutationId: String\n}\n\ntype CreateStoryPayload {\n  story: Story\n  clientMutationId: String\n}\n\ntype Email {\n  email: String!\n  verified: Boolean!\n}\n\n\ntype Story implements Node {\n  # The ID of an object\n  id: ID!\n  author: User!\n  title: String!\n  url: String\n  text: String\n  comments: [Comment]\n  pointsCount: Int!\n  commentsCount: Int!\n  createdAt: String!\n  updatedAt: String!\n}\n\n# A connection to a list of items.\ntype StoryConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [StoryEdge]\n  totalCount: Int!\n}\n\n# An edge in a connection.\ntype StoryEdge {\n  # The item at the end of the edge\n  node: Story\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\ninput UpdateCommentInput {\n  id: ID!\n  text: ID\n  clientMutationId: String\n}\n\ntype UpdateCommentPayload {\n  story: Comment\n  clientMutationId: String\n}\n\ninput UpdateStoryInput {\n  id: ID!\n  title: String\n  text: String\n  url: String\n  clientMutationId: String\n}\n\ntype UpdateStoryPayload {\n  story: Story\n  clientMutationId: String\n}\n\ntype User implements Node {\n  # The ID of an object\n  id: ID!\n  displayName: String\n  imageUrl: String\n  emails: [Email]\n}\n\n\nschema {\n  query: Query\n  mutation: MyMutations\n}\n\ntype Analysis implements Node {\n  analysisId: ID!\n  configId: String\n  analysisName: String\n  startDate: DateTime\n  createdDate: DateTime\n  lastUpdatedDate: DateTime\n  configuration: Configuration\n  analysisRunCollection(before: String, after: String, first: Int, last: Int): AnalysisRunConnection\n  id: ID!\n}\n\ntype AnalysisConnection {\n  pageInfo: PageInfo!\n  edges: [AnalysisEdge]!\n}\n\ntype AnalysisEdge {\n  node: Analysis\n  cursor: String!\n}\n\ninput AnalysisInput {\n  analysisName: String\n  startDate: String\n  configId: ID!\n}\n\ntype AnalysisRun implements Node {\n  analysisRunId: ID!\n  analysisId: Int!\n  configId: String\n  runStatus: Int!\n  workflowId: Int!\n  createdDate: DateTime\n  runStartDate: DateTime\n  runEndDate: DateTime\n  lastUpdatedDate: DateTime\n  runErrorCode: Int\n  workflow: Workflow\n  analysis: Analysis\n  configuration: Configuration\n  id: ID!\n}\n\ntype AnalysisRunConnection {\n  pageInfo: PageInfo!\n  edges: [AnalysisRunEdge]!\n}\n\ntype AnalysisRunEdge {\n  node: AnalysisRun\n  cursor: String!\n}\n\ninput AnalysisRunInput {\n  workflowId: Int!\n  analysisId: Int!\n  configId: ID!\n}\n\ninput ConfigInput {\n  configId: ID!\n  config: String!\n}\n\ntype Configuration implements Node {\n  configId: String!\n  config: JSONString\n  createdDate: DateTime\n  lastUpdatedDate: DateTime\n  analysisRunCollection(before: String, after: String, first: Int, last: Int): AnalysisRunConnection\n  workflowCollection(before: String, after: String, first: Int, last: Int): WorkflowConnection\n  analysisCollection(before: String, after: String, first: Int, last: Int): AnalysisConnection\n  id: ID!\n}\n\ninput CreateAnalysisInput {\n  myAnalysis: AnalysisInput\n  clientMutationId: String\n}\n\ntype CreateAnalysisPayload {\n  ok: Boolean\n  analysis: Analysis\n  clientMutationId: String\n}\n\ninput CreateAnalysisRunInput {\n  myAnalysisRun: AnalysisRunInput\n  clientMutationId: String\n}\n\ntype CreateAnalysisRunPayload {\n  ok: Boolean\n  analysisRun: AnalysisRun\n  clientMutationId: String\n}\n\ninput CreateConfigurationInput {\n  myConfig: ConfigInput\n  clientMutationId: String\n}\n\ntype CreateConfigurationPayload {\n  ok: Boolean\n  config: Configuration\n  clientMutationId: String\n}\n\ninput CreateWorkflowInput {\n  myWorkflow: WorkflowInput\n  clientMutationId: String\n}\n\ntype CreateWorkflowPayload {\n  ok: Boolean\n  workflow: Workflow\n  clientMutationId: String\n}\n\nscalar DateTime\n\nscalar JSONString\n\ntype MyMutations {\n  createConfig(input: CreateConfigurationInput!): CreateConfigurationPayload\n  createWorkflow(input: CreateWorkflowInput!): CreateWorkflowPayload\n  createAnalysis(input: CreateAnalysisInput!): CreateAnalysisPayload\n  createAnalysisRun(input: CreateAnalysisRunInput!): CreateAnalysisRunPayload\n\n  createStory(input: CreateStoryInput!): CreateStoryPayload\n  updateStory(input: UpdateStoryInput!): UpdateStoryPayload\n  createComment(input: CreateCommentInput!): CreateCommentPayload\n  updateComment(input: UpdateCommentInput!): UpdateCommentPayload\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  node(id: ID!): Node\n  allWorkflows(before: String, after: String, first: Int, last: Int): WorkflowConnection\n  allAnalyses(before: String, after: String, first: Int, last: Int): AnalysisConnection\n  allAnalysisRuns(before: String, after: String, first: Int, last: Int): AnalysisRunConnection\n  workflow: Workflow\n  analysis: Analysis\n  analysisRun: AnalysisRun\n  configuration: Configuration\n\n    # Fetches objects given their IDs\n  nodes(\n    # The IDs of objects\n    ids: [ID!]!\n  ): [Node]!\n  me: User\n  stories(after: String, first: Int): StoryConnection\n}\n\ntype Workflow implements Node {\n  workflowId: ID!\n  workflowName: String\n  workflowVersion: String\n  configId: String\n  createdDate: DateTime\n  lastUpdatedDate: DateTime\n  configuration: Configuration\n  analysisRunCollection(before: String, after: String, first: Int, last: Int): AnalysisRunConnection\n  id: ID!\n}\n\ntype WorkflowConnection {\n  pageInfo: PageInfo!\n  edges: [WorkflowEdge]!\n}\n\ntype WorkflowEdge {\n  node: Workflow\n  cursor: String!\n}\n\ninput WorkflowInput {\n  workflowName: String\n  workflowVersion: String\n  configId: ID!\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 27,
      "containsCycle": true,
      "numDefinitions": 43
    }
  ],
  "metrics": {
    "created_at": "2017-10-18T19:28:43Z",
    "updated_at": "2017-10-18T19:29:33Z",
    "pushed_at": "2017-11-12T19:46:57Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}