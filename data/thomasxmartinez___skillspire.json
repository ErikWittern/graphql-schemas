{
  "repo_name": "skillspire",
  "repo_full_name": "thomasxmartinez/skillspire",
  "repo_owner": "thomasxmartinez",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "teachstuff/hackernews-react-apollo/server/src/generated/prisma.graphql",
      "sha": "427d039043d00a0c0f0e49e3c530ce8550401ed4",
      "url": "https://api.github.com/repositories/126120122/contents/teachstuff/hackernews-react-apollo/server/src/generated/prisma.graphql?ref=d280b648b45d1763ad0d9dff94f0c637f75bab30",
      "git_url": "https://api.github.com/repositories/126120122/git/blobs/427d039043d00a0c0f0e49e3c530ce8550401ed4",
      "html_url": "https://github.com/thomasxmartinez/skillspire/blob/d280b648b45d1763ad0d9dff94f0c637f75bab30/teachstuff/hackernews-react-apollo/server/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Link implements Node {\n  id: ID!\n  createdAt: DateTime!\n  description: String!\n  url: String!\n  postedBy(where: UserWhereInput): User\n  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n  email: String!\n  password: String!\n  links(where: LinkWhereInput, orderBy: LinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Link!]\n  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]\n}\n\ntype Vote implements Node {\n  id: ID!\n  link(where: LinkWhereInput): Link!\n  user(where: UserWhereInput): User!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateLink {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype AggregateVote {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar DateTime\n\ntype LinkConnection {\n  pageInfo: PageInfo!\n  edges: [LinkEdge]!\n  aggregate: AggregateLink!\n}\n\ninput LinkCreateInput {\n  description: String!\n  url: String!\n  postedBy: UserCreateOneWithoutLinksInput\n  votes: VoteCreateManyWithoutLinkInput\n}\n\ninput LinkCreateManyWithoutPostedByInput {\n  create: [LinkCreateWithoutPostedByInput!]\n  connect: [LinkWhereUniqueInput!]\n}\n\ninput LinkCreateOneWithoutVotesInput {\n  create: LinkCreateWithoutVotesInput\n  connect: LinkWhereUniqueInput\n}\n\ninput LinkCreateWithoutPostedByInput {\n  description: String!\n  url: String!\n  votes: VoteCreateManyWithoutLinkInput\n}\n\ninput LinkCreateWithoutVotesInput {\n  description: String!\n  url: String!\n  postedBy: UserCreateOneWithoutLinksInput\n}\n\ntype LinkEdge {\n  node: Link!\n  cursor: String!\n}\n\nenum LinkOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  description_ASC\n  description_DESC\n  url_ASC\n  url_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype LinkPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  description: String!\n  url: String!\n}\n\ntype LinkSubscriptionPayload {\n  mutation: MutationType!\n  node: Link\n  updatedFields: [String!]\n  previousValues: LinkPreviousValues\n}\n\ninput LinkSubscriptionWhereInput {\n  AND: [LinkSubscriptionWhereInput!]\n  OR: [LinkSubscriptionWhereInput!]\n  NOT: [LinkSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: LinkWhereInput\n}\n\ninput LinkUpdateInput {\n  description: String\n  url: String\n  postedBy: UserUpdateOneWithoutLinksInput\n  votes: VoteUpdateManyWithoutLinkInput\n}\n\ninput LinkUpdateManyWithoutPostedByInput {\n  create: [LinkCreateWithoutPostedByInput!]\n  connect: [LinkWhereUniqueInput!]\n  disconnect: [LinkWhereUniqueInput!]\n  delete: [LinkWhereUniqueInput!]\n  update: [LinkUpdateWithWhereUniqueWithoutPostedByInput!]\n  upsert: [LinkUpsertWithWhereUniqueWithoutPostedByInput!]\n}\n\ninput LinkUpdateOneWithoutVotesInput {\n  create: LinkCreateWithoutVotesInput\n  connect: LinkWhereUniqueInput\n  delete: Boolean\n  update: LinkUpdateWithoutVotesDataInput\n  upsert: LinkUpsertWithoutVotesInput\n}\n\ninput LinkUpdateWithoutPostedByDataInput {\n  description: String\n  url: String\n  votes: VoteUpdateManyWithoutLinkInput\n}\n\ninput LinkUpdateWithoutVotesDataInput {\n  description: String\n  url: String\n  postedBy: UserUpdateOneWithoutLinksInput\n}\n\ninput LinkUpdateWithWhereUniqueWithoutPostedByInput {\n  where: LinkWhereUniqueInput!\n  data: LinkUpdateWithoutPostedByDataInput!\n}\n\ninput LinkUpsertWithoutVotesInput {\n  update: LinkUpdateWithoutVotesDataInput!\n  create: LinkCreateWithoutVotesInput!\n}\n\ninput LinkUpsertWithWhereUniqueWithoutPostedByInput {\n  where: LinkWhereUniqueInput!\n  update: LinkUpdateWithoutPostedByDataInput!\n  create: LinkCreateWithoutPostedByInput!\n}\n\ninput LinkWhereInput {\n  AND: [LinkWhereInput!]\n  OR: [LinkWhereInput!]\n  NOT: [LinkWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  url: String\n  url_not: String\n  url_in: [String!]\n  url_not_in: [String!]\n  url_lt: String\n  url_lte: String\n  url_gt: String\n  url_gte: String\n  url_contains: String\n  url_not_contains: String\n  url_starts_with: String\n  url_not_starts_with: String\n  url_ends_with: String\n  url_not_ends_with: String\n  postedBy: UserWhereInput\n  votes_every: VoteWhereInput\n  votes_some: VoteWhereInput\n  votes_none: VoteWhereInput\n}\n\ninput LinkWhereUniqueInput {\n  id: ID\n}\n\nscalar Long\n\ntype Mutation {\n  createVote(data: VoteCreateInput!): Vote!\n  createLink(data: LinkCreateInput!): Link!\n  createUser(data: UserCreateInput!): User!\n  updateVote(data: VoteUpdateInput!, where: VoteWhereUniqueInput!): Vote\n  updateLink(data: LinkUpdateInput!, where: LinkWhereUniqueInput!): Link\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteVote(where: VoteWhereUniqueInput!): Vote\n  deleteLink(where: LinkWhereUniqueInput!): Link\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertVote(where: VoteWhereUniqueInput!, create: VoteCreateInput!, update: VoteUpdateInput!): Vote!\n  upsertLink(where: LinkWhereUniqueInput!, create: LinkCreateInput!, update: LinkUpdateInput!): Link!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyVotes(data: VoteUpdateInput!, where: VoteWhereInput): BatchPayload!\n  updateManyLinks(data: LinkUpdateInput!, where: LinkWhereInput): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  deleteManyVotes(where: VoteWhereInput): BatchPayload!\n  deleteManyLinks(where: LinkWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote]!\n  links(where: LinkWhereInput, orderBy: LinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Link]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  vote(where: VoteWhereUniqueInput!): Vote\n  link(where: LinkWhereUniqueInput!): Link\n  user(where: UserWhereUniqueInput!): User\n  votesConnection(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VoteConnection!\n  linksConnection(where: LinkWhereInput, orderBy: LinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LinkConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  vote(where: VoteSubscriptionWhereInput): VoteSubscriptionPayload\n  link(where: LinkSubscriptionWhereInput): LinkSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n  email: String!\n  password: String!\n  links: LinkCreateManyWithoutPostedByInput\n  votes: VoteCreateManyWithoutUserInput\n}\n\ninput UserCreateOneWithoutLinksInput {\n  create: UserCreateWithoutLinksInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutVotesInput {\n  create: UserCreateWithoutVotesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutLinksInput {\n  name: String!\n  email: String!\n  password: String!\n  votes: VoteCreateManyWithoutUserInput\n}\n\ninput UserCreateWithoutVotesInput {\n  name: String!\n  email: String!\n  password: String!\n  links: LinkCreateManyWithoutPostedByInput\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n  email: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  name: String\n  email: String\n  password: String\n  links: LinkUpdateManyWithoutPostedByInput\n  votes: VoteUpdateManyWithoutUserInput\n}\n\ninput UserUpdateOneWithoutLinksInput {\n  create: UserCreateWithoutLinksInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutLinksDataInput\n  upsert: UserUpsertWithoutLinksInput\n}\n\ninput UserUpdateOneWithoutVotesInput {\n  create: UserCreateWithoutVotesInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutVotesDataInput\n  upsert: UserUpsertWithoutVotesInput\n}\n\ninput UserUpdateWithoutLinksDataInput {\n  name: String\n  email: String\n  password: String\n  votes: VoteUpdateManyWithoutUserInput\n}\n\ninput UserUpdateWithoutVotesDataInput {\n  name: String\n  email: String\n  password: String\n  links: LinkUpdateManyWithoutPostedByInput\n}\n\ninput UserUpsertWithoutLinksInput {\n  update: UserUpdateWithoutLinksDataInput!\n  create: UserCreateWithoutLinksInput!\n}\n\ninput UserUpsertWithoutVotesInput {\n  update: UserUpdateWithoutVotesDataInput!\n  create: UserCreateWithoutVotesInput!\n}\n\ninput UserWhereInput {\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n  links_every: LinkWhereInput\n  links_some: LinkWhereInput\n  links_none: LinkWhereInput\n  votes_every: VoteWhereInput\n  votes_some: VoteWhereInput\n  votes_none: VoteWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n\ntype VoteConnection {\n  pageInfo: PageInfo!\n  edges: [VoteEdge]!\n  aggregate: AggregateVote!\n}\n\ninput VoteCreateInput {\n  link: LinkCreateOneWithoutVotesInput!\n  user: UserCreateOneWithoutVotesInput!\n}\n\ninput VoteCreateManyWithoutLinkInput {\n  create: [VoteCreateWithoutLinkInput!]\n  connect: [VoteWhereUniqueInput!]\n}\n\ninput VoteCreateManyWithoutUserInput {\n  create: [VoteCreateWithoutUserInput!]\n  connect: [VoteWhereUniqueInput!]\n}\n\ninput VoteCreateWithoutLinkInput {\n  user: UserCreateOneWithoutVotesInput!\n}\n\ninput VoteCreateWithoutUserInput {\n  link: LinkCreateOneWithoutVotesInput!\n}\n\ntype VoteEdge {\n  node: Vote!\n  cursor: String!\n}\n\nenum VoteOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype VotePreviousValues {\n  id: ID!\n}\n\ntype VoteSubscriptionPayload {\n  mutation: MutationType!\n  node: Vote\n  updatedFields: [String!]\n  previousValues: VotePreviousValues\n}\n\ninput VoteSubscriptionWhereInput {\n  AND: [VoteSubscriptionWhereInput!]\n  OR: [VoteSubscriptionWhereInput!]\n  NOT: [VoteSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: VoteWhereInput\n}\n\ninput VoteUpdateInput {\n  link: LinkUpdateOneWithoutVotesInput\n  user: UserUpdateOneWithoutVotesInput\n}\n\ninput VoteUpdateManyWithoutLinkInput {\n  create: [VoteCreateWithoutLinkInput!]\n  connect: [VoteWhereUniqueInput!]\n  disconnect: [VoteWhereUniqueInput!]\n  delete: [VoteWhereUniqueInput!]\n  update: [VoteUpdateWithWhereUniqueWithoutLinkInput!]\n  upsert: [VoteUpsertWithWhereUniqueWithoutLinkInput!]\n}\n\ninput VoteUpdateManyWithoutUserInput {\n  create: [VoteCreateWithoutUserInput!]\n  connect: [VoteWhereUniqueInput!]\n  disconnect: [VoteWhereUniqueInput!]\n  delete: [VoteWhereUniqueInput!]\n  update: [VoteUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [VoteUpsertWithWhereUniqueWithoutUserInput!]\n}\n\ninput VoteUpdateWithoutLinkDataInput {\n  user: UserUpdateOneWithoutVotesInput\n}\n\ninput VoteUpdateWithoutUserDataInput {\n  link: LinkUpdateOneWithoutVotesInput\n}\n\ninput VoteUpdateWithWhereUniqueWithoutLinkInput {\n  where: VoteWhereUniqueInput!\n  data: VoteUpdateWithoutLinkDataInput!\n}\n\ninput VoteUpdateWithWhereUniqueWithoutUserInput {\n  where: VoteWhereUniqueInput!\n  data: VoteUpdateWithoutUserDataInput!\n}\n\ninput VoteUpsertWithWhereUniqueWithoutLinkInput {\n  where: VoteWhereUniqueInput!\n  update: VoteUpdateWithoutLinkDataInput!\n  create: VoteCreateWithoutLinkInput!\n}\n\ninput VoteUpsertWithWhereUniqueWithoutUserInput {\n  where: VoteWhereUniqueInput!\n  update: VoteUpdateWithoutUserDataInput!\n  create: VoteCreateWithoutUserInput!\n}\n\ninput VoteWhereInput {\n  AND: [VoteWhereInput!]\n  OR: [VoteWhereInput!]\n  NOT: [VoteWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  link: LinkWhereInput\n  user: UserWhereInput\n}\n\ninput VoteWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 78
    },
    {
      "name": "prisma.graphql",
      "path": "thienhoang/class/6.27/hackernews-react-apollo/server/src/generated/prisma.graphql",
      "sha": "427d039043d00a0c0f0e49e3c530ce8550401ed4",
      "url": "https://api.github.com/repositories/126120122/contents/thienhoang/class/6.27/hackernews-react-apollo/server/src/generated/prisma.graphql?ref=d280b648b45d1763ad0d9dff94f0c637f75bab30",
      "git_url": "https://api.github.com/repositories/126120122/git/blobs/427d039043d00a0c0f0e49e3c530ce8550401ed4",
      "html_url": "https://github.com/thomasxmartinez/skillspire/blob/d280b648b45d1763ad0d9dff94f0c637f75bab30/thienhoang/class/6.27/hackernews-react-apollo/server/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Link implements Node {\n  id: ID!\n  createdAt: DateTime!\n  description: String!\n  url: String!\n  postedBy(where: UserWhereInput): User\n  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n  email: String!\n  password: String!\n  links(where: LinkWhereInput, orderBy: LinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Link!]\n  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]\n}\n\ntype Vote implements Node {\n  id: ID!\n  link(where: LinkWhereInput): Link!\n  user(where: UserWhereInput): User!\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateLink {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype AggregateVote {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar DateTime\n\ntype LinkConnection {\n  pageInfo: PageInfo!\n  edges: [LinkEdge]!\n  aggregate: AggregateLink!\n}\n\ninput LinkCreateInput {\n  description: String!\n  url: String!\n  postedBy: UserCreateOneWithoutLinksInput\n  votes: VoteCreateManyWithoutLinkInput\n}\n\ninput LinkCreateManyWithoutPostedByInput {\n  create: [LinkCreateWithoutPostedByInput!]\n  connect: [LinkWhereUniqueInput!]\n}\n\ninput LinkCreateOneWithoutVotesInput {\n  create: LinkCreateWithoutVotesInput\n  connect: LinkWhereUniqueInput\n}\n\ninput LinkCreateWithoutPostedByInput {\n  description: String!\n  url: String!\n  votes: VoteCreateManyWithoutLinkInput\n}\n\ninput LinkCreateWithoutVotesInput {\n  description: String!\n  url: String!\n  postedBy: UserCreateOneWithoutLinksInput\n}\n\ntype LinkEdge {\n  node: Link!\n  cursor: String!\n}\n\nenum LinkOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  description_ASC\n  description_DESC\n  url_ASC\n  url_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype LinkPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  description: String!\n  url: String!\n}\n\ntype LinkSubscriptionPayload {\n  mutation: MutationType!\n  node: Link\n  updatedFields: [String!]\n  previousValues: LinkPreviousValues\n}\n\ninput LinkSubscriptionWhereInput {\n  AND: [LinkSubscriptionWhereInput!]\n  OR: [LinkSubscriptionWhereInput!]\n  NOT: [LinkSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: LinkWhereInput\n}\n\ninput LinkUpdateInput {\n  description: String\n  url: String\n  postedBy: UserUpdateOneWithoutLinksInput\n  votes: VoteUpdateManyWithoutLinkInput\n}\n\ninput LinkUpdateManyWithoutPostedByInput {\n  create: [LinkCreateWithoutPostedByInput!]\n  connect: [LinkWhereUniqueInput!]\n  disconnect: [LinkWhereUniqueInput!]\n  delete: [LinkWhereUniqueInput!]\n  update: [LinkUpdateWithWhereUniqueWithoutPostedByInput!]\n  upsert: [LinkUpsertWithWhereUniqueWithoutPostedByInput!]\n}\n\ninput LinkUpdateOneWithoutVotesInput {\n  create: LinkCreateWithoutVotesInput\n  connect: LinkWhereUniqueInput\n  delete: Boolean\n  update: LinkUpdateWithoutVotesDataInput\n  upsert: LinkUpsertWithoutVotesInput\n}\n\ninput LinkUpdateWithoutPostedByDataInput {\n  description: String\n  url: String\n  votes: VoteUpdateManyWithoutLinkInput\n}\n\ninput LinkUpdateWithoutVotesDataInput {\n  description: String\n  url: String\n  postedBy: UserUpdateOneWithoutLinksInput\n}\n\ninput LinkUpdateWithWhereUniqueWithoutPostedByInput {\n  where: LinkWhereUniqueInput!\n  data: LinkUpdateWithoutPostedByDataInput!\n}\n\ninput LinkUpsertWithoutVotesInput {\n  update: LinkUpdateWithoutVotesDataInput!\n  create: LinkCreateWithoutVotesInput!\n}\n\ninput LinkUpsertWithWhereUniqueWithoutPostedByInput {\n  where: LinkWhereUniqueInput!\n  update: LinkUpdateWithoutPostedByDataInput!\n  create: LinkCreateWithoutPostedByInput!\n}\n\ninput LinkWhereInput {\n  AND: [LinkWhereInput!]\n  OR: [LinkWhereInput!]\n  NOT: [LinkWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  url: String\n  url_not: String\n  url_in: [String!]\n  url_not_in: [String!]\n  url_lt: String\n  url_lte: String\n  url_gt: String\n  url_gte: String\n  url_contains: String\n  url_not_contains: String\n  url_starts_with: String\n  url_not_starts_with: String\n  url_ends_with: String\n  url_not_ends_with: String\n  postedBy: UserWhereInput\n  votes_every: VoteWhereInput\n  votes_some: VoteWhereInput\n  votes_none: VoteWhereInput\n}\n\ninput LinkWhereUniqueInput {\n  id: ID\n}\n\nscalar Long\n\ntype Mutation {\n  createVote(data: VoteCreateInput!): Vote!\n  createLink(data: LinkCreateInput!): Link!\n  createUser(data: UserCreateInput!): User!\n  updateVote(data: VoteUpdateInput!, where: VoteWhereUniqueInput!): Vote\n  updateLink(data: LinkUpdateInput!, where: LinkWhereUniqueInput!): Link\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteVote(where: VoteWhereUniqueInput!): Vote\n  deleteLink(where: LinkWhereUniqueInput!): Link\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertVote(where: VoteWhereUniqueInput!, create: VoteCreateInput!, update: VoteUpdateInput!): Vote!\n  upsertLink(where: LinkWhereUniqueInput!, create: LinkCreateInput!, update: LinkUpdateInput!): Link!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyVotes(data: VoteUpdateInput!, where: VoteWhereInput): BatchPayload!\n  updateManyLinks(data: LinkUpdateInput!, where: LinkWhereInput): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  deleteManyVotes(where: VoteWhereInput): BatchPayload!\n  deleteManyLinks(where: LinkWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote]!\n  links(where: LinkWhereInput, orderBy: LinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Link]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  vote(where: VoteWhereUniqueInput!): Vote\n  link(where: LinkWhereUniqueInput!): Link\n  user(where: UserWhereUniqueInput!): User\n  votesConnection(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VoteConnection!\n  linksConnection(where: LinkWhereInput, orderBy: LinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LinkConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  vote(where: VoteSubscriptionWhereInput): VoteSubscriptionPayload\n  link(where: LinkSubscriptionWhereInput): LinkSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n  email: String!\n  password: String!\n  links: LinkCreateManyWithoutPostedByInput\n  votes: VoteCreateManyWithoutUserInput\n}\n\ninput UserCreateOneWithoutLinksInput {\n  create: UserCreateWithoutLinksInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutVotesInput {\n  create: UserCreateWithoutVotesInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutLinksInput {\n  name: String!\n  email: String!\n  password: String!\n  votes: VoteCreateManyWithoutUserInput\n}\n\ninput UserCreateWithoutVotesInput {\n  name: String!\n  email: String!\n  password: String!\n  links: LinkCreateManyWithoutPostedByInput\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n  email: String!\n  password: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  name: String\n  email: String\n  password: String\n  links: LinkUpdateManyWithoutPostedByInput\n  votes: VoteUpdateManyWithoutUserInput\n}\n\ninput UserUpdateOneWithoutLinksInput {\n  create: UserCreateWithoutLinksInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutLinksDataInput\n  upsert: UserUpsertWithoutLinksInput\n}\n\ninput UserUpdateOneWithoutVotesInput {\n  create: UserCreateWithoutVotesInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutVotesDataInput\n  upsert: UserUpsertWithoutVotesInput\n}\n\ninput UserUpdateWithoutLinksDataInput {\n  name: String\n  email: String\n  password: String\n  votes: VoteUpdateManyWithoutUserInput\n}\n\ninput UserUpdateWithoutVotesDataInput {\n  name: String\n  email: String\n  password: String\n  links: LinkUpdateManyWithoutPostedByInput\n}\n\ninput UserUpsertWithoutLinksInput {\n  update: UserUpdateWithoutLinksDataInput!\n  create: UserCreateWithoutLinksInput!\n}\n\ninput UserUpsertWithoutVotesInput {\n  update: UserUpdateWithoutVotesDataInput!\n  create: UserCreateWithoutVotesInput!\n}\n\ninput UserWhereInput {\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n  links_every: LinkWhereInput\n  links_some: LinkWhereInput\n  links_none: LinkWhereInput\n  votes_every: VoteWhereInput\n  votes_some: VoteWhereInput\n  votes_none: VoteWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n\ntype VoteConnection {\n  pageInfo: PageInfo!\n  edges: [VoteEdge]!\n  aggregate: AggregateVote!\n}\n\ninput VoteCreateInput {\n  link: LinkCreateOneWithoutVotesInput!\n  user: UserCreateOneWithoutVotesInput!\n}\n\ninput VoteCreateManyWithoutLinkInput {\n  create: [VoteCreateWithoutLinkInput!]\n  connect: [VoteWhereUniqueInput!]\n}\n\ninput VoteCreateManyWithoutUserInput {\n  create: [VoteCreateWithoutUserInput!]\n  connect: [VoteWhereUniqueInput!]\n}\n\ninput VoteCreateWithoutLinkInput {\n  user: UserCreateOneWithoutVotesInput!\n}\n\ninput VoteCreateWithoutUserInput {\n  link: LinkCreateOneWithoutVotesInput!\n}\n\ntype VoteEdge {\n  node: Vote!\n  cursor: String!\n}\n\nenum VoteOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype VotePreviousValues {\n  id: ID!\n}\n\ntype VoteSubscriptionPayload {\n  mutation: MutationType!\n  node: Vote\n  updatedFields: [String!]\n  previousValues: VotePreviousValues\n}\n\ninput VoteSubscriptionWhereInput {\n  AND: [VoteSubscriptionWhereInput!]\n  OR: [VoteSubscriptionWhereInput!]\n  NOT: [VoteSubscriptionWhereInput!]\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: VoteWhereInput\n}\n\ninput VoteUpdateInput {\n  link: LinkUpdateOneWithoutVotesInput\n  user: UserUpdateOneWithoutVotesInput\n}\n\ninput VoteUpdateManyWithoutLinkInput {\n  create: [VoteCreateWithoutLinkInput!]\n  connect: [VoteWhereUniqueInput!]\n  disconnect: [VoteWhereUniqueInput!]\n  delete: [VoteWhereUniqueInput!]\n  update: [VoteUpdateWithWhereUniqueWithoutLinkInput!]\n  upsert: [VoteUpsertWithWhereUniqueWithoutLinkInput!]\n}\n\ninput VoteUpdateManyWithoutUserInput {\n  create: [VoteCreateWithoutUserInput!]\n  connect: [VoteWhereUniqueInput!]\n  disconnect: [VoteWhereUniqueInput!]\n  delete: [VoteWhereUniqueInput!]\n  update: [VoteUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [VoteUpsertWithWhereUniqueWithoutUserInput!]\n}\n\ninput VoteUpdateWithoutLinkDataInput {\n  user: UserUpdateOneWithoutVotesInput\n}\n\ninput VoteUpdateWithoutUserDataInput {\n  link: LinkUpdateOneWithoutVotesInput\n}\n\ninput VoteUpdateWithWhereUniqueWithoutLinkInput {\n  where: VoteWhereUniqueInput!\n  data: VoteUpdateWithoutLinkDataInput!\n}\n\ninput VoteUpdateWithWhereUniqueWithoutUserInput {\n  where: VoteWhereUniqueInput!\n  data: VoteUpdateWithoutUserDataInput!\n}\n\ninput VoteUpsertWithWhereUniqueWithoutLinkInput {\n  where: VoteWhereUniqueInput!\n  update: VoteUpdateWithoutLinkDataInput!\n  create: VoteCreateWithoutLinkInput!\n}\n\ninput VoteUpsertWithWhereUniqueWithoutUserInput {\n  where: VoteWhereUniqueInput!\n  update: VoteUpdateWithoutUserDataInput!\n  create: VoteCreateWithoutUserInput!\n}\n\ninput VoteWhereInput {\n  AND: [VoteWhereInput!]\n  OR: [VoteWhereInput!]\n  NOT: [VoteWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  link: LinkWhereInput\n  user: UserWhereInput\n}\n\ninput VoteWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 78
    },
    {
      "name": "prisma.graphql",
      "path": "thienhoang/class/6.20/my-yoga-server/src/generated/prisma.graphql",
      "sha": "09735c47377d68164faf4a8555a844f4ee507bc1",
      "url": "https://api.github.com/repositories/126120122/contents/thienhoang/class/6.20/my-yoga-server/src/generated/prisma.graphql?ref=d280b648b45d1763ad0d9dff94f0c637f75bab30",
      "git_url": "https://api.github.com/repositories/126120122/git/blobs/09735c47377d68164faf4a8555a844f4ee507bc1",
      "html_url": "https://github.com/thomasxmartinez/skillspire/blob/d280b648b45d1763ad0d9dff94f0c637f75bab30/thienhoang/class/6.20/my-yoga-server/src/generated/prisma.graphql",
      "content": "# source: https://us1.prisma.sh/thien-hoang-c6dd1a/testPrisma/stagePrisma\n# timestamp: Wed Jun 20 2018 20:04:20 GMT-0700 (PDT)\n\ntype AggregatePost {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  createPost(data: PostCreateInput!): Post!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  deleteUser(where: UserWhereUniqueInput!): User\n  deletePost(where: PostWhereUniqueInput!): Post\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  updateManyPosts(data: PostUpdateInput!, where: PostWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyPosts(where: PostWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Post implements Node {\n  id: ID!\n  title: String!\n  content: String!\n  published: Boolean!\n  author(where: UserWhereInput): User!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PostConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  title: String!\n  content: String!\n  published: Boolean\n  author: UserCreateOneWithoutPostsInput!\n}\n\ninput PostCreateManyWithoutAuthorInput {\n  create: [PostCreateWithoutAuthorInput!]\n  connect: [PostWhereUniqueInput!]\n}\n\ninput PostCreateWithoutAuthorInput {\n  title: String!\n  content: String!\n  published: Boolean\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PostEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Post!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  title_ASC\n  title_DESC\n  content_ASC\n  content_DESC\n  published_ASC\n  published_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  title: String!\n  content: String!\n  published: Boolean!\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PostSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PostSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PostSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n}\n\ninput PostUpdateInput {\n  title: String\n  content: String\n  published: Boolean\n  author: UserUpdateOneWithoutPostsInput\n}\n\ninput PostUpdateManyWithoutAuthorInput {\n  create: [PostCreateWithoutAuthorInput!]\n  connect: [PostWhereUniqueInput!]\n  disconnect: [PostWhereUniqueInput!]\n  delete: [PostWhereUniqueInput!]\n  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]\n  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]\n}\n\ninput PostUpdateWithoutAuthorDataInput {\n  title: String\n  content: String\n  published: Boolean\n}\n\ninput PostUpdateWithWhereUniqueWithoutAuthorInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutAuthorDataInput!\n}\n\ninput PostUpsertWithWhereUniqueWithoutAuthorInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutAuthorDataInput!\n  create: PostCreateWithoutAuthorInput!\n}\n\ninput PostWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PostWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PostWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PostWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  title: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  title_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  title_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  title_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  title_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  title_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  title_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  title_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  title_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  title_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  title_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  title_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  title_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  title_not_ends_with: String\n  content: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  content_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  content_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  content_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  content_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  content_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  content_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  content_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  content_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  content_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  content_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  content_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  content_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  content_not_ends_with: String\n  published: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  published_not: Boolean\n  author: UserWhereInput\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  user(where: UserWhereUniqueInput!): User\n  post(where: PostWhereUniqueInput!): Post\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n  posts: PostCreateManyWithoutAuthorInput\n}\n\ninput UserCreateOneWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutPostsInput {\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  name: String\n  posts: PostUpdateManyWithoutAuthorInput\n}\n\ninput UserUpdateOneWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutPostsDataInput\n  upsert: UserUpsertWithoutPostsInput\n}\n\ninput UserUpdateWithoutPostsDataInput {\n  name: String\n}\n\ninput UserUpsertWithoutPostsInput {\n  update: UserUpdateWithoutPostsDataInput!\n  create: UserCreateWithoutPostsInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  posts_every: PostWhereInput\n  posts_some: PostWhereInput\n  posts_none: PostWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 43
    },
    {
      "name": "schema.graphql",
      "path": "teachstuff/newsfeed/src/schema.graphql",
      "sha": "804899a85aa0ae4b59acf0c656961cc2dce050ca",
      "url": "https://api.github.com/repositories/126120122/contents/teachstuff/newsfeed/src/schema.graphql?ref=d7e467d77f0fb45854fb2cd24b7349d4b68f5297",
      "git_url": "https://api.github.com/repositories/126120122/git/blobs/804899a85aa0ae4b59acf0c656961cc2dce050ca",
      "html_url": "https://github.com/thomasxmartinez/skillspire/blob/d7e467d77f0fb45854fb2cd24b7349d4b68f5297/teachstuff/newsfeed/src/schema.graphql",
      "content": "type Query {\n    info: String!\n    feed: [Link!]!\n}\n\ntype Mutation {\n    post(url: String!, description: String!): Link!\n}\ntype Link {\n    id: ID!\n    description: String!\n    url: String!\n}",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 3
    },
    {
      "name": "schema.graphql",
      "path": "thienhoang/class/class6.9/skillsapp/src/schema.graphql",
      "sha": "6aea73091453c3e03f33f2d9462460cac52b8e0d",
      "url": "https://api.github.com/repositories/126120122/contents/thienhoang/class/class6.9/skillsapp/src/schema.graphql?ref=d280b648b45d1763ad0d9dff94f0c637f75bab30",
      "git_url": "https://api.github.com/repositories/126120122/git/blobs/6aea73091453c3e03f33f2d9462460cac52b8e0d",
      "html_url": "https://github.com/thomasxmartinez/skillspire/blob/d280b648b45d1763ad0d9dff94f0c637f75bab30/thienhoang/class/class6.9/skillsapp/src/schema.graphql",
      "content": "type Query {\n    info: String!\n    feed: [Link!]\n}\n\ntype Mutation {\n    post(url: String!, description: String!): Link!\n}\n\ntype Link {\n    id: ID!\n    description: String!\n    url: String!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 3
    }
  ],
  "metrics": {
    "created_at": "2018-03-21T03:49:21Z",
    "updated_at": "2019-05-01T19:56:14Z",
    "pushed_at": "2019-05-01T19:56:13Z",
    "issues": 0,
    "watchers": 2,
    "fork_count": 4,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 7,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 7,
    "releases": 0,
    "stargazers": 2
  }
}