{
  "repo_name": "panel-pwaexpertsio",
  "repo_full_name": "pwaexpertsio/panel-pwaexpertsio",
  "repo_owner": "PWAExpertsIO",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "backend/plugins/graphql/config/generated/schema.graphql",
      "sha": "486fb9644498a5ac918070d08db5c73de3cdd87b",
      "url": "https://api.github.com/repositories/171521382/contents/backend/plugins/graphql/config/generated/schema.graphql?ref=01a1929fed479a33711c784d2757fadd8f176894",
      "git_url": "https://api.github.com/repositories/171521382/git/blobs/486fb9644498a5ac918070d08db5c73de3cdd87b",
      "html_url": "https://github.com/PWAExpertsIO/panel-pwaexpertsio/blob/01a1929fed479a33711c784d2757fadd8f176894/backend/plugins/graphql/config/generated/schema.graphql",
      "content": "type Article {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String\n  user: UsersPermissionsUser\n  publicationDate: DateTime!\n  excerpt: String!\n  url: String\n  keywords: String!\n  published: Boolean\n  content: String!\n  image: UploadFile\n  categories(sort: String, limit: Int, start: Int, where: JSON): [Categories]\n}\n\ntype ArticleAggregator {\n  count: Int\n}\n\ntype ArticleConnection {\n  values: [Article]\n  groupBy: ArticleGroupBy\n  aggregate: ArticleAggregator\n}\n\ntype ArticleConnection_id {\n  key: ID\n  connection: ArticleConnection\n}\n\ntype ArticleConnectionContent {\n  key: String\n  connection: ArticleConnection\n}\n\ntype ArticleConnectionCreatedAt {\n  key: DateTime\n  connection: ArticleConnection\n}\n\ntype ArticleConnectionExcerpt {\n  key: String\n  connection: ArticleConnection\n}\n\ntype ArticleConnectionImage {\n  key: ID\n  connection: ArticleConnection\n}\n\ntype ArticleConnectionKeywords {\n  key: String\n  connection: ArticleConnection\n}\n\ntype ArticleConnectionPublicationDate {\n  key: DateTime\n  connection: ArticleConnection\n}\n\ntype ArticleConnectionPublished {\n  key: Boolean\n  connection: ArticleConnection\n}\n\ntype ArticleConnectionTitle {\n  key: String\n  connection: ArticleConnection\n}\n\ntype ArticleConnectionUpdatedAt {\n  key: DateTime\n  connection: ArticleConnection\n}\n\ntype ArticleConnectionUrl {\n  key: String\n  connection: ArticleConnection\n}\n\ntype ArticleConnectionUser {\n  key: ID\n  connection: ArticleConnection\n}\n\ntype ArticleGroupBy {\n  _id: [ArticleConnection_id]\n  createdAt: [ArticleConnectionCreatedAt]\n  updatedAt: [ArticleConnectionUpdatedAt]\n  title: [ArticleConnectionTitle]\n  user: [ArticleConnectionUser]\n  publicationDate: [ArticleConnectionPublicationDate]\n  excerpt: [ArticleConnectionExcerpt]\n  url: [ArticleConnectionUrl]\n  keywords: [ArticleConnectionKeywords]\n  published: [ArticleConnectionPublished]\n  content: [ArticleConnectionContent]\n  image: [ArticleConnectionImage]\n}\n\ninput ArticleInput {\n  title: String\n  user: ID\n  publicationDate: DateTime!\n  excerpt: String!\n  url: String\n  keywords: String!\n  published: Boolean\n  content: String!\n  image: ID\n  categories: [ID]\n}\n\ntype Categories {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String!\n  excerpt: String!\n  url: String\n  tutorial(sort: String, limit: Int, start: Int, where: JSON): [Tutorial]\n  article(sort: String, limit: Int, start: Int, where: JSON): [Article]\n  publications(sort: String, limit: Int, start: Int, where: JSON): [Publication]\n}\n\ntype CategoriesAggregator {\n  count: Int\n}\n\ntype CategoriesConnection {\n  values: [Categories]\n  groupBy: CategoriesGroupBy\n  aggregate: CategoriesAggregator\n}\n\ntype CategoriesConnection_id {\n  key: ID\n  connection: CategoriesConnection\n}\n\ntype CategoriesConnectionCreatedAt {\n  key: DateTime\n  connection: CategoriesConnection\n}\n\ntype CategoriesConnectionExcerpt {\n  key: String\n  connection: CategoriesConnection\n}\n\ntype CategoriesConnectionTitle {\n  key: String\n  connection: CategoriesConnection\n}\n\ntype CategoriesConnectionUpdatedAt {\n  key: DateTime\n  connection: CategoriesConnection\n}\n\ntype CategoriesConnectionUrl {\n  key: String\n  connection: CategoriesConnection\n}\n\ntype CategoriesGroupBy {\n  _id: [CategoriesConnection_id]\n  createdAt: [CategoriesConnectionCreatedAt]\n  updatedAt: [CategoriesConnectionUpdatedAt]\n  title: [CategoriesConnectionTitle]\n  excerpt: [CategoriesConnectionExcerpt]\n  url: [CategoriesConnectionUrl]\n}\n\ninput CategoriesInput {\n  title: String!\n  excerpt: String!\n  url: String\n  tutorial: [ID]\n  article: [ID]\n  publications: [ID]\n}\n\ntype Comment {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  content: String!\n  user: UsersPermissionsUser\n  tutorial: Tutorial\n  publication: Publication\n}\n\ntype CommentAggregator {\n  count: Int\n}\n\ntype CommentConnection {\n  values: [Comment]\n  groupBy: CommentGroupBy\n  aggregate: CommentAggregator\n}\n\ntype CommentConnection_id {\n  key: ID\n  connection: CommentConnection\n}\n\ntype CommentConnectionContent {\n  key: String\n  connection: CommentConnection\n}\n\ntype CommentConnectionCreatedAt {\n  key: DateTime\n  connection: CommentConnection\n}\n\ntype CommentConnectionPublication {\n  key: ID\n  connection: CommentConnection\n}\n\ntype CommentConnectionTutorial {\n  key: ID\n  connection: CommentConnection\n}\n\ntype CommentConnectionUpdatedAt {\n  key: DateTime\n  connection: CommentConnection\n}\n\ntype CommentConnectionUser {\n  key: ID\n  connection: CommentConnection\n}\n\ntype CommentGroupBy {\n  _id: [CommentConnection_id]\n  createdAt: [CommentConnectionCreatedAt]\n  updatedAt: [CommentConnectionUpdatedAt]\n  content: [CommentConnectionContent]\n  user: [CommentConnectionUser]\n  tutorial: [CommentConnectionTutorial]\n  publication: [CommentConnectionPublication]\n}\n\ninput CommentInput {\n  content: String!\n  user: ID\n  tutorial: ID\n  publication: ID\n}\n\ntype Contact {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  surname: String\n  email: String!\n  content: String!\n  subject: String\n}\n\ntype ContactAggregator {\n  count: Int\n}\n\ntype ContactConnection {\n  values: [Contact]\n  groupBy: ContactGroupBy\n  aggregate: ContactAggregator\n}\n\ntype ContactConnection_id {\n  key: ID\n  connection: ContactConnection\n}\n\ntype ContactConnectionContent {\n  key: String\n  connection: ContactConnection\n}\n\ntype ContactConnectionCreatedAt {\n  key: DateTime\n  connection: ContactConnection\n}\n\ntype ContactConnectionEmail {\n  key: String\n  connection: ContactConnection\n}\n\ntype ContactConnectionName {\n  key: String\n  connection: ContactConnection\n}\n\ntype ContactConnectionSubject {\n  key: String\n  connection: ContactConnection\n}\n\ntype ContactConnectionSurname {\n  key: String\n  connection: ContactConnection\n}\n\ntype ContactConnectionUpdatedAt {\n  key: DateTime\n  connection: ContactConnection\n}\n\ntype ContactGroupBy {\n  _id: [ContactConnection_id]\n  createdAt: [ContactConnectionCreatedAt]\n  updatedAt: [ContactConnectionUpdatedAt]\n  name: [ContactConnectionName]\n  surname: [ContactConnectionSurname]\n  email: [ContactConnectionEmail]\n  content: [ContactConnectionContent]\n  subject: [ContactConnectionSubject]\n}\n\ninput ContactInput {\n  name: String!\n  surname: String\n  email: String!\n  content: String!\n  subject: String\n}\n\ninput createArticleInput {\n  data: ArticleInput\n}\n\ntype createArticlePayload {\n  article: Article\n}\n\ninput createCategoriesInput {\n  data: CategoriesInput\n}\n\ntype createCategoriesPayload {\n  category: Categories\n}\n\ninput createCommentInput {\n  data: CommentInput\n}\n\ntype createCommentPayload {\n  comment: Comment\n}\n\ninput createContactInput {\n  data: ContactInput\n}\n\ntype createContactPayload {\n  contact: Contact\n}\n\ninput createForumsInput {\n  data: ForumsInput\n}\n\ntype createForumsPayload {\n  forum: Forums\n}\n\ninput createPageInput {\n  data: PageInput\n}\n\ntype createPagePayload {\n  page: Page\n}\n\ninput createPublicationInput {\n  data: PublicationInput\n}\n\ntype createPublicationPayload {\n  publication: Publication\n}\n\ninput createPublicationreceivedInput {\n  data: PublicationreceivedInput\n}\n\ntype createPublicationreceivedPayload {\n  publicationreceived: Publicationreceived\n}\n\ninput createRepliesInput {\n  data: RepliesInput\n}\n\ntype createRepliesPayload {\n  reply: Replies\n}\n\ninput createRoleInput {\n  data: RoleInput\n}\n\ntype createRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput createThreadsInput {\n  data: ThreadsInput\n}\n\ntype createThreadsPayload {\n  thread: Threads\n}\n\ninput createTutorialInput {\n  data: TutorialInput\n}\n\ntype createTutorialPayload {\n  tutorial: Tutorial\n}\n\ninput createUserInput {\n  data: UserInput\n}\n\ntype createUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"\nThe `DateTime` scalar represents a date and time following the ISO 8601 standard\n\"\"\"\nscalar DateTime\n\ninput deleteArticleInput {\n  where: InputID\n}\n\ntype deleteArticlePayload {\n  article: Article\n}\n\ninput deleteCategoriesInput {\n  where: InputID\n}\n\ntype deleteCategoriesPayload {\n  category: Categories\n}\n\ninput deleteCommentInput {\n  where: InputID\n}\n\ntype deleteCommentPayload {\n  comment: Comment\n}\n\ninput deleteContactInput {\n  where: InputID\n}\n\ntype deleteContactPayload {\n  contact: Contact\n}\n\ninput deleteForumsInput {\n  where: InputID\n}\n\ntype deleteForumsPayload {\n  forum: Forums\n}\n\ninput deletePageInput {\n  where: InputID\n}\n\ntype deletePagePayload {\n  page: Page\n}\n\ninput deletePublicationInput {\n  where: InputID\n}\n\ntype deletePublicationPayload {\n  publication: Publication\n}\n\ninput deletePublicationreceivedInput {\n  where: InputID\n}\n\ntype deletePublicationreceivedPayload {\n  publicationreceived: Publicationreceived\n}\n\ninput deleteRepliesInput {\n  where: InputID\n}\n\ntype deleteRepliesPayload {\n  reply: Replies\n}\n\ninput deleteRoleInput {\n  where: InputID\n}\n\ntype deleteRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput deleteThreadsInput {\n  where: InputID\n}\n\ntype deleteThreadsPayload {\n  thread: Threads\n}\n\ninput deleteTutorialInput {\n  where: InputID\n}\n\ntype deleteTutorialPayload {\n  tutorial: Tutorial\n}\n\ninput deleteUserInput {\n  where: InputID\n}\n\ntype deleteUserPayload {\n  user: UsersPermissionsUser\n}\n\ninput editArticleInput {\n  title: String\n  user: ID\n  publicationDate: DateTime\n  excerpt: String\n  url: String\n  keywords: String\n  published: Boolean\n  content: String\n  image: ID\n  categories: [ID]\n}\n\ninput editCategoriesInput {\n  title: String\n  excerpt: String\n  url: String\n  tutorial: [ID]\n  article: [ID]\n  publications: [ID]\n}\n\ninput editCommentInput {\n  content: String\n  user: ID\n  tutorial: ID\n  publication: ID\n}\n\ninput editContactInput {\n  name: String\n  surname: String\n  email: String\n  content: String\n  subject: String\n}\n\ninput editFileInput {\n  name: String\n  hash: String\n  sha256: String\n  ext: String\n  mime: String\n  size: String\n  url: String\n  provider: String\n  public_id: String\n  related: [ID]\n}\n\ninput editForumsInput {\n  title: String\n  excerpt: String\n  color: String\n  background: String\n  url: String\n  order: Int\n}\n\ninput editPageInput {\n  title: String\n  excerpt: String\n  url: String\n  published: Boolean\n  content: String\n  image: ID\n}\n\ninput editPublicationInput {\n  title: String\n  user: ID\n  categories: [ID]\n  publicationDate: DateTime\n  excerpt: String\n  url: String\n  keywords: String\n  published: Boolean\n  content: String\n  image: ID\n  type: ENUM_PUBLICATION_TYPE\n}\n\ninput editPublicationreceivedInput {\n  title: String\n  excerpt: String\n  publicationDate: DateTime\n  user: ID\n  attach: ID\n  github: String\n  gitlab: String\n  bitbucket: String\n  image: String\n  type: ENUM_PUBLICATIONRECEIVED_TYPE\n  status: ENUM_PUBLICATIONRECEIVED_STATUS\n}\n\ninput editRepliesInput {\n  content: String\n  published: Boolean\n  forums: ID\n  threads: ID\n  user: ID\n}\n\ninput editRoleInput {\n  name: String\n  description: String\n  type: String\n  permissions: [ID]\n  users: [ID]\n}\n\ninput editThreadsInput {\n  title: String\n  excerpt: String\n  content: String\n  published: Boolean\n  forum: ID\n  user: ID\n  fixed: Boolean\n  views: Int\n  url: String\n}\n\ninput editTutorialInput {\n  title: String\n  user: ID\n  publicationDate: DateTime\n  excerpt: String\n  url: String\n  keywords: String\n  published: Boolean\n  content: String\n  image: ID\n  categories: [ID]\n  undefined: [ID]\n}\n\ninput editUserInput {\n  username: String\n  email: String\n  provider: String\n  password: String\n  resetPasswordToken: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: ID\n  name: String\n  surname: String\n  web: String\n  twitter: String\n  linkedin: String\n  github: String\n  gitlab: String\n  bitbucket: String\n  address: String\n  country: String\n  city: String\n  lat: String\n  lng: String\n  resume: String\n  avatar: ID\n  providerId: String\n  providerAvatar: String\n}\n\nenum ENUM_PUBLICATION_TYPE {\n  article\n  tutorial\n}\n\nenum ENUM_PUBLICATIONRECEIVED_STATUS {\n  received\n  inReview\n}\n\nenum ENUM_PUBLICATIONRECEIVED_TYPE {\n  article\n  tutorial\n}\n\ninput FileInput {\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related: [ID]\n}\n\ntype Forums {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String\n  excerpt: String\n  color: String\n  background: String\n  url: String\n  order: Int\n}\n\ntype ForumsAggregator {\n  count: Int\n  sum: ForumsAggregatorSum\n  avg: ForumsAggregatorAvg\n  min: ForumsAggregatorMin\n  max: ForumsAggregatorMax\n}\n\ntype ForumsAggregatorAvg {\n  order: Float\n}\n\ntype ForumsAggregatorMax {\n  order: Float\n}\n\ntype ForumsAggregatorMin {\n  order: Float\n}\n\ntype ForumsAggregatorSum {\n  order: Float\n}\n\ntype ForumsConnection {\n  values: [Forums]\n  groupBy: ForumsGroupBy\n  aggregate: ForumsAggregator\n}\n\ntype ForumsConnection_id {\n  key: ID\n  connection: ForumsConnection\n}\n\ntype ForumsConnectionBackground {\n  key: String\n  connection: ForumsConnection\n}\n\ntype ForumsConnectionColor {\n  key: String\n  connection: ForumsConnection\n}\n\ntype ForumsConnectionCreatedAt {\n  key: DateTime\n  connection: ForumsConnection\n}\n\ntype ForumsConnectionExcerpt {\n  key: String\n  connection: ForumsConnection\n}\n\ntype ForumsConnectionOrder {\n  key: Int\n  connection: ForumsConnection\n}\n\ntype ForumsConnectionTitle {\n  key: String\n  connection: ForumsConnection\n}\n\ntype ForumsConnectionUpdatedAt {\n  key: DateTime\n  connection: ForumsConnection\n}\n\ntype ForumsConnectionUrl {\n  key: String\n  connection: ForumsConnection\n}\n\ntype ForumsGroupBy {\n  _id: [ForumsConnection_id]\n  createdAt: [ForumsConnectionCreatedAt]\n  updatedAt: [ForumsConnectionUpdatedAt]\n  title: [ForumsConnectionTitle]\n  excerpt: [ForumsConnectionExcerpt]\n  color: [ForumsConnectionColor]\n  background: [ForumsConnectionBackground]\n  url: [ForumsConnectionUrl]\n  order: [ForumsConnectionOrder]\n}\n\ninput ForumsInput {\n  title: String\n  excerpt: String\n  color: String\n  background: String\n  url: String\n  order: Int\n}\n\ninput InputID {\n  id: ID!\n}\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\"\"\"\nscalar JSON\n\nunion Morph = UsersPermissionsMe | UsersPermissionsMeRole | Article | createArticlePayload | updateArticlePayload | deleteArticlePayload | ArticleConnection | ArticleAggregator | ArticleGroupBy | ArticleConnection_id | ArticleConnectionCreatedAt | ArticleConnectionUpdatedAt | ArticleConnectionTitle | ArticleConnectionUser | ArticleConnectionPublicationDate | ArticleConnectionExcerpt | ArticleConnectionUrl | ArticleConnectionKeywords | ArticleConnectionPublished | ArticleConnectionContent | ArticleConnectionImage | Categories | createCategoriesPayload | updateCategoriesPayload | deleteCategoriesPayload | CategoriesConnection | CategoriesAggregator | CategoriesGroupBy | CategoriesConnection_id | CategoriesConnectionCreatedAt | CategoriesConnectionUpdatedAt | CategoriesConnectionTitle | CategoriesConnectionExcerpt | CategoriesConnectionUrl | Comment | createCommentPayload | updateCommentPayload | deleteCommentPayload | CommentConnection | CommentAggregator | CommentGroupBy | CommentConnection_id | CommentConnectionCreatedAt | CommentConnectionUpdatedAt | CommentConnectionContent | CommentConnectionUser | CommentConnectionTutorial | CommentConnectionPublication | Contact | createContactPayload | updateContactPayload | deleteContactPayload | ContactConnection | ContactAggregator | ContactGroupBy | ContactConnection_id | ContactConnectionCreatedAt | ContactConnectionUpdatedAt | ContactConnectionName | ContactConnectionSurname | ContactConnectionEmail | ContactConnectionContent | ContactConnectionSubject | Forums | createForumsPayload | updateForumsPayload | deleteForumsPayload | ForumsConnection | ForumsAggregator | ForumsAggregatorSum | ForumsAggregatorAvg | ForumsAggregatorMin | ForumsAggregatorMax | ForumsGroupBy | ForumsConnection_id | ForumsConnectionCreatedAt | ForumsConnectionUpdatedAt | ForumsConnectionTitle | ForumsConnectionExcerpt | ForumsConnectionColor | ForumsConnectionBackground | ForumsConnectionUrl | ForumsConnectionOrder | Page | createPagePayload | updatePagePayload | deletePagePayload | PageConnection | PageAggregator | PageGroupBy | PageConnection_id | PageConnectionCreatedAt | PageConnectionUpdatedAt | PageConnectionTitle | PageConnectionExcerpt | PageConnectionUrl | PageConnectionPublished | PageConnectionContent | PageConnectionImage | Publication | createPublicationPayload | updatePublicationPayload | deletePublicationPayload | PublicationConnection | PublicationAggregator | PublicationGroupBy | PublicationConnection_id | PublicationConnectionCreatedAt | PublicationConnectionUpdatedAt | PublicationConnectionTitle | PublicationConnectionUser | PublicationConnectionPublicationDate | PublicationConnectionExcerpt | PublicationConnectionUrl | PublicationConnectionKeywords | PublicationConnectionPublished | PublicationConnectionContent | PublicationConnectionImage | PublicationConnectionType | Publicationreceived | createPublicationreceivedPayload | updatePublicationreceivedPayload | deletePublicationreceivedPayload | PublicationreceivedConnection | PublicationreceivedAggregator | PublicationreceivedGroupBy | PublicationreceivedConnection_id | PublicationreceivedConnectionCreatedAt | PublicationreceivedConnectionUpdatedAt | PublicationreceivedConnectionTitle | PublicationreceivedConnectionExcerpt | PublicationreceivedConnectionPublicationDate | PublicationreceivedConnectionUser | PublicationreceivedConnectionAttach | PublicationreceivedConnectionGithub | PublicationreceivedConnectionGitlab | PublicationreceivedConnectionBitbucket | PublicationreceivedConnectionImage | PublicationreceivedConnectionType | PublicationreceivedConnectionStatus | Replies | createRepliesPayload | updateRepliesPayload | deleteRepliesPayload | RepliesConnection | RepliesAggregator | RepliesGroupBy | RepliesConnection_id | RepliesConnectionCreatedAt | RepliesConnectionUpdatedAt | RepliesConnectionContent | RepliesConnectionPublished | RepliesConnectionForums | RepliesConnectionThreads | RepliesConnectionUser | Threads | createThreadsPayload | updateThreadsPayload | deleteThreadsPayload | ThreadsConnection | ThreadsAggregator | ThreadsAggregatorSum | ThreadsAggregatorAvg | ThreadsAggregatorMin | ThreadsAggregatorMax | ThreadsGroupBy | ThreadsConnection_id | ThreadsConnectionCreatedAt | ThreadsConnectionUpdatedAt | ThreadsConnectionTitle | ThreadsConnectionExcerpt | ThreadsConnectionContent | ThreadsConnectionPublished | ThreadsConnectionForum | ThreadsConnectionUser | ThreadsConnectionFixed | ThreadsConnectionViews | ThreadsConnectionUrl | Tutorial | createTutorialPayload | updateTutorialPayload | deleteTutorialPayload | TutorialConnection | TutorialAggregator | TutorialGroupBy | TutorialConnection_id | TutorialConnectionCreatedAt | TutorialConnectionUpdatedAt | TutorialConnectionTitle | TutorialConnectionUser | TutorialConnectionPublicationDate | TutorialConnectionExcerpt | TutorialConnectionUrl | TutorialConnectionKeywords | TutorialConnectionPublished | TutorialConnectionContent | TutorialConnectionImage | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileGroupBy | UploadFileConnection_id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionHash | UploadFileConnectionSha256 | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionProvider | UploadFileConnectionPublic_id | UsersPermissionsPermission | UsersPermissionsRole | createRolePayload | updateRolePayload | deleteRolePayload | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnection_id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | UsersPermissionsUser | createUserPayload | updateUserPayload | deleteUserPayload | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnection_id | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole | UsersPermissionsUserConnectionName | UsersPermissionsUserConnectionSurname | UsersPermissionsUserConnectionWeb | UsersPermissionsUserConnectionTwitter | UsersPermissionsUserConnectionLinkedin | UsersPermissionsUserConnectionGithub | UsersPermissionsUserConnectionGitlab | UsersPermissionsUserConnectionBitbucket | UsersPermissionsUserConnectionAddress | UsersPermissionsUserConnectionCountry | UsersPermissionsUserConnectionCity | UsersPermissionsUserConnectionLat | UsersPermissionsUserConnectionLng | UsersPermissionsUserConnectionResume | UsersPermissionsUserConnectionAvatar | UsersPermissionsUserConnectionProviderId | UsersPermissionsUserConnectionProviderAvatar\n\ntype Mutation {\n  createArticle(input: createArticleInput): createArticlePayload\n  updateArticle(input: updateArticleInput): updateArticlePayload\n  deleteArticle(input: deleteArticleInput): deleteArticlePayload\n  createCategories(input: createCategoriesInput): createCategoriesPayload\n  updateCategories(input: updateCategoriesInput): updateCategoriesPayload\n  deleteCategories(input: deleteCategoriesInput): deleteCategoriesPayload\n  createComment(input: createCommentInput): createCommentPayload\n  updateComment(input: updateCommentInput): updateCommentPayload\n  deleteComment(input: deleteCommentInput): deleteCommentPayload\n  createContact(input: createContactInput): createContactPayload\n  updateContact(input: updateContactInput): updateContactPayload\n  deleteContact(input: deleteContactInput): deleteContactPayload\n  createForums(input: createForumsInput): createForumsPayload\n  updateForums(input: updateForumsInput): updateForumsPayload\n  deleteForums(input: deleteForumsInput): deleteForumsPayload\n  createPage(input: createPageInput): createPagePayload\n  updatePage(input: updatePageInput): updatePagePayload\n  deletePage(input: deletePageInput): deletePagePayload\n  createPublication(input: createPublicationInput): createPublicationPayload\n  updatePublication(input: updatePublicationInput): updatePublicationPayload\n  deletePublication(input: deletePublicationInput): deletePublicationPayload\n  createPublicationreceived(input: createPublicationreceivedInput): createPublicationreceivedPayload\n  updatePublicationreceived(input: updatePublicationreceivedInput): updatePublicationreceivedPayload\n  deletePublicationreceived(input: deletePublicationreceivedInput): deletePublicationreceivedPayload\n  createReplies(input: createRepliesInput): createRepliesPayload\n  updateReplies(input: updateRepliesInput): updateRepliesPayload\n  deleteReplies(input: deleteRepliesInput): deleteRepliesPayload\n  createThreads(input: createThreadsInput): createThreadsPayload\n  updateThreads(input: updateThreadsInput): updateThreadsPayload\n  deleteThreads(input: deleteThreadsInput): deleteThreadsPayload\n  createTutorial(input: createTutorialInput): createTutorialPayload\n  updateTutorial(input: updateTutorialInput): updateTutorialPayload\n  deleteTutorial(input: deleteTutorialInput): deleteTutorialPayload\n\n  \"\"\"Create a new role\"\"\"\n  createRole(input: createRoleInput): createRolePayload\n\n  \"\"\"Update an existing role\"\"\"\n  updateRole(input: updateRoleInput): updateRolePayload\n\n  \"\"\"Delete an existing role\"\"\"\n  deleteRole(input: deleteRoleInput): deleteRolePayload\n\n  \"\"\"Create a new user\"\"\"\n  createUser(input: createUserInput): createUserPayload\n\n  \"\"\"Update an existing user\"\"\"\n  updateUser(input: updateUserInput): updateUserPayload\n\n  \"\"\"Delete an existing user\"\"\"\n  deleteUser(input: deleteUserInput): deleteUserPayload\n  upload(refId: ID, ref: String, source: String, file: Upload!): UploadFile!\n}\n\ntype Page {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String\n  excerpt: String\n  url: String\n  published: Boolean\n  content: String\n  image: UploadFile\n}\n\ntype PageAggregator {\n  count: Int\n}\n\ntype PageConnection {\n  values: [Page]\n  groupBy: PageGroupBy\n  aggregate: PageAggregator\n}\n\ntype PageConnection_id {\n  key: ID\n  connection: PageConnection\n}\n\ntype PageConnectionContent {\n  key: String\n  connection: PageConnection\n}\n\ntype PageConnectionCreatedAt {\n  key: DateTime\n  connection: PageConnection\n}\n\ntype PageConnectionExcerpt {\n  key: String\n  connection: PageConnection\n}\n\ntype PageConnectionImage {\n  key: ID\n  connection: PageConnection\n}\n\ntype PageConnectionPublished {\n  key: Boolean\n  connection: PageConnection\n}\n\ntype PageConnectionTitle {\n  key: String\n  connection: PageConnection\n}\n\ntype PageConnectionUpdatedAt {\n  key: DateTime\n  connection: PageConnection\n}\n\ntype PageConnectionUrl {\n  key: String\n  connection: PageConnection\n}\n\ntype PageGroupBy {\n  _id: [PageConnection_id]\n  createdAt: [PageConnectionCreatedAt]\n  updatedAt: [PageConnectionUpdatedAt]\n  title: [PageConnectionTitle]\n  excerpt: [PageConnectionExcerpt]\n  url: [PageConnectionUrl]\n  published: [PageConnectionPublished]\n  content: [PageConnectionContent]\n  image: [PageConnectionImage]\n}\n\ninput PageInput {\n  title: String\n  excerpt: String\n  url: String\n  published: Boolean\n  content: String\n  image: ID\n}\n\ntype Publication {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String!\n  user: UsersPermissionsUser\n  publicationDate: DateTime!\n  excerpt: String!\n  url: String!\n  keywords: String\n  published: Boolean!\n  content: String!\n  image: UploadFile\n  type: ENUM_PUBLICATION_TYPE\n  categories(sort: String, limit: Int, start: Int, where: JSON): [Categories]\n}\n\ntype PublicationAggregator {\n  count: Int\n}\n\ntype PublicationConnection {\n  values: [Publication]\n  groupBy: PublicationGroupBy\n  aggregate: PublicationAggregator\n}\n\ntype PublicationConnection_id {\n  key: ID\n  connection: PublicationConnection\n}\n\ntype PublicationConnectionContent {\n  key: String\n  connection: PublicationConnection\n}\n\ntype PublicationConnectionCreatedAt {\n  key: DateTime\n  connection: PublicationConnection\n}\n\ntype PublicationConnectionExcerpt {\n  key: String\n  connection: PublicationConnection\n}\n\ntype PublicationConnectionImage {\n  key: ID\n  connection: PublicationConnection\n}\n\ntype PublicationConnectionKeywords {\n  key: String\n  connection: PublicationConnection\n}\n\ntype PublicationConnectionPublicationDate {\n  key: DateTime\n  connection: PublicationConnection\n}\n\ntype PublicationConnectionPublished {\n  key: Boolean\n  connection: PublicationConnection\n}\n\ntype PublicationConnectionTitle {\n  key: String\n  connection: PublicationConnection\n}\n\ntype PublicationConnectionType {\n  key: String\n  connection: PublicationConnection\n}\n\ntype PublicationConnectionUpdatedAt {\n  key: DateTime\n  connection: PublicationConnection\n}\n\ntype PublicationConnectionUrl {\n  key: String\n  connection: PublicationConnection\n}\n\ntype PublicationConnectionUser {\n  key: ID\n  connection: PublicationConnection\n}\n\ntype PublicationGroupBy {\n  _id: [PublicationConnection_id]\n  createdAt: [PublicationConnectionCreatedAt]\n  updatedAt: [PublicationConnectionUpdatedAt]\n  title: [PublicationConnectionTitle]\n  user: [PublicationConnectionUser]\n  publicationDate: [PublicationConnectionPublicationDate]\n  excerpt: [PublicationConnectionExcerpt]\n  url: [PublicationConnectionUrl]\n  keywords: [PublicationConnectionKeywords]\n  published: [PublicationConnectionPublished]\n  content: [PublicationConnectionContent]\n  image: [PublicationConnectionImage]\n  type: [PublicationConnectionType]\n}\n\ninput PublicationInput {\n  title: String!\n  user: ID\n  categories: [ID]\n  publicationDate: DateTime!\n  excerpt: String!\n  url: String!\n  keywords: String\n  published: Boolean!\n  content: String!\n  image: ID\n  type: ENUM_PUBLICATION_TYPE\n}\n\ntype Publicationreceived {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String\n  excerpt: String\n  publicationDate: DateTime\n  user: UsersPermissionsUser\n  attach: UploadFile\n  github: String\n  gitlab: String\n  bitbucket: String\n  image: String\n  type: ENUM_PUBLICATIONRECEIVED_TYPE\n  status: ENUM_PUBLICATIONRECEIVED_STATUS\n}\n\ntype PublicationreceivedAggregator {\n  count: Int\n}\n\ntype PublicationreceivedConnection {\n  values: [Publicationreceived]\n  groupBy: PublicationreceivedGroupBy\n  aggregate: PublicationreceivedAggregator\n}\n\ntype PublicationreceivedConnection_id {\n  key: ID\n  connection: PublicationreceivedConnection\n}\n\ntype PublicationreceivedConnectionAttach {\n  key: ID\n  connection: PublicationreceivedConnection\n}\n\ntype PublicationreceivedConnectionBitbucket {\n  key: String\n  connection: PublicationreceivedConnection\n}\n\ntype PublicationreceivedConnectionCreatedAt {\n  key: DateTime\n  connection: PublicationreceivedConnection\n}\n\ntype PublicationreceivedConnectionExcerpt {\n  key: String\n  connection: PublicationreceivedConnection\n}\n\ntype PublicationreceivedConnectionGithub {\n  key: String\n  connection: PublicationreceivedConnection\n}\n\ntype PublicationreceivedConnectionGitlab {\n  key: String\n  connection: PublicationreceivedConnection\n}\n\ntype PublicationreceivedConnectionImage {\n  key: String\n  connection: PublicationreceivedConnection\n}\n\ntype PublicationreceivedConnectionPublicationDate {\n  key: DateTime\n  connection: PublicationreceivedConnection\n}\n\ntype PublicationreceivedConnectionStatus {\n  key: String\n  connection: PublicationreceivedConnection\n}\n\ntype PublicationreceivedConnectionTitle {\n  key: String\n  connection: PublicationreceivedConnection\n}\n\ntype PublicationreceivedConnectionType {\n  key: String\n  connection: PublicationreceivedConnection\n}\n\ntype PublicationreceivedConnectionUpdatedAt {\n  key: DateTime\n  connection: PublicationreceivedConnection\n}\n\ntype PublicationreceivedConnectionUser {\n  key: ID\n  connection: PublicationreceivedConnection\n}\n\ntype PublicationreceivedGroupBy {\n  _id: [PublicationreceivedConnection_id]\n  createdAt: [PublicationreceivedConnectionCreatedAt]\n  updatedAt: [PublicationreceivedConnectionUpdatedAt]\n  title: [PublicationreceivedConnectionTitle]\n  excerpt: [PublicationreceivedConnectionExcerpt]\n  publicationDate: [PublicationreceivedConnectionPublicationDate]\n  user: [PublicationreceivedConnectionUser]\n  attach: [PublicationreceivedConnectionAttach]\n  github: [PublicationreceivedConnectionGithub]\n  gitlab: [PublicationreceivedConnectionGitlab]\n  bitbucket: [PublicationreceivedConnectionBitbucket]\n  image: [PublicationreceivedConnectionImage]\n  type: [PublicationreceivedConnectionType]\n  status: [PublicationreceivedConnectionStatus]\n}\n\ninput PublicationreceivedInput {\n  title: String\n  excerpt: String\n  publicationDate: DateTime\n  user: ID\n  attach: ID\n  github: String\n  gitlab: String\n  bitbucket: String\n  image: String\n  type: ENUM_PUBLICATIONRECEIVED_TYPE\n  status: ENUM_PUBLICATIONRECEIVED_STATUS\n}\n\ntype Query {\n  article(id: ID!): Article\n  articles(sort: String, limit: Int, start: Int, where: JSON): [Article]\n  articlesConnection(sort: String, limit: Int, start: Int, where: JSON): ArticleConnection\n  category(id: ID!): Categories\n  categories(sort: String, limit: Int, start: Int, where: JSON): [Categories]\n  categoriesConnection(sort: String, limit: Int, start: Int, where: JSON): CategoriesConnection\n  comment(id: ID!): Comment\n  comments(sort: String, limit: Int, start: Int, where: JSON): [Comment]\n  commentsConnection(sort: String, limit: Int, start: Int, where: JSON): CommentConnection\n  contact(id: ID!): Contact\n  contacts(sort: String, limit: Int, start: Int, where: JSON): [Contact]\n  contactsConnection(sort: String, limit: Int, start: Int, where: JSON): ContactConnection\n  forum(id: ID!): Forums\n  forums(sort: String, limit: Int, start: Int, where: JSON): [Forums]\n  forumsConnection(sort: String, limit: Int, start: Int, where: JSON): ForumsConnection\n  page(id: ID!): Page\n  pages(sort: String, limit: Int, start: Int, where: JSON): [Page]\n  pagesConnection(sort: String, limit: Int, start: Int, where: JSON): PageConnection\n  publication(id: ID!): Publication\n  publications(sort: String, limit: Int, start: Int, where: JSON): [Publication]\n  publicationsConnection(sort: String, limit: Int, start: Int, where: JSON): PublicationConnection\n  publicationreceived(id: ID!): Publicationreceived\n  publicationreceiveds(sort: String, limit: Int, start: Int, where: JSON): [Publicationreceived]\n  publicationreceivedsConnection(sort: String, limit: Int, start: Int, where: JSON): PublicationreceivedConnection\n  reply(id: ID!): Replies\n  replies(sort: String, limit: Int, start: Int, where: JSON): [Replies]\n  repliesConnection(sort: String, limit: Int, start: Int, where: JSON): RepliesConnection\n  thread(id: ID!): Threads\n  threads(sort: String, limit: Int, start: Int, where: JSON): [Threads]\n  threadsConnection(sort: String, limit: Int, start: Int, where: JSON): ThreadsConnection\n  tutorial(id: ID!): Tutorial\n  tutorials(sort: String, limit: Int, start: Int, where: JSON): [Tutorial]\n  tutorialsConnection(sort: String, limit: Int, start: Int, where: JSON): TutorialConnection\n  files(sort: String, limit: Int, start: Int, where: JSON): [UploadFile]\n  filesConnection(sort: String, limit: Int, start: Int, where: JSON): UploadFileConnection\n  role(id: ID!): UsersPermissionsRole\n\n  \"\"\"\n  Retrieve all the existing roles. You can't apply filters on this query.\n  \"\"\"\n  roles(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsRole]\n  rolesConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsRoleConnection\n  user(id: ID!): UsersPermissionsUser\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n  usersConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsUserConnection\n  me: UsersPermissionsMe\n}\n\ntype Replies {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  content: String!\n  published: Boolean!\n  forums: Forums\n  threads: Threads\n  user: UsersPermissionsUser\n}\n\ntype RepliesAggregator {\n  count: Int\n}\n\ntype RepliesConnection {\n  values: [Replies]\n  groupBy: RepliesGroupBy\n  aggregate: RepliesAggregator\n}\n\ntype RepliesConnection_id {\n  key: ID\n  connection: RepliesConnection\n}\n\ntype RepliesConnectionContent {\n  key: String\n  connection: RepliesConnection\n}\n\ntype RepliesConnectionCreatedAt {\n  key: DateTime\n  connection: RepliesConnection\n}\n\ntype RepliesConnectionForums {\n  key: ID\n  connection: RepliesConnection\n}\n\ntype RepliesConnectionPublished {\n  key: Boolean\n  connection: RepliesConnection\n}\n\ntype RepliesConnectionThreads {\n  key: ID\n  connection: RepliesConnection\n}\n\ntype RepliesConnectionUpdatedAt {\n  key: DateTime\n  connection: RepliesConnection\n}\n\ntype RepliesConnectionUser {\n  key: ID\n  connection: RepliesConnection\n}\n\ntype RepliesGroupBy {\n  _id: [RepliesConnection_id]\n  createdAt: [RepliesConnectionCreatedAt]\n  updatedAt: [RepliesConnectionUpdatedAt]\n  content: [RepliesConnectionContent]\n  published: [RepliesConnectionPublished]\n  forums: [RepliesConnectionForums]\n  threads: [RepliesConnectionThreads]\n  user: [RepliesConnectionUser]\n}\n\ninput RepliesInput {\n  content: String!\n  published: Boolean!\n  forums: ID\n  threads: ID\n  user: ID\n}\n\ninput RoleInput {\n  name: String!\n  description: String\n  type: String\n  permissions: [ID]\n  users: [ID]\n}\n\ntype Threads {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String\n  excerpt: String\n  content: String\n  published: Boolean\n  forum: Forums\n  user: UsersPermissionsUser\n  fixed: Boolean\n  views: Int\n  url: String\n}\n\ntype ThreadsAggregator {\n  count: Int\n  sum: ThreadsAggregatorSum\n  avg: ThreadsAggregatorAvg\n  min: ThreadsAggregatorMin\n  max: ThreadsAggregatorMax\n}\n\ntype ThreadsAggregatorAvg {\n  views: Float\n}\n\ntype ThreadsAggregatorMax {\n  views: Float\n}\n\ntype ThreadsAggregatorMin {\n  views: Float\n}\n\ntype ThreadsAggregatorSum {\n  views: Float\n}\n\ntype ThreadsConnection {\n  values: [Threads]\n  groupBy: ThreadsGroupBy\n  aggregate: ThreadsAggregator\n}\n\ntype ThreadsConnection_id {\n  key: ID\n  connection: ThreadsConnection\n}\n\ntype ThreadsConnectionContent {\n  key: String\n  connection: ThreadsConnection\n}\n\ntype ThreadsConnectionCreatedAt {\n  key: DateTime\n  connection: ThreadsConnection\n}\n\ntype ThreadsConnectionExcerpt {\n  key: String\n  connection: ThreadsConnection\n}\n\ntype ThreadsConnectionFixed {\n  key: Boolean\n  connection: ThreadsConnection\n}\n\ntype ThreadsConnectionForum {\n  key: ID\n  connection: ThreadsConnection\n}\n\ntype ThreadsConnectionPublished {\n  key: Boolean\n  connection: ThreadsConnection\n}\n\ntype ThreadsConnectionTitle {\n  key: String\n  connection: ThreadsConnection\n}\n\ntype ThreadsConnectionUpdatedAt {\n  key: DateTime\n  connection: ThreadsConnection\n}\n\ntype ThreadsConnectionUrl {\n  key: String\n  connection: ThreadsConnection\n}\n\ntype ThreadsConnectionUser {\n  key: ID\n  connection: ThreadsConnection\n}\n\ntype ThreadsConnectionViews {\n  key: Int\n  connection: ThreadsConnection\n}\n\ntype ThreadsGroupBy {\n  _id: [ThreadsConnection_id]\n  createdAt: [ThreadsConnectionCreatedAt]\n  updatedAt: [ThreadsConnectionUpdatedAt]\n  title: [ThreadsConnectionTitle]\n  excerpt: [ThreadsConnectionExcerpt]\n  content: [ThreadsConnectionContent]\n  published: [ThreadsConnectionPublished]\n  forum: [ThreadsConnectionForum]\n  user: [ThreadsConnectionUser]\n  fixed: [ThreadsConnectionFixed]\n  views: [ThreadsConnectionViews]\n  url: [ThreadsConnectionUrl]\n}\n\ninput ThreadsInput {\n  title: String\n  excerpt: String\n  content: String\n  published: Boolean\n  forum: ID\n  user: ID\n  fixed: Boolean\n  views: Int\n  url: String\n}\n\ntype Tutorial {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title: String\n  user: UsersPermissionsUser\n  publicationDate: DateTime!\n  excerpt: String!\n  url: String!\n  keywords: String!\n  published: Boolean!\n  content: String!\n  image: UploadFile\n  categories(sort: String, limit: Int, start: Int, where: JSON): [Categories]\n  undefined(sort: String, limit: Int, start: Int, where: JSON): [Comment]\n}\n\ntype TutorialAggregator {\n  count: Int\n}\n\ntype TutorialConnection {\n  values: [Tutorial]\n  groupBy: TutorialGroupBy\n  aggregate: TutorialAggregator\n}\n\ntype TutorialConnection_id {\n  key: ID\n  connection: TutorialConnection\n}\n\ntype TutorialConnectionContent {\n  key: String\n  connection: TutorialConnection\n}\n\ntype TutorialConnectionCreatedAt {\n  key: DateTime\n  connection: TutorialConnection\n}\n\ntype TutorialConnectionExcerpt {\n  key: String\n  connection: TutorialConnection\n}\n\ntype TutorialConnectionImage {\n  key: ID\n  connection: TutorialConnection\n}\n\ntype TutorialConnectionKeywords {\n  key: String\n  connection: TutorialConnection\n}\n\ntype TutorialConnectionPublicationDate {\n  key: DateTime\n  connection: TutorialConnection\n}\n\ntype TutorialConnectionPublished {\n  key: Boolean\n  connection: TutorialConnection\n}\n\ntype TutorialConnectionTitle {\n  key: String\n  connection: TutorialConnection\n}\n\ntype TutorialConnectionUpdatedAt {\n  key: DateTime\n  connection: TutorialConnection\n}\n\ntype TutorialConnectionUrl {\n  key: String\n  connection: TutorialConnection\n}\n\ntype TutorialConnectionUser {\n  key: ID\n  connection: TutorialConnection\n}\n\ntype TutorialGroupBy {\n  _id: [TutorialConnection_id]\n  createdAt: [TutorialConnectionCreatedAt]\n  updatedAt: [TutorialConnectionUpdatedAt]\n  title: [TutorialConnectionTitle]\n  user: [TutorialConnectionUser]\n  publicationDate: [TutorialConnectionPublicationDate]\n  excerpt: [TutorialConnectionExcerpt]\n  url: [TutorialConnectionUrl]\n  keywords: [TutorialConnectionKeywords]\n  published: [TutorialConnectionPublished]\n  content: [TutorialConnectionContent]\n  image: [TutorialConnectionImage]\n}\n\ninput TutorialInput {\n  title: String\n  user: ID\n  publicationDate: DateTime!\n  excerpt: String!\n  url: String!\n  keywords: String!\n  published: Boolean!\n  content: String!\n  image: ID\n  categories: [ID]\n  undefined: [ID]\n}\n\ninput updateArticleInput {\n  where: InputID\n  data: editArticleInput\n}\n\ntype updateArticlePayload {\n  article: Article\n}\n\ninput updateCategoriesInput {\n  where: InputID\n  data: editCategoriesInput\n}\n\ntype updateCategoriesPayload {\n  category: Categories\n}\n\ninput updateCommentInput {\n  where: InputID\n  data: editCommentInput\n}\n\ntype updateCommentPayload {\n  comment: Comment\n}\n\ninput updateContactInput {\n  where: InputID\n  data: editContactInput\n}\n\ntype updateContactPayload {\n  contact: Contact\n}\n\ninput updateForumsInput {\n  where: InputID\n  data: editForumsInput\n}\n\ntype updateForumsPayload {\n  forum: Forums\n}\n\ninput updatePageInput {\n  where: InputID\n  data: editPageInput\n}\n\ntype updatePagePayload {\n  page: Page\n}\n\ninput updatePublicationInput {\n  where: InputID\n  data: editPublicationInput\n}\n\ntype updatePublicationPayload {\n  publication: Publication\n}\n\ninput updatePublicationreceivedInput {\n  where: InputID\n  data: editPublicationreceivedInput\n}\n\ntype updatePublicationreceivedPayload {\n  publicationreceived: Publicationreceived\n}\n\ninput updateRepliesInput {\n  where: InputID\n  data: editRepliesInput\n}\n\ntype updateRepliesPayload {\n  reply: Replies\n}\n\ninput updateRoleInput {\n  where: InputID\n  data: editRoleInput\n}\n\ntype updateRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput updateThreadsInput {\n  where: InputID\n  data: editThreadsInput\n}\n\ntype updateThreadsPayload {\n  thread: Threads\n}\n\ninput updateTutorialInput {\n  where: InputID\n  data: editTutorialInput\n}\n\ntype updateTutorialPayload {\n  tutorial: Tutorial\n}\n\ninput updateUserInput {\n  where: InputID\n  data: editUserInput\n}\n\ntype updateUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload\n\ntype UploadFile {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related(sort: String, limit: Int, start: Int, where: JSON): [Morph]\n}\n\ntype UploadFileAggregator {\n  count: Int\n}\n\ntype UploadFileConnection {\n  values: [UploadFile]\n  groupBy: UploadFileGroupBy\n  aggregate: UploadFileAggregator\n}\n\ntype UploadFileConnection_id {\n  key: ID\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionCreatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionExt {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionHash {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionMime {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionName {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionProvider {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionPublic_id {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSha256 {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSize {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUpdatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUrl {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileGroupBy {\n  _id: [UploadFileConnection_id]\n  createdAt: [UploadFileConnectionCreatedAt]\n  updatedAt: [UploadFileConnectionUpdatedAt]\n  name: [UploadFileConnectionName]\n  hash: [UploadFileConnectionHash]\n  sha256: [UploadFileConnectionSha256]\n  ext: [UploadFileConnectionExt]\n  mime: [UploadFileConnectionMime]\n  size: [UploadFileConnectionSize]\n  url: [UploadFileConnectionUrl]\n  provider: [UploadFileConnectionProvider]\n  public_id: [UploadFileConnectionPublic_id]\n}\n\ninput UserInput {\n  username: String!\n  email: String!\n  provider: String\n  password: String\n  resetPasswordToken: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: ID\n  name: String\n  surname: String\n  web: String\n  twitter: String\n  linkedin: String\n  github: String\n  gitlab: String\n  bitbucket: String\n  address: String\n  country: String\n  city: String\n  lat: String\n  lng: String\n  resume: String\n  avatar: ID\n  providerId: String\n  providerAvatar: String\n}\n\ntype UsersPermissionsMe {\n  _id: ID!\n  username: String!\n  email: String!\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsMeRole\n}\n\ntype UsersPermissionsMeRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n}\n\ntype UsersPermissionsPermission {\n  _id: ID!\n  type: String!\n  controller: String!\n  action: String!\n  enabled: Boolean!\n  policy: String\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n  permissions(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsPermission]\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n}\n\ntype UsersPermissionsRoleAggregator {\n  count: Int\n}\n\ntype UsersPermissionsRoleConnection {\n  values: [UsersPermissionsRole]\n  groupBy: UsersPermissionsRoleGroupBy\n  aggregate: UsersPermissionsRoleAggregator\n}\n\ntype UsersPermissionsRoleConnection_id {\n  key: ID\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionDescription {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionName {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionType {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleGroupBy {\n  _id: [UsersPermissionsRoleConnection_id]\n  name: [UsersPermissionsRoleConnectionName]\n  description: [UsersPermissionsRoleConnectionDescription]\n  type: [UsersPermissionsRoleConnectionType]\n}\n\ntype UsersPermissionsUser {\n  _id: ID!\n  username: String!\n  email: String!\n  provider: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsRole\n  name: String\n  surname: String\n  web: String\n  twitter: String\n  linkedin: String\n  github: String\n  gitlab: String\n  bitbucket: String\n  address: String\n  country: String\n  city: String\n  lat: String\n  lng: String\n  resume: String\n  avatar: UploadFile\n  providerId: String\n  providerAvatar: String\n}\n\ntype UsersPermissionsUserAggregator {\n  count: Int\n}\n\ntype UsersPermissionsUserConnection {\n  values: [UsersPermissionsUser]\n  groupBy: UsersPermissionsUserGroupBy\n  aggregate: UsersPermissionsUserAggregator\n}\n\ntype UsersPermissionsUserConnection_id {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionAddress {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionAvatar {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionBitbucket {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionBlocked {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionCity {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionConfirmed {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionCountry {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionEmail {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionGithub {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionGitlab {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionLat {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionLinkedin {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionLng {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionName {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionProvider {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionProviderAvatar {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionProviderId {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionResume {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionRole {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionSurname {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionTwitter {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionUsername {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionWeb {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserGroupBy {\n  _id: [UsersPermissionsUserConnection_id]\n  username: [UsersPermissionsUserConnectionUsername]\n  email: [UsersPermissionsUserConnectionEmail]\n  provider: [UsersPermissionsUserConnectionProvider]\n  confirmed: [UsersPermissionsUserConnectionConfirmed]\n  blocked: [UsersPermissionsUserConnectionBlocked]\n  role: [UsersPermissionsUserConnectionRole]\n  name: [UsersPermissionsUserConnectionName]\n  surname: [UsersPermissionsUserConnectionSurname]\n  web: [UsersPermissionsUserConnectionWeb]\n  twitter: [UsersPermissionsUserConnectionTwitter]\n  linkedin: [UsersPermissionsUserConnectionLinkedin]\n  github: [UsersPermissionsUserConnectionGithub]\n  gitlab: [UsersPermissionsUserConnectionGitlab]\n  bitbucket: [UsersPermissionsUserConnectionBitbucket]\n  address: [UsersPermissionsUserConnectionAddress]\n  country: [UsersPermissionsUserConnectionCountry]\n  city: [UsersPermissionsUserConnectionCity]\n  lat: [UsersPermissionsUserConnectionLat]\n  lng: [UsersPermissionsUserConnectionLng]\n  resume: [UsersPermissionsUserConnectionResume]\n  avatar: [UsersPermissionsUserConnectionAvatar]\n  providerId: [UsersPermissionsUserConnectionProviderId]\n  providerAvatar: [UsersPermissionsUserConnectionProviderAvatar]\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 258,
      "containsCycle": true,
      "numDefinitions": 333
    }
  ],
  "metrics": {
    "created_at": "2019-02-19T17:49:10Z",
    "updated_at": "2019-04-20T07:47:49Z",
    "pushed_at": "2019-04-20T07:47:44Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 4,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 4,
    "releases": 0,
    "stargazers": 0
  }
}