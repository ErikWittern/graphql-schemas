{
  "repo_name": "status-components-sandbox",
  "repo_full_name": "grigio/status-components-sandbox",
  "repo_owner": "grigio",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "schema.graphql",
      "sha": "80200de3076d35c46628a1b977c1fb22f8e9474c",
      "url": "https://api.github.com/repositories/176234187/contents/schema.graphql?ref=4d2092a4e88cced1924a165a2ce44e200eae080b",
      "git_url": "https://api.github.com/repositories/176234187/git/blobs/80200de3076d35c46628a1b977c1fb22f8e9474c",
      "html_url": "https://github.com/grigio/status-components-sandbox/blob/4d2092a4e88cced1924a165a2ce44e200eae080b/schema.graphql",
      "content": "schema {\n  query: RootQuery\n}\n\n\"\"\"Passenger's bag type and quantity\"\"\"\ntype Bag {\n  type: BagType\n  quantity: Int\n  dimensions: String\n}\n\n\"\"\"Bag types\"\"\"\nenum BagType {\n  CABIN_BAG\n  PERSONAL_ITEM\n  CHECKED_BAGGAGE\n}\n\nenum BookingDestinationImageDimensions {\n  _1200x628\n  _1280x720\n  _220x165\n  _275x250\n  _300x165\n  _375x165\n  _600x330\n  _600x600\n  _610x251\n}\n\ninterface BookingInterface {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  status: String\n  contactDetails: ContactDetails\n  passengers: [Passenger]\n  arrival: RouteStop\n  departure: RouteStop\n  destinationImageUrl(dimensions: BookingDestinationImageDimensions = _600x600): String\n  passengerCount: Int\n\n  \"\"\"OneWay, Multicity or Return\"\"\"\n  type: BookingType @deprecated(reason: \"Use __typename instead\")\n\n  \"\"\"Total count of bags by the type\"\"\"\n  bagInfo: [Bag]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype BookingInterfaceConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [BookingInterfaceEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BookingInterfaceEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: BookingInterface\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"Booking from A to B, B to C and so on, with possible stopovers\"\"\"\ntype BookingMulticity implements BookingInterface & FromToInterface {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  status: String\n  contactDetails: ContactDetails\n  passengers: [Passenger]\n  arrival: RouteStop\n  departure: RouteStop\n  destinationImageUrl(dimensions: BookingDestinationImageDimensions = _600x600): String\n  passengerCount: Int\n\n  \"\"\"OneWay, Multicity or Return\"\"\"\n  type: BookingType @deprecated(reason: \"Use __typename instead\")\n\n  \"\"\"Total count of bags by the type\"\"\"\n  bagInfo: [Bag]\n  sectors: [Sector]\n}\n\n\"\"\"Booking from A to B with no return, but possible stopovers\"\"\"\ntype BookingOneWay implements BookingInterface & FromToInterface {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  status: String\n  contactDetails: ContactDetails\n  passengers: [Passenger]\n  arrival: RouteStop\n  departure: RouteStop\n  destinationImageUrl(dimensions: BookingDestinationImageDimensions = _600x600): String\n  passengerCount: Int\n\n  \"\"\"OneWay, Multicity or Return\"\"\"\n  type: BookingType @deprecated(reason: \"Use __typename instead\")\n\n  \"\"\"Total count of bags by the type\"\"\"\n  bagInfo: [Bag]\n  sector: Sector\n}\n\n\"\"\"Booking from A to B with return, and possible stopovers\"\"\"\ntype BookingReturn implements BookingInterface & FromToInterface {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  status: String\n  contactDetails: ContactDetails\n  passengers: [Passenger]\n  arrival: RouteStop\n  departure: RouteStop\n  destinationImageUrl(dimensions: BookingDestinationImageDimensions = _600x600): String\n  passengerCount: Int\n\n  \"\"\"OneWay, Multicity or Return\"\"\"\n  type: BookingType @deprecated(reason: \"Use __typename instead\")\n\n  \"\"\"Total count of bags by the type\"\"\"\n  bagInfo: [Bag]\n  inbound: Sector\n  outbound: Sector\n}\n\nenum BookingType {\n  BOOKING_RETURN\n  BOOKING_MULTICITY\n  BOOKING_ONE_WAY\n}\n\n\"\"\"Bookings contact email and phone\"\"\"\ntype ContactDetails {\n  email: String\n  phone: String\n}\n\n\"\"\"GPS coordinate\"\"\"\ntype Coordinate {\n  lat: Float\n  lng: Float\n}\n\n\"\"\"\nA date string, such as 2007-12-03, compliant with the `full-date` format\noutlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for\nrepresentation of dates and times using the Gregorian calendar.\n\"\"\"\nscalar Date\n\n\"\"\"\nA date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the\n`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO\n8601 standard for representation of dates and times using the Gregorian calendar.\n\"\"\"\nscalar DateTime\n\ntype DateType {\n  local: DateTime\n  utc: DateTime\n}\n\n\"\"\"\nThis data needs to be accessed on a Trip and on BookingOneWay/Return/Multicity,\nso that we can re-use one component to show from to with correct icon\n\"\"\"\ninterface FromToInterface {\n  departure: RouteStop\n  arrival: RouteStop\n  type: BookingType\n}\n\ninput ItinerariesSearchInput {\n  \"\"\"Locations IDs for travel from (origin)\"\"\"\n  travelFrom: [String]!\n\n  \"\"\"Locations IDs for travel to (destination)\"\"\"\n  travelTo: [String]\n\n  \"\"\"Search itineraries from this date\"\"\"\n  dateFrom: Date!\n\n  \"\"\"Search itineraries up to this date\"\"\"\n  dateTo: Date\n\n  \"\"\"Search itineraries return from this date\"\"\"\n  returnDateFrom: Date\n\n  \"\"\"Search itineraries return up to this date\"\"\"\n  returnDateTo: Date\n\n  \"\"\"Number of children, adults and infants travelling\"\"\"\n  passengers: PassengersInput\n}\n\ntype Itinerary {\n  destination: Location\n  endTime: DateType\n\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  origin: Location\n  price: Price\n  sectors: [Sector]\n  startTime: DateType\n  type: String\n  bookingToken: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ItineraryConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ItineraryEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ItineraryEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Itinerary\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype Location {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  name: String\n  slug: String\n  locationId: String\n  timezone: String\n  country: LocationArea\n  city: LocationArea\n  coordinates: Coordinate\n  type: LocationType\n  countryFlagURL: String\n}\n\ntype LocationArea {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  locationId: String\n  name: String\n  slug: String\n  code: String\n  flagURL: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LocationConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LocationEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LocationEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Location\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ninput LocationsByTermInput {\n  term: String!\n\n  \"\"\"desired location type output\"\"\"\n  types: [LocationType]\n}\n\nenum LocationType {\n  STATION\n  AIRPORT\n  BUS_STATION\n  CITY\n  SUBDIVISION\n  COUNTRY\n  REGION\n  CONTINENT\n  AUTONOMOUS_TERRITORY\n  SPECIAL\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\n\"\"\"Passenger details\"\"\"\ntype Passenger {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  bags: [Bag]\n  birthday: String\n  category: String\n  firstname: String\n  insuranceType: String\n  lastname: String\n  nationality: String\n  title: String\n  visaRequired: Boolean\n}\n\ninput PassengersInput {\n  adults: Int\n  children: Int\n  infants: Int\n}\n\ntype Price {\n  amount: Float\n  currency: String\n}\n\ntype RootQuery {\n  \"\"\"Find a booking by its id\"\"\"\n  bookingDetail(id: ID!): BookingInterface\n\n  \"\"\"Retrieve all your bookings.\"\"\"\n  customerBookings(after: String, first: Int, before: String, last: Int): BookingInterfaceConnection\n\n  \"\"\"Query for suggested locations based on incomplete names\"\"\"\n  locationsByTerm(input: LocationsByTermInput!, after: String, first: Int, before: String, last: Int): LocationConnection\n\n  \"\"\"Query to fetch all itineraries(flights, busses, trains)\"\"\"\n  searchItineraries(input: ItinerariesSearchInput!, after: String, first: Int, before: String, last: Int): ItineraryConnection\n}\n\n\"\"\"Departure or arrival for a segment or sector\"\"\"\ntype RouteStop {\n  \"\"\"Contains utc and local time for arrival/departure of the stop\"\"\"\n  time: DateType\n\n  \"\"\"\n  This could be bus stop, trainstation, airport, anywhere the Sector or segment comes to a stop\n  \"\"\"\n  stop: Location\n}\n\ntype Sector implements FromToInterface {\n  duration: Int\n  segments: [Segment]\n  stopoverDuration: Int\n  departure: RouteStop\n  arrival: RouteStop\n  type: BookingType\n}\n\ntype Segment {\n  \"\"\"\n  The globally unique ID of an object. You can unmask this ID to get original\n  value but please note that this unmasked ID is not globally unique anymore and\n  therefore it cannot be used as a cache key.\n  \"\"\"\n  id(opaque: Boolean = true): ID!\n  transporter: Transporter\n  duration: Int\n  vehicle: Vehicle\n  departure: RouteStop\n  arrival: RouteStop\n}\n\ntype Transporter {\n  name: String\n}\n\ntype Vehicle {\n  type: String\n  uniqueNo: String\n}\n",
      "containsQueryType": true,
      "typesUndefined": [],
      "directivesUndefined": [
        "deprecated"
      ],
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 25,
      "containsCycle": false,
      "polynomialLevel": 3,
      "numDefinitions": 37
    }
  ],
  "metrics": {
    "created_at": "2019-03-18T08:12:37Z",
    "updated_at": "2019-03-18T08:19:32Z",
    "pushed_at": "2019-03-18T08:18:40Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}