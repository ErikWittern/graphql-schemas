{
  "repo_name": "Bears-Team-7",
  "repo_full_name": "chingu-voyage5/bears-team-7",
  "repo_owner": "chingu-voyage5",
  "repo_description": "Add-project-description-here | Voyage-5 | chingu.io",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "server/src/generated/prisma.graphql",
      "sha": "ee77776b0f1c64f4fe45f6af5f75dde0777e27f7",
      "url": "https://api.github.com/repositories/133161546/contents/server/src/generated/prisma.graphql?ref=6767214daec00ca77e2ba261a92c1b093aa04cb4",
      "git_url": "https://api.github.com/repositories/133161546/git/blobs/ee77776b0f1c64f4fe45f6af5f75dde0777e27f7",
      "html_url": "https://github.com/chingu-voyage5/Bears-Team-7/blob/6767214daec00ca77e2ba261a92c1b093aa04cb4/server/src/generated/prisma.graphql",
      "content": "# source: https://us1.prisma.sh/juliana-b31c0d/resto-app/dev\n# timestamp: Thu Jul 19 2018 15:44:58 GMT-0400 (EDT)\n\ntype AggregateCategories {\n  count: Int!\n}\n\ntype AggregateCoordinates {\n  count: Int!\n}\n\ntype AggregateLocation {\n  count: Int!\n}\n\ntype AggregateLoving {\n  count: Int!\n}\n\ntype AggregatePlace {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype AggregateWatching {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\ntype Categories {\n  title: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype CategoriesConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [CategoriesEdge]!\n  aggregate: AggregateCategories!\n}\n\ninput CategoriesCreateInput {\n  title: String\n}\n\ninput CategoriesCreateManyInput {\n  create: [CategoriesCreateInput!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CategoriesEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Categories!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum CategoriesOrderByInput {\n  title_ASC\n  title_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CategoriesPreviousValues {\n  title: String\n}\n\ntype CategoriesSubscriptionPayload {\n  mutation: MutationType!\n  node: Categories\n  updatedFields: [String!]\n  previousValues: CategoriesPreviousValues\n}\n\ninput CategoriesSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CategoriesSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CategoriesSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CategoriesSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CategoriesWhereInput\n}\n\ninput CategoriesUpdateInput {\n  title: String\n}\n\ninput CategoriesUpdateManyInput {\n  create: [CategoriesCreateInput!]\n}\n\ninput CategoriesWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CategoriesWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CategoriesWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CategoriesWhereInput!]\n  title: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  title_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  title_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  title_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  title_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  title_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  title_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  title_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  title_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  title_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  title_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  title_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  title_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  title_not_ends_with: String\n  _MagicalBackRelation_CategoriesToPlace_every: PlaceWhereInput\n  _MagicalBackRelation_CategoriesToPlace_some: PlaceWhereInput\n  _MagicalBackRelation_CategoriesToPlace_none: PlaceWhereInput\n}\n\ntype Coordinates {\n  latitude: Float\n  longitude: Float\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype CoordinatesConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [CoordinatesEdge]!\n  aggregate: AggregateCoordinates!\n}\n\ninput CoordinatesCreateInput {\n  latitude: Float\n  longitude: Float\n}\n\ninput CoordinatesCreateOneInput {\n  create: CoordinatesCreateInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CoordinatesEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Coordinates!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum CoordinatesOrderByInput {\n  latitude_ASC\n  latitude_DESC\n  longitude_ASC\n  longitude_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype CoordinatesPreviousValues {\n  latitude: Float\n  longitude: Float\n}\n\ntype CoordinatesSubscriptionPayload {\n  mutation: MutationType!\n  node: Coordinates\n  updatedFields: [String!]\n  previousValues: CoordinatesPreviousValues\n}\n\ninput CoordinatesSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CoordinatesSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CoordinatesSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CoordinatesSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CoordinatesWhereInput\n}\n\ninput CoordinatesUpdateDataInput {\n  latitude: Float\n  longitude: Float\n}\n\ninput CoordinatesUpdateInput {\n  latitude: Float\n  longitude: Float\n}\n\ninput CoordinatesUpdateOneInput {\n  create: CoordinatesCreateInput\n  disconnect: Boolean\n  delete: Boolean\n  update: CoordinatesUpdateDataInput\n  upsert: CoordinatesUpsertNestedInput\n}\n\ninput CoordinatesUpsertNestedInput {\n  update: CoordinatesUpdateDataInput!\n  create: CoordinatesCreateInput!\n}\n\ninput CoordinatesWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CoordinatesWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CoordinatesWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CoordinatesWhereInput!]\n  latitude: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  latitude_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  latitude_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  latitude_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  latitude_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  latitude_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  latitude_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  latitude_gte: Float\n  longitude: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  longitude_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  longitude_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  longitude_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  longitude_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  longitude_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  longitude_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  longitude_gte: Float\n  _MagicalBackRelation_CoordinatesToPlace_every: PlaceWhereInput\n  _MagicalBackRelation_CoordinatesToPlace_some: PlaceWhereInput\n  _MagicalBackRelation_CoordinatesToPlace_none: PlaceWhereInput\n}\n\nscalar DateTime\n\ntype Location {\n  address1: String!\n  city: String!\n  state: String\n  country: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LocationConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LocationEdge]!\n  aggregate: AggregateLocation!\n}\n\ninput LocationCreateInput {\n  address1: String!\n  city: String!\n  state: String\n  country: String!\n}\n\ninput LocationCreateOneInput {\n  create: LocationCreateInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LocationEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Location!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum LocationOrderByInput {\n  address1_ASC\n  address1_DESC\n  city_ASC\n  city_DESC\n  state_ASC\n  state_DESC\n  country_ASC\n  country_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype LocationPreviousValues {\n  address1: String!\n  city: String!\n  state: String\n  country: String!\n}\n\ntype LocationSubscriptionPayload {\n  mutation: MutationType!\n  node: Location\n  updatedFields: [String!]\n  previousValues: LocationPreviousValues\n}\n\ninput LocationSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [LocationSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [LocationSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [LocationSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LocationWhereInput\n}\n\ninput LocationUpdateDataInput {\n  address1: String\n  city: String\n  state: String\n  country: String\n}\n\ninput LocationUpdateInput {\n  address1: String\n  city: String\n  state: String\n  country: String\n}\n\ninput LocationUpdateOneInput {\n  create: LocationCreateInput\n  disconnect: Boolean\n  delete: Boolean\n  update: LocationUpdateDataInput\n  upsert: LocationUpsertNestedInput\n}\n\ninput LocationUpsertNestedInput {\n  update: LocationUpdateDataInput!\n  create: LocationCreateInput!\n}\n\ninput LocationWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [LocationWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [LocationWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [LocationWhereInput!]\n  address1: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  address1_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  address1_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  address1_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  address1_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  address1_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  address1_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  address1_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  address1_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  address1_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  address1_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  address1_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  address1_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  address1_not_ends_with: String\n  city: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  city_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  city_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  city_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  city_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  city_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  city_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  city_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  city_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  city_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  city_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  city_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  city_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  city_not_ends_with: String\n  state: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  state_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  state_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  state_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  state_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  state_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  state_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  state_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  state_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  state_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  state_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  state_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  state_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  state_not_ends_with: String\n  country: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  country_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  country_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  country_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  country_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  country_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  country_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  country_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  country_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  country_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  country_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  country_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  country_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  country_not_ends_with: String\n  _MagicalBackRelation_LocationToPlace_every: PlaceWhereInput\n  _MagicalBackRelation_LocationToPlace_some: PlaceWhereInput\n  _MagicalBackRelation_LocationToPlace_none: PlaceWhereInput\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Loving implements Node {\n  id: ID!\n  place(where: PlaceWhereInput): Place!\n  user(where: UserWhereInput): User!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LovingConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LovingEdge]!\n  aggregate: AggregateLoving!\n}\n\ninput LovingCreateInput {\n  place: PlaceCreateOneWithoutLoversInput!\n  user: UserCreateOneWithoutLovingInput!\n}\n\ninput LovingCreateManyWithoutPlaceInput {\n  create: [LovingCreateWithoutPlaceInput!]\n  connect: [LovingWhereUniqueInput!]\n}\n\ninput LovingCreateManyWithoutUserInput {\n  create: [LovingCreateWithoutUserInput!]\n  connect: [LovingWhereUniqueInput!]\n}\n\ninput LovingCreateWithoutPlaceInput {\n  user: UserCreateOneWithoutLovingInput!\n}\n\ninput LovingCreateWithoutUserInput {\n  place: PlaceCreateOneWithoutLoversInput!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LovingEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Loving!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum LovingOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype LovingPreviousValues {\n  id: ID!\n}\n\ntype LovingSubscriptionPayload {\n  mutation: MutationType!\n  node: Loving\n  updatedFields: [String!]\n  previousValues: LovingPreviousValues\n}\n\ninput LovingSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [LovingSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [LovingSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [LovingSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: LovingWhereInput\n}\n\ninput LovingUpdateInput {\n  place: PlaceUpdateOneWithoutLoversInput\n  user: UserUpdateOneWithoutLovingInput\n}\n\ninput LovingUpdateManyWithoutPlaceInput {\n  create: [LovingCreateWithoutPlaceInput!]\n  connect: [LovingWhereUniqueInput!]\n  disconnect: [LovingWhereUniqueInput!]\n  delete: [LovingWhereUniqueInput!]\n  update: [LovingUpdateWithWhereUniqueWithoutPlaceInput!]\n  upsert: [LovingUpsertWithWhereUniqueWithoutPlaceInput!]\n}\n\ninput LovingUpdateManyWithoutUserInput {\n  create: [LovingCreateWithoutUserInput!]\n  connect: [LovingWhereUniqueInput!]\n  disconnect: [LovingWhereUniqueInput!]\n  delete: [LovingWhereUniqueInput!]\n  update: [LovingUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [LovingUpsertWithWhereUniqueWithoutUserInput!]\n}\n\ninput LovingUpdateWithoutPlaceDataInput {\n  user: UserUpdateOneWithoutLovingInput\n}\n\ninput LovingUpdateWithoutUserDataInput {\n  place: PlaceUpdateOneWithoutLoversInput\n}\n\ninput LovingUpdateWithWhereUniqueWithoutPlaceInput {\n  where: LovingWhereUniqueInput!\n  data: LovingUpdateWithoutPlaceDataInput!\n}\n\ninput LovingUpdateWithWhereUniqueWithoutUserInput {\n  where: LovingWhereUniqueInput!\n  data: LovingUpdateWithoutUserDataInput!\n}\n\ninput LovingUpsertWithWhereUniqueWithoutPlaceInput {\n  where: LovingWhereUniqueInput!\n  update: LovingUpdateWithoutPlaceDataInput!\n  create: LovingCreateWithoutPlaceInput!\n}\n\ninput LovingUpsertWithWhereUniqueWithoutUserInput {\n  where: LovingWhereUniqueInput!\n  update: LovingUpdateWithoutUserDataInput!\n  create: LovingCreateWithoutUserInput!\n}\n\ninput LovingWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [LovingWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [LovingWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [LovingWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  place: PlaceWhereInput\n  user: UserWhereInput\n}\n\ninput LovingWhereUniqueInput {\n  id: ID\n}\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  createPlace(data: PlaceCreateInput!): Place!\n  createLoving(data: LovingCreateInput!): Loving!\n  createWatching(data: WatchingCreateInput!): Watching!\n  createCoordinates(data: CoordinatesCreateInput!): Coordinates!\n  createLocation(data: LocationCreateInput!): Location!\n  createCategories(data: CategoriesCreateInput!): Categories!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updatePlace(data: PlaceUpdateInput!, where: PlaceWhereUniqueInput!): Place\n  updateLoving(data: LovingUpdateInput!, where: LovingWhereUniqueInput!): Loving\n  updateWatching(data: WatchingUpdateInput!, where: WatchingWhereUniqueInput!): Watching\n  deleteUser(where: UserWhereUniqueInput!): User\n  deletePlace(where: PlaceWhereUniqueInput!): Place\n  deleteLoving(where: LovingWhereUniqueInput!): Loving\n  deleteWatching(where: WatchingWhereUniqueInput!): Watching\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertPlace(where: PlaceWhereUniqueInput!, create: PlaceCreateInput!, update: PlaceUpdateInput!): Place!\n  upsertLoving(where: LovingWhereUniqueInput!, create: LovingCreateInput!, update: LovingUpdateInput!): Loving!\n  upsertWatching(where: WatchingWhereUniqueInput!, create: WatchingCreateInput!, update: WatchingUpdateInput!): Watching!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  updateManyPlaces(data: PlaceUpdateInput!, where: PlaceWhereInput): BatchPayload!\n  updateManyLovings(data: LovingUpdateInput!, where: LovingWhereInput): BatchPayload!\n  updateManyWatchings(data: WatchingUpdateInput!, where: WatchingWhereInput): BatchPayload!\n  updateManyCoordinateses(data: CoordinatesUpdateInput!, where: CoordinatesWhereInput): BatchPayload!\n  updateManyLocations(data: LocationUpdateInput!, where: LocationWhereInput): BatchPayload!\n  updateManyCategorieses(data: CategoriesUpdateInput!, where: CategoriesWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyPlaces(where: PlaceWhereInput): BatchPayload!\n  deleteManyLovings(where: LovingWhereInput): BatchPayload!\n  deleteManyWatchings(where: WatchingWhereInput): BatchPayload!\n  deleteManyCoordinateses(where: CoordinatesWhereInput): BatchPayload!\n  deleteManyLocations(where: LocationWhereInput): BatchPayload!\n  deleteManyCategorieses(where: CategoriesWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Place implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  yelpId: String!\n  price: String\n  location(where: LocationWhereInput): Location\n  coordinates(where: CoordinatesWhereInput): Coordinates\n  categories(where: CategoriesWhereInput, orderBy: CategoriesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Categories!]\n  photos: String\n  watchers(where: WatchingWhereInput, orderBy: WatchingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Watching!]\n  lovers(where: LovingWhereInput, orderBy: LovingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Loving!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PlaceConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PlaceEdge]!\n  aggregate: AggregatePlace!\n}\n\ninput PlaceCreateInput {\n  name: String!\n  yelpId: String!\n  price: String\n  photos: String\n  location: LocationCreateOneInput\n  coordinates: CoordinatesCreateOneInput\n  categories: CategoriesCreateManyInput\n  watchers: WatchingCreateManyWithoutPlaceInput\n  lovers: LovingCreateManyWithoutPlaceInput\n}\n\ninput PlaceCreateOneWithoutLoversInput {\n  create: PlaceCreateWithoutLoversInput\n  connect: PlaceWhereUniqueInput\n}\n\ninput PlaceCreateOneWithoutWatchersInput {\n  create: PlaceCreateWithoutWatchersInput\n  connect: PlaceWhereUniqueInput\n}\n\ninput PlaceCreateWithoutLoversInput {\n  name: String!\n  yelpId: String!\n  price: String\n  photos: String\n  location: LocationCreateOneInput\n  coordinates: CoordinatesCreateOneInput\n  categories: CategoriesCreateManyInput\n  watchers: WatchingCreateManyWithoutPlaceInput\n}\n\ninput PlaceCreateWithoutWatchersInput {\n  name: String!\n  yelpId: String!\n  price: String\n  photos: String\n  location: LocationCreateOneInput\n  coordinates: CoordinatesCreateOneInput\n  categories: CategoriesCreateManyInput\n  lovers: LovingCreateManyWithoutPlaceInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PlaceEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Place!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum PlaceOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  name_ASC\n  name_DESC\n  yelpId_ASC\n  yelpId_DESC\n  price_ASC\n  price_DESC\n  photos_ASC\n  photos_DESC\n}\n\ntype PlacePreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  yelpId: String!\n  price: String\n  photos: String\n}\n\ntype PlaceSubscriptionPayload {\n  mutation: MutationType!\n  node: Place\n  updatedFields: [String!]\n  previousValues: PlacePreviousValues\n}\n\ninput PlaceSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PlaceSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PlaceSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PlaceSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PlaceWhereInput\n}\n\ninput PlaceUpdateInput {\n  name: String\n  yelpId: String\n  price: String\n  photos: String\n  location: LocationUpdateOneInput\n  coordinates: CoordinatesUpdateOneInput\n  categories: CategoriesUpdateManyInput\n  watchers: WatchingUpdateManyWithoutPlaceInput\n  lovers: LovingUpdateManyWithoutPlaceInput\n}\n\ninput PlaceUpdateOneWithoutLoversInput {\n  create: PlaceCreateWithoutLoversInput\n  connect: PlaceWhereUniqueInput\n  delete: Boolean\n  update: PlaceUpdateWithoutLoversDataInput\n  upsert: PlaceUpsertWithoutLoversInput\n}\n\ninput PlaceUpdateOneWithoutWatchersInput {\n  create: PlaceCreateWithoutWatchersInput\n  connect: PlaceWhereUniqueInput\n  delete: Boolean\n  update: PlaceUpdateWithoutWatchersDataInput\n  upsert: PlaceUpsertWithoutWatchersInput\n}\n\ninput PlaceUpdateWithoutLoversDataInput {\n  name: String\n  yelpId: String\n  price: String\n  photos: String\n  location: LocationUpdateOneInput\n  coordinates: CoordinatesUpdateOneInput\n  categories: CategoriesUpdateManyInput\n  watchers: WatchingUpdateManyWithoutPlaceInput\n}\n\ninput PlaceUpdateWithoutWatchersDataInput {\n  name: String\n  yelpId: String\n  price: String\n  photos: String\n  location: LocationUpdateOneInput\n  coordinates: CoordinatesUpdateOneInput\n  categories: CategoriesUpdateManyInput\n  lovers: LovingUpdateManyWithoutPlaceInput\n}\n\ninput PlaceUpsertWithoutLoversInput {\n  update: PlaceUpdateWithoutLoversDataInput!\n  create: PlaceCreateWithoutLoversInput!\n}\n\ninput PlaceUpsertWithoutWatchersInput {\n  update: PlaceUpdateWithoutWatchersDataInput!\n  create: PlaceCreateWithoutWatchersInput!\n}\n\ninput PlaceWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PlaceWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PlaceWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PlaceWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  yelpId: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  yelpId_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  yelpId_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  yelpId_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  yelpId_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  yelpId_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  yelpId_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  yelpId_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  yelpId_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  yelpId_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  yelpId_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  yelpId_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  yelpId_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  yelpId_not_ends_with: String\n  price: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  price_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  price_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  price_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  price_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  price_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  price_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  price_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  price_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  price_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  price_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  price_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  price_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  price_not_ends_with: String\n  photos: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  photos_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  photos_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  photos_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  photos_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  photos_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  photos_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  photos_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  photos_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  photos_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  photos_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  photos_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  photos_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  photos_not_ends_with: String\n  location: LocationWhereInput\n  coordinates: CoordinatesWhereInput\n  categories_every: CategoriesWhereInput\n  categories_some: CategoriesWhereInput\n  categories_none: CategoriesWhereInput\n  watchers_every: WatchingWhereInput\n  watchers_some: WatchingWhereInput\n  watchers_none: WatchingWhereInput\n  lovers_every: LovingWhereInput\n  lovers_some: LovingWhereInput\n  lovers_none: LovingWhereInput\n}\n\ninput PlaceWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  places(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Place]!\n  lovings(where: LovingWhereInput, orderBy: LovingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Loving]!\n  watchings(where: WatchingWhereInput, orderBy: WatchingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Watching]!\n  coordinateses(where: CoordinatesWhereInput, orderBy: CoordinatesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Coordinates]!\n  locations(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Location]!\n  categorieses(where: CategoriesWhereInput, orderBy: CategoriesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Categories]!\n  user(where: UserWhereUniqueInput!): User\n  place(where: PlaceWhereUniqueInput!): Place\n  loving(where: LovingWhereUniqueInput!): Loving\n  watching(where: WatchingWhereUniqueInput!): Watching\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  placesConnection(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PlaceConnection!\n  lovingsConnection(where: LovingWhereInput, orderBy: LovingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LovingConnection!\n  watchingsConnection(where: WatchingWhereInput, orderBy: WatchingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WatchingConnection!\n  coordinatesesConnection(where: CoordinatesWhereInput, orderBy: CoordinatesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CoordinatesConnection!\n  locationsConnection(where: LocationWhereInput, orderBy: LocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LocationConnection!\n  categoriesesConnection(where: CategoriesWhereInput, orderBy: CategoriesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CategoriesConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  place(where: PlaceSubscriptionWhereInput): PlaceSubscriptionPayload\n  loving(where: LovingSubscriptionWhereInput): LovingSubscriptionPayload\n  watching(where: WatchingSubscriptionWhereInput): WatchingSubscriptionPayload\n  coordinates(where: CoordinatesSubscriptionWhereInput): CoordinatesSubscriptionPayload\n  location(where: LocationSubscriptionWhereInput): LocationSubscriptionPayload\n  categories(where: CategoriesSubscriptionWhereInput): CategoriesSubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  email: String!\n  password: String!\n  name: String!\n  watching(where: WatchingWhereInput, orderBy: WatchingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Watching!]\n  loving(where: LovingWhereInput, orderBy: LovingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Loving!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  password: String!\n  name: String!\n  watching: WatchingCreateManyWithoutUserInput\n  loving: LovingCreateManyWithoutUserInput\n}\n\ninput UserCreateOneWithoutLovingInput {\n  create: UserCreateWithoutLovingInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutWatchingInput {\n  create: UserCreateWithoutWatchingInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutLovingInput {\n  email: String!\n  password: String!\n  name: String!\n  watching: WatchingCreateManyWithoutUserInput\n}\n\ninput UserCreateWithoutWatchingInput {\n  email: String!\n  password: String!\n  name: String!\n  loving: LovingCreateManyWithoutUserInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  password: String!\n  name: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  email: String\n  password: String\n  name: String\n  watching: WatchingUpdateManyWithoutUserInput\n  loving: LovingUpdateManyWithoutUserInput\n}\n\ninput UserUpdateOneWithoutLovingInput {\n  create: UserCreateWithoutLovingInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutLovingDataInput\n  upsert: UserUpsertWithoutLovingInput\n}\n\ninput UserUpdateOneWithoutWatchingInput {\n  create: UserCreateWithoutWatchingInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutWatchingDataInput\n  upsert: UserUpsertWithoutWatchingInput\n}\n\ninput UserUpdateWithoutLovingDataInput {\n  email: String\n  password: String\n  name: String\n  watching: WatchingUpdateManyWithoutUserInput\n}\n\ninput UserUpdateWithoutWatchingDataInput {\n  email: String\n  password: String\n  name: String\n  loving: LovingUpdateManyWithoutUserInput\n}\n\ninput UserUpsertWithoutLovingInput {\n  update: UserUpdateWithoutLovingDataInput!\n  create: UserCreateWithoutLovingInput!\n}\n\ninput UserUpsertWithoutWatchingInput {\n  update: UserUpdateWithoutWatchingDataInput!\n  create: UserCreateWithoutWatchingInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  email: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  email_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  email_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  email_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  email_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  email_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  email_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  email_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  email_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  email_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  email_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  email_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  email_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  email_not_ends_with: String\n  password: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  password_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  password_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  password_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  password_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  password_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  password_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  password_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  password_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  password_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  password_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  password_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  password_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  password_not_ends_with: String\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  watching_every: WatchingWhereInput\n  watching_some: WatchingWhereInput\n  watching_none: WatchingWhereInput\n  loving_every: LovingWhereInput\n  loving_some: LovingWhereInput\n  loving_none: LovingWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n\ntype Watching implements Node {\n  id: ID!\n  place(where: PlaceWhereInput): Place!\n  user(where: UserWhereInput): User!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype WatchingConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [WatchingEdge]!\n  aggregate: AggregateWatching!\n}\n\ninput WatchingCreateInput {\n  place: PlaceCreateOneWithoutWatchersInput!\n  user: UserCreateOneWithoutWatchingInput!\n}\n\ninput WatchingCreateManyWithoutPlaceInput {\n  create: [WatchingCreateWithoutPlaceInput!]\n  connect: [WatchingWhereUniqueInput!]\n}\n\ninput WatchingCreateManyWithoutUserInput {\n  create: [WatchingCreateWithoutUserInput!]\n  connect: [WatchingWhereUniqueInput!]\n}\n\ninput WatchingCreateWithoutPlaceInput {\n  user: UserCreateOneWithoutWatchingInput!\n}\n\ninput WatchingCreateWithoutUserInput {\n  place: PlaceCreateOneWithoutWatchersInput!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype WatchingEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Watching!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum WatchingOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype WatchingPreviousValues {\n  id: ID!\n}\n\ntype WatchingSubscriptionPayload {\n  mutation: MutationType!\n  node: Watching\n  updatedFields: [String!]\n  previousValues: WatchingPreviousValues\n}\n\ninput WatchingSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [WatchingSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [WatchingSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [WatchingSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: WatchingWhereInput\n}\n\ninput WatchingUpdateInput {\n  place: PlaceUpdateOneWithoutWatchersInput\n  user: UserUpdateOneWithoutWatchingInput\n}\n\ninput WatchingUpdateManyWithoutPlaceInput {\n  create: [WatchingCreateWithoutPlaceInput!]\n  connect: [WatchingWhereUniqueInput!]\n  disconnect: [WatchingWhereUniqueInput!]\n  delete: [WatchingWhereUniqueInput!]\n  update: [WatchingUpdateWithWhereUniqueWithoutPlaceInput!]\n  upsert: [WatchingUpsertWithWhereUniqueWithoutPlaceInput!]\n}\n\ninput WatchingUpdateManyWithoutUserInput {\n  create: [WatchingCreateWithoutUserInput!]\n  connect: [WatchingWhereUniqueInput!]\n  disconnect: [WatchingWhereUniqueInput!]\n  delete: [WatchingWhereUniqueInput!]\n  update: [WatchingUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [WatchingUpsertWithWhereUniqueWithoutUserInput!]\n}\n\ninput WatchingUpdateWithoutPlaceDataInput {\n  user: UserUpdateOneWithoutWatchingInput\n}\n\ninput WatchingUpdateWithoutUserDataInput {\n  place: PlaceUpdateOneWithoutWatchersInput\n}\n\ninput WatchingUpdateWithWhereUniqueWithoutPlaceInput {\n  where: WatchingWhereUniqueInput!\n  data: WatchingUpdateWithoutPlaceDataInput!\n}\n\ninput WatchingUpdateWithWhereUniqueWithoutUserInput {\n  where: WatchingWhereUniqueInput!\n  data: WatchingUpdateWithoutUserDataInput!\n}\n\ninput WatchingUpsertWithWhereUniqueWithoutPlaceInput {\n  where: WatchingWhereUniqueInput!\n  update: WatchingUpdateWithoutPlaceDataInput!\n  create: WatchingCreateWithoutPlaceInput!\n}\n\ninput WatchingUpsertWithWhereUniqueWithoutUserInput {\n  where: WatchingWhereUniqueInput!\n  update: WatchingUpdateWithoutUserDataInput!\n  create: WatchingCreateWithoutUserInput!\n}\n\ninput WatchingWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [WatchingWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [WatchingWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [WatchingWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  place: PlaceWhereInput\n  user: UserWhereInput\n}\n\ninput WatchingWhereUniqueInput {\n  id: ID\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 47,
      "containsCycle": true,
      "numDefinitions": 144
    }
  ],
  "metrics": {
    "created_at": "2018-05-12T16:04:37Z",
    "updated_at": "2018-08-17T12:22:48Z",
    "pushed_at": "2018-07-19T20:00:49Z",
    "issues": 14,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 8,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 8,
    "releases": 0,
    "stargazers": 1
  }
}