{
  "repo_name": "frontend",
  "repo_full_name": "emcasa/frontend",
  "repo_owner": "emcasa",
  "repo_description": "EmCasa Web Client",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "__e2e__/server/schema.graphql",
      "sha": "50e104627df271ee6b7ec58ab3106c989967aba1",
      "url": "https://api.github.com/repositories/95909196/contents/__e2e__/server/schema.graphql?ref=585df64dc20810678e0fd4848468f7374ebd44d6",
      "git_url": "https://api.github.com/repositories/95909196/git/blobs/50e104627df271ee6b7ec58ab3106c989967aba1",
      "html_url": "https://github.com/emcasa/frontend/blob/585df64dc20810678e0fd4848468f7374ebd44d6/__e2e__/server/schema.graphql",
      "content": "schema {\n  query: RootQueryType\n  mutation: RootMutationType\n  subscription: RootSubscriptionType\n}\n\ntype Address {\n  city: String\n  citySlug: String\n  id: ID\n  lat: Float\n  lng: Float\n  neighborhood: String\n  neighborhoodSlug: String\n  postalCode: String\n  state: String\n  stateSlug: String\n  street: String\n  streetNumber: String\n  streetSlug: String\n}\n\ninput AddressInput {\n  city: String!\n  lat: Float!\n  lng: Float!\n  neighborhood: String!\n  postalCode: String!\n  state: String!\n  street: String!\n  streetNumber: String!\n}\n\ntype Channel {\n  id: ID\n  listing: Listing\n  messages(limit: Int, offset: Int): [Message]\n  participant1: User\n  participant2: User\n  unreadCount: Int\n}\n\ntype Contact {\n  email: String\n  id: ID\n  message: String\n  name: String\n  phone: String\n  user: User\n}\n\ntype Credentials {\n  jwt: String\n  user: User\n}\n\ntype Dashboard {\n  activeListingCount: Int\n  areaCount: Int\n  favoriteCount: Int\n  maintenanceFeeCount: Int\n  propertyTaxCount: Int\n  tourCount: Int\n  tourVisualizationCount: Int\n  visualizationCount: Int\n}\n\nscalar DateTime\n\ntype Image {\n  description: String\n  filename: String\n  id: ID\n  isActive: Boolean\n  position: Int\n}\n\ninput ImageInsertInput {\n  description: String\n  filename: String!\n  isActive: Boolean\n  listingId: ID!\n}\n\ninput ImageUpdateInput {\n  description: String\n  id: ID!\n  position: Int\n}\n\ntype InterestType {\n  id: ID\n  name: String\n}\n\ntype Listing {\n  matterportCode: String\n  listingFavoriteCount: Int\n  type: String\n  id: ID\n  complement: String\n  address: Address\n  isExclusive: Boolean\n  related(\n    filters: ListingFilterInput!\n    pagination: ListingPagination!\n  ): ListingIndex\n  maintenanceFee: Float\n  tourVisualisationCount: Int\n  hasElevator: Boolean\n  suites: Int\n  inPersonVisitCount: Int\n  garageSpots: Int\n  propertyTax: Float\n  restrooms: Int\n  rooms: Int\n  area: Int\n  images(isActive: Boolean, limit: Int): [Image]\n  isActive: Boolean\n  listingVisualisationCount: Int\n  dependencies: Int\n  isRelease: Boolean\n  floor: String\n  description: String\n  price: Int\n  owner: User\n  suggestedPrice: Float\n  previousPrices: [PriceHistory]\n  insertedAt: DateTime\n  priceRecentlyReduced: Boolean\n  interestCount: Int\n  bathrooms: Int\n  balconies: Int\n}\n\ntype ListingFilter {\n  maxArea: Int\n  maxGarageSpots: Int\n  maxLat: Float\n  maxLng: Float\n  maxPrice: Int\n  maxRooms: Int\n  minArea: Int\n  minGarageSpots: Int\n  minLat: Float\n  minLng: Float\n  minPrice: Int\n  minRooms: Int\n  neighborhoods: [String]\n  neighborhoodsSlugs: [String]\n  types: [String]\n}\n\ninput ListingFilterInput {\n  maxArea: Int\n  maxGarageSpots: Int\n  maxLat: Float\n  maxLng: Float\n  maxPrice: Int\n  maxRooms: Int\n  minArea: Int\n  minGarageSpots: Int\n  minLat: Float\n  minLng: Float\n  minPrice: Int\n  minRooms: Int\n  neighborhoods: [String]\n  neighborhoodsSlugs: [String]\n  types: [String]\n}\n\ntype ListingIndex {\n  filters: ListingFilter\n  listings: [Listing]\n  remainingCount: Int\n}\n\ninput ListingInput {\n  address: AddressInput\n  addressId: ID\n  area: Int\n  balconies: Int\n  bathrooms: Int\n  complement: String\n  dependencies: Int\n  description: String\n  floor: String\n  garageSpots: Int\n  hasElevator: Boolean\n  isExclusive: Boolean\n  isRelease: Boolean\n  maintenanceFee: Float\n  matterportCode: String\n  phone: String\n  price: Int\n  propertyTax: Float\n  restrooms: Int\n  rooms: Int\n  suites: Int\n  type: String!\n}\n\ninput ListingPagination {\n  excludedListingIds: [ID]\n  pageSize: Int\n}\n\ntype ListingUser {\n  listing: Listing\n  user: User\n}\n\ntype Message {\n  id: ID\n  insertedAt: DateTime\n  listing: Listing\n  message: String\n  notified: Boolean\n  read: Boolean\n  receiver: User\n  sender: User\n}\n\ntype NotificationPreferences {\n  app: Boolean\n  email: Boolean\n}\n\ninput NotificationPreferencesInput {\n  app: Boolean\n  email: Boolean\n}\n\nenum OrderableField {\n  AREA\n  BALCONIES\n  BATHROOMS\n  DEPENDENCIES\n  GARAGE_SPOTS\n  ID\n  MAINTENANCE_FEE\n  PRICE\n  PROPERTY_TAX\n  RESTROOMS\n  ROOMS\n  SUITES\n}\n\ninput OrderBy {\n  field: OrderableField\n  type: OrderType\n}\n\nenum OrderType {\n  ASC\n  DESC\n}\n\ntype PriceHistory {\n  insertedAt: DateTime\n  price: Int\n}\n\ntype PriceRequest {\n  address: Address\n  area: Int\n  bathrooms: Int\n  email: String\n  garageSpots: Int\n  id: ID\n  isCovered: Boolean\n  name: String\n  rooms: Int\n  suggestedPrice: Float\n  user: User\n}\n\ntype RootMutationType {\n  # Activate listing\n  activateListing(id: ID!): Listing\n\n  # Insert address\n  addressInsert(input: AddressInput!): Address\n\n  # Change email\n  changeEmail(email: String, id: ID!): User\n\n  # Change password\n  changePassword(currentPassword: String, id: ID!, newPassword: String): User\n\n  # Confirm registration\n  confirm(token: String!): Credentials\n\n  # Deactivate listing\n  deactivateListing(id: ID!): Listing\n\n  # Edit user profile\n  editUserProfile(\n    deviceToken: String\n    id: ID!\n    name: String\n    notificationPreferences: NotificationPreferencesInput\n    phone: String\n  ): User\n\n  # Favorite listing\n  favoriteListing(id: ID!): ListingUser\n\n  # Inser image\n  insertImage(input: ImageInsertInput!): Image\n\n  # Insert listing\n  insertListing(input: ListingInput!): Listing\n\n  # Blacklist listing\n  listingBlacklist(id: ID!): ListingUser\n\n  # Unblacklist listing\n  listingUnblacklist(id: ID!): ListingUser\n\n  # Mark message as read\n  markAsRead(id: ID!): Message\n\n  # Register\n  register(\n    deviceToken: String\n    email: String!\n    name: String!\n    password: String!\n    phone: String\n  ): Credentials\n\n  # Request contact\n  requestContact(\n    email: String\n    message: String\n    name: String\n    phone: String\n  ): Contact\n\n  # Request price suggestion\n  requestPriceSuggestion(\n    address: AddressInput!\n    area: Int!\n    bathrooms: Int!\n    email: String!\n    garageSpots: Int!\n    isCovered: Boolean!\n    name: String!\n    rooms: Int!\n  ): PriceRequest\n\n  # Send message\n  sendMessage(listingId: ID!, message: String, receiverId: ID!): Message\n\n  # Sign in\n  signIn(email: String!, password: String!): Credentials\n\n  # Tour visualization\n  tourVisualized(id: ID!): Listing\n\n  # Unfavorite listing\n  unfavoriteListing(id: ID!): ListingUser\n\n  # Update images\n  updateImages(input: [ImageUpdateInput!]!): [Image]\n\n  # Update listing\n  updateListing(id: ID!, input: ListingInput!): Listing\n  uploadFactorsCsv(factors: Upload!): String\n}\n\ntype RootQueryType {\n  # Get dashboard stats\n  dashboard: Dashboard\n\n  # Get favorited listings\n  favoritedListings: [Listing]\n\n  # Featured listings\n  featuredListings: [Listing]\n\n  # Interest types\n  interestTypes: [InterestType]\n\n  # Show listing\n  listing(id: ID!): Listing\n\n  # List user messages, optionally by listing\n  listingUserMessages(listingId: ID, senderId: ID): UserMessages\n\n  # Listings index\n  listings(\n    filters: ListingFilterInput\n    orderBy: [OrderBy]\n    pagination: ListingPagination\n  ): ListingIndex\n\n  # Get all neighborhoods\n  neighborhoods: [String]\n\n  # Get listings with relaxed filters\n  relaxedListings(\n    filters: ListingFilterInput\n    orderBy: [OrderBy]\n    pagination: ListingPagination\n  ): ListingIndex\n\n  # Get favorited users\n  showFavoritedUsers(id: ID!): [User]\n\n  # Get user channels\n  userChannels(listingId: ID, otherParticipantId: ID): [Channel]\n\n  # List user listings\n  userListings: [Listing]\n\n  # Get user profile\n  userProfile(id: ID): User\n}\n\ntype RootSubscriptionType {\n  # Subscribe to email change\n  contactRequested: Contact\n\n  # Subscribe to email change\n  emailChanged: Listing\n\n  # Subscribe to listing activation\n  listingActivated: Listing\n\n  # Subscribe to listing deactivation\n  listingDeactivated: Listing\n\n  # Subscribe to listing show\n  listingInserted: Listing\n\n  # Subscribe to your messages\n  messageSent: Message\n\n  # Send e-mail notification for new messages\n  messageSentAdmin: Message\n\n  # Subscribe to password reset\n  passwordResetRequested: User\n\n  # Subscribe to price suggestion requests\n  priceSuggestionRequested: PriceRequest\n\n  # Subscribe to user confirmation\n  userConfirmed: Credentials\n\n  # Subscribe to user registration\n  userRegistered: Credentials\n}\n\n# Represents an uploaded file.\n#\nscalar Upload\n\ntype User {\n  blacklists(\n    filters: ListingFilterInput!\n    pagination: ListingPagination!\n  ): [Listing]\n  email: String\n  favorites(\n    filters: ListingFilterInput!\n    pagination: ListingPagination!\n  ): [Listing]\n  id: ID\n  listings(\n    filters: ListingFilterInput!\n    pagination: ListingPagination!\n  ): [Listing]\n  name: String\n  notificationPreferences: NotificationPreferences\n  phone: String\n  role: String\n}\n\ntype UserMessages {\n  messages: [Message]\n  user: User\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 20,
      "containsCycle": true,
      "numDefinitions": 33
    }
  ],
  "metrics": {
    "created_at": "2017-06-30T17:15:58Z",
    "updated_at": "2019-07-19T19:03:58Z",
    "pushed_at": "2019-07-19T19:03:59Z",
    "issues": 0,
    "watchers": 6,
    "fork_count": 13,
    "has_wiki_enabled": false,
    "license": "mit",
    "pull_requests": 1160,
    "pull_requests_open": 1,
    "pull_requests_closed": 24,
    "pull_requests_merged": 1135,
    "releases": 0,
    "stargazers": 58
  }
}