{
  "repo_name": "yours-sincerely",
  "repo_full_name": "its-bananas/yours-sincerely",
  "repo_owner": "its-bananas",
  "repo_description": "Endless senseless collaborative book",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "server/schema/generated/prisma.graphql",
      "sha": "9c0a82190baf772f6d41935ea8696cce6c09840a",
      "url": "https://api.github.com/repositories/176449912/contents/server/schema/generated/prisma.graphql?ref=b7619c7b0d403a2f1e1b10900097d2e145b57271",
      "git_url": "https://api.github.com/repositories/176449912/git/blobs/9c0a82190baf772f6d41935ea8696cce6c09840a",
      "html_url": "https://github.com/its-bananas/yours-sincerely/blob/b7619c7b0d403a2f1e1b10900097d2e145b57271/server/schema/generated/prisma.graphql",
      "content": "# source: https://ys-prisma-dev-ac8353c4c4.herokuapp.com/ys-dev/dev\n# timestamp: Mon May 13 2019 19:44:22 GMT-0700 (Pacific Daylight Time)\n\ntype AggregatePost {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  createPost(data: PostCreateInput!): Post!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  deleteUser(where: UserWhereUniqueInput!): User\n  deletePost(where: PostWhereUniqueInput!): Post\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  updateManyPosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyPosts(where: PostWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\nenum Permission {\n  ADMIN\n  USER\n}\n\ntype Post implements Node {\n  id: ID!\n  published: Boolean!\n  content: String!\n  author: User!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PostConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  published: Boolean\n  content: String!\n  author: UserCreateOneWithoutPostsInput!\n}\n\ninput PostCreateManyWithoutAuthorInput {\n  create: [PostCreateWithoutAuthorInput!]\n  connect: [PostWhereUniqueInput!]\n}\n\ninput PostCreateWithoutAuthorInput {\n  published: Boolean\n  content: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PostEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Post!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  published_ASC\n  published_DESC\n  content_ASC\n  content_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  published: Boolean!\n  content: String!\n}\n\ninput PostScalarWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PostScalarWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PostScalarWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PostScalarWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  published: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  published_not: Boolean\n  content: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  content_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  content_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  content_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  content_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  content_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  content_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  content_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  content_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  content_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  content_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  content_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  content_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  content_not_ends_with: String\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PostSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PostSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PostSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n}\n\ninput PostUpdateInput {\n  published: Boolean\n  content: String\n  author: UserUpdateOneRequiredWithoutPostsInput\n}\n\ninput PostUpdateManyDataInput {\n  published: Boolean\n  content: String\n}\n\ninput PostUpdateManyMutationInput {\n  published: Boolean\n  content: String\n}\n\ninput PostUpdateManyWithoutAuthorInput {\n  create: [PostCreateWithoutAuthorInput!]\n  connect: [PostWhereUniqueInput!]\n  disconnect: [PostWhereUniqueInput!]\n  delete: [PostWhereUniqueInput!]\n  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]\n  updateMany: [PostUpdateManyWithWhereNestedInput!]\n  deleteMany: [PostScalarWhereInput!]\n  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]\n}\n\ninput PostUpdateManyWithWhereNestedInput {\n  where: PostScalarWhereInput!\n  data: PostUpdateManyDataInput!\n}\n\ninput PostUpdateWithoutAuthorDataInput {\n  published: Boolean\n  content: String\n}\n\ninput PostUpdateWithWhereUniqueWithoutAuthorInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutAuthorDataInput!\n}\n\ninput PostUpsertWithWhereUniqueWithoutAuthorInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutAuthorDataInput!\n  create: PostCreateWithoutAuthorInput!\n}\n\ninput PostWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PostWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PostWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PostWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  published: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  published_not: Boolean\n  content: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  content_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  content_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  content_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  content_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  content_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  content_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  content_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  content_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  content_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  content_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  content_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  content_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  content_not_ends_with: String\n  author: UserWhereInput\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  user(where: UserWhereUniqueInput!): User\n  post(where: PostWhereUniqueInput!): Post\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  username: String!\n  password: String!\n  email: String\n  resetToken: String\n  resetTokenExpiry: Float\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]\n  permissions: [Permission!]!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  username: String!\n  password: String!\n  email: String\n  resetToken: String\n  resetTokenExpiry: Float\n  permissions: UserCreatepermissionsInput\n  posts: PostCreateManyWithoutAuthorInput\n}\n\ninput UserCreateOneWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreatepermissionsInput {\n  set: [Permission!]\n}\n\ninput UserCreateWithoutPostsInput {\n  username: String!\n  password: String!\n  email: String\n  resetToken: String\n  resetTokenExpiry: Float\n  permissions: UserCreatepermissionsInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  username_ASC\n  username_DESC\n  password_ASC\n  password_DESC\n  email_ASC\n  email_DESC\n  resetToken_ASC\n  resetToken_DESC\n  resetTokenExpiry_ASC\n  resetTokenExpiry_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  username: String!\n  password: String!\n  email: String\n  resetToken: String\n  resetTokenExpiry: Float\n  permissions: [Permission!]!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  username: String\n  password: String\n  email: String\n  resetToken: String\n  resetTokenExpiry: Float\n  permissions: UserUpdatepermissionsInput\n  posts: PostUpdateManyWithoutAuthorInput\n}\n\ninput UserUpdateManyMutationInput {\n  username: String\n  password: String\n  email: String\n  resetToken: String\n  resetTokenExpiry: Float\n  permissions: UserUpdatepermissionsInput\n}\n\ninput UserUpdateOneRequiredWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n  update: UserUpdateWithoutPostsDataInput\n  upsert: UserUpsertWithoutPostsInput\n}\n\ninput UserUpdatepermissionsInput {\n  set: [Permission!]\n}\n\ninput UserUpdateWithoutPostsDataInput {\n  username: String\n  password: String\n  email: String\n  resetToken: String\n  resetTokenExpiry: Float\n  permissions: UserUpdatepermissionsInput\n}\n\ninput UserUpsertWithoutPostsInput {\n  update: UserUpdateWithoutPostsDataInput!\n  create: UserCreateWithoutPostsInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  username: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  username_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  username_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  username_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  username_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  username_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  username_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  username_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  username_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  username_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  username_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  username_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  username_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  username_not_ends_with: String\n  password: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  password_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  password_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  password_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  password_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  password_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  password_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  password_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  password_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  password_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  password_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  password_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  password_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  password_not_ends_with: String\n  email: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  email_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  email_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  email_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  email_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  email_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  email_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  email_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  email_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  email_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  email_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  email_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  email_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  email_not_ends_with: String\n  resetToken: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  resetToken_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  resetToken_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  resetToken_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  resetToken_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  resetToken_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  resetToken_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  resetToken_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  resetToken_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  resetToken_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  resetToken_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  resetToken_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  resetToken_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  resetToken_not_ends_with: String\n  resetTokenExpiry: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  resetTokenExpiry_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  resetTokenExpiry_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  resetTokenExpiry_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  resetTokenExpiry_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  resetTokenExpiry_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  resetTokenExpiry_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  resetTokenExpiry_gte: Float\n  posts_every: PostWhereInput\n  posts_some: PostWhereInput\n  posts_none: PostWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 17,
      "containsCycle": true,
      "numDefinitions": 51
    }
  ],
  "metrics": {
    "created_at": "2019-03-19T07:23:25Z",
    "updated_at": "2019-07-11T22:43:36Z",
    "pushed_at": "2019-07-11T22:43:34Z",
    "issues": 0,
    "watchers": 2,
    "fork_count": 1,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 4,
    "pull_requests_open": 0,
    "pull_requests_closed": 2,
    "pull_requests_merged": 2,
    "releases": 0,
    "stargazers": 1
  }
}