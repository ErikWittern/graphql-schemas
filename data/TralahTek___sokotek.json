{
  "repo_name": "sokotek",
  "repo_full_name": "tralahtek/sokotek",
  "repo_owner": "TralahTek",
  "repo_description": "A saleor implementation",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "saleor/graphql/schema.graphql",
      "sha": "bd40ad9ba836e3b0577ff413e783bca6c4d87353",
      "url": "https://api.github.com/repositories/178069338/contents/saleor/graphql/schema.graphql?ref=21c03d737849bc5c0d7e9be3fe37886936ccd2bd",
      "git_url": "https://api.github.com/repositories/178069338/git/blobs/bd40ad9ba836e3b0577ff413e783bca6c4d87353",
      "html_url": "https://github.com/TralahTek/sokotek/blob/21c03d737849bc5c0d7e9be3fe37886936ccd2bd/saleor/graphql/schema.graphql",
      "content": "schema {\n  query: Query\n  mutation: Mutations\n}\n\ntype Address implements Node {\n  id: ID!\n  firstName: String!\n  lastName: String!\n  companyName: String!\n  streetAddress1: String!\n  streetAddress2: String!\n  city: String!\n  cityArea: String!\n  postalCode: String!\n  country: CountryDisplay!\n  countryArea: String!\n  phone: String\n  isDefaultShippingAddress: Boolean\n  isDefaultBillingAddress: Boolean\n}\n\ntype AddressCreate {\n  errors: [Error!]\n  user: User\n  address: Address\n}\n\ntype AddressDelete {\n  errors: [Error!]\n  user: User\n  address: Address\n}\n\ninput AddressInput {\n  firstName: String\n  lastName: String\n  companyName: String\n  streetAddress1: String\n  streetAddress2: String\n  city: String\n  cityArea: String\n  postalCode: String\n  country: String!\n  countryArea: String\n  phone: String\n}\n\ntype AddressSetDefault {\n  errors: [Error!]\n  user: User\n}\n\nenum AddressTypeEnum {\n  BILLING\n  SHIPPING\n}\n\ntype AddressUpdate {\n  errors: [Error!]\n  user: User\n  address: Address\n}\n\ntype AddressValidationData {\n  countryCode: String\n  countryName: String\n  addressFormat: String\n  addressLatinFormat: String\n  allowedFields: [String]\n  requiredFields: [String]\n  upperFields: [String]\n  countryAreaType: String\n  countryAreaChoices: [ChoiceValue]\n  cityType: String\n  cityChoices: [ChoiceValue]\n  cityAreaType: String\n  cityAreaChoices: [ChoiceValue]\n  postalCodeType: String\n  postalCodeMatchers: [String]\n  postalCodeExamples: [String]\n  postalCodePrefix: String\n}\n\ninput AddressValidationInput {\n  countryCode: String\n  countryArea: String\n  cityArea: String\n}\n\ntype AssignNavigation {\n  errors: [Error!]\n  menu: Menu\n}\n\ntype Attribute implements Node {\n  id: ID!\n  slug: String\n  name: String\n  productType: ProductType\n  productVariantType: ProductType\n  values: [AttributeValue]\n  translation(languageCode: LanguageCodeEnum!): AttributeTranslation\n}\n\ntype AttributeBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype AttributeCountableConnection {\n  pageInfo: PageInfo!\n  edges: [AttributeCountableEdge!]!\n  totalCount: Int\n}\n\ntype AttributeCountableEdge {\n  node: Attribute!\n  cursor: String!\n}\n\ntype AttributeCreate {\n  errors: [Error!]\n  attribute: Attribute\n  productType: ProductType\n}\n\ninput AttributeCreateInput {\n  name: String!\n  values: [AttributeValueCreateInput]\n}\n\ntype AttributeDelete {\n  errors: [Error!]\n  productType: ProductType\n  attribute: Attribute\n}\n\nscalar AttributeScalar\n\ntype AttributeTranslate {\n  errors: [Error!]\n  attribute: Attribute\n}\n\ntype AttributeTranslation implements Node {\n  id: ID!\n  name: String!\n  language: LanguageDisplay!\n}\n\nenum AttributeTypeEnum {\n  PRODUCT\n  VARIANT\n}\n\ntype AttributeUpdate {\n  errors: [Error!]\n  productType: ProductType\n  attribute: Attribute\n}\n\ninput AttributeUpdateInput {\n  name: String\n  removeValues: [ID]\n  addValues: [AttributeValueCreateInput]\n}\n\ntype AttributeValue implements Node {\n  id: ID!\n  sortOrder: Int!\n  name: String\n  value: String\n  slug: String\n  type: AttributeValueType\n  translation(languageCode: LanguageCodeEnum!): AttributeValueTranslation\n}\n\ntype AttributeValueBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype AttributeValueCreate {\n  errors: [Error!]\n  attribute: Attribute\n  attributeValue: AttributeValue\n}\n\ninput AttributeValueCreateInput {\n  name: String!\n  value: String\n}\n\ntype AttributeValueDelete {\n  errors: [Error!]\n  attribute: Attribute\n  attributeValue: AttributeValue\n}\n\ninput AttributeValueInput {\n  slug: String!\n  value: String!\n}\n\ntype AttributeValueTranslate {\n  errors: [Error!]\n  attributeValue: AttributeValue\n}\n\ntype AttributeValueTranslation implements Node {\n  id: ID!\n  name: String!\n  language: LanguageDisplay!\n}\n\nenum AttributeValueType {\n  COLOR\n  GRADIENT\n  URL\n  STRING\n}\n\ntype AttributeValueUpdate {\n  errors: [Error!]\n  attribute: Attribute\n  attributeValue: AttributeValue\n}\n\ntype AuthorizationKey {\n  name: AuthorizationKeyType!\n  key: String!\n}\n\ntype AuthorizationKeyAdd {\n  errors: [Error!]\n  authorizationKey: AuthorizationKey\n  shop: Shop\n}\n\ntype AuthorizationKeyDelete {\n  errors: [Error!]\n  authorizationKey: AuthorizationKey\n  shop: Shop\n}\n\ninput AuthorizationKeyInput {\n  key: String!\n  password: String!\n}\n\nenum AuthorizationKeyType {\n  FACEBOOK\n  GOOGLE_OAUTH2\n}\n\ninput CatalogueInput {\n  products: [ID]\n  categories: [ID]\n  collections: [ID]\n}\n\ntype Category implements Node {\n  seoTitle: String\n  seoDescription: String\n  id: ID!\n  name: String!\n  slug: String!\n  description: String!\n  descriptionJson: JSONString!\n  parent: Category\n  backgroundImage(size: Int): Image\n  level: Int!\n  children(before: String, after: String, first: Int, last: Int): CategoryCountableConnection\n  products(before: String, after: String, first: Int, last: Int): ProductCountableConnection\n  ancestors(before: String, after: String, first: Int, last: Int): CategoryCountableConnection\n  url: String\n  translation(languageCode: LanguageCodeEnum!): CategoryTranslation\n}\n\ntype CategoryBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype CategoryCountableConnection {\n  pageInfo: PageInfo!\n  edges: [CategoryCountableEdge!]!\n  totalCount: Int\n}\n\ntype CategoryCountableEdge {\n  node: Category!\n  cursor: String!\n}\n\ntype CategoryCreate {\n  errors: [Error!]\n  category: Category\n}\n\ntype CategoryDelete {\n  errors: [Error!]\n  category: Category\n}\n\ninput CategoryInput {\n  description: String\n  descriptionJson: JSONString\n  name: String\n  slug: String\n  seo: SeoInput\n  backgroundImage: Upload\n  backgroundImageAlt: String\n}\n\ntype CategoryTranslate {\n  errors: [Error!]\n  category: Category\n}\n\ntype CategoryTranslation implements Node {\n  seoTitle: String\n  seoDescription: String\n  id: ID!\n  name: String!\n  description: String!\n  descriptionJson: JSONString!\n  language: LanguageDisplay!\n}\n\ntype CategoryUpdate {\n  errors: [Error!]\n  category: Category\n}\n\ntype Checkout implements Node {\n  created: DateTime!\n  lastChange: DateTime!\n  user: User\n  email: String!\n  token: UUID!\n  quantity: Int!\n  billingAddress: Address\n  shippingAddress: Address\n  shippingMethod: ShippingMethod\n  note: String!\n  discountAmount: Money\n  discountName: String\n  translatedDiscountName: String\n  voucherCode: String\n  lines: [CheckoutLine]\n  id: ID!\n  availableShippingMethods: [ShippingMethod]!\n  availablePaymentGateways: [GatewaysEnum]!\n  isShippingRequired: Boolean!\n  shippingPrice: TaxedMoney\n  subtotalPrice: TaxedMoney\n  totalPrice: TaxedMoney\n}\n\ntype CheckoutBillingAddressUpdate {\n  errors: [Error!]\n  checkout: Checkout\n}\n\ntype CheckoutComplete {\n  errors: [Error!]\n  order: Order\n}\n\ntype CheckoutCountableConnection {\n  pageInfo: PageInfo!\n  edges: [CheckoutCountableEdge!]!\n  totalCount: Int\n}\n\ntype CheckoutCountableEdge {\n  node: Checkout!\n  cursor: String!\n}\n\ntype CheckoutCreate {\n  errors: [Error!]\n  checkout: Checkout\n}\n\ninput CheckoutCreateInput {\n  lines: [CheckoutLineInput]!\n  email: String\n  shippingAddress: AddressInput\n  billingAddress: AddressInput\n}\n\ntype CheckoutCustomerAttach {\n  errors: [Error!]\n  checkout: Checkout\n}\n\ntype CheckoutCustomerDetach {\n  errors: [Error!]\n  checkout: Checkout\n}\n\ntype CheckoutEmailUpdate {\n  errors: [Error!]\n  checkout: Checkout\n}\n\ntype CheckoutLine implements Node {\n  id: ID!\n  variant: ProductVariant!\n  quantity: Int!\n  totalPrice: TaxedMoney\n  requiresShipping: Boolean\n}\n\ntype CheckoutLineCountableConnection {\n  pageInfo: PageInfo!\n  edges: [CheckoutLineCountableEdge!]!\n  totalCount: Int\n}\n\ntype CheckoutLineCountableEdge {\n  node: CheckoutLine!\n  cursor: String!\n}\n\ntype CheckoutLineDelete {\n  errors: [Error!]\n  checkout: Checkout\n}\n\ninput CheckoutLineInput {\n  quantity: Int!\n  variantId: ID!\n}\n\ntype CheckoutLinesAdd {\n  errors: [Error!]\n  checkout: Checkout\n}\n\ntype CheckoutLinesUpdate {\n  errors: [Error!]\n  checkout: Checkout\n}\n\ntype CheckoutPaymentCreate {\n  errors: [Error!]\n  checkout: Checkout\n  payment: Payment\n}\n\ntype CheckoutShippingAddressUpdate {\n  errors: [Error!]\n  checkout: Checkout\n}\n\ntype CheckoutShippingMethodUpdate {\n  errors: [Error!]\n  checkout: Checkout\n}\n\ntype CheckoutUpdateVoucher {\n  errors: [Error!]\n  checkout: Checkout\n}\n\ntype ChoiceValue {\n  raw: String\n  verbose: String\n}\n\ntype Collection implements Node {\n  publicationDate: Date\n  isPublished: Boolean!\n  seoTitle: String\n  seoDescription: String\n  id: ID!\n  name: String!\n  slug: String!\n  products(before: String, after: String, first: Int, last: Int): ProductCountableConnection\n  backgroundImage(size: Int): Image\n  description: String!\n  descriptionJson: JSONString!\n  publishedDate: Date @deprecated(reason: \"publishedDate is deprecated, use publicationDate instead\")\n  translation(languageCode: LanguageCodeEnum!): CollectionTranslation\n}\n\ntype CollectionAddProducts {\n  errors: [Error!]\n  collection: Collection\n}\n\ntype CollectionBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype CollectionCountableConnection {\n  pageInfo: PageInfo!\n  edges: [CollectionCountableEdge!]!\n  totalCount: Int\n}\n\ntype CollectionCountableEdge {\n  node: Collection!\n  cursor: String!\n}\n\ntype CollectionCreate {\n  errors: [Error!]\n  collection: Collection\n}\n\ninput CollectionCreateInput {\n  isPublished: Boolean\n  name: String\n  slug: String\n  description: String\n  descriptionJson: JSONString\n  backgroundImage: Upload\n  backgroundImageAlt: String\n  seo: SeoInput\n  publicationDate: Date\n  products: [ID]\n}\n\ntype CollectionDelete {\n  errors: [Error!]\n  collection: Collection\n}\n\ninput CollectionInput {\n  isPublished: Boolean\n  name: String\n  slug: String\n  description: String\n  descriptionJson: JSONString\n  backgroundImage: Upload\n  backgroundImageAlt: String\n  seo: SeoInput\n  publicationDate: Date\n}\n\ntype CollectionRemoveProducts {\n  errors: [Error!]\n  collection: Collection\n}\n\ntype CollectionTranslate {\n  errors: [Error!]\n  collection: Collection\n}\n\ntype CollectionTranslation implements Node {\n  seoTitle: String\n  seoDescription: String\n  id: ID!\n  name: String!\n  description: String!\n  descriptionJson: JSONString!\n  language: LanguageDisplay!\n}\n\ntype CollectionUpdate {\n  errors: [Error!]\n  collection: Collection\n}\n\ntype CountryDisplay {\n  code: String!\n  country: String!\n  vat: VAT\n}\n\ntype CreateToken {\n  token: String\n  errors: [Error]!\n  user: User\n}\n\ntype CreditCard {\n  brand: String!\n  firstDigits: String!\n  lastDigits: String!\n  expMonth: Int!\n  expYear: Int!\n}\n\ntype CustomerAddressCreate {\n  errors: [Error!]\n  address: Address\n}\n\ntype CustomerBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype CustomerCreate {\n  errors: [Error!]\n  user: User\n}\n\ntype CustomerDelete {\n  errors: [Error!]\n  user: User\n}\n\ninput CustomerInput {\n  defaultBillingAddress: AddressInput\n  defaultShippingAddress: AddressInput\n  firstName: String\n  lastName: String\n  email: String\n  isActive: Boolean\n  note: String\n}\n\ntype CustomerPasswordReset {\n  errors: [Error!]\n}\n\ninput CustomerPasswordResetInput {\n  email: String!\n}\n\ntype CustomerRegister {\n  errors: [Error!]\n  user: User\n}\n\ninput CustomerRegisterInput {\n  email: String!\n  password: String!\n}\n\ntype CustomerSetDefaultAddress {\n  errors: [Error!]\n  user: User\n}\n\ntype CustomerUpdate {\n  errors: [Error!]\n  user: User\n}\n\nscalar Date\n\nscalar DateTime\n\nscalar Decimal\n\nenum DiscountValueTypeEnum {\n  FIXED\n  PERCENTAGE\n}\n\ntype Domain {\n  host: String!\n  sslEnabled: Boolean!\n  url: String!\n}\n\ntype DraftOrderBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype DraftOrderComplete {\n  errors: [Error!]\n  order: Order\n}\n\ntype DraftOrderCreate {\n  errors: [Error!]\n  order: Order\n}\n\ninput DraftOrderCreateInput {\n  billingAddress: AddressInput\n  user: ID\n  userEmail: String\n  discount: Decimal\n  shippingAddress: AddressInput\n  shippingMethod: ID\n  voucher: ID\n  lines: [OrderLineCreateInput]\n}\n\ntype DraftOrderDelete {\n  errors: [Error!]\n  order: Order\n}\n\ninput DraftOrderInput {\n  billingAddress: AddressInput\n  user: ID\n  userEmail: String\n  discount: Decimal\n  shippingAddress: AddressInput\n  shippingMethod: ID\n  voucher: ID\n}\n\ntype DraftOrderLineDelete {\n  errors: [Error!]\n  order: Order\n  orderLine: OrderLine\n}\n\ntype DraftOrderLineUpdate {\n  errors: [Error!]\n  order: Order\n  orderLine: OrderLine\n}\n\ntype DraftOrderLinesCreate {\n  errors: [Error!]\n  order: Order!\n  orderLines: [OrderLine!]!\n}\n\ntype DraftOrderUpdate {\n  errors: [Error!]\n  order: Order\n}\n\ntype Error {\n  field: String\n  message: String\n}\n\ntype Fulfillment implements Node {\n  id: ID!\n  fulfillmentOrder: Int!\n  status: FulfillmentStatus!\n  trackingNumber: String!\n  shippingDate: DateTime!\n  lines: [FulfillmentLine]\n  statusDisplay: String\n}\n\ntype FulfillmentCancel {\n  errors: [Error!]\n  fulfillment: Fulfillment\n  order: Order\n}\n\ninput FulfillmentCancelInput {\n  restock: Boolean\n}\n\ntype FulfillmentCreate {\n  errors: [Error!]\n  fulfillment: Fulfillment\n  order: Order\n}\n\ninput FulfillmentCreateInput {\n  trackingNumber: String\n  notifyCustomer: Boolean\n  lines: [FulfillmentLineInput]!\n}\n\ntype FulfillmentLine implements Node {\n  id: ID!\n  orderLine: OrderLine\n  quantity: Int!\n}\n\ninput FulfillmentLineInput {\n  orderLineId: ID\n  quantity: Int\n}\n\nenum FulfillmentStatus {\n  FULFILLED\n  CANCELED\n}\n\ntype FulfillmentUpdateTracking {\n  errors: [Error!]\n  fulfillment: Fulfillment\n  order: Order\n}\n\ninput FulfillmentUpdateTrackingInput {\n  trackingNumber: String\n  notifyCustomer: Boolean\n}\n\nenum GatewaysEnum {\n  DUMMY\n}\n\nscalar GenericScalar\n\ntype Geolocalization {\n  country: CountryDisplay\n}\n\ntype HomepageCollectionUpdate {\n  errors: [Error!]\n  shop: Shop\n}\n\ntype Image {\n  url: String!\n  alt: String\n}\n\nscalar JSONString\n\nenum LanguageCodeEnum {\n  AR\n  AZ\n  BG\n  BN\n  CA\n  CS\n  DA\n  DE\n  EN\n  ES\n  ET\n  FA\n  FR\n  HI\n  HU\n  ID\n  IT\n  JA\n  KO\n  MN\n  NB\n  NL\n  PL\n  PT_BR\n  RO\n  RU\n  SK\n  SR\n  SW\n  SV\n  TH\n  TR\n  UK\n  VI\n  ZH_HANS\n  ZH_HANT\n}\n\ntype LanguageDisplay {\n  code: String!\n  language: String!\n}\n\ntype LoggedUserUpdate {\n  errors: [Error!]\n  user: User\n}\n\ntype Margin {\n  start: Int\n  stop: Int\n}\n\ntype Menu implements Node {\n  id: ID!\n  name: String!\n  items: [MenuItem]\n  children: [MenuItem]!\n}\n\ntype MenuBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype MenuCountableConnection {\n  pageInfo: PageInfo!\n  edges: [MenuCountableEdge!]!\n  totalCount: Int\n}\n\ntype MenuCountableEdge {\n  node: Menu!\n  cursor: String!\n}\n\ntype MenuCreate {\n  errors: [Error!]\n  menu: Menu\n}\n\ninput MenuCreateInput {\n  name: String\n  items: [MenuItemInput]\n}\n\ntype MenuDelete {\n  errors: [Error!]\n  menu: Menu\n}\n\ninput MenuInput {\n  name: String\n}\n\ntype MenuItem implements Node {\n  id: ID!\n  menu: Menu!\n  name: String!\n  parent: MenuItem\n  url: String\n  category: Category\n  collection: Collection\n  page: Page\n  level: Int!\n  children: [MenuItem]\n  translation(languageCode: LanguageCodeEnum!): MenuItemTranslation\n}\n\ntype MenuItemBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype MenuItemCountableConnection {\n  pageInfo: PageInfo!\n  edges: [MenuItemCountableEdge!]!\n  totalCount: Int\n}\n\ntype MenuItemCountableEdge {\n  node: MenuItem!\n  cursor: String!\n}\n\ntype MenuItemCreate {\n  errors: [Error!]\n  menuItem: MenuItem\n}\n\ninput MenuItemCreateInput {\n  name: String\n  url: String\n  category: ID\n  collection: ID\n  page: ID\n  menu: ID!\n  parent: ID\n}\n\ntype MenuItemDelete {\n  errors: [Error!]\n  menuItem: MenuItem\n}\n\ninput MenuItemInput {\n  name: String\n  url: String\n  category: ID\n  collection: ID\n  page: ID\n}\n\ntype MenuItemTranslate {\n  errors: [Error!]\n  menuItem: MenuItem\n}\n\ntype MenuItemTranslation implements Node {\n  id: ID!\n  name: String!\n  language: LanguageDisplay!\n}\n\ntype MenuItemUpdate {\n  errors: [Error!]\n  menuItem: MenuItem\n}\n\ntype MenuUpdate {\n  errors: [Error!]\n  menu: Menu\n}\n\ntype Money {\n  currency: String!\n  amount: Float!\n  localized: String!\n}\n\ntype MoneyRange {\n  start: Money\n  stop: Money\n}\n\ntype Mutations {\n  authorizationKeyAdd(input: AuthorizationKeyInput!, keyType: AuthorizationKeyType!): AuthorizationKeyAdd\n  authorizationKeyDelete(keyType: AuthorizationKeyType!): AuthorizationKeyDelete\n  homepageCollectionUpdate(collection: ID): HomepageCollectionUpdate\n  shopDomainUpdate(input: SiteDomainInput): ShopDomainUpdate\n  shopSettingsUpdate(input: ShopSettingsInput!): ShopSettingsUpdate\n  shopFetchTaxRates: ShopFetchTaxRates\n  shopSettingsTranslate(input: ShopSettingsTranslationInput!, languageCode: LanguageCodeEnum!): ShopSettingsTranslate\n  shippingPriceCreate(input: ShippingPriceInput!): ShippingPriceCreate\n  shippingPriceDelete(id: ID!): ShippingPriceDelete\n  shippingPriceBulkDelete(ids: [ID]!): ShippingPriceBulkDelete\n  shippingPriceUpdate(id: ID!, input: ShippingPriceInput!): ShippingPriceUpdate\n  shippingPriceTranslate(id: ID!, input: NameTranslationInput!, languageCode: LanguageCodeEnum!): ShippingPriceTranslate\n  shippingZoneCreate(input: ShippingZoneInput!): ShippingZoneCreate\n  shippingZoneDelete(id: ID!): ShippingZoneDelete\n  shippingZoneBulkDelete(ids: [ID]!): ShippingZoneBulkDelete\n  shippingZoneUpdate(id: ID!, input: ShippingZoneInput!): ShippingZoneUpdate\n  attributeCreate(id: ID!, input: AttributeCreateInput!, type: AttributeTypeEnum!): AttributeCreate\n  attributeDelete(id: ID!): AttributeDelete\n  attributeBulkDelete(ids: [ID]!): AttributeBulkDelete\n  attributeUpdate(id: ID!, input: AttributeUpdateInput!): AttributeUpdate\n  attributeTranslate(id: ID!, input: NameTranslationInput!, languageCode: LanguageCodeEnum!): AttributeTranslate\n  attributeValueCreate(attribute: ID!, input: AttributeValueCreateInput!): AttributeValueCreate\n  attributeValueDelete(id: ID!): AttributeValueDelete\n  attributeValueBulkDelete(ids: [ID]!): AttributeValueBulkDelete\n  attributeValueUpdate(id: ID!, input: AttributeValueCreateInput!): AttributeValueUpdate\n  attributeValueTranslate(id: ID!, input: NameTranslationInput!, languageCode: LanguageCodeEnum!): AttributeValueTranslate\n  categoryCreate(input: CategoryInput!, parent: ID): CategoryCreate\n  categoryDelete(id: ID!): CategoryDelete\n  categoryBulkDelete(ids: [ID]!): CategoryBulkDelete\n  categoryUpdate(id: ID!, input: CategoryInput!): CategoryUpdate\n  categoryTranslate(id: ID!, input: TranslationInput!, languageCode: LanguageCodeEnum!): CategoryTranslate\n  collectionAddProducts(collectionId: ID!, products: [ID]!): CollectionAddProducts\n  collectionCreate(input: CollectionCreateInput!): CollectionCreate\n  collectionDelete(id: ID!): CollectionDelete\n  collectionBulkDelete(ids: [ID]!): CollectionBulkDelete\n  collectionRemoveProducts(collectionId: ID!, products: [ID]!): CollectionRemoveProducts\n  collectionUpdate(id: ID!, input: CollectionInput!): CollectionUpdate\n  collectionTranslate(id: ID!, input: TranslationInput!, languageCode: LanguageCodeEnum!): CollectionTranslate\n  productCreate(input: ProductCreateInput!): ProductCreate\n  productDelete(id: ID!): ProductDelete\n  productBulkDelete(ids: [ID]!): ProductBulkDelete\n  productUpdate(id: ID!, input: ProductInput!): ProductUpdate\n  productTranslate(id: ID!, input: TranslationInput!, languageCode: LanguageCodeEnum!): ProductTranslate\n  productImageCreate(input: ProductImageCreateInput!): ProductImageCreate\n  productImageDelete(id: ID!): ProductImageDelete\n  productImageBulkDelete(ids: [ID]!): ProductImageBulkDelete\n  productImageReorder(imagesIds: [ID]!, productId: ID!): ProductImageReorder\n  productImageUpdate(id: ID!, input: ProductImageUpdateInput!): ProductImageUpdate\n  productTypeCreate(input: ProductTypeInput!): ProductTypeCreate\n  productTypeDelete(id: ID!): ProductTypeDelete\n  productTypeBulkDelete(ids: [ID]!): ProductTypeBulkDelete\n  productTypeUpdate(id: ID!, input: ProductTypeInput!): ProductTypeUpdate\n  productVariantCreate(input: ProductVariantCreateInput!): ProductVariantCreate\n  productVariantDelete(id: ID!): ProductVariantDelete\n  productVariantBulkDelete(ids: [ID]!): ProductVariantBulkDelete\n  productVariantUpdate(id: ID!, input: ProductVariantInput!): ProductVariantUpdate\n  productVariantTranslate(id: ID!, input: NameTranslationInput!, languageCode: LanguageCodeEnum!): ProductVariantTranslate\n  variantImageAssign(imageId: ID!, variantId: ID!): VariantImageAssign\n  variantImageUnassign(imageId: ID!, variantId: ID!): VariantImageUnassign\n  paymentCapture(amount: Decimal, paymentId: ID!): PaymentCapture\n  paymentRefund(amount: Decimal, paymentId: ID!): PaymentRefund\n  paymentVoid(paymentId: ID!): PaymentVoid\n  pageCreate(input: PageInput!): PageCreate\n  pageDelete(id: ID!): PageDelete\n  pageBulkDelete(ids: [ID]!): PageBulkDelete\n  pageUpdate(id: ID!, input: PageInput!): PageUpdate\n  pageTranslate(id: ID!, input: PageTranslationInput!, languageCode: LanguageCodeEnum!): PageTranslate\n  draftOrderComplete(id: ID!): DraftOrderComplete\n  draftOrderCreate(input: DraftOrderCreateInput!): DraftOrderCreate\n  draftOrderDelete(id: ID!): DraftOrderDelete\n  draftOrderBulkDelete(ids: [ID]!): DraftOrderBulkDelete\n  draftOrderLinesCreate(id: ID!, input: [OrderLineCreateInput]!): DraftOrderLinesCreate\n  draftOrderLineDelete(id: ID!): DraftOrderLineDelete\n  draftOrderLineUpdate(id: ID!, input: OrderLineInput!): DraftOrderLineUpdate\n  draftOrderUpdate(id: ID!, input: DraftOrderInput!): DraftOrderUpdate\n  orderAddNote(order: ID!, input: OrderAddNoteInput!): OrderAddNote\n  orderCancel(id: ID!, restock: Boolean!): OrderCancel\n  orderCapture(amount: Decimal!, id: ID!): OrderCapture\n  orderFulfillmentCancel(id: ID!, input: FulfillmentCancelInput!): FulfillmentCancel\n  orderFulfillmentCreate(input: FulfillmentCreateInput!, order: ID): FulfillmentCreate\n  orderFulfillmentUpdateTracking(id: ID!, input: FulfillmentUpdateTrackingInput!): FulfillmentUpdateTracking\n  orderMarkAsPaid(id: ID!): OrderMarkAsPaid\n  orderRefund(amount: Decimal!, id: ID!): OrderRefund\n  orderUpdate(id: ID!, input: OrderUpdateInput!): OrderUpdate\n  orderUpdateShipping(order: ID!, input: OrderUpdateShippingInput): OrderUpdateShipping\n  orderVoid(id: ID!): OrderVoid\n  assignNavigation(menu: ID, navigationType: NavigationType!): AssignNavigation\n  menuCreate(input: MenuCreateInput!): MenuCreate\n  menuDelete(id: ID!): MenuDelete\n  menuBulkDelete(ids: [ID]!): MenuBulkDelete\n  menuUpdate(id: ID!, input: MenuInput!): MenuUpdate\n  menuItemCreate(input: MenuItemCreateInput!): MenuItemCreate\n  menuItemDelete(id: ID!): MenuItemDelete\n  menuItemBulkDelete(ids: [ID]!): MenuItemBulkDelete\n  menuItemUpdate(id: ID!, input: MenuItemInput!): MenuItemUpdate\n  menuItemTranslate(id: ID!, input: NameTranslationInput!, languageCode: LanguageCodeEnum!): MenuItemTranslate\n  saleCreate(input: SaleInput!): SaleCreate\n  saleDelete(id: ID!): SaleDelete\n  saleBulkDelete(ids: [ID]!): SaleBulkDelete\n  saleUpdate(id: ID!, input: SaleInput!): SaleUpdate\n  saleCataloguesAdd(id: ID!, input: CatalogueInput!): SaleAddCatalogues\n  saleCataloguesRemove(id: ID!, input: CatalogueInput!): SaleRemoveCatalogues\n  voucherCreate(input: VoucherInput!): VoucherCreate\n  voucherDelete(id: ID!): VoucherDelete\n  voucherBulkDelete(ids: [ID]!): VoucherBulkDelete\n  voucherUpdate(id: ID!, input: VoucherInput!): VoucherUpdate\n  voucherCataloguesAdd(id: ID!, input: CatalogueInput!): VoucherAddCatalogues\n  voucherCataloguesRemove(id: ID!, input: CatalogueInput!): VoucherRemoveCatalogues\n  voucherTranslate(id: ID!, input: NameTranslationInput!, languageCode: LanguageCodeEnum!): VoucherTranslate\n  tokenCreate(email: String!, password: String!): CreateToken\n  tokenRefresh(token: String!): Refresh\n  tokenVerify(token: String!): VerifyToken\n  checkoutBillingAddressUpdate(billingAddress: AddressInput, checkoutId: ID): CheckoutBillingAddressUpdate\n  checkoutComplete(checkoutId: ID!): CheckoutComplete\n  checkoutCreate(input: CheckoutCreateInput!): CheckoutCreate\n  checkoutCustomerAttach(checkoutId: ID!, customerId: ID!): CheckoutCustomerAttach\n  checkoutCustomerDetach(checkoutId: ID!): CheckoutCustomerDetach\n  checkoutEmailUpdate(checkoutId: ID, email: String!): CheckoutEmailUpdate\n  checkoutLineDelete(checkoutId: ID!, lineId: ID): CheckoutLineDelete\n  checkoutLinesAdd(checkoutId: ID!, lines: [CheckoutLineInput]!): CheckoutLinesAdd\n  checkoutLinesUpdate(checkoutId: ID!, lines: [CheckoutLineInput]!): CheckoutLinesUpdate\n  checkoutPaymentCreate(checkoutId: ID!, input: PaymentInput!): CheckoutPaymentCreate\n  checkoutShippingAddressUpdate(checkoutId: ID, shippingAddress: AddressInput): CheckoutShippingAddressUpdate\n  checkoutShippingMethodUpdate(checkoutId: ID, shippingMethodId: ID!): CheckoutShippingMethodUpdate\n  checkoutUpdateVoucher(checkoutId: ID!, voucherCode: String): CheckoutUpdateVoucher\n  passwordReset(email: String!): PasswordReset\n  setPassword(id: ID!, input: SetPasswordInput!): SetPassword\n  customerCreate(input: UserCreateInput!): CustomerCreate\n  customerDelete(id: ID!): CustomerDelete\n  customerBulkDelete(ids: [ID]!): CustomerBulkDelete\n  customerPasswordReset(input: CustomerPasswordResetInput!): CustomerPasswordReset\n  customerRegister(input: CustomerRegisterInput!): CustomerRegister\n  customerUpdate(id: ID!, input: CustomerInput!): CustomerUpdate\n  customerAddressCreate(input: AddressInput!, type: AddressTypeEnum): CustomerAddressCreate\n  customerSetDefaultAddress(id: ID!, type: AddressTypeEnum!): CustomerSetDefaultAddress\n  loggedUserUpdate(input: UserAddressInput!): LoggedUserUpdate\n  staffCreate(input: StaffCreateInput!): StaffCreate\n  staffDelete(id: ID!): StaffDelete\n  staffBulkDelete(ids: [ID]!): StaffBulkDelete\n  staffUpdate(id: ID!, input: StaffInput!): StaffUpdate\n  addressCreate(input: AddressInput!, userId: ID!): AddressCreate\n  addressDelete(id: ID!): AddressDelete\n  addressUpdate(id: ID!, input: AddressInput!): AddressUpdate\n  addressSetDefault(addressId: ID!, type: AddressTypeEnum!, userId: ID!): AddressSetDefault\n}\n\ninput NameTranslationInput {\n  name: String\n}\n\ntype Navigation {\n  main: Menu\n  secondary: Menu\n}\n\nenum NavigationType {\n  MAIN\n  SECONDARY\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype Order implements Node {\n  id: ID!\n  created: DateTime!\n  status: OrderStatus!\n  user: User\n  languageCode: String!\n  trackingClientId: String!\n  billingAddress: Address\n  shippingAddress: Address\n  userEmail: String\n  shippingMethod: ShippingMethod\n  shippingPrice: TaxedMoney\n  shippingMethodName: String\n  token: String!\n  total: TaxedMoney\n  voucher: Voucher\n  discountAmount: Money\n  discountName: String!\n  translatedDiscountName: String!\n  displayGrossPrices: Boolean!\n  customerNote: String!\n  weight: Weight\n  lines: [OrderLine]!\n  fulfillments: [Fulfillment]!\n  events: [OrderEvent]\n  payments: [Payment]\n  actions: [OrderAction]!\n  availableShippingMethods: [ShippingMethod]\n  number: String\n  isPaid: Boolean\n  paymentStatus: PaymentChargeStatusEnum\n  paymentStatusDisplay: String\n  subtotal: TaxedMoney\n  statusDisplay: String\n  canFinalize: Boolean!\n  totalAuthorized: Money\n  totalCaptured: Money\n  totalBalance: Money!\n  isShippingRequired: Boolean!\n}\n\nenum OrderAction {\n  CAPTURE\n  MARK_AS_PAID\n  REFUND\n  VOID\n}\n\ntype OrderAddNote {\n  errors: [Error!]\n  order: Order\n  event: OrderEvent\n}\n\ninput OrderAddNoteInput {\n  message: String\n}\n\ntype OrderCancel {\n  errors: [Error!]\n  order: Order\n}\n\ntype OrderCapture {\n  errors: [Error!]\n  order: Order\n}\n\ntype OrderCountableConnection {\n  pageInfo: PageInfo!\n  edges: [OrderCountableEdge!]!\n  totalCount: Int\n}\n\ntype OrderCountableEdge {\n  node: Order!\n  cursor: String!\n}\n\nenum OrderDirection {\n  ASC\n  DESC\n}\n\ntype OrderEvent implements Node {\n  id: ID!\n  date: DateTime\n  type: OrderEvents\n  user(id: ID): User\n  message: String\n  email: String\n  emailType: OrderEventsEmails\n  amount: Float\n  quantity: Int\n  composedId: String\n  orderNumber: String\n  oversoldItems: [String]\n}\n\ntype OrderEventCountableConnection {\n  pageInfo: PageInfo!\n  edges: [OrderEventCountableEdge!]!\n  totalCount: Int\n}\n\ntype OrderEventCountableEdge {\n  node: OrderEvent!\n  cursor: String!\n}\n\nenum OrderEvents {\n  PLACED\n  PLACED_FROM_DRAFT\n  OVERSOLD_ITEMS\n  ORDER_MARKED_AS_PAID\n  CANCELED\n  ORDER_FULLY_PAID\n  UPDATED\n  EMAIL_SENT\n  PAYMENT_CAPTURED\n  PAYMENT_REFUNDED\n  PAYMENT_VOIDED\n  FULFILLMENT_CANCELED\n  FULFILLMENT_RESTOCKED_ITEMS\n  FULFILLMENT_FULFILLED_ITEMS\n  TRACKING_UPDATED\n  NOTE_ADDED\n  OTHER\n}\n\nenum OrderEventsEmails {\n  PAYMENT\n  SHIPPING\n  ORDER\n  FULFILLMENT\n}\n\ntype OrderLine implements Node {\n  id: ID!\n  variant: ProductVariant\n  productName: String!\n  translatedProductName: String!\n  productSku: String!\n  isShippingRequired: Boolean!\n  quantity: Int!\n  quantityFulfilled: Int!\n  unitPrice: TaxedMoney\n  taxRate: Float!\n  thumbnailUrl(size: Int): String @deprecated(reason: \"thumbnailUrl is deprecated, use thumbnail instead\")\n  thumbnail(size: Int): Image\n}\n\ninput OrderLineCreateInput {\n  quantity: Int!\n  variantId: ID!\n}\n\ninput OrderLineInput {\n  quantity: Int!\n}\n\ntype OrderMarkAsPaid {\n  errors: [Error!]\n  order: Order\n}\n\ntype OrderRefund {\n  errors: [Error!]\n  order: Order\n}\n\nenum OrderStatus {\n  DRAFT\n  UNFULFILLED\n  PARTIALLY_FULFILLED\n  FULFILLED\n  CANCELED\n}\n\nenum OrderStatusFilter {\n  READY_TO_FULFILL\n  READY_TO_CAPTURE\n}\n\ntype OrderUpdate {\n  errors: [Error!]\n  order: Order\n}\n\ninput OrderUpdateInput {\n  billingAddress: AddressInput\n  userEmail: String\n  shippingAddress: AddressInput\n}\n\ntype OrderUpdateShipping {\n  errors: [Error!]\n  order: Order\n}\n\ninput OrderUpdateShippingInput {\n  shippingMethod: ID\n}\n\ntype OrderVoid {\n  errors: [Error!]\n  order: Order\n}\n\ntype Page implements Node {\n  publicationDate: Date\n  isPublished: Boolean!\n  seoTitle: String\n  seoDescription: String\n  id: ID!\n  slug: String!\n  title: String!\n  content: String!\n  contentJson: JSONString!\n  created: DateTime!\n  availableOn: Date @deprecated(reason: \"availableOn is deprecated, use publicationDate instead\")\n  isVisible: Boolean @deprecated(reason: \"isVisible is deprecated, use isPublished instead\")\n  translation(languageCode: LanguageCodeEnum!): PageTranslation\n}\n\ntype PageBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype PageCountableConnection {\n  pageInfo: PageInfo!\n  edges: [PageCountableEdge!]!\n  totalCount: Int\n}\n\ntype PageCountableEdge {\n  node: Page!\n  cursor: String!\n}\n\ntype PageCreate {\n  errors: [Error!]\n  page: Page\n}\n\ntype PageDelete {\n  errors: [Error!]\n  page: Page\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ninput PageInput {\n  slug: String\n  title: String\n  content: String\n  contentJson: JSONString\n  isPublished: Boolean\n  publicationDate: String\n  seo: SeoInput\n}\n\ntype PageTranslate {\n  errors: [Error!]\n  page: Page\n}\n\ntype PageTranslation implements Node {\n  seoTitle: String\n  seoDescription: String\n  id: ID!\n  title: String!\n  content: String!\n  contentJson: JSONString!\n  language: LanguageDisplay!\n}\n\ninput PageTranslationInput {\n  seoTitle: String\n  seoDescription: String\n  title: String\n  content: String\n  contentJson: JSONString\n}\n\ntype PageUpdate {\n  errors: [Error!]\n  page: Page\n}\n\ntype PasswordReset {\n  errors: [Error!]\n}\n\ntype Payment implements Node {\n  id: ID!\n  gateway: String!\n  isActive: Boolean!\n  created: DateTime!\n  modified: DateTime!\n  chargeStatus: PaymentChargeStatusEnum!\n  token: String!\n  total: Money\n  capturedAmount: Money\n  checkout: Checkout\n  order: Order\n  billingEmail: String!\n  ccFirstDigits: String!\n  ccLastDigits: String!\n  ccBrand: String!\n  ccExpMonth: Int\n  ccExpYear: Int\n  customerIpAddress: String\n  extraData: String!\n  transactions: [Transaction]\n  actions: [OrderAction]!\n  billingAddress: Address\n  availableCaptureAmount: Money\n  availableRefundAmount: Money\n  creditCard: CreditCard\n}\n\ntype PaymentCapture {\n  errors: [Error!]\n  payment: Payment\n}\n\nenum PaymentChargeStatusEnum {\n  NOT_CHARGED\n  PARTIALLY_CHARGED\n  FULLY_CHARGED\n  PARTIALLY_REFUNDED\n  FULLY_REFUNDED\n}\n\ntype PaymentCountableConnection {\n  pageInfo: PageInfo!\n  edges: [PaymentCountableEdge!]!\n  totalCount: Int\n}\n\ntype PaymentCountableEdge {\n  node: Payment!\n  cursor: String!\n}\n\ninput PaymentInput {\n  gateway: GatewaysEnum!\n  token: String!\n  amount: Decimal\n  billingAddress: AddressInput\n}\n\ntype PaymentRefund {\n  errors: [Error!]\n  payment: Payment\n}\n\ntype PaymentVoid {\n  errors: [Error!]\n  payment: Payment\n}\n\ntype PermissionDisplay {\n  code: PermissionEnum!\n  name: String!\n}\n\nenum PermissionEnum {\n  MANAGE_USERS\n  MANAGE_STAFF\n  IMPERSONATE_USERS\n  MANAGE_DISCOUNTS\n  MANAGE_MENUS\n  MANAGE_ORDERS\n  MANAGE_PAGES\n  MANAGE_PRODUCTS\n  MANAGE_SHIPPING\n  MANAGE_SETTINGS\n  MANAGE_TRANSLATIONS\n}\n\ntype Product implements Node {\n  id: ID!\n  publicationDate: Date\n  isPublished: Boolean!\n  seoTitle: String\n  seoDescription: String\n  productType: ProductType!\n  name: String!\n  description: String!\n  descriptionJson: JSONString!\n  category: Category!\n  price: Money\n  attributes: [SelectedAttribute!]!\n  updatedAt: DateTime\n  chargeTaxes: Boolean!\n  taxRate: TaxRateType\n  weight: Weight\n  variants: [ProductVariant]\n  images: [ProductImage]\n  collections: [Collection]\n  url: String!\n  thumbnailUrl(size: Int): String @deprecated(reason: \"thumbnailUrl is deprecated, use\\\\n         thumbnail instead\")\n  thumbnail(size: Int): Image\n  availability: ProductAvailability\n  purchaseCost: MoneyRange\n  margin: Margin\n  imageById(id: ID): ProductImage\n  availableOn: Date @deprecated(reason: \"availableOn is deprecated, use publicationDate instead\")\n  translation(languageCode: LanguageCodeEnum!): ProductTranslation\n}\n\ntype ProductAvailability {\n  available: Boolean\n  onSale: Boolean\n  discount: TaxedMoney\n  discountLocalCurrency: TaxedMoney\n  priceRange: TaxedMoneyRange\n  priceRangeUndiscounted: TaxedMoneyRange\n  priceRangeLocalCurrency: TaxedMoneyRange\n}\n\ntype ProductBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype ProductCountableConnection {\n  pageInfo: PageInfo!\n  edges: [ProductCountableEdge!]!\n  totalCount: Int\n}\n\ntype ProductCountableEdge {\n  node: Product!\n  cursor: String!\n}\n\ntype ProductCreate {\n  errors: [Error!]\n  product: Product\n}\n\ninput ProductCreateInput {\n  attributes: [AttributeValueInput]\n  publicationDate: Date\n  category: ID\n  chargeTaxes: Boolean\n  collections: [ID]\n  description: String\n  descriptionJson: JSONString\n  isPublished: Boolean\n  name: String\n  price: Decimal\n  taxRate: TaxRateType\n  seo: SeoInput\n  weight: WeightScalar\n  sku: String\n  quantity: Int\n  trackInventory: Boolean\n  productType: ID!\n}\n\ntype ProductDelete {\n  errors: [Error!]\n  product: Product\n}\n\ntype ProductImage implements Node {\n  sortOrder: Int!\n  id: ID!\n  alt: String!\n  url(size: Int): String!\n}\n\ntype ProductImageBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype ProductImageCreate {\n  errors: [Error!]\n  product: Product\n  image: ProductImage\n}\n\ninput ProductImageCreateInput {\n  alt: String\n  image: Upload!\n  product: ID!\n}\n\ntype ProductImageDelete {\n  errors: [Error!]\n  product: Product\n  image: ProductImage\n}\n\ntype ProductImageReorder {\n  errors: [Error!]\n  product: Product\n  images: [ProductImage]\n}\n\ntype ProductImageUpdate {\n  errors: [Error!]\n  product: Product\n  image: ProductImage\n}\n\ninput ProductImageUpdateInput {\n  alt: String\n}\n\ninput ProductInput {\n  attributes: [AttributeValueInput]\n  publicationDate: Date\n  category: ID\n  chargeTaxes: Boolean\n  collections: [ID]\n  description: String\n  descriptionJson: JSONString\n  isPublished: Boolean\n  name: String\n  price: Decimal\n  taxRate: TaxRateType\n  seo: SeoInput\n  weight: WeightScalar\n  sku: String\n  quantity: Int\n  trackInventory: Boolean\n}\n\ninput ProductOrder {\n  field: ProductOrderField!\n  direction: OrderDirection!\n}\n\nenum ProductOrderField {\n  NAME\n  PRICE\n  DATE\n}\n\ntype ProductTranslate {\n  errors: [Error!]\n  product: Product\n}\n\ntype ProductTranslation implements Node {\n  id: ID!\n  seoTitle: String\n  seoDescription: String\n  name: String!\n  description: String!\n  descriptionJson: JSONString!\n  language: LanguageDisplay!\n}\n\ntype ProductType implements Node {\n  id: ID!\n  name: String!\n  hasVariants: Boolean!\n  isShippingRequired: Boolean!\n  taxRate: TaxRateType\n  weight: Weight\n  products(before: String, after: String, first: Int, last: Int): ProductCountableConnection\n  productAttributes: [Attribute]\n  variantAttributes: [Attribute]\n}\n\ntype ProductTypeBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype ProductTypeCountableConnection {\n  pageInfo: PageInfo!\n  edges: [ProductTypeCountableEdge!]!\n  totalCount: Int\n}\n\ntype ProductTypeCountableEdge {\n  node: ProductType!\n  cursor: String!\n}\n\ntype ProductTypeCreate {\n  errors: [Error!]\n  productType: ProductType\n}\n\ntype ProductTypeDelete {\n  errors: [Error!]\n  productType: ProductType\n}\n\ninput ProductTypeInput {\n  name: String\n  hasVariants: Boolean\n  productAttributes: [ID]\n  variantAttributes: [ID]\n  isShippingRequired: Boolean\n  weight: WeightScalar\n  taxRate: TaxRateType\n}\n\ntype ProductTypeUpdate {\n  errors: [Error!]\n  productType: ProductType\n}\n\ntype ProductUpdate {\n  errors: [Error!]\n  product: Product\n}\n\ntype ProductVariant implements Node {\n  id: ID!\n  sku: String!\n  name: String!\n  priceOverride: Money\n  product: Product!\n  attributes: [SelectedAttribute!]!\n  images: [ProductImage]\n  trackInventory: Boolean!\n  quantity: Int!\n  quantityAllocated: Int!\n  costPrice: Money\n  weight: Weight\n  stockQuantity: Int!\n  price: Money\n  margin: Int\n  quantityOrdered: Int\n  revenue(period: ReportingPeriod): TaxedMoney\n  translation(languageCode: LanguageCodeEnum!): ProductVariantTranslation\n}\n\ntype ProductVariantBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype ProductVariantCountableConnection {\n  pageInfo: PageInfo!\n  edges: [ProductVariantCountableEdge!]!\n  totalCount: Int\n}\n\ntype ProductVariantCountableEdge {\n  node: ProductVariant!\n  cursor: String!\n}\n\ntype ProductVariantCreate {\n  errors: [Error!]\n  productVariant: ProductVariant\n}\n\ninput ProductVariantCreateInput {\n  attributes: [AttributeValueInput]!\n  costPrice: Decimal\n  priceOverride: Decimal\n  sku: String\n  quantity: Int\n  trackInventory: Boolean\n  weight: WeightScalar\n  product: ID!\n}\n\ntype ProductVariantDelete {\n  errors: [Error!]\n  productVariant: ProductVariant\n}\n\ninput ProductVariantInput {\n  attributes: [AttributeValueInput]\n  costPrice: Decimal\n  priceOverride: Decimal\n  sku: String\n  quantity: Int\n  trackInventory: Boolean\n  weight: WeightScalar\n}\n\ntype ProductVariantTranslate {\n  errors: [Error!]\n  productVariant: ProductVariant\n}\n\ntype ProductVariantTranslation implements Node {\n  id: ID!\n  name: String!\n  language: LanguageDisplay!\n}\n\ntype ProductVariantUpdate {\n  errors: [Error!]\n  productVariant: ProductVariant\n}\n\ntype Query {\n  translations(kind: TranslatableKinds!, before: String, after: String, first: Int, last: Int): TranslatableItemConnection\n  shop: Shop\n  shippingZone(id: ID!): ShippingZone\n  shippingZones(before: String, after: String, first: Int, last: Int): ShippingZoneCountableConnection\n  attributes(query: String, inCategory: ID, inCollection: ID, before: String, after: String, first: Int, last: Int): AttributeCountableConnection\n  categories(query: String, level: Int, before: String, after: String, first: Int, last: Int): CategoryCountableConnection\n  category(id: ID!): Category\n  collection(id: ID!): Collection\n  collections(query: String, before: String, after: String, first: Int, last: Int): CollectionCountableConnection\n  product(id: ID!): Product\n  products(attributes: [AttributeScalar], categories: [ID], collections: [ID], priceLte: Float, priceGte: Float, sortBy: ProductOrder, stockAvailability: StockAvailability, query: String, before: String, after: String, first: Int, last: Int): ProductCountableConnection\n  productType(id: ID!): ProductType\n  productTypes(before: String, after: String, first: Int, last: Int): ProductTypeCountableConnection\n  productVariant(id: ID!): ProductVariant\n  productVariants(ids: [ID], before: String, after: String, first: Int, last: Int): ProductVariantCountableConnection\n  reportProductSales(period: ReportingPeriod!, before: String, after: String, first: Int, last: Int): ProductVariantCountableConnection\n  payment(id: ID): Payment\n  payments(before: String, after: String, first: Int, last: Int): PaymentCountableConnection\n  paymentClientToken(gateway: GatewaysEnum): String\n  page(id: ID, slug: String): Page\n  pages(query: String, before: String, after: String, first: Int, last: Int): PageCountableConnection\n  homepageEvents(before: String, after: String, first: Int, last: Int): OrderEventCountableConnection\n  order(id: ID!): Order\n  orders(query: String, created: ReportingPeriod, status: OrderStatusFilter, before: String, after: String, first: Int, last: Int): OrderCountableConnection\n  draftOrders(query: String, created: ReportingPeriod, before: String, after: String, first: Int, last: Int): OrderCountableConnection\n  ordersTotal(period: ReportingPeriod): TaxedMoney\n  orderByToken(token: String!): Order\n  menu(id: ID, name: String): Menu\n  menus(query: String, before: String, after: String, first: Int, last: Int): MenuCountableConnection\n  menuItem(id: ID!): MenuItem\n  menuItems(query: String, before: String, after: String, first: Int, last: Int): MenuItemCountableConnection\n  sale(id: ID!): Sale\n  sales(query: String, before: String, after: String, first: Int, last: Int): SaleCountableConnection\n  voucher(id: ID!): Voucher\n  vouchers(query: String, before: String, after: String, first: Int, last: Int): VoucherCountableConnection\n  checkout(token: UUID): Checkout\n  checkouts(before: String, after: String, first: Int, last: Int): CheckoutCountableConnection\n  checkoutLine(id: ID): CheckoutLine\n  checkoutLines(before: String, after: String, first: Int, last: Int): CheckoutLineCountableConnection\n  addressValidator(input: AddressValidationInput!): AddressValidationData\n  customers(query: String, before: String, after: String, first: Int, last: Int): UserCountableConnection\n  me: User\n  staffUsers(query: String, before: String, after: String, first: Int, last: Int): UserCountableConnection\n  user(id: ID!): User\n  node(id: ID!): Node\n}\n\ntype ReducedRate {\n  rate: Float!\n  rateType: TaxRateType!\n}\n\ntype Refresh {\n  token: String\n  payload: GenericScalar\n}\n\nenum ReportingPeriod {\n  TODAY\n  THIS_MONTH\n}\n\ntype Sale implements Node {\n  id: ID!\n  name: String!\n  type: SaleType!\n  value: Float!\n  products(before: String, after: String, first: Int, last: Int): ProductCountableConnection\n  categories(before: String, after: String, first: Int, last: Int): CategoryCountableConnection\n  collections(before: String, after: String, first: Int, last: Int): CollectionCountableConnection\n  startDate: Date!\n  endDate: Date\n}\n\ntype SaleAddCatalogues {\n  errors: [Error!]\n  sale: Sale\n}\n\ntype SaleBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype SaleCountableConnection {\n  pageInfo: PageInfo!\n  edges: [SaleCountableEdge!]!\n  totalCount: Int\n}\n\ntype SaleCountableEdge {\n  node: Sale!\n  cursor: String!\n}\n\ntype SaleCreate {\n  errors: [Error!]\n  sale: Sale\n}\n\ntype SaleDelete {\n  errors: [Error!]\n  sale: Sale\n}\n\ninput SaleInput {\n  name: String\n  type: DiscountValueTypeEnum\n  value: Decimal\n  products: [ID]\n  categories: [ID]\n  collections: [ID]\n  startDate: Date\n  endDate: Date\n}\n\ntype SaleRemoveCatalogues {\n  errors: [Error!]\n  sale: Sale\n}\n\nenum SaleType {\n  FIXED\n  PERCENTAGE\n}\n\ntype SaleUpdate {\n  errors: [Error!]\n  sale: Sale\n}\n\ntype SelectedAttribute {\n  attribute: Attribute!\n  value: AttributeValue!\n}\n\ninput SeoInput {\n  title: String\n  description: String\n}\n\ntype SetPassword {\n  errors: [Error!]\n  user: User\n}\n\ninput SetPasswordInput {\n  token: String!\n  password: String!\n}\n\ntype ShippingMethod implements Node {\n  id: ID!\n  name: String!\n  type: ShippingMethodTypeEnum\n  price: Money\n  minimumOrderPrice: Money\n  maximumOrderPrice: Money\n  minimumOrderWeight: Weight\n  maximumOrderWeight: Weight\n  translation(languageCode: LanguageCodeEnum!): ShippingMethodTranslation\n}\n\ntype ShippingMethodTranslation implements Node {\n  id: ID!\n  name: String\n  language: LanguageDisplay!\n}\n\nenum ShippingMethodTypeEnum {\n  PRICE\n  WEIGHT\n}\n\ntype ShippingPriceBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype ShippingPriceCreate {\n  errors: [Error!]\n  shippingZone: ShippingZone\n  shippingMethod: ShippingMethod\n}\n\ntype ShippingPriceDelete {\n  errors: [Error!]\n  shippingMethod: ShippingMethod\n  shippingZone: ShippingZone\n}\n\ninput ShippingPriceInput {\n  name: String\n  price: Decimal\n  minimumOrderPrice: Decimal\n  maximumOrderPrice: Decimal\n  minimumOrderWeight: WeightScalar\n  maximumOrderWeight: WeightScalar\n  type: ShippingMethodTypeEnum\n  shippingZone: ID\n}\n\ntype ShippingPriceTranslate {\n  errors: [Error!]\n  shippingMethod: ShippingMethod\n}\n\ntype ShippingPriceUpdate {\n  errors: [Error!]\n  shippingZone: ShippingZone\n  shippingMethod: ShippingMethod\n}\n\ntype ShippingZone implements Node {\n  id: ID!\n  name: String!\n  countries: [CountryDisplay]\n  default: Boolean!\n  shippingMethods: [ShippingMethod]\n  priceRange: MoneyRange\n}\n\ntype ShippingZoneBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype ShippingZoneCountableConnection {\n  pageInfo: PageInfo!\n  edges: [ShippingZoneCountableEdge!]!\n  totalCount: Int\n}\n\ntype ShippingZoneCountableEdge {\n  node: ShippingZone!\n  cursor: String!\n}\n\ntype ShippingZoneCreate {\n  errors: [Error!]\n  shippingZone: ShippingZone\n}\n\ntype ShippingZoneDelete {\n  errors: [Error!]\n  shippingZone: ShippingZone\n}\n\ninput ShippingZoneInput {\n  name: String\n  countries: [String]\n  default: Boolean\n}\n\ntype ShippingZoneUpdate {\n  errors: [Error!]\n  shippingZone: ShippingZone\n}\n\ntype Shop {\n  geolocalization: Geolocalization\n  authorizationKeys: [AuthorizationKey]!\n  countries: [CountryDisplay]!\n  currencies: [String]!\n  defaultCurrency: String!\n  defaultCountry: CountryDisplay\n  description: String\n  domain: Domain!\n  homepageCollection: Collection\n  languages: [LanguageDisplay]!\n  name: String!\n  navigation: Navigation\n  permissions: [PermissionDisplay]!\n  phonePrefixes: [String]!\n  headerText: String\n  includeTaxesInPrices: Boolean!\n  displayGrossPrices: Boolean!\n  chargeTaxesOnShipping: Boolean!\n  trackInventoryByDefault: Boolean\n  defaultWeightUnit: WeightUnitsEnum\n  translation(languageCode: LanguageCodeEnum!): ShopTranslation\n}\n\ntype ShopDomainUpdate {\n  errors: [Error!]\n  shop: Shop\n}\n\ntype ShopFetchTaxRates {\n  errors: [Error!]\n  shop: Shop\n}\n\ninput ShopSettingsInput {\n  headerText: String\n  description: String\n  includeTaxesInPrices: Boolean\n  displayGrossPrices: Boolean\n  chargeTaxesOnShipping: Boolean\n  trackInventoryByDefault: Boolean\n  defaultWeightUnit: WeightUnitsEnum\n}\n\ntype ShopSettingsTranslate {\n  errors: [Error!]\n  shop: Shop\n}\n\ninput ShopSettingsTranslationInput {\n  headerText: String\n  description: String\n}\n\ntype ShopSettingsUpdate {\n  errors: [Error!]\n  shop: Shop\n}\n\ntype ShopTranslation implements Node {\n  id: ID!\n  headerText: String!\n  description: String!\n  language: LanguageDisplay!\n}\n\ninput SiteDomainInput {\n  domain: String\n  name: String\n}\n\ntype StaffBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype StaffCreate {\n  errors: [Error!]\n  user: User\n}\n\ninput StaffCreateInput {\n  firstName: String\n  lastName: String\n  email: String\n  isActive: Boolean\n  note: String\n  permissions: [PermissionEnum]\n  sendPasswordEmail: Boolean\n}\n\ntype StaffDelete {\n  errors: [Error!]\n  user: User\n}\n\ninput StaffInput {\n  firstName: String\n  lastName: String\n  email: String\n  isActive: Boolean\n  note: String\n  permissions: [PermissionEnum]\n}\n\ntype StaffUpdate {\n  errors: [Error!]\n  user: User\n}\n\nenum StockAvailability {\n  IN_STOCK\n  OUT_OF_STOCK\n}\n\nenum TaxRateType {\n  ACCOMMODATION\n  ADMISSION_TO_CULTURAL_EVENTS\n  ADMISSION_TO_ENTERTAINMENT_EVENTS\n  ADMISSION_TO_SPORTING_EVENTS\n  ADVERTISING\n  AGRICULTURAL_SUPPLIES\n  BABY_FOODSTUFFS\n  BIKES\n  BOOKS\n  CHILDRENS_CLOTHING\n  DOMESTIC_FUEL\n  DOMESTIC_SERVICES\n  E_BOOKS\n  FOODSTUFFS\n  HOTELS\n  MEDICAL\n  NEWSPAPERS\n  PASSENGER_TRANSPORT\n  PHARMACEUTICALS\n  PROPERTY_RENOVATIONS\n  RESTAURANTS\n  SOCIAL_HOUSING\n  STANDARD\n  WATER\n  WINE\n}\n\ntype TaxedMoney {\n  currency: String!\n  gross: Money!\n  net: Money!\n  tax: Money!\n}\n\ntype TaxedMoneyRange {\n  start: TaxedMoney\n  stop: TaxedMoney\n}\n\ntype Transaction implements Node {\n  id: ID!\n  created: DateTime!\n  payment: Payment!\n  token: String!\n  kind: TransactionKind!\n  isSuccess: Boolean!\n  amount: Money\n  error: TransactionError\n  gatewayResponse: JSONString!\n}\n\nenum TransactionError {\n  TRANSACTIONERROR_INCORRECT_NUMBER\n  TRANSACTIONERROR_INVALID_NUMBER\n  TRANSACTIONERROR_INCORRECT_CVV\n  TRANSACTIONERROR_INVALID_CVV\n  TRANSACTIONERROR_INCORRECT_ZIP\n  TRANSACTIONERROR_INCORRECT_ADDRESS\n  TRANSACTIONERROR_INVALID_EXPIRY_DATE\n  TRANSACTIONERROR_EXPIRED\n  TRANSACTIONERROR_PROCESSING_ERROR\n  TRANSACTIONERROR_DECLINED\n}\n\nenum TransactionKind {\n  AUTH\n  CHARGE\n  REFUND\n  CAPTURE\n  VOID\n}\n\nunion TranslatableItem = Product | Category | Collection | Attribute | AttributeValue | ProductVariant | Page | ShippingMethod | Voucher | MenuItem\n\ntype TranslatableItemConnection {\n  pageInfo: PageInfo!\n  edges: [TranslatableItemEdge!]!\n  totalCount: Int\n}\n\ntype TranslatableItemEdge {\n  node: TranslatableItem!\n  cursor: String!\n}\n\nenum TranslatableKinds {\n  PRODUCT\n  COLLECTION\n  CATEGORY\n  PAGE\n  SHIPPING_METHOD\n  VOUCHER\n  ATTRIBUTE\n  ATTRIBUTE_VALUE\n  VARIANT\n  MENU_ITEM\n}\n\ninput TranslationInput {\n  seoTitle: String\n  seoDescription: String\n  name: String\n  description: String\n  descriptionJson: JSONString\n}\n\nscalar UUID\n\nscalar Upload\n\ntype User implements Node {\n  id: ID!\n  lastLogin: DateTime\n  email: String!\n  firstName: String!\n  lastName: String!\n  addresses: [Address]\n  isStaff: Boolean!\n  token: UUID!\n  isActive: Boolean!\n  note: String\n  dateJoined: DateTime!\n  defaultShippingAddress: Address\n  defaultBillingAddress: Address\n  orders(before: String, after: String, first: Int, last: Int): OrderCountableConnection\n  checkout: Checkout\n  permissions: [PermissionDisplay]\n}\n\ninput UserAddressInput {\n  defaultBillingAddress: AddressInput\n  defaultShippingAddress: AddressInput\n}\n\ntype UserCountableConnection {\n  pageInfo: PageInfo!\n  edges: [UserCountableEdge!]!\n  totalCount: Int\n}\n\ntype UserCountableEdge {\n  node: User!\n  cursor: String!\n}\n\ninput UserCreateInput {\n  defaultBillingAddress: AddressInput\n  defaultShippingAddress: AddressInput\n  firstName: String\n  lastName: String\n  email: String\n  isActive: Boolean\n  note: String\n  sendPasswordEmail: Boolean\n}\n\ntype VAT {\n  countryCode: String!\n  standardRate: Float\n  reducedRates: [ReducedRate]!\n}\n\ntype VariantImageAssign {\n  errors: [Error!]\n  productVariant: ProductVariant\n  image: ProductImage\n}\n\ntype VariantImageUnassign {\n  errors: [Error!]\n  productVariant: ProductVariant\n  image: ProductImage\n}\n\ntype VerifyToken {\n  payload: GenericScalar\n  user: User\n}\n\ntype Voucher implements Node {\n  id: ID!\n  type: VoucherType!\n  name: String\n  code: String!\n  usageLimit: Int\n  used: Int!\n  startDate: Date!\n  endDate: Date\n  applyOncePerOrder: Boolean!\n  discountValueType: VoucherDiscountValueType!\n  discountValue: Float!\n  countries: [CountryDisplay]\n  minAmountSpent: Money\n  products(before: String, after: String, first: Int, last: Int): ProductCountableConnection\n  collections(before: String, after: String, first: Int, last: Int): CollectionCountableConnection\n  categories(before: String, after: String, first: Int, last: Int): CategoryCountableConnection\n  translation(languageCode: LanguageCodeEnum!): VoucherTranslation\n}\n\ntype VoucherAddCatalogues {\n  errors: [Error!]\n  voucher: Voucher\n}\n\ntype VoucherBulkDelete {\n  errors: [Error!]\n  count: Int!\n}\n\ntype VoucherCountableConnection {\n  pageInfo: PageInfo!\n  edges: [VoucherCountableEdge!]!\n  totalCount: Int\n}\n\ntype VoucherCountableEdge {\n  node: Voucher!\n  cursor: String!\n}\n\ntype VoucherCreate {\n  errors: [Error!]\n  voucher: Voucher\n}\n\ntype VoucherDelete {\n  errors: [Error!]\n  voucher: Voucher\n}\n\nenum VoucherDiscountValueType {\n  FIXED\n  PERCENTAGE\n}\n\ninput VoucherInput {\n  type: VoucherTypeEnum\n  name: String\n  code: String\n  startDate: Date\n  endDate: Date\n  discountValueType: DiscountValueTypeEnum\n  discountValue: Decimal\n  products: [ID]\n  collections: [ID]\n  categories: [ID]\n  minAmountSpent: Decimal\n  countries: [String]\n}\n\ntype VoucherRemoveCatalogues {\n  errors: [Error!]\n  voucher: Voucher\n}\n\ntype VoucherTranslate {\n  errors: [Error!]\n  voucher: Voucher\n}\n\ntype VoucherTranslation implements Node {\n  id: ID!\n  name: String\n  language: LanguageDisplay!\n}\n\nenum VoucherType {\n  VALUE\n  PRODUCT\n  COLLECTION\n  CATEGORY\n  SHIPPING\n}\n\nenum VoucherTypeEnum {\n  PRODUCT\n  COLLECTION\n  CATEGORY\n  SHIPPING\n  VALUE\n}\n\ntype VoucherUpdate {\n  errors: [Error!]\n  voucher: Voucher\n}\n\ntype Weight {\n  unit: String!\n  value: Float!\n}\n\nscalar WeightScalar\n\nenum WeightUnitsEnum {\n  KG\n  LB\n  OZ\n  G\n}\n",
      "containsQueryType": true,
      "typesUndefined": [],
      "directivesUndefined": [
        "deprecated"
      ],
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 344
    }
  ],
  "metrics": {
    "created_at": "2019-03-27T20:24:27Z",
    "updated_at": "2019-03-29T16:00:25Z",
    "pushed_at": "2019-04-29T20:09:37Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "bsd-3-clause",
    "pull_requests": 1,
    "pull_requests_open": 1,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}