{
  "repo_name": "nuxt-typescript-strapi-boilerplate",
  "repo_full_name": "nikolasmelui/nuxt-typescript-strapi-boilerplate",
  "repo_owner": "NikolasMelui",
  "repo_description": "Boilerplate include Nuxt with Typescript on the frontend and Strapi on the backend. Powered by NikolasMelui and RinatDav.",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "server/plugins/graphql/config/generated/schema.graphql",
      "sha": "022cbfe9df1e8ec26b43238466f36c3f3ed4e29d",
      "url": "https://api.github.com/repositories/179223030/contents/server/plugins/graphql/config/generated/schema.graphql?ref=2e22692ea97d46a0f5ba33f9fccb35de493283a6",
      "git_url": "https://api.github.com/repositories/179223030/git/blobs/022cbfe9df1e8ec26b43238466f36c3f3ed4e29d",
      "html_url": "https://github.com/NikolasMelui/nuxt-typescript-strapi-boilerplate/blob/2e22692ea97d46a0f5ba33f9fccb35de493283a6/server/plugins/graphql/config/generated/schema.graphql",
      "content": "input createInfoInput {\n  data: InfoInput\n}\n\ntype createInfoPayload {\n  info: Info\n}\n\ninput createPageInput {\n  data: PageInput\n}\n\ntype createPagePayload {\n  page: Page\n}\n\ninput createPostInput {\n  data: PostInput\n}\n\ntype createPostPayload {\n  post: Post\n}\n\ninput createRoleInput {\n  data: RoleInput\n}\n\ntype createRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput createUserInput {\n  data: UserInput\n}\n\ntype createUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"\nThe `DateTime` scalar represents a date and time following the ISO 8601 standard\n\"\"\"\nscalar DateTime\n\ninput deleteInfoInput {\n  where: InputID\n}\n\ntype deleteInfoPayload {\n  info: Info\n}\n\ninput deletePageInput {\n  where: InputID\n}\n\ntype deletePagePayload {\n  page: Page\n}\n\ninput deletePostInput {\n  where: InputID\n}\n\ntype deletePostPayload {\n  post: Post\n}\n\ninput deleteRoleInput {\n  where: InputID\n}\n\ntype deleteRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput deleteUserInput {\n  where: InputID\n}\n\ntype deleteUserPayload {\n  user: UsersPermissionsUser\n}\n\ninput editFileInput {\n  name: String\n  hash: String\n  sha256: String\n  ext: String\n  mime: String\n  size: String\n  url: String\n  provider: String\n  public_id: String\n  related: [ID]\n}\n\ninput editInfoInput {\n  phone: String\n  email: String\n  address: String\n  addresslink: String\n}\n\ninput editPageInput {\n  title_ru: String\n  title_en: String\n  slug: String\n  seotitle: String\n  seodescription: String\n  seokeywords: String\n  subtitle_ru: String\n  subtitle_en: String\n  content_ru: String\n  content_en: String\n}\n\ninput editPostInput {\n  title_ru: String\n  title_en: String\n  slug: String\n  seotitle: String\n  seodescription: String\n  seokeywords: String\n  content_ru: String\n  content_en: String\n  image: ID\n  previewimage: ID\n}\n\ninput editRoleInput {\n  name: String\n  description: String\n  type: String\n  permissions: [ID]\n  users: [ID]\n}\n\ninput editUserInput {\n  username: String\n  email: String\n  provider: String\n  password: String\n  resetPasswordToken: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: ID\n}\n\ninput FileInput {\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related: [ID]\n}\n\ntype Info {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  phone: String\n  email: String\n  address: String\n  addresslink: String\n}\n\ntype InfoAggregator {\n  count: Int\n}\n\ntype InfoConnection {\n  values: [Info]\n  groupBy: InfoGroupBy\n  aggregate: InfoAggregator\n}\n\ntype InfoConnection_id {\n  key: ID\n  connection: InfoConnection\n}\n\ntype InfoConnectionAddress {\n  key: String\n  connection: InfoConnection\n}\n\ntype InfoConnectionAddresslink {\n  key: String\n  connection: InfoConnection\n}\n\ntype InfoConnectionCreatedAt {\n  key: DateTime\n  connection: InfoConnection\n}\n\ntype InfoConnectionEmail {\n  key: String\n  connection: InfoConnection\n}\n\ntype InfoConnectionPhone {\n  key: String\n  connection: InfoConnection\n}\n\ntype InfoConnectionUpdatedAt {\n  key: DateTime\n  connection: InfoConnection\n}\n\ntype InfoGroupBy {\n  _id: [InfoConnection_id]\n  createdAt: [InfoConnectionCreatedAt]\n  updatedAt: [InfoConnectionUpdatedAt]\n  phone: [InfoConnectionPhone]\n  email: [InfoConnectionEmail]\n  address: [InfoConnectionAddress]\n  addresslink: [InfoConnectionAddresslink]\n}\n\ninput InfoInput {\n  phone: String\n  email: String\n  address: String\n  addresslink: String\n}\n\ninput InputID {\n  id: ID!\n}\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\"\"\"\nscalar JSON\n\nunion Morph = UsersPermissionsMe | UsersPermissionsMeRole | Info | createInfoPayload | updateInfoPayload | deleteInfoPayload | InfoConnection | InfoAggregator | InfoGroupBy | InfoConnection_id | InfoConnectionCreatedAt | InfoConnectionUpdatedAt | InfoConnectionPhone | InfoConnectionEmail | InfoConnectionAddress | InfoConnectionAddresslink | Page | createPagePayload | updatePagePayload | deletePagePayload | PageConnection | PageAggregator | PageGroupBy | PageConnection_id | PageConnectionCreatedAt | PageConnectionUpdatedAt | PageConnectionTitle_ru | PageConnectionTitle_en | PageConnectionSlug | PageConnectionSeotitle | PageConnectionSeodescription | PageConnectionSeokeywords | PageConnectionSubtitle_ru | PageConnectionSubtitle_en | PageConnectionContent_ru | PageConnectionContent_en | Post | createPostPayload | updatePostPayload | deletePostPayload | PostConnection | PostAggregator | PostGroupBy | PostConnection_id | PostConnectionCreatedAt | PostConnectionUpdatedAt | PostConnectionTitle_ru | PostConnectionTitle_en | PostConnectionSlug | PostConnectionSeotitle | PostConnectionSeodescription | PostConnectionSeokeywords | PostConnectionContent_ru | PostConnectionContent_en | PostConnectionImage | PostConnectionPreviewimage | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileGroupBy | UploadFileConnection_id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionHash | UploadFileConnectionSha256 | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionProvider | UploadFileConnectionPublic_id | UsersPermissionsPermission | UsersPermissionsRole | createRolePayload | updateRolePayload | deleteRolePayload | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnection_id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | UsersPermissionsUser | createUserPayload | updateUserPayload | deleteUserPayload | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnection_id | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole\n\ntype Mutation {\n  createInfo(input: createInfoInput): createInfoPayload\n  updateInfo(input: updateInfoInput): updateInfoPayload\n  deleteInfo(input: deleteInfoInput): deleteInfoPayload\n  createPage(input: createPageInput): createPagePayload\n  updatePage(input: updatePageInput): updatePagePayload\n  deletePage(input: deletePageInput): deletePagePayload\n  createPost(input: createPostInput): createPostPayload\n  updatePost(input: updatePostInput): updatePostPayload\n  deletePost(input: deletePostInput): deletePostPayload\n\n  \"\"\"Create a new role\"\"\"\n  createRole(input: createRoleInput): createRolePayload\n\n  \"\"\"Update an existing role\"\"\"\n  updateRole(input: updateRoleInput): updateRolePayload\n\n  \"\"\"Delete an existing role\"\"\"\n  deleteRole(input: deleteRoleInput): deleteRolePayload\n\n  \"\"\"Create a new user\"\"\"\n  createUser(input: createUserInput): createUserPayload\n\n  \"\"\"Update an existing user\"\"\"\n  updateUser(input: updateUserInput): updateUserPayload\n\n  \"\"\"Delete an existing user\"\"\"\n  deleteUser(input: deleteUserInput): deleteUserPayload\n  upload(refId: ID, ref: String, source: String, file: Upload!): UploadFile!\n}\n\ntype Page {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title_ru: String!\n  title_en: String!\n  slug: String!\n  seotitle: String\n  seodescription: String\n  seokeywords: String\n  subtitle_ru: String\n  subtitle_en: String\n  content_ru: String\n  content_en: String\n}\n\ntype PageAggregator {\n  count: Int\n}\n\ntype PageConnection {\n  values: [Page]\n  groupBy: PageGroupBy\n  aggregate: PageAggregator\n}\n\ntype PageConnection_id {\n  key: ID\n  connection: PageConnection\n}\n\ntype PageConnectionContent_en {\n  key: String\n  connection: PageConnection\n}\n\ntype PageConnectionContent_ru {\n  key: String\n  connection: PageConnection\n}\n\ntype PageConnectionCreatedAt {\n  key: DateTime\n  connection: PageConnection\n}\n\ntype PageConnectionSeodescription {\n  key: String\n  connection: PageConnection\n}\n\ntype PageConnectionSeokeywords {\n  key: String\n  connection: PageConnection\n}\n\ntype PageConnectionSeotitle {\n  key: String\n  connection: PageConnection\n}\n\ntype PageConnectionSlug {\n  key: String\n  connection: PageConnection\n}\n\ntype PageConnectionSubtitle_en {\n  key: String\n  connection: PageConnection\n}\n\ntype PageConnectionSubtitle_ru {\n  key: String\n  connection: PageConnection\n}\n\ntype PageConnectionTitle_en {\n  key: String\n  connection: PageConnection\n}\n\ntype PageConnectionTitle_ru {\n  key: String\n  connection: PageConnection\n}\n\ntype PageConnectionUpdatedAt {\n  key: DateTime\n  connection: PageConnection\n}\n\ntype PageGroupBy {\n  _id: [PageConnection_id]\n  createdAt: [PageConnectionCreatedAt]\n  updatedAt: [PageConnectionUpdatedAt]\n  title_ru: [PageConnectionTitle_ru]\n  title_en: [PageConnectionTitle_en]\n  slug: [PageConnectionSlug]\n  seotitle: [PageConnectionSeotitle]\n  seodescription: [PageConnectionSeodescription]\n  seokeywords: [PageConnectionSeokeywords]\n  subtitle_ru: [PageConnectionSubtitle_ru]\n  subtitle_en: [PageConnectionSubtitle_en]\n  content_ru: [PageConnectionContent_ru]\n  content_en: [PageConnectionContent_en]\n}\n\ninput PageInput {\n  title_ru: String!\n  title_en: String!\n  slug: String!\n  seotitle: String\n  seodescription: String\n  seokeywords: String\n  subtitle_ru: String\n  subtitle_en: String\n  content_ru: String\n  content_en: String\n}\n\ntype Post {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  title_ru: String!\n  title_en: String!\n  slug: String!\n  seotitle: String\n  seodescription: String\n  seokeywords: String\n  content_ru: String\n  content_en: String\n  image: UploadFile\n  previewimage: UploadFile\n}\n\ntype PostAggregator {\n  count: Int\n}\n\ntype PostConnection {\n  values: [Post]\n  groupBy: PostGroupBy\n  aggregate: PostAggregator\n}\n\ntype PostConnection_id {\n  key: ID\n  connection: PostConnection\n}\n\ntype PostConnectionContent_en {\n  key: String\n  connection: PostConnection\n}\n\ntype PostConnectionContent_ru {\n  key: String\n  connection: PostConnection\n}\n\ntype PostConnectionCreatedAt {\n  key: DateTime\n  connection: PostConnection\n}\n\ntype PostConnectionImage {\n  key: ID\n  connection: PostConnection\n}\n\ntype PostConnectionPreviewimage {\n  key: ID\n  connection: PostConnection\n}\n\ntype PostConnectionSeodescription {\n  key: String\n  connection: PostConnection\n}\n\ntype PostConnectionSeokeywords {\n  key: String\n  connection: PostConnection\n}\n\ntype PostConnectionSeotitle {\n  key: String\n  connection: PostConnection\n}\n\ntype PostConnectionSlug {\n  key: String\n  connection: PostConnection\n}\n\ntype PostConnectionTitle_en {\n  key: String\n  connection: PostConnection\n}\n\ntype PostConnectionTitle_ru {\n  key: String\n  connection: PostConnection\n}\n\ntype PostConnectionUpdatedAt {\n  key: DateTime\n  connection: PostConnection\n}\n\ntype PostGroupBy {\n  _id: [PostConnection_id]\n  createdAt: [PostConnectionCreatedAt]\n  updatedAt: [PostConnectionUpdatedAt]\n  title_ru: [PostConnectionTitle_ru]\n  title_en: [PostConnectionTitle_en]\n  slug: [PostConnectionSlug]\n  seotitle: [PostConnectionSeotitle]\n  seodescription: [PostConnectionSeodescription]\n  seokeywords: [PostConnectionSeokeywords]\n  content_ru: [PostConnectionContent_ru]\n  content_en: [PostConnectionContent_en]\n  image: [PostConnectionImage]\n  previewimage: [PostConnectionPreviewimage]\n}\n\ninput PostInput {\n  title_ru: String!\n  title_en: String!\n  slug: String!\n  seotitle: String\n  seodescription: String\n  seokeywords: String\n  content_ru: String\n  content_en: String\n  image: ID\n  previewimage: ID\n}\n\ntype Query {\n  info(id: ID!): Info\n  infos(sort: String, limit: Int, start: Int, where: JSON): [Info]\n  infosConnection(sort: String, limit: Int, start: Int, where: JSON): InfoConnection\n  page(id: ID!): Page\n  pages(sort: String, limit: Int, start: Int, where: JSON): [Page]\n  pagesConnection(sort: String, limit: Int, start: Int, where: JSON): PageConnection\n  post(id: ID!): Post\n  posts(sort: String, limit: Int, start: Int, where: JSON): [Post]\n  postsConnection(sort: String, limit: Int, start: Int, where: JSON): PostConnection\n  files(sort: String, limit: Int, start: Int, where: JSON): [UploadFile]\n  filesConnection(sort: String, limit: Int, start: Int, where: JSON): UploadFileConnection\n  role(id: ID!): UsersPermissionsRole\n\n  \"\"\"\n  Retrieve all the existing roles. You can't apply filters on this query.\n  \"\"\"\n  roles(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsRole]\n  rolesConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsRoleConnection\n  user(id: ID!): UsersPermissionsUser\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n  usersConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsUserConnection\n  me: UsersPermissionsMe\n}\n\ninput RoleInput {\n  name: String!\n  description: String\n  type: String\n  permissions: [ID]\n  users: [ID]\n}\n\ninput updateInfoInput {\n  where: InputID\n  data: editInfoInput\n}\n\ntype updateInfoPayload {\n  info: Info\n}\n\ninput updatePageInput {\n  where: InputID\n  data: editPageInput\n}\n\ntype updatePagePayload {\n  page: Page\n}\n\ninput updatePostInput {\n  where: InputID\n  data: editPostInput\n}\n\ntype updatePostPayload {\n  post: Post\n}\n\ninput updateRoleInput {\n  where: InputID\n  data: editRoleInput\n}\n\ntype updateRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput updateUserInput {\n  where: InputID\n  data: editUserInput\n}\n\ntype updateUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload\n\ntype UploadFile {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related(sort: String, limit: Int, start: Int, where: JSON): [Morph]\n}\n\ntype UploadFileAggregator {\n  count: Int\n}\n\ntype UploadFileConnection {\n  values: [UploadFile]\n  groupBy: UploadFileGroupBy\n  aggregate: UploadFileAggregator\n}\n\ntype UploadFileConnection_id {\n  key: ID\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionCreatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionExt {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionHash {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionMime {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionName {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionProvider {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionPublic_id {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSha256 {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSize {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUpdatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUrl {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileGroupBy {\n  _id: [UploadFileConnection_id]\n  createdAt: [UploadFileConnectionCreatedAt]\n  updatedAt: [UploadFileConnectionUpdatedAt]\n  name: [UploadFileConnectionName]\n  hash: [UploadFileConnectionHash]\n  sha256: [UploadFileConnectionSha256]\n  ext: [UploadFileConnectionExt]\n  mime: [UploadFileConnectionMime]\n  size: [UploadFileConnectionSize]\n  url: [UploadFileConnectionUrl]\n  provider: [UploadFileConnectionProvider]\n  public_id: [UploadFileConnectionPublic_id]\n}\n\ninput UserInput {\n  username: String!\n  email: String!\n  provider: String\n  password: String\n  resetPasswordToken: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: ID\n}\n\ntype UsersPermissionsMe {\n  _id: ID!\n  username: String!\n  email: String!\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsMeRole\n}\n\ntype UsersPermissionsMeRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n}\n\ntype UsersPermissionsPermission {\n  _id: ID!\n  type: String!\n  controller: String!\n  action: String!\n  enabled: Boolean!\n  policy: String\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n  permissions(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsPermission]\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n}\n\ntype UsersPermissionsRoleAggregator {\n  count: Int\n}\n\ntype UsersPermissionsRoleConnection {\n  values: [UsersPermissionsRole]\n  groupBy: UsersPermissionsRoleGroupBy\n  aggregate: UsersPermissionsRoleAggregator\n}\n\ntype UsersPermissionsRoleConnection_id {\n  key: ID\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionDescription {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionName {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionType {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleGroupBy {\n  _id: [UsersPermissionsRoleConnection_id]\n  name: [UsersPermissionsRoleConnectionName]\n  description: [UsersPermissionsRoleConnectionDescription]\n  type: [UsersPermissionsRoleConnectionType]\n}\n\ntype UsersPermissionsUser {\n  _id: ID!\n  username: String!\n  email: String!\n  provider: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsUserAggregator {\n  count: Int\n}\n\ntype UsersPermissionsUserConnection {\n  values: [UsersPermissionsUser]\n  groupBy: UsersPermissionsUserGroupBy\n  aggregate: UsersPermissionsUserAggregator\n}\n\ntype UsersPermissionsUserConnection_id {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionBlocked {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionConfirmed {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionEmail {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionProvider {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionRole {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionUsername {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserGroupBy {\n  _id: [UsersPermissionsUserConnection_id]\n  username: [UsersPermissionsUserConnectionUsername]\n  email: [UsersPermissionsUserConnectionEmail]\n  provider: [UsersPermissionsUserConnectionProvider]\n  confirmed: [UsersPermissionsUserConnectionConfirmed]\n  blocked: [UsersPermissionsUserConnectionBlocked]\n  role: [UsersPermissionsUserConnectionRole]\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 100,
      "containsCycle": true,
      "numDefinitions": 132
    }
  ],
  "metrics": {
    "created_at": "2019-04-03T06:16:53Z",
    "updated_at": "2019-07-11T13:52:10Z",
    "pushed_at": "2019-05-14T09:43:07Z",
    "issues": 2,
    "watchers": 1,
    "fork_count": 6,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 9,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 9,
    "releases": 1,
    "stargazers": 11
  }
}