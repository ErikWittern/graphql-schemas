{
  "repo_name": "api",
  "repo_full_name": "spacexland/api",
  "repo_owner": "spacexland",
  "repo_description": "ðŸš€ GraphQL & REST APIs to explore all the rockets, launches & other SpaceX's data",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "schema.graphql",
      "sha": "c6a42175a52cf16a4e226d50266f5aac163950d3",
      "url": "https://api.github.com/repositories/164120653/contents/schema.graphql?ref=572937282af30a68b962f896d8ecc7bc29d34ba0",
      "git_url": "https://api.github.com/repositories/164120653/git/blobs/c6a42175a52cf16a4e226d50266f5aac163950d3",
      "html_url": "https://github.com/spacexland/api/blob/572937282af30a68b962f896d8ecc7bc29d34ba0/schema.graphql",
      "content": "directive @rateLimit(max: Int, window: String, message: String, identityArgs: [String]) on FIELD_DEFINITION\n\ntype Address {\n  address: String\n  city: String\n  state: String\n}\n\ntype Capsule {\n  id: ID\n  landings: Int\n  missions: [CapsuleMission]\n  original_launch: Date\n  reuse_count: Int\n  status: String\n  type: String\n  dragon: Dragon\n}\n\ntype CapsuleMission {\n  flight: Int\n  name: String\n}\n\ninput CapsulesFind {\n  id: ID\n  landings: Int\n  mission: String\n  original_launch: Date\n  reuse_count: Int\n  status: String\n  type: String\n}\n\ntype Core {\n  asds_attempts: Int\n  asds_landings: Int\n  block: Int\n  id: ID\n  missions: [CapsuleMission]\n  original_launch: Date\n  reuse_count: Int\n  rtls_attempts: Int\n  rtls_landings: Int\n  status: String\n  water_landing: Boolean\n}\n\ntype CoreMission {\n  name: String\n  flight: Int\n}\n\ninput CoresFind {\n  asds_attempts: Int\n  asds_landings: Int\n  block: Int\n  id: String\n  missions: String\n  original_launch: Date\n  reuse_count: Int\n  rtls_attempts: Int\n  rtls_landings: Int\n  status: String\n  water_landing: Boolean\n}\n\nscalar Date\n\ntype Distance {\n  feet: Float\n  meters: Float\n}\n\ntype Dragon {\n  active: Boolean\n  crew_capacity: Int\n  description: String\n  diameter: Distance\n  dry_mass_kg: Int\n  dry_mass_lb: Int\n  first_flight: String\n  heat_shield: DragonHeatShield\n  height_w_trunk: Distance\n  id: ID\n  launch_payload_mass: Mass\n  launch_payload_vol: Volume\n  name: String\n  orbit_duration_yr: Int\n  pressurized_capsule: DragonPressurizedCapsule\n  return_payload_mass: Mass\n  return_payload_vol: Volume\n  sidewall_angle_deg: Float\n  thrusters: [DragonThrust]\n  trunk: DragonTrunk\n  type: String\n  wikipedia: String\n}\n\ntype DragonHeatShield {\n  dev_partner: String\n  material: String\n  size_meters: Float\n  temp_degrees: Int\n}\n\ntype DragonPressurizedCapsule {\n  payload_volume: Volume\n}\n\ntype DragonThrust {\n  amount: Int\n  fuel_1: String\n  fuel_2: String\n  pods: Int\n  thrust: Force\n  type: String\n}\n\ntype DragonTrunk {\n  cargo: DragonTrunkCargo\n  trunk_volume: Volume\n}\n\ntype DragonTrunkCargo {\n  solar_array: Int\n  unpressurized_cargo: Boolean\n}\n\ntype Force {\n  kN: Float\n  lbf: Float\n}\n\ntype HistoriesResult {\n  result: Result\n  data: [History]\n}\n\ntype History {\n  details: String\n  event_date_unix: Date\n  event_date_utc: Date\n  id: ID\n  links: Link\n  title: String\n  flight: Launch\n}\n\ninput HistoryFind {\n  end: Date\n  flight_number: Int\n  id: ID\n  start: Date\n}\n\ntype Info {\n  ceo: String\n  coo: String\n  cto_propulsion: String\n  cto: String\n  employees: Int\n  founded: Int\n  founder: String\n  headquarters: Address\n  launch_sites: Int\n  links: InfoLinks\n  name: String\n  summary: String\n  test_sites: Int\n  valuation: Float\n  vehicles: Int\n}\n\ntype InfoLinks {\n  elon_twitter: String\n  flickr: String\n  twitter: String\n  website: String\n}\n\ntype Landpad {\n  attempted_landings: String\n  details: String\n  full_name: String\n  id: ID\n  landing_type: String\n  location: Location\n  status: String\n  successful_landings: String\n  wikipedia: String\n}\n\ntype Launch {\n  details: String\n  id: ID\n  is_tentative: Boolean\n  launch_date_local: Date\n  launch_date_unix: Date\n  launch_date_utc: Date\n  launch_site: LaunchSite\n  launch_success: Boolean\n  launch_year: String\n  links: LaunchLinks\n  mission_id: [String]\n  mission_name: String\n  rocket: LaunchRocket\n  static_fire_date_unix: Date\n  static_fire_date_utc: Date\n  telemetry: LaunchTelemetry\n  tentative_max_precision: String\n  upcoming: Boolean\n  ships: [Ship]\n}\n\ntype LaunchesPastResult {\n  result: Result\n  data: [Launch]\n}\n\ninput LaunchFind {\n  apoapsis_km: Float\n  block: Int\n  cap_serial: String\n  capsule_reuse: String\n  core_flight: Int\n  core_reuse: String\n  core_serial: String\n  customer: String\n  eccentricity: Float\n  end: Date\n  epoch: Date\n  fairings_recovered: String\n  fairings_recovery_attempt: String\n  fairings_reuse: String\n  fairings_reused: String\n  fairings_ship: String\n  gridfins: String\n  id: ID\n  inclination_deg: Float\n  land_success: String\n  landing_intent: String\n  landing_type: String\n  landing_vehicle: String\n  launch_date_local: Date\n  launch_date_utc: Date\n  launch_success: String\n  launch_year: String\n  legs: String\n  lifespan_years: Float\n  longitude: Float\n  manufacturer: String\n  mean_motion: Float\n  mission_id: String\n  mission_name: String\n  nationality: String\n  norad_id: Int\n  orbit: String\n  payload_id: String\n  payload_type: String\n  periapsis_km: Float\n  period_min: Float\n  raan: Float\n  reference_system: String\n  regime: String\n  reused: String\n  rocket_id: String\n  rocket_name: String\n  rocket_type: String\n  second_stage_block: String\n  semi_major_axis_km: Float\n  ship: String\n  side_core1_reuse: String\n  side_core2_reuse: String\n  site_id: String\n  site_name_long: String\n  site_name: String\n  start: Date\n  tbd: String\n  tentative_max_precision: String\n  tentative: String\n}\n\ntype LaunchLinks {\n  article_link: String\n  flickr_images: [String]\n  mission_patch_small: String\n  mission_patch: String\n  presskit: String\n  reddit_campaign: String\n  reddit_launch: String\n  reddit_media: String\n  reddit_recovery: String\n  video_link: String\n  wikipedia: String\n}\n\ntype Launchpad {\n  attempted_launches: Int\n  details: String\n  id: ID\n  location: Location\n  name: String\n  status: String\n  successful_launches: Int\n  vehicles_launched: [Rocket]\n  wikipedia: String\n}\n\ntype LaunchRocket {\n  fairings: LaunchRocketFairings\n  first_stage: LaunchRocketFirstStage\n  rocket_name: String\n  rocket_type: String\n  rocket: Rocket\n  second_stage: LaunchRocketSecondStage\n}\n\ntype LaunchRocketFairings {\n  recovered: Boolean\n  recovery_attempt: Boolean\n  reused: Boolean\n  ship: String\n}\n\ntype LaunchRocketFirstStage {\n  cores: [LaunchRocketFirstStageCore]\n}\n\ntype LaunchRocketFirstStageCore {\n  block: Int\n  core: Core\n  flight: Int\n  gridfins: Boolean\n  land_success: Boolean\n  landing_intent: Boolean\n  landing_type: String\n  landing_vehicle: String\n  legs: Boolean\n  reused: Boolean\n}\n\ntype LaunchRocketSecondStage {\n  block: Int\n  payloads: [Payload]\n}\n\ntype LaunchSite {\n  site_id: String\n  site_name_long: String\n  site_name: String\n}\n\ntype LaunchTelemetry {\n  flight_club: String\n}\n\ntype Link {\n  article: String\n  reddit: String\n  wikipedia: String\n}\n\ntype Location {\n  latitude: Float\n  longitude: Float\n  name: String\n  region: String\n}\n\ntype Mass {\n  kg: Int\n  lb: Int\n}\n\ntype Mission {\n  description: String\n  id: ID\n  manufacturers: [String]\n  name: String\n  twitter: String\n  website: String\n  wikipedia: String\n  payloads: [Payload]\n}\n\ntype MissionResult {\n  result: Result\n  data: [Mission]\n}\n\ninput MissionsFind {\n  id: ID\n  manufacturer: String\n  name: String\n  payload_id: String\n}\n\nscalar ObjectID\n\ntype Payload {\n  customers: [String]\n  id: ID\n  manufacturer: String\n  nationality: String\n  norad_id: [Int]\n  orbit_params: PayloadOrbitParams\n  orbit: String\n  payload_mass_kg: Float\n  payload_mass_lbs: Float\n  payload_type: String\n  reused: Boolean\n}\n\ntype PayloadOrbitParams {\n  apoapsis_km: Float\n  arg_of_pericenter: Float\n  eccentricity: Float\n  epoch: Date\n  inclination_deg: Float\n  lifespan_years: Float\n  longitude: Float\n  mean_anomaly: Float\n  mean_motion: Float\n  periapsis_km: Float\n  period_min: Float\n  raan: Float\n  reference_system: String\n  regime: String\n  semi_major_axis_km: Float\n}\n\ninput PayloadsFind {\n  apoapsis_km: Float\n  customer: String\n  eccentricity: Float\n  epoch: Date\n  inclination_deg: Float\n  lifespan_years: Float\n  longitude: Float\n  manufacturer: String\n  mean_motion: Float\n  nationality: String\n  norad_id: Int\n  orbit: String\n  payload_id: ID\n  payload_type: String\n  periapsis_km: Float\n  period_min: Float\n  raan: Float\n  reference_system: String\n  regime: String\n  reused: Boolean\n  semi_major_axis_km: Float\n}\n\ntype Query {\n  capsules(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n  capsulesPast(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n  capsulesUpcoming(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n  capsule(id: ID!): Capsule\n  company: Info\n  cores(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n  coresPast(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n  coresUpcoming(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n  core(id: ID!): Core\n  dragons(limit: Int, offset: Int): [Dragon]\n  dragon(id: ID!): Dragon\n  histories(find: HistoryFind, limit: Int, offset: Int, order: String, sort: String): [History]\n  historiesResult(find: HistoryFind, limit: Int, offset: Int, order: String, sort: String): HistoriesResult\n  history(id: ID!): History\n  landpads(limit: Int, offset: Int): [Landpad]\n  landpad(id: ID!): Landpad\n  launches(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n  launchesPast(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n  launchesPastResult(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): LaunchesPastResult\n  launchesUpcoming(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n  launch(id: ID!): Launch\n  launchLatest(offset: Int): Launch\n  launchNext(offset: Int): Launch\n  launchpads(limit: Int, offset: Int): [Launchpad]\n  launchpad(id: ID!): Launchpad\n  missions(find: MissionsFind, limit: Int, offset: Int): [Mission]\n  missionsResult(find: MissionsFind, limit: Int, offset: Int): MissionResult\n  mission(id: ID!): Mission\n  payloads(find: PayloadsFind, limit: Int, offset: Int, order: String, sort: String): [Payload]\n  payload(id: ID!): Payload\n  roadster: Roadster\n  rockets(limit: Int, offset: Int): [Rocket]\n  rocketsResult(limit: Int, offset: Int): RocketsResult\n  rocket(id: ID!): Rocket\n  ships(find: ShipsFind, limit: Int, offset: Int, order: String, sort: String): [Ship]\n  shipsResult(find: ShipsFind, limit: Int, offset: Int, order: String, sort: String): ShipsResult\n  ship(id: ID!): Ship\n}\n\ntype Result {\n  totalCount: Int\n}\n\ntype Roadster {\n  apoapsis_au: Float\n  details: String\n  earth_distance_km: Float\n  earth_distance_mi: Float\n  eccentricity: Float\n  epoch_jd: Float\n  inclination: Float\n  launch_date_unix: Date\n  launch_date_utc: Date\n  launch_mass_kg: Int\n  launch_mass_lbs: Int\n  longitude: Float\n  mars_distance_km: Float\n  mars_distance_mi: Float\n  name: String\n  norad_id: Int\n  orbit_type: Float\n  periapsis_arg: Float\n  periapsis_au: Float\n  period_days: Float\n  semi_major_axis_au: Float\n  speed_kph: Float\n  speed_mph: Float\n  wikipedia: String\n}\n\ntype Rocket {\n  active: Boolean\n  boosters: Int\n  company: String\n  cost_per_launch: Int\n  country: String\n  description: String\n  diameter: Distance\n  engines: RocketEngines\n  first_flight: Date\n  first_stage: RocketFirstStage\n  height: Distance\n  id: ID\n  landing_legs: RocketLandingLegs\n  mass: Mass\n  name: String\n  payload_weights: [RocketPayloadWeight]\n  second_stage: RocketSecondStage\n  stages: Int\n  success_rate_pct: Int\n  type: String\n  wikipedia: String\n}\n\ntype RocketEngines {\n  number: Int\n  type: String\n  version: String\n  layout: String\n  engine_loss_max: String\n  propellant_1: String\n  propellant_2: String\n  thrust_sea_level: Force\n  thrust_vacuum: Force\n  thrust_to_weight: Float\n}\n\ntype RocketFirstStage {\n  burn_time_sec: Int\n  engines: Int\n  fuel_amount_tons: Float\n  reusable: Boolean\n  thrust_sea_level: Force\n  thrust_vacuum: Force\n}\n\ntype RocketLandingLegs {\n  number: Int\n  material: String\n}\n\ntype RocketPayloadWeight {\n  id: String\n  kg: Int\n  lb: Int\n  name: String\n}\n\ntype RocketSecondStage {\n  burn_time_sec: Int\n  engines: Int\n  fuel_amount_tons: Float\n  payloads: RocketSecondStagePayloads\n  thrust: Force\n}\n\ntype RocketSecondStagePayloadCompositeFairing {\n  height: Distance\n  diameter: Distance\n}\n\ntype RocketSecondStagePayloads {\n  option_1: String\n  composite_fairing: RocketSecondStagePayloadCompositeFairing\n}\n\ntype RocketsResult {\n  result: Result\n  data: [Rocket]\n}\n\ntype Ship {\n  abs: Int\n  active: Boolean\n  attempted_landings: Int\n  class: Int\n  course_deg: Int\n  home_port: String\n  id: ID\n  image: String\n  imo: Int\n  missions: [ShipMission]\n  mmsi: Int\n  model: String\n  name: String\n  position: ShipLocation\n  roles: [String]\n  speed_kn: Float\n  status: String\n  successful_landings: Int\n  type: String\n  url: String\n  weight_kg: Int\n  weight_lbs: Int\n  year_built: Int\n}\n\ntype ShipLocation {\n  latitude: Float\n  longitude: Float\n}\n\ntype ShipMission {\n  flight: String\n  name: String\n}\n\ninput ShipsFind {\n  id: ID\n  name: String\n  model: String\n  type: String\n  role: String\n  active: Boolean\n  imo: Int\n  mmsi: Int\n  abs: Int\n  class: Int\n  weight_lbs: Int\n  weight_kg: Int\n  year_built: Int\n  home_port: String\n  status: String\n  speed_kn: Int\n  course_deg: Int\n  latitude: Float\n  longitude: Float\n  successful_landings: Int\n  attempted_landings: Int\n  mission: String\n}\n\ntype ShipsResult {\n  result: Result\n  data: [Ship]\n}\n\ntype Volume {\n  cubic_feet: Int\n  cubic_meters: Int\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 53,
      "containsCycle": false,
      "polynomialLevel": 3,
      "numDefinitions": 63
    }
  ],
  "metrics": {
    "created_at": "2019-01-04T15:00:18Z",
    "updated_at": "2019-07-15T14:30:31Z",
    "pushed_at": "2019-07-19T21:56:22Z",
    "issues": 2,
    "watchers": 2,
    "fork_count": 6,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 137,
    "pull_requests_open": 7,
    "pull_requests_closed": 0,
    "pull_requests_merged": 130,
    "releases": 0,
    "stargazers": 38
  }
}