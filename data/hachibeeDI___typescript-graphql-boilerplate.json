{
  "repo_name": "typescript-graphql-boilerplate",
  "repo_full_name": "hachibeedi/typescript-graphql-boilerplate",
  "repo_owner": "hachibeeDI",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "documents/schema.graphql",
      "sha": "4d40709bb3e6102e7321bc09863513c0c45bf850",
      "url": "https://api.github.com/repositories/186564264/contents/documents/schema.graphql?ref=973f4c157e5a9e602777b31dba30e5ad22c9606a",
      "git_url": "https://api.github.com/repositories/186564264/git/blobs/4d40709bb3e6102e7321bc09863513c0c45bf850",
      "html_url": "https://github.com/hachibeeDI/typescript-graphql-boilerplate/blob/973f4c157e5a9e602777b31dba30e5ad22c9606a/documents/schema.graphql",
      "content": "scalar Date\n\nenum Role {\n  USER,\n  ADMIN,\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype User implements Node {\n  id: ID!\n  username: String!\n  email: String!\n  role: Role!\n}\n\ntype Query {\n  me: User!\n  user(id: ID!): User\n  allUsers: [User]\n}\n\ntype Mutation {\n  addUser(name: String!, email: String!): User!\n}\n\nschema {\n  query: Query\n  mutation: Mutation\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 3,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 7
    }
  ],
  "metrics": {
    "created_at": "2019-05-14T07:03:29Z",
    "updated_at": "2019-07-18T09:33:59Z",
    "pushed_at": "2019-07-18T09:33:58Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}