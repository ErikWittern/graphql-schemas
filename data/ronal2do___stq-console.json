{
  "repo_name": "stq-console",
  "repo_full_name": "ronal2do/stq-console",
  "repo_owner": "ronal2do",
  "repo_description": "open-source, relay modern, graphql, react",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "src/schema.graphql",
      "sha": "4beb614f4b54d8624e7efd1feb85fe52761ef5e4",
      "url": "https://api.github.com/repositories/111800560/contents/src/schema.graphql?ref=9a3b924d5bce7de52243401cf2703c09c665cb4e",
      "git_url": "https://api.github.com/repositories/111800560/git/blobs/4beb614f4b54d8624e7efd1feb85fe52761ef5e4",
      "html_url": "https://github.com/ronal2do/stq-console/blob/9a3b924d5bce7de52243401cf2703c09c665cb4e/src/schema.graphql",
      "content": "# Represents AdminUser\ntype AdminUser implements Node {\n  # The ID of an object\n  id: ID!\n  _id: String\n  name: String\n  password: String\n  email: String\n  active: Boolean\n  createdAt: String\n  updatedAt: String\n}\n\ninput AdminUserAddInput {\n  name: String!\n  password: String\n  email: String\n  active: Boolean\n  clientMutationId: String\n}\n\ntype AdminUserAddPayload {\n  adminUserEdge: AdminUserEdge\n  error: String\n  clientMutationId: String\n}\n\n# A connection to a list of items.\ntype AdminUserConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [AdminUserEdge]\n  count: Int\n}\n\ninput AdminUserDeleteInput {\n  id: ID!\n  clientMutationId: String\n}\n\ntype AdminUserDeletePayload {\n  deletedID: String\n  error: String\n  clientMutationId: String\n}\n\n# An edge in a connection.\ntype AdminUserEdge {\n  # The item at the end of the edge\n  node: AdminUser\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\ninput AdminUserEditInput {\n  id: ID!\n  name: String!\n  password: String\n  email: String\n  active: Boolean\n  clientMutationId: String\n}\n\ntype AdminUserEditPayload {\n  adminUser: AdminUser\n  error: String\n  clientMutationId: String\n}\n\ninput AdminUserLoginInput {\n  email: String!\n  password: String!\n  clientMutationId: String\n}\n\ntype AdminUserLoginPayload {\n  me: AdminUser\n  token: String\n  error: String\n  clientMutationId: String\n}\n\n# Represents Alert\ntype Alert implements Node {\n  # The ID of an object\n  id: ID!\n\n  # priority of the alert, has green, yellow our red\n  priority: String\n\n  # visualization of the alert, has accept, pending our reject\n  avaible: String\n\n  # address approximate of the alert\n  address: String\n\n  # lat approximate of the alert\n  lat: Float\n\n  # lng approximate of the alert\n  lng: Float\n\n  # Approximate alert CEP \n  cep: String\n\n  # Type of the alert, has alagamento, deslize, colisão, etc...\n  type: String\n  createdAt: String\n  updatedAt: String\n}\n\ninput AlertAddInput {\n  priority: String!\n  avaible: String\n  lat: Float\n  lng: Float\n  type: String\n  clientMutationId: String\n}\n\ntype AlertAddPayload {\n  alertEdge: AlertEdge\n  error: String\n  clientMutationId: String\n}\n\n# A connection to a list of items.\ntype AlertConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [AlertEdge]\n  count: Int\n}\n\ninput AlertDeleteInput {\n  id: ID!\n  clientMutationId: String\n}\n\ntype AlertDeletePayload {\n  deletedID: String\n  error: String\n  clientMutationId: String\n}\n\n# An edge in a connection.\ntype AlertEdge {\n  # The item at the end of the edge\n  node: Alert\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\ninput AlertEditInput {\n  id: ID!\n  priority: String!\n  avaible: String\n  address: String\n  lat: String\n  lng: String\n  cep: String\n  type: String\n  clientMutationId: String\n}\n\ntype AlertEditPayload {\n  alert: Alert\n  error: String\n  clientMutationId: String\n}\n\ninput ChangePasswordInput {\n  oldPassword: String!\n\n  # user new password\n  password: String!\n  clientMutationId: String\n}\n\ntype ChangePasswordPayload {\n  error: String\n  me: User\n  clientMutationId: String\n}\n\ntype City {\n  id: ID\n  name: String\n  country: String\n  population: Int\n  coord: Coordinates\n}\n\ntype Clouds {\n  all: Int\n}\n\ntype Coordinates {\n  lon: Float\n  lat: Float\n}\n\ntype Feature {\n  id: String\n  type: String\n  geometry: Geometry\n  properties: Properties\n}\n\ntype Geometry {\n  type: String\n  coordinates: [Float]\n}\n\ntype List {\n  dt: Int\n  main: Main\n  weather: [WeatherList]\n  clouds: Clouds\n  rain: Rain\n  wind: Wind\n  sys: Sys\n  dt_txt: String\n}\n\ninput LoginEmailInput {\n  email: String!\n  password: String!\n  clientMutationId: String\n}\n\ntype LoginEmailPayload {\n  token: String\n  error: String\n  clientMutationId: String\n}\n\ntype Main {\n  temp: Float\n  temp_min: Float\n  temp_max: Float\n  temp_kf: Float\n  temp_f: Float\n  temp_c: Float\n  pressure: Float\n  sea_level: Float\n  grnd_level: Float\n  humidity: Int\n}\n\ntype Mutation {\n  LoginEmail(input: LoginEmailInput!): LoginEmailPayload\n  RegisterEmail(input: RegisterEmailInput!): RegisterEmailPayload\n  ChangePassword(input: ChangePasswordInput!): ChangePasswordPayload\n  AdminUserLogin(input: AdminUserLoginInput!): AdminUserLoginPayload\n  AdminUserAdd(input: AdminUserAddInput!): AdminUserAddPayload\n  AdminUserEdit(input: AdminUserEditInput!): AdminUserEditPayload\n  AdminUserDelete(input: AdminUserDeleteInput!): AdminUserDeletePayload\n  AlertAdd(input: AlertAddInput!): AlertAddPayload\n  AlertEdit(input: AlertEditInput!): AlertEditPayload\n  AlertDelete(input: AlertDeleteInput!): AlertDeletePayload\n}\n\n# An object with an ID\ninterface Node {\n  # The id of the object.\n  id: ID!\n}\n\n# Information about pagination in a connection.\ntype PageInfo {\n  # When paginating forwards, are there more items?\n  hasNextPage: Boolean!\n\n  # When paginating backwards, are there more items?\n  hasPreviousPage: Boolean!\n\n  # When paginating backwards, the cursor to continue.\n  startCursor: String\n\n  # When paginating forwards, the cursor to continue.\n  endCursor: String\n}\n\ntype Properties {\n  codigo: String\n  nome: String\n  descricao: String\n  source: String\n  endereco: String\n  bacia: String\n  numero: Float\n}\n\n# The root of all... queries\ntype Query {\n  # Fetches an object given its ID\n  node(\n    # The ID of an object\n    id: ID!\n  ): Node\n  me: User\n  user(id: ID!): User\n  users(after: String, first: Int, before: String, last: Int, search: String): UserConnection\n  adminUser(id: ID!): AdminUser\n  adminUsers(after: String, first: Int, before: String, last: Int, search: String): AdminUserConnection\n  alert(id: ID!): Alert\n  alerts(after: String, first: Int, before: String, last: Int, search: String): AlertConnection\n  station(id: String): Feature\n  stations(after: String, first: Int, before: String, last: Int): [Feature]\n  last_leituras(after: String, first: Int, before: String, last: Int): [Reader]\n  getWeather(city: String!): Weather\n}\n\ntype Rain {\n  h: Float\n}\n\ntype Reader {\n  # Data da aquisição do dado feita pela estação. Data/Hora UTC.\n  leitura: String\n\n  # Código da estação ( PK)\n  estacao: Feature\n\n  # Precipitação acumulada em 05 minutos\n  m05: Float\n\n  # Precipitação acumulada em 10 minutos\n  m10: Float\n\n  # Precipitação acumulada em 15 minutos\n  m15: Float\n\n  # Precipitação acumulada em 30 minutos\n  m30: Float\n\n  # Precipitação acumulada em 01 hora\n  h01: Float\n\n  # Precipitação acumulada em 06 horas\n  h06: Float\n\n  # Precipitação acumulada em 12 horas\n  h12: Float\n\n  # Precipitação acumulada em 24 horas\n  h24: Float\n\n  # Precipitação acumulada em 36 horas\n  h36: Float\n\n  # Precipitação acumulada em 48 horas\n  h48: Float\n\n  # Precipitação acumulada em 72 horas\n  h72: Float\n\n  # Precipitação acumulada em 96 horas\n  h96: Float\n\n  # Precipitação acumulada em 168 horas\n  h168: Float\n\n  # Precipitação acumulada no mês\n  mes: Float\n\n  #\n  #         Quando não houver precipitação: nullo,  \n  #         Se a estação registrar precipitação entre 0.2 mm e 5.0 mm dentro do período de 1 hora.: 'ch-fraca' \n  #         Se a estação registrar precipitação entre 5.1 mm e 25.0 mm dentro do período de 1 hora.: 'ch-moderada'\n  #         Se a estação registrar precipitação entre 25.1 mm e 50.0 mm dentro do período de 1 hora.: 'ch-forte'\n  #         Se a estação registrar precipitação acima de 50 mm dentro do período de 1 hora.: 'ch-muito-forte'\n  #       \n  css_chuva: String\n\n  # False: Dado Atrasado, True: Dado Atual\n  is_delay: Boolean\n}\n\ninput RegisterEmailInput {\n  name: String!\n  email: String!\n  password: String!\n  clientMutationId: String\n}\n\ntype RegisterEmailPayload {\n  token: String\n  error: String\n  clientMutationId: String\n}\n\ntype Sys {\n  pod: String\n}\n\n# User data\ntype User implements Node {\n  # The ID of an object\n  id: ID!\n  _id: String\n  name: String\n  email: String\n  active: Boolean\n}\n\n# A connection to a list of items.\ntype UserConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [UserEdge]\n  count: Int\n}\n\n# An edge in a connection.\ntype UserEdge {\n  # The item at the end of the edge\n  node: User\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\ntype Weather {\n  cod: String\n  message: Float\n  cnt: Int\n  list: [List]\n  city: City\n  fahrenheit_avg: Float\n  celcius_avg: Float\n  kelvin_avg: Float\n  fahrenheit_max_avg: Float\n  celcius_max_avg: Float\n  kelvin_max_avg: Float\n  pressure_avg: Float\n  humidity_avg: Float\n  sea_level_avg: Float\n  pressure: [Float]\n  humidity: [Float]\n  temp_farenheit: [Float]\n  temp_celcius: [Float]\n  temp_kelvin: [Float]\n  sea_level: [Float]\n}\n\ntype WeatherList {\n  id: ID\n  main: String\n  description: String\n  icon: String\n}\n\ntype Wind {\n  speed: Float\n  deg: Float\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 36,
      "containsCycle": false,
      "polynomialLevel": 2,
      "numDefinitions": 47
    }
  ],
  "metrics": {
    "created_at": "2017-11-23T11:18:46Z",
    "updated_at": "2018-01-05T13:29:46Z",
    "pushed_at": "2018-01-07T01:46:13Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 1,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 1
  }
}