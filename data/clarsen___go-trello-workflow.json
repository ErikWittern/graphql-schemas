{
  "repo_name": "go-trello-workflow",
  "repo_full_name": "clarsen/go-trello-workflow",
  "repo_owner": "clarsen",
  "repo_description": "rewrite of trello-workflow in golang",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "server/go/handle_graphql/schema.graphql",
      "sha": "a4536d23d044d097e75a7c0464e021fb1f7e9f37",
      "url": "https://api.github.com/repositories/118724072/contents/server/go/handle_graphql/schema.graphql?ref=ac12fee88f41d7630643c1e8d702d4eb7b5c2941",
      "git_url": "https://api.github.com/repositories/118724072/git/blobs/a4536d23d044d097e75a7c0464e021fb1f7e9f37",
      "html_url": "https://github.com/clarsen/go-trello-workflow/blob/ac12fee88f41d7630643c1e8d702d4eb7b5c2941/server/go/handle_graphql/schema.graphql",
      "content": "scalar Timestamp\n\ntype BoardList {\n  board: String!\n  list: String!\n}\n\ntype Task {\n  id: String!\n  title: String!\n  createdDate: Timestamp\n  url: String\n  due: Timestamp\n  list: BoardList\n  period: String\n}\n\ninput BoardListInput {\n  board: String!\n  list: String!\n}\n\ntype WeeklyGoal {\n  idCard: String!\n  idCheckitem: String!\n  title: String!\n  tasks: [Task]\n  year: Int\n  month: Int\n  week: Int\n  done: Boolean\n  status: String\n}\n\ntype MonthlyGoal {\n  idCard: ID\n  title: String!\n  weeklyGoals: [WeeklyGoal!]\n}\n\ntype Timer {\n  id: String!\n  title: String!\n}\n\ntype Query {\n  tasks(dueBefore: Int, inBoardList: BoardListInput): [Task!]\n  weeklyVisualization(year: Int, week: Int): String\n  monthlyVisualization(year: Int, month: Int): String\n  monthlyGoals: [MonthlyGoal!]\n  activeTimer: Timer\n}\n\ntype GenerateResult {\n  message: String\n  ok: Boolean!\n}\n\ntype FinishResult {\n  message: String\n  ok: Boolean!\n}\n\ntype Mutation {\n  prepareWeeklyReview(year: Int, week: Int): GenerateResult!\n  finishWeeklyReview(year: Int, week: Int): FinishResult!\n  setDueDate(taskID: String!, due: Timestamp!): Task!\n  setDone(taskID: String!, done: Boolean!, status: String, nextDue: Timestamp): Task!\n  moveTaskToList(taskID: String!, list: BoardListInput!): Task!\n  startTimer(taskID: String!, checkitemID: String): Timer!\n  stopTimer(timerID: String!): Boolean\n\n  setGoalDone(taskID: String!, checkitemID: String!, done: Boolean!, status: String): [MonthlyGoal!]\n  addTask(title: String!, board: String, list: String): Task!\n  addWeeklyGoal(taskID: ID!, title: String!, week: Int!): [MonthlyGoal!]\n  addMonthlyGoal(title: String!): [MonthlyGoal!]\n\n  prepareMonthlyReview(year: Int, month: Int): GenerateResult!\n  finishMonthlyReview(year: Int, month: Int): FinishResult!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 9,
      "containsCycle": false,
      "polynomialLevel": 3,
      "numDefinitions": 11
    }
  ],
  "metrics": {
    "created_at": "2018-01-24T06:41:50Z",
    "updated_at": "2019-06-01T03:17:47Z",
    "pushed_at": "2019-06-01T03:17:46Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}