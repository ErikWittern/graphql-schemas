{
  "repo_name": "UniversalRelayBoilerplate",
  "repo_full_name": "clarketm/universalrelayboilerplate",
  "repo_owner": "clarketm",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "deployment/units/urb-base-server/graphql/schema.graphql",
      "sha": "c8049ce91d7632adf6039071e7819b309c261df4",
      "url": "https://api.github.com/repositories/104952745/contents/deployment/units/urb-base-server/graphql/schema.graphql?ref=6a5a1f69865ab789057c46ab8a89dbe8ed7940c7",
      "git_url": "https://api.github.com/repositories/104952745/git/blobs/c8049ce91d7632adf6039071e7819b309c261df4",
      "html_url": "https://github.com/clarketm/UniversalRelayBoilerplate/blob/6a5a1f69865ab789057c46ab8a89dbe8ed7940c7/deployment/units/urb-base-server/graphql/schema.graphql",
      "content": "# A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the\n# `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO\n# 8601 standard for representation of dates and times using the Gregorian calendar.\nscalar DateTime\n\ntype Ensayo implements Node {\n  # The ID of an object\n  id: ID!\n  Ensayo_Title: String\n  Ensayo_Description: String\n  Ensayo_Content: String\n}\n\ninput EnsayoAddInput {\n  Ensayo_Title: String!\n  Ensayo_Description: String!\n  Ensayo_Content: String!\n  clientMutationId: String\n}\n\ntype EnsayoAddPayload {\n  EnsayosEdge: EnsayosEdge\n  Viewer: Viewer\n  clientMutationId: String\n}\n\ninput EnsayoDeleteInput {\n  id: ID!\n  clientMutationId: String\n}\n\ntype EnsayoDeletePayload {\n  deletedId: ID\n  Viewer: Viewer\n  clientMutationId: String\n}\n\n# A connection to a list of items.\ntype EnsayosConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [EnsayosEdge]\n}\n\n# An edge in a connection.\ntype EnsayosEdge {\n  # The item at the end of the edge\n  node: Ensayo\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\ninput EnsayoUpdateInput {\n  id: ID!\n  Ensayo_Title: String!\n  Ensayo_Description: String!\n  Ensayo_Content: String!\n  clientMutationId: String\n}\n\ntype EnsayoUpdatePayload {\n  Ensayo: Ensayo\n  clientMutationId: String\n}\n\ntype Inscriptio implements Node {\n  # The ID of an object\n  id: ID!\n  Inscriptio_LocationLat: String\n  Inscriptio_LocationLon: String\n  Inscriptio_Notes: String\n}\n\ninput InscriptioAddInput {\n  Inscriptio_LocationLat: String!\n  Inscriptio_LocationLon: String!\n  Inscriptio_Notes: String!\n  clientMutationId: String\n}\n\ntype InscriptioAddPayload {\n  InscriptiosEdge: InscriptiosEdge\n  Viewer: Viewer\n  clientMutationId: String\n}\n\ninput InscriptioDeleteInput {\n  id: ID!\n  clientMutationId: String\n}\n\ntype InscriptioDeletePayload {\n  deletedId: ID\n  Viewer: Viewer\n  clientMutationId: String\n}\n\n# A connection to a list of items.\ntype InscriptiosConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [InscriptiosEdge]\n}\n\n# An edge in a connection.\ntype InscriptiosEdge {\n  # The item at the end of the edge\n  node: Inscriptio\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\ninput InscriptioUpdateInput {\n  id: ID!\n  Inscriptio_LocationLat: String!\n  Inscriptio_LocationLon: String!\n  Inscriptio_Notes: String!\n  clientMutationId: String\n}\n\ntype InscriptioUpdatePayload {\n  Inscriptio: Inscriptio\n  clientMutationId: String\n}\n\ntype Mutation {\n  EnsayoAdd(input: EnsayoAddInput!): EnsayoAddPayload\n  EnsayoDelete(input: EnsayoDeleteInput!): EnsayoDeletePayload\n  EnsayoUpdate(input: EnsayoUpdateInput!): EnsayoUpdatePayload\n  InscriptioAdd(input: InscriptioAddInput!): InscriptioAddPayload\n  InscriptioDelete(input: InscriptioDeleteInput!): InscriptioDeletePayload\n  InscriptioUpdate(input: InscriptioUpdateInput!): InscriptioUpdatePayload\n  ToDoAdd(input: ToDoAddInput!): ToDoAddPayload\n  ToDoDelete(input: ToDoDeleteInput!): ToDoDeletePayload\n  ToDoListUpdateMarkAll(input: ToDoListUpdateMarkAllInput!): ToDoListUpdateMarkAllPayload\n  ToDoUpdateRename(input: ToDoUpdateRenameInput!): ToDoUpdateRenamePayload\n  ToDoUpdateStatus(input: ToDoUpdateStatusInput!): ToDoUpdateStatusPayload\n  TranslaticiarumAdd(input: TranslaticiarumAddInput!): TranslaticiarumAddPayload\n  TranslaticiarumDelete(input: TranslaticiarumDeleteInput!): TranslaticiarumDeletePayload\n  TranslaticiarumUpdate(input: TranslaticiarumUpdateInput!): TranslaticiarumUpdatePayload\n}\n\n# An object with a globally unique id.\ninterface Node {\n  # The globally unique id of the object.\n  id: ID!\n}\n\n# Information about pagination in a connection.\ntype PageInfo {\n  # When paginating forwards, are there more items?\n  hasNextPage: Boolean!\n\n  # When paginating backwards, are there more items?\n  hasPreviousPage: Boolean!\n\n  # When paginating backwards, the cursor to continue.\n  startCursor: String\n\n  # When paginating forwards, the cursor to continue.\n  endCursor: String\n}\n\ntype Query {\n  node(id: ID!): Node\n  Viewer: Viewer\n}\n\ntype ToDo implements Node {\n  # The ID of an object\n  id: ID!\n  ToDo_Text: String\n  ToDo_Complete: Boolean\n}\n\ninput ToDoAddInput {\n  ToDo_Text: String!\n  clientMutationId: String\n}\n\ntype ToDoAddPayload {\n  ToDosEdge: ToDosEdge\n  Viewer: Viewer\n  clientMutationId: String\n}\n\ninput ToDoDeleteInput {\n  id: ID!\n  clientMutationId: String\n}\n\ntype ToDoDeletePayload {\n  deletedId: ID\n  Viewer: Viewer\n  clientMutationId: String\n}\n\ninput ToDoListUpdateMarkAllInput {\n  ToDo_Complete: Boolean!\n  clientMutationId: String\n}\n\ntype ToDoListUpdateMarkAllPayload {\n  changedToDos: [ToDo]\n  Viewer: Viewer\n  clientMutationId: String\n}\n\n# A connection to a list of items.\ntype ToDosConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [ToDosEdge]\n}\n\n# An edge in a connection.\ntype ToDosEdge {\n  # The item at the end of the edge\n  node: ToDo\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\ninput ToDoUpdateRenameInput {\n  id: ID!\n  ToDo_Text: String!\n  clientMutationId: String\n}\n\ntype ToDoUpdateRenamePayload {\n  ToDo: ToDo\n  clientMutationId: String\n}\n\ninput ToDoUpdateStatusInput {\n  id: ID!\n  ToDo_Complete: Boolean!\n  clientMutationId: String\n}\n\ntype ToDoUpdateStatusPayload {\n  ToDo: ToDo\n  Viewer: Viewer\n  clientMutationId: String\n}\n\ntype Translaticiarum implements Node {\n  # The ID of an object\n  id: ID!\n  Translaticiarum_Start: DateTime\n  Translaticiarum_Stop: DateTime\n  Translaticiarum_Description: String\n}\n\ninput TranslaticiarumAddInput {\n  Translaticiarum_Start: String!\n  Translaticiarum_Stop: String!\n  Translaticiarum_Description: String!\n  clientMutationId: String\n}\n\ntype TranslaticiarumAddPayload {\n  TranslaticiarumsEdge: TranslaticiarumsEdge\n  Viewer: Viewer\n  clientMutationId: String\n}\n\ninput TranslaticiarumDeleteInput {\n  id: ID!\n  clientMutationId: String\n}\n\ntype TranslaticiarumDeletePayload {\n  deletedId: ID\n  Viewer: Viewer\n  clientMutationId: String\n}\n\n# A connection to a list of items.\ntype TranslaticiarumsConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [TranslaticiarumsEdge]\n}\n\n# An edge in a connection.\ntype TranslaticiarumsEdge {\n  # The item at the end of the edge\n  node: Translaticiarum\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\ninput TranslaticiarumUpdateInput {\n  id: ID!\n  Translaticiarum_Start: String!\n  Translaticiarum_Stop: String!\n  Translaticiarum_Description: String!\n  clientMutationId: String\n}\n\ntype TranslaticiarumUpdatePayload {\n  Translaticiarum: Translaticiarum\n  clientMutationId: String\n}\n\ntype Viewer implements Node {\n  # The ID of an object\n  id: ID!\n  User_IsAnonymous: Boolean\n  UserToken2: String\n  User_DisplayName: String\n  User_Email: String\n  User_PhoneNumberMobile: String\n  Ensayos(after: String, first: Int, before: String, last: Int): EnsayosConnection\n  Ensayo(id: ID): Ensayo\n  Inscriptios(after: String, first: Int, before: String, last: Int): InscriptiosConnection\n  Inscriptio(id: ID): Inscriptio\n  ToDos(status: String = \"any\", after: String, first: Int, before: String, last: Int): ToDosConnection\n  ToDo_TotalCount: Int\n  ToDo_CompletedCount: Int\n  Translaticiarums(after: String, first: Int, before: String, last: Int): TranslaticiarumsConnection\n  Translaticiarum(id: ID): Translaticiarum\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 30,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 46
    },
    {
      "name": "schema.graphql",
      "path": "units/_configuration/urb-base-server/graphql/schema.graphql",
      "sha": "c8049ce91d7632adf6039071e7819b309c261df4",
      "url": "https://api.github.com/repositories/104952745/contents/units/_configuration/urb-base-server/graphql/schema.graphql?ref=6a5a1f69865ab789057c46ab8a89dbe8ed7940c7",
      "git_url": "https://api.github.com/repositories/104952745/git/blobs/c8049ce91d7632adf6039071e7819b309c261df4",
      "html_url": "https://github.com/clarketm/UniversalRelayBoilerplate/blob/6a5a1f69865ab789057c46ab8a89dbe8ed7940c7/units/_configuration/urb-base-server/graphql/schema.graphql",
      "content": "# A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the\n# `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO\n# 8601 standard for representation of dates and times using the Gregorian calendar.\nscalar DateTime\n\ntype Ensayo implements Node {\n  # The ID of an object\n  id: ID!\n  Ensayo_Title: String\n  Ensayo_Description: String\n  Ensayo_Content: String\n}\n\ninput EnsayoAddInput {\n  Ensayo_Title: String!\n  Ensayo_Description: String!\n  Ensayo_Content: String!\n  clientMutationId: String\n}\n\ntype EnsayoAddPayload {\n  EnsayosEdge: EnsayosEdge\n  Viewer: Viewer\n  clientMutationId: String\n}\n\ninput EnsayoDeleteInput {\n  id: ID!\n  clientMutationId: String\n}\n\ntype EnsayoDeletePayload {\n  deletedId: ID\n  Viewer: Viewer\n  clientMutationId: String\n}\n\n# A connection to a list of items.\ntype EnsayosConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [EnsayosEdge]\n}\n\n# An edge in a connection.\ntype EnsayosEdge {\n  # The item at the end of the edge\n  node: Ensayo\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\ninput EnsayoUpdateInput {\n  id: ID!\n  Ensayo_Title: String!\n  Ensayo_Description: String!\n  Ensayo_Content: String!\n  clientMutationId: String\n}\n\ntype EnsayoUpdatePayload {\n  Ensayo: Ensayo\n  clientMutationId: String\n}\n\ntype Inscriptio implements Node {\n  # The ID of an object\n  id: ID!\n  Inscriptio_LocationLat: String\n  Inscriptio_LocationLon: String\n  Inscriptio_Notes: String\n}\n\ninput InscriptioAddInput {\n  Inscriptio_LocationLat: String!\n  Inscriptio_LocationLon: String!\n  Inscriptio_Notes: String!\n  clientMutationId: String\n}\n\ntype InscriptioAddPayload {\n  InscriptiosEdge: InscriptiosEdge\n  Viewer: Viewer\n  clientMutationId: String\n}\n\ninput InscriptioDeleteInput {\n  id: ID!\n  clientMutationId: String\n}\n\ntype InscriptioDeletePayload {\n  deletedId: ID\n  Viewer: Viewer\n  clientMutationId: String\n}\n\n# A connection to a list of items.\ntype InscriptiosConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [InscriptiosEdge]\n}\n\n# An edge in a connection.\ntype InscriptiosEdge {\n  # The item at the end of the edge\n  node: Inscriptio\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\ninput InscriptioUpdateInput {\n  id: ID!\n  Inscriptio_LocationLat: String!\n  Inscriptio_LocationLon: String!\n  Inscriptio_Notes: String!\n  clientMutationId: String\n}\n\ntype InscriptioUpdatePayload {\n  Inscriptio: Inscriptio\n  clientMutationId: String\n}\n\ntype Mutation {\n  EnsayoAdd(input: EnsayoAddInput!): EnsayoAddPayload\n  EnsayoDelete(input: EnsayoDeleteInput!): EnsayoDeletePayload\n  EnsayoUpdate(input: EnsayoUpdateInput!): EnsayoUpdatePayload\n  InscriptioAdd(input: InscriptioAddInput!): InscriptioAddPayload\n  InscriptioDelete(input: InscriptioDeleteInput!): InscriptioDeletePayload\n  InscriptioUpdate(input: InscriptioUpdateInput!): InscriptioUpdatePayload\n  ToDoAdd(input: ToDoAddInput!): ToDoAddPayload\n  ToDoDelete(input: ToDoDeleteInput!): ToDoDeletePayload\n  ToDoListUpdateMarkAll(input: ToDoListUpdateMarkAllInput!): ToDoListUpdateMarkAllPayload\n  ToDoUpdateRename(input: ToDoUpdateRenameInput!): ToDoUpdateRenamePayload\n  ToDoUpdateStatus(input: ToDoUpdateStatusInput!): ToDoUpdateStatusPayload\n  TranslaticiarumAdd(input: TranslaticiarumAddInput!): TranslaticiarumAddPayload\n  TranslaticiarumDelete(input: TranslaticiarumDeleteInput!): TranslaticiarumDeletePayload\n  TranslaticiarumUpdate(input: TranslaticiarumUpdateInput!): TranslaticiarumUpdatePayload\n}\n\n# An object with a globally unique id.\ninterface Node {\n  # The globally unique id of the object.\n  id: ID!\n}\n\n# Information about pagination in a connection.\ntype PageInfo {\n  # When paginating forwards, are there more items?\n  hasNextPage: Boolean!\n\n  # When paginating backwards, are there more items?\n  hasPreviousPage: Boolean!\n\n  # When paginating backwards, the cursor to continue.\n  startCursor: String\n\n  # When paginating forwards, the cursor to continue.\n  endCursor: String\n}\n\ntype Query {\n  node(id: ID!): Node\n  Viewer: Viewer\n}\n\ntype ToDo implements Node {\n  # The ID of an object\n  id: ID!\n  ToDo_Text: String\n  ToDo_Complete: Boolean\n}\n\ninput ToDoAddInput {\n  ToDo_Text: String!\n  clientMutationId: String\n}\n\ntype ToDoAddPayload {\n  ToDosEdge: ToDosEdge\n  Viewer: Viewer\n  clientMutationId: String\n}\n\ninput ToDoDeleteInput {\n  id: ID!\n  clientMutationId: String\n}\n\ntype ToDoDeletePayload {\n  deletedId: ID\n  Viewer: Viewer\n  clientMutationId: String\n}\n\ninput ToDoListUpdateMarkAllInput {\n  ToDo_Complete: Boolean!\n  clientMutationId: String\n}\n\ntype ToDoListUpdateMarkAllPayload {\n  changedToDos: [ToDo]\n  Viewer: Viewer\n  clientMutationId: String\n}\n\n# A connection to a list of items.\ntype ToDosConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [ToDosEdge]\n}\n\n# An edge in a connection.\ntype ToDosEdge {\n  # The item at the end of the edge\n  node: ToDo\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\ninput ToDoUpdateRenameInput {\n  id: ID!\n  ToDo_Text: String!\n  clientMutationId: String\n}\n\ntype ToDoUpdateRenamePayload {\n  ToDo: ToDo\n  clientMutationId: String\n}\n\ninput ToDoUpdateStatusInput {\n  id: ID!\n  ToDo_Complete: Boolean!\n  clientMutationId: String\n}\n\ntype ToDoUpdateStatusPayload {\n  ToDo: ToDo\n  Viewer: Viewer\n  clientMutationId: String\n}\n\ntype Translaticiarum implements Node {\n  # The ID of an object\n  id: ID!\n  Translaticiarum_Start: DateTime\n  Translaticiarum_Stop: DateTime\n  Translaticiarum_Description: String\n}\n\ninput TranslaticiarumAddInput {\n  Translaticiarum_Start: String!\n  Translaticiarum_Stop: String!\n  Translaticiarum_Description: String!\n  clientMutationId: String\n}\n\ntype TranslaticiarumAddPayload {\n  TranslaticiarumsEdge: TranslaticiarumsEdge\n  Viewer: Viewer\n  clientMutationId: String\n}\n\ninput TranslaticiarumDeleteInput {\n  id: ID!\n  clientMutationId: String\n}\n\ntype TranslaticiarumDeletePayload {\n  deletedId: ID\n  Viewer: Viewer\n  clientMutationId: String\n}\n\n# A connection to a list of items.\ntype TranslaticiarumsConnection {\n  # Information to aid in pagination.\n  pageInfo: PageInfo!\n\n  # A list of edges.\n  edges: [TranslaticiarumsEdge]\n}\n\n# An edge in a connection.\ntype TranslaticiarumsEdge {\n  # The item at the end of the edge\n  node: Translaticiarum\n\n  # A cursor for use in pagination\n  cursor: String!\n}\n\ninput TranslaticiarumUpdateInput {\n  id: ID!\n  Translaticiarum_Start: String!\n  Translaticiarum_Stop: String!\n  Translaticiarum_Description: String!\n  clientMutationId: String\n}\n\ntype TranslaticiarumUpdatePayload {\n  Translaticiarum: Translaticiarum\n  clientMutationId: String\n}\n\ntype Viewer implements Node {\n  # The ID of an object\n  id: ID!\n  User_IsAnonymous: Boolean\n  UserToken2: String\n  User_DisplayName: String\n  User_Email: String\n  User_PhoneNumberMobile: String\n  Ensayos(after: String, first: Int, before: String, last: Int): EnsayosConnection\n  Ensayo(id: ID): Ensayo\n  Inscriptios(after: String, first: Int, before: String, last: Int): InscriptiosConnection\n  Inscriptio(id: ID): Inscriptio\n  ToDos(status: String = \"any\", after: String, first: Int, before: String, last: Int): ToDosConnection\n  ToDo_TotalCount: Int\n  ToDo_CompletedCount: Int\n  Translaticiarums(after: String, first: Int, before: String, last: Int): TranslaticiarumsConnection\n  Translaticiarum(id: ID): Translaticiarum\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": true,
      "numDefinitions": 46
    }
  ],
  "metrics": {
    "created_at": "2017-09-27T00:40:22Z",
    "updated_at": "2018-12-13T07:15:03Z",
    "pushed_at": "2017-09-28T04:21:10Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 3
  }
}