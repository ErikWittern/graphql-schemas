{
  "repo_name": "graphql-server",
  "repo_full_name": "juliandeveloperfranco/graphql-server",
  "repo_owner": "juliandeveloperfranco",
  "repo_description": "Testing with graphql, mongodb, apollo server and more",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "serverapollo/data/schema.graphql",
      "sha": "525a7d821d020767bb42ae863297ce3cfd96527e",
      "url": "https://api.github.com/repositories/187410858/contents/serverapollo/data/schema.graphql?ref=3d32689da045df58e77c10eef73a5d780b4aa13f",
      "git_url": "https://api.github.com/repositories/187410858/git/blobs/525a7d821d020767bb42ae863297ce3cfd96527e",
      "html_url": "https://github.com/juliandeveloperfranco/graphql-server/blob/3d32689da045df58e77c10eef73a5d780b4aa13f/serverapollo/data/schema.graphql",
      "content": "type Client{\n    id:ID\n    name:String\n    lastname:String\n    company:String\n    age:Int\n    type:TypeClient\n    emails:[Email]\n}\n\ntype Product{\n    id:ID\n    name:String!\n    price:Int!\n    stock:Int!\n}\n\ntype Email{\n    email:String\n}\n\ntype Order{\n    id:ID\n    order:[OrderProduct]\n    total:Int\n    date:String\n    client:ID\n    state :TypeStateOrder\n}\n\ntype OrderProduct{\n    id:ID\n    quantity:Int\n}\n\nenum TypeClient {\n    BASICO\n    PREMIUM\n}\n\nenum TypeStateOrder {\n    PENDIENTE\n    COMPLETADO\n    CANCELADO\n}\n\n\ninput emailInput{\n    email:String\n}\n\n\ninput inputClient{\n    id:ID,\n    name:String!\n    lastname:String!\n    company:String!\n    age:Int!\n    type:TypeClient!\n    emails:[emailInput]\n}\n\ninput inputOrder{\n    id:ID\n    order:[inputOrderProduct]\n    total:Int\n    date:String\n    client:ID\n    state:TypeStateOrder\n}\n\ninput inputOrderProduct{\n    id:ID\n    quantity:Int\n}\n\ninput inputProduct{\n    id:ID\n    name:String!\n    price:Int!\n    stock:Int!\n}\n\ntype Query{\n    # Clients\n    getClients(limit:Int,offset:Int):[Client]\n    getClient(id:ID):Client\n    totalClients: String\n    # Products\n    getProducts(limit:Int,offset:Int,stock:Boolean):[Product]\n    getProduct(id:ID):Product\n    totalProducts:String\n    getOrders(client:String):[Order]\n}\n\ntype Mutation{\n    # resolver name ,data input and return\n    createClient(input: inputClient):Client\n    # uupdate client\n    updateClient (input:inputClient):Client\n    # delete client\n    deleteClient (id:ID!):String\n    #create product\n    createProduct(input:inputProduct):Product\n    #update product\n    updateProduct (input:inputProduct):Product\n    # delete client\n    deleteProduct (id:ID!):String\n    # create order\n    createOrder (input:inputOrder):Order\n    #update order\n    updateOrder (input:inputOrder):String\n\n\n\n}",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 7,
      "containsCycle": false,
      "polynomialLevel": 2,
      "numDefinitions": 14
    }
  ],
  "metrics": {
    "created_at": "2019-05-18T22:27:40Z",
    "updated_at": "2019-05-19T04:49:54Z",
    "pushed_at": "2019-05-18T23:26:46Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "apache-2.0",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 1
  }
}