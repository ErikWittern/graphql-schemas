{
  "repo_name": "AmazingNode",
  "repo_full_name": "abeastofprey/amazingnode",
  "repo_owner": "ABeastofPrey",
  "repo_description": "Node, koa2, gulp, nodemon, graphql, mongodb",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "src/app/routes/variant/schema.graphql",
      "sha": "333cf1601861c051256264bd85c838eb748ef396",
      "url": "https://api.github.com/repositories/133881600/contents/src/app/routes/variant/schema.graphql?ref=6af2bd8aa1b359d40bdb013f8e37621f96a1e08c",
      "git_url": "https://api.github.com/repositories/133881600/git/blobs/333cf1601861c051256264bd85c838eb748ef396",
      "html_url": "https://github.com/ABeastofPrey/AmazingNode/blob/6af2bd8aa1b359d40bdb013f8e37621f96a1e08c/src/app/routes/variant/schema.graphql",
      "content": "type Variant {\n  id: ID!\n  name: String!\n  shortDescription: String\n}\n \ntype Query {\n  # ### GET variants\n  #\n  # _Arguments_\n  # - **id**: Variant id (optional)\n  variants(id: Int): [Variant]\n}",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 2,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 2
    },
    {
      "name": "schema.graphql",
      "path": "src/app/routes/product/schema.graphql",
      "sha": "bd42f25877974d31ec354a9245744e272999b775",
      "url": "https://api.github.com/repositories/133881600/contents/src/app/routes/product/schema.graphql?ref=6af2bd8aa1b359d40bdb013f8e37621f96a1e08c",
      "git_url": "https://api.github.com/repositories/133881600/git/blobs/bd42f25877974d31ec354a9245744e272999b775",
      "html_url": "https://github.com/ABeastofPrey/AmazingNode/blob/6af2bd8aa1b359d40bdb013f8e37621f96a1e08c/src/app/routes/product/schema.graphql",
      "content": "union Product = Bicycle | Racket\n \ntype Bicycle {\n    id: ID!\n    brand: String!\n    wheels: Int!\n}\n \ntype Racket {\n    id: ID!\n    brand: String!\n    sportType: SportType!\n}\n \nenum SportType {\n    TENNIS\n    SQUASH\n}\n \ntype Query {\n  # ### GET products\n  #\n  # _Arguments_\n  # - **id**: Product id (optional)\n  products(id: Int): [Product]\n}",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 3,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 5
    },
    {
      "name": "schema.graphql",
      "path": "src/app/routes/user/schema.graphql",
      "sha": "202aec260297d9e2f939e3133fe47215710a889c",
      "url": "https://api.github.com/repositories/133881600/contents/src/app/routes/user/schema.graphql?ref=6af2bd8aa1b359d40bdb013f8e37621f96a1e08c",
      "git_url": "https://api.github.com/repositories/133881600/git/blobs/202aec260297d9e2f939e3133fe47215710a889c",
      "html_url": "https://github.com/ABeastofPrey/AmazingNode/blob/6af2bd8aa1b359d40bdb013f8e37621f96a1e08c/src/app/routes/user/schema.graphql",
      "content": "type User {\n  _id: ID!\n  email: String!\n  name: String\n  disabled: Boolean\n}\n\ninput UserInput {\n  name: String\n  password: String\n  email: String!\n  disabled: Boolean\n}\n\ntype Query {\n  # ### GET user\n  #\n  # _Arguments_\n  # - **id**: User id (required)\n  user(_id: ID!): User\n  users(roles: [String], disabled: Boolean): [User]\n}\n\ntype Mutation {\n  createUser(input: UserInput): User\n  updateUser(_id: ID!, input: UserInput): User\n  deleteUser(_id: ID!): User\n}",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 3,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 4
    }
  ],
  "metrics": {
    "created_at": "2018-05-18T00:16:29Z",
    "updated_at": "2018-05-20T08:19:58Z",
    "pushed_at": "2018-05-20T08:19:56Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}