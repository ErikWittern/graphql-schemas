{
  "repo_name": "mainframe-os",
  "repo_full_name": "mainframehq/mainframe-os",
  "repo_owner": "MainframeHQ",
  "repo_description": "Mainframe OS",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "packages/launcher/schema.graphql",
      "sha": "7b5808abd50fd640f92f399d7aa58f8778a15b57",
      "url": "https://api.github.com/repositories/129405021/contents/packages/launcher/schema.graphql?ref=fab7c7b5848c514de98078fc4d2c7267469d7031",
      "git_url": "https://api.github.com/repositories/129405021/git/blobs/7b5808abd50fd640f92f399d7aa58f8778a15b57",
      "html_url": "https://github.com/MainframeHQ/mainframe-os/blob/fab7c7b5848c514de98078fc4d2c7267469d7031/packages/launcher/schema.graphql",
      "content": "input AcceptContactRequestInput {\n  peerID: String!\n  userID: String!\n  clientMutationId: String\n}\n\ntype AcceptContactRequestPayload {\n  viewer: Viewer!\n  contact: Contact\n  clientMutationId: String\n}\n\ninput AddContactInput {\n  userID: String!\n  publicFeed: String!\n  aliasName: String\n  sendInvite: Boolean\n  clientMutationId: String\n}\n\ntype AddContactPayload {\n  contact: Contact\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ninput AddHDWalletAccountInput {\n  walletID: String!\n  index: Int!\n  userID: String\n  clientMutationId: String\n}\n\ntype AddHDWalletAccountPayload {\n  address: String!\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ninput AddLedgerWalletAccountsInput {\n  indexes: [Int]\n  name: String!\n  userID: String\n  clientMutationId: String\n}\n\ntype AddLedgerWalletAccountsPayload {\n  addresses: [String]\n  localID: String!\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ntype App implements Node {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  mfid: String!\n  localID: ID!\n  name: String!\n  manifest: AppManifestData!\n  update: AppUpdateData\n  installationState: InstallationState!\n  users: [AppUser!]!\n}\n\ntype AppAuthor {\n  id: String\n  name: String\n}\n\ninput AppCreateMutationInput {\n  name: String!\n  contentsPath: String!\n  version: String!\n  developerID: String!\n  permissionsRequirements: AppPermissionsRequirementsInput!\n  clientMutationId: String\n}\n\ntype AppCreateMutationPayload {\n  app: OwnApp!\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ninput AppCreateVersionMutationInput {\n  appID: String!\n  version: String!\n  clientMutationId: String\n}\n\ntype AppCreateVersionMutationPayload {\n  app: OwnApp!\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ninput AppInstallMutationInput {\n  userID: String!\n  manifest: AppManifestInput!\n  permissionsSettings: AppPermissionsSettingsInput!\n  clientMutationId: String\n}\n\ntype AppInstallMutationPayload {\n  app: App\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ntype AppManifestData {\n  name: String!\n  version: String!\n  permissions: AppPermissionsRequirements!\n  author: AppAuthor!\n}\n\ninput AppManifestInput {\n  id: String!\n  name: String!\n  version: String!\n  contentsHash: String!\n  updateHash: String!\n  permissions: AppPermissionsRequirementsInput!\n  author: ManifestAuthorInput!\n}\n\ntype AppPermissionDefinitions {\n  WEB_REQUEST: [String]\n  BLOCKCHAIN_SEND: Boolean\n  BLOCKCHAIN_SIGN: Boolean\n  COMMS_CONTACT: Boolean\n  CONTACTS_READ: Boolean\n}\n\ninput AppPermissionDefinitionsInput {\n  BLOCKCHAIN_SEND: Boolean\n  BLOCKCHAIN_SIGN: Boolean\n  COMMS_CONTACT: Boolean\n  CONTACTS_READ: Boolean\n  WEB_REQUEST: [String]\n}\n\ntype AppPermissions {\n  BLOCKCHAIN_SEND: Boolean\n  BLOCKCHAIN_SIGN: Boolean\n  CONTACTS_READ: Boolean\n  WEB_REQUEST: WebRequestGrants!\n}\n\ntype AppPermissionsRequirements {\n  optional: AppPermissionDefinitions!\n  required: AppPermissionDefinitions!\n}\n\ninput AppPermissionsRequirementsInput {\n  optional: AppPermissionDefinitionsInput!\n  required: AppPermissionDefinitionsInput!\n}\n\ntype AppPermissionsSettings {\n  permissionsChecked: Boolean!\n  grants: AppPermissions!\n}\n\ninput AppPermissionsSettingsInput {\n  permissionsChecked: Boolean!\n  grants: PermissionGrantsInput!\n}\n\ntype Apps {\n  installed: [App!]!\n  own: [OwnApp!]!\n  updatesCount: Int!\n}\n\ntype AppUpdateData {\n  manifest: AppManifestData!\n  permissionsChanged: Boolean!\n}\n\ninput AppUpdateMutationInput {\n  appID: String!\n  userID: String!\n  permissionsSettings: AppPermissionsSettingsInput\n  clientMutationId: String\n}\n\ntype AppUpdateMutationPayload {\n  app: App\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ntype AppUpdatePayload {\n  app: App!\n  viewer: Viewer!\n}\n\ntype AppUser {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  localID: ID!\n  identity: OwnUserIdentity!\n  settings: AppUserSettings!\n}\n\ntype AppUserSettings {\n  permissionsSettings: AppPermissionsSettings!\n}\n\ntype AppVersionData {\n  version: String!\n  versionHash: String\n  permissions: AppPermissionsRequirements!\n}\n\nenum ConnectionState {\n  CONNECTED\n  DECLINED\n  RECEIVED\n  SENDING_FEED\n  SENT_FEED\n  SENDING_BLOCKCHAIN\n  SENT_BLOCKCHAIN\n}\n\ntype Contact implements Node {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  localID: ID!\n  peerID: ID!\n  publicFeed: String!\n  pubKey: String!\n  invite: ContactInviteData\n  profile: GenericProfile!\n  connectionState: ConnectionState!\n}\n\ntype ContactChangedPayload {\n  contact: Contact!\n  viewer: Viewer!\n}\n\ntype ContactInviteData {\n  inviteTX: String\n  ethNetwork: String\n  stake: InviteStake!\n}\n\ntype Contacts {\n  inviteStake: Int\n  invitesCount(userID: String!): Int!\n  userContacts(userID: String!): [Contact!]!\n}\n\ninput CreateDeveloperIdentityInput {\n  profile: UserProfileInput!\n  clientMutationId: String\n}\n\ntype CreateDeveloperIdentityPayload {\n  user: OwnDeveloperIdentity\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ninput CreateHDWalletInput {\n  blockchain: SupportedWallets!\n  name: String!\n  userID: String\n  clientMutationId: String\n}\n\ntype CreateHDWalletPayload {\n  hdWallet: EthHDWallet\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ninput CreateUserIdentityInput {\n  profile: UserProfileInput!\n  private: Boolean\n  clientMutationId: String\n}\n\ntype CreateUserIdentityPayload {\n  user: OwnUserIdentity\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ninput DeleteContactInput {\n  contactID: String!\n  clientMutationId: String\n}\n\ntype DeleteContactPayload {\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ninput DeleteWalletInput {\n  walletID: String!\n  type: String!\n  clientMutationId: String\n}\n\ntype DeleteWalletPayload {\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ntype EthHDWallet implements Node {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  name: String\n  localID: ID!\n  mnemonic: String!\n  accounts: [WalletAccount]\n}\n\ntype EthLedgerWallet implements Node {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  name: String\n  localID: ID!\n  accounts: [WalletAccount]\n}\n\ntype EthWallets {\n  hd: [EthHDWallet!]!\n  ledger: [EthLedgerWallet!]!\n}\n\ntype GenericProfile {\n  name: String\n  avatar: String\n  ethAddress: String\n}\n\ntype Identities {\n  ownUsers: [OwnUserIdentity!]!\n  ownDevelopers: [OwnDeveloperIdentity!]!\n}\n\ninput ImportHDWalletInput {\n  blockchain: SupportedWallets!\n  mnemonic: String!\n  name: String!\n  userID: String\n  clientMutationId: String\n}\n\ntype ImportHDWalletPayload {\n  hdWallet: EthHDWallet\n  viewer: Viewer!\n  clientMutationId: String\n}\n\nenum InstallationState {\n  READY\n  DOWNLOADING\n  ERROR\n}\n\ntype InviteStake {\n  amount: String\n  state: StakeState!\n  reclaimedTX: String\n}\n\ninput ManifestAuthorInput {\n  id: String!\n  name: String!\n}\n\ntype Mutation {\n  createApp(input: AppCreateMutationInput!): AppCreateMutationPayload\n  createAppVersion(input: AppCreateVersionMutationInput!): AppCreateVersionMutationPayload\n  installApp(input: AppInstallMutationInput!): AppInstallMutationPayload\n  updateApp(input: AppUpdateMutationInput!): AppUpdateMutationPayload\n  setAppPermissionsRequirements(input: SetAppPermissionsRequirementsInput!): SetAppPermissionsRequirementsPayload\n  publishAppVersion(input: PublishAppVersionInput!): PublishAppVersionPayload\n  updateAppDetails(input: UpdateAppDetailsInput!): UpdateAppDetailsPayload\n  acceptContactRequest(input: AcceptContactRequestInput!): AcceptContactRequestPayload\n  addContact(input: AddContactInput!): AddContactPayload\n  createUserIdentity(input: CreateUserIdentityInput!): CreateUserIdentityPayload\n  createDeveloperIdentity(input: CreateDeveloperIdentityInput!): CreateDeveloperIdentityPayload\n  deleteContact(input: DeleteContactInput!): DeleteContactPayload\n  setDefaultWallet(input: SetDefaultWalletInput!): SetDefaultWalletPayload\n  setUserProfileVisibility(input: SetUserProfileVisibilityInput!): SetUserProfileVisibilityPayload\n  updateProfile(input: UpdateProfileInput!): UpdateProfilePayload\n  addHDWalletAccount(input: AddHDWalletAccountInput!): AddHDWalletAccountPayload\n  addLedgerWalletAccounts(input: AddLedgerWalletAccountsInput!): AddLedgerWalletAccountsPayload\n  createHDWallet(input: CreateHDWalletInput!): CreateHDWalletPayload\n  deleteWallet(input: DeleteWalletInput!): DeleteWalletPayload\n  importHDWallet(input: ImportHDWalletInput!): ImportHDWalletPayload\n  setEthNetwork(input: SetEthNetworkInput!): SetEthNetworkPayload\n}\n\ntype NamedProfile {\n  name: String!\n  avatar: String\n  ethAddress: String\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\ntype OwnApp implements Node {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  localID: ID!\n  mfid: String!\n  name: String!\n  contentsPath: String!\n  updateFeedHash: String!\n  currentVersion: String!\n  currentVersionData: AppVersionData!\n  publishedVersion: String\n  versions: [AppVersionData!]!\n  developer: AppAuthor!\n  users: [AppUser!]!\n}\n\ntype OwnDeveloperIdentity implements Node {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  localID: ID!\n  mfid: ID!\n  pubKey: String!\n  profile: NamedProfile!\n}\n\ntype OwnUserIdentity implements Node {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n  localID: ID!\n  feedHash: String\n  mfid: ID!\n  apps: [App!]!\n  defaultEthAddress: String\n  wallets: EthWallets!\n  profile: NamedProfile!\n  pubKey: String!\n  privateProfile: Boolean\n}\n\ntype Peer {\n  publicKey: String!\n  publicFeed: String!\n  profile: GenericProfile!\n}\n\ntype Peers {\n  peerLookupByFeed(feedHash: String!): Peer\n}\n\ninput PermissionGrantsInput {\n  BLOCKCHAIN_SEND: Boolean\n  BLOCKCHAIN_SIGN: Boolean\n  COMMS_CONTACT: Boolean\n  CONTACTS_READ: Boolean\n  WEB_REQUEST: WebRequestGrantInput!\n}\n\ninput PublishAppVersionInput {\n  appID: String!\n  version: String!\n  clientMutationId: String\n}\n\ntype PublishAppVersionPayload {\n  versionHash: String!\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ntype Query {\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n  viewer: Viewer!\n  peers: Peers!\n}\n\ninput SetAppPermissionsRequirementsInput {\n  appID: String!\n  permissionsRequirements: AppPermissionsRequirementsInput!\n  clientMutationId: String\n}\n\ntype SetAppPermissionsRequirementsPayload {\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ninput SetDefaultWalletInput {\n  userID: String!\n  address: String!\n  clientMutationId: String\n}\n\ntype SetDefaultWalletPayload {\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ninput SetEthNetworkInput {\n  url: String!\n  clientMutationId: String\n}\n\ntype SetEthNetworkPayload {\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ntype Settings {\n  ethereumUrl: String!\n}\n\ninput SetUserProfileVisibilityInput {\n  userID: String!\n  visibile: Boolean\n  clientMutationId: String\n}\n\ntype SetUserProfileVisibilityPayload {\n  viewer: Viewer!\n  clientMutationId: String\n}\n\nenum StakeState {\n  STAKED\n  RECLAIMING\n  RECLAIMED\n  SEIZED\n}\n\ntype Subscription {\n  appUpdateChanged: AppUpdatePayload!\n  contactChanged: ContactChangedPayload!\n  contactsChanged: ContactChangedPayload!\n}\n\nenum SupportedWallets {\n  ETHEREUM\n}\n\ninput UpdateAppDetailsInput {\n  appID: String!\n  name: String!\n  contentsPath: String!\n  version: String!\n  clientMutationId: String\n}\n\ntype UpdateAppDetailsPayload {\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ninput UpdateProfileInput {\n  userID: String!\n  profile: UpdateUserProfileInput!\n  privateProfile: Boolean\n  clientMutationId: String\n}\n\ntype UpdateProfilePayload {\n  viewer: Viewer!\n  clientMutationId: String\n}\n\ninput UpdateUserProfileInput {\n  name: String\n  avatar: String\n  ethAddress: String\n}\n\ninput UserProfileInput {\n  name: String!\n  avatar: String\n}\n\ntype Viewer {\n  id: ID!\n  apps: Apps!\n  contacts: Contacts!\n  identities: Identities!\n  wallets: Wallets!\n  settings: Settings!\n}\n\ntype WalletAccount {\n  address: String!\n  balances: WalletBalances!\n}\n\ntype WalletBalances {\n  eth: String!\n  mft: String!\n}\n\ntype Wallets {\n  ethWallets(userID: String!): EthWallets!\n}\n\ninput WebRequestGrantInput {\n  granted: [String]\n  denied: [String]\n}\n\ntype WebRequestGrants {\n  granted: [String!]!\n  denied: [String!]!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 59,
      "containsCycle": true,
      "numDefinitions": 94
    }
  ],
  "metrics": {
    "created_at": "2018-04-13T13:19:25Z",
    "updated_at": "2019-07-10T11:01:30Z",
    "pushed_at": "2019-07-12T21:15:37Z",
    "issues": 150,
    "watchers": 17,
    "fork_count": 8,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 338,
    "pull_requests_open": 1,
    "pull_requests_closed": 107,
    "pull_requests_merged": 230,
    "releases": 2,
    "stargazers": 34
  }
}