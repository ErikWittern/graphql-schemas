{
  "repo_name": "simple-store-boiler-plate",
  "repo_full_name": "teresatuesday/simple-store-boiler-plate",
  "repo_owner": "TeresaTuesday",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "server/src/generated/prisma.graphql",
      "sha": "045c4db817266e93d0824e15dcc141f8564a4497",
      "url": "https://api.github.com/repositories/126208077/contents/server/src/generated/prisma.graphql?ref=4ffc5d2650d6de46b8410845334d7c95490ef9bf",
      "git_url": "https://api.github.com/repositories/126208077/git/blobs/045c4db817266e93d0824e15dcc141f8564a4497",
      "html_url": "https://github.com/TeresaTuesday/simple-store-boiler-plate/blob/4ffc5d2650d6de46b8410845334d7c95490ef9bf/server/src/generated/prisma.graphql",
      "content": "# THIS FILE HAS BEEN AUTO-GENERATED BY \"PRISMA DEPLOY\"\n# DO NOT EDIT THIS FILE DIRECTLY\n\n#\n# Model Types\n#\n\ntype Registry implements Node {\n  id: ID!\n  user(where: UserWhereInput): User\n  rides(where: RegRideWhereInput, orderBy: RegRideOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RegRide!]\n}\n\ntype RegRide implements Node {\n  id: ID!\n  registry(where: RegistryWhereInput): Registry!\n  ride(where: RideWhereInput): Ride!\n}\n\ntype Ride implements Node {\n  id: ID!\n  name: String!\n  imgURL: String\n  loc: String\n  desc: String!\n  height: Int!\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n  email: String!\n  pw: String!\n  registry(where: RegistryWhereInput): Registry\n}\n\n\n#\n# Other Types\n#\n\ntype AggregateRegistry {\n  count: Int!\n}\n\ntype AggregateRegRide {\n  count: Int!\n}\n\ntype AggregateRide {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"\n  The number of nodes that have been affected by the Batch operation.\n  \"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  createRegistry(data: RegistryCreateInput!): Registry!\n  createRegRide(data: RegRideCreateInput!): RegRide!\n  createRide(data: RideCreateInput!): Ride!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateRegistry(data: RegistryUpdateInput!, where: RegistryWhereUniqueInput!): Registry\n  updateRegRide(data: RegRideUpdateInput!, where: RegRideWhereUniqueInput!): RegRide\n  updateRide(data: RideUpdateInput!, where: RideWhereUniqueInput!): Ride\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteRegistry(where: RegistryWhereUniqueInput!): Registry\n  deleteRegRide(where: RegRideWhereUniqueInput!): RegRide\n  deleteRide(where: RideWhereUniqueInput!): Ride\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertRegistry(where: RegistryWhereUniqueInput!, create: RegistryCreateInput!, update: RegistryUpdateInput!): Registry!\n  upsertRegRide(where: RegRideWhereUniqueInput!, create: RegRideCreateInput!, update: RegRideUpdateInput!): RegRide!\n  upsertRide(where: RideWhereUniqueInput!, create: RideCreateInput!, update: RideUpdateInput!): Ride!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  updateManyRegistries(data: RegistryUpdateInput!, where: RegistryWhereInput): BatchPayload!\n  updateManyRegRides(data: RegRideUpdateInput!, where: RegRideWhereInput): BatchPayload!\n  updateManyRides(data: RideUpdateInput!, where: RideWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyRegistries(where: RegistryWhereInput): BatchPayload!\n  deleteManyRegRides(where: RegRideWhereInput): BatchPayload!\n  deleteManyRides(where: RideWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"\nAn object with an ID\n\"\"\"\ninterface Node {\n  \"\"\"\n  The id of the object.\n  \"\"\"\n  id: ID!\n}\n\n\"\"\"\nInformation about pagination in a connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"\n  When paginating forwards, are there more items?\n  \"\"\"\n  hasNextPage: Boolean!\n  \"\"\"\n  When paginating backwards, are there more items?\n  \"\"\"\n  hasPreviousPage: Boolean!\n  \"\"\"\n  When paginating backwards, the cursor to continue.\n  \"\"\"\n  startCursor: String\n  \"\"\"\n  When paginating forwards, the cursor to continue.\n  \"\"\"\n  endCursor: String\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  registries(where: RegistryWhereInput, orderBy: RegistryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Registry]!\n  regRides(where: RegRideWhereInput, orderBy: RegRideOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RegRide]!\n  rides(where: RideWhereInput, orderBy: RideOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Ride]!\n  user(where: UserWhereUniqueInput!): User\n  registry(where: RegistryWhereUniqueInput!): Registry\n  regRide(where: RegRideWhereUniqueInput!): RegRide\n  ride(where: RideWhereUniqueInput!): Ride\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  registriesConnection(where: RegistryWhereInput, orderBy: RegistryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RegistryConnection!\n  regRidesConnection(where: RegRideWhereInput, orderBy: RegRideOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RegRideConnection!\n  ridesConnection(where: RideWhereInput, orderBy: RideOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RideConnection!\n  \"\"\"\n  Fetches an object given its ID\n  \"\"\"\n  node(\"\"\"\n  The ID of an object\n  \"\"\"\n  id: ID!): Node\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype RegistryConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [RegistryEdge]!\n  aggregate: AggregateRegistry!\n}\n\ninput RegistryCreateInput {\n  user: UserCreateOneWithoutRegistryInput\n  rides: RegRideCreateManyWithoutRegistryInput\n}\n\ninput RegistryCreateOneWithoutRidesInput {\n  create: RegistryCreateWithoutRidesInput\n  connect: RegistryWhereUniqueInput\n}\n\ninput RegistryCreateOneWithoutUserInput {\n  create: RegistryCreateWithoutUserInput\n  connect: RegistryWhereUniqueInput\n}\n\ninput RegistryCreateWithoutRidesInput {\n  user: UserCreateOneWithoutRegistryInput\n}\n\ninput RegistryCreateWithoutUserInput {\n  rides: RegRideCreateManyWithoutRegistryInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype RegistryEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Registry!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum RegistryOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype RegistryPreviousValues {\n  id: ID!\n}\n\ntype RegistrySubscriptionPayload {\n  mutation: MutationType!\n  node: Registry\n  updatedFields: [String!]\n  previousValues: RegistryPreviousValues\n}\n\ninput RegistrySubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [RegistrySubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [RegistrySubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: RegistryWhereInput\n}\n\ninput RegistryUpdateInput {\n  user: UserUpdateOneWithoutRegistryInput\n  rides: RegRideUpdateManyWithoutRegistryInput\n}\n\ninput RegistryUpdateOneWithoutRidesInput {\n  create: RegistryCreateWithoutRidesInput\n  connect: RegistryWhereUniqueInput\n  delete: Boolean\n  update: RegistryUpdateWithoutRidesDataInput\n  upsert: RegistryUpsertWithoutRidesInput\n}\n\ninput RegistryUpdateOneWithoutUserInput {\n  create: RegistryCreateWithoutUserInput\n  connect: RegistryWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: RegistryUpdateWithoutUserDataInput\n  upsert: RegistryUpsertWithoutUserInput\n}\n\ninput RegistryUpdateWithoutRidesDataInput {\n  user: UserUpdateOneWithoutRegistryInput\n}\n\ninput RegistryUpdateWithoutUserDataInput {\n  rides: RegRideUpdateManyWithoutRegistryInput\n}\n\ninput RegistryUpsertWithoutRidesInput {\n  update: RegistryUpdateWithoutRidesDataInput!\n  create: RegistryCreateWithoutRidesInput!\n}\n\ninput RegistryUpsertWithoutUserInput {\n  update: RegistryUpdateWithoutUserDataInput!\n  create: RegistryCreateWithoutUserInput!\n}\n\ninput RegistryWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [RegistryWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [RegistryWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  user: UserWhereInput\n  rides_every: RegRideWhereInput\n  rides_some: RegRideWhereInput\n  rides_none: RegRideWhereInput\n}\n\ninput RegistryWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype RegRideConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [RegRideEdge]!\n  aggregate: AggregateRegRide!\n}\n\ninput RegRideCreateInput {\n  registry: RegistryCreateOneWithoutRidesInput!\n  ride: RideCreateOneInput!\n}\n\ninput RegRideCreateManyWithoutRegistryInput {\n  create: [RegRideCreateWithoutRegistryInput!]\n  connect: [RegRideWhereUniqueInput!]\n}\n\ninput RegRideCreateWithoutRegistryInput {\n  ride: RideCreateOneInput!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype RegRideEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: RegRide!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum RegRideOrderByInput {\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype RegRidePreviousValues {\n  id: ID!\n}\n\ntype RegRideSubscriptionPayload {\n  mutation: MutationType!\n  node: RegRide\n  updatedFields: [String!]\n  previousValues: RegRidePreviousValues\n}\n\ninput RegRideSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [RegRideSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [RegRideSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: RegRideWhereInput\n}\n\ninput RegRideUpdateInput {\n  registry: RegistryUpdateOneWithoutRidesInput\n  ride: RideUpdateOneInput\n}\n\ninput RegRideUpdateManyWithoutRegistryInput {\n  create: [RegRideCreateWithoutRegistryInput!]\n  connect: [RegRideWhereUniqueInput!]\n  disconnect: [RegRideWhereUniqueInput!]\n  delete: [RegRideWhereUniqueInput!]\n  update: [RegRideUpdateWithWhereUniqueWithoutRegistryInput!]\n  upsert: [RegRideUpsertWithWhereUniqueWithoutRegistryInput!]\n}\n\ninput RegRideUpdateWithoutRegistryDataInput {\n  ride: RideUpdateOneInput\n}\n\ninput RegRideUpdateWithWhereUniqueWithoutRegistryInput {\n  where: RegRideWhereUniqueInput!\n  data: RegRideUpdateWithoutRegistryDataInput!\n}\n\ninput RegRideUpsertWithWhereUniqueWithoutRegistryInput {\n  where: RegRideWhereUniqueInput!\n  update: RegRideUpdateWithoutRegistryDataInput!\n  create: RegRideCreateWithoutRegistryInput!\n}\n\ninput RegRideWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [RegRideWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [RegRideWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  registry: RegistryWhereInput\n  ride: RideWhereInput\n}\n\ninput RegRideWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype RideConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [RideEdge]!\n  aggregate: AggregateRide!\n}\n\ninput RideCreateInput {\n  name: String!\n  imgURL: String\n  loc: String\n  desc: String!\n  height: Int!\n}\n\ninput RideCreateOneInput {\n  create: RideCreateInput\n  connect: RideWhereUniqueInput\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype RideEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: Ride!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum RideOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  imgURL_ASC\n  imgURL_DESC\n  loc_ASC\n  loc_DESC\n  desc_ASC\n  desc_DESC\n  height_ASC\n  height_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype RidePreviousValues {\n  id: ID!\n  name: String!\n  imgURL: String\n  loc: String\n  desc: String!\n  height: Int!\n}\n\ntype RideSubscriptionPayload {\n  mutation: MutationType!\n  node: Ride\n  updatedFields: [String!]\n  previousValues: RidePreviousValues\n}\n\ninput RideSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [RideSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [RideSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: RideWhereInput\n}\n\ninput RideUpdateDataInput {\n  name: String\n  imgURL: String\n  loc: String\n  desc: String\n  height: Int\n}\n\ninput RideUpdateInput {\n  name: String\n  imgURL: String\n  loc: String\n  desc: String\n  height: Int\n}\n\ninput RideUpdateOneInput {\n  create: RideCreateInput\n  connect: RideWhereUniqueInput\n  delete: Boolean\n  update: RideUpdateDataInput\n  upsert: RideUpsertNestedInput\n}\n\ninput RideUpsertNestedInput {\n  update: RideUpdateDataInput!\n  create: RideCreateInput!\n}\n\ninput RideWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [RideWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [RideWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  imgURL: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  imgURL_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  imgURL_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  imgURL_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  imgURL_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  imgURL_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  imgURL_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  imgURL_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  imgURL_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  imgURL_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  imgURL_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  imgURL_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  imgURL_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  imgURL_not_ends_with: String\n  loc: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  loc_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  loc_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  loc_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  loc_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  loc_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  loc_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  loc_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  loc_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  loc_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  loc_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  loc_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  loc_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  loc_not_ends_with: String\n  desc: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  desc_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  desc_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  desc_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  desc_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  desc_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  desc_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  desc_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  desc_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  desc_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  desc_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  desc_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  desc_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  desc_not_ends_with: String\n  height: Int\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  height_not: Int\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  height_in: [Int!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  height_not_in: [Int!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  height_lt: Int\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  height_lte: Int\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  height_gt: Int\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  height_gte: Int\n}\n\ninput RideWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  registry(where: RegistrySubscriptionWhereInput): RegistrySubscriptionPayload\n  regRide(where: RegRideSubscriptionWhereInput): RegRideSubscriptionPayload\n  ride(where: RideSubscriptionWhereInput): RideSubscriptionPayload\n}\n\n\"\"\"\nA connection to a list of items.\n\"\"\"\ntype UserConnection {\n  \"\"\"\n  Information to aid in pagination.\n  \"\"\"\n  pageInfo: PageInfo!\n  \"\"\"\n  A list of edges.\n  \"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n  email: String!\n  pw: String!\n  registry: RegistryCreateOneWithoutUserInput\n}\n\ninput UserCreateOneWithoutRegistryInput {\n  create: UserCreateWithoutRegistryInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutRegistryInput {\n  name: String!\n  email: String!\n  pw: String!\n}\n\n\"\"\"\nAn edge in a connection.\n\"\"\"\ntype UserEdge {\n  \"\"\"\n  The item at the end of the edge.\n  \"\"\"\n  node: User!\n  \"\"\"\n  A cursor for use in pagination.\n  \"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  email_ASC\n  email_DESC\n  pw_ASC\n  pw_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n  email: String!\n  pw: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserSubscriptionWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserSubscriptionWhereInput!]\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  name: String\n  email: String\n  pw: String\n  registry: RegistryUpdateOneWithoutUserInput\n}\n\ninput UserUpdateOneWithoutRegistryInput {\n  create: UserCreateWithoutRegistryInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutRegistryDataInput\n  upsert: UserUpsertWithoutRegistryInput\n}\n\ninput UserUpdateWithoutRegistryDataInput {\n  name: String\n  email: String\n  pw: String\n}\n\ninput UserUpsertWithoutRegistryInput {\n  update: UserUpdateWithoutRegistryDataInput!\n  create: UserCreateWithoutRegistryInput!\n}\n\ninput UserWhereInput {\n  \"\"\"\n  Logical AND on all given filters.\n  \"\"\"\n  AND: [UserWhereInput!]\n  \"\"\"\n  Logical OR on all given filters.\n  \"\"\"\n  OR: [UserWhereInput!]\n  id: ID\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  id_not: ID\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  id_in: [ID!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  id_not_in: [ID!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  id_lt: ID\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  id_lte: ID\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  id_gt: ID\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  id_gte: ID\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  id_contains: ID\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  id_not_contains: ID\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  id_starts_with: ID\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  id_not_starts_with: ID\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  id_ends_with: ID\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  id_not_ends_with: ID\n  name: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  name_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  name_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  name_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  name_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  name_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  name_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  name_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  name_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  name_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  name_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  name_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  name_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  name_not_ends_with: String\n  email: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  email_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  email_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  email_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  email_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  email_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  email_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  email_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  email_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  email_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  email_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  email_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  email_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  email_not_ends_with: String\n  pw: String\n  \"\"\"\n  All values that are not equal to given value.\n  \"\"\"\n  pw_not: String\n  \"\"\"\n  All values that are contained in given list.\n  \"\"\"\n  pw_in: [String!]\n  \"\"\"\n  All values that are not contained in given list.\n  \"\"\"\n  pw_not_in: [String!]\n  \"\"\"\n  All values less than the given value.\n  \"\"\"\n  pw_lt: String\n  \"\"\"\n  All values less than or equal the given value.\n  \"\"\"\n  pw_lte: String\n  \"\"\"\n  All values greater than the given value.\n  \"\"\"\n  pw_gt: String\n  \"\"\"\n  All values greater than or equal the given value.\n  \"\"\"\n  pw_gte: String\n  \"\"\"\n  All values containing the given string.\n  \"\"\"\n  pw_contains: String\n  \"\"\"\n  All values not containing the given string.\n  \"\"\"\n  pw_not_contains: String\n  \"\"\"\n  All values starting with the given string.\n  \"\"\"\n  pw_starts_with: String\n  \"\"\"\n  All values not starting with the given string.\n  \"\"\"\n  pw_not_starts_with: String\n  \"\"\"\n  All values ending with the given string.\n  \"\"\"\n  pw_ends_with: String\n  \"\"\"\n  All values not ending with the given string.\n  \"\"\"\n  pw_not_ends_with: String\n  registry: RegistryWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 29,
      "containsCycle": true,
      "numDefinitions": 81
    }
  ],
  "metrics": {
    "created_at": "2018-03-21T16:23:59Z",
    "updated_at": "2018-04-25T14:39:48Z",
    "pushed_at": "2018-04-25T14:39:47Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}