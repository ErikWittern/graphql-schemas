{
  "repo_name": "MS-Library-API",
  "repo_full_name": "limeishu/ms-library-api",
  "repo_owner": "Limeishu",
  "repo_description": "梅樹文庫 API | MS Library API",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "db/schema.graphql",
      "sha": "a8c6c7b24ef04d2e10ffcc60bad3c615ac6238aa",
      "url": "https://api.github.com/repositories/157795621/contents/db/schema.graphql?ref=3e227234c4633dfff73e89afdfc20e482b3629d4",
      "git_url": "https://api.github.com/repositories/157795621/git/blobs/a8c6c7b24ef04d2e10ffcc60bad3c615ac6238aa",
      "html_url": "https://github.com/Limeishu/MS-Library-API/blob/3e227234c4633dfff73e89afdfc20e482b3629d4/db/schema.graphql",
      "content": "scalar DateTime\nscalar Json\nscalar Upload\nscalar UUID\nscalar ItemWhereInput\nscalar ItemOrderByInput\nscalar PropertyWhereInput\nscalar PropertyOrderByInput\nscalar StatementCreateManyInput\nscalar StatementUpdateManyInput\n\n# Query\n\ntype Query {\n  creator(id: UUID!): Creator\n  creators: [Creator!]\n\n  category(id: ID!): Category\n  categories: [Category!]\n\n  item(id: UUID!): Item\n  items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Item!]\n\n  layout(name: String!): Layout\n  layouts: [Layout!]\n\n  post(id: ID!): Post\n  posts: [Post!]\n  postsByUser(userName: String!): [Post!]\n\n  properties(where: PropertyWhereInput, orderBy: PropertyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Property!]\n\n  route(name: String!): RoutePage\n  routes: [RoutePage!]\n\n  tag(id: ID!): Tag\n  tags: [Tag!]\n}\n\n# Mutation\n\ntype Mutation {\n  verifyUser(token: String!): LoginPayload!\n  verifyUserEmail(token: String!): LoginPayload!\n  signUpUser(userName: String, password: String!, email: String!, firstName: String, lastName: String): UserPayload!\n  loginUser(email: String!, password: String!): LoginPayload!\n\n  createGroup(name: String!, description: String, accessbility: Json!): Group!\n  addUserToGroup(id: UUID!, groupName: String!): GeneralPayload!\n\n  createPost(title: String!, content: String, paragraphs: Json): Post!\n  updatePost(id: ID!, title: String, content: String, paragraphs: Json, published: Boolean, meta: Json): Post!\n  setTagsToPost(id: ID!, tags: [String!]): Post!\n  deletePost(id: ID!): GeneralPayload!\n\n  createItem(name: String!, description: String, content: String, paragraphs: Json, date: DateTime, statements: StatementCreateManyInput): Item!\n  updateItem(id: UUID!, name: String, description: String, content: String, paragraphs: Json, date: DateTime, meta: Json, statements: StatementUpdateManyInput): Item!\n  setCategoryToItem(id: UUID!, categories: [String!]!): Item!\n  setCreatorToItem(id: UUID!, creators: [String!]!): Item!\n  deleteItem(id: UUID!): GeneralPayload!\n\n  createCreator(name: String!, description: String, content: String, paragraphs: Json): Creator!\n  updateCreator(id: UUID!, name: String, description: String, content: String, paragraphs: Json, meta: Json): Creator!\n  deleteCreator(id: UUID!): GeneralPayload!\n\n  createCategory(name: String!, description: String, content: String, paragraphs: Json): Category!\n  updateCategory(id: UUID!, name: String, description: String, content: String, paragraphs: Json, meta: Json): Category!\n  deleteCategory(id: UUID!): GeneralPayload!\n\n  createTag(name: String!, description: String, meta: Json): Tag!\n  updateTag(id: ID!, name: String, description: String, meta: Json): Tag!\n  deleteTag(id: ID!): GeneralPayload!\n\n  createRoutePage(name: String!, description: String, head: Json, layout: String, path: String!, meta: Json, tags: [String!], categories: [String!]): RoutePage!\n  updateRoutePage(name: String!, description: String, head: Json, layout: String, path: String!, meta: Json, tags: [String!], categories: [String!]): RoutePage!\n  deleteRoutePage(name: String!): GeneralPayload!\n\n  createLayout(name: String!, component: String! , description: String, meta: Json): Layout!\n  updateLayout(name: String!, component: String! , description: String, meta: Json): Layout!\n  deleteLayout(name: String!): GeneralPayload!\n\n  uploadImage(file: Upload!): Image\n}\n\n# Payload\n\ntype AuthorPayload {\n  id: UUID!\n  email: String\n  userName: String\n  firstName: String\n  lastName: String\n  meta: Json\n}\n\ntype GeneralPayload {\n  status: String\n  message: String\n  meta: Json\n}\n\ntype LoginPayload {\n  id: UUID!\n  token: String!\n  userName: String\n  firstName: String\n  lastName: String\n  email: String\n  group: Group\n  meta: Json\n}\n\ntype PermissionPayload {\n  read: Boolean\n  write: Boolean\n  delete: Boolean\n}\n\ntype PermissionClass {\n  category: PermissionPayload\n  commit: PermissionPayload\n  creator: PermissionPayload\n  item: PermissionPayload\n  group: PermissionPayload\n  post: PermissionPayload\n  user: PermissionPayload\n}\n\ntype UserPayload {\n  id: UUID!\n  token: String!\n  userName: String\n  firstName: String\n  lastName: String\n  email: String\n  meta: Json\n}\n\n# Schema\n\ntype Category {\n  id: UUID!\n# ---\n  content: String\n  description: String\n  name: String!\n  meta: Json\n# ---\n  items: [Item!]\n  paragraphs: [Paragraph!]\n# ---\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype Creator {\n  id: UUID!\n# ---\n  content: String\n  description: String\n  name: String!\n  meta: Json\n# ---\n  items: [Item!]\n  paragraphs: [Paragraph!]\n# ---\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype Group {\n  id: ID!\n# ---\n  accessbility: PermissionClass!\n  description: String\n  name: String!\n  meta: Json\n# ---\n  users: [User!]\n# ---\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype Image {\n  id: UUID!\n# ---\n  description: String\n  name: String\n  path: String!\n  meta: Json\n# ---\n  user: UserPayload!\n# ---\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype Item {\n  id: UUID!\n# ---\n  content: String\n  date: DateTime\n  description: String\n  name: String!\n  meta: Json\n# ---\n  categories: [Category!]\n  paragraphs: [Paragraph!]\n  statements: [Statement!]\n# ---\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype Layout {\n  id: ID!\n# ---\n  description: String\n  name: String!\n  component: String!\n# ---\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype Note {\n  id: ID!\n# ---\n  content: String!\n  meta: Json\n# ---\n  notes: [Note!]\n  targetQuote: Quote!\n  user: User!\n# ---\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype Paragraph {\n  id: ID!\n# ---\n  index: Int\n  markup: [Json!]\n  text: String\n  type: String!\n  meta: Json\n# ---\n  quotes: [Quote!]\n  responses: [Response!]\n# ---\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype Post {\n  id: ID!\n# ---\n  author: AuthorPayload\n  content: String\n  title: String!\n  published: Boolean!\n  meta: Json\n# ---\n  paragraphs: [Paragraph!]\n  responses: [Response!]\n  tags: [Tag!]\n# ---\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype Property {\n  id: ID!\n# ---\n  name: String!\n  description: String\n  meta: Json\n# ---\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype Quote {\n  id: ID!\n# ---\n  startOffset: Int!\n  endOffset: Int!\n  type: String!\n  meta: Json\n# ---\n  notes: [Note!]\n  targetParagraph: Paragraph!\n  user: User!\n# ---\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype Response {\n  id: ID!\n# ---\n  content: String!\n  meta: Json\n# ---\n  user: User!\n  responses: [Response!]\n  targetPost: Post!\n# ---\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype RoutePage {\n  id: ID!\n# ---\n  description: String\n  head: Json\n  layout: Layout!\n  name: String!\n  path: String!\n  meta: Json\n# ---\n  targetTags: [Tag!]\n  targetCategories: [Category!]\n# ---\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype Statement {\n  id: ID!\n# ---\n  property: Property!\n  value: String!\n# ---\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype Tag {\n  id: ID!\n# ---\n  description: String\n  name: String!\n  meta: Json\n# ---\n  posts: [Post!]\n# ---\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype User {\n  id: UUID!\n# ---\n  email: String!\n  firstName: String\n  group: Group!\n  lastName: String\n  password: String!\n  userName: String!\n  meta: Json\n# ---\n  notes: [Note!]\n  posts: [Post!]\n  quotes: [Quote!]\n  responses: [Response!]\n# ---\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 24,
      "containsCycle": true,
      "numDefinitions": 34
    }
  ],
  "metrics": {
    "created_at": "2018-11-16T01:32:10Z",
    "updated_at": "2019-06-16T08:48:25Z",
    "pushed_at": "2019-07-12T17:34:14Z",
    "issues": 0,
    "watchers": 2,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 3,
    "pull_requests_open": 2,
    "pull_requests_closed": 0,
    "pull_requests_merged": 1,
    "releases": 0,
    "stargazers": 0
  }
}