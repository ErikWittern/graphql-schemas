{
  "repo_name": "smart-logger-api",
  "repo_full_name": "vkouk/smart-logger-api",
  "repo_owner": "vkouk",
  "repo_description": "Activity Logger For Companies",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "src/generated/prisma.graphql",
      "sha": "39c7617dc559147e66ff5623b3036c5ff7c9f5d7",
      "url": "https://api.github.com/repositories/154553364/contents/src/generated/prisma.graphql?ref=28a297ece25a85b045182c62c506b1c9ac7290a7",
      "git_url": "https://api.github.com/repositories/154553364/git/blobs/39c7617dc559147e66ff5623b3036c5ff7c9f5d7",
      "html_url": "https://github.com/vkouk/smart-logger-api/blob/28a297ece25a85b045182c62c506b1c9ac7290a7/src/generated/prisma.graphql",
      "content": "type AggregateLog {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar DateTime\n\ntype Log {\n  id: ID!\n  log: String!\n  logTime: Int!\n  user: User!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype LogConnection {\n  pageInfo: PageInfo!\n  edges: [LogEdge]!\n  aggregate: AggregateLog!\n}\n\ninput LogCreateInput {\n  log: String!\n  logTime: Int!\n  user: UserCreateOneInput!\n}\n\ntype LogEdge {\n  node: Log!\n  cursor: String!\n}\n\nenum LogOrderByInput {\n  id_ASC\n  id_DESC\n  log_ASC\n  log_DESC\n  logTime_ASC\n  logTime_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype LogPreviousValues {\n  id: ID!\n  log: String!\n  logTime: Int!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype LogSubscriptionPayload {\n  mutation: MutationType!\n  node: Log\n  updatedFields: [String!]\n  previousValues: LogPreviousValues\n}\n\ninput LogSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: LogWhereInput\n  AND: [LogSubscriptionWhereInput!]\n  OR: [LogSubscriptionWhereInput!]\n  NOT: [LogSubscriptionWhereInput!]\n}\n\ninput LogUpdateInput {\n  log: String\n  logTime: Int\n  user: UserUpdateOneRequiredInput\n}\n\ninput LogUpdateManyMutationInput {\n  log: String\n  logTime: Int\n}\n\ninput LogWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  log: String\n  log_not: String\n  log_in: [String!]\n  log_not_in: [String!]\n  log_lt: String\n  log_lte: String\n  log_gt: String\n  log_gte: String\n  log_contains: String\n  log_not_contains: String\n  log_starts_with: String\n  log_not_starts_with: String\n  log_ends_with: String\n  log_not_ends_with: String\n  logTime: Int\n  logTime_not: Int\n  logTime_in: [Int!]\n  logTime_not_in: [Int!]\n  logTime_lt: Int\n  logTime_lte: Int\n  logTime_gt: Int\n  logTime_gte: Int\n  user: UserWhereInput\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  AND: [LogWhereInput!]\n  OR: [LogWhereInput!]\n  NOT: [LogWhereInput!]\n}\n\ninput LogWhereUniqueInput {\n  id: ID\n}\n\nscalar Long\n\ntype Mutation {\n  createLog(data: LogCreateInput!): Log!\n  updateLog(data: LogUpdateInput!, where: LogWhereUniqueInput!): Log\n  updateManyLogs(data: LogUpdateManyMutationInput!, where: LogWhereInput): BatchPayload!\n  upsertLog(where: LogWhereUniqueInput!, create: LogCreateInput!, update: LogUpdateInput!): Log!\n  deleteLog(where: LogWhereUniqueInput!): Log\n  deleteManyLogs(where: LogWhereInput): BatchPayload!\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  log(where: LogWhereUniqueInput!): Log\n  logs(where: LogWhereInput, orderBy: LogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Log]!\n  logsConnection(where: LogWhereInput, orderBy: LogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LogConnection!\n  user(where: UserWhereUniqueInput!): User\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  log(where: LogSubscriptionWhereInput): LogSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype User {\n  id: ID!\n  name: String!\n  email: String!\n  password: String!\n  avatar: String\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n  email: String!\n  password: String!\n  avatar: String\n}\n\ninput UserCreateOneInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  avatar_ASC\n  avatar_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n  email: String!\n  password: String!\n  avatar: String\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n}\n\ninput UserUpdateDataInput {\n  name: String\n  email: String\n  password: String\n  avatar: String\n}\n\ninput UserUpdateInput {\n  name: String\n  email: String\n  password: String\n  avatar: String\n}\n\ninput UserUpdateManyMutationInput {\n  name: String\n  email: String\n  password: String\n  avatar: String\n}\n\ninput UserUpdateOneRequiredInput {\n  create: UserCreateInput\n  update: UserUpdateDataInput\n  upsert: UserUpsertNestedInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpsertNestedInput {\n  update: UserUpdateDataInput!\n  create: UserCreateInput!\n}\n\ninput UserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n  avatar: String\n  avatar_not: String\n  avatar_in: [String!]\n  avatar_not_in: [String!]\n  avatar_lt: String\n  avatar_lte: String\n  avatar_gt: String\n  avatar_gte: String\n  avatar_contains: String\n  avatar_not_contains: String\n  avatar_starts_with: String\n  avatar_not_starts_with: String\n  avatar_ends_with: String\n  avatar_not_ends_with: String\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 17,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 39
    }
  ],
  "metrics": {
    "created_at": "2018-10-24T18:56:56Z",
    "updated_at": "2019-02-25T13:52:17Z",
    "pushed_at": "2019-02-25T13:52:16Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}