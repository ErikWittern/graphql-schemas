{
  "repo_name": "gondor",
  "repo_full_name": "ykdevep/gondor",
  "repo_owner": "ykdevep",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "server/src/generated/prisma.graphql",
      "sha": "29226e56aa4bfcb57c66a75782e67c08ce8c94db",
      "url": "https://api.github.com/repositories/148520630/contents/server/src/generated/prisma.graphql?ref=842e6f1cfca6372697b1a44901892d492af36f6a",
      "git_url": "https://api.github.com/repositories/148520630/git/blobs/29226e56aa4bfcb57c66a75782e67c08ce8c94db",
      "html_url": "https://github.com/ykdevep/gondor/blob/842e6f1cfca6372697b1a44901892d492af36f6a/server/src/generated/prisma.graphql",
      "content": "# source: http://localhost:4466\n# timestamp: Sun Oct 07 2018 16:34:50 GMT-0400 (EDT)\n\ntype AggregateExercise {\n  count: Int!\n}\n\ntype AggregateExerciseData {\n  count: Int!\n}\n\ntype AggregateFile {\n  count: Int!\n}\n\ntype AggregateResult {\n  count: Int!\n}\n\ntype AggregateRole {\n  count: Int!\n}\n\ntype AggregateSection {\n  count: Int!\n}\n\ntype AggregateTest {\n  count: Int!\n}\n\ntype AggregateTestData {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\nenum Codes {\n  A0\n  A1\n  A2\n  A3\n  A4\n  A5\n  A6\n  A7\n  A8\n  A9\n  B0\n  B1\n  B2\n  B3\n  B4\n  B5\n  B6\n  B7\n  B8\n  B9\n  C0\n  C1\n  C2\n  C3\n  C4\n  C5\n  C6\n  C7\n  C8\n  C9\n  D0\n  D1\n  D2\n  D3\n  D4\n  D5\n  D6\n  D7\n  D8\n  D9\n  E0\n  E1\n  E2\n  E3\n  E4\n  E5\n  E6\n  E7\n  E8\n  E9\n  H0\n  H1\n  H2\n  H3\n  H4\n  H5\n  H6\n  H7\n  H8\n  H9\n  G0\n  G1\n  G2\n  G3\n  G4\n  G5\n  G6\n  G7\n  G8\n  G9\n}\n\nscalar DateTime\n\nenum Dificulty {\n  NINGUNO\n  INICIAL\n  MEDIA\n  AVANZADA\n}\n\ntype Exercise implements Node {\n  id: ID!\n  code: Codes!\n  scale: Int!\n  level: Levels!\n  description: String\n  sections(where: SectionWhereInput, orderBy: SectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Section!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ExerciseConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ExerciseEdge]!\n  aggregate: AggregateExercise!\n}\n\ninput ExerciseCreateInput {\n  code: Codes!\n  scale: Int\n  level: Levels\n  description: String\n  sections: SectionCreateManyInput\n}\n\ninput ExerciseCreateManyInput {\n  create: [ExerciseCreateInput!]\n  connect: [ExerciseWhereUniqueInput!]\n}\n\ninput ExerciseCreateOneInput {\n  create: ExerciseCreateInput\n  connect: ExerciseWhereUniqueInput\n}\n\ntype ExerciseData implements Node {\n  id: ID!\n  initAt: DateTime!\n  finalAt: DateTime!\n  createdBy(where: UserWhereInput): User!\n  exercise(where: ExerciseWhereInput): Exercise!\n  result(where: ResultWhereInput, orderBy: ResultOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Result!]\n  dificulty: Dificulty!\n  hit: Int\n  fault: Int\n  omit: Int\n  error: Int\n  point: Float\n  score: Float\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ExerciseDataConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ExerciseDataEdge]!\n  aggregate: AggregateExerciseData!\n}\n\ninput ExerciseDataCreateInput {\n  initAt: DateTime!\n  finalAt: DateTime!\n  dificulty: Dificulty\n  hit: Int\n  fault: Int\n  omit: Int\n  error: Int\n  point: Float\n  score: Float\n  createdBy: UserCreateOneInput!\n  exercise: ExerciseCreateOneInput!\n  result: ResultCreateManyInput\n}\n\ninput ExerciseDataCreateManyInput {\n  create: [ExerciseDataCreateInput!]\n  connect: [ExerciseDataWhereUniqueInput!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ExerciseDataEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: ExerciseData!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum ExerciseDataOrderByInput {\n  id_ASC\n  id_DESC\n  initAt_ASC\n  initAt_DESC\n  finalAt_ASC\n  finalAt_DESC\n  dificulty_ASC\n  dificulty_DESC\n  hit_ASC\n  hit_DESC\n  fault_ASC\n  fault_DESC\n  omit_ASC\n  omit_DESC\n  error_ASC\n  error_DESC\n  point_ASC\n  point_DESC\n  score_ASC\n  score_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ExerciseDataPreviousValues {\n  id: ID!\n  initAt: DateTime!\n  finalAt: DateTime!\n  dificulty: Dificulty!\n  hit: Int\n  fault: Int\n  omit: Int\n  error: Int\n  point: Float\n  score: Float\n}\n\ntype ExerciseDataSubscriptionPayload {\n  mutation: MutationType!\n  node: ExerciseData\n  updatedFields: [String!]\n  previousValues: ExerciseDataPreviousValues\n}\n\ninput ExerciseDataSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ExerciseDataSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ExerciseDataSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ExerciseDataSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ExerciseDataWhereInput\n}\n\ninput ExerciseDataUpdateDataInput {\n  initAt: DateTime\n  finalAt: DateTime\n  dificulty: Dificulty\n  hit: Int\n  fault: Int\n  omit: Int\n  error: Int\n  point: Float\n  score: Float\n  createdBy: UserUpdateOneInput\n  exercise: ExerciseUpdateOneInput\n  result: ResultUpdateManyInput\n}\n\ninput ExerciseDataUpdateInput {\n  initAt: DateTime\n  finalAt: DateTime\n  dificulty: Dificulty\n  hit: Int\n  fault: Int\n  omit: Int\n  error: Int\n  point: Float\n  score: Float\n  createdBy: UserUpdateOneInput\n  exercise: ExerciseUpdateOneInput\n  result: ResultUpdateManyInput\n}\n\ninput ExerciseDataUpdateManyInput {\n  create: [ExerciseDataCreateInput!]\n  connect: [ExerciseDataWhereUniqueInput!]\n  disconnect: [ExerciseDataWhereUniqueInput!]\n  delete: [ExerciseDataWhereUniqueInput!]\n  update: [ExerciseDataUpdateWithWhereUniqueNestedInput!]\n  upsert: [ExerciseDataUpsertWithWhereUniqueNestedInput!]\n}\n\ninput ExerciseDataUpdateWithWhereUniqueNestedInput {\n  where: ExerciseDataWhereUniqueInput!\n  data: ExerciseDataUpdateDataInput!\n}\n\ninput ExerciseDataUpsertWithWhereUniqueNestedInput {\n  where: ExerciseDataWhereUniqueInput!\n  update: ExerciseDataUpdateDataInput!\n  create: ExerciseDataCreateInput!\n}\n\ninput ExerciseDataWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ExerciseDataWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ExerciseDataWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ExerciseDataWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  initAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  initAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  initAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  initAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  initAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  initAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  initAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  initAt_gte: DateTime\n  finalAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  finalAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  finalAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  finalAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  finalAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  finalAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  finalAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  finalAt_gte: DateTime\n  dificulty: Dificulty\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  dificulty_not: Dificulty\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  dificulty_in: [Dificulty!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  dificulty_not_in: [Dificulty!]\n  hit: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  hit_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  hit_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  hit_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  hit_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  hit_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  hit_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  hit_gte: Int\n  fault: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  fault_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  fault_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  fault_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  fault_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  fault_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  fault_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  fault_gte: Int\n  omit: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  omit_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  omit_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  omit_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  omit_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  omit_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  omit_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  omit_gte: Int\n  error: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  error_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  error_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  error_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  error_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  error_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  error_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  error_gte: Int\n  point: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  point_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  point_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  point_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  point_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  point_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  point_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  point_gte: Float\n  score: Float\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  score_not: Float\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  score_in: [Float!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  score_not_in: [Float!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  score_lt: Float\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  score_lte: Float\n\n  \"\"\"All values greater than the given value.\"\"\"\n  score_gt: Float\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  score_gte: Float\n  createdBy: UserWhereInput\n  exercise: ExerciseWhereInput\n  result_every: ResultWhereInput\n  result_some: ResultWhereInput\n  result_none: ResultWhereInput\n}\n\ninput ExerciseDataWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ExerciseEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Exercise!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum ExerciseOrderByInput {\n  id_ASC\n  id_DESC\n  code_ASC\n  code_DESC\n  scale_ASC\n  scale_DESC\n  level_ASC\n  level_DESC\n  description_ASC\n  description_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ExercisePreviousValues {\n  id: ID!\n  code: Codes!\n  scale: Int!\n  level: Levels!\n  description: String\n}\n\ntype ExerciseSubscriptionPayload {\n  mutation: MutationType!\n  node: Exercise\n  updatedFields: [String!]\n  previousValues: ExercisePreviousValues\n}\n\ninput ExerciseSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ExerciseSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ExerciseSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ExerciseSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ExerciseWhereInput\n}\n\ninput ExerciseUpdateDataInput {\n  code: Codes\n  scale: Int\n  level: Levels\n  description: String\n  sections: SectionUpdateManyInput\n}\n\ninput ExerciseUpdateInput {\n  code: Codes\n  scale: Int\n  level: Levels\n  description: String\n  sections: SectionUpdateManyInput\n}\n\ninput ExerciseUpdateManyInput {\n  create: [ExerciseCreateInput!]\n  connect: [ExerciseWhereUniqueInput!]\n  disconnect: [ExerciseWhereUniqueInput!]\n  delete: [ExerciseWhereUniqueInput!]\n  update: [ExerciseUpdateWithWhereUniqueNestedInput!]\n  upsert: [ExerciseUpsertWithWhereUniqueNestedInput!]\n}\n\ninput ExerciseUpdateOneInput {\n  create: ExerciseCreateInput\n  connect: ExerciseWhereUniqueInput\n  delete: Boolean\n  update: ExerciseUpdateDataInput\n  upsert: ExerciseUpsertNestedInput\n}\n\ninput ExerciseUpdateWithWhereUniqueNestedInput {\n  where: ExerciseWhereUniqueInput!\n  data: ExerciseUpdateDataInput!\n}\n\ninput ExerciseUpsertNestedInput {\n  update: ExerciseUpdateDataInput!\n  create: ExerciseCreateInput!\n}\n\ninput ExerciseUpsertWithWhereUniqueNestedInput {\n  where: ExerciseWhereUniqueInput!\n  update: ExerciseUpdateDataInput!\n  create: ExerciseCreateInput!\n}\n\ninput ExerciseWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ExerciseWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ExerciseWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ExerciseWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  code: Codes\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  code_not: Codes\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  code_in: [Codes!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  code_not_in: [Codes!]\n  scale: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  scale_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  scale_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  scale_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  scale_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  scale_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  scale_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  scale_gte: Int\n  level: Levels\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  level_not: Levels\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  level_in: [Levels!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  level_not_in: [Levels!]\n  description: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  description_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  description_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  description_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  description_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  description_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  description_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  description_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  description_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  description_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  description_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  description_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  description_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  description_not_ends_with: String\n  sections_every: SectionWhereInput\n  sections_some: SectionWhereInput\n  sections_none: SectionWhereInput\n}\n\ninput ExerciseWhereUniqueInput {\n  id: ID\n  code: Codes\n}\n\ntype File implements Node {\n  id: ID!\n  path: String!\n  filename: String!\n  mimetype: String!\n  encoding: String!\n  size: Int!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FileConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FileEdge]!\n  aggregate: AggregateFile!\n}\n\ninput FileCreateInput {\n  path: String!\n  filename: String!\n  mimetype: String!\n  encoding: String!\n  size: Int!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FileEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: File!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum FileOrderByInput {\n  id_ASC\n  id_DESC\n  path_ASC\n  path_DESC\n  filename_ASC\n  filename_DESC\n  mimetype_ASC\n  mimetype_DESC\n  encoding_ASC\n  encoding_DESC\n  size_ASC\n  size_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype FilePreviousValues {\n  id: ID!\n  path: String!\n  filename: String!\n  mimetype: String!\n  encoding: String!\n  size: Int!\n}\n\ntype FileSubscriptionPayload {\n  mutation: MutationType!\n  node: File\n  updatedFields: [String!]\n  previousValues: FilePreviousValues\n}\n\ninput FileSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [FileSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [FileSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [FileSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FileWhereInput\n}\n\ninput FileUpdateInput {\n  path: String\n  filename: String\n  mimetype: String\n  encoding: String\n  size: Int\n}\n\ninput FileWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [FileWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [FileWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [FileWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  path: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  path_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  path_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  path_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  path_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  path_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  path_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  path_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  path_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  path_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  path_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  path_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  path_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  path_not_ends_with: String\n  filename: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  filename_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  filename_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  filename_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  filename_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  filename_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  filename_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  filename_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  filename_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  filename_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  filename_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  filename_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  filename_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  filename_not_ends_with: String\n  mimetype: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  mimetype_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  mimetype_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  mimetype_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  mimetype_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  mimetype_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  mimetype_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  mimetype_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  mimetype_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  mimetype_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  mimetype_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  mimetype_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  mimetype_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  mimetype_not_ends_with: String\n  encoding: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  encoding_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  encoding_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  encoding_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  encoding_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  encoding_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  encoding_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  encoding_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  encoding_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  encoding_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  encoding_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  encoding_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  encoding_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  encoding_not_ends_with: String\n  size: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  size_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  size_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  size_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  size_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  size_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  size_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  size_gte: Int\n}\n\ninput FileWhereUniqueInput {\n  id: ID\n}\n\nenum Levels {\n  NINGUNO\n  ENFOCADA\n  SOSTENIDA\n  SELECTIVA\n  ALTERNADA\n  DIVIDIDA\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createFile(data: FileCreateInput!): File!\n  createTestData(data: TestDataCreateInput!): TestData!\n  createExerciseData(data: ExerciseDataCreateInput!): ExerciseData!\n  createRole(data: RoleCreateInput!): Role!\n  createResult(data: ResultCreateInput!): Result!\n  createSection(data: SectionCreateInput!): Section!\n  createExercise(data: ExerciseCreateInput!): Exercise!\n  createUser(data: UserCreateInput!): User!\n  createTest(data: TestCreateInput!): Test!\n  updateFile(data: FileUpdateInput!, where: FileWhereUniqueInput!): File\n  updateTestData(data: TestDataUpdateInput!, where: TestDataWhereUniqueInput!): TestData\n  updateExerciseData(data: ExerciseDataUpdateInput!, where: ExerciseDataWhereUniqueInput!): ExerciseData\n  updateRole(data: RoleUpdateInput!, where: RoleWhereUniqueInput!): Role\n  updateResult(data: ResultUpdateInput!, where: ResultWhereUniqueInput!): Result\n  updateSection(data: SectionUpdateInput!, where: SectionWhereUniqueInput!): Section\n  updateExercise(data: ExerciseUpdateInput!, where: ExerciseWhereUniqueInput!): Exercise\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateTest(data: TestUpdateInput!, where: TestWhereUniqueInput!): Test\n  deleteFile(where: FileWhereUniqueInput!): File\n  deleteTestData(where: TestDataWhereUniqueInput!): TestData\n  deleteExerciseData(where: ExerciseDataWhereUniqueInput!): ExerciseData\n  deleteRole(where: RoleWhereUniqueInput!): Role\n  deleteResult(where: ResultWhereUniqueInput!): Result\n  deleteSection(where: SectionWhereUniqueInput!): Section\n  deleteExercise(where: ExerciseWhereUniqueInput!): Exercise\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteTest(where: TestWhereUniqueInput!): Test\n  upsertFile(where: FileWhereUniqueInput!, create: FileCreateInput!, update: FileUpdateInput!): File!\n  upsertTestData(where: TestDataWhereUniqueInput!, create: TestDataCreateInput!, update: TestDataUpdateInput!): TestData!\n  upsertExerciseData(where: ExerciseDataWhereUniqueInput!, create: ExerciseDataCreateInput!, update: ExerciseDataUpdateInput!): ExerciseData!\n  upsertRole(where: RoleWhereUniqueInput!, create: RoleCreateInput!, update: RoleUpdateInput!): Role!\n  upsertResult(where: ResultWhereUniqueInput!, create: ResultCreateInput!, update: ResultUpdateInput!): Result!\n  upsertSection(where: SectionWhereUniqueInput!, create: SectionCreateInput!, update: SectionUpdateInput!): Section!\n  upsertExercise(where: ExerciseWhereUniqueInput!, create: ExerciseCreateInput!, update: ExerciseUpdateInput!): Exercise!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertTest(where: TestWhereUniqueInput!, create: TestCreateInput!, update: TestUpdateInput!): Test!\n  updateManyFiles(data: FileUpdateInput!, where: FileWhereInput): BatchPayload!\n  updateManyTestDatas(data: TestDataUpdateInput!, where: TestDataWhereInput): BatchPayload!\n  updateManyExerciseDatas(data: ExerciseDataUpdateInput!, where: ExerciseDataWhereInput): BatchPayload!\n  updateManyRoles(data: RoleUpdateInput!, where: RoleWhereInput): BatchPayload!\n  updateManyResults(data: ResultUpdateInput!, where: ResultWhereInput): BatchPayload!\n  updateManySections(data: SectionUpdateInput!, where: SectionWhereInput): BatchPayload!\n  updateManyExercises(data: ExerciseUpdateInput!, where: ExerciseWhereInput): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  updateManyTests(data: TestUpdateInput!, where: TestWhereInput): BatchPayload!\n  deleteManyFiles(where: FileWhereInput): BatchPayload!\n  deleteManyTestDatas(where: TestDataWhereInput): BatchPayload!\n  deleteManyExerciseDatas(where: ExerciseDataWhereInput): BatchPayload!\n  deleteManyRoles(where: RoleWhereInput): BatchPayload!\n  deleteManyResults(where: ResultWhereInput): BatchPayload!\n  deleteManySections(where: SectionWhereInput): BatchPayload!\n  deleteManyExercises(where: ExerciseWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyTests(where: TestWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  files(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [File]!\n  testDatas(where: TestDataWhereInput, orderBy: TestDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TestData]!\n  exerciseDatas(where: ExerciseDataWhereInput, orderBy: ExerciseDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ExerciseData]!\n  roles(where: RoleWhereInput, orderBy: RoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Role]!\n  results(where: ResultWhereInput, orderBy: ResultOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Result]!\n  sections(where: SectionWhereInput, orderBy: SectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Section]!\n  exercises(where: ExerciseWhereInput, orderBy: ExerciseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Exercise]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  tests(where: TestWhereInput, orderBy: TestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Test]!\n  file(where: FileWhereUniqueInput!): File\n  testData(where: TestDataWhereUniqueInput!): TestData\n  exerciseData(where: ExerciseDataWhereUniqueInput!): ExerciseData\n  role(where: RoleWhereUniqueInput!): Role\n  result(where: ResultWhereUniqueInput!): Result\n  section(where: SectionWhereUniqueInput!): Section\n  exercise(where: ExerciseWhereUniqueInput!): Exercise\n  user(where: UserWhereUniqueInput!): User\n  test(where: TestWhereUniqueInput!): Test\n  filesConnection(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FileConnection!\n  testDatasConnection(where: TestDataWhereInput, orderBy: TestDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TestDataConnection!\n  exerciseDatasConnection(where: ExerciseDataWhereInput, orderBy: ExerciseDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ExerciseDataConnection!\n  rolesConnection(where: RoleWhereInput, orderBy: RoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RoleConnection!\n  resultsConnection(where: ResultWhereInput, orderBy: ResultOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ResultConnection!\n  sectionsConnection(where: SectionWhereInput, orderBy: SectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SectionConnection!\n  exercisesConnection(where: ExerciseWhereInput, orderBy: ExerciseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ExerciseConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  testsConnection(where: TestWhereInput, orderBy: TestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TestConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Result implements Node {\n  id: ID!\n  question: String!\n  response: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ResultConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ResultEdge]!\n  aggregate: AggregateResult!\n}\n\ninput ResultCreateInput {\n  question: String!\n  response: String!\n}\n\ninput ResultCreateManyInput {\n  create: [ResultCreateInput!]\n  connect: [ResultWhereUniqueInput!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ResultEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Result!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum ResultOrderByInput {\n  id_ASC\n  id_DESC\n  question_ASC\n  question_DESC\n  response_ASC\n  response_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ResultPreviousValues {\n  id: ID!\n  question: String!\n  response: String!\n}\n\ntype ResultSubscriptionPayload {\n  mutation: MutationType!\n  node: Result\n  updatedFields: [String!]\n  previousValues: ResultPreviousValues\n}\n\ninput ResultSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ResultSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ResultSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ResultSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ResultWhereInput\n}\n\ninput ResultUpdateDataInput {\n  question: String\n  response: String\n}\n\ninput ResultUpdateInput {\n  question: String\n  response: String\n}\n\ninput ResultUpdateManyInput {\n  create: [ResultCreateInput!]\n  connect: [ResultWhereUniqueInput!]\n  disconnect: [ResultWhereUniqueInput!]\n  delete: [ResultWhereUniqueInput!]\n  update: [ResultUpdateWithWhereUniqueNestedInput!]\n  upsert: [ResultUpsertWithWhereUniqueNestedInput!]\n}\n\ninput ResultUpdateWithWhereUniqueNestedInput {\n  where: ResultWhereUniqueInput!\n  data: ResultUpdateDataInput!\n}\n\ninput ResultUpsertWithWhereUniqueNestedInput {\n  where: ResultWhereUniqueInput!\n  update: ResultUpdateDataInput!\n  create: ResultCreateInput!\n}\n\ninput ResultWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ResultWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ResultWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ResultWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  question: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  question_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  question_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  question_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  question_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  question_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  question_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  question_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  question_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  question_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  question_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  question_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  question_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  question_not_ends_with: String\n  response: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  response_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  response_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  response_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  response_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  response_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  response_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  response_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  response_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  response_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  response_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  response_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  response_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  response_not_ends_with: String\n}\n\ninput ResultWhereUniqueInput {\n  id: ID\n}\n\ntype Role implements Node {\n  id: ID!\n  name: String!\n  description: String\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype RoleConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [RoleEdge]!\n  aggregate: AggregateRole!\n}\n\ninput RoleCreateInput {\n  name: String!\n  description: String\n  users: UserCreateManyInput\n}\n\ninput RoleCreateManyInput {\n  create: [RoleCreateInput!]\n  connect: [RoleWhereUniqueInput!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype RoleEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Role!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum RoleOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  description_ASC\n  description_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype RolePreviousValues {\n  id: ID!\n  name: String!\n  description: String\n}\n\ntype RoleSubscriptionPayload {\n  mutation: MutationType!\n  node: Role\n  updatedFields: [String!]\n  previousValues: RolePreviousValues\n}\n\ninput RoleSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [RoleSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [RoleSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [RoleSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: RoleWhereInput\n}\n\ninput RoleUpdateDataInput {\n  name: String\n  description: String\n  users: UserUpdateManyInput\n}\n\ninput RoleUpdateInput {\n  name: String\n  description: String\n  users: UserUpdateManyInput\n}\n\ninput RoleUpdateManyInput {\n  create: [RoleCreateInput!]\n  connect: [RoleWhereUniqueInput!]\n  disconnect: [RoleWhereUniqueInput!]\n  delete: [RoleWhereUniqueInput!]\n  update: [RoleUpdateWithWhereUniqueNestedInput!]\n  upsert: [RoleUpsertWithWhereUniqueNestedInput!]\n}\n\ninput RoleUpdateWithWhereUniqueNestedInput {\n  where: RoleWhereUniqueInput!\n  data: RoleUpdateDataInput!\n}\n\ninput RoleUpsertWithWhereUniqueNestedInput {\n  where: RoleWhereUniqueInput!\n  update: RoleUpdateDataInput!\n  create: RoleCreateInput!\n}\n\ninput RoleWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [RoleWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [RoleWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [RoleWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  description: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  description_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  description_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  description_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  description_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  description_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  description_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  description_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  description_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  description_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  description_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  description_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  description_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  description_not_ends_with: String\n  users_every: UserWhereInput\n  users_some: UserWhereInput\n  users_none: UserWhereInput\n}\n\ninput RoleWhereUniqueInput {\n  id: ID\n  name: String\n}\n\ntype Section implements Node {\n  id: ID!\n  name: String!\n  description: String\n  enable: Boolean!\n  exercises(where: ExerciseWhereInput, orderBy: ExerciseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Exercise!]\n  tests(where: TestWhereInput, orderBy: TestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Test!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype SectionConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [SectionEdge]!\n  aggregate: AggregateSection!\n}\n\ninput SectionCreateInput {\n  name: String!\n  description: String\n  enable: Boolean\n  exercises: ExerciseCreateManyInput\n  tests: TestCreateManyInput\n}\n\ninput SectionCreateManyInput {\n  create: [SectionCreateInput!]\n  connect: [SectionWhereUniqueInput!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SectionEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Section!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum SectionOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  description_ASC\n  description_DESC\n  enable_ASC\n  enable_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype SectionPreviousValues {\n  id: ID!\n  name: String!\n  description: String\n  enable: Boolean!\n}\n\ntype SectionSubscriptionPayload {\n  mutation: MutationType!\n  node: Section\n  updatedFields: [String!]\n  previousValues: SectionPreviousValues\n}\n\ninput SectionSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [SectionSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [SectionSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [SectionSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: SectionWhereInput\n}\n\ninput SectionUpdateDataInput {\n  name: String\n  description: String\n  enable: Boolean\n  exercises: ExerciseUpdateManyInput\n  tests: TestUpdateManyInput\n}\n\ninput SectionUpdateInput {\n  name: String\n  description: String\n  enable: Boolean\n  exercises: ExerciseUpdateManyInput\n  tests: TestUpdateManyInput\n}\n\ninput SectionUpdateManyInput {\n  create: [SectionCreateInput!]\n  connect: [SectionWhereUniqueInput!]\n  disconnect: [SectionWhereUniqueInput!]\n  delete: [SectionWhereUniqueInput!]\n  update: [SectionUpdateWithWhereUniqueNestedInput!]\n  upsert: [SectionUpsertWithWhereUniqueNestedInput!]\n}\n\ninput SectionUpdateWithWhereUniqueNestedInput {\n  where: SectionWhereUniqueInput!\n  data: SectionUpdateDataInput!\n}\n\ninput SectionUpsertWithWhereUniqueNestedInput {\n  where: SectionWhereUniqueInput!\n  update: SectionUpdateDataInput!\n  create: SectionCreateInput!\n}\n\ninput SectionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [SectionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [SectionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [SectionWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  description: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  description_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  description_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  description_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  description_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  description_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  description_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  description_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  description_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  description_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  description_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  description_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  description_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  description_not_ends_with: String\n  enable: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  enable_not: Boolean\n  exercises_every: ExerciseWhereInput\n  exercises_some: ExerciseWhereInput\n  exercises_none: ExerciseWhereInput\n  tests_every: TestWhereInput\n  tests_some: TestWhereInput\n  tests_none: TestWhereInput\n}\n\ninput SectionWhereUniqueInput {\n  id: ID\n  name: String\n}\n\nenum Sexs {\n  MALE\n  FEMALE\n}\n\ntype Subscription {\n  file(where: FileSubscriptionWhereInput): FileSubscriptionPayload\n  testData(where: TestDataSubscriptionWhereInput): TestDataSubscriptionPayload\n  exerciseData(where: ExerciseDataSubscriptionWhereInput): ExerciseDataSubscriptionPayload\n  role(where: RoleSubscriptionWhereInput): RoleSubscriptionPayload\n  result(where: ResultSubscriptionWhereInput): ResultSubscriptionPayload\n  section(where: SectionSubscriptionWhereInput): SectionSubscriptionPayload\n  exercise(where: ExerciseSubscriptionWhereInput): ExerciseSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  test(where: TestSubscriptionWhereInput): TestSubscriptionPayload\n}\n\ntype Test implements Node {\n  id: ID!\n  type: Types!\n  description: String\n  enable: Boolean!\n  sections(where: SectionWhereInput, orderBy: SectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Section!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TestConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TestEdge]!\n  aggregate: AggregateTest!\n}\n\ninput TestCreateInput {\n  type: Types!\n  description: String\n  enable: Boolean\n  sections: SectionCreateManyInput\n}\n\ninput TestCreateManyInput {\n  create: [TestCreateInput!]\n  connect: [TestWhereUniqueInput!]\n}\n\ntype TestData implements Node {\n  id: ID!\n  type: Types!\n  createdBy(where: UserWhereInput): User!\n  initAt: DateTime!\n  finalAt: DateTime!\n  exerciseDatas(where: ExerciseDataWhereInput, orderBy: ExerciseDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ExerciseData!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TestDataConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TestDataEdge]!\n  aggregate: AggregateTestData!\n}\n\ninput TestDataCreateInput {\n  type: Types!\n  initAt: DateTime!\n  finalAt: DateTime!\n  createdBy: UserCreateOneInput!\n  exerciseDatas: ExerciseDataCreateManyInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TestDataEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: TestData!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum TestDataOrderByInput {\n  id_ASC\n  id_DESC\n  type_ASC\n  type_DESC\n  initAt_ASC\n  initAt_DESC\n  finalAt_ASC\n  finalAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TestDataPreviousValues {\n  id: ID!\n  type: Types!\n  initAt: DateTime!\n  finalAt: DateTime!\n}\n\ntype TestDataSubscriptionPayload {\n  mutation: MutationType!\n  node: TestData\n  updatedFields: [String!]\n  previousValues: TestDataPreviousValues\n}\n\ninput TestDataSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TestDataSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TestDataSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TestDataSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TestDataWhereInput\n}\n\ninput TestDataUpdateInput {\n  type: Types\n  initAt: DateTime\n  finalAt: DateTime\n  createdBy: UserUpdateOneInput\n  exerciseDatas: ExerciseDataUpdateManyInput\n}\n\ninput TestDataWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TestDataWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TestDataWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TestDataWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  type: Types\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  type_not: Types\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  type_in: [Types!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  type_not_in: [Types!]\n  initAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  initAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  initAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  initAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  initAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  initAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  initAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  initAt_gte: DateTime\n  finalAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  finalAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  finalAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  finalAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  finalAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  finalAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  finalAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  finalAt_gte: DateTime\n  createdBy: UserWhereInput\n  exerciseDatas_every: ExerciseDataWhereInput\n  exerciseDatas_some: ExerciseDataWhereInput\n  exerciseDatas_none: ExerciseDataWhereInput\n}\n\ninput TestDataWhereUniqueInput {\n  id: ID\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TestEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Test!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum TestOrderByInput {\n  id_ASC\n  id_DESC\n  type_ASC\n  type_DESC\n  description_ASC\n  description_DESC\n  enable_ASC\n  enable_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype TestPreviousValues {\n  id: ID!\n  type: Types!\n  description: String\n  enable: Boolean!\n}\n\ntype TestSubscriptionPayload {\n  mutation: MutationType!\n  node: Test\n  updatedFields: [String!]\n  previousValues: TestPreviousValues\n}\n\ninput TestSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TestSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TestSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TestSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: TestWhereInput\n}\n\ninput TestUpdateDataInput {\n  type: Types\n  description: String\n  enable: Boolean\n  sections: SectionUpdateManyInput\n}\n\ninput TestUpdateInput {\n  type: Types\n  description: String\n  enable: Boolean\n  sections: SectionUpdateManyInput\n}\n\ninput TestUpdateManyInput {\n  create: [TestCreateInput!]\n  connect: [TestWhereUniqueInput!]\n  disconnect: [TestWhereUniqueInput!]\n  delete: [TestWhereUniqueInput!]\n  update: [TestUpdateWithWhereUniqueNestedInput!]\n  upsert: [TestUpsertWithWhereUniqueNestedInput!]\n}\n\ninput TestUpdateWithWhereUniqueNestedInput {\n  where: TestWhereUniqueInput!\n  data: TestUpdateDataInput!\n}\n\ninput TestUpsertWithWhereUniqueNestedInput {\n  where: TestWhereUniqueInput!\n  update: TestUpdateDataInput!\n  create: TestCreateInput!\n}\n\ninput TestWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [TestWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [TestWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [TestWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  type: Types\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  type_not: Types\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  type_in: [Types!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  type_not_in: [Types!]\n  description: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  description_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  description_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  description_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  description_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  description_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  description_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  description_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  description_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  description_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  description_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  description_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  description_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  description_not_ends_with: String\n  enable: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  enable_not: Boolean\n  sections_every: SectionWhereInput\n  sections_some: SectionWhereInput\n  sections_none: SectionWhereInput\n}\n\ninput TestWhereUniqueInput {\n  id: ID\n}\n\nenum Types {\n  INICIAL\n  ENFOCADA\n  SOSTENIDA\n  SELECTIVA\n  ALTERNADA\n  DIVIDIDA\n}\n\ntype User implements Node {\n  id: ID!\n  email: String!\n  password: String\n  firstname: String!\n  lastname: String!\n  birthdate: DateTime!\n  sex: Sexs!\n  roles(where: RoleWhereInput, orderBy: RoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Role!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  password: String\n  firstname: String!\n  lastname: String!\n  birthdate: DateTime!\n  sex: Sexs!\n  roles: RoleCreateManyInput\n}\n\ninput UserCreateManyInput {\n  create: [UserCreateInput!]\n  connect: [UserWhereUniqueInput!]\n}\n\ninput UserCreateOneInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  firstname_ASC\n  firstname_DESC\n  lastname_ASC\n  lastname_DESC\n  birthdate_ASC\n  birthdate_DESC\n  sex_ASC\n  sex_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  password: String\n  firstname: String!\n  lastname: String!\n  birthdate: DateTime!\n  sex: Sexs!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateDataInput {\n  email: String\n  password: String\n  firstname: String\n  lastname: String\n  birthdate: DateTime\n  sex: Sexs\n  roles: RoleUpdateManyInput\n}\n\ninput UserUpdateInput {\n  email: String\n  password: String\n  firstname: String\n  lastname: String\n  birthdate: DateTime\n  sex: Sexs\n  roles: RoleUpdateManyInput\n}\n\ninput UserUpdateManyInput {\n  create: [UserCreateInput!]\n  connect: [UserWhereUniqueInput!]\n  disconnect: [UserWhereUniqueInput!]\n  delete: [UserWhereUniqueInput!]\n  update: [UserUpdateWithWhereUniqueNestedInput!]\n  upsert: [UserUpsertWithWhereUniqueNestedInput!]\n}\n\ninput UserUpdateOneInput {\n  create: UserCreateInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateDataInput\n  upsert: UserUpsertNestedInput\n}\n\ninput UserUpdateWithWhereUniqueNestedInput {\n  where: UserWhereUniqueInput!\n  data: UserUpdateDataInput!\n}\n\ninput UserUpsertNestedInput {\n  update: UserUpdateDataInput!\n  create: UserCreateInput!\n}\n\ninput UserUpsertWithWhereUniqueNestedInput {\n  where: UserWhereUniqueInput!\n  update: UserUpdateDataInput!\n  create: UserCreateInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  email: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  email_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  email_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  email_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  email_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  email_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  email_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  email_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  email_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  email_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  email_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  email_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  email_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  email_not_ends_with: String\n  password: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  password_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  password_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  password_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  password_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  password_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  password_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  password_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  password_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  password_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  password_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  password_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  password_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  password_not_ends_with: String\n  firstname: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  firstname_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  firstname_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  firstname_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  firstname_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  firstname_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  firstname_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  firstname_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  firstname_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  firstname_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  firstname_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  firstname_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  firstname_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  firstname_not_ends_with: String\n  lastname: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  lastname_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  lastname_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  lastname_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  lastname_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  lastname_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  lastname_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  lastname_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  lastname_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  lastname_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  lastname_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  lastname_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  lastname_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  lastname_not_ends_with: String\n  birthdate: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  birthdate_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  birthdate_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  birthdate_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  birthdate_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  birthdate_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  birthdate_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  birthdate_gte: DateTime\n  sex: Sexs\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  sex_not: Sexs\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  sex_in: [Sexs!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  sex_not_in: [Sexs!]\n  roles_every: RoleWhereInput\n  roles_some: RoleWhereInput\n  roles_none: RoleWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 59,
      "containsCycle": true,
      "numDefinitions": 163
    }
  ],
  "metrics": {
    "created_at": "2018-09-12T18:01:07Z",
    "updated_at": "2018-11-19T17:44:22Z",
    "pushed_at": "2018-11-19T17:44:21Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}