{
  "repo_name": "screenformation-gridiator",
  "repo_full_name": "andycmaj/screenformation-gridiator",
  "repo_owner": "andycmaj",
  "repo_description": "screen grid controller",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "lib/generated/prisma.graphql",
      "sha": "40677684f4480c622983d4f96cf88b01bef912e8",
      "url": "https://api.github.com/repositories/180050380/contents/lib/generated/prisma.graphql?ref=9dc38cf3a64e97d7187da9bedd229f8613b3faec",
      "git_url": "https://api.github.com/repositories/180050380/git/blobs/40677684f4480c622983d4f96cf88b01bef912e8",
      "html_url": "https://github.com/andycmaj/screenformation-gridiator/blob/9dc38cf3a64e97d7187da9bedd229f8613b3faec/lib/generated/prisma.graphql",
      "content": "type AggregateContent {\n  count: Int!\n}\n\ntype AggregatePane {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype AggregateViewer {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\ntype Content {\n  id: ID!\n  title: String!\n  url: String\n}\n\ntype ContentConnection {\n  pageInfo: PageInfo!\n  edges: [ContentEdge]!\n  aggregate: AggregateContent!\n}\n\ninput ContentCreateInput {\n  title: String!\n  url: String\n}\n\ninput ContentCreateOneInput {\n  create: ContentCreateInput\n  connect: ContentWhereUniqueInput\n}\n\ntype ContentEdge {\n  node: Content!\n  cursor: String!\n}\n\nenum ContentOrderByInput {\n  id_ASC\n  id_DESC\n  title_ASC\n  title_DESC\n  url_ASC\n  url_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype ContentPreviousValues {\n  id: ID!\n  title: String!\n  url: String\n}\n\ntype ContentSubscriptionPayload {\n  mutation: MutationType!\n  node: Content\n  updatedFields: [String!]\n  previousValues: ContentPreviousValues\n}\n\ninput ContentSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: ContentWhereInput\n  AND: [ContentSubscriptionWhereInput!]\n  OR: [ContentSubscriptionWhereInput!]\n  NOT: [ContentSubscriptionWhereInput!]\n}\n\ninput ContentUpdateDataInput {\n  title: String\n  url: String\n}\n\ninput ContentUpdateInput {\n  title: String\n  url: String\n}\n\ninput ContentUpdateManyMutationInput {\n  title: String\n  url: String\n}\n\ninput ContentUpdateOneInput {\n  create: ContentCreateInput\n  update: ContentUpdateDataInput\n  upsert: ContentUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: ContentWhereUniqueInput\n}\n\ninput ContentUpsertNestedInput {\n  update: ContentUpdateDataInput!\n  create: ContentCreateInput!\n}\n\ninput ContentWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  title: String\n  title_not: String\n  title_in: [String!]\n  title_not_in: [String!]\n  title_lt: String\n  title_lte: String\n  title_gt: String\n  title_gte: String\n  title_contains: String\n  title_not_contains: String\n  title_starts_with: String\n  title_not_starts_with: String\n  title_ends_with: String\n  title_not_ends_with: String\n  url: String\n  url_not: String\n  url_in: [String!]\n  url_not_in: [String!]\n  url_lt: String\n  url_lte: String\n  url_gt: String\n  url_gte: String\n  url_contains: String\n  url_not_contains: String\n  url_starts_with: String\n  url_not_starts_with: String\n  url_ends_with: String\n  url_not_ends_with: String\n  AND: [ContentWhereInput!]\n  OR: [ContentWhereInput!]\n  NOT: [ContentWhereInput!]\n}\n\ninput ContentWhereUniqueInput {\n  id: ID\n  title: String\n}\n\nscalar Long\n\ntype Mutation {\n  createContent(data: ContentCreateInput!): Content!\n  updateContent(data: ContentUpdateInput!, where: ContentWhereUniqueInput!): Content\n  updateManyContents(data: ContentUpdateManyMutationInput!, where: ContentWhereInput): BatchPayload!\n  upsertContent(where: ContentWhereUniqueInput!, create: ContentCreateInput!, update: ContentUpdateInput!): Content!\n  deleteContent(where: ContentWhereUniqueInput!): Content\n  deleteManyContents(where: ContentWhereInput): BatchPayload!\n  createPane(data: PaneCreateInput!): Pane!\n  updatePane(data: PaneUpdateInput!, where: PaneWhereUniqueInput!): Pane\n  updateManyPanes(data: PaneUpdateManyMutationInput!, where: PaneWhereInput): BatchPayload!\n  upsertPane(where: PaneWhereUniqueInput!, create: PaneCreateInput!, update: PaneUpdateInput!): Pane!\n  deletePane(where: PaneWhereUniqueInput!): Pane\n  deleteManyPanes(where: PaneWhereInput): BatchPayload!\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  createViewer(data: ViewerCreateInput!): Viewer!\n  updateViewer(data: ViewerUpdateInput!, where: ViewerWhereUniqueInput!): Viewer\n  updateManyViewers(data: ViewerUpdateManyMutationInput!, where: ViewerWhereInput): BatchPayload!\n  upsertViewer(where: ViewerWhereUniqueInput!, create: ViewerCreateInput!, update: ViewerUpdateInput!): Viewer!\n  deleteViewer(where: ViewerWhereUniqueInput!): Viewer\n  deleteManyViewers(where: ViewerWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Pane {\n  id: ID!\n  rowStart: Int!\n  rowSpan: Int!\n  colStart: Int!\n  colSpan: Int!\n  content: Content\n  viewer: Viewer!\n}\n\ntype PaneConnection {\n  pageInfo: PageInfo!\n  edges: [PaneEdge]!\n  aggregate: AggregatePane!\n}\n\ninput PaneCreateInput {\n  rowStart: Int!\n  rowSpan: Int!\n  colStart: Int!\n  colSpan: Int!\n  content: ContentCreateOneInput\n  viewer: ViewerCreateOneWithoutActivePanesInput!\n}\n\ninput PaneCreateManyWithoutViewerInput {\n  create: [PaneCreateWithoutViewerInput!]\n  connect: [PaneWhereUniqueInput!]\n}\n\ninput PaneCreateWithoutViewerInput {\n  rowStart: Int!\n  rowSpan: Int!\n  colStart: Int!\n  colSpan: Int!\n  content: ContentCreateOneInput\n}\n\ntype PaneEdge {\n  node: Pane!\n  cursor: String!\n}\n\nenum PaneOrderByInput {\n  id_ASC\n  id_DESC\n  rowStart_ASC\n  rowStart_DESC\n  rowSpan_ASC\n  rowSpan_DESC\n  colStart_ASC\n  colStart_DESC\n  colSpan_ASC\n  colSpan_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype PanePreviousValues {\n  id: ID!\n  rowStart: Int!\n  rowSpan: Int!\n  colStart: Int!\n  colSpan: Int!\n}\n\ninput PaneScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  rowStart: Int\n  rowStart_not: Int\n  rowStart_in: [Int!]\n  rowStart_not_in: [Int!]\n  rowStart_lt: Int\n  rowStart_lte: Int\n  rowStart_gt: Int\n  rowStart_gte: Int\n  rowSpan: Int\n  rowSpan_not: Int\n  rowSpan_in: [Int!]\n  rowSpan_not_in: [Int!]\n  rowSpan_lt: Int\n  rowSpan_lte: Int\n  rowSpan_gt: Int\n  rowSpan_gte: Int\n  colStart: Int\n  colStart_not: Int\n  colStart_in: [Int!]\n  colStart_not_in: [Int!]\n  colStart_lt: Int\n  colStart_lte: Int\n  colStart_gt: Int\n  colStart_gte: Int\n  colSpan: Int\n  colSpan_not: Int\n  colSpan_in: [Int!]\n  colSpan_not_in: [Int!]\n  colSpan_lt: Int\n  colSpan_lte: Int\n  colSpan_gt: Int\n  colSpan_gte: Int\n  AND: [PaneScalarWhereInput!]\n  OR: [PaneScalarWhereInput!]\n  NOT: [PaneScalarWhereInput!]\n}\n\ntype PaneSubscriptionPayload {\n  mutation: MutationType!\n  node: Pane\n  updatedFields: [String!]\n  previousValues: PanePreviousValues\n}\n\ninput PaneSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: PaneWhereInput\n  AND: [PaneSubscriptionWhereInput!]\n  OR: [PaneSubscriptionWhereInput!]\n  NOT: [PaneSubscriptionWhereInput!]\n}\n\ninput PaneUpdateInput {\n  rowStart: Int\n  rowSpan: Int\n  colStart: Int\n  colSpan: Int\n  content: ContentUpdateOneInput\n  viewer: ViewerUpdateOneRequiredWithoutActivePanesInput\n}\n\ninput PaneUpdateManyDataInput {\n  rowStart: Int\n  rowSpan: Int\n  colStart: Int\n  colSpan: Int\n}\n\ninput PaneUpdateManyMutationInput {\n  rowStart: Int\n  rowSpan: Int\n  colStart: Int\n  colSpan: Int\n}\n\ninput PaneUpdateManyWithoutViewerInput {\n  create: [PaneCreateWithoutViewerInput!]\n  delete: [PaneWhereUniqueInput!]\n  connect: [PaneWhereUniqueInput!]\n  set: [PaneWhereUniqueInput!]\n  disconnect: [PaneWhereUniqueInput!]\n  update: [PaneUpdateWithWhereUniqueWithoutViewerInput!]\n  upsert: [PaneUpsertWithWhereUniqueWithoutViewerInput!]\n  deleteMany: [PaneScalarWhereInput!]\n  updateMany: [PaneUpdateManyWithWhereNestedInput!]\n}\n\ninput PaneUpdateManyWithWhereNestedInput {\n  where: PaneScalarWhereInput!\n  data: PaneUpdateManyDataInput!\n}\n\ninput PaneUpdateWithoutViewerDataInput {\n  rowStart: Int\n  rowSpan: Int\n  colStart: Int\n  colSpan: Int\n  content: ContentUpdateOneInput\n}\n\ninput PaneUpdateWithWhereUniqueWithoutViewerInput {\n  where: PaneWhereUniqueInput!\n  data: PaneUpdateWithoutViewerDataInput!\n}\n\ninput PaneUpsertWithWhereUniqueWithoutViewerInput {\n  where: PaneWhereUniqueInput!\n  update: PaneUpdateWithoutViewerDataInput!\n  create: PaneCreateWithoutViewerInput!\n}\n\ninput PaneWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  rowStart: Int\n  rowStart_not: Int\n  rowStart_in: [Int!]\n  rowStart_not_in: [Int!]\n  rowStart_lt: Int\n  rowStart_lte: Int\n  rowStart_gt: Int\n  rowStart_gte: Int\n  rowSpan: Int\n  rowSpan_not: Int\n  rowSpan_in: [Int!]\n  rowSpan_not_in: [Int!]\n  rowSpan_lt: Int\n  rowSpan_lte: Int\n  rowSpan_gt: Int\n  rowSpan_gte: Int\n  colStart: Int\n  colStart_not: Int\n  colStart_in: [Int!]\n  colStart_not_in: [Int!]\n  colStart_lt: Int\n  colStart_lte: Int\n  colStart_gt: Int\n  colStart_gte: Int\n  colSpan: Int\n  colSpan_not: Int\n  colSpan_in: [Int!]\n  colSpan_not_in: [Int!]\n  colSpan_lt: Int\n  colSpan_lte: Int\n  colSpan_gt: Int\n  colSpan_gte: Int\n  content: ContentWhereInput\n  viewer: ViewerWhereInput\n  AND: [PaneWhereInput!]\n  OR: [PaneWhereInput!]\n  NOT: [PaneWhereInput!]\n}\n\ninput PaneWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  content(where: ContentWhereUniqueInput!): Content\n  contents(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content]!\n  contentsConnection(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ContentConnection!\n  pane(where: PaneWhereUniqueInput!): Pane\n  panes(where: PaneWhereInput, orderBy: PaneOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Pane]!\n  panesConnection(where: PaneWhereInput, orderBy: PaneOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PaneConnection!\n  user(where: UserWhereUniqueInput!): User\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  viewer(where: ViewerWhereUniqueInput!): Viewer\n  viewers(where: ViewerWhereInput, orderBy: ViewerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Viewer]!\n  viewersConnection(where: ViewerWhereInput, orderBy: ViewerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ViewerConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  content(where: ContentSubscriptionWhereInput): ContentSubscriptionPayload\n  pane(where: PaneSubscriptionWhereInput): PaneSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  viewer(where: ViewerSubscriptionWhereInput): ViewerSubscriptionPayload\n}\n\ntype User {\n  id: ID!\n  name: String!\n  viewer: Viewer\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n  viewer: ViewerCreateOneInput\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n}\n\ninput UserUpdateInput {\n  name: String\n  viewer: ViewerUpdateOneInput\n}\n\ninput UserUpdateManyMutationInput {\n  name: String\n}\n\ninput UserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  viewer: ViewerWhereInput\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n}\n\ntype Viewer {\n  id: ID!\n  name: String!\n  rowCount: Int!\n  colCount: Int!\n  activePanes(where: PaneWhereInput, orderBy: PaneOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Pane!]\n}\n\ntype ViewerConnection {\n  pageInfo: PageInfo!\n  edges: [ViewerEdge]!\n  aggregate: AggregateViewer!\n}\n\ninput ViewerCreateInput {\n  name: String!\n  rowCount: Int!\n  colCount: Int!\n  activePanes: PaneCreateManyWithoutViewerInput\n}\n\ninput ViewerCreateOneInput {\n  create: ViewerCreateInput\n  connect: ViewerWhereUniqueInput\n}\n\ninput ViewerCreateOneWithoutActivePanesInput {\n  create: ViewerCreateWithoutActivePanesInput\n  connect: ViewerWhereUniqueInput\n}\n\ninput ViewerCreateWithoutActivePanesInput {\n  name: String!\n  rowCount: Int!\n  colCount: Int!\n}\n\ntype ViewerEdge {\n  node: Viewer!\n  cursor: String!\n}\n\nenum ViewerOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  rowCount_ASC\n  rowCount_DESC\n  colCount_ASC\n  colCount_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype ViewerPreviousValues {\n  id: ID!\n  name: String!\n  rowCount: Int!\n  colCount: Int!\n}\n\ntype ViewerSubscriptionPayload {\n  mutation: MutationType!\n  node: Viewer\n  updatedFields: [String!]\n  previousValues: ViewerPreviousValues\n}\n\ninput ViewerSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: ViewerWhereInput\n  AND: [ViewerSubscriptionWhereInput!]\n  OR: [ViewerSubscriptionWhereInput!]\n  NOT: [ViewerSubscriptionWhereInput!]\n}\n\ninput ViewerUpdateDataInput {\n  name: String\n  rowCount: Int\n  colCount: Int\n  activePanes: PaneUpdateManyWithoutViewerInput\n}\n\ninput ViewerUpdateInput {\n  name: String\n  rowCount: Int\n  colCount: Int\n  activePanes: PaneUpdateManyWithoutViewerInput\n}\n\ninput ViewerUpdateManyMutationInput {\n  name: String\n  rowCount: Int\n  colCount: Int\n}\n\ninput ViewerUpdateOneInput {\n  create: ViewerCreateInput\n  update: ViewerUpdateDataInput\n  upsert: ViewerUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: ViewerWhereUniqueInput\n}\n\ninput ViewerUpdateOneRequiredWithoutActivePanesInput {\n  create: ViewerCreateWithoutActivePanesInput\n  update: ViewerUpdateWithoutActivePanesDataInput\n  upsert: ViewerUpsertWithoutActivePanesInput\n  connect: ViewerWhereUniqueInput\n}\n\ninput ViewerUpdateWithoutActivePanesDataInput {\n  name: String\n  rowCount: Int\n  colCount: Int\n}\n\ninput ViewerUpsertNestedInput {\n  update: ViewerUpdateDataInput!\n  create: ViewerCreateInput!\n}\n\ninput ViewerUpsertWithoutActivePanesInput {\n  update: ViewerUpdateWithoutActivePanesDataInput!\n  create: ViewerCreateWithoutActivePanesInput!\n}\n\ninput ViewerWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  rowCount: Int\n  rowCount_not: Int\n  rowCount_in: [Int!]\n  rowCount_not_in: [Int!]\n  rowCount_lt: Int\n  rowCount_lte: Int\n  rowCount_gt: Int\n  rowCount_gte: Int\n  colCount: Int\n  colCount_not: Int\n  colCount_in: [Int!]\n  colCount_not_in: [Int!]\n  colCount_lt: Int\n  colCount_lte: Int\n  colCount_gt: Int\n  colCount_gte: Int\n  activePanes_every: PaneWhereInput\n  activePanes_some: PaneWhereInput\n  activePanes_none: PaneWhereInput\n  AND: [ViewerWhereInput!]\n  OR: [ViewerWhereInput!]\n  NOT: [ViewerWhereInput!]\n}\n\ninput ViewerWhereUniqueInput {\n  id: ID\n  name: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 29,
      "containsCycle": true,
      "numDefinitions": 82
    }
  ],
  "metrics": {
    "created_at": "2019-04-08T01:58:16Z",
    "updated_at": "2019-04-17T06:45:01Z",
    "pushed_at": "2019-04-17T06:44:59Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}