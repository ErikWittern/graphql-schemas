{
  "repo_name": "vichurch-archive",
  "repo_full_name": "write-for-christ/vichurch-archive",
  "repo_owner": "write-for-CHRIST",
  "repo_description": "Vietnamese Church Management Platform",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "server/graph/src/generated/prisma.graphql",
      "sha": "d96819c6357682439a9cfbb45b71b96a82d2d11e",
      "url": "https://api.github.com/repositories/131318317/contents/server/graph/src/generated/prisma.graphql?ref=9f171950556d52e7a802f9768c6b53f320b5bc85",
      "git_url": "https://api.github.com/repositories/131318317/git/blobs/d96819c6357682439a9cfbb45b71b96a82d2d11e",
      "html_url": "https://github.com/write-for-CHRIST/vichurch-archive/blob/9f171950556d52e7a802f9768c6b53f320b5bc85/server/graph/src/generated/prisma.graphql",
      "content": "# source: http://localhost:4466\n# timestamp: Tue May 08 2018 04:49:49 GMT+0700 (+07)\n\ntype AggregateBooking {\n  count: Int!\n}\n\ntype AggregateBookingInfo {\n  count: Int!\n}\n\ntype AggregateChurch {\n  count: Int!\n}\n\ntype AggregateDepartment {\n  count: Int!\n}\n\ntype AggregateDisciple {\n  count: Int!\n}\n\ntype AggregateFloor {\n  count: Int!\n}\n\ntype AggregatePost {\n  count: Int!\n}\n\ntype AggregateRoom {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\ntype Booking implements Node {\n  id: ID!\n  createdAt: DateTime!\n  startDate: DateTime!\n  endDate: DateTime!\n  _bookee(where: UserWhereInput): User!\n  _room(where: RoomWhereInput): Room!\n  _info(where: BookingInfoWhereInput): BookingInfo!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype BookingConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [BookingEdge]!\n  aggregate: AggregateBooking!\n}\n\ninput BookingCreateInput {\n  startDate: DateTime!\n  endDate: DateTime!\n  _bookee: UserCreateOneWithout_bookingsInput!\n  _room: RoomCreateOneInput!\n  _info: BookingInfoCreateOneWithout_bookingInput!\n}\n\ninput BookingCreateManyWithout_bookeeInput {\n  create: [BookingCreateWithout_bookeeInput!]\n  connect: [BookingWhereUniqueInput!]\n}\n\ninput BookingCreateOneWithout_infoInput {\n  create: BookingCreateWithout_infoInput\n  connect: BookingWhereUniqueInput\n}\n\ninput BookingCreateWithout_bookeeInput {\n  startDate: DateTime!\n  endDate: DateTime!\n  _room: RoomCreateOneInput!\n  _info: BookingInfoCreateOneWithout_bookingInput!\n}\n\ninput BookingCreateWithout_infoInput {\n  startDate: DateTime!\n  endDate: DateTime!\n  _bookee: UserCreateOneWithout_bookingsInput!\n  _room: RoomCreateOneInput!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BookingEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Booking!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\ntype BookingInfo implements Node {\n  id: ID!\n  status: BookingStatus!\n  _approver(where: UserWhereInput): User!\n  _booking(where: BookingWhereInput): Booking!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype BookingInfoConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [BookingInfoEdge]!\n  aggregate: AggregateBookingInfo!\n}\n\ninput BookingInfoCreateInput {\n  status: BookingStatus!\n  _approver: UserCreateOneWithout_approvedInput!\n  _booking: BookingCreateOneWithout_infoInput!\n}\n\ninput BookingInfoCreateManyWithout_approverInput {\n  create: [BookingInfoCreateWithout_approverInput!]\n  connect: [BookingInfoWhereUniqueInput!]\n}\n\ninput BookingInfoCreateOneWithout_bookingInput {\n  create: BookingInfoCreateWithout_bookingInput\n  connect: BookingInfoWhereUniqueInput\n}\n\ninput BookingInfoCreateWithout_approverInput {\n  status: BookingStatus!\n  _booking: BookingCreateOneWithout_infoInput!\n}\n\ninput BookingInfoCreateWithout_bookingInput {\n  status: BookingStatus!\n  _approver: UserCreateOneWithout_approvedInput!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BookingInfoEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: BookingInfo!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum BookingInfoOrderByInput {\n  id_ASC\n  id_DESC\n  status_ASC\n  status_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BookingInfoPreviousValues {\n  id: ID!\n  status: BookingStatus!\n}\n\ntype BookingInfoSubscriptionPayload {\n  mutation: MutationType!\n  node: BookingInfo\n  updatedFields: [String!]\n  previousValues: BookingInfoPreviousValues\n}\n\ninput BookingInfoSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [BookingInfoSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [BookingInfoSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [BookingInfoSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BookingInfoWhereInput\n}\n\ninput BookingInfoUpdateInput {\n  status: BookingStatus\n  _approver: UserUpdateOneWithout_approvedInput\n  _booking: BookingUpdateOneWithout_infoInput\n}\n\ninput BookingInfoUpdateManyWithout_approverInput {\n  create: [BookingInfoCreateWithout_approverInput!]\n  connect: [BookingInfoWhereUniqueInput!]\n  disconnect: [BookingInfoWhereUniqueInput!]\n  delete: [BookingInfoWhereUniqueInput!]\n  update: [BookingInfoUpdateWithWhereUniqueWithout_approverInput!]\n  upsert: [BookingInfoUpsertWithWhereUniqueWithout_approverInput!]\n}\n\ninput BookingInfoUpdateOneWithout_bookingInput {\n  create: BookingInfoCreateWithout_bookingInput\n  connect: BookingInfoWhereUniqueInput\n  delete: Boolean\n  update: BookingInfoUpdateWithout_bookingDataInput\n  upsert: BookingInfoUpsertWithout_bookingInput\n}\n\ninput BookingInfoUpdateWithout_approverDataInput {\n  status: BookingStatus\n  _booking: BookingUpdateOneWithout_infoInput\n}\n\ninput BookingInfoUpdateWithout_bookingDataInput {\n  status: BookingStatus\n  _approver: UserUpdateOneWithout_approvedInput\n}\n\ninput BookingInfoUpdateWithWhereUniqueWithout_approverInput {\n  where: BookingInfoWhereUniqueInput!\n  data: BookingInfoUpdateWithout_approverDataInput!\n}\n\ninput BookingInfoUpsertWithout_bookingInput {\n  update: BookingInfoUpdateWithout_bookingDataInput!\n  create: BookingInfoCreateWithout_bookingInput!\n}\n\ninput BookingInfoUpsertWithWhereUniqueWithout_approverInput {\n  where: BookingInfoWhereUniqueInput!\n  update: BookingInfoUpdateWithout_approverDataInput!\n  create: BookingInfoCreateWithout_approverInput!\n}\n\ninput BookingInfoWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [BookingInfoWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [BookingInfoWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [BookingInfoWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  status: BookingStatus\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  status_not: BookingStatus\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  status_in: [BookingStatus!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  status_not_in: [BookingStatus!]\n  _approver: UserWhereInput\n  _booking: BookingWhereInput\n}\n\ninput BookingInfoWhereUniqueInput {\n  id: ID\n}\n\nenum BookingOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  startDate_ASC\n  startDate_DESC\n  endDate_ASC\n  endDate_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype BookingPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  startDate: DateTime!\n  endDate: DateTime!\n}\n\nenum BookingStatus {\n  PENDING\n  APPROVED\n  REJECTED\n}\n\ntype BookingSubscriptionPayload {\n  mutation: MutationType!\n  node: Booking\n  updatedFields: [String!]\n  previousValues: BookingPreviousValues\n}\n\ninput BookingSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [BookingSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [BookingSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [BookingSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BookingWhereInput\n}\n\ninput BookingUpdateInput {\n  startDate: DateTime\n  endDate: DateTime\n  _bookee: UserUpdateOneWithout_bookingsInput\n  _room: RoomUpdateOneInput\n  _info: BookingInfoUpdateOneWithout_bookingInput\n}\n\ninput BookingUpdateManyWithout_bookeeInput {\n  create: [BookingCreateWithout_bookeeInput!]\n  connect: [BookingWhereUniqueInput!]\n  disconnect: [BookingWhereUniqueInput!]\n  delete: [BookingWhereUniqueInput!]\n  update: [BookingUpdateWithWhereUniqueWithout_bookeeInput!]\n  upsert: [BookingUpsertWithWhereUniqueWithout_bookeeInput!]\n}\n\ninput BookingUpdateOneWithout_infoInput {\n  create: BookingCreateWithout_infoInput\n  connect: BookingWhereUniqueInput\n  delete: Boolean\n  update: BookingUpdateWithout_infoDataInput\n  upsert: BookingUpsertWithout_infoInput\n}\n\ninput BookingUpdateWithout_bookeeDataInput {\n  startDate: DateTime\n  endDate: DateTime\n  _room: RoomUpdateOneInput\n  _info: BookingInfoUpdateOneWithout_bookingInput\n}\n\ninput BookingUpdateWithout_infoDataInput {\n  startDate: DateTime\n  endDate: DateTime\n  _bookee: UserUpdateOneWithout_bookingsInput\n  _room: RoomUpdateOneInput\n}\n\ninput BookingUpdateWithWhereUniqueWithout_bookeeInput {\n  where: BookingWhereUniqueInput!\n  data: BookingUpdateWithout_bookeeDataInput!\n}\n\ninput BookingUpsertWithout_infoInput {\n  update: BookingUpdateWithout_infoDataInput!\n  create: BookingCreateWithout_infoInput!\n}\n\ninput BookingUpsertWithWhereUniqueWithout_bookeeInput {\n  where: BookingWhereUniqueInput!\n  update: BookingUpdateWithout_bookeeDataInput!\n  create: BookingCreateWithout_bookeeInput!\n}\n\ninput BookingWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [BookingWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [BookingWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [BookingWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  startDate: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  startDate_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  startDate_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  startDate_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  startDate_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  startDate_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  startDate_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  startDate_gte: DateTime\n  endDate: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  endDate_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  endDate_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  endDate_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  endDate_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  endDate_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  endDate_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  endDate_gte: DateTime\n  _bookee: UserWhereInput\n  _room: RoomWhereInput\n  _info: BookingInfoWhereInput\n}\n\ninput BookingWhereUniqueInput {\n  id: ID\n}\n\ntype Church implements Node {\n  id: ID!\n  domain: String!\n  name: String!\n  _floors(where: FloorWhereInput, orderBy: FloorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Floor!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ChurchConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ChurchEdge]!\n  aggregate: AggregateChurch!\n}\n\ninput ChurchCreateInput {\n  domain: String!\n  name: String!\n  _floors: FloorCreateManyWithout_churchInput\n}\n\ninput ChurchCreateOneWithout_floorsInput {\n  create: ChurchCreateWithout_floorsInput\n  connect: ChurchWhereUniqueInput\n}\n\ninput ChurchCreateWithout_floorsInput {\n  domain: String!\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ChurchEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Church!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum ChurchOrderByInput {\n  id_ASC\n  id_DESC\n  domain_ASC\n  domain_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype ChurchPreviousValues {\n  id: ID!\n  domain: String!\n  name: String!\n}\n\ntype ChurchSubscriptionPayload {\n  mutation: MutationType!\n  node: Church\n  updatedFields: [String!]\n  previousValues: ChurchPreviousValues\n}\n\ninput ChurchSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ChurchSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ChurchSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ChurchSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ChurchWhereInput\n}\n\ninput ChurchUpdateInput {\n  domain: String\n  name: String\n  _floors: FloorUpdateManyWithout_churchInput\n}\n\ninput ChurchUpdateOneWithout_floorsInput {\n  create: ChurchCreateWithout_floorsInput\n  connect: ChurchWhereUniqueInput\n  delete: Boolean\n  update: ChurchUpdateWithout_floorsDataInput\n  upsert: ChurchUpsertWithout_floorsInput\n}\n\ninput ChurchUpdateWithout_floorsDataInput {\n  domain: String\n  name: String\n}\n\ninput ChurchUpsertWithout_floorsInput {\n  update: ChurchUpdateWithout_floorsDataInput!\n  create: ChurchCreateWithout_floorsInput!\n}\n\ninput ChurchWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ChurchWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ChurchWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ChurchWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  domain: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  domain_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  domain_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  domain_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  domain_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  domain_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  domain_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  domain_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  domain_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  domain_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  domain_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  domain_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  domain_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  domain_not_ends_with: String\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  _floors_every: FloorWhereInput\n  _floors_some: FloorWhereInput\n  _floors_none: FloorWhereInput\n}\n\ninput ChurchWhereUniqueInput {\n  id: ID\n  domain: String\n}\n\nscalar DateTime\n\ntype Department implements Node {\n  id: ID!\n  domain: String!\n  _leader(where: DiscipleWhereInput): Disciple!\n  _rooms(where: RoomWhereInput, orderBy: RoomOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Room!]\n  _disciples(where: DiscipleWhereInput, orderBy: DiscipleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Disciple!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype DepartmentConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [DepartmentEdge]!\n  aggregate: AggregateDepartment!\n}\n\ninput DepartmentCreateInput {\n  domain: String!\n  _leader: DiscipleCreateOneWithout_departmentLeaderInput!\n  _rooms: RoomCreateManyWithout_departmentsInput\n  _disciples: DiscipleCreateManyWithout_memberOfInput\n}\n\ninput DepartmentCreateManyWithout_roomsInput {\n  create: [DepartmentCreateWithout_roomsInput!]\n  connect: [DepartmentWhereUniqueInput!]\n}\n\ninput DepartmentCreateOneWithout_disciplesInput {\n  create: DepartmentCreateWithout_disciplesInput\n  connect: DepartmentWhereUniqueInput\n}\n\ninput DepartmentCreateOneWithout_leaderInput {\n  create: DepartmentCreateWithout_leaderInput\n  connect: DepartmentWhereUniqueInput\n}\n\ninput DepartmentCreateWithout_disciplesInput {\n  domain: String!\n  _leader: DiscipleCreateOneWithout_departmentLeaderInput!\n  _rooms: RoomCreateManyWithout_departmentsInput\n}\n\ninput DepartmentCreateWithout_leaderInput {\n  domain: String!\n  _rooms: RoomCreateManyWithout_departmentsInput\n  _disciples: DiscipleCreateManyWithout_memberOfInput\n}\n\ninput DepartmentCreateWithout_roomsInput {\n  domain: String!\n  _leader: DiscipleCreateOneWithout_departmentLeaderInput!\n  _disciples: DiscipleCreateManyWithout_memberOfInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DepartmentEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Department!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum DepartmentOrderByInput {\n  id_ASC\n  id_DESC\n  domain_ASC\n  domain_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype DepartmentPreviousValues {\n  id: ID!\n  domain: String!\n}\n\ntype DepartmentSubscriptionPayload {\n  mutation: MutationType!\n  node: Department\n  updatedFields: [String!]\n  previousValues: DepartmentPreviousValues\n}\n\ninput DepartmentSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DepartmentSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DepartmentSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [DepartmentSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: DepartmentWhereInput\n}\n\ninput DepartmentUpdateInput {\n  domain: String\n  _leader: DiscipleUpdateOneWithout_departmentLeaderInput\n  _rooms: RoomUpdateManyWithout_departmentsInput\n  _disciples: DiscipleUpdateManyWithout_memberOfInput\n}\n\ninput DepartmentUpdateManyWithout_roomsInput {\n  create: [DepartmentCreateWithout_roomsInput!]\n  connect: [DepartmentWhereUniqueInput!]\n  disconnect: [DepartmentWhereUniqueInput!]\n  delete: [DepartmentWhereUniqueInput!]\n  update: [DepartmentUpdateWithWhereUniqueWithout_roomsInput!]\n  upsert: [DepartmentUpsertWithWhereUniqueWithout_roomsInput!]\n}\n\ninput DepartmentUpdateOneWithout_disciplesInput {\n  create: DepartmentCreateWithout_disciplesInput\n  connect: DepartmentWhereUniqueInput\n  delete: Boolean\n  update: DepartmentUpdateWithout_disciplesDataInput\n  upsert: DepartmentUpsertWithout_disciplesInput\n}\n\ninput DepartmentUpdateOneWithout_leaderInput {\n  create: DepartmentCreateWithout_leaderInput\n  connect: DepartmentWhereUniqueInput\n  delete: Boolean\n  update: DepartmentUpdateWithout_leaderDataInput\n  upsert: DepartmentUpsertWithout_leaderInput\n}\n\ninput DepartmentUpdateWithout_disciplesDataInput {\n  domain: String\n  _leader: DiscipleUpdateOneWithout_departmentLeaderInput\n  _rooms: RoomUpdateManyWithout_departmentsInput\n}\n\ninput DepartmentUpdateWithout_leaderDataInput {\n  domain: String\n  _rooms: RoomUpdateManyWithout_departmentsInput\n  _disciples: DiscipleUpdateManyWithout_memberOfInput\n}\n\ninput DepartmentUpdateWithout_roomsDataInput {\n  domain: String\n  _leader: DiscipleUpdateOneWithout_departmentLeaderInput\n  _disciples: DiscipleUpdateManyWithout_memberOfInput\n}\n\ninput DepartmentUpdateWithWhereUniqueWithout_roomsInput {\n  where: DepartmentWhereUniqueInput!\n  data: DepartmentUpdateWithout_roomsDataInput!\n}\n\ninput DepartmentUpsertWithout_disciplesInput {\n  update: DepartmentUpdateWithout_disciplesDataInput!\n  create: DepartmentCreateWithout_disciplesInput!\n}\n\ninput DepartmentUpsertWithout_leaderInput {\n  update: DepartmentUpdateWithout_leaderDataInput!\n  create: DepartmentCreateWithout_leaderInput!\n}\n\ninput DepartmentUpsertWithWhereUniqueWithout_roomsInput {\n  where: DepartmentWhereUniqueInput!\n  update: DepartmentUpdateWithout_roomsDataInput!\n  create: DepartmentCreateWithout_roomsInput!\n}\n\ninput DepartmentWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DepartmentWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DepartmentWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [DepartmentWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  domain: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  domain_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  domain_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  domain_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  domain_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  domain_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  domain_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  domain_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  domain_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  domain_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  domain_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  domain_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  domain_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  domain_not_ends_with: String\n  _leader: DiscipleWhereInput\n  _rooms_every: RoomWhereInput\n  _rooms_some: RoomWhereInput\n  _rooms_none: RoomWhereInput\n  _disciples_every: DiscipleWhereInput\n  _disciples_some: DiscipleWhereInput\n  _disciples_none: DiscipleWhereInput\n}\n\ninput DepartmentWhereUniqueInput {\n  id: ID\n  domain: String\n}\n\ntype Disciple implements Node {\n  id: ID!\n  fullname: String!\n  firstName: String!\n  lastName: String!\n  _departmentLeader(where: DepartmentWhereInput): Department!\n  _memberOf(where: DepartmentWhereInput): Department!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype DiscipleConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [DiscipleEdge]!\n  aggregate: AggregateDisciple!\n}\n\ninput DiscipleCreateInput {\n  fullname: String!\n  firstName: String!\n  lastName: String!\n  _departmentLeader: DepartmentCreateOneWithout_leaderInput!\n  _memberOf: DepartmentCreateOneWithout_disciplesInput!\n}\n\ninput DiscipleCreateManyWithout_memberOfInput {\n  create: [DiscipleCreateWithout_memberOfInput!]\n  connect: [DiscipleWhereUniqueInput!]\n}\n\ninput DiscipleCreateOneWithout_departmentLeaderInput {\n  create: DiscipleCreateWithout_departmentLeaderInput\n  connect: DiscipleWhereUniqueInput\n}\n\ninput DiscipleCreateWithout_departmentLeaderInput {\n  fullname: String!\n  firstName: String!\n  lastName: String!\n  _memberOf: DepartmentCreateOneWithout_disciplesInput!\n}\n\ninput DiscipleCreateWithout_memberOfInput {\n  fullname: String!\n  firstName: String!\n  lastName: String!\n  _departmentLeader: DepartmentCreateOneWithout_leaderInput!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DiscipleEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Disciple!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum DiscipleOrderByInput {\n  id_ASC\n  id_DESC\n  fullname_ASC\n  fullname_DESC\n  firstName_ASC\n  firstName_DESC\n  lastName_ASC\n  lastName_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype DisciplePreviousValues {\n  id: ID!\n  fullname: String!\n  firstName: String!\n  lastName: String!\n}\n\ntype DiscipleSubscriptionPayload {\n  mutation: MutationType!\n  node: Disciple\n  updatedFields: [String!]\n  previousValues: DisciplePreviousValues\n}\n\ninput DiscipleSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DiscipleSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DiscipleSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [DiscipleSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: DiscipleWhereInput\n}\n\ninput DiscipleUpdateInput {\n  fullname: String\n  firstName: String\n  lastName: String\n  _departmentLeader: DepartmentUpdateOneWithout_leaderInput\n  _memberOf: DepartmentUpdateOneWithout_disciplesInput\n}\n\ninput DiscipleUpdateManyWithout_memberOfInput {\n  create: [DiscipleCreateWithout_memberOfInput!]\n  connect: [DiscipleWhereUniqueInput!]\n  disconnect: [DiscipleWhereUniqueInput!]\n  delete: [DiscipleWhereUniqueInput!]\n  update: [DiscipleUpdateWithWhereUniqueWithout_memberOfInput!]\n  upsert: [DiscipleUpsertWithWhereUniqueWithout_memberOfInput!]\n}\n\ninput DiscipleUpdateOneWithout_departmentLeaderInput {\n  create: DiscipleCreateWithout_departmentLeaderInput\n  connect: DiscipleWhereUniqueInput\n  delete: Boolean\n  update: DiscipleUpdateWithout_departmentLeaderDataInput\n  upsert: DiscipleUpsertWithout_departmentLeaderInput\n}\n\ninput DiscipleUpdateWithout_departmentLeaderDataInput {\n  fullname: String\n  firstName: String\n  lastName: String\n  _memberOf: DepartmentUpdateOneWithout_disciplesInput\n}\n\ninput DiscipleUpdateWithout_memberOfDataInput {\n  fullname: String\n  firstName: String\n  lastName: String\n  _departmentLeader: DepartmentUpdateOneWithout_leaderInput\n}\n\ninput DiscipleUpdateWithWhereUniqueWithout_memberOfInput {\n  where: DiscipleWhereUniqueInput!\n  data: DiscipleUpdateWithout_memberOfDataInput!\n}\n\ninput DiscipleUpsertWithout_departmentLeaderInput {\n  update: DiscipleUpdateWithout_departmentLeaderDataInput!\n  create: DiscipleCreateWithout_departmentLeaderInput!\n}\n\ninput DiscipleUpsertWithWhereUniqueWithout_memberOfInput {\n  where: DiscipleWhereUniqueInput!\n  update: DiscipleUpdateWithout_memberOfDataInput!\n  create: DiscipleCreateWithout_memberOfInput!\n}\n\ninput DiscipleWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DiscipleWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DiscipleWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [DiscipleWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  fullname: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  fullname_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  fullname_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  fullname_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  fullname_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  fullname_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  fullname_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  fullname_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  fullname_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  fullname_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  fullname_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  fullname_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  fullname_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  fullname_not_ends_with: String\n  firstName: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  firstName_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  firstName_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  firstName_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  firstName_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  firstName_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  firstName_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  firstName_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  firstName_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  firstName_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  firstName_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  firstName_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  firstName_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  firstName_not_ends_with: String\n  lastName: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  lastName_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  lastName_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  lastName_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  lastName_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  lastName_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  lastName_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  lastName_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  lastName_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  lastName_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  lastName_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  lastName_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  lastName_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  lastName_not_ends_with: String\n  _departmentLeader: DepartmentWhereInput\n  _memberOf: DepartmentWhereInput\n}\n\ninput DiscipleWhereUniqueInput {\n  id: ID\n  fullname: String\n}\n\ntype Floor implements Node {\n  id: ID!\n  domain: String!\n  name: String!\n  _church(where: ChurchWhereInput): Church!\n  _rooms(where: RoomWhereInput, orderBy: RoomOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Room!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FloorConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FloorEdge]!\n  aggregate: AggregateFloor!\n}\n\ninput FloorCreateInput {\n  domain: String!\n  name: String!\n  _church: ChurchCreateOneWithout_floorsInput!\n  _rooms: RoomCreateManyWithout_floorInput\n}\n\ninput FloorCreateManyWithout_churchInput {\n  create: [FloorCreateWithout_churchInput!]\n  connect: [FloorWhereUniqueInput!]\n}\n\ninput FloorCreateOneWithout_roomsInput {\n  create: FloorCreateWithout_roomsInput\n  connect: FloorWhereUniqueInput\n}\n\ninput FloorCreateWithout_churchInput {\n  domain: String!\n  name: String!\n  _rooms: RoomCreateManyWithout_floorInput\n}\n\ninput FloorCreateWithout_roomsInput {\n  domain: String!\n  name: String!\n  _church: ChurchCreateOneWithout_floorsInput!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FloorEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Floor!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum FloorOrderByInput {\n  id_ASC\n  id_DESC\n  domain_ASC\n  domain_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype FloorPreviousValues {\n  id: ID!\n  domain: String!\n  name: String!\n}\n\ntype FloorSubscriptionPayload {\n  mutation: MutationType!\n  node: Floor\n  updatedFields: [String!]\n  previousValues: FloorPreviousValues\n}\n\ninput FloorSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [FloorSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [FloorSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [FloorSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: FloorWhereInput\n}\n\ninput FloorUpdateInput {\n  domain: String\n  name: String\n  _church: ChurchUpdateOneWithout_floorsInput\n  _rooms: RoomUpdateManyWithout_floorInput\n}\n\ninput FloorUpdateManyWithout_churchInput {\n  create: [FloorCreateWithout_churchInput!]\n  connect: [FloorWhereUniqueInput!]\n  disconnect: [FloorWhereUniqueInput!]\n  delete: [FloorWhereUniqueInput!]\n  update: [FloorUpdateWithWhereUniqueWithout_churchInput!]\n  upsert: [FloorUpsertWithWhereUniqueWithout_churchInput!]\n}\n\ninput FloorUpdateOneWithout_roomsInput {\n  create: FloorCreateWithout_roomsInput\n  connect: FloorWhereUniqueInput\n  delete: Boolean\n  update: FloorUpdateWithout_roomsDataInput\n  upsert: FloorUpsertWithout_roomsInput\n}\n\ninput FloorUpdateWithout_churchDataInput {\n  domain: String\n  name: String\n  _rooms: RoomUpdateManyWithout_floorInput\n}\n\ninput FloorUpdateWithout_roomsDataInput {\n  domain: String\n  name: String\n  _church: ChurchUpdateOneWithout_floorsInput\n}\n\ninput FloorUpdateWithWhereUniqueWithout_churchInput {\n  where: FloorWhereUniqueInput!\n  data: FloorUpdateWithout_churchDataInput!\n}\n\ninput FloorUpsertWithout_roomsInput {\n  update: FloorUpdateWithout_roomsDataInput!\n  create: FloorCreateWithout_roomsInput!\n}\n\ninput FloorUpsertWithWhereUniqueWithout_churchInput {\n  where: FloorWhereUniqueInput!\n  update: FloorUpdateWithout_churchDataInput!\n  create: FloorCreateWithout_churchInput!\n}\n\ninput FloorWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [FloorWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [FloorWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [FloorWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  domain: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  domain_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  domain_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  domain_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  domain_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  domain_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  domain_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  domain_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  domain_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  domain_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  domain_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  domain_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  domain_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  domain_not_ends_with: String\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  _church: ChurchWhereInput\n  _rooms_every: RoomWhereInput\n  _rooms_some: RoomWhereInput\n  _rooms_none: RoomWhereInput\n}\n\ninput FloorWhereUniqueInput {\n  id: ID\n  domain: String\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createChurch(data: ChurchCreateInput!): Church!\n  createFloor(data: FloorCreateInput!): Floor!\n  createRoom(data: RoomCreateInput!): Room!\n  createDepartment(data: DepartmentCreateInput!): Department!\n  createDisciple(data: DiscipleCreateInput!): Disciple!\n  createBooking(data: BookingCreateInput!): Booking!\n  createBookingInfo(data: BookingInfoCreateInput!): BookingInfo!\n  createPost(data: PostCreateInput!): Post!\n  createUser(data: UserCreateInput!): User!\n  updateChurch(data: ChurchUpdateInput!, where: ChurchWhereUniqueInput!): Church\n  updateFloor(data: FloorUpdateInput!, where: FloorWhereUniqueInput!): Floor\n  updateRoom(data: RoomUpdateInput!, where: RoomWhereUniqueInput!): Room\n  updateDepartment(data: DepartmentUpdateInput!, where: DepartmentWhereUniqueInput!): Department\n  updateDisciple(data: DiscipleUpdateInput!, where: DiscipleWhereUniqueInput!): Disciple\n  updateBooking(data: BookingUpdateInput!, where: BookingWhereUniqueInput!): Booking\n  updateBookingInfo(data: BookingInfoUpdateInput!, where: BookingInfoWhereUniqueInput!): BookingInfo\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  deleteChurch(where: ChurchWhereUniqueInput!): Church\n  deleteFloor(where: FloorWhereUniqueInput!): Floor\n  deleteRoom(where: RoomWhereUniqueInput!): Room\n  deleteDepartment(where: DepartmentWhereUniqueInput!): Department\n  deleteDisciple(where: DiscipleWhereUniqueInput!): Disciple\n  deleteBooking(where: BookingWhereUniqueInput!): Booking\n  deleteBookingInfo(where: BookingInfoWhereUniqueInput!): BookingInfo\n  deletePost(where: PostWhereUniqueInput!): Post\n  deleteUser(where: UserWhereUniqueInput!): User\n  upsertChurch(where: ChurchWhereUniqueInput!, create: ChurchCreateInput!, update: ChurchUpdateInput!): Church!\n  upsertFloor(where: FloorWhereUniqueInput!, create: FloorCreateInput!, update: FloorUpdateInput!): Floor!\n  upsertRoom(where: RoomWhereUniqueInput!, create: RoomCreateInput!, update: RoomUpdateInput!): Room!\n  upsertDepartment(where: DepartmentWhereUniqueInput!, create: DepartmentCreateInput!, update: DepartmentUpdateInput!): Department!\n  upsertDisciple(where: DiscipleWhereUniqueInput!, create: DiscipleCreateInput!, update: DiscipleUpdateInput!): Disciple!\n  upsertBooking(where: BookingWhereUniqueInput!, create: BookingCreateInput!, update: BookingUpdateInput!): Booking!\n  upsertBookingInfo(where: BookingInfoWhereUniqueInput!, create: BookingInfoCreateInput!, update: BookingInfoUpdateInput!): BookingInfo!\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  updateManyChurches(data: ChurchUpdateInput!, where: ChurchWhereInput): BatchPayload!\n  updateManyFloors(data: FloorUpdateInput!, where: FloorWhereInput): BatchPayload!\n  updateManyRooms(data: RoomUpdateInput!, where: RoomWhereInput): BatchPayload!\n  updateManyDepartments(data: DepartmentUpdateInput!, where: DepartmentWhereInput): BatchPayload!\n  updateManyDisciples(data: DiscipleUpdateInput!, where: DiscipleWhereInput): BatchPayload!\n  updateManyBookings(data: BookingUpdateInput!, where: BookingWhereInput): BatchPayload!\n  updateManyBookingInfoes(data: BookingInfoUpdateInput!, where: BookingInfoWhereInput): BatchPayload!\n  updateManyPosts(data: PostUpdateInput!, where: PostWhereInput): BatchPayload!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  deleteManyChurches(where: ChurchWhereInput): BatchPayload!\n  deleteManyFloors(where: FloorWhereInput): BatchPayload!\n  deleteManyRooms(where: RoomWhereInput): BatchPayload!\n  deleteManyDepartments(where: DepartmentWhereInput): BatchPayload!\n  deleteManyDisciples(where: DiscipleWhereInput): BatchPayload!\n  deleteManyBookings(where: BookingWhereInput): BatchPayload!\n  deleteManyBookingInfoes(where: BookingInfoWhereInput): BatchPayload!\n  deleteManyPosts(where: PostWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Post implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  isPublished: Boolean!\n  title: String!\n  text: String!\n  author(where: UserWhereInput): User!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PostConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  isPublished: Boolean\n  title: String!\n  text: String!\n  author: UserCreateOneWithoutPostsInput!\n}\n\ninput PostCreateManyWithoutAuthorInput {\n  create: [PostCreateWithoutAuthorInput!]\n  connect: [PostWhereUniqueInput!]\n}\n\ninput PostCreateWithoutAuthorInput {\n  isPublished: Boolean\n  title: String!\n  text: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PostEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Post!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  isPublished_ASC\n  isPublished_DESC\n  title_ASC\n  title_DESC\n  text_ASC\n  text_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  isPublished: Boolean!\n  title: String!\n  text: String!\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PostSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PostSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PostSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n}\n\ninput PostUpdateInput {\n  isPublished: Boolean\n  title: String\n  text: String\n  author: UserUpdateOneWithoutPostsInput\n}\n\ninput PostUpdateManyWithoutAuthorInput {\n  create: [PostCreateWithoutAuthorInput!]\n  connect: [PostWhereUniqueInput!]\n  disconnect: [PostWhereUniqueInput!]\n  delete: [PostWhereUniqueInput!]\n  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]\n  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]\n}\n\ninput PostUpdateWithoutAuthorDataInput {\n  isPublished: Boolean\n  title: String\n  text: String\n}\n\ninput PostUpdateWithWhereUniqueWithoutAuthorInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutAuthorDataInput!\n}\n\ninput PostUpsertWithWhereUniqueWithoutAuthorInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutAuthorDataInput!\n  create: PostCreateWithoutAuthorInput!\n}\n\ninput PostWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PostWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PostWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PostWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  isPublished: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  isPublished_not: Boolean\n  title: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  title_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  title_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  title_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  title_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  title_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  title_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  title_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  title_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  title_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  title_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  title_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  title_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  title_not_ends_with: String\n  text: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  text_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  text_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  text_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  text_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  text_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  text_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  text_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  text_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  text_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  text_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  text_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  text_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  text_not_ends_with: String\n  author: UserWhereInput\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  churches(where: ChurchWhereInput, orderBy: ChurchOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Church]!\n  floors(where: FloorWhereInput, orderBy: FloorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Floor]!\n  rooms(where: RoomWhereInput, orderBy: RoomOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Room]!\n  departments(where: DepartmentWhereInput, orderBy: DepartmentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Department]!\n  disciples(where: DiscipleWhereInput, orderBy: DiscipleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Disciple]!\n  bookings(where: BookingWhereInput, orderBy: BookingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Booking]!\n  bookingInfoes(where: BookingInfoWhereInput, orderBy: BookingInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BookingInfo]!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  church(where: ChurchWhereUniqueInput!): Church\n  floor(where: FloorWhereUniqueInput!): Floor\n  room(where: RoomWhereUniqueInput!): Room\n  department(where: DepartmentWhereUniqueInput!): Department\n  disciple(where: DiscipleWhereUniqueInput!): Disciple\n  booking(where: BookingWhereUniqueInput!): Booking\n  bookingInfo(where: BookingInfoWhereUniqueInput!): BookingInfo\n  post(where: PostWhereUniqueInput!): Post\n  user(where: UserWhereUniqueInput!): User\n  churchesConnection(where: ChurchWhereInput, orderBy: ChurchOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChurchConnection!\n  floorsConnection(where: FloorWhereInput, orderBy: FloorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FloorConnection!\n  roomsConnection(where: RoomWhereInput, orderBy: RoomOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RoomConnection!\n  departmentsConnection(where: DepartmentWhereInput, orderBy: DepartmentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DepartmentConnection!\n  disciplesConnection(where: DiscipleWhereInput, orderBy: DiscipleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DiscipleConnection!\n  bookingsConnection(where: BookingWhereInput, orderBy: BookingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BookingConnection!\n  bookingInfoesConnection(where: BookingInfoWhereInput, orderBy: BookingInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BookingInfoConnection!\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Room implements Node {\n  id: ID!\n  domain: String!\n  name: String!\n  _floor(where: FloorWhereInput): Floor!\n  _departments(where: DepartmentWhereInput, orderBy: DepartmentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Department!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype RoomConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [RoomEdge]!\n  aggregate: AggregateRoom!\n}\n\ninput RoomCreateInput {\n  domain: String!\n  name: String!\n  _floor: FloorCreateOneWithout_roomsInput!\n  _departments: DepartmentCreateManyWithout_roomsInput\n}\n\ninput RoomCreateManyWithout_departmentsInput {\n  create: [RoomCreateWithout_departmentsInput!]\n  connect: [RoomWhereUniqueInput!]\n}\n\ninput RoomCreateManyWithout_floorInput {\n  create: [RoomCreateWithout_floorInput!]\n  connect: [RoomWhereUniqueInput!]\n}\n\ninput RoomCreateOneInput {\n  create: RoomCreateInput\n  connect: RoomWhereUniqueInput\n}\n\ninput RoomCreateWithout_departmentsInput {\n  domain: String!\n  name: String!\n  _floor: FloorCreateOneWithout_roomsInput!\n}\n\ninput RoomCreateWithout_floorInput {\n  domain: String!\n  name: String!\n  _departments: DepartmentCreateManyWithout_roomsInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype RoomEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Room!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum RoomOrderByInput {\n  id_ASC\n  id_DESC\n  domain_ASC\n  domain_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype RoomPreviousValues {\n  id: ID!\n  domain: String!\n  name: String!\n}\n\ntype RoomSubscriptionPayload {\n  mutation: MutationType!\n  node: Room\n  updatedFields: [String!]\n  previousValues: RoomPreviousValues\n}\n\ninput RoomSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [RoomSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [RoomSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [RoomSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: RoomWhereInput\n}\n\ninput RoomUpdateDataInput {\n  domain: String\n  name: String\n  _floor: FloorUpdateOneWithout_roomsInput\n  _departments: DepartmentUpdateManyWithout_roomsInput\n}\n\ninput RoomUpdateInput {\n  domain: String\n  name: String\n  _floor: FloorUpdateOneWithout_roomsInput\n  _departments: DepartmentUpdateManyWithout_roomsInput\n}\n\ninput RoomUpdateManyWithout_departmentsInput {\n  create: [RoomCreateWithout_departmentsInput!]\n  connect: [RoomWhereUniqueInput!]\n  disconnect: [RoomWhereUniqueInput!]\n  delete: [RoomWhereUniqueInput!]\n  update: [RoomUpdateWithWhereUniqueWithout_departmentsInput!]\n  upsert: [RoomUpsertWithWhereUniqueWithout_departmentsInput!]\n}\n\ninput RoomUpdateManyWithout_floorInput {\n  create: [RoomCreateWithout_floorInput!]\n  connect: [RoomWhereUniqueInput!]\n  disconnect: [RoomWhereUniqueInput!]\n  delete: [RoomWhereUniqueInput!]\n  update: [RoomUpdateWithWhereUniqueWithout_floorInput!]\n  upsert: [RoomUpsertWithWhereUniqueWithout_floorInput!]\n}\n\ninput RoomUpdateOneInput {\n  create: RoomCreateInput\n  connect: RoomWhereUniqueInput\n  delete: Boolean\n  update: RoomUpdateDataInput\n  upsert: RoomUpsertNestedInput\n}\n\ninput RoomUpdateWithout_departmentsDataInput {\n  domain: String\n  name: String\n  _floor: FloorUpdateOneWithout_roomsInput\n}\n\ninput RoomUpdateWithout_floorDataInput {\n  domain: String\n  name: String\n  _departments: DepartmentUpdateManyWithout_roomsInput\n}\n\ninput RoomUpdateWithWhereUniqueWithout_departmentsInput {\n  where: RoomWhereUniqueInput!\n  data: RoomUpdateWithout_departmentsDataInput!\n}\n\ninput RoomUpdateWithWhereUniqueWithout_floorInput {\n  where: RoomWhereUniqueInput!\n  data: RoomUpdateWithout_floorDataInput!\n}\n\ninput RoomUpsertNestedInput {\n  update: RoomUpdateDataInput!\n  create: RoomCreateInput!\n}\n\ninput RoomUpsertWithWhereUniqueWithout_departmentsInput {\n  where: RoomWhereUniqueInput!\n  update: RoomUpdateWithout_departmentsDataInput!\n  create: RoomCreateWithout_departmentsInput!\n}\n\ninput RoomUpsertWithWhereUniqueWithout_floorInput {\n  where: RoomWhereUniqueInput!\n  update: RoomUpdateWithout_floorDataInput!\n  create: RoomCreateWithout_floorInput!\n}\n\ninput RoomWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [RoomWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [RoomWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [RoomWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  domain: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  domain_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  domain_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  domain_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  domain_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  domain_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  domain_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  domain_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  domain_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  domain_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  domain_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  domain_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  domain_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  domain_not_ends_with: String\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  _floor: FloorWhereInput\n  _departments_every: DepartmentWhereInput\n  _departments_some: DepartmentWhereInput\n  _departments_none: DepartmentWhereInput\n}\n\ninput RoomWhereUniqueInput {\n  id: ID\n  domain: String\n}\n\ntype Subscription {\n  church(where: ChurchSubscriptionWhereInput): ChurchSubscriptionPayload\n  floor(where: FloorSubscriptionWhereInput): FloorSubscriptionPayload\n  room(where: RoomSubscriptionWhereInput): RoomSubscriptionPayload\n  department(where: DepartmentSubscriptionWhereInput): DepartmentSubscriptionPayload\n  disciple(where: DiscipleSubscriptionWhereInput): DiscipleSubscriptionPayload\n  booking(where: BookingSubscriptionWhereInput): BookingSubscriptionPayload\n  bookingInfo(where: BookingInfoSubscriptionWhereInput): BookingInfoSubscriptionPayload\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  email: String!\n  password: String!\n  name: String!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]\n  _bookings(where: BookingWhereInput, orderBy: BookingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Booking!]\n  _approved(where: BookingInfoWhereInput, orderBy: BookingInfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BookingInfo!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  password: String!\n  name: String!\n  posts: PostCreateManyWithoutAuthorInput\n  _bookings: BookingCreateManyWithout_bookeeInput\n  _approved: BookingInfoCreateManyWithout_approverInput\n}\n\ninput UserCreateOneWithout_approvedInput {\n  create: UserCreateWithout_approvedInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithout_bookingsInput {\n  create: UserCreateWithout_bookingsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithout_approvedInput {\n  email: String!\n  password: String!\n  name: String!\n  posts: PostCreateManyWithoutAuthorInput\n  _bookings: BookingCreateManyWithout_bookeeInput\n}\n\ninput UserCreateWithout_bookingsInput {\n  email: String!\n  password: String!\n  name: String!\n  posts: PostCreateManyWithoutAuthorInput\n  _approved: BookingInfoCreateManyWithout_approverInput\n}\n\ninput UserCreateWithoutPostsInput {\n  email: String!\n  password: String!\n  name: String!\n  _bookings: BookingCreateManyWithout_bookeeInput\n  _approved: BookingInfoCreateManyWithout_approverInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  password: String!\n  name: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  email: String\n  password: String\n  name: String\n  posts: PostUpdateManyWithoutAuthorInput\n  _bookings: BookingUpdateManyWithout_bookeeInput\n  _approved: BookingInfoUpdateManyWithout_approverInput\n}\n\ninput UserUpdateOneWithout_approvedInput {\n  create: UserCreateWithout_approvedInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithout_approvedDataInput\n  upsert: UserUpsertWithout_approvedInput\n}\n\ninput UserUpdateOneWithout_bookingsInput {\n  create: UserCreateWithout_bookingsInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithout_bookingsDataInput\n  upsert: UserUpsertWithout_bookingsInput\n}\n\ninput UserUpdateOneWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutPostsDataInput\n  upsert: UserUpsertWithoutPostsInput\n}\n\ninput UserUpdateWithout_approvedDataInput {\n  email: String\n  password: String\n  name: String\n  posts: PostUpdateManyWithoutAuthorInput\n  _bookings: BookingUpdateManyWithout_bookeeInput\n}\n\ninput UserUpdateWithout_bookingsDataInput {\n  email: String\n  password: String\n  name: String\n  posts: PostUpdateManyWithoutAuthorInput\n  _approved: BookingInfoUpdateManyWithout_approverInput\n}\n\ninput UserUpdateWithoutPostsDataInput {\n  email: String\n  password: String\n  name: String\n  _bookings: BookingUpdateManyWithout_bookeeInput\n  _approved: BookingInfoUpdateManyWithout_approverInput\n}\n\ninput UserUpsertWithout_approvedInput {\n  update: UserUpdateWithout_approvedDataInput!\n  create: UserCreateWithout_approvedInput!\n}\n\ninput UserUpsertWithout_bookingsInput {\n  update: UserUpdateWithout_bookingsDataInput!\n  create: UserCreateWithout_bookingsInput!\n}\n\ninput UserUpsertWithoutPostsInput {\n  update: UserUpdateWithoutPostsDataInput!\n  create: UserCreateWithoutPostsInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  email: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  email_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  email_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  email_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  email_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  email_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  email_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  email_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  email_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  email_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  email_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  email_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  email_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  email_not_ends_with: String\n  password: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  password_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  password_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  password_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  password_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  password_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  password_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  password_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  password_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  password_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  password_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  password_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  password_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  password_not_ends_with: String\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  posts_every: PostWhereInput\n  posts_some: PostWhereInput\n  posts_none: PostWhereInput\n  _bookings_every: BookingWhereInput\n  _bookings_some: BookingWhereInput\n  _bookings_none: BookingWhereInput\n  _approved_every: BookingInfoWhereInput\n  _approved_some: BookingInfoWhereInput\n  _approved_none: BookingInfoWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 59,
      "containsCycle": true,
      "numDefinitions": 220
    }
  ],
  "metrics": {
    "created_at": "2018-04-27T16:06:51Z",
    "updated_at": "2018-12-08T05:05:02Z",
    "pushed_at": "2018-05-16T17:32:57Z",
    "issues": 7,
    "watchers": 2,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 1
  }
}