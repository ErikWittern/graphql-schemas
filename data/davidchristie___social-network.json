{
  "repo_name": "social-network",
  "repo_full_name": "davidchristie/social-network",
  "repo_owner": "davidchristie",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "packages/backend/data-model/generated/graphql-schema/prisma.graphql",
      "sha": "cca0f434d2c56afebcd12f170ae551735d5fdc8c",
      "url": "https://api.github.com/repositories/144336995/contents/packages/backend/data-model/generated/graphql-schema/prisma.graphql?ref=3483e7f150403cbcee4955f8ae6c339930162518",
      "git_url": "https://api.github.com/repositories/144336995/git/blobs/cca0f434d2c56afebcd12f170ae551735d5fdc8c",
      "html_url": "https://github.com/davidchristie/social-network/blob/3483e7f150403cbcee4955f8ae6c339930162518/packages/backend/data-model/generated/graphql-schema/prisma.graphql",
      "content": "type Account {\n  email: String!\n  id: ID!\n  name: String!\n  password: String!\n  profile: Profile!\n}\n\ntype AccountConnection {\n  pageInfo: PageInfo!\n  edges: [AccountEdge]!\n  aggregate: AggregateAccount!\n}\n\ninput AccountCreateInput {\n  email: String!\n  name: String!\n  password: String!\n  profile: ProfileCreateOneWithoutAccountInput!\n}\n\ninput AccountCreateOneWithoutProfileInput {\n  create: AccountCreateWithoutProfileInput\n  connect: AccountWhereUniqueInput\n}\n\ninput AccountCreateWithoutProfileInput {\n  email: String!\n  name: String!\n  password: String!\n}\n\ntype AccountEdge {\n  node: Account!\n  cursor: String!\n}\n\nenum AccountOrderByInput {\n  email_ASC\n  email_DESC\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  password_ASC\n  password_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype AccountPreviousValues {\n  email: String!\n  id: ID!\n  name: String!\n  password: String!\n}\n\ntype AccountSubscriptionPayload {\n  mutation: MutationType!\n  node: Account\n  updatedFields: [String!]\n  previousValues: AccountPreviousValues\n}\n\ninput AccountSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: AccountWhereInput\n  AND: [AccountSubscriptionWhereInput!]\n  OR: [AccountSubscriptionWhereInput!]\n  NOT: [AccountSubscriptionWhereInput!]\n}\n\ninput AccountUpdateInput {\n  email: String\n  name: String\n  password: String\n  profile: ProfileUpdateOneRequiredWithoutAccountInput\n}\n\ninput AccountUpdateManyMutationInput {\n  email: String\n  name: String\n  password: String\n}\n\ninput AccountUpdateOneRequiredWithoutProfileInput {\n  create: AccountCreateWithoutProfileInput\n  update: AccountUpdateWithoutProfileDataInput\n  upsert: AccountUpsertWithoutProfileInput\n  connect: AccountWhereUniqueInput\n}\n\ninput AccountUpdateWithoutProfileDataInput {\n  email: String\n  name: String\n  password: String\n}\n\ninput AccountUpsertWithoutProfileInput {\n  update: AccountUpdateWithoutProfileDataInput!\n  create: AccountCreateWithoutProfileInput!\n}\n\ninput AccountWhereInput {\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n  profile: ProfileWhereInput\n  AND: [AccountWhereInput!]\n  OR: [AccountWhereInput!]\n  NOT: [AccountWhereInput!]\n}\n\ninput AccountWhereUniqueInput {\n  email: String\n  id: ID\n}\n\ntype AggregateAccount {\n  count: Int!\n}\n\ntype AggregateImage {\n  count: Int!\n}\n\ntype AggregatePost {\n  count: Int!\n}\n\ntype AggregateProfile {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\nscalar DateTime\n\ntype Image {\n  id: ID!\n  url: String!\n}\n\ntype ImageConnection {\n  pageInfo: PageInfo!\n  edges: [ImageEdge]!\n  aggregate: AggregateImage!\n}\n\ninput ImageCreateInput {\n  url: String!\n}\n\ninput ImageCreateOneInput {\n  create: ImageCreateInput\n  connect: ImageWhereUniqueInput\n}\n\ntype ImageEdge {\n  node: Image!\n  cursor: String!\n}\n\nenum ImageOrderByInput {\n  id_ASC\n  id_DESC\n  url_ASC\n  url_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype ImagePreviousValues {\n  id: ID!\n  url: String!\n}\n\ntype ImageSubscriptionPayload {\n  mutation: MutationType!\n  node: Image\n  updatedFields: [String!]\n  previousValues: ImagePreviousValues\n}\n\ninput ImageSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: ImageWhereInput\n  AND: [ImageSubscriptionWhereInput!]\n  OR: [ImageSubscriptionWhereInput!]\n  NOT: [ImageSubscriptionWhereInput!]\n}\n\ninput ImageUpdateDataInput {\n  url: String\n}\n\ninput ImageUpdateInput {\n  url: String\n}\n\ninput ImageUpdateManyMutationInput {\n  url: String\n}\n\ninput ImageUpdateOneInput {\n  create: ImageCreateInput\n  update: ImageUpdateDataInput\n  upsert: ImageUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: ImageWhereUniqueInput\n}\n\ninput ImageUpsertNestedInput {\n  update: ImageUpdateDataInput!\n  create: ImageCreateInput!\n}\n\ninput ImageWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  url: String\n  url_not: String\n  url_in: [String!]\n  url_not_in: [String!]\n  url_lt: String\n  url_lte: String\n  url_gt: String\n  url_gte: String\n  url_contains: String\n  url_not_contains: String\n  url_starts_with: String\n  url_not_starts_with: String\n  url_ends_with: String\n  url_not_ends_with: String\n  AND: [ImageWhereInput!]\n  OR: [ImageWhereInput!]\n  NOT: [ImageWhereInput!]\n}\n\ninput ImageWhereUniqueInput {\n  id: ID\n}\n\nscalar Long\n\ntype Mutation {\n  createAccount(data: AccountCreateInput!): Account!\n  updateAccount(data: AccountUpdateInput!, where: AccountWhereUniqueInput!): Account\n  updateManyAccounts(data: AccountUpdateManyMutationInput!, where: AccountWhereInput): BatchPayload!\n  upsertAccount(where: AccountWhereUniqueInput!, create: AccountCreateInput!, update: AccountUpdateInput!): Account!\n  deleteAccount(where: AccountWhereUniqueInput!): Account\n  deleteManyAccounts(where: AccountWhereInput): BatchPayload!\n  createImage(data: ImageCreateInput!): Image!\n  updateImage(data: ImageUpdateInput!, where: ImageWhereUniqueInput!): Image\n  updateManyImages(data: ImageUpdateManyMutationInput!, where: ImageWhereInput): BatchPayload!\n  upsertImage(where: ImageWhereUniqueInput!, create: ImageCreateInput!, update: ImageUpdateInput!): Image!\n  deleteImage(where: ImageWhereUniqueInput!): Image\n  deleteManyImages(where: ImageWhereInput): BatchPayload!\n  createPost(data: PostCreateInput!): Post!\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  updateManyPosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  deletePost(where: PostWhereUniqueInput!): Post\n  deleteManyPosts(where: PostWhereInput): BatchPayload!\n  createProfile(data: ProfileCreateInput!): Profile!\n  updateProfile(data: ProfileUpdateInput!, where: ProfileWhereUniqueInput!): Profile\n  updateManyProfiles(data: ProfileUpdateManyMutationInput!, where: ProfileWhereInput): BatchPayload!\n  upsertProfile(where: ProfileWhereUniqueInput!, create: ProfileCreateInput!, update: ProfileUpdateInput!): Profile!\n  deleteProfile(where: ProfileWhereUniqueInput!): Profile\n  deleteManyProfiles(where: ProfileWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Post {\n  createdAt: DateTime!\n  createdBy: Profile!\n  id: ID!\n  text: String!\n}\n\ntype PostConnection {\n  pageInfo: PageInfo!\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  createdBy: ProfileCreateOneWithoutPostsInput!\n  text: String!\n}\n\ninput PostCreateManyWithoutCreatedByInput {\n  create: [PostCreateWithoutCreatedByInput!]\n  connect: [PostWhereUniqueInput!]\n}\n\ninput PostCreateWithoutCreatedByInput {\n  text: String!\n}\n\ntype PostEdge {\n  node: Post!\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  createdAt_ASC\n  createdAt_DESC\n  id_ASC\n  id_DESC\n  text_ASC\n  text_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype PostPreviousValues {\n  createdAt: DateTime!\n  id: ID!\n  text: String!\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n  AND: [PostSubscriptionWhereInput!]\n  OR: [PostSubscriptionWhereInput!]\n  NOT: [PostSubscriptionWhereInput!]\n}\n\ninput PostUpdateInput {\n  createdBy: ProfileUpdateOneRequiredWithoutPostsInput\n  text: String\n}\n\ninput PostUpdateManyMutationInput {\n  text: String\n}\n\ninput PostUpdateManyWithoutCreatedByInput {\n  create: [PostCreateWithoutCreatedByInput!]\n  delete: [PostWhereUniqueInput!]\n  connect: [PostWhereUniqueInput!]\n  disconnect: [PostWhereUniqueInput!]\n  update: [PostUpdateWithWhereUniqueWithoutCreatedByInput!]\n  upsert: [PostUpsertWithWhereUniqueWithoutCreatedByInput!]\n}\n\ninput PostUpdateWithoutCreatedByDataInput {\n  text: String\n}\n\ninput PostUpdateWithWhereUniqueWithoutCreatedByInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutCreatedByDataInput!\n}\n\ninput PostUpsertWithWhereUniqueWithoutCreatedByInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutCreatedByDataInput!\n  create: PostCreateWithoutCreatedByInput!\n}\n\ninput PostWhereInput {\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  createdBy: ProfileWhereInput\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  text: String\n  text_not: String\n  text_in: [String!]\n  text_not_in: [String!]\n  text_lt: String\n  text_lte: String\n  text_gt: String\n  text_gte: String\n  text_contains: String\n  text_not_contains: String\n  text_starts_with: String\n  text_not_starts_with: String\n  text_ends_with: String\n  text_not_ends_with: String\n  AND: [PostWhereInput!]\n  OR: [PostWhereInput!]\n  NOT: [PostWhereInput!]\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Profile {\n  account: Account!\n  avatar: Image\n  followers(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]\n  following(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile!]\n  id: ID!\n  name: String!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]\n}\n\ntype ProfileConnection {\n  pageInfo: PageInfo!\n  edges: [ProfileEdge]!\n  aggregate: AggregateProfile!\n}\n\ninput ProfileCreateInput {\n  account: AccountCreateOneWithoutProfileInput!\n  avatar: ImageCreateOneInput\n  followers: ProfileCreateManyWithoutFollowingInput\n  following: ProfileCreateManyWithoutFollowersInput\n  name: String!\n  posts: PostCreateManyWithoutCreatedByInput\n}\n\ninput ProfileCreateManyWithoutFollowersInput {\n  create: [ProfileCreateWithoutFollowersInput!]\n  connect: [ProfileWhereUniqueInput!]\n}\n\ninput ProfileCreateManyWithoutFollowingInput {\n  create: [ProfileCreateWithoutFollowingInput!]\n  connect: [ProfileWhereUniqueInput!]\n}\n\ninput ProfileCreateOneWithoutAccountInput {\n  create: ProfileCreateWithoutAccountInput\n  connect: ProfileWhereUniqueInput\n}\n\ninput ProfileCreateOneWithoutPostsInput {\n  create: ProfileCreateWithoutPostsInput\n  connect: ProfileWhereUniqueInput\n}\n\ninput ProfileCreateWithoutAccountInput {\n  avatar: ImageCreateOneInput\n  followers: ProfileCreateManyWithoutFollowingInput\n  following: ProfileCreateManyWithoutFollowersInput\n  name: String!\n  posts: PostCreateManyWithoutCreatedByInput\n}\n\ninput ProfileCreateWithoutFollowersInput {\n  account: AccountCreateOneWithoutProfileInput!\n  avatar: ImageCreateOneInput\n  following: ProfileCreateManyWithoutFollowersInput\n  name: String!\n  posts: PostCreateManyWithoutCreatedByInput\n}\n\ninput ProfileCreateWithoutFollowingInput {\n  account: AccountCreateOneWithoutProfileInput!\n  avatar: ImageCreateOneInput\n  followers: ProfileCreateManyWithoutFollowingInput\n  name: String!\n  posts: PostCreateManyWithoutCreatedByInput\n}\n\ninput ProfileCreateWithoutPostsInput {\n  account: AccountCreateOneWithoutProfileInput!\n  avatar: ImageCreateOneInput\n  followers: ProfileCreateManyWithoutFollowingInput\n  following: ProfileCreateManyWithoutFollowersInput\n  name: String!\n}\n\ntype ProfileEdge {\n  node: Profile!\n  cursor: String!\n}\n\nenum ProfileOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype ProfilePreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype ProfileSubscriptionPayload {\n  mutation: MutationType!\n  node: Profile\n  updatedFields: [String!]\n  previousValues: ProfilePreviousValues\n}\n\ninput ProfileSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: ProfileWhereInput\n  AND: [ProfileSubscriptionWhereInput!]\n  OR: [ProfileSubscriptionWhereInput!]\n  NOT: [ProfileSubscriptionWhereInput!]\n}\n\ninput ProfileUpdateInput {\n  account: AccountUpdateOneRequiredWithoutProfileInput\n  avatar: ImageUpdateOneInput\n  followers: ProfileUpdateManyWithoutFollowingInput\n  following: ProfileUpdateManyWithoutFollowersInput\n  name: String\n  posts: PostUpdateManyWithoutCreatedByInput\n}\n\ninput ProfileUpdateManyMutationInput {\n  name: String\n}\n\ninput ProfileUpdateManyWithoutFollowersInput {\n  create: [ProfileCreateWithoutFollowersInput!]\n  delete: [ProfileWhereUniqueInput!]\n  connect: [ProfileWhereUniqueInput!]\n  disconnect: [ProfileWhereUniqueInput!]\n  update: [ProfileUpdateWithWhereUniqueWithoutFollowersInput!]\n  upsert: [ProfileUpsertWithWhereUniqueWithoutFollowersInput!]\n}\n\ninput ProfileUpdateManyWithoutFollowingInput {\n  create: [ProfileCreateWithoutFollowingInput!]\n  delete: [ProfileWhereUniqueInput!]\n  connect: [ProfileWhereUniqueInput!]\n  disconnect: [ProfileWhereUniqueInput!]\n  update: [ProfileUpdateWithWhereUniqueWithoutFollowingInput!]\n  upsert: [ProfileUpsertWithWhereUniqueWithoutFollowingInput!]\n}\n\ninput ProfileUpdateOneRequiredWithoutAccountInput {\n  create: ProfileCreateWithoutAccountInput\n  update: ProfileUpdateWithoutAccountDataInput\n  upsert: ProfileUpsertWithoutAccountInput\n  connect: ProfileWhereUniqueInput\n}\n\ninput ProfileUpdateOneRequiredWithoutPostsInput {\n  create: ProfileCreateWithoutPostsInput\n  update: ProfileUpdateWithoutPostsDataInput\n  upsert: ProfileUpsertWithoutPostsInput\n  connect: ProfileWhereUniqueInput\n}\n\ninput ProfileUpdateWithoutAccountDataInput {\n  avatar: ImageUpdateOneInput\n  followers: ProfileUpdateManyWithoutFollowingInput\n  following: ProfileUpdateManyWithoutFollowersInput\n  name: String\n  posts: PostUpdateManyWithoutCreatedByInput\n}\n\ninput ProfileUpdateWithoutFollowersDataInput {\n  account: AccountUpdateOneRequiredWithoutProfileInput\n  avatar: ImageUpdateOneInput\n  following: ProfileUpdateManyWithoutFollowersInput\n  name: String\n  posts: PostUpdateManyWithoutCreatedByInput\n}\n\ninput ProfileUpdateWithoutFollowingDataInput {\n  account: AccountUpdateOneRequiredWithoutProfileInput\n  avatar: ImageUpdateOneInput\n  followers: ProfileUpdateManyWithoutFollowingInput\n  name: String\n  posts: PostUpdateManyWithoutCreatedByInput\n}\n\ninput ProfileUpdateWithoutPostsDataInput {\n  account: AccountUpdateOneRequiredWithoutProfileInput\n  avatar: ImageUpdateOneInput\n  followers: ProfileUpdateManyWithoutFollowingInput\n  following: ProfileUpdateManyWithoutFollowersInput\n  name: String\n}\n\ninput ProfileUpdateWithWhereUniqueWithoutFollowersInput {\n  where: ProfileWhereUniqueInput!\n  data: ProfileUpdateWithoutFollowersDataInput!\n}\n\ninput ProfileUpdateWithWhereUniqueWithoutFollowingInput {\n  where: ProfileWhereUniqueInput!\n  data: ProfileUpdateWithoutFollowingDataInput!\n}\n\ninput ProfileUpsertWithoutAccountInput {\n  update: ProfileUpdateWithoutAccountDataInput!\n  create: ProfileCreateWithoutAccountInput!\n}\n\ninput ProfileUpsertWithoutPostsInput {\n  update: ProfileUpdateWithoutPostsDataInput!\n  create: ProfileCreateWithoutPostsInput!\n}\n\ninput ProfileUpsertWithWhereUniqueWithoutFollowersInput {\n  where: ProfileWhereUniqueInput!\n  update: ProfileUpdateWithoutFollowersDataInput!\n  create: ProfileCreateWithoutFollowersInput!\n}\n\ninput ProfileUpsertWithWhereUniqueWithoutFollowingInput {\n  where: ProfileWhereUniqueInput!\n  update: ProfileUpdateWithoutFollowingDataInput!\n  create: ProfileCreateWithoutFollowingInput!\n}\n\ninput ProfileWhereInput {\n  account: AccountWhereInput\n  avatar: ImageWhereInput\n  followers_every: ProfileWhereInput\n  followers_some: ProfileWhereInput\n  followers_none: ProfileWhereInput\n  following_every: ProfileWhereInput\n  following_some: ProfileWhereInput\n  following_none: ProfileWhereInput\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  posts_every: PostWhereInput\n  posts_some: PostWhereInput\n  posts_none: PostWhereInput\n  AND: [ProfileWhereInput!]\n  OR: [ProfileWhereInput!]\n  NOT: [ProfileWhereInput!]\n}\n\ninput ProfileWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  account(where: AccountWhereUniqueInput!): Account\n  accounts(where: AccountWhereInput, orderBy: AccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Account]!\n  accountsConnection(where: AccountWhereInput, orderBy: AccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AccountConnection!\n  image(where: ImageWhereUniqueInput!): Image\n  images(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Image]!\n  imagesConnection(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ImageConnection!\n  post(where: PostWhereUniqueInput!): Post\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n  profile(where: ProfileWhereUniqueInput!): Profile\n  profiles(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile]!\n  profilesConnection(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProfileConnection!\n  node(id: ID!): Node\n}\n\ntype Subscription {\n  account(where: AccountSubscriptionWhereInput): AccountSubscriptionPayload\n  image(where: ImageSubscriptionWhereInput): ImageSubscriptionPayload\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n  profile(where: ProfileSubscriptionWhereInput): ProfileSubscriptionPayload\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 29,
      "containsCycle": true,
      "numDefinitions": 98
    }
  ],
  "metrics": {
    "created_at": "2018-08-10T22:18:26Z",
    "updated_at": "2019-01-15T11:51:34Z",
    "pushed_at": "2019-07-13T08:00:01Z",
    "issues": 46,
    "watchers": 0,
    "fork_count": 1,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 346,
    "pull_requests_open": 2,
    "pull_requests_closed": 2,
    "pull_requests_merged": 342,
    "releases": 0,
    "stargazers": 1
  }
}