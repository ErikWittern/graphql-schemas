{
  "repo_name": "codemods",
  "repo_full_name": "jedwards1211/codemods",
  "repo_owner": "jedwards1211",
  "repo_description": "my personal jscodeshift codemods",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "test/schema.graphql",
      "sha": "ada32a1a03c753c8f7e6c2fd3bbc0b139cb6ee3a",
      "url": "https://api.github.com/repositories/137167474/contents/test/schema.graphql?ref=2e14a6a6e7ee5dfb5cda076ee9c7a8959637290d",
      "git_url": "https://api.github.com/repositories/137167474/git/blobs/ada32a1a03c753c8f7e6c2fd3bbc0b139cb6ee3a",
      "html_url": "https://github.com/jedwards1211/codemods/blob/2e14a6a6e7ee5dfb5cda076ee9c7a8959637290d/test/schema.graphql",
      "content": "type AddDevicesToDeviceGroupResult {\n  deviceGroupId: Int!\n  deviceIds: [Int!]!\n}\n\ntype AddUserGroupsToDeviceGroupResult {\n  deviceGroupId: Int!\n  userGroupIds: [Int!]!\n  roles: JSON!\n}\n\ntype AddUserGroupsToDeviceResult {\n  deviceId: Int!\n  userGroupIds: [Int!]!\n  roles: JSON!\n}\n\ntype AddUsersToDeviceGroupResult {\n  deviceGroupId: Int!\n  userIds: [Int!]!\n  roles: JSON!\n}\n\ntype AddUsersToDeviceResult {\n  deviceId: Int!\n  userIds: [Int!]!\n  roles: JSON!\n}\n\ntype AddUsersToOrganizationResult {\n  organizationId: Int!\n  userIds: [Int!]!\n}\n\ntype AddUsersToUserGroupResult {\n  userGroupId: Int!\n  userIds: [Int!]!\n}\n\ntype ContactPreferences {\n  userId: Int\n  email: String\n  blockInvitations: Boolean!\n}\n\ninput CreateCustomDashboard {\n  name: String!\n  config: JSON\n}\n\ninput CreateDevice {\n  name: String!\n  type: DeviceType\n}\n\ninput CreateDeviceGroup {\n  name: String!\n}\n\ninput CreateMQTTDevice {\n  name: String!\n  username: String!\n  password: String!\n  protocol: MQTTProtocol!\n}\n\ninput CreateMQTTDeviceChannel {\n  deviceId: Int!\n  channelGroupId: Int!\n  direction: DeviceDirection!\n  tagInDevice: String!\n  MetadataItem: InputMetadataItem\n  mqttTag: String!\n  enabled: Boolean\n  name: String\n  multiplier: Float\n  offset: Float\n}\n\ninput CreateOrganization {\n  name: String!\n  displayName: String\n}\n\ninput CreateUser {\n  name: String\n  username: String!\n}\n\ninput CreateUserGroup {\n  name: String!\n}\n\ntype CustomDashboard {\n  id: Int!\n  name: String!\n  config: JSON!\n  readOnly: Boolean!\n}\n\ntype CustomDashboardConnection {\n  pageInfo: PageInfo!\n  fullCount: Int\n  edges: [CustomDashboardEdge]\n}\n\ntype CustomDashboardEdge {\n  cursor: String!\n  node: CustomDashboard!\n}\n\nenum CustomDashboardsOrderBy {\n  ID\n  NAME\n  CREATED_AT\n  UPDATED_AT\n}\n\ntype DestroyDeviceGroupResult {\n  deviceGroupId: Int!\n}\n\ntype DestroyDeviceResult {\n  deviceId: Int!\n}\n\ntype DestroyDevicesResult {\n  deviceIds: [Int!]!\n}\n\ntype DestroyMQTTDeviceChannelsResult {\n  ids: [Int!]!\n}\n\ntype DestroyOrganizationResult {\n  organizationId: Int!\n}\n\ntype DestroyUserGroupResult {\n  userGroupId: Int!\n}\n\ntype DestroyUserResult {\n  userId: Int!\n}\n\ntype Device {\n  id: Int!\n  type: DeviceType\n  name: String!\n  Organization: Organization!\n  MQTTDevice: MQTTDevice\n  Users(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [UsersOrderBy!]): UserConnection!\n  UserGroups(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [UserGroupsOrderBy!]): UserGroupConnection!\n  DeviceGroups(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [DeviceGroupsOrderBy!], excludeAllDevicesGroups: Boolean): DeviceGroupConnection!\n  MetadataFromDevice(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [MetadataOrderBy!]): MetadataItemConnection!\n  MetadataToDevice(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [MetadataOrderBy!]): MetadataItemConnection!\n}\n\ntype DeviceConnection {\n  pageInfo: PageInfo!\n  fullCount: Int\n  edges: [DeviceEdge]\n}\n\nenum DeviceDirection {\n  FROM_DEVICE\n  TO_DEVICE\n}\n\ntype DeviceEdge {\n  cursor: String!\n  node: Device!\n}\n\ntype DeviceGroup {\n  id: Int!\n  name: String!\n  Organization: Organization!\n  Users(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [UsersOrderBy!]): UserConnection!\n  UserGroups(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [UserGroupsOrderBy!]): UserGroupConnection!\n  Devices(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [DevicesOrderBy!]): DeviceConnection!\n}\n\ntype DeviceGroupConnection {\n  pageInfo: PageInfo!\n  fullCount: Int\n  edges: [DeviceGroupEdge]\n}\n\ntype DeviceGroupEdge {\n  cursor: String!\n  node: DeviceGroup!\n}\n\nenum DeviceGroupsOrderBy {\n  ID\n  NAME\n}\n\ntype DeviceOrDeviceGroup {\n  id: Int!\n  name: String!\n  roles: JSON\n  type: DeviceOrDeviceGroupType\n}\n\ntype DeviceOrDeviceGroupConnection {\n  pageInfo: PageInfo!\n  fullCount: Int\n  edges: [DeviceOrDeviceGroupEdge]\n}\n\ntype DeviceOrDeviceGroupEdge {\n  cursor: String!\n  node: DeviceOrDeviceGroup!\n}\n\nenum DeviceOrDeviceGroupType {\n  Device\n  DeviceGroup\n}\n\nenum DevicesOrderBy {\n  ID\n  NAME\n}\n\nenum DevicesOrDeviceGroupsOrderBy {\n  ID\n  NAME\n}\n\nenum DeviceType {\n  MQTT\n}\n\ninput InputMetadataItem {\n  tag: String\n  organizationId: Int\n  tagInOrganization: String\n  name: String!\n  dataType: TagDataType!\n  isDigital: Boolean\n  units: String\n  min: Float\n  max: Float\n  rounding: Float\n  displayPrecision: Int\n}\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\"\"\"\nscalar JSON\n\ntype MetadataItem {\n  tag: String!\n  organizationId: Int\n  tagInOrganization: String\n  name: String!\n  dataType: TagDataType!\n  isDigital: Boolean\n  units: String\n  min: Float\n  max: Float\n  displayPrecision: Int\n  rounding: Float\n  TagState: TagState\n  Parent: MetadataItem\n  hasParent: Boolean!\n  Children(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [MetadataOrderBy!]): MetadataItemConnection!\n  hasAnyChildren: Boolean!\n  Organization: Organization\n}\n\ntype MetadataItemConnection {\n  pageInfo: PageInfo!\n  fullCount: Int\n  edges: [MetadataItemEdge]\n}\n\ntype MetadataItemEdge {\n  cursor: String!\n  node: MetadataItem!\n}\n\nenum MetadataOrderBy {\n  TAG\n}\n\ntype MQTTDevice {\n  id: Int!\n  name: String!\n  organizationId: Int!\n  username: String!\n  password: String!\n  protocol: MQTTProtocol!\n  Device: Device\n  ChannelsFromMQTT(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [MQTTDeviceChannelsOrderBy!]): MQTTDeviceChannelConnection!\n  ChannelsToMQTT(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [MQTTDeviceChannelsOrderBy!]): MQTTDeviceChannelConnection!\n  ChannelGroups: [MQTTDeviceChannelGroup!]!\n}\n\ntype MQTTDeviceChannel {\n  id: Int!\n  deviceId: Int!\n  channelGroupId: Int!\n  direction: DeviceDirection!\n  type: DeviceType!\n  tag: String!\n  tagInDevice: String!\n  mqttTag: String!\n  enabled: Boolean!\n  name: String\n  multiplier: Float\n  offset: Float\n  MQTTDevice: MQTTDevice!\n  MetadataItem: MetadataItem!\n  TagPrefixes: MQTTDeviceChannelGroupTagPrefix!\n}\n\ntype MQTTDeviceChannelConnection {\n  pageInfo: PageInfo!\n  fullCount: Int\n  edges: [MQTTDeviceChannelEdge]\n}\n\ntype MQTTDeviceChannelEdge {\n  cursor: String!\n  node: MQTTDeviceChannel!\n}\n\ntype MQTTDeviceChannelGroup {\n  id: Int!\n  deviceId: Int!\n  direction: DeviceDirection!\n  automaticallyDetectAndAddTags: Boolean!\n  importUnitsAndRange: Boolean!\n  prefixTagsWith: MQTTDevicePrefixTagsWithOption\n  customPrefix: String\n  minPublishIntervalEnabled: Boolean!\n  minPublishInterval: Int\n  resendIntervalEnabled: Boolean!\n  resendIntervalValue: Int\n  resendIntervalUnit: MQTTDeviceTimeUnit\n  MQTTDevice: MQTTDevice!\n  Channels(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [MQTTDeviceChannelsOrderBy!]): MQTTDeviceChannelConnection!\n  TagPrefixes: MQTTDeviceChannelGroupTagPrefix!\n}\n\ntype MQTTDeviceChannelGroupConnection {\n  pageInfo: PageInfo!\n  fullCount: Int\n  edges: [MQTTDeviceChannelGroupEdge]\n}\n\ntype MQTTDeviceChannelGroupEdge {\n  cursor: String!\n  node: MQTTDeviceChannelGroup!\n}\n\nenum MQTTDeviceChannelGroupsOrderBy {\n  ID\n  DEVICE_ID\n  DIRECTION\n}\n\ntype MQTTDeviceChannelGroupTagPrefix {\n  id: Int!\n  organizationTagPrefix: String!\n  deviceTagPrefix: String!\n}\n\nenum MQTTDeviceChannelsOrderBy {\n  ID\n  DEVICE_ID\n  CHANNEL_GROUP_ID\n  DIRECTION\n  TAG\n  TAG_IN_DEVICE\n  MQTT_TAG\n  ENABLED\n  NAME\n}\n\ntype MQTTDeviceConnection {\n  pageInfo: PageInfo!\n  fullCount: Int\n  edges: [MQTTDeviceEdge]\n}\n\ntype MQTTDeviceEdge {\n  cursor: String!\n  node: MQTTDevice!\n}\n\nenum MQTTDevicePrefixTagsWithOption {\n  NOTHING\n  DEVICE_NAME\n  CUSTOM_PREFIX\n}\n\nenum MQTTDevicesOrderBy {\n  ID\n}\n\nenum MQTTDeviceTimeUnit {\n  MILLISECONDS\n  SECONDS\n  MINUTES\n  HOURS\n}\n\nenum MQTTProtocol {\n  SPARKPLUG\n  JSON\n}\n\ntype Mutation {\n  updateContactPreferences(userId: Int, token: String, values: UpdateContactPreferences): ContactPreferences\n  createCustomDashboard(organizationId: Int!, values: CreateCustomDashboard!): CustomDashboard!\n  updateCustomDashboard(id: Int!, values: UpdateCustomDashboard!): CustomDashboard!\n  destroyCustomDashboard(id: Int!): Boolean\n  createDevice(organizationId: Int!, values: CreateDevice!): Device!\n  updateDevice(id: Int!, values: UpdateDevice!): Device!\n  destroyDevice(id: Int!): DestroyDeviceResult!\n  destroyDevices(deviceIds: [Int!]!): DestroyDevicesResult!\n  addUsersToDevice(deviceId: Int!, userIds: [Int!]!, roles: JSON): AddUsersToDeviceResult!\n  setUsersRolesInDevice(deviceId: Int!, userIds: [Int!]!, roles: JSON!): SetUsersRolesInDeviceResult!\n  setUserRolesInDevice(deviceId: Int!, userId: Int!, roles: JSON!): SetUserRolesInDeviceResult!\n  removeUsersFromDevice(deviceId: Int!, userIds: [Int!]!): RemoveUsersFromDeviceResult!\n  addUserGroupsToDevice(deviceId: Int!, userGroupIds: [Int!]!, roles: JSON): AddUserGroupsToDeviceResult!\n  setUserGroupsRolesInDevice(deviceId: Int!, userGroupIds: [Int!]!, roles: JSON!): SetUserGroupsRolesInDeviceResult!\n  setUserGroupRolesInDevice(deviceId: Int!, userGroupId: Int!, roles: JSON!): SetUserGroupRolesInDeviceResult!\n  removeUserGroupsFromDevice(deviceId: Int!, userGroupIds: [Int!]!): RemoveUserGroupsFromDeviceResult!\n  createDeviceGroup(organizationId: Int!, values: CreateDeviceGroup!): DeviceGroup!\n  updateDeviceGroup(id: Int!, values: UpdateDeviceGroup!): DeviceGroup!\n  destroyDeviceGroup(id: Int!): DestroyDeviceGroupResult!\n  addUsersToDeviceGroup(deviceGroupId: Int!, userIds: [Int!]!, roles: JSON): AddUsersToDeviceGroupResult!\n  setUsersRolesInDeviceGroup(deviceGroupId: Int!, userIds: [Int!]!, roles: JSON!): SetUsersRolesInDeviceGroupResult!\n  setUserRolesInDeviceGroup(deviceGroupId: Int!, userId: Int!, roles: JSON!): SetUserRolesInDeviceGroupResult!\n  removeUsersFromDeviceGroup(deviceGroupId: Int!, userIds: [Int!]!): RemoveUsersFromDeviceGroupResult!\n  addUserGroupsToDeviceGroup(deviceGroupId: Int!, userGroupIds: [Int!]!, roles: JSON): AddUserGroupsToDeviceGroupResult!\n  setUserGroupsRolesInDeviceGroup(deviceGroupId: Int!, userGroupIds: [Int!]!, roles: JSON!): SetUserGroupsRolesInDeviceGroupResult!\n  setUserGroupRolesInDeviceGroup(deviceGroupId: Int!, userGroupId: Int!, roles: JSON!): SetUserGroupRolesInDeviceGroupResult!\n  removeUserGroupsFromDeviceGroup(deviceGroupId: Int!, userGroupIds: [Int!]!): RemoveUserGroupsFromDeviceGroupResult!\n  addDevicesToDeviceGroup(deviceGroupId: Int!, deviceIds: [Int!]!): AddDevicesToDeviceGroupResult!\n  setDevicesInDeviceGroup(deviceGroupId: Int!, deviceIds: [Int!]!): SetDevicesInDeviceGroupResult!\n  removeDevicesFromDeviceGroup(deviceGroupId: Int!, deviceIds: [Int!]!): RemoveDevicesFromDeviceGroupResult!\n  createMetadataItem(values: InputMetadataItem!): MetadataItem!\n  updateMetadataItem(tag: String, organizationId: Int, tagInOrganization: String, values: InputMetadataItem!): MetadataItem!\n  upsertMetadataItem(values: InputMetadataItem!): MetadataItem!\n  createMQTTDevice(organizationId: Int!, values: CreateMQTTDevice!): MQTTDevice!\n  updateMQTTDevice(id: Int!, values: UpdateMQTTDevice!): MQTTDevice!\n  createMQTTDeviceChannel(values: CreateMQTTDeviceChannel!): MQTTDeviceChannel!\n  updateMQTTDeviceChannel(id: Int!, values: UpdateMQTTDeviceChannel!): MQTTDeviceChannel!\n  destroyMQTTDeviceChannels(ids: [Int!]!): DestroyMQTTDeviceChannelsResult!\n  createOrganization(values: CreateOrganization!): Organization!\n  updateOrganization(id: Int!, values: UpdateOrganization!): Organization!\n  destroyOrganization(id: Int!): DestroyOrganizationResult!\n  addUsersToOrganization(organizationId: Int!, userIds: [Int!]!, role: RoleInOrganization!): AddUsersToOrganizationResult!\n  setUsersRoleInOrganization(organizationId: Int!, userIds: [Int!]!, role: RoleInOrganization!): SetUsersRoleInOrganizationResult!\n  removeUsersFromOrganization(organizationId: Int!, userIds: [Int!]!): RemoveUsersFromOrganizationResult!\n  createUser(values: CreateUser!, organizationId: Int, role: RoleInOrganization): User!\n  updateUser(id: Int!, values: UpdateUser!): User!\n  destroyUser(id: Int!): DestroyUserResult!\n  createUserGroup(organizationId: Int!, values: CreateUserGroup!): UserGroup!\n  updateUserGroup(id: Int!, values: UpdateUserGroup!): UserGroup!\n  destroyUserGroup(id: Int!): DestroyUserGroupResult!\n  addUsersToUserGroup(userGroupId: Int!, userIds: [Int!]!): AddUsersToUserGroupResult!\n  setUserGroupMembers(userGroupId: Int!, userIds: [Int!]!): SetUserGroupMembersResult!\n  removeUsersFromUserGroup(userGroupId: Int!, userIds: [Int!]!): RemoveUsersFromUserGroupResult!\n}\n\ntype Organization {\n  id: Int!\n  name: String!\n  displayName: String\n  userRole: RoleInOrganization\n  Users(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [UsersOrderBy!]): UserConnection!\n  UserGroups(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [UserGroupsOrderBy!]): UserGroupConnection!\n  AllUsersGroup: UserGroup!\n  Devices(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [DevicesOrderBy!]): DeviceConnection!\n  DeviceGroups(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [DeviceGroupsOrderBy!]): DeviceGroupConnection!\n  AllDevicesGroup: DeviceGroup!\n  Metadata(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [MetadataOrderBy!]): MetadataItemConnection!\n}\n\ntype OrganizationConnection {\n  pageInfo: PageInfo!\n  fullCount: Int\n  edges: [OrganizationEdge]\n}\n\ntype OrganizationEdge {\n  cursor: String!\n  node: Organization!\n}\n\nenum OrganizationsOrderBy {\n  ID\n  NAME\n  DISPLAY_NAME\n  CREATED_AT\n  UPDATED_AT\n}\n\ntype PageInfo {\n  hasPreviousPage: Boolean!\n  hasNextPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  ContactPreferences(userId: Int, token: String): ContactPreferences\n  CustomDashboard(id: Int!): CustomDashboard\n  CustomDashboards(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [CustomDashboardsOrderBy!], organizationId: Int): CustomDashboardConnection!\n  Device(id: Int!): Device\n  Devices(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [DevicesOrderBy!], organizationId: Int, userId: Int, userGroupId: Int, deviceGroupId: Int, search: String, mqttDevicesOnly: Boolean): DeviceConnection\n  userRolesInDevice(userId: Int!, deviceId: Int!): JSON!\n  userGroupRolesInDevice(userGroupId: Int!, deviceId: Int!): JSON!\n  DeviceGroup(id: Int!): DeviceGroup\n  DeviceGroups(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [DeviceGroupsOrderBy!], organizationId: Int, userId: Int, userGroupId: Int, deviceId: Int, excludeAllDevicesGroups: Boolean, search: String): DeviceGroupConnection\n  userRolesInDeviceGroup(userId: Int!, deviceGroupId: Int!): JSON!\n  userGroupRolesInDeviceGroup(userGroupId: Int!, deviceGroupId: Int!): JSON!\n  DevicesOrDeviceGroups(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [DevicesOrDeviceGroupsOrderBy!], organizationId: Int!, userId: Int, userGroupId: Int, search: String): DeviceOrDeviceGroupConnection\n  MetadataItem(tag: String, organizationId: Int, tagInOrganization: String): MetadataItem\n  Metadata(tags: [String!], roots: Boolean, organizationId: Int, deviceId: Int, first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [MetadataOrderBy!]): MetadataItemConnection!\n  MQTTDevice(id: Int!): MQTTDevice\n  MQTTDeviceChannel(id: Int!): MQTTDeviceChannel\n  MQTTDeviceChannelGroup(id: Int!): MQTTDeviceChannelGroup\n  Organization(id: Int!): Organization\n  Organizations(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [OrganizationsOrderBy!], search: String): OrganizationConnection!\n  TagState(tag: String!): TagState\n  currentUser: User\n  User(id: Int!): User\n  Users(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [UsersOrderBy!], organizationId: Int, userGroupId: Int, deviceGroupId: Int, deviceId: Int, search: String): UserConnection\n  UserGroup(id: Int!): UserGroup\n  UserGroups(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [UserGroupsOrderBy!], organizationId: Int, userId: Int, deviceGroupId: Int, deviceId: Int, excludeAllUsersGroups: Boolean, search: String): UserGroupConnection\n  UsersOrUserGroups(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [UsersOrUserGroupsOrderBy!], organizationId: Int!, deviceId: Int, deviceGroupId: Int, search: String): UserOrUserGroupConnection\n}\n\ntype RemoveDevicesFromDeviceGroupResult {\n  deviceGroupId: Int!\n  deviceIds: [Int!]!\n}\n\ntype RemoveUserGroupsFromDeviceGroupResult {\n  deviceGroupId: Int!\n  userGroupIds: [Int!]!\n}\n\ntype RemoveUserGroupsFromDeviceResult {\n  deviceId: Int!\n  userGroupIds: [Int!]!\n}\n\ntype RemoveUsersFromDeviceGroupResult {\n  deviceGroupId: Int!\n  userIds: [Int!]!\n}\n\ntype RemoveUsersFromDeviceResult {\n  deviceId: Int!\n  userIds: [Int!]!\n}\n\ntype RemoveUsersFromOrganizationResult {\n  organizationId: Int!\n  userIds: [Int!]!\n}\n\ntype RemoveUsersFromUserGroupResult {\n  userGroupId: Int!\n  userIds: [Int!]!\n}\n\nenum RoleInOrganization {\n  owner\n  admin\n  member\n}\n\ntype SetDevicesInDeviceGroupResult {\n  deviceGroupId: Int!\n  deviceIds: [Int!]!\n}\n\ntype SetUserGroupMembersResult {\n  userGroupId: Int!\n  userIds: [Int!]!\n}\n\ntype SetUserGroupRolesInDeviceGroupResult {\n  deviceGroupId: Int!\n  userGroupId: Int!\n  roles: JSON!\n}\n\ntype SetUserGroupRolesInDeviceResult {\n  deviceId: Int!\n  userGroupId: Int!\n  roles: JSON!\n}\n\ntype SetUserGroupsRolesInDeviceGroupResult {\n  deviceGroupId: Int!\n  userGroupIds: [Int!]!\n  roles: JSON!\n}\n\ntype SetUserGroupsRolesInDeviceResult {\n  deviceId: Int!\n  userGroupIds: [Int!]!\n  roles: JSON!\n}\n\ntype SetUserRolesInDeviceGroupResult {\n  deviceGroupId: Int!\n  userId: Int!\n  roles: JSON!\n}\n\ntype SetUserRolesInDeviceResult {\n  deviceId: Int!\n  userId: Int!\n  roles: JSON!\n}\n\ntype SetUsersRoleInOrganizationResult {\n  organizationId: Int!\n  userIds: [Int!]!\n  role: RoleInOrganization!\n}\n\ntype SetUsersRolesInDeviceGroupResult {\n  deviceGroupId: Int!\n  userIds: [Int!]!\n  roles: JSON!\n}\n\ntype SetUsersRolesInDeviceResult {\n  deviceId: Int!\n  userIds: [Int!]!\n  roles: JSON!\n}\n\ntype Subscription {\n  HistoricalDataPage(request: TimeSeriesDataPageSubRequest!): TimeSeriesDataPageSubMessage!\n  Metadata(tags: [String!]): MetadataItem\n  TagState(tags: [String!]!): TagState\n}\n\nenum TagDataType {\n  number\n  string\n  group\n}\n\ntype TagState {\n  tag: String!\n  t: Float!\n  v: JSON\n}\n\ntype TimeSeriesDataArrays {\n  t: JSON!\n  v: JSON\n  min: JSON\n  max: JSON\n}\n\ntype TimeSeriesDataPage {\n  t: JSON!\n  v: JSON\n  min: JSON\n  max: JSON\n  modCount: Int\n}\n\ntype TimeSeriesDataPageSubData {\n  t: JSON!\n  v: JSON\n  min: JSON\n  max: JSON\n  modCount: Int\n  pageSize: Float!\n  channelId: String!\n  clear: Boolean\n  beginTime: Float\n  endTime: Float\n}\n\ntype TimeSeriesDataPageSubMessage {\n  data: TimeSeriesDataPageSubData\n  ready: Boolean\n  error: String\n}\n\ninput TimeSeriesDataPageSubRequest {\n  channelId: String!\n  pageSize: Float!\n  timestamp: Float!\n  modCount: Int\n}\n\ninput UpdateContactPreferences {\n  blockInvitations: Boolean\n}\n\ninput UpdateCustomDashboard {\n  name: String\n  config: JSON\n}\n\ninput UpdateDevice {\n  name: String\n}\n\ninput UpdateDeviceGroup {\n  name: String\n}\n\ninput UpdateMQTTDevice {\n  name: String\n  username: String\n  password: String\n  protocol: MQTTProtocol\n  ChannelGroups: [UpsertMQTTDeviceChannelGroup!]\n}\n\ninput UpdateMQTTDeviceChannel {\n  MetadataItem: InputMetadataItem\n  tagInDevice: String\n  mqttTag: String\n  enabled: Boolean\n  name: String\n  multiplier: Float\n  offset: Float\n}\n\ninput UpdateOrganization {\n  name: String\n  displayName: String\n}\n\ninput UpdateUser {\n  name: String\n  username: String\n}\n\ninput UpdateUserGroup {\n  name: String\n}\n\ninput UpsertMQTTDeviceChannelGroup {\n  id: Int\n  deviceId: Int!\n  direction: DeviceDirection!\n  automaticallyDetectAndAddTags: Boolean!\n  importUnitsAndRange: Boolean!\n  prefixTagsWith: MQTTDevicePrefixTagsWithOption\n  customPrefix: String\n  minPublishIntervalEnabled: Boolean!\n  minPublishInterval: Int\n  resendIntervalEnabled: Boolean!\n  resendIntervalValue: Int\n  resendIntervalUnit: MQTTDeviceTimeUnit\n}\n\ntype User {\n  id: Int!\n  name: String\n  username: String\n  roleInOrganization(organizationId: Int): RoleInOrganization\n  rolesInDevice(deviceId: Int): JSON\n  rolesInDeviceGroup(deviceGroupId: Int): JSON\n  roles: JSON!\n  Organizations(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [OrganizationsOrderBy!]): OrganizationConnection!\n  UserGroups(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [UserGroupsOrderBy!], organizationId: Int, excludeAllUsersGroups: Boolean): UserGroupConnection!\n  DeviceGroups(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [DeviceGroupsOrderBy!], organizationId: Int): DeviceGroupConnection!\n  Devices(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [DevicesOrderBy!], organizationId: Int): DeviceConnection!\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  fullCount: Int\n  edges: [UserEdge]\n}\n\ntype UserEdge {\n  cursor: String!\n  node: User!\n}\n\ntype UserGroup {\n  id: Int!\n  name: String!\n  Organization: Organization!\n  rolesInDevice(deviceId: Int): JSON\n  rolesInDeviceGroup(deviceGroupId: Int): JSON\n  Users(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [UsersOrderBy!]): UserConnection!\n  DeviceGroups(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [DeviceGroupsOrderBy!]): DeviceGroupConnection!\n  Devices(first: Int, last: Int, before: String, after: String, offset: Int, orderBy: [DevicesOrderBy!]): DeviceConnection!\n}\n\ntype UserGroupConnection {\n  pageInfo: PageInfo!\n  fullCount: Int\n  edges: [UserGroupEdge]\n}\n\ntype UserGroupEdge {\n  cursor: String!\n  node: UserGroup!\n}\n\nenum UserGroupsOrderBy {\n  ID\n  NAME\n}\n\ntype UserOrUserGroup {\n  id: Int!\n  name: String\n  username: String\n  roles: JSON\n  type: UserOrUserGroupType\n}\n\ntype UserOrUserGroupConnection {\n  pageInfo: PageInfo!\n  fullCount: Int\n  edges: [UserOrUserGroupEdge]\n}\n\ntype UserOrUserGroupEdge {\n  cursor: String!\n  node: UserOrUserGroup!\n}\n\nenum UserOrUserGroupType {\n  User\n  UserGroup\n}\n\nenum UsersOrderBy {\n  ID\n  NAME\n  USERNAME\n}\n\nenum UsersOrUserGroupsOrderBy {\n  ID\n  NAME\n  USERNAME\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 79,
      "containsCycle": true,
      "numDefinitions": 121
    }
  ],
  "metrics": {
    "created_at": "2018-06-13T05:40:24Z",
    "updated_at": "2019-05-22T22:31:59Z",
    "pushed_at": "2019-05-22T22:31:57Z",
    "issues": 0,
    "watchers": 0,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}