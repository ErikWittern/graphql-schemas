{
  "repo_name": "dagster",
  "repo_full_name": "dagster-io/dagster",
  "repo_owner": "dagster-io",
  "repo_description": " Dagster: A programming model for data applications.",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "js_modules/dagit/src/schema.graphql",
      "sha": "e0b5dc79d9648ea268a9623c543f2cc7c088af86",
      "url": "https://api.github.com/repositories/131619646/contents/js_modules/dagit/src/schema.graphql?ref=563e6ce4a93d68340bd417669426fa14842665c2",
      "git_url": "https://api.github.com/repositories/131619646/git/blobs/e0b5dc79d9648ea268a9623c543f2cc7c088af86",
      "html_url": "https://github.com/dagster-io/dagster/blob/563e6ce4a93d68340bd417669426fa14842665c2/js_modules/dagit/src/schema.graphql",
      "content": "type CompositeConfigType implements ConfigType {\n  key: String!\n  name: String\n  description: String\n  innerTypes: [ConfigType!]!\n  isNullable: Boolean!\n  isList: Boolean!\n  isSelector: Boolean!\n  isBuiltin: Boolean!\n  isSystemGenerated: Boolean!\n  fields: [ConfigTypeField!]!\n}\n\ntype CompositeSolidDefinition implements ISolidDefinition & SolidContainer {\n  name: String!\n  description: String\n  metadata: [MetadataItemDefinition!]!\n  inputDefinitions: [InputDefinition!]!\n  outputDefinitions: [OutputDefinition!]!\n  solids: [Solid!]!\n  inputMappings: [InputMapping!]!\n  outputMappings: [OutputMapping!]!\n}\n\ninterface ConfigType {\n  key: String!\n  name: String\n  description: String\n  innerTypes: [ConfigType!]!\n  isNullable: Boolean!\n  isList: Boolean!\n  isSelector: Boolean!\n  isBuiltin: Boolean!\n  isSystemGenerated: Boolean!\n}\n\ntype ConfigTypeField {\n  name: String!\n  description: String\n  configType: ConfigType!\n  defaultValue: String\n  isOptional: Boolean!\n  isSecret: Boolean!\n}\n\ntype ConfigTypeNotFoundError implements Error {\n  message: String!\n  stack: [String!]!\n  pipeline: Pipeline!\n  configTypeName: String!\n}\n\nunion ConfigTypeOrError = EnumConfigType | CompositeConfigType | RegularConfigType | PipelineNotFoundError | ConfigTypeNotFoundError\n\nscalar Cursor\n\ntype EnumConfigType implements ConfigType {\n  key: String!\n  name: String\n  description: String\n  innerTypes: [ConfigType!]!\n  isNullable: Boolean!\n  isList: Boolean!\n  isSelector: Boolean!\n  isBuiltin: Boolean!\n  isSystemGenerated: Boolean!\n  values: [EnumConfigValue!]!\n}\n\ntype EnumConfigValue {\n  value: String!\n  description: String\n}\n\ninterface Error {\n  message: String!\n  stack: [String!]!\n}\n\nenum EvaluationErrorReason {\n  RUNTIME_TYPE_MISMATCH\n  MISSING_REQUIRED_FIELD\n  MISSING_REQUIRED_FIELDS\n  FIELD_NOT_DEFINED\n  FIELDS_NOT_DEFINED\n  SELECTOR_FIELD_ERROR\n}\n\ntype EvaluationStack {\n  entries: [EvaluationStackEntry!]!\n}\n\nunion EvaluationStackEntry = EvaluationStackListItemEntry | EvaluationStackPathEntry\n\ntype EvaluationStackListItemEntry {\n  listIndex: Int!\n}\n\ntype EvaluationStackPathEntry {\n  field: ConfigTypeField!\n}\n\nunion ExecutePlanResult = ExecutePlanSuccess | PipelineConfigValidationInvalid | PipelineNotFoundError | InvalidStepError | PythonError\n\ntype ExecutePlanSuccess {\n  pipeline: Pipeline!\n  hasFailures: Boolean!\n  stepEvents: [StepEvent!]!\n}\n\ninput ExecutionMetadata {\n  runId: String\n  tags: [ExecutionTag!]\n}\n\ntype ExecutionPlan {\n  steps: [ExecutionStep!]!\n  pipeline: Pipeline!\n  artifactsPersisted: Boolean!\n}\n\nunion ExecutionPlanResult = ExecutionPlan | PipelineConfigValidationInvalid | PipelineNotFoundError\n\ninput ExecutionSelector {\n  name: String!\n  solidSubset: [String!]\n}\n\ntype ExecutionStep {\n  name: String! @deprecated(reason: \"Use key\")\n  key: String!\n  inputs: [ExecutionStepInput!]!\n  outputs: [ExecutionStepOutput!]!\n  solidHandleID: String!\n  kind: StepKind!\n  metadata: [MetadataItemDefinition!]!\n}\n\ntype ExecutionStepFailureEvent implements MessageEvent & StepEvent {\n  runId: String!\n  message: String!\n  timestamp: String!\n  level: LogLevel!\n  step: ExecutionStep\n  error: PythonError!\n}\n\ntype ExecutionStepInput {\n  name: String!\n  type: RuntimeType!\n  dependsOn: ExecutionStep!\n}\n\ntype ExecutionStepOutput {\n  name: String!\n  type: RuntimeType!\n}\n\ntype ExecutionStepOutputEvent implements MessageEvent & StepEvent {\n  runId: String!\n  message: String!\n  timestamp: String!\n  level: LogLevel!\n  step: ExecutionStep\n  outputName: String!\n  valueRepr: String!\n  intermediateMaterialization: Materialization\n}\n\ntype ExecutionStepSkippedEvent implements MessageEvent & StepEvent {\n  runId: String!\n  message: String!\n  timestamp: String!\n  level: LogLevel!\n  step: ExecutionStep\n}\n\ntype ExecutionStepStartEvent implements MessageEvent & StepEvent {\n  runId: String!\n  message: String!\n  timestamp: String!\n  level: LogLevel!\n  step: ExecutionStep\n}\n\ntype ExecutionStepSuccessEvent implements MessageEvent & StepEvent {\n  runId: String!\n  message: String!\n  timestamp: String!\n  level: LogLevel!\n  step: ExecutionStep\n}\n\ninput ExecutionTag {\n  key: String!\n  value: String!\n}\n\ntype Expectation {\n  name: String!\n  description: String\n}\n\ntype ExpectationResult {\n  success: Boolean!\n  name: String\n  message: String\n  resultMetadataJsonString: String\n}\n\ntype FieldNotDefinedConfigError implements PipelineConfigValidationError {\n  message: String!\n  path: [String!]!\n  stack: EvaluationStack!\n  reason: EvaluationErrorReason!\n  fieldName: String!\n}\n\ntype FieldsNotDefinedConfigError implements PipelineConfigValidationError {\n  message: String!\n  path: [String!]!\n  stack: EvaluationStack!\n  reason: EvaluationErrorReason!\n  fieldNames: [String!]!\n}\n\ntype Input {\n  solid: Solid!\n  definition: InputDefinition!\n  dependsOn: [Output!]!\n}\n\ntype InputDefinition {\n  solidDefinition: SolidDefinition!\n  name: String!\n  description: String\n  type: RuntimeType!\n  expectations: [Expectation!]!\n}\n\ntype InputMapping {\n  mappedInput: Input!\n  definition: InputDefinition!\n}\n\ntype InvalidDefinitionError implements Error {\n  message: String!\n  stack: [String!]!\n}\n\ntype InvalidOutputError {\n  stepKey: String!\n  invalidOutputName: String!\n}\n\ntype InvalidStepError {\n  invalidStepKey: String!\n}\n\ninterface ISolidDefinition {\n  name: String!\n  description: String\n  metadata: [MetadataItemDefinition!]!\n  inputDefinitions: [InputDefinition!]!\n  outputDefinitions: [OutputDefinition!]!\n}\n\ntype ListConfigType implements ConfigType & WrappingConfigType {\n  key: String!\n  name: String\n  description: String\n  innerTypes: [ConfigType!]!\n  isNullable: Boolean!\n  isList: Boolean!\n  isSelector: Boolean!\n  isBuiltin: Boolean!\n  isSystemGenerated: Boolean!\n  ofType: ConfigType!\n}\n\ntype ListRuntimeType implements RuntimeType & WrappingRuntimeType {\n  key: String!\n  name: String\n  displayName: String!\n  description: String\n  isNullable: Boolean!\n  isList: Boolean!\n  isBuiltin: Boolean!\n  isNothing: Boolean!\n  inputSchemaType: ConfigType\n  outputSchemaType: ConfigType\n  innerTypes: [RuntimeType!]!\n  ofType: RuntimeType!\n}\n\ntype Logger {\n  name: String!\n  description: String\n  configField: ConfigTypeField\n}\n\nenum LogLevel {\n  CRITICAL\n  ERROR\n  INFO\n  WARNING\n  DEBUG\n}\n\ntype LogMessageConnection {\n  nodes: [PipelineRunEvent!]!\n  pageInfo: PageInfo!\n}\n\ntype LogMessageEvent implements MessageEvent {\n  runId: String!\n  message: String!\n  timestamp: String!\n  level: LogLevel!\n  step: ExecutionStep\n}\n\ntype Materialization {\n  description: String\n  path: String\n}\n\ninterface MessageEvent {\n  runId: String!\n  message: String!\n  timestamp: String!\n  level: LogLevel!\n  step: ExecutionStep\n}\n\ntype MetadataItemDefinition {\n  key: String!\n  value: String!\n}\n\ntype MissingFieldConfigError implements PipelineConfigValidationError {\n  message: String!\n  path: [String!]!\n  stack: EvaluationStack!\n  reason: EvaluationErrorReason!\n  field: ConfigTypeField!\n}\n\ntype MissingFieldsConfigError implements PipelineConfigValidationError {\n  message: String!\n  path: [String!]!\n  stack: EvaluationStack!\n  reason: EvaluationErrorReason!\n  fields: [ConfigTypeField!]!\n}\n\ntype MissingRunIdErrorEvent {\n  invalidRunId: String!\n}\n\ntype Mode {\n  name: String!\n  description: String\n  resources: [Resource!]!\n  loggers: [Logger!]!\n}\n\ntype Mutation {\n  startPipelineExecution(config: PipelineConfig, executionMetadata: ExecutionMetadata, mode: String!, pipeline: ExecutionSelector!, reexecutionConfig: ReexecutionConfig, stepKeys: [String!]): StartPipelineExecutionResult!\n  executePlan(config: PipelineConfig, executionMetadata: ExecutionMetadata, mode: String!, pipelineName: String!, stepKeys: [String!]): ExecutePlanResult!\n}\n\ntype NullableConfigType implements ConfigType & WrappingConfigType {\n  key: String!\n  name: String\n  description: String\n  innerTypes: [ConfigType!]!\n  isNullable: Boolean!\n  isList: Boolean!\n  isSelector: Boolean!\n  isBuiltin: Boolean!\n  isSystemGenerated: Boolean!\n  ofType: ConfigType!\n}\n\ntype NullableRuntimeType implements RuntimeType & WrappingRuntimeType {\n  key: String!\n  name: String\n  displayName: String!\n  description: String\n  isNullable: Boolean!\n  isList: Boolean!\n  isBuiltin: Boolean!\n  isNothing: Boolean!\n  inputSchemaType: ConfigType\n  outputSchemaType: ConfigType\n  innerTypes: [RuntimeType!]!\n  ofType: RuntimeType!\n}\n\ntype Output {\n  solid: Solid!\n  definition: OutputDefinition!\n  dependedBy: [Input!]!\n}\n\ntype OutputDefinition {\n  solidDefinition: SolidDefinition!\n  name: String!\n  description: String\n  type: RuntimeType!\n  expectations: [Expectation!]!\n}\n\ntype OutputMapping {\n  mappedOutput: Output!\n  definition: OutputDefinition!\n}\n\ntype PageInfo {\n  lastCursor: Cursor\n  hasNextPage: Boolean\n  hasPreviousPage: Boolean\n  count: Int!\n  totalCount: Int!\n}\n\ntype Pipeline implements SolidContainer {\n  solids: [Solid!]!\n  name: String!\n  description: String\n  environmentType(mode: String): ConfigType!\n  configTypes(mode: String): [ConfigType!]!\n  runtimeTypes: [RuntimeType!]!\n  runs: [PipelineRun!]!\n  modes: [Mode!]!\n  solidHandles: [SolidHandle!]!\n  presets: [PipelinePreset!]!\n}\n\nscalar PipelineConfig\n\ninterface PipelineConfigValidationError {\n  message: String!\n  path: [String!]!\n  stack: EvaluationStack!\n  reason: EvaluationErrorReason!\n}\n\ntype PipelineConfigValidationInvalid {\n  pipeline: Pipeline!\n  errors: [PipelineConfigValidationError!]!\n}\n\nunion PipelineConfigValidationResult = PipelineConfigValidationValid | PipelineConfigValidationInvalid | PipelineNotFoundError\n\ntype PipelineConfigValidationValid {\n  pipeline: Pipeline!\n}\n\ntype PipelineConnection {\n  nodes: [Pipeline!]!\n}\n\ninterface PipelineEvent {\n  pipeline: Pipeline!\n}\n\ntype PipelineFailureEvent implements MessageEvent & PipelineEvent {\n  runId: String!\n  message: String!\n  timestamp: String!\n  level: LogLevel!\n  step: ExecutionStep\n  pipeline: Pipeline!\n}\n\ntype PipelineInitFailureEvent implements MessageEvent & PipelineEvent {\n  runId: String!\n  message: String!\n  timestamp: String!\n  level: LogLevel!\n  step: ExecutionStep\n  pipeline: Pipeline!\n  error: PythonError!\n}\n\ntype PipelineNotFoundError implements Error {\n  message: String!\n  stack: [String!]!\n  pipelineName: String!\n}\n\nunion PipelineOrError = Pipeline | PythonError | PipelineNotFoundError | SolidNotFoundError\n\ntype PipelinePreset {\n  name: String!\n  solidSubset: [String!]\n  environment: String\n}\n\ntype PipelineProcessStartedEvent implements MessageEvent & PipelineEvent {\n  runId: String!\n  message: String!\n  timestamp: String!\n  level: LogLevel!\n  step: ExecutionStep\n  pipeline: Pipeline!\n  processId: Int!\n}\n\ntype PipelineProcessStartEvent implements MessageEvent & PipelineEvent {\n  runId: String!\n  message: String!\n  timestamp: String!\n  level: LogLevel!\n  step: ExecutionStep\n  pipeline: Pipeline!\n}\n\ntype PipelineRun {\n  runId: String!\n  status: PipelineRunStatus!\n  pipeline: Pipeline!\n  logs: LogMessageConnection!\n  executionPlan: ExecutionPlan!\n  config: String!\n  mode: String!\n}\n\nunion PipelineRunEvent = LogMessageEvent | PipelineStartEvent | PipelineSuccessEvent | PipelineFailureEvent | PipelineInitFailureEvent | ExecutionStepStartEvent | ExecutionStepSuccessEvent | ExecutionStepOutputEvent | ExecutionStepFailureEvent | ExecutionStepSkippedEvent | PipelineProcessStartEvent | PipelineProcessStartedEvent | StepMaterializationEvent | StepExpectationResultEvent\n\ntype PipelineRunLogsSubscriptionMissingRunIdFailure {\n  missingRunId: String!\n}\n\nunion PipelineRunLogsSubscriptionPayload = PipelineRunLogsSubscriptionSuccess | PipelineRunLogsSubscriptionMissingRunIdFailure\n\ntype PipelineRunLogsSubscriptionSuccess {\n  messages: [PipelineRunEvent!]!\n}\n\ntype PipelineRunNotFoundError implements Error {\n  message: String!\n  stack: [String!]!\n  runId: String!\n}\n\nunion PipelineRunOrError = PipelineRun | PipelineRunNotFoundError\n\nenum PipelineRunStatus {\n  NOT_STARTED\n  STARTED\n  SUCCESS\n  FAILURE\n}\n\nunion PipelinesOrError = PipelineConnection | PythonError | InvalidDefinitionError\n\ntype PipelineStartEvent implements MessageEvent & PipelineEvent {\n  runId: String!\n  message: String!\n  timestamp: String!\n  level: LogLevel!\n  step: ExecutionStep\n  pipeline: Pipeline!\n}\n\ntype PipelineSuccessEvent implements MessageEvent & PipelineEvent {\n  runId: String!\n  message: String!\n  timestamp: String!\n  level: LogLevel!\n  step: ExecutionStep\n  pipeline: Pipeline!\n}\n\ntype PythonError implements Error {\n  message: String!\n  stack: [String!]!\n}\n\ntype Query {\n  version: String!\n  pipelineOrError(params: ExecutionSelector!): PipelineOrError!\n  pipeline(params: ExecutionSelector!): Pipeline!\n  pipelinesOrError: PipelinesOrError!\n  pipelines: PipelineConnection!\n  configTypeOrError(pipelineName: String!, configTypeName: String!, mode: String!): ConfigTypeOrError!\n  runtimeTypeOrError(pipelineName: String!, runtimeTypeName: String!): RuntimeTypeOrError!\n  pipelineRuns: [PipelineRun!]!\n  pipelineRunOrError(runId: ID!): PipelineRunOrError!\n  isPipelineConfigValid(pipeline: ExecutionSelector!, config: PipelineConfig, mode: String!): PipelineConfigValidationResult!\n  executionPlan(pipeline: ExecutionSelector!, config: PipelineConfig, mode: String!): ExecutionPlanResult!\n}\n\ninput ReexecutionConfig {\n  previousRunId: String!\n  stepOutputHandles: [StepOutputHandle!]!\n}\n\ntype RegularConfigType implements ConfigType {\n  key: String!\n  name: String\n  description: String\n  innerTypes: [ConfigType!]!\n  isNullable: Boolean!\n  isList: Boolean!\n  isSelector: Boolean!\n  isBuiltin: Boolean!\n  isSystemGenerated: Boolean!\n}\n\ntype RegularRuntimeType implements RuntimeType {\n  key: String!\n  name: String\n  displayName: String!\n  description: String\n  isNullable: Boolean!\n  isList: Boolean!\n  isBuiltin: Boolean!\n  isNothing: Boolean!\n  inputSchemaType: ConfigType\n  outputSchemaType: ConfigType\n  innerTypes: [RuntimeType!]!\n}\n\ntype Resource {\n  name: String!\n  description: String\n  configField: ConfigTypeField\n}\n\ntype RuntimeMismatchConfigError implements PipelineConfigValidationError {\n  message: String!\n  path: [String!]!\n  stack: EvaluationStack!\n  reason: EvaluationErrorReason!\n  type: ConfigType!\n  valueRep: String\n}\n\ninterface RuntimeType {\n  key: String!\n  name: String\n  displayName: String!\n  description: String\n  isNullable: Boolean!\n  isList: Boolean!\n  isBuiltin: Boolean!\n  isNothing: Boolean!\n  inputSchemaType: ConfigType\n  outputSchemaType: ConfigType\n  innerTypes: [RuntimeType!]!\n}\n\ntype RuntimeTypeNotFoundError implements Error {\n  message: String!\n  stack: [String!]!\n  pipeline: Pipeline!\n  runtimeTypeName: String!\n}\n\nunion RuntimeTypeOrError = RegularRuntimeType | PipelineNotFoundError | RuntimeTypeNotFoundError\n\ntype SelectorTypeConfigError implements PipelineConfigValidationError {\n  message: String!\n  path: [String!]!\n  stack: EvaluationStack!\n  reason: EvaluationErrorReason!\n  incomingFields: [String!]!\n}\n\ntype Solid {\n  name: String!\n  definition: ISolidDefinition!\n  inputs: [Input!]!\n  outputs: [Output!]!\n}\n\ninterface SolidContainer {\n  solids: [Solid!]!\n}\n\ntype SolidDefinition implements ISolidDefinition {\n  name: String!\n  description: String\n  metadata: [MetadataItemDefinition!]!\n  inputDefinitions: [InputDefinition!]!\n  outputDefinitions: [OutputDefinition!]!\n  configDefinition: ConfigTypeField\n}\n\ntype SolidHandle {\n  handleID: String!\n  solid: Solid!\n  parent: SolidHandle\n}\n\ntype SolidNotFoundError implements Error {\n  message: String!\n  stack: [String!]!\n  solidName: String!\n}\n\nunion StartPipelineExecutionResult = InvalidStepError | InvalidOutputError | PipelineConfigValidationInvalid | PipelineNotFoundError | StartPipelineExecutionSuccess\n\ntype StartPipelineExecutionSuccess {\n  run: PipelineRun!\n}\n\ninterface StepEvent {\n  step: ExecutionStep\n}\n\ntype StepExpectationResultEvent implements MessageEvent & StepEvent {\n  runId: String!\n  message: String!\n  timestamp: String!\n  level: LogLevel!\n  step: ExecutionStep\n  expectationResult: ExpectationResult!\n}\n\nenum StepKind {\n  COMPUTE\n  INPUT_EXPECTATION\n  OUTPUT_EXPECTATION\n  JOIN\n  SERIALIZE\n  INPUT_THUNK\n  MATERIALIZATION_THUNK\n  UNMARSHAL_INPUT\n  MARSHAL_OUTPUT\n}\n\ntype StepMaterializationEvent implements MessageEvent & StepEvent {\n  runId: String!\n  message: String!\n  timestamp: String!\n  level: LogLevel!\n  step: ExecutionStep\n  materialization: Materialization!\n}\n\ninput StepOutputHandle {\n  stepKey: String!\n  outputName: String!\n}\n\ntype Subscription {\n  pipelineRunLogs(runId: ID!, after: Cursor): PipelineRunLogsSubscriptionPayload!\n}\n\ninterface WrappingConfigType {\n  ofType: ConfigType!\n}\n\ninterface WrappingRuntimeType {\n  ofType: RuntimeType!\n}\n",
      "containsQueryType": true,
      "typesUndefined": [],
      "directivesUndefined": [
        "deprecated"
      ],
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 79,
      "containsCycle": true,
      "numDefinitions": 113
    }
  ],
  "metrics": {
    "created_at": "2018-04-30T16:30:04Z",
    "updated_at": "2019-07-19T19:14:44Z",
    "pushed_at": "2019-07-19T19:14:42Z",
    "issues": 676,
    "watchers": 28,
    "fork_count": 37,
    "has_wiki_enabled": true,
    "license": "apache-2.0",
    "pull_requests": 915,
    "pull_requests_open": 1,
    "pull_requests_closed": 79,
    "pull_requests_merged": 835,
    "releases": 12,
    "stargazers": 551
  }
}