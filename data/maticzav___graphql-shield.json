{
  "repo_name": "graphql-shield",
  "repo_full_name": "maticzav/graphql-shield",
  "repo_owner": "maticzav",
  "repo_description": "ðŸ›¡ A GraphQL tool to ease the creation of permission layer.",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "prisma.graphql",
      "path": "examples/with-graphql-middleware-forward-binding/src/generated/prisma.graphql",
      "sha": "596b102d36fa148b71998ecee5e16c58267eb87d",
      "url": "https://api.github.com/repositories/121147554/contents/examples/with-graphql-middleware-forward-binding/src/generated/prisma.graphql?ref=07e554ce1bef5838682997676ea92726baffe8d6",
      "git_url": "https://api.github.com/repositories/121147554/git/blobs/596b102d36fa148b71998ecee5e16c58267eb87d",
      "html_url": "https://github.com/maticzav/graphql-shield/blob/07e554ce1bef5838682997676ea92726baffe8d6/examples/with-graphql-middleware-forward-binding/src/generated/prisma.graphql",
      "content": "# source: https://eu1.prisma.sh/matic-zavadlal-03c51f/graphql-shield-example/dev\n# timestamp: Wed Jun 20 2018 13:33:24 GMT+0200 (CEST)\n\ntype AggregatePost {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  createPost(data: PostCreateInput!): Post!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post\n  deleteUser(where: UserWhereUniqueInput!): User\n  deletePost(where: PostWhereUniqueInput!): Post\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  updateManyPosts(data: PostUpdateInput!, where: PostWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyPosts(where: PostWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Post implements Node {\n  id: ID!\n  isPublished: Boolean!\n  title: String!\n  text: String!\n  owner(where: UserWhereInput): User!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PostConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PostEdge]!\n  aggregate: AggregatePost!\n}\n\ninput PostCreateInput {\n  isPublished: Boolean\n  title: String!\n  text: String!\n  owner: UserCreateOneWithoutPostsInput!\n}\n\ninput PostCreateManyWithoutOwnerInput {\n  create: [PostCreateWithoutOwnerInput!]\n  connect: [PostWhereUniqueInput!]\n}\n\ninput PostCreateWithoutOwnerInput {\n  isPublished: Boolean\n  title: String!\n  text: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PostEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Post!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum PostOrderByInput {\n  id_ASC\n  id_DESC\n  isPublished_ASC\n  isPublished_DESC\n  title_ASC\n  title_DESC\n  text_ASC\n  text_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype PostPreviousValues {\n  id: ID!\n  isPublished: Boolean!\n  title: String!\n  text: String!\n}\n\ntype PostSubscriptionPayload {\n  mutation: MutationType!\n  node: Post\n  updatedFields: [String!]\n  previousValues: PostPreviousValues\n}\n\ninput PostSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PostSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PostSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PostSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: PostWhereInput\n}\n\ninput PostUpdateInput {\n  isPublished: Boolean\n  title: String\n  text: String\n  owner: UserUpdateOneWithoutPostsInput\n}\n\ninput PostUpdateManyWithoutOwnerInput {\n  create: [PostCreateWithoutOwnerInput!]\n  connect: [PostWhereUniqueInput!]\n  disconnect: [PostWhereUniqueInput!]\n  delete: [PostWhereUniqueInput!]\n  update: [PostUpdateWithWhereUniqueWithoutOwnerInput!]\n  upsert: [PostUpsertWithWhereUniqueWithoutOwnerInput!]\n}\n\ninput PostUpdateWithoutOwnerDataInput {\n  isPublished: Boolean\n  title: String\n  text: String\n}\n\ninput PostUpdateWithWhereUniqueWithoutOwnerInput {\n  where: PostWhereUniqueInput!\n  data: PostUpdateWithoutOwnerDataInput!\n}\n\ninput PostUpsertWithWhereUniqueWithoutOwnerInput {\n  where: PostWhereUniqueInput!\n  update: PostUpdateWithoutOwnerDataInput!\n  create: PostCreateWithoutOwnerInput!\n}\n\ninput PostWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PostWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PostWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [PostWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  isPublished: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  isPublished_not: Boolean\n  title: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  title_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  title_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  title_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  title_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  title_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  title_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  title_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  title_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  title_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  title_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  title_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  title_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  title_not_ends_with: String\n  text: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  text_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  text_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  text_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  text_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  text_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  text_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  text_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  text_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  text_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  text_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  text_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  text_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  text_not_ends_with: String\n  owner: UserWhereInput\n}\n\ninput PostWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!\n  user(where: UserWhereUniqueInput!): User\n  post(where: PostWhereUniqueInput!): Post\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\nenum Role {\n  ADMIN\n  EDITOR\n  CUSTOMER\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  name: String!\n  role: Role!\n  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  name: String!\n  role: Role!\n  posts: PostCreateManyWithoutOwnerInput\n}\n\ninput UserCreateOneWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutPostsInput {\n  name: String!\n  role: Role!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  role_ASC\n  role_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  name: String!\n  role: Role!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  name: String\n  role: Role\n  posts: PostUpdateManyWithoutOwnerInput\n}\n\ninput UserUpdateOneWithoutPostsInput {\n  create: UserCreateWithoutPostsInput\n  connect: UserWhereUniqueInput\n  delete: Boolean\n  update: UserUpdateWithoutPostsDataInput\n  upsert: UserUpsertWithoutPostsInput\n}\n\ninput UserUpdateWithoutPostsDataInput {\n  name: String\n  role: Role\n}\n\ninput UserUpsertWithoutPostsInput {\n  update: UserUpdateWithoutPostsDataInput!\n  create: UserCreateWithoutPostsInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  role: Role\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  role_not: Role\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  role_in: [Role!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  role_not_in: [Role!]\n  posts_every: PostWhereInput\n  posts_some: PostWhereInput\n  posts_none: PostWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  name: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 17,
      "containsCycle": true,
      "numDefinitions": 44
    },
    {
      "name": "prisma.graphql",
      "path": "examples/advanced/src/generated/prisma.graphql",
      "sha": "66b7a65f886628a67ff24a5f4b25c9c2b7b51977",
      "url": "https://api.github.com/repositories/121147554/contents/examples/advanced/src/generated/prisma.graphql?ref=07e554ce1bef5838682997676ea92726baffe8d6",
      "git_url": "https://api.github.com/repositories/121147554/git/blobs/66b7a65f886628a67ff24a5f4b25c9c2b7b51977",
      "html_url": "https://github.com/maticzav/graphql-shield/blob/07e554ce1bef5838682997676ea92726baffe8d6/examples/advanced/src/generated/prisma.graphql",
      "content": "# source: https://eu1.prisma.sh/public-bubblehyena-803/advanced/dev\n# timestamp: Wed May 30 2018 09:54:50 GMT+0200 (CEST)\n\ntype AggregateBasketItem {\n  count: Int!\n}\n\ntype AggregateCustomer {\n  count: Int!\n}\n\ntype AggregateGrocer {\n  count: Int!\n}\n\ntype AggregateProduct {\n  count: Int!\n}\n\ntype BasketItem implements Node {\n  id: ID!\n  customer(where: CustomerWhereInput): Customer!\n  product(where: ProductWhereInput): Product!\n  quantity: Int!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype BasketItemConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [BasketItemEdge]!\n  aggregate: AggregateBasketItem!\n}\n\ninput BasketItemCreateInput {\n  quantity: Int!\n  customer: CustomerCreateOneWithoutBasketInput!\n  product: ProductCreateOneInput!\n}\n\ninput BasketItemCreateManyWithoutCustomerInput {\n  create: [BasketItemCreateWithoutCustomerInput!]\n  connect: [BasketItemWhereUniqueInput!]\n}\n\ninput BasketItemCreateWithoutCustomerInput {\n  quantity: Int!\n  product: ProductCreateOneInput!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BasketItemEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: BasketItem!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum BasketItemOrderByInput {\n  id_ASC\n  id_DESC\n  quantity_ASC\n  quantity_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype BasketItemPreviousValues {\n  id: ID!\n  quantity: Int!\n}\n\ntype BasketItemSubscriptionPayload {\n  mutation: MutationType!\n  node: BasketItem\n  updatedFields: [String!]\n  previousValues: BasketItemPreviousValues\n}\n\ninput BasketItemSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [BasketItemSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [BasketItemSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [BasketItemSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: BasketItemWhereInput\n}\n\ninput BasketItemUpdateInput {\n  quantity: Int\n  customer: CustomerUpdateOneWithoutBasketInput\n  product: ProductUpdateOneInput\n}\n\ninput BasketItemUpdateManyWithoutCustomerInput {\n  create: [BasketItemCreateWithoutCustomerInput!]\n  connect: [BasketItemWhereUniqueInput!]\n  disconnect: [BasketItemWhereUniqueInput!]\n  delete: [BasketItemWhereUniqueInput!]\n  update: [BasketItemUpdateWithWhereUniqueWithoutCustomerInput!]\n  upsert: [BasketItemUpsertWithWhereUniqueWithoutCustomerInput!]\n}\n\ninput BasketItemUpdateWithoutCustomerDataInput {\n  quantity: Int\n  product: ProductUpdateOneInput\n}\n\ninput BasketItemUpdateWithWhereUniqueWithoutCustomerInput {\n  where: BasketItemWhereUniqueInput!\n  data: BasketItemUpdateWithoutCustomerDataInput!\n}\n\ninput BasketItemUpsertWithWhereUniqueWithoutCustomerInput {\n  where: BasketItemWhereUniqueInput!\n  update: BasketItemUpdateWithoutCustomerDataInput!\n  create: BasketItemCreateWithoutCustomerInput!\n}\n\ninput BasketItemWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [BasketItemWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [BasketItemWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [BasketItemWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  quantity: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  quantity_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  quantity_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  quantity_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  quantity_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  quantity_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  quantity_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  quantity_gte: Int\n  customer: CustomerWhereInput\n  product: ProductWhereInput\n}\n\ninput BasketItemWhereUniqueInput {\n  id: ID\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\ntype Customer implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  email: String!\n  basket(where: BasketItemWhereInput, orderBy: BasketItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BasketItem!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype CustomerConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [CustomerEdge]!\n  aggregate: AggregateCustomer!\n}\n\ninput CustomerCreateInput {\n  email: String!\n  basket: BasketItemCreateManyWithoutCustomerInput\n}\n\ninput CustomerCreateOneWithoutBasketInput {\n  create: CustomerCreateWithoutBasketInput\n  connect: CustomerWhereUniqueInput\n}\n\ninput CustomerCreateWithoutBasketInput {\n  email: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CustomerEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Customer!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum CustomerOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  email_ASC\n  email_DESC\n}\n\ntype CustomerPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  email: String!\n}\n\ntype CustomerSubscriptionPayload {\n  mutation: MutationType!\n  node: Customer\n  updatedFields: [String!]\n  previousValues: CustomerPreviousValues\n}\n\ninput CustomerSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CustomerSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CustomerSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CustomerSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: CustomerWhereInput\n}\n\ninput CustomerUpdateInput {\n  email: String\n  basket: BasketItemUpdateManyWithoutCustomerInput\n}\n\ninput CustomerUpdateOneWithoutBasketInput {\n  create: CustomerCreateWithoutBasketInput\n  connect: CustomerWhereUniqueInput\n  delete: Boolean\n  update: CustomerUpdateWithoutBasketDataInput\n  upsert: CustomerUpsertWithoutBasketInput\n}\n\ninput CustomerUpdateWithoutBasketDataInput {\n  email: String\n}\n\ninput CustomerUpsertWithoutBasketInput {\n  update: CustomerUpdateWithoutBasketDataInput!\n  create: CustomerCreateWithoutBasketInput!\n}\n\ninput CustomerWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [CustomerWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [CustomerWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [CustomerWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  email: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  email_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  email_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  email_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  email_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  email_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  email_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  email_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  email_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  email_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  email_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  email_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  email_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  email_not_ends_with: String\n  basket_every: BasketItemWhereInput\n  basket_some: BasketItemWhereInput\n  basket_none: BasketItemWhereInput\n}\n\ninput CustomerWhereUniqueInput {\n  id: ID\n  email: String\n}\n\nscalar DateTime\n\ntype Grocer implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  email: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype GrocerConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [GrocerEdge]!\n  aggregate: AggregateGrocer!\n}\n\ninput GrocerCreateInput {\n  email: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype GrocerEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Grocer!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum GrocerOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  email_ASC\n  email_DESC\n}\n\ntype GrocerPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  email: String!\n}\n\ntype GrocerSubscriptionPayload {\n  mutation: MutationType!\n  node: Grocer\n  updatedFields: [String!]\n  previousValues: GrocerPreviousValues\n}\n\ninput GrocerSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [GrocerSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [GrocerSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [GrocerSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: GrocerWhereInput\n}\n\ninput GrocerUpdateInput {\n  email: String\n}\n\ninput GrocerWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [GrocerWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [GrocerWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [GrocerWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  email: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  email_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  email_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  email_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  email_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  email_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  email_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  email_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  email_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  email_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  email_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  email_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  email_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  email_not_ends_with: String\n}\n\ninput GrocerWhereUniqueInput {\n  id: ID\n  email: String\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createGrocer(data: GrocerCreateInput!): Grocer!\n  createCustomer(data: CustomerCreateInput!): Customer!\n  createBasketItem(data: BasketItemCreateInput!): BasketItem!\n  createProduct(data: ProductCreateInput!): Product!\n  updateGrocer(data: GrocerUpdateInput!, where: GrocerWhereUniqueInput!): Grocer\n  updateCustomer(data: CustomerUpdateInput!, where: CustomerWhereUniqueInput!): Customer\n  updateBasketItem(data: BasketItemUpdateInput!, where: BasketItemWhereUniqueInput!): BasketItem\n  updateProduct(data: ProductUpdateInput!, where: ProductWhereUniqueInput!): Product\n  deleteGrocer(where: GrocerWhereUniqueInput!): Grocer\n  deleteCustomer(where: CustomerWhereUniqueInput!): Customer\n  deleteBasketItem(where: BasketItemWhereUniqueInput!): BasketItem\n  deleteProduct(where: ProductWhereUniqueInput!): Product\n  upsertGrocer(where: GrocerWhereUniqueInput!, create: GrocerCreateInput!, update: GrocerUpdateInput!): Grocer!\n  upsertCustomer(where: CustomerWhereUniqueInput!, create: CustomerCreateInput!, update: CustomerUpdateInput!): Customer!\n  upsertBasketItem(where: BasketItemWhereUniqueInput!, create: BasketItemCreateInput!, update: BasketItemUpdateInput!): BasketItem!\n  upsertProduct(where: ProductWhereUniqueInput!, create: ProductCreateInput!, update: ProductUpdateInput!): Product!\n  updateManyGrocers(data: GrocerUpdateInput!, where: GrocerWhereInput): BatchPayload!\n  updateManyCustomers(data: CustomerUpdateInput!, where: CustomerWhereInput): BatchPayload!\n  updateManyBasketItems(data: BasketItemUpdateInput!, where: BasketItemWhereInput): BatchPayload!\n  updateManyProducts(data: ProductUpdateInput!, where: ProductWhereInput): BatchPayload!\n  deleteManyGrocers(where: GrocerWhereInput): BatchPayload!\n  deleteManyCustomers(where: CustomerWhereInput): BatchPayload!\n  deleteManyBasketItems(where: BasketItemWhereInput): BatchPayload!\n  deleteManyProducts(where: ProductWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Product implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  description: String!\n  price: Int!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ProductConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ProductEdge]!\n  aggregate: AggregateProduct!\n}\n\ninput ProductCreateInput {\n  name: String!\n  description: String!\n  price: Int!\n}\n\ninput ProductCreateOneInput {\n  create: ProductCreateInput\n  connect: ProductWhereUniqueInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ProductEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Product!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum ProductOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  name_ASC\n  name_DESC\n  description_ASC\n  description_DESC\n  price_ASC\n  price_DESC\n}\n\ntype ProductPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  description: String!\n  price: Int!\n}\n\ntype ProductSubscriptionPayload {\n  mutation: MutationType!\n  node: Product\n  updatedFields: [String!]\n  previousValues: ProductPreviousValues\n}\n\ninput ProductSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ProductSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ProductSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ProductSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: ProductWhereInput\n}\n\ninput ProductUpdateDataInput {\n  name: String\n  description: String\n  price: Int\n}\n\ninput ProductUpdateInput {\n  name: String\n  description: String\n  price: Int\n}\n\ninput ProductUpdateOneInput {\n  create: ProductCreateInput\n  connect: ProductWhereUniqueInput\n  delete: Boolean\n  update: ProductUpdateDataInput\n  upsert: ProductUpsertNestedInput\n}\n\ninput ProductUpsertNestedInput {\n  update: ProductUpdateDataInput!\n  create: ProductCreateInput!\n}\n\ninput ProductWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [ProductWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [ProductWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [ProductWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  description: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  description_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  description_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  description_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  description_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  description_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  description_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  description_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  description_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  description_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  description_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  description_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  description_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  description_not_ends_with: String\n  price: Int\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  price_not: Int\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  price_in: [Int!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  price_not_in: [Int!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  price_lt: Int\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  price_lte: Int\n\n  \"\"\"All values greater than the given value.\"\"\"\n  price_gt: Int\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  price_gte: Int\n}\n\ninput ProductWhereUniqueInput {\n  id: ID\n}\n\ntype Query {\n  grocers(where: GrocerWhereInput, orderBy: GrocerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Grocer]!\n  customers(where: CustomerWhereInput, orderBy: CustomerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Customer]!\n  basketItems(where: BasketItemWhereInput, orderBy: BasketItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BasketItem]!\n  products(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Product]!\n  grocer(where: GrocerWhereUniqueInput!): Grocer\n  customer(where: CustomerWhereUniqueInput!): Customer\n  basketItem(where: BasketItemWhereUniqueInput!): BasketItem\n  product(where: ProductWhereUniqueInput!): Product\n  grocersConnection(where: GrocerWhereInput, orderBy: GrocerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GrocerConnection!\n  customersConnection(where: CustomerWhereInput, orderBy: CustomerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CustomerConnection!\n  basketItemsConnection(where: BasketItemWhereInput, orderBy: BasketItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BasketItemConnection!\n  productsConnection(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProductConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Subscription {\n  grocer(where: GrocerSubscriptionWhereInput): GrocerSubscriptionPayload\n  customer(where: CustomerSubscriptionWhereInput): CustomerSubscriptionPayload\n  basketItem(where: BasketItemSubscriptionWhereInput): BasketItemSubscriptionPayload\n  product(where: ProductSubscriptionWhereInput): ProductSubscriptionPayload\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 29,
      "containsCycle": true,
      "numDefinitions": 72
    }
  ],
  "metrics": {
    "created_at": "2018-02-11T17:22:18Z",
    "updated_at": "2019-07-19T04:02:32Z",
    "pushed_at": "2019-07-18T22:51:05Z",
    "issues": 120,
    "watchers": 27,
    "fork_count": 70,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 326,
    "pull_requests_open": 4,
    "pull_requests_closed": 28,
    "pull_requests_merged": 294,
    "releases": 76,
    "stargazers": 1646
  }
}