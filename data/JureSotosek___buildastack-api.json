{
  "repo_name": "buildastack-api",
  "repo_full_name": "juresotosek/buildastack-api",
  "repo_owner": "JureSotosek",
  "repo_description": "ðŸ¥žA GraphQL API that serves as a backend for Buildastack.",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "src/schema.graphql",
      "sha": "47a7766027925caf36d3c7586d55a56fa1309e2d",
      "url": "https://api.github.com/repositories/146177514/contents/src/schema.graphql?ref=802493360cdfc8ac81e9d548f19c125c08b66cb3",
      "git_url": "https://api.github.com/repositories/146177514/git/blobs/47a7766027925caf36d3c7586d55a56fa1309e2d",
      "html_url": "https://github.com/JureSotosek/buildastack-api/blob/802493360cdfc8ac81e9d548f19c125c08b66cb3/src/schema.graphql",
      "content": "type Query {\n  viewer: User!\n  templateStacks: [TemplateStack!]!\n  stack(id: ID!): StackPayload\n  search(query: String!): [Package!]!\n  suggestions(\n    dependencies: [String!]\n    devDependencies: [String!]\n    limit: Int\n  ): SuggestionsPayload!\n}\n\ntype Mutation {\n  authenticate(code: String!): AuthPayload!\n  createStack(dependencies: [InputDependency!]!): Stack!\n  saveStackNew(stack: InputStack!): Stack!\n  saveStackFromId(stackId: ID!, name: String!): Stack!\n  deleteStack(id: ID!): ID!\n}\n\ntype User {\n  id: ID!\n  name: String!\n  stacks: [Stack!]\n}\n\ntype AuthPayload {\n  token: String!\n  user: User!\n}\n\ntype StackPayload {\n  stack: Stack!\n  owner: Boolean!\n}\n\ntype Stack {\n  id: ID!\n  name: String\n  dependencies: [Dependency!]!\n  user: User\n}\n\ntype TemplateStack {\n  id: ID!\n  name: String!\n  color: String!\n  dependencies: [Dependency!]!\n}\n\ninput InputStack {\n  name: String!\n  dependencies: [InputDependency!]!\n}\n\ntype Dependency {\n  name: String!\n  version: String!\n  dev: Boolean!\n}\n\ninput InputDependency {\n  name: String!\n  version: String!\n  dev: Boolean!\n}\n\ntype SuggestionsPayload {\n  suggestions: [Package!]!\n  devSuggestions: [Package!]!\n  allSuggestions: [Package!]!\n}\n\ntype Package {\n  name: String!\n  version: String!\n  description: String\n  owner: Owner!\n  humanDownloadsLast30Days: String!\n  objectID: String!\n  popular: Boolean!\n}\n\ntype Owner {\n  name: String!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 11,
      "containsCycle": true,
      "numDefinitions": 13
    },
    {
      "name": "prisma.graphql",
      "path": "src/generated/prisma.graphql",
      "sha": "4baaef6d51ea770a618958da59849c51247b766b",
      "url": "https://api.github.com/repositories/146177514/contents/src/generated/prisma.graphql?ref=802493360cdfc8ac81e9d548f19c125c08b66cb3",
      "git_url": "https://api.github.com/repositories/146177514/git/blobs/4baaef6d51ea770a618958da59849c51247b766b",
      "html_url": "https://github.com/JureSotosek/buildastack-api/blob/802493360cdfc8ac81e9d548f19c125c08b66cb3/src/generated/prisma.graphql",
      "content": "# source: https://buildastack-prisma.herokuapp.com/buildastack/prod\n# timestamp: Wed Sep 05 2018 12:50:03 GMT+0200 (Central European Summer Time)\n\ntype AggregateDependency {\n  count: Int!\n}\n\ntype AggregateStack {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  \"\"\"The number of nodes that have been affected by the Batch operation.\"\"\"\n  count: Long!\n}\n\nscalar DateTime\n\ntype Dependency {\n  name: String!\n  version: String!\n  dev: Boolean!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype DependencyConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [DependencyEdge]!\n  aggregate: AggregateDependency!\n}\n\ninput DependencyCreateInput {\n  name: String!\n  version: String!\n  dev: Boolean!\n}\n\ninput DependencyCreateManyInput {\n  create: [DependencyCreateInput!]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DependencyEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Dependency!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum DependencyOrderByInput {\n  name_ASC\n  name_DESC\n  version_ASC\n  version_DESC\n  dev_ASC\n  dev_DESC\n  id_ASC\n  id_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ntype DependencyPreviousValues {\n  name: String!\n  version: String!\n  dev: Boolean!\n}\n\ntype DependencySubscriptionPayload {\n  mutation: MutationType!\n  node: Dependency\n  updatedFields: [String!]\n  previousValues: DependencyPreviousValues\n}\n\ninput DependencySubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DependencySubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DependencySubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [DependencySubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: DependencyWhereInput\n}\n\ninput DependencyUpdateInput {\n  name: String\n  version: String\n  dev: Boolean\n}\n\ninput DependencyUpdateManyInput {\n  create: [DependencyCreateInput!]\n}\n\ninput DependencyWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [DependencyWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [DependencyWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [DependencyWhereInput!]\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  version: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  version_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  version_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  version_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  version_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  version_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  version_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  version_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  version_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  version_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  version_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  version_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  version_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  version_not_ends_with: String\n  dev: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  dev_not: Boolean\n  _MagicalBackRelation_Dependencies_every: StackWhereInput\n  _MagicalBackRelation_Dependencies_some: StackWhereInput\n  _MagicalBackRelation_Dependencies_none: StackWhereInput\n}\n\n\"\"\"\nThe `Long` scalar type represents non-fractional signed whole numeric values.\nLong can represent values between -(2^63) and 2^63 - 1.\n\"\"\"\nscalar Long\n\ntype Mutation {\n  createUser(data: UserCreateInput!): User!\n  createStack(data: StackCreateInput!): Stack!\n  createDependency(data: DependencyCreateInput!): Dependency!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateStack(data: StackUpdateInput!, where: StackWhereUniqueInput!): Stack\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteStack(where: StackWhereUniqueInput!): Stack\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  upsertStack(where: StackWhereUniqueInput!, create: StackCreateInput!, update: StackUpdateInput!): Stack!\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  updateManyStacks(data: StackUpdateInput!, where: StackWhereInput): BatchPayload!\n  updateManyDependencies(data: DependencyUpdateInput!, where: DependencyWhereInput): BatchPayload!\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n  deleteManyStacks(where: StackWhereInput): BatchPayload!\n  deleteManyDependencies(where: DependencyWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype Query {\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  stacks(where: StackWhereInput, orderBy: StackOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Stack]!\n  dependencies(where: DependencyWhereInput, orderBy: DependencyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Dependency]!\n  user(where: UserWhereUniqueInput!): User\n  stack(where: StackWhereUniqueInput!): Stack\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  stacksConnection(where: StackWhereInput, orderBy: StackOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StackConnection!\n  dependenciesConnection(where: DependencyWhereInput, orderBy: DependencyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DependencyConnection!\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\ntype Stack implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String\n  dependencies(where: DependencyWhereInput, orderBy: DependencyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Dependency!]\n  user(where: UserWhereInput): User\n  template: Boolean\n  color: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype StackConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [StackEdge]!\n  aggregate: AggregateStack!\n}\n\ninput StackCreateInput {\n  name: String\n  template: Boolean\n  color: String\n  dependencies: DependencyCreateManyInput\n  user: UserCreateOneWithoutStacksInput\n}\n\ninput StackCreateManyWithoutUserInput {\n  create: [StackCreateWithoutUserInput!]\n  connect: [StackWhereUniqueInput!]\n}\n\ninput StackCreateWithoutUserInput {\n  name: String\n  template: Boolean\n  color: String\n  dependencies: DependencyCreateManyInput\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype StackEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Stack!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum StackOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  name_ASC\n  name_DESC\n  template_ASC\n  template_DESC\n  color_ASC\n  color_DESC\n}\n\ntype StackPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String\n  template: Boolean\n  color: String\n}\n\ntype StackSubscriptionPayload {\n  mutation: MutationType!\n  node: Stack\n  updatedFields: [String!]\n  previousValues: StackPreviousValues\n}\n\ninput StackSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [StackSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [StackSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [StackSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: StackWhereInput\n}\n\ninput StackUpdateInput {\n  name: String\n  template: Boolean\n  color: String\n  dependencies: DependencyUpdateManyInput\n  user: UserUpdateOneWithoutStacksInput\n}\n\ninput StackUpdateManyWithoutUserInput {\n  create: [StackCreateWithoutUserInput!]\n  connect: [StackWhereUniqueInput!]\n  disconnect: [StackWhereUniqueInput!]\n  delete: [StackWhereUniqueInput!]\n  update: [StackUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [StackUpsertWithWhereUniqueWithoutUserInput!]\n}\n\ninput StackUpdateWithoutUserDataInput {\n  name: String\n  template: Boolean\n  color: String\n  dependencies: DependencyUpdateManyInput\n}\n\ninput StackUpdateWithWhereUniqueWithoutUserInput {\n  where: StackWhereUniqueInput!\n  data: StackUpdateWithoutUserDataInput!\n}\n\ninput StackUpsertWithWhereUniqueWithoutUserInput {\n  where: StackWhereUniqueInput!\n  update: StackUpdateWithoutUserDataInput!\n  create: StackCreateWithoutUserInput!\n}\n\ninput StackWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [StackWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [StackWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [StackWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  template: Boolean\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  template_not: Boolean\n  color: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  color_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  color_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  color_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  color_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  color_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  color_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  color_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  color_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  color_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  color_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  color_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  color_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  color_not_ends_with: String\n  dependencies_every: DependencyWhereInput\n  dependencies_some: DependencyWhereInput\n  dependencies_none: DependencyWhereInput\n  user: UserWhereInput\n}\n\ninput StackWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n  stack(where: StackSubscriptionWhereInput): StackSubscriptionPayload\n  dependency(where: DependencySubscriptionWhereInput): DependencySubscriptionPayload\n}\n\ntype User implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  githubId: String!\n  name: String!\n  stacks(where: StackWhereInput, orderBy: StackOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Stack!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype UserConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  githubId: String!\n  name: String!\n  stacks: StackCreateManyWithoutUserInput\n}\n\ninput UserCreateOneWithoutStacksInput {\n  create: UserCreateWithoutStacksInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutStacksInput {\n  githubId: String!\n  name: String!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: User!\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  githubId_ASC\n  githubId_DESC\n  name_ASC\n  name_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  githubId: String!\n  name: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserSubscriptionWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserSubscriptionWhereInput!]\n\n  \"\"\"\n  The subscription event gets dispatched when it's listed in mutation_in\n  \"\"\"\n  mutation_in: [MutationType!]\n\n  \"\"\"\n  The subscription event gets only dispatched when one of the updated fields names is included in this list\n  \"\"\"\n  updatedFields_contains: String\n\n  \"\"\"\n  The subscription event gets only dispatched when all of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_every: [String!]\n\n  \"\"\"\n  The subscription event gets only dispatched when some of the field names included in this list have been updated\n  \"\"\"\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n}\n\ninput UserUpdateInput {\n  githubId: String\n  name: String\n  stacks: StackUpdateManyWithoutUserInput\n}\n\ninput UserUpdateOneWithoutStacksInput {\n  create: UserCreateWithoutStacksInput\n  connect: UserWhereUniqueInput\n  disconnect: Boolean\n  delete: Boolean\n  update: UserUpdateWithoutStacksDataInput\n  upsert: UserUpsertWithoutStacksInput\n}\n\ninput UserUpdateWithoutStacksDataInput {\n  githubId: String\n  name: String\n}\n\ninput UserUpsertWithoutStacksInput {\n  update: UserUpdateWithoutStacksDataInput!\n  create: UserCreateWithoutStacksInput!\n}\n\ninput UserWhereInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [UserWhereInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [UserWhereInput!]\n\n  \"\"\"Logical NOT on all given filters combined by AND.\"\"\"\n  NOT: [UserWhereInput!]\n  id: ID\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  id_not: ID\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  id_in: [ID!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  id_not_in: [ID!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  id_lt: ID\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  id_lte: ID\n\n  \"\"\"All values greater than the given value.\"\"\"\n  id_gt: ID\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  id_gte: ID\n\n  \"\"\"All values containing the given string.\"\"\"\n  id_contains: ID\n\n  \"\"\"All values not containing the given string.\"\"\"\n  id_not_contains: ID\n\n  \"\"\"All values starting with the given string.\"\"\"\n  id_starts_with: ID\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  id_not_starts_with: ID\n\n  \"\"\"All values ending with the given string.\"\"\"\n  id_ends_with: ID\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  id_not_ends_with: ID\n  createdAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  createdAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  updatedAt_not: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n  githubId: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  githubId_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  githubId_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  githubId_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  githubId_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  githubId_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  githubId_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  githubId_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  githubId_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  githubId_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  githubId_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  githubId_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  githubId_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  githubId_not_ends_with: String\n  name: String\n\n  \"\"\"All values that are not equal to given value.\"\"\"\n  name_not: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  name_in: [String!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  name_not_in: [String!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  name_lt: String\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  name_lte: String\n\n  \"\"\"All values greater than the given value.\"\"\"\n  name_gt: String\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  name_gte: String\n\n  \"\"\"All values containing the given string.\"\"\"\n  name_contains: String\n\n  \"\"\"All values not containing the given string.\"\"\"\n  name_not_contains: String\n\n  \"\"\"All values starting with the given string.\"\"\"\n  name_starts_with: String\n\n  \"\"\"All values not starting with the given string.\"\"\"\n  name_not_starts_with: String\n\n  \"\"\"All values ending with the given string.\"\"\"\n  name_ends_with: String\n\n  \"\"\"All values not ending with the given string.\"\"\"\n  name_not_ends_with: String\n  stacks_every: StackWhereInput\n  stacks_some: StackWhereInput\n  stacks_none: StackWhereInput\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  githubId: String\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 23,
      "containsCycle": true,
      "numDefinitions": 57
    }
  ],
  "metrics": {
    "created_at": "2018-08-26T12:10:50Z",
    "updated_at": "2018-09-13T15:29:20Z",
    "pushed_at": "2018-09-23T22:52:21Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 1,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 1,
    "releases": 0,
    "stargazers": 0
  }
}