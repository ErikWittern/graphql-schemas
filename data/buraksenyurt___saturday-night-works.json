{
  "repo_name": "saturday-night-works",
  "repo_full_name": "buraksenyurt/saturday-night-works",
  "repo_owner": "buraksenyurt",
  "repo_description": "Takip ettiğim kaynaklardaki örneklere ait çalışmalar yer alır.",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "No 15 - GraphQL with Graphpack/NobelAPI/src/schema.graphql",
      "sha": "409284c31da69c5cf11d14bbb24ae1ed705cca17",
      "url": "https://api.github.com/repositories/159293056/contents/No%2015%20-%20GraphQL%20with%20Graphpack/NobelAPI/src/schema.graphql?ref=304e8d6d8f7c9d4a15438e481f1e540d0568028b",
      "git_url": "https://api.github.com/repositories/159293056/git/blobs/409284c31da69c5cf11d14bbb24ae1ed705cca17",
      "html_url": "https://github.com/buraksenyurt/saturday-night-works/blob/304e8d6d8f7c9d4a15438e481f1e540d0568028b/No%2015%20-%20GraphQL%20with%20Graphpack/NobelAPI/src/schema.graphql",
      "content": "# sorgumuza ait şema tanımı\ntype Query{\n    allLaureates:[Laureate!]! # Laurate tipinden array döndüren tanımımız var. \n    oneLaureate(id:ID!):Laureate # ID'ye göre tek bir Nobel sahibinin bilgilerini alacağımız sorgu. Parametre olarak ID türünden değer alıyor\n    laureatesByYear(year:Int):[Laureate!]! # Yıla göre nobel ödüllülerin listeini döndürecek.\n}\n\n# Kullanıcı için bir tip sunuyoruz\ntype Laureate{\n    id: ID! # ünlem işareti id alanının null olamayacağını ifade etmekte\n    firstname: String\n    surname: String\n    born: String\n    died: String\n    bornCountry: String\n    bornCountryCode: String\n    bornCity: String\n    diedCountry: String\n    diedCountryCode: String\n    diedCity: String\n    #gender:String # Bu alan aslında Laureate.js veri dosyası içerisinde var. Ancak tip tanımına koymadığımız için kullanılabilir durumda olmayacak. Bunu deneyimlemek için yorum satırı haline getirdik.\n    prizes:[Prize] # Laureate tipi içinde yıllara göre ödül bilgisinin tutulduğu bir dizi söz konusu (Bir noble ödülü sahibi farklı yıllarda birden fazla ödül almış olabilir)\n}\n\n# Ödüllere ait yıl, kategori ve motivasyon bilgisinin tutulduğu tip\n# Laureate içindeki prizes dizisinin temel tipi aslında\ntype Prize{\n    year: Int\n    category: String\n    motivation: String\n}\n\n# Mutation'lar CUD(Create Update Delete) operasyonları için kullanılmaktalar\ntype Mutation{\n    #JSON desenini tanımladık\n    #TODO: Custom Type göndermenin bir yolunu bulmam lazım\n    createLaureate(id:ID!,firstname:String!,surname:String!,born:String!):Laureate! # Yeni bir Nobel ödülü sahibi eklemek için yaptığımız fonkisyon tanımı\n    \n    #Nobel sahibine ödülünü eklemek için kullanılacak şema tanımm\n    addPrize(id:ID!,year:Int,category:String,motivation:String):Laureate!\n\n    #Silme işlemi için şema tanımı\n    deleteLaureate(id:ID!):Laureate!\n\n    # UPDATE Fonksiyonu da yazılmalı! Deneyin ;)\n}",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 4,
      "containsCycle": false,
      "polynomialLevel": 2,
      "numDefinitions": 4
    }
  ],
  "metrics": {
    "created_at": "2018-11-27T07:22:33Z",
    "updated_at": "2019-07-13T21:59:02Z",
    "pushed_at": "2019-07-07T17:43:34Z",
    "issues": 0,
    "watchers": 48,
    "fork_count": 10,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 3,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 3,
    "releases": 0,
    "stargazers": 206
  }
}