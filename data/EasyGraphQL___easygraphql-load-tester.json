{
  "repo_name": "easygraphql-load-tester",
  "repo_full_name": "easygraphql/easygraphql-load-tester",
  "repo_owner": "EasyGraphQL",
  "repo_description": "This package will create queries from your schema to use with your favorite load testing package.",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "search.gql",
      "path": "test/schema/search.gql",
      "sha": "14c145e62f4d9d20c5cf19ac4f7c096cbe6c66c7",
      "url": "https://api.github.com/repositories/157990686/contents/test/schema/search.gql?ref=d4fad872e517d86f81db5aa92c410754961c5bc2",
      "git_url": "https://api.github.com/repositories/157990686/git/blobs/14c145e62f4d9d20c5cf19ac4f7c096cbe6c66c7",
      "html_url": "https://github.com/EasyGraphQL/easygraphql-load-tester/blob/d4fad872e517d86f81db5aa92c410754961c5bc2/test/schema/search.gql",
      "content": "union SearchResult = Family | User\n\ntype Family {\n  name: String!\n  ages: [Int]!\n  user: User!\n}\n\ntype User {\n  email: String!\n  username: String!\n  fullName: String!\n  phone: String!\n  family: Family!\n}\n\ntype Query {\n  search(name: String!): SearchResult!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 3,
      "containsCycle": false,
      "polynomialLevel": 0,
      "numDefinitions": 4
    },
    {
      "name": "schema.gql",
      "path": "examples/k6/schema.gql",
      "sha": "6a942cb3904152a8d8360e01ef2ad718c43bc615",
      "url": "https://api.github.com/repositories/157990686/contents/examples/k6/schema.gql?ref=f4745350ce3deec562e1da73a3332a3dbf347ada",
      "git_url": "https://api.github.com/repositories/157990686/git/blobs/6a942cb3904152a8d8360e01ef2ad718c43bc615",
      "html_url": "https://github.com/EasyGraphQL/easygraphql-load-tester/blob/f4745350ce3deec562e1da73a3332a3dbf347ada/examples/k6/schema.gql",
      "content": "type FamilyInfo {\n  father: User!\n  mother: String!\n  brothers: [String]!\n  isLocal: Boolean!\n}\n\ntype User {\n  name: String!\n  email: String!\n  test: Test!\n}\n\ntype Test {\n  name: String!\n  email: String!\n}\n\ntype Query {\n  getFamilyInfo: FamilyInfo!\n  searchUser(name: String!): User!\n  getFamilyInfoByIsLocal(isLocal: Boolean!, test: [String]!, age: Int!, name: String!): FamilyInfo!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 4,
      "containsCycle": false,
      "polynomialLevel": 0,
      "numDefinitions": 4
    },
    {
      "name": "schema.gql",
      "path": "examples/artillery/schema.gql",
      "sha": "7524011a69de8c2bd30b0979b9cba2967068864d",
      "url": "https://api.github.com/repositories/157990686/contents/examples/artillery/schema.gql?ref=a88336c01b271d3a9906210a15a888014fee6ff8",
      "git_url": "https://api.github.com/repositories/157990686/git/blobs/7524011a69de8c2bd30b0979b9cba2967068864d",
      "html_url": "https://github.com/EasyGraphQL/easygraphql-load-tester/blob/a88336c01b271d3a9906210a15a888014fee6ff8/examples/artillery/schema.gql",
      "content": "type FamilyInfo {\n  father: User!\n  mother: String!\n  brothers: [String]!\n  isLocal: Boolean!\n}\n\ntype User {\n  name: String!\n  email: String!\n  test: Test!\n}\n\ntype Test {\n  name: String!\n  email: String!\n}\n\ninput CityInput {\n  name: String!\n  country: String!\n}\n\ntype Query {\n  getFamilyInfo: FamilyInfo!\n  searchUser(name: String!): User!\n  getFamilyInfoByIsLocal(isLocal: Boolean!, test: [String]!, age: Int!, name: String!): FamilyInfo!\n  getMe: Boolean!\n}\n\ntype Mutation {\n  createUser(name: String!): User!\n  createCity(input: CityInput!): User!\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 5,
      "containsCycle": false,
      "polynomialLevel": 0,
      "numDefinitions": 6
    },
    {
      "name": "schema.gql",
      "path": "test/schema/schema.gql",
      "sha": "c973cec3b40599a0ab91a6643e1e889dc5ce427d",
      "url": "https://api.github.com/repositories/157990686/contents/test/schema/schema.gql?ref=a88336c01b271d3a9906210a15a888014fee6ff8",
      "git_url": "https://api.github.com/repositories/157990686/git/blobs/c973cec3b40599a0ab91a6643e1e889dc5ce427d",
      "html_url": "https://github.com/EasyGraphQL/easygraphql-load-tester/blob/a88336c01b271d3a9906210a15a888014fee6ff8/test/schema/schema.gql",
      "content": "enum Roles {\n  ADMIN\n  USER\n}\n\ntype Family {\n  name: String!\n  ages: [Int]!\n  user: User!\n}\n\ntype Me {\n  id: ID!\n  email: String\n  username: [String]!\n  fullName: String!\n  result: Float\n  phone: [Int]!\n  apiKey: String!\n  users: [User]!\n  verified: Boolean!\n  role: Roles!\n}\n\ntype User {\n  email: String!\n  username: String!\n  fullName: String!\n  phone: String!\n  family: Family!\n}\n\ninput UserInfoInput {\n  id: ID!\n  name: String!\n}\n\ntype UserInput {\n  name: String!\n  email: String!\n}\n\ntype Query {\n  getMe: Me\n  getUserByUsername(username: String!, id: Int!): User\n  isAdmin(username: String!): Boolean!\n  getUser(where: UserInfoInput!): User\n}\n\ntype Mutation {\n  createUser(input: UserInput!): User!\n}",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 6,
      "containsCycle": false,
      "polynomialLevel": 1,
      "numDefinitions": 8
    }
  ],
  "metrics": {
    "created_at": "2018-11-17T14:10:11Z",
    "updated_at": "2019-07-16T11:27:31Z",
    "pushed_at": "2019-07-18T22:24:21Z",
    "issues": 7,
    "watchers": 3,
    "fork_count": 4,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 31,
    "pull_requests_open": 6,
    "pull_requests_closed": 4,
    "pull_requests_merged": 21,
    "releases": 0,
    "stargazers": 61
  }
}