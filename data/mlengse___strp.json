{
  "repo_name": "strp",
  "repo_full_name": "mlengse/strp",
  "repo_owner": "mlengse",
  "repo_description": null,
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "schema.graphql",
      "path": "plugins/graphql/config/generated/schema.graphql",
      "sha": "e4ea059f5c12a662fe84df9d0446e38838f1d608",
      "url": "https://api.github.com/repositories/178521403/contents/plugins/graphql/config/generated/schema.graphql?ref=cda17a1f1cf1975aba6baad31258a39159469fa5",
      "git_url": "https://api.github.com/repositories/178521403/git/blobs/e4ea059f5c12a662fe84df9d0446e38838f1d608",
      "html_url": "https://github.com/mlengse/strp/blob/cda17a1f1cf1975aba6baad31258a39159469fa5/plugins/graphql/config/generated/schema.graphql",
      "content": "type Bagian {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  nama: String\n  indicators(sort: String, limit: Int, start: Int, where: JSON): [Indicator]\n  subordinat(sort: String, limit: Int, start: Int, where: JSON): [Bagian]\n  superordinat(sort: String, limit: Int, start: Int, where: JSON): [Bagian]\n}\n\ntype BagianAggregator {\n  count: Int\n}\n\ntype BagianConnection {\n  values: [Bagian]\n  groupBy: BagianGroupBy\n  aggregate: BagianAggregator\n}\n\ntype BagianConnection_id {\n  key: ID\n  connection: BagianConnection\n}\n\ntype BagianConnectionCreatedAt {\n  key: DateTime\n  connection: BagianConnection\n}\n\ntype BagianConnectionNama {\n  key: String\n  connection: BagianConnection\n}\n\ntype BagianConnectionUpdatedAt {\n  key: DateTime\n  connection: BagianConnection\n}\n\ntype BagianGroupBy {\n  _id: [BagianConnection_id]\n  createdAt: [BagianConnectionCreatedAt]\n  updatedAt: [BagianConnectionUpdatedAt]\n  nama: [BagianConnectionNama]\n}\n\ninput BagianInput {\n  nama: String\n  indicators: [ID]\n  subordinat: [ID]\n  superordinat: [ID]\n}\n\ntype Counter {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  jumlah: Float\n  waktu: DateTime\n  countername: Countername\n}\n\ntype CounterAggregator {\n  count: Int\n  sum: CounterAggregatorSum\n  avg: CounterAggregatorAvg\n  min: CounterAggregatorMin\n  max: CounterAggregatorMax\n}\n\ntype CounterAggregatorAvg {\n  jumlah: Float\n}\n\ntype CounterAggregatorMax {\n  jumlah: Float\n}\n\ntype CounterAggregatorMin {\n  jumlah: Float\n}\n\ntype CounterAggregatorSum {\n  jumlah: Float\n}\n\ntype CounterConnection {\n  values: [Counter]\n  groupBy: CounterGroupBy\n  aggregate: CounterAggregator\n}\n\ntype CounterConnection_id {\n  key: ID\n  connection: CounterConnection\n}\n\ntype CounterConnectionCountername {\n  key: ID\n  connection: CounterConnection\n}\n\ntype CounterConnectionCreatedAt {\n  key: DateTime\n  connection: CounterConnection\n}\n\ntype CounterConnectionJumlah {\n  key: Float\n  connection: CounterConnection\n}\n\ntype CounterConnectionUpdatedAt {\n  key: DateTime\n  connection: CounterConnection\n}\n\ntype CounterConnectionWaktu {\n  key: DateTime\n  connection: CounterConnection\n}\n\ntype CounterGroupBy {\n  _id: [CounterConnection_id]\n  createdAt: [CounterConnectionCreatedAt]\n  updatedAt: [CounterConnectionUpdatedAt]\n  jumlah: [CounterConnectionJumlah]\n  waktu: [CounterConnectionWaktu]\n  countername: [CounterConnectionCountername]\n}\n\ninput CounterInput {\n  jumlah: Float\n  waktu: DateTime\n  countername: ID\n}\n\ntype Countername {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String\n  countertype: Countertype\n  indicator: Indicator\n  satuan: Satuan\n  counters(sort: String, limit: Int, start: Int, where: JSON): [Counter]\n}\n\ntype CounternameAggregator {\n  count: Int\n}\n\ntype CounternameConnection {\n  values: [Countername]\n  groupBy: CounternameGroupBy\n  aggregate: CounternameAggregator\n}\n\ntype CounternameConnection_id {\n  key: ID\n  connection: CounternameConnection\n}\n\ntype CounternameConnectionCountertype {\n  key: ID\n  connection: CounternameConnection\n}\n\ntype CounternameConnectionCreatedAt {\n  key: DateTime\n  connection: CounternameConnection\n}\n\ntype CounternameConnectionIndicator {\n  key: ID\n  connection: CounternameConnection\n}\n\ntype CounternameConnectionName {\n  key: String\n  connection: CounternameConnection\n}\n\ntype CounternameConnectionSatuan {\n  key: ID\n  connection: CounternameConnection\n}\n\ntype CounternameConnectionUpdatedAt {\n  key: DateTime\n  connection: CounternameConnection\n}\n\ntype CounternameGroupBy {\n  _id: [CounternameConnection_id]\n  createdAt: [CounternameConnectionCreatedAt]\n  updatedAt: [CounternameConnectionUpdatedAt]\n  name: [CounternameConnectionName]\n  countertype: [CounternameConnectionCountertype]\n  indicator: [CounternameConnectionIndicator]\n  satuan: [CounternameConnectionSatuan]\n}\n\ninput CounternameInput {\n  name: String\n  countertype: ID\n  indicator: ID\n  counters: [ID]\n  satuan: ID\n}\n\ntype Countertype {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String\n  counternames(sort: String, limit: Int, start: Int, where: JSON): [Countername]\n}\n\ntype CountertypeAggregator {\n  count: Int\n}\n\ntype CountertypeConnection {\n  values: [Countertype]\n  groupBy: CountertypeGroupBy\n  aggregate: CountertypeAggregator\n}\n\ntype CountertypeConnection_id {\n  key: ID\n  connection: CountertypeConnection\n}\n\ntype CountertypeConnectionCreatedAt {\n  key: DateTime\n  connection: CountertypeConnection\n}\n\ntype CountertypeConnectionName {\n  key: String\n  connection: CountertypeConnection\n}\n\ntype CountertypeConnectionUpdatedAt {\n  key: DateTime\n  connection: CountertypeConnection\n}\n\ntype CountertypeGroupBy {\n  _id: [CountertypeConnection_id]\n  createdAt: [CountertypeConnectionCreatedAt]\n  updatedAt: [CountertypeConnectionUpdatedAt]\n  name: [CountertypeConnectionName]\n}\n\ninput CountertypeInput {\n  name: String\n  counternames: [ID]\n}\n\ninput createBagianInput {\n  data: BagianInput\n}\n\ntype createBagianPayload {\n  bagian: Bagian\n}\n\ninput createCounterInput {\n  data: CounterInput\n}\n\ninput createCounternameInput {\n  data: CounternameInput\n}\n\ntype createCounternamePayload {\n  countername: Countername\n}\n\ntype createCounterPayload {\n  counter: Counter\n}\n\ninput createCountertypeInput {\n  data: CountertypeInput\n}\n\ntype createCountertypePayload {\n  countertype: Countertype\n}\n\ninput createIndicatorInput {\n  data: IndicatorInput\n}\n\ntype createIndicatorPayload {\n  indicator: Indicator\n}\n\ninput createMenuInput {\n  data: MenuInput\n}\n\ntype createMenuPayload {\n  menu: Menu\n}\n\ninput createOperatorInput {\n  data: OperatorInput\n}\n\ntype createOperatorPayload {\n  operator: Operator\n}\n\ninput createRekapInput {\n  data: RekapInput\n}\n\ntype createRekapPayload {\n  rekap: Rekap\n}\n\ninput createRekaptypeInput {\n  data: RekaptypeInput\n}\n\ntype createRekaptypePayload {\n  rekaptype: Rekaptype\n}\n\ninput createRoleInput {\n  data: RoleInput\n}\n\ntype createRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput createSatuanInput {\n  data: SatuanInput\n}\n\ntype createSatuanPayload {\n  satuan: Satuan\n}\n\ninput createStateInput {\n  data: StateInput\n}\n\ntype createStatePayload {\n  state: State\n}\n\ninput createUserInput {\n  data: UserInput\n}\n\ntype createUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"\nThe `DateTime` scalar represents a date and time following the ISO 8601 standard\n\"\"\"\nscalar DateTime\n\ninput deleteBagianInput {\n  where: InputID\n}\n\ntype deleteBagianPayload {\n  bagian: Bagian\n}\n\ninput deleteCounterInput {\n  where: InputID\n}\n\ninput deleteCounternameInput {\n  where: InputID\n}\n\ntype deleteCounternamePayload {\n  countername: Countername\n}\n\ntype deleteCounterPayload {\n  counter: Counter\n}\n\ninput deleteCountertypeInput {\n  where: InputID\n}\n\ntype deleteCountertypePayload {\n  countertype: Countertype\n}\n\ninput deleteIndicatorInput {\n  where: InputID\n}\n\ntype deleteIndicatorPayload {\n  indicator: Indicator\n}\n\ninput deleteMenuInput {\n  where: InputID\n}\n\ntype deleteMenuPayload {\n  menu: Menu\n}\n\ninput deleteOperatorInput {\n  where: InputID\n}\n\ntype deleteOperatorPayload {\n  operator: Operator\n}\n\ninput deleteRekapInput {\n  where: InputID\n}\n\ntype deleteRekapPayload {\n  rekap: Rekap\n}\n\ninput deleteRekaptypeInput {\n  where: InputID\n}\n\ntype deleteRekaptypePayload {\n  rekaptype: Rekaptype\n}\n\ninput deleteRoleInput {\n  where: InputID\n}\n\ntype deleteRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput deleteSatuanInput {\n  where: InputID\n}\n\ntype deleteSatuanPayload {\n  satuan: Satuan\n}\n\ninput deleteStateInput {\n  where: InputID\n}\n\ntype deleteStatePayload {\n  state: State\n}\n\ninput deleteUserInput {\n  where: InputID\n}\n\ntype deleteUserPayload {\n  user: UsersPermissionsUser\n}\n\ninput FileInput {\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related: [ID]\n}\n\ntype Indicator {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String\n  description: String\n  active: Boolean\n  state: State\n  target: Float\n  bagian: Bagian\n  operator: Operator\n  satuan: Satuan\n  counternames(sort: String, limit: Int, start: Int, where: JSON): [Countername]\n  rekaps(sort: String, limit: Int, start: Int, where: JSON): [Rekap]\n}\n\ntype IndicatorAggregator {\n  count: Int\n  sum: IndicatorAggregatorSum\n  avg: IndicatorAggregatorAvg\n  min: IndicatorAggregatorMin\n  max: IndicatorAggregatorMax\n}\n\ntype IndicatorAggregatorAvg {\n  target: Float\n}\n\ntype IndicatorAggregatorMax {\n  target: Float\n}\n\ntype IndicatorAggregatorMin {\n  target: Float\n}\n\ntype IndicatorAggregatorSum {\n  target: Float\n}\n\ntype IndicatorConnection {\n  values: [Indicator]\n  groupBy: IndicatorGroupBy\n  aggregate: IndicatorAggregator\n}\n\ntype IndicatorConnection_id {\n  key: ID\n  connection: IndicatorConnection\n}\n\ntype IndicatorConnectionActive {\n  key: Boolean\n  connection: IndicatorConnection\n}\n\ntype IndicatorConnectionBagian {\n  key: ID\n  connection: IndicatorConnection\n}\n\ntype IndicatorConnectionCreatedAt {\n  key: DateTime\n  connection: IndicatorConnection\n}\n\ntype IndicatorConnectionDescription {\n  key: String\n  connection: IndicatorConnection\n}\n\ntype IndicatorConnectionName {\n  key: String\n  connection: IndicatorConnection\n}\n\ntype IndicatorConnectionOperator {\n  key: ID\n  connection: IndicatorConnection\n}\n\ntype IndicatorConnectionSatuan {\n  key: ID\n  connection: IndicatorConnection\n}\n\ntype IndicatorConnectionState {\n  key: ID\n  connection: IndicatorConnection\n}\n\ntype IndicatorConnectionTarget {\n  key: Float\n  connection: IndicatorConnection\n}\n\ntype IndicatorConnectionUpdatedAt {\n  key: DateTime\n  connection: IndicatorConnection\n}\n\ntype IndicatorGroupBy {\n  _id: [IndicatorConnection_id]\n  createdAt: [IndicatorConnectionCreatedAt]\n  updatedAt: [IndicatorConnectionUpdatedAt]\n  name: [IndicatorConnectionName]\n  description: [IndicatorConnectionDescription]\n  active: [IndicatorConnectionActive]\n  state: [IndicatorConnectionState]\n  target: [IndicatorConnectionTarget]\n  bagian: [IndicatorConnectionBagian]\n  operator: [IndicatorConnectionOperator]\n  satuan: [IndicatorConnectionSatuan]\n}\n\ninput IndicatorInput {\n  name: String\n  description: String\n  active: Boolean\n  state: ID\n  target: Float\n  bagian: ID\n  counternames: [ID]\n  operator: ID\n  satuan: ID\n  rekaps: [ID]\n}\n\ninput InputID {\n  id: ID!\n}\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\"\"\"\nscalar JSON\n\ntype Menu {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  nama: String\n  deskripsi: String\n  cover: UploadFile\n  url: String\n}\n\ntype MenuAggregator {\n  count: Int\n}\n\ntype MenuConnection {\n  values: [Menu]\n  groupBy: MenuGroupBy\n  aggregate: MenuAggregator\n}\n\ntype MenuConnection_id {\n  key: ID\n  connection: MenuConnection\n}\n\ntype MenuConnectionCover {\n  key: ID\n  connection: MenuConnection\n}\n\ntype MenuConnectionCreatedAt {\n  key: DateTime\n  connection: MenuConnection\n}\n\ntype MenuConnectionDeskripsi {\n  key: String\n  connection: MenuConnection\n}\n\ntype MenuConnectionNama {\n  key: String\n  connection: MenuConnection\n}\n\ntype MenuConnectionUpdatedAt {\n  key: DateTime\n  connection: MenuConnection\n}\n\ntype MenuConnectionUrl {\n  key: String\n  connection: MenuConnection\n}\n\ntype MenuGroupBy {\n  _id: [MenuConnection_id]\n  createdAt: [MenuConnectionCreatedAt]\n  updatedAt: [MenuConnectionUpdatedAt]\n  nama: [MenuConnectionNama]\n  deskripsi: [MenuConnectionDeskripsi]\n  cover: [MenuConnectionCover]\n  url: [MenuConnectionUrl]\n}\n\ninput MenuInput {\n  nama: String\n  deskripsi: String\n  cover: ID\n  url: String\n}\n\nunion Morph = UsersPermissionsMe | UsersPermissionsMeRole | Bagian | createBagianPayload | updateBagianPayload | deleteBagianPayload | BagianConnection | BagianAggregator | BagianGroupBy | BagianConnection_id | BagianConnectionCreatedAt | BagianConnectionUpdatedAt | BagianConnectionNama | Counter | createCounterPayload | updateCounterPayload | deleteCounterPayload | CounterConnection | CounterAggregator | CounterAggregatorSum | CounterAggregatorAvg | CounterAggregatorMin | CounterAggregatorMax | CounterGroupBy | CounterConnection_id | CounterConnectionCreatedAt | CounterConnectionUpdatedAt | CounterConnectionJumlah | CounterConnectionWaktu | CounterConnectionCountername | Countername | createCounternamePayload | updateCounternamePayload | deleteCounternamePayload | CounternameConnection | CounternameAggregator | CounternameGroupBy | CounternameConnection_id | CounternameConnectionCreatedAt | CounternameConnectionUpdatedAt | CounternameConnectionName | CounternameConnectionCountertype | CounternameConnectionIndicator | CounternameConnectionSatuan | Countertype | createCountertypePayload | updateCountertypePayload | deleteCountertypePayload | CountertypeConnection | CountertypeAggregator | CountertypeGroupBy | CountertypeConnection_id | CountertypeConnectionCreatedAt | CountertypeConnectionUpdatedAt | CountertypeConnectionName | Indicator | createIndicatorPayload | updateIndicatorPayload | deleteIndicatorPayload | IndicatorConnection | IndicatorAggregator | IndicatorAggregatorSum | IndicatorAggregatorAvg | IndicatorAggregatorMin | IndicatorAggregatorMax | IndicatorGroupBy | IndicatorConnection_id | IndicatorConnectionCreatedAt | IndicatorConnectionUpdatedAt | IndicatorConnectionName | IndicatorConnectionDescription | IndicatorConnectionActive | IndicatorConnectionState | IndicatorConnectionTarget | IndicatorConnectionBagian | IndicatorConnectionOperator | IndicatorConnectionSatuan | Menu | createMenuPayload | updateMenuPayload | deleteMenuPayload | MenuConnection | MenuAggregator | MenuGroupBy | MenuConnection_id | MenuConnectionCreatedAt | MenuConnectionUpdatedAt | MenuConnectionNama | MenuConnectionDeskripsi | MenuConnectionCover | MenuConnectionUrl | Operator | createOperatorPayload | updateOperatorPayload | deleteOperatorPayload | OperatorConnection | OperatorAggregator | OperatorGroupBy | OperatorConnection_id | OperatorConnectionCreatedAt | OperatorConnectionUpdatedAt | OperatorConnectionName | Rekap | createRekapPayload | updateRekapPayload | deleteRekapPayload | RekapConnection | RekapAggregator | RekapAggregatorSum | RekapAggregatorAvg | RekapAggregatorMin | RekapAggregatorMax | RekapGroupBy | RekapConnection_id | RekapConnectionCreatedAt | RekapConnectionUpdatedAt | RekapConnectionJumlah | RekapConnectionPeriode | RekapConnectionRekaptype | RekapConnectionIndicator | Satuan | createSatuanPayload | updateSatuanPayload | deleteSatuanPayload | SatuanConnection | SatuanAggregator | SatuanGroupBy | SatuanConnection_id | SatuanConnectionCreatedAt | SatuanConnectionUpdatedAt | SatuanConnectionName | State | createStatePayload | updateStatePayload | deleteStatePayload | StateConnection | StateAggregator | StateGroupBy | StateConnection_id | StateConnectionCreatedAt | StateConnectionUpdatedAt | StateConnectionName | Rekaptype | createRekaptypePayload | updateRekaptypePayload | deleteRekaptypePayload | RekaptypeConnection | RekaptypeAggregator | RekaptypeGroupBy | RekaptypeConnection_id | RekaptypeConnectionCreatedAt | RekaptypeConnectionUpdatedAt | RekaptypeConnectionPeriode | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileGroupBy | UploadFileConnection_id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionHash | UploadFileConnectionSha256 | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionProvider | UploadFileConnectionPublic_id | UsersPermissionsPermission | UsersPermissionsRole | createRolePayload | updateRolePayload | deleteRolePayload | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnection_id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | UsersPermissionsUser | createUserPayload | updateUserPayload | deleteUserPayload | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnection_id | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole\n\ntype Mutation {\n  createBagian(input: createBagianInput): createBagianPayload\n  updateBagian(input: updateBagianInput): updateBagianPayload\n  deleteBagian(input: deleteBagianInput): deleteBagianPayload\n  createCounter(input: createCounterInput): createCounterPayload\n  updateCounter(input: updateCounterInput): updateCounterPayload\n  deleteCounter(input: deleteCounterInput): deleteCounterPayload\n  createCountername(input: createCounternameInput): createCounternamePayload\n  updateCountername(input: updateCounternameInput): updateCounternamePayload\n  deleteCountername(input: deleteCounternameInput): deleteCounternamePayload\n  createCountertype(input: createCountertypeInput): createCountertypePayload\n  updateCountertype(input: updateCountertypeInput): updateCountertypePayload\n  deleteCountertype(input: deleteCountertypeInput): deleteCountertypePayload\n  createIndicator(input: createIndicatorInput): createIndicatorPayload\n  updateIndicator(input: updateIndicatorInput): updateIndicatorPayload\n  deleteIndicator(input: deleteIndicatorInput): deleteIndicatorPayload\n  createMenu(input: createMenuInput): createMenuPayload\n  updateMenu(input: updateMenuInput): updateMenuPayload\n  deleteMenu(input: deleteMenuInput): deleteMenuPayload\n  createOperator(input: createOperatorInput): createOperatorPayload\n  updateOperator(input: updateOperatorInput): updateOperatorPayload\n  deleteOperator(input: deleteOperatorInput): deleteOperatorPayload\n  createRekap(input: createRekapInput): createRekapPayload\n  updateRekap(input: updateRekapInput): updateRekapPayload\n  deleteRekap(input: deleteRekapInput): deleteRekapPayload\n  createSatuan(input: createSatuanInput): createSatuanPayload\n  updateSatuan(input: updateSatuanInput): updateSatuanPayload\n  deleteSatuan(input: deleteSatuanInput): deleteSatuanPayload\n  createState(input: createStateInput): createStatePayload\n  updateState(input: updateStateInput): updateStatePayload\n  deleteState(input: deleteStateInput): deleteStatePayload\n  createRekaptype(input: createRekaptypeInput): createRekaptypePayload\n  updateRekaptype(input: updateRekaptypeInput): updateRekaptypePayload\n  deleteRekaptype(input: deleteRekaptypeInput): deleteRekaptypePayload\n\n  \"\"\"Create a new role\"\"\"\n  createRole(input: createRoleInput): createRolePayload\n\n  \"\"\"Update an existing role\"\"\"\n  updateRole(input: updateRoleInput): updateRolePayload\n\n  \"\"\"Delete an existing role\"\"\"\n  deleteRole(input: deleteRoleInput): deleteRolePayload\n  createUser(input: createUserInput): createUserPayload\n  updateUser(input: updateUserInput): updateUserPayload\n  deleteUser(input: deleteUserInput): deleteUserPayload\n  upload(refId: ID, ref: String, source: String, file: Upload!): UploadFile!\n}\n\ntype Operator {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String\n  indicators(sort: String, limit: Int, start: Int, where: JSON): [Indicator]\n}\n\ntype OperatorAggregator {\n  count: Int\n}\n\ntype OperatorConnection {\n  values: [Operator]\n  groupBy: OperatorGroupBy\n  aggregate: OperatorAggregator\n}\n\ntype OperatorConnection_id {\n  key: ID\n  connection: OperatorConnection\n}\n\ntype OperatorConnectionCreatedAt {\n  key: DateTime\n  connection: OperatorConnection\n}\n\ntype OperatorConnectionName {\n  key: String\n  connection: OperatorConnection\n}\n\ntype OperatorConnectionUpdatedAt {\n  key: DateTime\n  connection: OperatorConnection\n}\n\ntype OperatorGroupBy {\n  _id: [OperatorConnection_id]\n  createdAt: [OperatorConnectionCreatedAt]\n  updatedAt: [OperatorConnectionUpdatedAt]\n  name: [OperatorConnectionName]\n}\n\ninput OperatorInput {\n  name: String\n  indicators: [ID]\n}\n\ntype Query {\n  bagian(id: ID!): Bagian\n  bagians(sort: String, limit: Int, start: Int, where: JSON): [Bagian]\n  bagiansConnection(sort: String, limit: Int, start: Int, where: JSON): BagianConnection\n  counter(id: ID!): Counter\n  counters(sort: String, limit: Int, start: Int, where: JSON): [Counter]\n  countersConnection(sort: String, limit: Int, start: Int, where: JSON): CounterConnection\n  countername(id: ID!): Countername\n  counternames(sort: String, limit: Int, start: Int, where: JSON): [Countername]\n  counternamesConnection(sort: String, limit: Int, start: Int, where: JSON): CounternameConnection\n  countertype(id: ID!): Countertype\n  countertypes(sort: String, limit: Int, start: Int, where: JSON): [Countertype]\n  countertypesConnection(sort: String, limit: Int, start: Int, where: JSON): CountertypeConnection\n  indicator(id: ID!): Indicator\n  indicators(sort: String, limit: Int, start: Int, where: JSON): [Indicator]\n  indicatorsConnection(sort: String, limit: Int, start: Int, where: JSON): IndicatorConnection\n  menu(id: ID!): Menu\n  menus(sort: String, limit: Int, start: Int, where: JSON): [Menu]\n  menusConnection(sort: String, limit: Int, start: Int, where: JSON): MenuConnection\n  operator(id: ID!): Operator\n  operators(sort: String, limit: Int, start: Int, where: JSON): [Operator]\n  operatorsConnection(sort: String, limit: Int, start: Int, where: JSON): OperatorConnection\n  rekap(id: ID!): Rekap\n  rekaps(sort: String, limit: Int, start: Int, where: JSON): [Rekap]\n  rekapsConnection(sort: String, limit: Int, start: Int, where: JSON): RekapConnection\n  satuan(id: ID!): Satuan\n  satuans(sort: String, limit: Int, start: Int, where: JSON): [Satuan]\n  satuansConnection(sort: String, limit: Int, start: Int, where: JSON): SatuanConnection\n  state(id: ID!): State\n  states(sort: String, limit: Int, start: Int, where: JSON): [State]\n  statesConnection(sort: String, limit: Int, start: Int, where: JSON): StateConnection\n  rekaptype(id: ID!): Rekaptype\n  rekaptypes(sort: String, limit: Int, start: Int, where: JSON): [Rekaptype]\n  rekaptypesConnection(sort: String, limit: Int, start: Int, where: JSON): RekaptypeConnection\n  files(sort: String, limit: Int, start: Int, where: JSON): [UploadFile]\n  filesConnection(sort: String, limit: Int, start: Int, where: JSON): UploadFileConnection\n  role(id: ID!): UsersPermissionsRole\n\n  \"\"\"\n  Retrieve all the existing roles. You can't apply filters on this query.\n  \"\"\"\n  roles(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsRole]\n  rolesConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsRoleConnection\n  user(id: ID!): UsersPermissionsUser\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n  usersConnection(sort: String, limit: Int, start: Int, where: JSON): UsersPermissionsUserConnection\n  me: UsersPermissionsMe\n}\n\ntype Rekap {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  jumlah: Float\n  periode: String\n  rekaptype: Rekaptype\n  indicator: Indicator\n}\n\ntype RekapAggregator {\n  count: Int\n  sum: RekapAggregatorSum\n  avg: RekapAggregatorAvg\n  min: RekapAggregatorMin\n  max: RekapAggregatorMax\n}\n\ntype RekapAggregatorAvg {\n  jumlah: Float\n}\n\ntype RekapAggregatorMax {\n  jumlah: Float\n}\n\ntype RekapAggregatorMin {\n  jumlah: Float\n}\n\ntype RekapAggregatorSum {\n  jumlah: Float\n}\n\ntype RekapConnection {\n  values: [Rekap]\n  groupBy: RekapGroupBy\n  aggregate: RekapAggregator\n}\n\ntype RekapConnection_id {\n  key: ID\n  connection: RekapConnection\n}\n\ntype RekapConnectionCreatedAt {\n  key: DateTime\n  connection: RekapConnection\n}\n\ntype RekapConnectionIndicator {\n  key: ID\n  connection: RekapConnection\n}\n\ntype RekapConnectionJumlah {\n  key: Float\n  connection: RekapConnection\n}\n\ntype RekapConnectionPeriode {\n  key: String\n  connection: RekapConnection\n}\n\ntype RekapConnectionRekaptype {\n  key: ID\n  connection: RekapConnection\n}\n\ntype RekapConnectionUpdatedAt {\n  key: DateTime\n  connection: RekapConnection\n}\n\ntype RekapGroupBy {\n  _id: [RekapConnection_id]\n  createdAt: [RekapConnectionCreatedAt]\n  updatedAt: [RekapConnectionUpdatedAt]\n  jumlah: [RekapConnectionJumlah]\n  periode: [RekapConnectionPeriode]\n  rekaptype: [RekapConnectionRekaptype]\n  indicator: [RekapConnectionIndicator]\n}\n\ninput RekapInput {\n  jumlah: Float\n  periode: String\n  rekaptype: ID\n  indicator: ID\n}\n\ntype Rekaptype {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  periode: String\n  rekaps(sort: String, limit: Int, start: Int, where: JSON): [Rekap]\n}\n\ntype RekaptypeAggregator {\n  count: Int\n}\n\ntype RekaptypeConnection {\n  values: [Rekaptype]\n  groupBy: RekaptypeGroupBy\n  aggregate: RekaptypeAggregator\n}\n\ntype RekaptypeConnection_id {\n  key: ID\n  connection: RekaptypeConnection\n}\n\ntype RekaptypeConnectionCreatedAt {\n  key: DateTime\n  connection: RekaptypeConnection\n}\n\ntype RekaptypeConnectionPeriode {\n  key: String\n  connection: RekaptypeConnection\n}\n\ntype RekaptypeConnectionUpdatedAt {\n  key: DateTime\n  connection: RekaptypeConnection\n}\n\ntype RekaptypeGroupBy {\n  _id: [RekaptypeConnection_id]\n  createdAt: [RekaptypeConnectionCreatedAt]\n  updatedAt: [RekaptypeConnectionUpdatedAt]\n  periode: [RekaptypeConnectionPeriode]\n}\n\ninput RekaptypeInput {\n  periode: String\n  rekaps: [ID]\n}\n\ninput RoleInput {\n  name: String!\n  description: String\n  type: String\n  permissions: [ID]\n  users: [ID]\n}\n\ntype Satuan {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String\n  indicators(sort: String, limit: Int, start: Int, where: JSON): [Indicator]\n  counternames(sort: String, limit: Int, start: Int, where: JSON): [Countername]\n}\n\ntype SatuanAggregator {\n  count: Int\n}\n\ntype SatuanConnection {\n  values: [Satuan]\n  groupBy: SatuanGroupBy\n  aggregate: SatuanAggregator\n}\n\ntype SatuanConnection_id {\n  key: ID\n  connection: SatuanConnection\n}\n\ntype SatuanConnectionCreatedAt {\n  key: DateTime\n  connection: SatuanConnection\n}\n\ntype SatuanConnectionName {\n  key: String\n  connection: SatuanConnection\n}\n\ntype SatuanConnectionUpdatedAt {\n  key: DateTime\n  connection: SatuanConnection\n}\n\ntype SatuanGroupBy {\n  _id: [SatuanConnection_id]\n  createdAt: [SatuanConnectionCreatedAt]\n  updatedAt: [SatuanConnectionUpdatedAt]\n  name: [SatuanConnectionName]\n}\n\ninput SatuanInput {\n  name: String\n  indicators: [ID]\n  counternames: [ID]\n}\n\ntype State {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String\n  indicators(sort: String, limit: Int, start: Int, where: JSON): [Indicator]\n}\n\ntype StateAggregator {\n  count: Int\n}\n\ntype StateConnection {\n  values: [State]\n  groupBy: StateGroupBy\n  aggregate: StateAggregator\n}\n\ntype StateConnection_id {\n  key: ID\n  connection: StateConnection\n}\n\ntype StateConnectionCreatedAt {\n  key: DateTime\n  connection: StateConnection\n}\n\ntype StateConnectionName {\n  key: String\n  connection: StateConnection\n}\n\ntype StateConnectionUpdatedAt {\n  key: DateTime\n  connection: StateConnection\n}\n\ntype StateGroupBy {\n  _id: [StateConnection_id]\n  createdAt: [StateConnectionCreatedAt]\n  updatedAt: [StateConnectionUpdatedAt]\n  name: [StateConnectionName]\n}\n\ninput StateInput {\n  name: String\n  indicators: [ID]\n}\n\ninput updateBagianInput {\n  where: InputID\n  data: BagianInput\n}\n\ntype updateBagianPayload {\n  bagian: Bagian\n}\n\ninput updateCounterInput {\n  where: InputID\n  data: CounterInput\n}\n\ninput updateCounternameInput {\n  where: InputID\n  data: CounternameInput\n}\n\ntype updateCounternamePayload {\n  countername: Countername\n}\n\ntype updateCounterPayload {\n  counter: Counter\n}\n\ninput updateCountertypeInput {\n  where: InputID\n  data: CountertypeInput\n}\n\ntype updateCountertypePayload {\n  countertype: Countertype\n}\n\ninput updateIndicatorInput {\n  where: InputID\n  data: IndicatorInput\n}\n\ntype updateIndicatorPayload {\n  indicator: Indicator\n}\n\ninput updateMenuInput {\n  where: InputID\n  data: MenuInput\n}\n\ntype updateMenuPayload {\n  menu: Menu\n}\n\ninput updateOperatorInput {\n  where: InputID\n  data: OperatorInput\n}\n\ntype updateOperatorPayload {\n  operator: Operator\n}\n\ninput updateRekapInput {\n  where: InputID\n  data: RekapInput\n}\n\ntype updateRekapPayload {\n  rekap: Rekap\n}\n\ninput updateRekaptypeInput {\n  where: InputID\n  data: RekaptypeInput\n}\n\ntype updateRekaptypePayload {\n  rekaptype: Rekaptype\n}\n\ninput updateRoleInput {\n  where: InputID\n  data: RoleInput\n}\n\ntype updateRolePayload {\n  role: UsersPermissionsRole\n}\n\ninput updateSatuanInput {\n  where: InputID\n  data: SatuanInput\n}\n\ntype updateSatuanPayload {\n  satuan: Satuan\n}\n\ninput updateStateInput {\n  where: InputID\n  data: StateInput\n}\n\ntype updateStatePayload {\n  state: State\n}\n\ninput updateUserInput {\n  where: InputID\n  data: UserInput\n}\n\ntype updateUserPayload {\n  user: UsersPermissionsUser\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload\n\ntype UploadFile {\n  _id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  hash: String!\n  sha256: String\n  ext: String\n  mime: String!\n  size: String!\n  url: String!\n  provider: String!\n  public_id: String\n  related(sort: String, limit: Int, start: Int, where: JSON): [Morph]\n}\n\ntype UploadFileAggregator {\n  count: Int\n}\n\ntype UploadFileConnection {\n  values: [UploadFile]\n  groupBy: UploadFileGroupBy\n  aggregate: UploadFileAggregator\n}\n\ntype UploadFileConnection_id {\n  key: ID\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionCreatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionExt {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionHash {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionMime {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionName {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionProvider {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionPublic_id {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSha256 {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionSize {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUpdatedAt {\n  key: DateTime\n  connection: UploadFileConnection\n}\n\ntype UploadFileConnectionUrl {\n  key: String\n  connection: UploadFileConnection\n}\n\ntype UploadFileGroupBy {\n  _id: [UploadFileConnection_id]\n  createdAt: [UploadFileConnectionCreatedAt]\n  updatedAt: [UploadFileConnectionUpdatedAt]\n  name: [UploadFileConnectionName]\n  hash: [UploadFileConnectionHash]\n  sha256: [UploadFileConnectionSha256]\n  ext: [UploadFileConnectionExt]\n  mime: [UploadFileConnectionMime]\n  size: [UploadFileConnectionSize]\n  url: [UploadFileConnectionUrl]\n  provider: [UploadFileConnectionProvider]\n  public_id: [UploadFileConnectionPublic_id]\n}\n\ninput UserInput {\n  username: String!\n  email: String!\n  provider: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: ID\n}\n\ntype UsersPermissionsMe {\n  _id: ID!\n  username: String!\n  email: String!\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsMeRole\n}\n\ntype UsersPermissionsMeRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n}\n\ntype UsersPermissionsPermission {\n  _id: ID!\n  type: String!\n  controller: String!\n  action: String!\n  enabled: Boolean!\n  policy: String\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsRole {\n  _id: ID!\n  name: String!\n  description: String\n  type: String\n  permissions(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsPermission]\n  users(sort: String, limit: Int, start: Int, where: JSON): [UsersPermissionsUser]\n}\n\ntype UsersPermissionsRoleAggregator {\n  count: Int\n}\n\ntype UsersPermissionsRoleConnection {\n  values: [UsersPermissionsRole]\n  groupBy: UsersPermissionsRoleGroupBy\n  aggregate: UsersPermissionsRoleAggregator\n}\n\ntype UsersPermissionsRoleConnection_id {\n  key: ID\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionDescription {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionName {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleConnectionType {\n  key: String\n  connection: UsersPermissionsRoleConnection\n}\n\ntype UsersPermissionsRoleGroupBy {\n  _id: [UsersPermissionsRoleConnection_id]\n  name: [UsersPermissionsRoleConnectionName]\n  description: [UsersPermissionsRoleConnectionDescription]\n  type: [UsersPermissionsRoleConnectionType]\n}\n\ntype UsersPermissionsUser {\n  _id: ID!\n  username: String!\n  email: String!\n  provider: String\n  confirmed: Boolean\n  blocked: Boolean\n  role: UsersPermissionsRole\n}\n\ntype UsersPermissionsUserAggregator {\n  count: Int\n}\n\ntype UsersPermissionsUserConnection {\n  values: [UsersPermissionsUser]\n  groupBy: UsersPermissionsUserGroupBy\n  aggregate: UsersPermissionsUserAggregator\n}\n\ntype UsersPermissionsUserConnection_id {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionBlocked {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionConfirmed {\n  key: Boolean\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionEmail {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionProvider {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionRole {\n  key: ID\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserConnectionUsername {\n  key: String\n  connection: UsersPermissionsUserConnection\n}\n\ntype UsersPermissionsUserGroupBy {\n  _id: [UsersPermissionsUserConnection_id]\n  username: [UsersPermissionsUserConnectionUsername]\n  email: [UsersPermissionsUserConnectionEmail]\n  provider: [UsersPermissionsUserConnectionProvider]\n  confirmed: [UsersPermissionsUserConnectionConfirmed]\n  blocked: [UsersPermissionsUserConnectionBlocked]\n  role: [UsersPermissionsUserConnectionRole]\n}\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 197,
      "containsCycle": true,
      "numDefinitions": 255
    }
  ],
  "metrics": {
    "created_at": "2019-03-30T06:33:53Z",
    "updated_at": "2019-03-30T06:43:22Z",
    "pushed_at": "2019-03-30T06:43:16Z",
    "issues": 0,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 0
  }
}