{
  "repo_name": "morphlog",
  "repo_full_name": "kriswep/morphlog",
  "repo_owner": "kriswep",
  "repo_description": "Log your products' changes",
  "repo_private": false,
  "repo_fork": false,
  "schemas": [
    {
      "name": "appSchema.graphql",
      "path": "schema/appSchema.graphql",
      "sha": "18804218f2aa2988e02fd22a54a29caba34264a4",
      "url": "https://api.github.com/repositories/117595591/contents/schema/appSchema.graphql?ref=2cc2c8e28487a6eafef954825f989c9f5561deb2",
      "git_url": "https://api.github.com/repositories/117595591/git/blobs/18804218f2aa2988e02fd22a54a29caba34264a4",
      "html_url": "https://github.com/kriswep/morphlog/blob/2cc2c8e28487a6eafef954825f989c9f5561deb2/schema/appSchema.graphql",
      "content": "type AuthPayload {\n  token: String!\n  user: User!\n}\n\ntype Change implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  text: String!\n  author(where: UserWhereInput): User!\n  project(where: ProjectWhereInput): Project!\n}\n\nenum ChangeOrderByInput {\n  id_ASC\n  id_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  text_ASC\n  text_DESC\n}\n\ninput ChangeWhereInput {\n  AND: [ChangeWhereInput!]\n  OR: [ChangeWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  text: String\n  text_not: String\n  text_in: [String!]\n  text_not_in: [String!]\n  text_lt: String\n  text_lte: String\n  text_gt: String\n  text_gte: String\n  text_contains: String\n  text_not_contains: String\n  text_starts_with: String\n  text_not_starts_with: String\n  text_ends_with: String\n  text_not_ends_with: String\n  author: UserWhereInput\n  project: ProjectWhereInput\n}\n\nscalar DateTime\n\ntype Mutation {\n  signup(email: String!, password: String!, name: String!): AuthPayload!\n  login(email: String!, password: String!): AuthPayload!\n  createProject(name: String!): Project!\n  addProjectMember(user: ID!, project: ID!): Project!\n  addChange(projectId: ID!, text: String!): Change!\n  updateChange(changeId: ID!, projectId: ID!, text: String!): Change!\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype Project implements Node {\n  id: ID!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  name: String!\n  member(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n  admin(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]\n  change(where: ChangeWhereInput, orderBy: ChangeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Change!]\n}\n\ninput ProjectWhereInput {\n  AND: [ProjectWhereInput!]\n  OR: [ProjectWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  member_every: UserWhereInput\n  member_some: UserWhereInput\n  member_none: UserWhereInput\n  admin_every: UserWhereInput\n  admin_some: UserWhereInput\n  admin_none: UserWhereInput\n  change_every: ChangeWhereInput\n  change_some: ChangeWhereInput\n  change_none: ChangeWhereInput\n}\n\ntype Query {\n  projects(skip: Int, after: String, before: String, first: Int, last: Int): [Project!]!\n  project(id: ID!): Project!\n  change(id: ID!): Change!\n  changes(projectId: ID!, skip: Int, after: String, before: String, first: Int, last: Int): [Change!]!\n  me: User\n}\n\ntype User {\n  id: ID!\n  email: String!\n  name: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  name_ASC\n  name_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n  createdAt_ASC\n  createdAt_DESC\n}\n\ninput UserWhereInput {\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  projectMember_every: ProjectWhereInput\n  projectMember_some: ProjectWhereInput\n  projectMember_none: ProjectWhereInput\n  projectAdmin_every: ProjectWhereInput\n  projectAdmin_some: ProjectWhereInput\n  projectAdmin_none: ProjectWhereInput\n}\n\n",
      "containsQueryType": true,
      "validSchema": true,
      "contentDuplicate": false,
      "numObjectTypes": 6,
      "containsCycle": true,
      "numDefinitions": 13
    }
  ],
  "metrics": {
    "created_at": "2018-01-15T21:08:23Z",
    "updated_at": "2019-02-08T19:49:21Z",
    "pushed_at": "2019-02-08T19:49:20Z",
    "issues": 1,
    "watchers": 1,
    "fork_count": 0,
    "has_wiki_enabled": true,
    "license": "mit",
    "pull_requests": 0,
    "pull_requests_open": 0,
    "pull_requests_closed": 0,
    "pull_requests_merged": 0,
    "releases": 0,
    "stargazers": 4
  }
}